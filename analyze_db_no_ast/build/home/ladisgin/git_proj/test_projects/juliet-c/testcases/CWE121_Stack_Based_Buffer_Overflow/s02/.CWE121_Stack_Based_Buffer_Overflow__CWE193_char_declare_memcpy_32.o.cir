!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc103)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc104)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc108)
    %3 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc109)
    %4 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc110)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc108)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc22)
      cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc24)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc24)
      %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc26)
      %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc27)
      cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc114)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    } loc(#loc111)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc34)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
      cir.scope {
        %8 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc119)
        %9 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc119)
        cir.store %9, %8 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc119)
        %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
        %12 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc41)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
        %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc42)
        %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc43)
        %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc42)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc44)
        %19 = cir.binop(add, %16, %18) : !u64i loc(#loc120)
        %20 = cir.const #cir.int<1> : !u64i loc(#loc121)
        %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc122)
        cir.libc.memcpy %21 bytes from %13 to %11 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc123)
        %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } loc(#loc118)
    } loc(#loc116)
    cir.return loc(#loc6)
  } loc(#loc105)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc53)
  } loc(#loc124)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc129)
    %3 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc130)
    %4 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc131)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc128)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc129)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc133)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc73)
      cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc75)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc75)
      %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc77)
      %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc78)
      cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc135)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    } loc(#loc132)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
      cir.scope {
        %8 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc140)
        %9 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc140)
        cir.store %9, %8 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc140)
        %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
        %12 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc92)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
        %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc93)
        %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc94)
        %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc93)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc95)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc95)
        %19 = cir.binop(add, %16, %18) : !u64i loc(#loc141)
        %20 = cir.const #cir.int<1> : !u64i loc(#loc142)
        %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc143)
        cir.libc.memcpy %21 bytes from %13 to %11 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc144)
        %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
        cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } loc(#loc139)
    } loc(#loc137)
    cir.return loc(#loc57)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":28:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":53:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":30:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":30:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":31:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":31:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":32:25)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":33:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":33:26)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":34:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":34:29)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":35:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":42:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":36:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":36:24)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":36:23)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":39:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":39:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":40:19)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":40:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":40:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":40:15)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":41:21)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":41:10)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":41:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":43:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":52:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":44:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":44:24)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":44:23)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":45:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":51:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":46:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":46:33)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":49:20)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":49:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":49:35)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":49:42)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":49:52)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":49:57)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":49:68)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":49:34)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":49:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":49:69)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":50:23)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":50:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":87:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":90:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":89:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":89:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":60:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":85:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":62:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":62:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":63:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":63:25)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":64:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":64:25)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":65:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":65:26)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":66:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":66:29)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":67:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":74:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":68:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":68:24)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":68:23)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":71:16)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":71:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":72:19)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":72:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":72:14)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":72:15)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":73:21)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":73:10)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":73:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":75:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":84:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":76:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":76:24)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":76:23)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":77:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":83:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":78:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":78:33)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":81:20)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":81:26)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":81:35)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":81:42)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":81:52)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":81:57)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":81:68)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":81:34)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":81:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":81:69)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":82:23)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_32.c":82:13)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc9, #loc10])
#loc108 = loc(fused[#loc11, #loc12])
#loc109 = loc(fused[#loc13, #loc14])
#loc110 = loc(fused[#loc15, #loc16])
#loc111 = loc(fused[#loc17, #loc18])
#loc112 = loc(fused[#loc19, #loc20])
#loc113 = loc(fused[#loc23, #loc22])
#loc114 = loc(fused[#loc25, #loc24])
#loc115 = loc(fused[#loc30, #loc28])
#loc116 = loc(fused[#loc31, #loc32])
#loc117 = loc(fused[#loc33, #loc34])
#loc118 = loc(fused[#loc36, #loc37])
#loc119 = loc(fused[#loc38, #loc39])
#loc120 = loc(fused[#loc42, #loc44])
#loc121 = loc(fused[#loc45, #loc46])
#loc122 = loc(fused[#loc47, #loc46])
#loc123 = loc(fused[#loc48, #loc49])
#loc124 = loc(fused[#loc52, #loc53])
#loc125 = loc(fused[#loc54, #loc55])
#loc126 = loc(fused[#loc56, #loc57])
#loc127 = loc(fused[#loc58, #loc59])
#loc128 = loc(fused[#loc60, #loc61])
#loc129 = loc(fused[#loc62, #loc63])
#loc130 = loc(fused[#loc64, #loc65])
#loc131 = loc(fused[#loc66, #loc67])
#loc132 = loc(fused[#loc68, #loc69])
#loc133 = loc(fused[#loc70, #loc71])
#loc134 = loc(fused[#loc74, #loc73])
#loc135 = loc(fused[#loc76, #loc75])
#loc136 = loc(fused[#loc81, #loc79])
#loc137 = loc(fused[#loc82, #loc83])
#loc138 = loc(fused[#loc84, #loc85])
#loc139 = loc(fused[#loc87, #loc88])
#loc140 = loc(fused[#loc89, #loc90])
#loc141 = loc(fused[#loc93, #loc95])
#loc142 = loc(fused[#loc96, #loc97])
#loc143 = loc(fused[#loc98, #loc97])
#loc144 = loc(fused[#loc99, #loc100])
