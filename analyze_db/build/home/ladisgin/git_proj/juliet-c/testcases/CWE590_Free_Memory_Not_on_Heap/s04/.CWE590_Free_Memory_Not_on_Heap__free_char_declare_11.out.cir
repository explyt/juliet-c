!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":117:10)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":117:14)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":117:20)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":117:32)
#loc192 = loc(fused[#loc54, #loc55])
#loc193 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc172)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc173)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc174)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_declare_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.scope {
      %6 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc179)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc179)
      %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc15)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc182)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
          %13 = cir.const #cir.int<65> : !s32i loc(#loc23)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc24)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc24)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc24)
          cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc183)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc28)
          %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc28)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc29)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc30)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc29)
          %23 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
          %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc31)
          cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc184)
          %25 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
          cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
        } loc(#loc181)
      } loc(#loc180)
    } loc(#loc178)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc36)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
    cir.return loc(#loc8)
  } loc(#loc175)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_declare_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc186)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc189)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_declare_11_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_declare_11_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    cir.return %17 : !s32i loc(#loc196)
  } loc(#loc191)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc74)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc199)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc84)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      %6 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc204)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc204)
      %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc88)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc88)
      cir.if %9 {
        %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc74)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc74)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc93)
      } else {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc207)
          %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc99)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc99)
          %14 = cir.const #cir.int<1> : !u64i loc(#loc208)
          %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc209)
          %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
          cir.store %17, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
          cir.scope {
            %33 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
            %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc212)
            cir.if %36 {
              %37 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
              %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
              cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc107)
              %39 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc108)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc109)
              cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc108)
            } loc(#loc213)
          } loc(#loc211)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
          %20 = cir.const #cir.int<65> : !s32i loc(#loc111)
          %21 = cir.const #cir.int<100> : !s32i loc(#loc112)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc113)
          %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc112)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc112)
          cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc214)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc116)
          %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc116)
          %27 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc118)
          %29 = cir.const #cir.int<1> : !s32i loc(#loc119)
          %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc118)
          %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc120)
          cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc215)
          %32 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
          cir.store %32, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
        } loc(#loc206)
      } loc(#loc205)
    } loc(#loc203)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc125)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
    cir.return loc(#loc81)
  } loc(#loc200)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc131)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    cir.scope {
      %6 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc221)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc221)
      %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc135)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc135)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc224)
          %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc142)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc143)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc143)
          %14 = cir.const #cir.int<1> : !u64i loc(#loc225)
          %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc226)
          %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc227)
          cir.store %17, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
          cir.scope {
            %33 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
            %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc229)
            cir.if %36 {
              %37 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc151)
              %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc151)
              cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc152)
              %39 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc153)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc154)
              cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc153)
            } loc(#loc230)
          } loc(#loc228)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc155)
          %20 = cir.const #cir.int<65> : !s32i loc(#loc156)
          %21 = cir.const #cir.int<100> : !s32i loc(#loc157)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc158)
          %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc157)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc157)
          cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc231)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc161)
          %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc161)
          %27 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc163)
          %29 = cir.const #cir.int<1> : !s32i loc(#loc164)
          %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc163)
          %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc165)
          cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc232)
          %32 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
          cir.store %32, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
        } loc(#loc223)
      } loc(#loc222)
    } loc(#loc220)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc170)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc171)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc170)
    cir.return loc(#loc128)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":23:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":40:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":25:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":25:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":26:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":26:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":27:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":36:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":27:8)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":27:26)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":28:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":29:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":35:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":31:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":31:32)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":32:20)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":32:32)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":32:37)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":32:41)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":32:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":32:42)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":33:33)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":33:24)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":33:28)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":33:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":34:20)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":34:13)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":37:15)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":37:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":39:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":39:10)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":101:1)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":105:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":103:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":103:14)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":104:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":104:14)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":122:15)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":124:15)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":127:15)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":129:15)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":117:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":132:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":118:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":120:27)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":120:22)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":120:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":122:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":123:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":123:63)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":124:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":127:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":128:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":128:62)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":129:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":131:12)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":131:5)
#loc72 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":54:19)
#loc75 = loc("/usr/include/stdlib.h":672:1)
#loc76 = loc("/usr/include/stdlib.h":672:45)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":63:27)
#loc78 = loc("/usr/include/stdlib.h":756:1)
#loc79 = loc("/usr/include/stdlib.h":756:70)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":47:1)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":74:1)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":49:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":49:12)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":50:12)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":50:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":51:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":70:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":51:8)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":51:27)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":52:5)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":55:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":57:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":54:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":58:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":69:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":60:13)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":60:64)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":60:41)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":60:48)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":60:52)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":60:63)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":61:13)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":65:13)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":61:17)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":61:31)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":62:13)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":63:17)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":64:17)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":64:22)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":66:20)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":66:32)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":66:37)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":66:41)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":66:13)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":66:42)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":67:33)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":67:13)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":67:24)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":67:28)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":67:29)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":68:20)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":68:13)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":71:15)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":71:5)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":73:5)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":73:10)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":77:1)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":99:1)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":79:5)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":79:12)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":80:12)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":80:5)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":81:5)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":95:5)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":81:8)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":81:26)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":82:5)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":83:9)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":94:9)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":85:13)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":85:64)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":85:41)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":85:48)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":85:52)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":85:63)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":86:13)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":90:13)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":86:17)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":86:31)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":87:13)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":88:27)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":88:17)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":89:17)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":89:22)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":91:20)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":91:32)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":91:37)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":91:41)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":91:13)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":91:42)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":92:33)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":92:13)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":92:24)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":92:28)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":92:29)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":93:20)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":93:13)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":96:15)
#loc169 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":96:5)
#loc170 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":98:5)
#loc171 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_11.c":98:10)
#loc172 = loc(fused[#loc1, #loc2])
#loc173 = loc(fused[#loc3, #loc4])
#loc174 = loc(fused[#loc5, #loc6])
#loc175 = loc(fused[#loc7, #loc8])
#loc176 = loc(fused[#loc9, #loc10])
#loc177 = loc(fused[#loc12, #loc11])
#loc178 = loc(fused[#loc13, #loc14])
#loc179 = loc(fused[#loc15, #loc16])
#loc180 = loc(fused[#loc17, #loc14])
#loc181 = loc(fused[#loc18, #loc19])
#loc182 = loc(fused[#loc20, #loc21])
#loc183 = loc(fused[#loc26, #loc27])
#loc184 = loc(fused[#loc31, #loc28])
#loc185 = loc(fused[#loc33, #loc32])
#loc186 = loc(fused[#loc38, #loc39])
#loc187 = loc(fused[#loc40, #loc41])
#loc188 = loc(fused[#loc42, #loc43])
#loc189 = loc(fused[#loc44, #loc45])
#loc190 = loc(fused[#loc46, #loc47])
#loc191 = loc(fused[#loc52, #loc53])
#loc194 = loc(fused[#loc63, #loc64])
#loc195 = loc(fused[#loc67, #loc68])
#loc196 = loc(fused[#loc71, #loc70])
#loc197 = loc(fused[#loc72, #loc73])
#loc198 = loc(fused[#loc75, #loc76])
#loc199 = loc(fused[#loc78, #loc79])
#loc200 = loc(fused[#loc80, #loc81])
#loc201 = loc(fused[#loc82, #loc83])
#loc202 = loc(fused[#loc85, #loc84])
#loc203 = loc(fused[#loc86, #loc87])
#loc204 = loc(fused[#loc88, #loc89])
#loc205 = loc(fused[#loc90, #loc91, #loc92, #loc87])
#loc206 = loc(fused[#loc94, #loc95])
#loc207 = loc(fused[#loc96, #loc97])
#loc208 = loc(fused[#loc100, #loc101])
#loc209 = loc(fused[#loc99, #loc101])
#loc210 = loc(fused[#loc98, #loc97])
#loc211 = loc(fused[#loc102, #loc103])
#loc212 = loc(fused[#loc104, #loc105])
#loc213 = loc(fused[#loc106, #loc103])
#loc214 = loc(fused[#loc114, #loc115])
#loc215 = loc(fused[#loc117, #loc116])
#loc216 = loc(fused[#loc122, #loc121])
#loc217 = loc(fused[#loc127, #loc128])
#loc218 = loc(fused[#loc129, #loc130])
#loc219 = loc(fused[#loc132, #loc131])
#loc220 = loc(fused[#loc133, #loc134])
#loc221 = loc(fused[#loc135, #loc136])
#loc222 = loc(fused[#loc137, #loc134])
#loc223 = loc(fused[#loc138, #loc139])
#loc224 = loc(fused[#loc140, #loc141])
#loc225 = loc(fused[#loc144, #loc145])
#loc226 = loc(fused[#loc143, #loc145])
#loc227 = loc(fused[#loc142, #loc141])
#loc228 = loc(fused[#loc146, #loc147])
#loc229 = loc(fused[#loc148, #loc149])
#loc230 = loc(fused[#loc150, #loc147])
#loc231 = loc(fused[#loc159, #loc160])
#loc232 = loc(fused[#loc162, #loc161])
#loc233 = loc(fused[#loc167, #loc166])
