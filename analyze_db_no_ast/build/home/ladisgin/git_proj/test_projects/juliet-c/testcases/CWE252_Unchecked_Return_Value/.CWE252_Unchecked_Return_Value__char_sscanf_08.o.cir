!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_sscanf_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc88)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"sscanf\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_sscanf_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc91)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc9)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc94)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc95)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc94)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc94)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
          %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
          %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
          %13 = cir.call @__isoc99_sscanf(%9, %11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc18)
        } loc(#loc93)
      } loc(#loc92)
    } loc(#loc90)
    cir.return loc(#loc6)
  } loc(#loc89)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_sscanf_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc97)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc98)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    cir.return loc(#loc21)
  } loc(#loc96)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc27)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc28)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.return %2 : !s32i loc(#loc100)
  } loc(#loc99)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc101)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc32)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc104)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc38)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc38)
      cir.if %2 {
        %3 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc32)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc32)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc43)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc107)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc108)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc107)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc107)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc52)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc53)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc53)
            %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc54)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc54)
            %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %13 = cir.call @__isoc99_sscanf(%9, %11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc52)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc56)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !s32i loc(#loc110)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc57)
            cir.if %17 {
              %18 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc33)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc33)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc59)
            } loc(#loc111)
          } loc(#loc109)
        } loc(#loc106)
      } loc(#loc105)
    } loc(#loc103)
    cir.return loc(#loc35)
  } loc(#loc102)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.return %2 : !s32i loc(#loc113)
  } loc(#loc112)
  cir.func no_proto internal private  @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc116)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc68)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc68)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc119)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc119)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc119)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc79)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc80)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc80)
            %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc81)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc81)
            %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
            %13 = cir.call @__isoc99_sscanf(%9, %11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc79)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc83)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc83)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !s32i loc(#loc122)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc84)
            cir.if %17 {
              %18 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc86)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc86)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc87)
            } loc(#loc123)
          } loc(#loc121)
        } loc(#loc118)
      } loc(#loc117)
    } loc(#loc115)
    cir.return loc(#loc65)
  } loc(#loc114)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_sscanf_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":49:20)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":49:25)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":39:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":52:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":41:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":51:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":41:8)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":41:26)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":42:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":43:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":50:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":46:13)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":46:36)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":47:13)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":47:27)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":49:13)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":49:35)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":101:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":105:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":103:5)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":103:11)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":104:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":104:11)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":27:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":30:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":29:12)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":29:5)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":64:19)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":76:27)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":59:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":80:1)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":61:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":79:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":61:8)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":61:27)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":62:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":65:5)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":67:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":64:9)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":68:9)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":78:9)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":71:13)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":71:36)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":72:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":72:27)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":74:13)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":77:13)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":74:17)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":74:24)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":74:29)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":74:39)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":74:48)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":74:45)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":75:13)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":76:17)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":32:1)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":35:1)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":34:12)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":34:5)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":83:1)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":99:1)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":85:5)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":98:5)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":85:8)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":85:26)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":86:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":87:9)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":97:9)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":90:13)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":90:36)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":91:13)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":91:27)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":93:13)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":96:13)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":93:17)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":93:24)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":93:29)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":93:39)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":93:48)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":93:45)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":94:13)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":95:27)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_sscanf_08.c":95:17)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc5, #loc6])
#loc90 = loc(fused[#loc7, #loc8])
#loc91 = loc(fused[#loc9, #loc10])
#loc92 = loc(fused[#loc11, #loc8])
#loc93 = loc(fused[#loc12, #loc13])
#loc94 = loc(fused[#loc14, #loc15])
#loc95 = loc(fused[#loc16, #loc17])
#loc96 = loc(fused[#loc20, #loc21])
#loc97 = loc(fused[#loc22, #loc23])
#loc98 = loc(fused[#loc24, #loc25])
#loc99 = loc(fused[#loc26, #loc27])
#loc100 = loc(fused[#loc29, #loc28])
#loc101 = loc(fused[#loc30, #loc31])
#loc102 = loc(fused[#loc34, #loc35])
#loc103 = loc(fused[#loc36, #loc37])
#loc104 = loc(fused[#loc38, #loc39])
#loc105 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc106 = loc(fused[#loc44, #loc45])
#loc107 = loc(fused[#loc46, #loc47])
#loc108 = loc(fused[#loc48, #loc49])
#loc109 = loc(fused[#loc50, #loc51])
#loc110 = loc(fused[#loc52, #loc56])
#loc111 = loc(fused[#loc58, #loc51])
#loc112 = loc(fused[#loc60, #loc61])
#loc113 = loc(fused[#loc63, #loc62])
#loc114 = loc(fused[#loc64, #loc65])
#loc115 = loc(fused[#loc66, #loc67])
#loc116 = loc(fused[#loc68, #loc69])
#loc117 = loc(fused[#loc70, #loc67])
#loc118 = loc(fused[#loc71, #loc72])
#loc119 = loc(fused[#loc73, #loc74])
#loc120 = loc(fused[#loc75, #loc76])
#loc121 = loc(fused[#loc77, #loc78])
#loc122 = loc(fused[#loc79, #loc83])
#loc123 = loc(fused[#loc85, #loc78])
