!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Please enter a string: \00" : !cir.array<!s8i x 24>> : !cir.array<!s8i x 24> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc115)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fgets failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc8)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc117)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc120)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc15)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc15)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc123)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc124)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc123)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 24>> loc(#loc3)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 24>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc24)
          cir.scope {
            %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc28)
            %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
            %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
            %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
            %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
            %16 = cir.cmp(lt, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc126)
            cir.if %16 {
              %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc8)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc8)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc33)
              %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc35)
              cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
            } loc(#loc127)
          } loc(#loc125)
          %9 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc122)
      } loc(#loc121)
    } loc(#loc119)
    cir.return loc(#loc12)
  } loc(#loc118)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc129)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc130)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc128)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc45)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc46)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.return %2 : !s32i loc(#loc132)
  } loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc135)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc53)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc53)
      cir.if %2 {
        %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc58)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc138)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc138)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc138)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 24>> loc(#loc65)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 24>>), !cir.ptr<!s8i> loc(#loc65)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc66)
          cir.scope {
            %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc70)
            %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
            %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc71)
            %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc72)
            %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc73)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc73)
            %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc141)
            cir.if %17 {
              %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc75)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc75)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc76)
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc77)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc78)
              cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
            } loc(#loc142)
          } loc(#loc140)
          %9 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc80)
        } loc(#loc137)
      } loc(#loc136)
    } loc(#loc134)
    cir.return loc(#loc50)
  } loc(#loc133)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %2 : !s32i loc(#loc144)
  } loc(#loc143)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc147)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc89)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc89)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc150)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc150)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc150)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 24>> loc(#loc98)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 24>>), !cir.ptr<!s8i> loc(#loc98)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc99)
          cir.scope {
            %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc103)
            %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
            %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
            %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc105)
            %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
            %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc153)
            cir.if %17 {
              %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc108)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc109)
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc110)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc111)
              cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
            } loc(#loc154)
          } loc(#loc152)
          %9 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc113)
        } loc(#loc149)
      } loc(#loc148)
    } loc(#loc146)
    cir.return loc(#loc86)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":46:23)
#loc4 = loc("/usr/include/stdio.h":654:1)
#loc5 = loc("/usr/include/stdio.h":655:59)
#loc6 = loc("/usr/include/stdio.h":149:1)
#loc7 = loc("/usr/include/stdio.h":149:14)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":51:27)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":37:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":57:1)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":39:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":56:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":39:8)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":39:26)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":40:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":41:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":55:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":44:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":44:36)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":45:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":45:27)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":46:13)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":49:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":53:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":49:23)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":49:29)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":49:34)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":49:17)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":49:43)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":50:13)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":51:17)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":52:17)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":52:22)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":54:23)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":54:13)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":112:1)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":116:1)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":114:5)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":114:11)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":115:5)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":115:11)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":25:1)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":28:1)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":27:12)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":27:5)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":69:19)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":64:1)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":88:1)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":66:5)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":87:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":66:8)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":66:27)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":67:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":70:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":72:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":69:9)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":73:9)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":86:9)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":76:13)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":76:36)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":77:13)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":77:27)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":78:23)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":78:13)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":80:13)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":84:13)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":80:23)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":80:29)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":80:34)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":80:17)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":80:44)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":81:13)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":82:27)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":82:17)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":83:17)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":83:22)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":85:23)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":85:13)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":30:1)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":33:1)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":32:12)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":32:5)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":91:1)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":110:1)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":93:5)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":109:5)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":93:8)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":93:26)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":94:5)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":95:9)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":108:9)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":98:13)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":98:36)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":99:13)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":99:27)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":100:23)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":100:13)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":102:13)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":106:13)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":102:23)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":102:29)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":102:34)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":102:17)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":102:44)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":103:13)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":104:27)
#loc109 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":104:17)
#loc110 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":105:17)
#loc111 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":105:22)
#loc112 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":107:23)
#loc113 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fgets_08.c":107:13)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc4, #loc5])
#loc116 = loc(fused[#loc6, #loc7])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc17, #loc14])
#loc122 = loc(fused[#loc18, #loc19])
#loc123 = loc(fused[#loc20, #loc21])
#loc124 = loc(fused[#loc22, #loc23])
#loc125 = loc(fused[#loc25, #loc26])
#loc126 = loc(fused[#loc30, #loc31])
#loc127 = loc(fused[#loc32, #loc26])
#loc128 = loc(fused[#loc38, #loc39])
#loc129 = loc(fused[#loc40, #loc41])
#loc130 = loc(fused[#loc42, #loc43])
#loc131 = loc(fused[#loc44, #loc45])
#loc132 = loc(fused[#loc47, #loc46])
#loc133 = loc(fused[#loc49, #loc50])
#loc134 = loc(fused[#loc51, #loc52])
#loc135 = loc(fused[#loc53, #loc54])
#loc136 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc137 = loc(fused[#loc59, #loc60])
#loc138 = loc(fused[#loc61, #loc62])
#loc139 = loc(fused[#loc63, #loc64])
#loc140 = loc(fused[#loc67, #loc68])
#loc141 = loc(fused[#loc72, #loc73])
#loc142 = loc(fused[#loc74, #loc68])
#loc143 = loc(fused[#loc81, #loc82])
#loc144 = loc(fused[#loc84, #loc83])
#loc145 = loc(fused[#loc85, #loc86])
#loc146 = loc(fused[#loc87, #loc88])
#loc147 = loc(fused[#loc89, #loc90])
#loc148 = loc(fused[#loc91, #loc88])
#loc149 = loc(fused[#loc92, #loc93])
#loc150 = loc(fused[#loc94, #loc95])
#loc151 = loc(fused[#loc96, #loc97])
#loc152 = loc(fused[#loc100, #loc101])
#loc153 = loc(fused[#loc105, #loc106])
#loc154 = loc(fused[#loc107, #loc101])
