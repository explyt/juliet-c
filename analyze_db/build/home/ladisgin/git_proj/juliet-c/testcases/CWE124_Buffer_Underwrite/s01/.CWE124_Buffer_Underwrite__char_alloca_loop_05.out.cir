!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":138:10)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":138:14)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":138:20)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":138:32)
#loc261 = loc(fused[#loc85, #loc86])
#loc262 = loc(fused[#loc87, #loc88])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc233)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc234)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc236)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc237)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc12)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc13)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc238)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc17)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc19)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc239)
    cir.scope {
      %23 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc233)
      %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc24)
      cir.if %25 {
        %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
        %27 = cir.const #cir.int<8> : !s32i loc(#loc27)
        %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc27)
        %29 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc28)
        cir.store %29, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
      } loc(#loc241)
    } loc(#loc240)
    cir.scope {
      %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc244)
      %24 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc245)
      %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
      %27 = cir.const #cir.int<67> : !s32i loc(#loc37)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc38)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc38)
      %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc38)
      cir.libc.memset %31 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc246)
      %32 = cir.const #cir.int<0> : !s32i loc(#loc42)
      %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc42)
      %34 = cir.const #cir.int<100> : !s32i loc(#loc43)
      %35 = cir.const #cir.int<1> : !s32i loc(#loc44)
      %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc43)
      %37 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
      %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc45)
      cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc247)
      cir.scope {
        %47 = cir.const #cir.int<0> : !s32i loc(#loc48)
        %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc48)
        cir.store %48, %23 : !u64i, !cir.ptr<!u64i> loc(#loc249)
        cir.for : cond {
          %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc50)
          %50 = cir.const #cir.int<100> : !s32i loc(#loc51)
          %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc51)
          %52 = cir.cmp(lt, %49, %51) : !u64i, !cir.bool loc(#loc250)
          cir.condition(%52) loc(#loc52)
        } body {
          cir.scope {
            %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc54)
            %50 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc55)
            %52 = cir.load %51 : !cir.ptr<!s8i>, !s8i loc(#loc55)
            %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
            %54 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc57)
            %55 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc58)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc252)
          } loc(#loc251)
          cir.yield loc(#loc47)
        } step {
          %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc60)
          %50 = cir.unary(inc, %49) : !u64i, !u64i loc(#loc61)
          cir.store %50, %23 : !u64i, !cir.ptr<!u64i> loc(#loc253)
          cir.yield loc(#loc248)
        } loc(#loc248)
      } loc(#loc248)
      %39 = cir.const #cir.int<0> : !s32i loc(#loc62)
      %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc62)
      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %43 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc64)
      %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc254)
      %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    } loc(#loc243)
    cir.return loc(#loc6)
  } loc(#loc235)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc255)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc258)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc82)
  cir.func @main(%arg0: !s32i loc(fused[#loc85, #loc86]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc87, #loc88])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc261)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc262)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc89)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc91)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc91)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc92)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_loop_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_loop_05_good() : () -> () loc(#loc94)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc80)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc81)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_loop_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc264)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_loop_05_bad() : () -> () loc(#loc98)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    cir.return %17 : !s32i loc(#loc265)
  } loc(#loc260)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc105)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc268)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc269)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc111)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc111)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc111)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc111)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc111)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc113)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc114)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc114)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc118)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc120)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc271)
    cir.scope {
      %23 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc266)
      %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc125)
      cir.if %25 {
        %26 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
        %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
        cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc129)
      } else {
        %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
        cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
      } loc(#loc273)
    } loc(#loc272)
    cir.scope {
      %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc276)
      %24 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc277)
      %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
      %27 = cir.const #cir.int<67> : !s32i loc(#loc139)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc140)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc141)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc140)
      %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc140)
      cir.libc.memset %31 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc278)
      %32 = cir.const #cir.int<0> : !s32i loc(#loc144)
      %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc144)
      %34 = cir.const #cir.int<100> : !s32i loc(#loc145)
      %35 = cir.const #cir.int<1> : !s32i loc(#loc146)
      %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc145)
      %37 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
      %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc147)
      cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc279)
      cir.scope {
        %47 = cir.const #cir.int<0> : !s32i loc(#loc150)
        %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc150)
        cir.store %48, %23 : !u64i, !cir.ptr<!u64i> loc(#loc281)
        cir.for : cond {
          %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc152)
          %50 = cir.const #cir.int<100> : !s32i loc(#loc153)
          %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc153)
          %52 = cir.cmp(lt, %49, %51) : !u64i, !cir.bool loc(#loc282)
          cir.condition(%52) loc(#loc154)
        } body {
          cir.scope {
            %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc156)
            %50 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc157)
            %52 = cir.load %51 : !cir.ptr<!s8i>, !s8i loc(#loc157)
            %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
            %54 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc159)
            %55 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc160)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc284)
          } loc(#loc283)
          cir.yield loc(#loc149)
        } step {
          %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc162)
          %50 = cir.unary(inc, %49) : !u64i, !u64i loc(#loc163)
          cir.store %50, %23 : !u64i, !cir.ptr<!u64i> loc(#loc285)
          cir.yield loc(#loc280)
        } loc(#loc280)
      } loc(#loc280)
      %39 = cir.const #cir.int<0> : !s32i loc(#loc164)
      %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc164)
      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc166)
      %43 = cir.const #cir.int<1> : !s32i loc(#loc167)
      %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc166)
      %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc168)
      cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc286)
      %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
      cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    } loc(#loc275)
    cir.return loc(#loc107)
  } loc(#loc267)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc288)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc289)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc176)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc176)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc176)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc176)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc176)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc176)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc289)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc178)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc179)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc179)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc179)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc290)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc183)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc185)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc185)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc187)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc291)
    cir.scope {
      %23 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc233)
      %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc190)
      %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc190)
      cir.if %25 {
        %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
        cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc294)
      } loc(#loc293)
    } loc(#loc292)
    cir.scope {
      %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc296)
      %24 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc297)
      %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc200)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc200)
      %27 = cir.const #cir.int<67> : !s32i loc(#loc201)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc202)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc203)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc202)
      %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc202)
      cir.libc.memset %31 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc298)
      %32 = cir.const #cir.int<0> : !s32i loc(#loc206)
      %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc206)
      %34 = cir.const #cir.int<100> : !s32i loc(#loc207)
      %35 = cir.const #cir.int<1> : !s32i loc(#loc208)
      %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc207)
      %37 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc209)
      %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc209)
      cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc299)
      cir.scope {
        %47 = cir.const #cir.int<0> : !s32i loc(#loc212)
        %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc212)
        cir.store %48, %23 : !u64i, !cir.ptr<!u64i> loc(#loc301)
        cir.for : cond {
          %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc214)
          %50 = cir.const #cir.int<100> : !s32i loc(#loc215)
          %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc215)
          %52 = cir.cmp(lt, %49, %51) : !u64i, !cir.bool loc(#loc302)
          cir.condition(%52) loc(#loc216)
        } body {
          cir.scope {
            %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc218)
            %50 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc219)
            %52 = cir.load %51 : !cir.ptr<!s8i>, !s8i loc(#loc219)
            %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
            %54 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc221)
            %55 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc222)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc304)
          } loc(#loc303)
          cir.yield loc(#loc211)
        } step {
          %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc224)
          %50 = cir.unary(inc, %49) : !u64i, !u64i loc(#loc225)
          cir.store %50, %23 : !u64i, !cir.ptr<!u64i> loc(#loc305)
          cir.yield loc(#loc300)
        } loc(#loc300)
      } loc(#loc300)
      %39 = cir.const #cir.int<0> : !s32i loc(#loc226)
      %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc226)
      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc228)
      %43 = cir.const #cir.int<1> : !s32i loc(#loc229)
      %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc228)
      %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc230)
      cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc306)
      %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
      cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc232)
    } loc(#loc295)
    cir.return loc(#loc172)
  } loc(#loc287)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_05.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":25:1)
#loc2 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":25:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":30:1)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":55:1)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":32:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":32:12)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":33:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":33:33)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":34:12)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":34:24)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":34:29)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":34:33)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":34:5)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":34:34)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":35:25)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":35:5)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":35:16)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":35:20)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":35:21)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":36:5)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":40:5)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":36:8)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":37:5)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":39:16)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":39:29)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":39:27)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":39:9)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":41:5)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":54:5)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":42:9)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":42:16)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":43:9)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":43:24)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":44:16)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":44:24)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":44:29)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":44:33)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":44:9)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":44:34)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":45:25)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":45:16)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":45:20)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":45:9)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":47:9)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":50:9)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":47:18)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":47:14)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":47:21)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":47:25)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":47:23)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":48:9)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":49:30)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":49:23)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":49:13)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":49:18)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":49:19)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":49:31)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":47:31)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":47:30)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":52:23)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":52:9)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":52:14)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":52:18)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":52:19)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":53:19)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":53:9)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":122:1)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":126:1)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":124:5)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":124:14)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":125:5)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":125:14)
#loc75 = loc("/usr/include/stdlib.h":575:1)
#loc76 = loc("/usr/include/stdlib.h":575:41)
#loc77 = loc("/usr/include/time.h":76:1)
#loc78 = loc("/usr/include/time.h":76:38)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":143:15)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":145:15)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":148:15)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":150:15)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":138:1)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":153:1)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":139:1)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":141:27)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":141:22)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":141:5)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":143:5)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":144:5)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":144:56)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":145:5)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":148:5)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":149:5)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":149:55)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":150:5)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":152:12)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":152:5)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":26:1)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":26:26)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":71:19)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":62:1)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":92:1)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":64:5)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":64:12)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":65:5)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":65:33)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":66:12)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":66:24)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":66:29)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":66:33)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":66:5)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":66:34)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":67:25)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":67:5)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":67:16)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":67:20)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":67:21)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":68:5)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":77:5)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":68:8)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":69:5)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":72:5)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":74:5)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":71:9)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":76:16)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":76:9)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":78:5)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":91:5)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":79:9)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":79:16)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":80:9)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":80:24)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":81:16)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":81:24)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":81:29)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":81:33)
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":81:9)
#loc143 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":81:34)
#loc144 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":82:25)
#loc145 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":82:16)
#loc146 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":82:20)
#loc147 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":82:9)
#loc148 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":84:9)
#loc149 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":87:9)
#loc150 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":84:18)
#loc151 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":84:14)
#loc152 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":84:21)
#loc153 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":84:25)
#loc154 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":84:23)
#loc155 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":85:9)
#loc156 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":86:30)
#loc157 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":86:23)
#loc158 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":86:13)
#loc159 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":86:18)
#loc160 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":86:19)
#loc161 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":86:31)
#loc162 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":84:31)
#loc163 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":84:30)
#loc164 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":89:23)
#loc165 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":89:9)
#loc166 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":89:14)
#loc167 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":89:18)
#loc168 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":89:19)
#loc169 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":90:19)
#loc170 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":90:9)
#loc171 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":95:1)
#loc172 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":120:1)
#loc173 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":97:5)
#loc174 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":97:12)
#loc175 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":98:5)
#loc176 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":98:33)
#loc177 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":99:12)
#loc178 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":99:24)
#loc179 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":99:29)
#loc180 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":99:33)
#loc181 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":99:5)
#loc182 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":99:34)
#loc183 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":100:25)
#loc184 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":100:5)
#loc185 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":100:16)
#loc186 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":100:20)
#loc187 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":100:21)
#loc188 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":101:5)
#loc189 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":105:5)
#loc190 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":101:8)
#loc191 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":102:5)
#loc192 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":104:16)
#loc193 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":104:9)
#loc194 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":106:5)
#loc195 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":119:5)
#loc196 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":107:9)
#loc197 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":107:16)
#loc198 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":108:9)
#loc199 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":108:24)
#loc200 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":109:16)
#loc201 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":109:24)
#loc202 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":109:29)
#loc203 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":109:33)
#loc204 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":109:9)
#loc205 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":109:34)
#loc206 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":110:25)
#loc207 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":110:16)
#loc208 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":110:20)
#loc209 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":110:9)
#loc210 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":112:9)
#loc211 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":115:9)
#loc212 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":112:18)
#loc213 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":112:14)
#loc214 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":112:21)
#loc215 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":112:25)
#loc216 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":112:23)
#loc217 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":113:9)
#loc218 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":114:30)
#loc219 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":114:23)
#loc220 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":114:13)
#loc221 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":114:18)
#loc222 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":114:19)
#loc223 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":114:31)
#loc224 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":112:31)
#loc225 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":112:30)
#loc226 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":117:23)
#loc227 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":117:9)
#loc228 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":117:14)
#loc229 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":117:18)
#loc230 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":117:19)
#loc231 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":118:19)
#loc232 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_05.c":118:9)
#loc233 = loc(fused[#loc1, #loc2])
#loc234 = loc(fused[#loc3, #loc4])
#loc235 = loc(fused[#loc5, #loc6])
#loc236 = loc(fused[#loc7, #loc8])
#loc237 = loc(fused[#loc9, #loc10])
#loc238 = loc(fused[#loc15, #loc16])
#loc239 = loc(fused[#loc18, #loc17])
#loc240 = loc(fused[#loc22, #loc23])
#loc241 = loc(fused[#loc25, #loc23])
#loc242 = loc(fused[#loc29, #loc27])
#loc243 = loc(fused[#loc30, #loc31])
#loc244 = loc(fused[#loc32, #loc33])
#loc245 = loc(fused[#loc34, #loc35])
#loc246 = loc(fused[#loc40, #loc41])
#loc247 = loc(fused[#loc45, #loc42])
#loc248 = loc(fused[#loc46, #loc47])
#loc249 = loc(fused[#loc49, #loc48])
#loc250 = loc(fused[#loc50, #loc51])
#loc251 = loc(fused[#loc53, #loc47])
#loc252 = loc(fused[#loc56, #loc59])
#loc253 = loc(fused[#loc61, #loc60])
#loc254 = loc(fused[#loc63, #loc62])
#loc255 = loc(fused[#loc69, #loc70])
#loc256 = loc(fused[#loc71, #loc72])
#loc257 = loc(fused[#loc73, #loc74])
#loc258 = loc(fused[#loc75, #loc76])
#loc259 = loc(fused[#loc77, #loc78])
#loc260 = loc(fused[#loc83, #loc84])
#loc263 = loc(fused[#loc94, #loc95])
#loc264 = loc(fused[#loc98, #loc99])
#loc265 = loc(fused[#loc102, #loc101])
#loc266 = loc(fused[#loc103, #loc104])
#loc267 = loc(fused[#loc106, #loc107])
#loc268 = loc(fused[#loc108, #loc109])
#loc269 = loc(fused[#loc110, #loc111])
#loc270 = loc(fused[#loc116, #loc117])
#loc271 = loc(fused[#loc119, #loc118])
#loc272 = loc(fused[#loc123, #loc124])
#loc273 = loc(fused[#loc126, #loc127, #loc128, #loc124])
#loc274 = loc(fused[#loc131, #loc130])
#loc275 = loc(fused[#loc132, #loc133])
#loc276 = loc(fused[#loc134, #loc135])
#loc277 = loc(fused[#loc136, #loc137])
#loc278 = loc(fused[#loc142, #loc143])
#loc279 = loc(fused[#loc147, #loc144])
#loc280 = loc(fused[#loc148, #loc149])
#loc281 = loc(fused[#loc151, #loc150])
#loc282 = loc(fused[#loc152, #loc153])
#loc283 = loc(fused[#loc155, #loc149])
#loc284 = loc(fused[#loc158, #loc161])
#loc285 = loc(fused[#loc163, #loc162])
#loc286 = loc(fused[#loc165, #loc164])
#loc287 = loc(fused[#loc171, #loc172])
#loc288 = loc(fused[#loc173, #loc174])
#loc289 = loc(fused[#loc175, #loc176])
#loc290 = loc(fused[#loc181, #loc182])
#loc291 = loc(fused[#loc184, #loc183])
#loc292 = loc(fused[#loc188, #loc189])
#loc293 = loc(fused[#loc191, #loc189])
#loc294 = loc(fused[#loc193, #loc192])
#loc295 = loc(fused[#loc194, #loc195])
#loc296 = loc(fused[#loc196, #loc197])
#loc297 = loc(fused[#loc198, #loc199])
#loc298 = loc(fused[#loc204, #loc205])
#loc299 = loc(fused[#loc209, #loc206])
#loc300 = loc(fused[#loc210, #loc211])
#loc301 = loc(fused[#loc213, #loc212])
#loc302 = loc(fused[#loc214, #loc215])
#loc303 = loc(fused[#loc217, #loc211])
#loc304 = loc(fused[#loc220, #loc223])
#loc305 = loc(fused[#loc225, #loc224])
#loc306 = loc(fused[#loc227, #loc226])
