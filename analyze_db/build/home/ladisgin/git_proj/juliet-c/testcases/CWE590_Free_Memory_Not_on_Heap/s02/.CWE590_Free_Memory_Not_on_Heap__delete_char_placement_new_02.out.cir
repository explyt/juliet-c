!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":111:10)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":111:14)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":111:20)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":111:32)
#loc160 = loc(fused[#loc105, #loc106])
#loc161 = loc(fused[#loc107, #loc108])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc121)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc122)
  cir.func @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 1>, !cir.ptr<!cir.array<!s8i x 1>>, ["buffer"] {alignment = 1 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc129)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc130)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<1> : !u64i loc(#loc131)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 1>>), !cir.ptr<!s8i> loc(#loc22)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %10 = cir.const #cir.int<65> : !s8i loc(#loc23)
    %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    cir.store %10, %11 : !s8i, !cir.ptr<!s8i> loc(#loc132)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    cir.store %12, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc16)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc16)
  ^bb6:  // pred: ^bb5
    %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc29)
    cir.call @printHexCharLine(%14) : (!s8i) -> () loc(#loc30)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
    cir.return loc(#loc6)
  } loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc33)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc134)
  cir.func internal private @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc42)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb6 loc(#loc48)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc141)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<1> : !u64i loc(#loc142)
    %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc136)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %10 = cir.const #cir.int<65> : !s8i loc(#loc54)
    %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %10, %11 : !s8i, !cir.ptr<!s8i> loc(#loc143)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb5 loc(#loc52)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc45)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc45)
  ^bb7:  // pred: ^bb6
    %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc60)
    cir.call @printHexCharLine(%14) : (!s8i) -> () loc(#loc61)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
    cir.return loc(#loc37)
  } loc(#loc135)
  cir.func internal private @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc70)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc150)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc151)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<1> : !u64i loc(#loc152)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc146)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %8 = cir.const #cir.int<65> : !s8i loc(#loc79)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.store %8, %9 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.br ^bb4 loc(#loc77)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc73)
  ^bb6:  // pred: ^bb5
    %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %12 = cir.load %11 : !cir.ptr<!s8i>, !s8i loc(#loc85)
    cir.call @printHexCharLine(%12) : (!s8i) -> () loc(#loc86)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
    cir.return loc(#loc65)
  } loc(#loc145)
  cir.func @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02L8goodG2B1Ev() : () -> () loc(#loc91)
    cir.call @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02L8goodG2B2Ev() : () -> () loc(#loc92)
    cir.return loc(#loc90)
  } loc(#loc155)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc156)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc102)
  cir.func @main(%arg0: !s32i loc(fused[#loc105, #loc106]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc107, #loc108])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc104)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc109)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc110)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc111)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc111)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc112)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc99)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.call @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_024goodEv() : () -> () loc(#loc114)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc101)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.call @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_023badEv() : () -> () loc(#loc117)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc102)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.return %15 : !s32i loc(#loc162)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":26:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":43:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":34:13)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":34:37)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":35:13)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":35:45)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":28:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":28:12)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":29:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":29:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":30:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":39:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":30:8)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":31:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":32:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":38:9)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":35:33)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":35:37)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":36:27)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":36:14)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":36:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":37:20)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":37:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":40:23)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":40:22)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":40:5)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":42:12)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":26:6)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":57:19)
#loc34 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc35 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":50:1)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":71:1)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":63:13)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":63:37)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":52:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":52:12)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":53:12)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":53:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":54:5)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":67:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":54:8)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":55:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":58:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":60:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":57:9)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":61:9)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":66:9)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":63:33)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":64:27)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":64:14)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":64:13)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":65:20)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":65:13)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":68:23)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":68:22)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":68:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":70:12)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":50:13)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":74:1)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":90:1)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":82:13)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":82:37)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":76:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":76:12)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":77:12)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":77:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":78:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":86:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":78:8)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":79:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":80:9)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":85:9)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":82:33)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":83:27)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":83:14)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":83:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":84:20)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":84:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":87:23)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":87:22)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":87:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":89:12)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":74:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":92:1)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":96:1)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":94:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":95:5)
#loc93 = loc("/usr/include/stdlib.h":575:1)
#loc94 = loc("/usr/include/stdlib.h":575:41)
#loc95 = loc("/usr/include/time.h":76:1)
#loc96 = loc("/usr/include/time.h":76:38)
#loc97 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc98 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":116:15)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":118:15)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":121:15)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":123:15)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":111:1)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":126:1)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":112:1)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":114:27)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":114:22)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":114:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":116:5)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":117:5)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":118:5)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":121:5)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":122:5)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":123:5)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":125:12)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_02.cpp":125:5)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc9, #loc10])
#loc126 = loc(fused[#loc11, #loc12])
#loc127 = loc(fused[#loc14, #loc13])
#loc128 = loc(fused[#loc15, #loc16])
#loc129 = loc(fused[#loc18, #loc16])
#loc130 = loc(fused[#loc19, #loc20])
#loc131 = loc(fused[#loc21, #loc10])
#loc132 = loc(fused[#loc25, #loc23])
#loc133 = loc(fused[#loc27, #loc26])
#loc134 = loc(fused[#loc34, #loc35])
#loc135 = loc(fused[#loc36, #loc37])
#loc136 = loc(fused[#loc38, #loc39])
#loc137 = loc(fused[#loc40, #loc41])
#loc138 = loc(fused[#loc43, #loc42])
#loc139 = loc(fused[#loc44, #loc45])
#loc140 = loc(fused[#loc47, #loc48, #loc49, #loc45])
#loc141 = loc(fused[#loc51, #loc52])
#loc142 = loc(fused[#loc53, #loc39])
#loc143 = loc(fused[#loc56, #loc54])
#loc144 = loc(fused[#loc58, #loc57])
#loc145 = loc(fused[#loc64, #loc65])
#loc146 = loc(fused[#loc66, #loc67])
#loc147 = loc(fused[#loc68, #loc69])
#loc148 = loc(fused[#loc71, #loc70])
#loc149 = loc(fused[#loc72, #loc73])
#loc150 = loc(fused[#loc75, #loc73])
#loc151 = loc(fused[#loc76, #loc77])
#loc152 = loc(fused[#loc78, #loc67])
#loc153 = loc(fused[#loc81, #loc79])
#loc154 = loc(fused[#loc83, #loc82])
#loc155 = loc(fused[#loc89, #loc90])
#loc156 = loc(fused[#loc93, #loc94])
#loc157 = loc(fused[#loc95, #loc96])
#loc158 = loc(fused[#loc97, #loc98])
#loc159 = loc(fused[#loc103, #loc104])
#loc162 = loc(fused[#loc120, #loc119])
