!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":117:10)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":117:14)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":117:20)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":117:32)
#loc177 = loc(fused[#loc60, #loc61])
#loc178 = loc(fused[#loc62, #loc63])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc153)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc155)
  cir.func private @printLongLongLine(!s64i) loc(#loc156)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc160)
    %3 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc162)
    %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc163)
    cir.store %3, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc162)
    cir.store %3, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc163)
    %6 = cir.const #cir.int<0> : !s64i loc(#loc23)
    cir.store %6, %3 : !s64i, !cir.ptr<!s64i> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc12)
    %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc27)
    cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc158)
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc28)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc154)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc155)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc155)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc28)
    %15 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc30)
    %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc31)
    cir.store %15, %16 : !s64i, !cir.ptr<!s64i> loc(#loc166)
    cir.br ^bb2 loc(#loc26)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc167)
  ^bb3:  // pred: ^bb2
    %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc14)
    %18 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc35)
    cir.store %18, %1 : !s64i, !cir.ptr<!s64i> loc(#loc159)
    cir.br ^bb4 loc(#loc168)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc38)
    %20 = cir.unary(inc, %19) : !s64i, !s64i loc(#loc39)
    cir.store %20, %1 : !s64i, !cir.ptr<!s64i> loc(#loc169)
    %21 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc16)
    cir.store %21, %2 : !s64i, !cir.ptr<!s64i> loc(#loc160)
    %22 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc40)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc41)
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc10)
  } loc(#loc157)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc173)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc57)
  cir.func @main(%arg0: !s32i loc(fused[#loc60, #loc61]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc62, #loc63])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc64)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc65)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc66)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc66)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc67)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc54)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %8 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_good() : () -> () loc(#loc69)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc56)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %13 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad() : () -> () loc(#loc73)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.return %17 : !s32i loc(#loc181)
  } loc(#loc176)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc185)
    %3 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc187)
    %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc188)
    cir.store %3, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc187)
    cir.store %3, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc188)
    %6 = cir.const #cir.int<0> : !s64i loc(#loc92)
    cir.store %6, %3 : !s64i, !cir.ptr<!s64i> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc81)
    %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc96)
    cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc183)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc97)
    %10 = cir.cast(integral, %9 : !s32i), !s64i loc(#loc97)
    cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc191)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc99)
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc100)
    cir.store %11, %12 : !s64i, !cir.ptr<!s64i> loc(#loc192)
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc193)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc83)
    %14 = cir.load %13 : !cir.ptr<!s64i>, !s64i loc(#loc104)
    cir.store %14, %1 : !s64i, !cir.ptr<!s64i> loc(#loc184)
    cir.br ^bb4 loc(#loc194)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc107)
    %16 = cir.unary(inc, %15) : !s64i, !s64i loc(#loc108)
    cir.store %16, %1 : !s64i, !cir.ptr<!s64i> loc(#loc195)
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc85)
    cir.store %17, %2 : !s64i, !cir.ptr<!s64i> loc(#loc185)
    %18 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc109)
    cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc110)
    cir.br ^bb5 loc(#loc106)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc79)
  } loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc111)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc199)
    %3 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc200)
    %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc201)
    %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc202)
    cir.store %3, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc201)
    cir.store %3, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc202)
    %6 = cir.const #cir.int<0> : !s64i loc(#loc126)
    cir.store %6, %3 : !s64i, !cir.ptr<!s64i> loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc115)
    %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc130)
    cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc197)
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc131)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc154)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc132)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc205)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc205)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc131)
    %15 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc135)
    %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc136)
    cir.store %15, %16 : !s64i, !cir.ptr<!s64i> loc(#loc206)
    cir.br ^bb2 loc(#loc129)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc207)
  ^bb3:  // pred: ^bb2
    %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc117)
    %18 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc140)
    cir.store %18, %1 : !s64i, !cir.ptr<!s64i> loc(#loc198)
    cir.br ^bb4 loc(#loc208)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc143)
    %20 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc144)
    %21 = cir.cmp(lt, %19, %20) : !s64i, !cir.bool loc(#loc209)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc210)
  ^bb5:  // pred: ^bb4
    %22 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc148)
    %23 = cir.unary(inc, %22) : !s64i, !s64i loc(#loc149)
    cir.store %23, %1 : !s64i, !cir.ptr<!s64i> loc(#loc211)
    %24 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc119)
    cir.store %24, %2 : !s64i, !cir.ptr<!s64i> loc(#loc199)
    %25 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc150)
    cir.call @printLongLongLine(%25) : (!s64i) -> () loc(#loc151)
    cir.br ^bb7 loc(#loc146)
  ^bb6:  // pred: ^bb4
    %26 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc111)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    cir.br ^bb7 loc(#loc142)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc142)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc139)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc113)
  } loc(#loc196)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":32:24)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":32:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":23:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":44:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":30:9)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":30:25)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":36:9)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":36:25)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":40:13)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":40:30)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":25:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":25:13)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":26:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":26:26)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":27:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":27:26)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":28:12)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":28:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":29:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":34:5)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":30:24)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":32:9)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":32:17)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":33:21)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":33:10)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":33:9)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":35:5)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":43:5)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":36:24)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":37:9)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":42:9)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":39:17)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":39:13)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":41:31)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":41:13)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":103:1)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":107:1)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":105:5)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":105:13)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":106:5)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":106:13)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":122:15)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":124:15)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":127:15)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":129:15)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":117:1)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":132:1)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":118:1)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":120:27)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":120:22)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":120:5)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":122:5)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":123:5)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":123:61)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":124:5)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":127:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":128:5)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":128:60)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":129:5)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":131:12)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":131:5)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":51:1)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":72:1)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":58:9)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":58:25)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":64:9)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":64:25)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":68:13)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":68:30)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":53:5)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":53:13)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":54:5)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":54:26)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":55:5)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":55:26)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":56:12)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":56:5)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":57:5)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":62:5)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":58:24)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":60:16)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":60:9)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":61:21)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":61:10)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":61:9)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":63:5)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":71:5)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":64:24)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":65:9)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":70:9)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":67:17)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":67:13)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":69:31)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":69:13)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":98:23)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":75:1)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":101:1)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":82:9)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":82:25)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":88:9)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":88:25)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":93:13)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":93:30)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":77:5)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":77:13)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":78:5)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":78:26)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":79:5)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":79:26)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":80:12)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":80:5)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":81:5)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":86:5)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":82:24)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":84:9)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":84:17)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":84:24)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":84:28)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":85:21)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":85:10)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":85:9)
#loc138 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":87:5)
#loc139 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":100:5)
#loc140 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":88:24)
#loc141 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":90:9)
#loc142 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":99:9)
#loc143 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":90:13)
#loc144 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":90:20)
#loc145 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":91:9)
#loc146 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":95:9)
#loc147 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":97:9)
#loc148 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":92:17)
#loc149 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":92:13)
#loc150 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":94:31)
#loc151 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":94:13)
#loc152 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_32.c":98:13)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc3, #loc4])
#loc155 = loc(fused[#loc5, #loc6])
#loc156 = loc(fused[#loc7, #loc8])
#loc157 = loc(fused[#loc9, #loc10])
#loc158 = loc(fused[#loc11, #loc12])
#loc159 = loc(fused[#loc13, #loc14])
#loc160 = loc(fused[#loc15, #loc16])
#loc161 = loc(fused[#loc17, #loc18])
#loc162 = loc(fused[#loc19, #loc20])
#loc163 = loc(fused[#loc21, #loc22])
#loc164 = loc(fused[#loc24, #loc23])
#loc165 = loc(fused[#loc25, #loc26])
#loc166 = loc(fused[#loc32, #loc30])
#loc167 = loc(fused[#loc33, #loc34])
#loc168 = loc(fused[#loc36, #loc37])
#loc169 = loc(fused[#loc39, #loc38])
#loc170 = loc(fused[#loc42, #loc43])
#loc171 = loc(fused[#loc44, #loc45])
#loc172 = loc(fused[#loc46, #loc47])
#loc173 = loc(fused[#loc48, #loc49])
#loc174 = loc(fused[#loc50, #loc51])
#loc175 = loc(fused[#loc52, #loc53])
#loc176 = loc(fused[#loc58, #loc59])
#loc179 = loc(fused[#loc69, #loc70])
#loc180 = loc(fused[#loc73, #loc74])
#loc181 = loc(fused[#loc77, #loc76])
#loc182 = loc(fused[#loc78, #loc79])
#loc183 = loc(fused[#loc80, #loc81])
#loc184 = loc(fused[#loc82, #loc83])
#loc185 = loc(fused[#loc84, #loc85])
#loc186 = loc(fused[#loc86, #loc87])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc90, #loc91])
#loc189 = loc(fused[#loc93, #loc92])
#loc190 = loc(fused[#loc94, #loc95])
#loc191 = loc(fused[#loc98, #loc97])
#loc192 = loc(fused[#loc101, #loc99])
#loc193 = loc(fused[#loc102, #loc103])
#loc194 = loc(fused[#loc105, #loc106])
#loc195 = loc(fused[#loc108, #loc107])
#loc196 = loc(fused[#loc112, #loc113])
#loc197 = loc(fused[#loc114, #loc115])
#loc198 = loc(fused[#loc116, #loc117])
#loc199 = loc(fused[#loc118, #loc119])
#loc200 = loc(fused[#loc120, #loc121])
#loc201 = loc(fused[#loc122, #loc123])
#loc202 = loc(fused[#loc124, #loc125])
#loc203 = loc(fused[#loc127, #loc126])
#loc204 = loc(fused[#loc128, #loc129])
#loc205 = loc(fused[#loc133, #loc134])
#loc206 = loc(fused[#loc137, #loc135])
#loc207 = loc(fused[#loc138, #loc139])
#loc208 = loc(fused[#loc141, #loc142])
#loc209 = loc(fused[#loc143, #loc144])
#loc210 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc211 = loc(fused[#loc149, #loc148])
