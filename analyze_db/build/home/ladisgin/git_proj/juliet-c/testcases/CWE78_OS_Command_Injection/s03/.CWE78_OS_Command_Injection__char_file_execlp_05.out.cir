!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":152:10)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":152:14)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":152:20)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":152:32)
#loc197 = loc(fused[#loc96, #loc97])
#loc198 = loc(fused[#loc98, #loc99])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc160)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc161)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_file_execlp_05_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc162)
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc163)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc164)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc13)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc14)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc19)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc168)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc24)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc25)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execlp_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc162)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_file_execlp_05_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc162)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc162)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.scope {
      %13 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc163)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc34)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc34)
      cir.if %15 {
        cir.scope {
          %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc176)
          %17 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc177)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc42)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc42)
          cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc176)
          cir.scope {
            %21 = cir.const #cir.int<100> : !s32i loc(#loc46)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc46)
            %23 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc47)
            %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc179)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc48)
            %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc48)
            %27 = cir.cmp(gt, %24, %26) : !u64i, !cir.bool loc(#loc180)
            cir.if %27 {
              %28 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc50)
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc13)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc13)
              %31 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc14)
              %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc14)
              %33 = cir.call @fopen(%30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc50)
              cir.store %33, %17 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
              cir.scope {
                %34 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
                %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc56)
                %37 = cir.cmp(ne, %34, %36) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc184)
                cir.if %37 {
                  cir.scope {
                    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                    %41 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc61)
                    %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc62)
                    %43 = cir.const #cir.int<100> : !s32i loc(#loc63)
                    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc63)
                    %45 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                    %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc187)
                    %47 = cir.cast(integral, %46 : !u64i), !s32i loc(#loc187)
                    %48 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
                    %49 = cir.call @fgets(%42, %47, %48) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc66)
                    %50 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
                    %51 = cir.cast(bitcast, %50 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc67)
                    %52 = cir.cmp(eq, %49, %51) : !cir.ptr<!s8i>, !cir.bool loc(#loc188)
                    cir.if %52 {
                      %53 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc19)
                      %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc19)
                      cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc69)
                      %55 = cir.const #cir.int<0> : !s32i loc(#loc70)
                      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc70)
                      %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
                      %58 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc72)
                      %59 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc73)
                      cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc190)
                    } loc(#loc189)
                  } loc(#loc186)
                  %38 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc74)
                  %39 = cir.call @fclose(%38) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc75)
                } loc(#loc185)
              } loc(#loc183)
            } loc(#loc181)
          } loc(#loc178)
        } loc(#loc175)
      } loc(#loc174)
    } loc(#loc173)
    %4 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc24)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc24)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc76)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc25)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc25)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc79)
    cir.return loc(#loc27)
  } loc(#loc170)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execlp_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    cir.return loc(#loc81)
  } loc(#loc191)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc194)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc93)
  cir.func @main(%arg0: !s32i loc(fused[#loc96, #loc97]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc98, #loc99])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc95)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc100)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc101)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc102)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc102)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc103)
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc90)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_file_execlp_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call @CWE78_OS_Command_Injection__char_file_execlp_05_good() : () -> () loc(#loc105)
    %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc91)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc92)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_file_execlp_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call @CWE78_OS_Command_Injection__char_file_execlp_05_bad() : () -> () loc(#loc109)
    %14 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc93)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc112)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    cir.return %17 : !s32i loc(#loc201)
  } loc(#loc196)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.9" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc116)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.10" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc119)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    cir.scope {
      %13 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc202)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc128)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc128)
      cir.if %15 {
        %16 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc116)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc116)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc132)
      } else {
        %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc133)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
        %18 = cir.get_global @".str.10" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc119)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc119)
        %20 = cir.call @strcat(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc133)
      } loc(#loc208)
    } loc(#loc207)
    %4 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc135)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc135)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc136)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc136)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc137)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc137)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc140)
    cir.return loc(#loc121)
  } loc(#loc204)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc160)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc160)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc160)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    cir.scope {
      %13 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc163)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc149)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc149)
      cir.if %15 {
        %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc151)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
        %18 = cir.get_global @".str.10" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc153)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc153)
        %20 = cir.call @strcat(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
      } loc(#loc213)
    } loc(#loc212)
    %4 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc154)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc154)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc155)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc155)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc156)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc156)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc158)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc159)
    cir.return loc(#loc142)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_05.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":123:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":123:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":101:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":101:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":61:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":61:28)
#loc7 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":53:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":53:25)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdio.h":264:1)
#loc12 = loc("/usr/include/stdio.h":266:3)
#loc13 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":72:31)
#loc14 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":72:41)
#loc15 = loc("/usr/include/stdio.h":654:1)
#loc16 = loc("/usr/include/stdio.h":655:59)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":78:35)
#loc20 = loc("/usr/include/stdio.h":184:1)
#loc21 = loc("/usr/include/stdio.h":184:36)
#loc22 = loc("/usr/include/unistd.h":605:1)
#loc23 = loc("/usr/include/unistd.h":606:14)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":90:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":90:38)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":58:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":91:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":60:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":60:12)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":62:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":62:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":63:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":86:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":63:8)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":64:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":65:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":85:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":67:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":67:41)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":68:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":68:20)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":67:30)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":67:37)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":70:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":84:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":70:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":70:21)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":70:31)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":71:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":72:25)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":72:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":72:44)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":73:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":83:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":73:21)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":73:30)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":74:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":76:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":81:21)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":76:31)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":76:36)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":76:35)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":76:51)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":76:55)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":76:65)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":76:25)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":76:75)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":77:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":78:25)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":80:41)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":80:25)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":80:30)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":80:37)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":82:28)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":82:21)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":90:25)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":90:52)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":90:66)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":90:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":136:1)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":140:1)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":138:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":138:14)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":139:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":139:14)
#loc86 = loc("/usr/include/stdlib.h":575:1)
#loc87 = loc("/usr/include/stdlib.h":575:41)
#loc88 = loc("/usr/include/time.h":76:1)
#loc89 = loc("/usr/include/time.h":76:38)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":157:15)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":159:15)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":162:15)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":164:15)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":152:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":167:1)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":153:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":155:27)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":155:22)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":155:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":157:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":158:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":158:58)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":159:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":162:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":163:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":163:57)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":164:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":166:12)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":166:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":54:1)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":54:26)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":106:19)
#loc117 = loc("/usr/include/string.h":149:1)
#loc118 = loc("/usr/include/string.h":150:14)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":111:22)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":98:1)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":117:1)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":100:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":100:12)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":102:12)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":102:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":103:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":112:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":103:8)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":104:5)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":107:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":109:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":106:9)
#loc133 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":111:9)
#loc134 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":111:16)
#loc135 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":116:12)
#loc136 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":116:25)
#loc137 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":116:38)
#loc138 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":116:52)
#loc139 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":116:66)
#loc140 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":116:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":120:1)
#loc142 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":134:1)
#loc143 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":122:5)
#loc144 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":122:12)
#loc145 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":124:12)
#loc146 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":124:5)
#loc147 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":125:5)
#loc148 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":129:5)
#loc149 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":125:8)
#loc150 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":126:5)
#loc151 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":128:9)
#loc152 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":128:16)
#loc153 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":128:22)
#loc154 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":133:12)
#loc155 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":133:25)
#loc156 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":133:38)
#loc157 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":133:52)
#loc158 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":133:66)
#loc159 = loc("CWE78_OS_Command_Injection__char_file_execlp_05.c":133:5)
#loc160 = loc(fused[#loc1, #loc2])
#loc161 = loc(fused[#loc3, #loc4])
#loc162 = loc(fused[#loc5, #loc6])
#loc163 = loc(fused[#loc7, #loc8])
#loc164 = loc(fused[#loc9, #loc10])
#loc165 = loc(fused[#loc11, #loc12])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc17, #loc18])
#loc168 = loc(fused[#loc20, #loc21])
#loc169 = loc(fused[#loc22, #loc23])
#loc170 = loc(fused[#loc26, #loc27])
#loc171 = loc(fused[#loc28, #loc29])
#loc172 = loc(fused[#loc31, #loc30])
#loc173 = loc(fused[#loc32, #loc33])
#loc174 = loc(fused[#loc35, #loc33])
#loc175 = loc(fused[#loc36, #loc37])
#loc176 = loc(fused[#loc38, #loc39])
#loc177 = loc(fused[#loc40, #loc41])
#loc178 = loc(fused[#loc44, #loc45])
#loc179 = loc(fused[#loc46, #loc47])
#loc180 = loc(fused[#loc46, #loc48])
#loc181 = loc(fused[#loc49, #loc45])
#loc182 = loc(fused[#loc51, #loc52])
#loc183 = loc(fused[#loc53, #loc54])
#loc184 = loc(fused[#loc55, #loc56])
#loc185 = loc(fused[#loc57, #loc54])
#loc186 = loc(fused[#loc58, #loc59])
#loc187 = loc(fused[#loc63, #loc64])
#loc188 = loc(fused[#loc66, #loc67])
#loc189 = loc(fused[#loc68, #loc59])
#loc190 = loc(fused[#loc71, #loc70])
#loc191 = loc(fused[#loc80, #loc81])
#loc192 = loc(fused[#loc82, #loc83])
#loc193 = loc(fused[#loc84, #loc85])
#loc194 = loc(fused[#loc86, #loc87])
#loc195 = loc(fused[#loc88, #loc89])
#loc196 = loc(fused[#loc94, #loc95])
#loc199 = loc(fused[#loc105, #loc106])
#loc200 = loc(fused[#loc109, #loc110])
#loc201 = loc(fused[#loc113, #loc112])
#loc202 = loc(fused[#loc114, #loc115])
#loc203 = loc(fused[#loc117, #loc118])
#loc204 = loc(fused[#loc120, #loc121])
#loc205 = loc(fused[#loc122, #loc123])
#loc206 = loc(fused[#loc125, #loc124])
#loc207 = loc(fused[#loc126, #loc127])
#loc208 = loc(fused[#loc129, #loc130, #loc131, #loc127])
#loc209 = loc(fused[#loc141, #loc142])
#loc210 = loc(fused[#loc143, #loc144])
#loc211 = loc(fused[#loc146, #loc145])
#loc212 = loc(fused[#loc147, #loc148])
#loc213 = loc(fused[#loc150, #loc148])
