!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @remove(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"removemebad.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"remove failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc36)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc37)
  ^bb2:  // pred: ^bb1
    %0 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc3)
    %1 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc3)
    %2 = cir.call @remove(%1) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc13)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc14)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc38)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc39)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc6)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc6)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc16)
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc12)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc8)
  } loc(#loc35)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc41)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc18)
  } loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"removemegood.txt\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc43)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc44)
  ^bb2:  // pred: ^bb1
    %0 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc21)
    %1 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc21)
    %2 = cir.call @remove(%1) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc28)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc45)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc46)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc31)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc23)
  } loc(#loc42)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":158:1)
#loc2 = loc("/usr/include/stdio.h":158:44)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":36:16)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":38:19)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":30:1)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":40:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":32:5)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":32:10)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":36:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":39:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":36:9)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":36:38)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":37:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":38:9)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":58:1)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":61:1)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":60:5)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":60:11)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":52:16)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":47:1)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":56:1)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":49:5)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":49:10)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":52:5)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":55:5)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":52:9)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":52:39)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":53:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":54:19)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":54:9)
#loc33 = loc(fused[#loc1, #loc2])
#loc34 = loc(fused[#loc4, #loc5])
#loc35 = loc(fused[#loc7, #loc8])
#loc36 = loc(fused[#loc9, #loc10])
#loc37 = loc(fused[#loc11, #loc12])
#loc38 = loc(fused[#loc13, #loc14])
#loc39 = loc(fused[#loc15, #loc12])
#loc40 = loc(fused[#loc17, #loc18])
#loc41 = loc(fused[#loc19, #loc20])
#loc42 = loc(fused[#loc22, #loc23])
#loc43 = loc(fused[#loc24, #loc25])
#loc44 = loc(fused[#loc26, #loc27])
#loc45 = loc(fused[#loc28, #loc29])
#loc46 = loc(fused[#loc30, #loc27])
