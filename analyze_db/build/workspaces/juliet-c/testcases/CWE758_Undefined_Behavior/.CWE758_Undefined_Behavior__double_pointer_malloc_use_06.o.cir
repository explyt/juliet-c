!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc158)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc159)
  cir.func private @printDoubleLine(!cir.double) loc(#loc160)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_malloc_use_06_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc163)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc166)
          %4 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc167)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc22)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc168)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc169)
          cir.store %8, %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc166)
          cir.scope {
            %16 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc27)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc28)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc171)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc31)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc32)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
            } loc(#loc172)
          } loc(#loc170)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc21)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc33)
          cir.store %10, %4 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc167)
          %11 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc34)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc35)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc35)
          cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
          %14 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc36)
          %15 = cir.load %14 : !cir.ptr<!cir.double>, !cir.double loc(#loc37)
          cir.call @printDoubleLine(%15) : (!cir.double) -> () loc(#loc38)
        } loc(#loc165)
      } loc(#loc164)
    } loc(#loc162)
    cir.return loc(#loc10)
  } loc(#loc161)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_malloc_use_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc175)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    cir.return loc(#loc40)
  } loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc52)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc53)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc179)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc182)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc183)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc64)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc184)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc185)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc183)
          cir.scope {
            %20 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc69)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc70)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc187)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc72)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc73)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc74)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc72)
            } loc(#loc188)
          } loc(#loc186)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc75)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc189)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc75)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc190)
          cir.store %12, %3 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc191)
          cir.scope {
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc82)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc83)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.double>, !cir.bool loc(#loc193)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc85)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc86)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc87)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc85)
            } loc(#loc194)
          } loc(#loc192)
          %13 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc88)
          %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc89)
          cir.store %13, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc195)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc91)
          %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc92)
          cir.store %15, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc196)
          cir.scope {
            %20 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc198)
            %21 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc97)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc98)
            cir.store %22, %20 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc198)
            %23 = cir.load deref %20 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc99)
            %24 = cir.load %23 : !cir.ptr<!cir.double>, !cir.double loc(#loc100)
            cir.call @printDoubleLine(%24) : (!cir.double) -> () loc(#loc101)
          } loc(#loc197)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc102)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc103)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc103)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc102)
        } loc(#loc181)
      } loc(#loc180)
    } loc(#loc178)
    cir.return loc(#loc49)
  } loc(#loc177)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc108)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc109)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc201)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc204)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc205)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc117)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc206)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc207)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc205)
          cir.scope {
            %20 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc122)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc123)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc209)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc125)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc126)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc127)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc125)
            } loc(#loc210)
          } loc(#loc208)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc128)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc211)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc212)
          cir.store %12, %3 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc213)
          cir.scope {
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc135)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc136)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.double>, !cir.bool loc(#loc215)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc138)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc139)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc140)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc138)
            } loc(#loc216)
          } loc(#loc214)
          %13 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc141)
          %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc142)
          cir.store %13, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc217)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc144)
          %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc145)
          cir.store %15, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc218)
          cir.scope {
            %20 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc220)
            %21 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc150)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc151)
            cir.store %22, %20 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc220)
            %23 = cir.load deref %20 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc152)
            %24 = cir.load %23 : !cir.ptr<!cir.double>, !cir.double loc(#loc153)
            cir.call @printDoubleLine(%24) : (!cir.double) -> () loc(#loc154)
          } loc(#loc219)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc155)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc156)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc156)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
        } loc(#loc203)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc105)
  } loc(#loc199)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc9 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":25:1)
#loc10 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":37:1)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":27:5)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":36:5)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":27:8)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":27:27)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":28:5)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":29:9)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":35:9)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":30:13)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":30:69)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":32:13)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":32:30)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":30:46)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":30:53)
#loc24 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":30:68)
#loc25 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":31:13)
#loc26 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":31:44)
#loc27 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":31:17)
#loc28 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":31:28)
#loc29 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":31:34)
#loc30 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":31:35)
#loc31 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":31:41)
#loc32 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":31:40)
#loc33 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":32:29)
#loc34 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":33:13)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":33:18)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":34:30)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":34:29)
#loc38 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":34:13)
#loc39 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":94:1)
#loc40 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":98:1)
#loc41 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":96:5)
#loc42 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":96:11)
#loc43 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":97:5)
#loc44 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":97:11)
#loc45 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":49:19)
#loc48 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":44:1)
#loc49 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":69:1)
#loc50 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":46:5)
#loc51 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":68:5)
#loc52 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":46:8)
#loc53 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":46:27)
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":47:5)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":50:5)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":52:5)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":49:9)
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":53:9)
#loc59 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":67:9)
#loc60 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":54:13)
#loc61 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":54:22)
#loc62 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":55:13)
#loc63 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":55:69)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":55:46)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":55:53)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":55:68)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":56:13)
#loc68 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":56:44)
#loc69 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":56:17)
#loc70 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":56:28)
#loc71 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":56:34)
#loc72 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":56:35)
#loc73 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":56:41)
#loc74 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":56:40)
#loc75 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":58:30)
#loc76 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":58:37)
#loc77 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":58:50)
#loc78 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":58:51)
#loc79 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":58:13)
#loc80 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":59:13)
#loc81 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":59:41)
#loc82 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":59:17)
#loc83 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":59:25)
#loc84 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":59:31)
#loc85 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":59:32)
#loc86 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":59:38)
#loc87 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":59:37)
#loc88 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":60:21)
#loc89 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":60:14)
#loc90 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":60:13)
#loc91 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":61:24)
#loc92 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":61:14)
#loc93 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":61:13)
#loc94 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":62:13)
#loc95 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":65:13)
#loc96 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":63:17)
#loc97 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":63:34)
#loc98 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":63:33)
#loc99 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":64:34)
#loc100 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":64:33)
#loc101 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":64:17)
#loc102 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":66:13)
#loc103 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":66:18)
#loc104 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":72:1)
#loc105 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":92:1)
#loc106 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":74:5)
#loc107 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":91:5)
#loc108 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":74:8)
#loc109 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":74:27)
#loc110 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":75:5)
#loc111 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":76:9)
#loc112 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":90:9)
#loc113 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":77:13)
#loc114 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":77:22)
#loc115 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":78:13)
#loc116 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":78:69)
#loc117 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":78:46)
#loc118 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":78:53)
#loc119 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":78:68)
#loc120 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":79:13)
#loc121 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":79:44)
#loc122 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":79:17)
#loc123 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":79:28)
#loc124 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":79:34)
#loc125 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":79:35)
#loc126 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":79:41)
#loc127 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":79:40)
#loc128 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":81:30)
#loc129 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":81:37)
#loc130 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":81:50)
#loc131 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":81:51)
#loc132 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":81:13)
#loc133 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":82:13)
#loc134 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":82:41)
#loc135 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":82:17)
#loc136 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":82:25)
#loc137 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":82:31)
#loc138 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":82:32)
#loc139 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":82:38)
#loc140 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":82:37)
#loc141 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":83:21)
#loc142 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":83:14)
#loc143 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":83:13)
#loc144 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":84:24)
#loc145 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":84:14)
#loc146 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":84:13)
#loc147 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":85:13)
#loc148 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":88:13)
#loc149 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":86:17)
#loc150 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":86:34)
#loc151 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":86:33)
#loc152 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":87:34)
#loc153 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":87:33)
#loc154 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":87:17)
#loc155 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":89:13)
#loc156 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_06.c":89:18)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc15, #loc12])
#loc165 = loc(fused[#loc16, #loc17])
#loc166 = loc(fused[#loc18, #loc19])
#loc167 = loc(fused[#loc20, #loc21])
#loc168 = loc(fused[#loc23, #loc24])
#loc169 = loc(fused[#loc22, #loc19])
#loc170 = loc(fused[#loc25, #loc26])
#loc171 = loc(fused[#loc27, #loc28])
#loc172 = loc(fused[#loc29, #loc26])
#loc173 = loc(fused[#loc39, #loc40])
#loc174 = loc(fused[#loc41, #loc42])
#loc175 = loc(fused[#loc43, #loc44])
#loc176 = loc(fused[#loc45, #loc46])
#loc177 = loc(fused[#loc48, #loc49])
#loc178 = loc(fused[#loc50, #loc51])
#loc179 = loc(fused[#loc52, #loc53])
#loc180 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc181 = loc(fused[#loc58, #loc59])
#loc182 = loc(fused[#loc60, #loc61])
#loc183 = loc(fused[#loc62, #loc63])
#loc184 = loc(fused[#loc65, #loc66])
#loc185 = loc(fused[#loc64, #loc63])
#loc186 = loc(fused[#loc67, #loc68])
#loc187 = loc(fused[#loc69, #loc70])
#loc188 = loc(fused[#loc71, #loc68])
#loc189 = loc(fused[#loc76, #loc77])
#loc190 = loc(fused[#loc75, #loc78])
#loc191 = loc(fused[#loc79, #loc78])
#loc192 = loc(fused[#loc80, #loc81])
#loc193 = loc(fused[#loc82, #loc83])
#loc194 = loc(fused[#loc84, #loc81])
#loc195 = loc(fused[#loc90, #loc88])
#loc196 = loc(fused[#loc93, #loc91])
#loc197 = loc(fused[#loc94, #loc95])
#loc198 = loc(fused[#loc96, #loc97])
#loc199 = loc(fused[#loc104, #loc105])
#loc200 = loc(fused[#loc106, #loc107])
#loc201 = loc(fused[#loc108, #loc109])
#loc202 = loc(fused[#loc110, #loc107])
#loc203 = loc(fused[#loc111, #loc112])
#loc204 = loc(fused[#loc113, #loc114])
#loc205 = loc(fused[#loc115, #loc116])
#loc206 = loc(fused[#loc118, #loc119])
#loc207 = loc(fused[#loc117, #loc116])
#loc208 = loc(fused[#loc120, #loc121])
#loc209 = loc(fused[#loc122, #loc123])
#loc210 = loc(fused[#loc124, #loc121])
#loc211 = loc(fused[#loc129, #loc130])
#loc212 = loc(fused[#loc128, #loc131])
#loc213 = loc(fused[#loc132, #loc131])
#loc214 = loc(fused[#loc133, #loc134])
#loc215 = loc(fused[#loc135, #loc136])
#loc216 = loc(fused[#loc137, #loc134])
#loc217 = loc(fused[#loc143, #loc141])
#loc218 = loc(fused[#loc146, #loc144])
#loc219 = loc(fused[#loc147, #loc148])
#loc220 = loc(fused[#loc149, #loc150])
