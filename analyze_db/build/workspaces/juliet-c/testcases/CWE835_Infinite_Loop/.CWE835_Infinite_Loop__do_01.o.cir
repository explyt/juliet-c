!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__do_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc49)
  cir.func no_proto @CWE835_Infinite_Loop__do_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc51)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc6)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.scope {
      cir.do {
        cir.scope {
          %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
          cir.call @printIntLine(%2) : (!s32i) -> () loc(#loc12)
          %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc14)
          %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc13)
          %6 = cir.const #cir.int<256> : !s32i loc(#loc15)
          %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc54)
          cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
        } loc(#loc53)
        cir.yield loc(#loc8)
      } while {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
        %3 = cir.const #cir.int<0> : !s32i loc(#loc19)
        %4 = cir.cmp(ge, %2, %3) : !s32i, !cir.bool loc(#loc56)
        cir.condition(%4) loc(#loc20)
      } loc(#loc52)
    } loc(#loc52)
    cir.return loc(#loc4)
  } loc(#loc50)
  cir.func no_proto @CWE835_Infinite_Loop__do_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc58)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    cir.return loc(#loc22)
  } loc(#loc57)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc60)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc28)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.scope {
      cir.do {
        cir.scope {
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc36)
            %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc64)
            cir.if %10 {
              cir.break loc(#loc38)
            } loc(#loc65)
          } loc(#loc63)
          %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          cir.call @printIntLine(%2) : (!s32i) -> () loc(#loc40)
          %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc41)
          %6 = cir.const #cir.int<256> : !s32i loc(#loc43)
          %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc66)
          cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
        } loc(#loc62)
        cir.yield loc(#loc30)
      } while {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
        %3 = cir.const #cir.int<0> : !s32i loc(#loc47)
        %4 = cir.cmp(ge, %2, %3) : !s32i, !cir.bool loc(#loc68)
        cir.condition(%4) loc(#loc48)
      } loc(#loc61)
    } loc(#loc61)
    cir.return loc(#loc26)
  } loc(#loc59)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__do_01.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE835_Infinite_Loop__do_01.c":10:1)
#loc4 = loc("CWE835_Infinite_Loop__do_01.c":20:1)
#loc5 = loc("CWE835_Infinite_Loop__do_01.c":12:5)
#loc6 = loc("CWE835_Infinite_Loop__do_01.c":12:13)
#loc7 = loc("CWE835_Infinite_Loop__do_01.c":15:5)
#loc8 = loc("CWE835_Infinite_Loop__do_01.c":19:19)
#loc9 = loc("CWE835_Infinite_Loop__do_01.c":16:5)
#loc10 = loc("CWE835_Infinite_Loop__do_01.c":19:5)
#loc11 = loc("CWE835_Infinite_Loop__do_01.c":17:22)
#loc12 = loc("CWE835_Infinite_Loop__do_01.c":17:9)
#loc13 = loc("CWE835_Infinite_Loop__do_01.c":18:14)
#loc14 = loc("CWE835_Infinite_Loop__do_01.c":18:18)
#loc15 = loc("CWE835_Infinite_Loop__do_01.c":18:23)
#loc16 = loc("CWE835_Infinite_Loop__do_01.c":18:13)
#loc17 = loc("CWE835_Infinite_Loop__do_01.c":18:9)
#loc18 = loc("CWE835_Infinite_Loop__do_01.c":19:13)
#loc19 = loc("CWE835_Infinite_Loop__do_01.c":19:18)
#loc20 = loc("CWE835_Infinite_Loop__do_01.c":19:15)
#loc21 = loc("CWE835_Infinite_Loop__do_01.c":43:1)
#loc22 = loc("CWE835_Infinite_Loop__do_01.c":46:1)
#loc23 = loc("CWE835_Infinite_Loop__do_01.c":45:5)
#loc24 = loc("CWE835_Infinite_Loop__do_01.c":45:11)
#loc25 = loc("CWE835_Infinite_Loop__do_01.c":27:1)
#loc26 = loc("CWE835_Infinite_Loop__do_01.c":41:1)
#loc27 = loc("CWE835_Infinite_Loop__do_01.c":29:5)
#loc28 = loc("CWE835_Infinite_Loop__do_01.c":29:13)
#loc29 = loc("CWE835_Infinite_Loop__do_01.c":31:5)
#loc30 = loc("CWE835_Infinite_Loop__do_01.c":40:20)
#loc31 = loc("CWE835_Infinite_Loop__do_01.c":32:5)
#loc32 = loc("CWE835_Infinite_Loop__do_01.c":40:5)
#loc33 = loc("CWE835_Infinite_Loop__do_01.c":34:9)
#loc34 = loc("CWE835_Infinite_Loop__do_01.c":37:9)
#loc35 = loc("CWE835_Infinite_Loop__do_01.c":34:13)
#loc36 = loc("CWE835_Infinite_Loop__do_01.c":34:18)
#loc37 = loc("CWE835_Infinite_Loop__do_01.c":35:9)
#loc38 = loc("CWE835_Infinite_Loop__do_01.c":36:13)
#loc39 = loc("CWE835_Infinite_Loop__do_01.c":38:22)
#loc40 = loc("CWE835_Infinite_Loop__do_01.c":38:9)
#loc41 = loc("CWE835_Infinite_Loop__do_01.c":39:14)
#loc42 = loc("CWE835_Infinite_Loop__do_01.c":39:18)
#loc43 = loc("CWE835_Infinite_Loop__do_01.c":39:23)
#loc44 = loc("CWE835_Infinite_Loop__do_01.c":39:13)
#loc45 = loc("CWE835_Infinite_Loop__do_01.c":39:9)
#loc46 = loc("CWE835_Infinite_Loop__do_01.c":40:14)
#loc47 = loc("CWE835_Infinite_Loop__do_01.c":40:19)
#loc48 = loc("CWE835_Infinite_Loop__do_01.c":40:16)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc3, #loc4])
#loc51 = loc(fused[#loc5, #loc6])
#loc52 = loc(fused[#loc7, #loc8])
#loc53 = loc(fused[#loc9, #loc10])
#loc54 = loc(fused[#loc16, #loc15])
#loc55 = loc(fused[#loc17, #loc15])
#loc56 = loc(fused[#loc18, #loc19])
#loc57 = loc(fused[#loc21, #loc22])
#loc58 = loc(fused[#loc23, #loc24])
#loc59 = loc(fused[#loc25, #loc26])
#loc60 = loc(fused[#loc27, #loc28])
#loc61 = loc(fused[#loc29, #loc30])
#loc62 = loc(fused[#loc31, #loc32])
#loc63 = loc(fused[#loc33, #loc34])
#loc64 = loc(fused[#loc35, #loc36])
#loc65 = loc(fused[#loc37, #loc34])
#loc66 = loc(fused[#loc44, #loc43])
#loc67 = loc(fused[#loc45, #loc43])
#loc68 = loc(fused[#loc46, #loc47])
