!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":27:21)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":27:25)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":240:10)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":240:14)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":240:20)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":240:32)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":85:26)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":85:30)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":138:26)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":138:30)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":186:25)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":186:29)
#true = #cir.bool<true> : !cir.bool
#loc340 = loc(fused[#loc17, #loc18])
#loc372 = loc(fused[#loc102, #loc103])
#loc373 = loc(fused[#loc104, #loc105])
#loc379 = loc(fused[#loc126, #loc127])
#loc407 = loc(fused[#loc205, #loc206])
#loc435 = loc(fused[#loc282, #loc283])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc333)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc334)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc335)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc336)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc337)
  cir.func private @printIntLine(!s32i) loc(#loc338)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc340)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc19)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc337)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc22)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc344)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc345)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc345)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc345)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc33)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc347)
            cir.if %9 {
              %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc39)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc39)
              cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc349)
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc42)
                cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc351)
                cir.for : cond {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc44)
                  %16 = cir.const #cir.int<10> : !s32i loc(#loc45)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc352)
                  cir.condition(%17) loc(#loc46)
                } body {
                  cir.scope {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc48)
                    %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc49)
                    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc49)
                    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc49)
                    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc50)
                  } loc(#loc353)
                  cir.yield loc(#loc41)
                } step {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc51)
                  %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc52)
                  cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc354)
                  cir.yield loc(#loc350)
                } loc(#loc350)
              } loc(#loc350)
            } else {
              %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc53)
            } loc(#loc348)
          } loc(#loc346)
        } loc(#loc343)
      } loc(#loc342)
    } loc(#loc341)
    cir.return loc(#loc16)
  } loc(#loc339)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc356)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc59)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc359)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc359)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc359)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc67)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc68)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc68)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc68)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc68)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc68)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc68)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc68)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc68)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc334)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc70)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc71)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc361)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc75)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc76)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc363)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc79)
        } loc(#loc362)
      } loc(#loc360)
    } loc(#loc358)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc337)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc83)
    cir.return loc(#loc55)
  } loc(#loc355)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc366)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc367)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc88)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc368)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc90)
    cir.return loc(#loc85)
  } loc(#loc365)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc369)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc370)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc99)
  cir.func @main(%arg0: !s32i loc(fused[#loc102, #loc103]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc104, #loc105])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc372)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc373)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc101)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc106)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc107)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc108)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc108)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc109)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc96)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc374)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21_good() : () -> () loc(#loc111)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc97)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc98)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc375)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21_bad() : () -> () loc(#loc115)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc99)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc118)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    cir.return %17 : !s32i loc(#loc376)
  } loc(#loc371)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc377)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc123)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc126, #loc127])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc379)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc377)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc131)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc131)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc122)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc122)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc135)
      } else {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc383)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc384)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc384)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc384)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc145)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc386)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc148)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc387)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc146)
                cir.yield %15 : !cir.bool loc(#loc146)
              }, false {
                %15 = cir.const #false loc(#loc146)
                cir.yield %15 : !cir.bool loc(#loc146)
              }) : (!cir.bool) -> !cir.bool loc(#loc146)
              cir.yield %14 : !cir.bool loc(#loc146)
            }, false {
              %11 = cir.const #false loc(#loc146)
              cir.yield %11 : !cir.bool loc(#loc146)
            }) : (!cir.bool) -> !cir.bool loc(#loc146)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc153)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc155)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc155)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc389)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc158)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc391)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc160)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc161)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc392)
                  cir.condition(%18) loc(#loc162)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc165)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc165)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc165)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc166)
                  } loc(#loc393)
                  cir.yield loc(#loc157)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc167)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc168)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc394)
                  cir.yield loc(#loc390)
                } loc(#loc390)
              } loc(#loc390)
            } else {
              %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc123)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc123)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc169)
            } loc(#loc388)
          } loc(#loc385)
        } loc(#loc382)
      } loc(#loc381)
    } loc(#loc380)
    cir.return loc(#loc125)
  } loc(#loc378)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc396)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc175)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc399)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc399)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc399)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc183)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc184)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc184)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc184)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc184)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc184)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc184)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc184)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc184)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc334)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc185)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc186)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc187)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc187)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc401)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc191)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc192)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc403)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc195)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc195)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc196)
        } loc(#loc402)
      } loc(#loc400)
    } loc(#loc398)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc197)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc377)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc200)
    cir.return loc(#loc171)
  } loc(#loc395)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc405)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc205, #loc206])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc407)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc405)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc210)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc210)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc411)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc412)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc412)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc412)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc221)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc414)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc224)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc415)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc222)
                cir.yield %15 : !cir.bool loc(#loc222)
              }, false {
                %15 = cir.const #false loc(#loc222)
                cir.yield %15 : !cir.bool loc(#loc222)
              }) : (!cir.bool) -> !cir.bool loc(#loc222)
              cir.yield %14 : !cir.bool loc(#loc222)
            }, false {
              %11 = cir.const #false loc(#loc222)
              cir.yield %11 : !cir.bool loc(#loc222)
            }) : (!cir.bool) -> !cir.bool loc(#loc222)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc229)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc230)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc231)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc231)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc417)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc234)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc419)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc237)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc420)
                  cir.condition(%18) loc(#loc238)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc240)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc241)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc241)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc242)
                  } loc(#loc421)
                  cir.yield loc(#loc233)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc244)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc422)
                  cir.yield loc(#loc418)
                } loc(#loc418)
              } loc(#loc418)
            } else {
              %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc245)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc245)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc246)
            } loc(#loc416)
          } loc(#loc413)
        } loc(#loc410)
      } loc(#loc409)
    } loc(#loc408)
    cir.return loc(#loc204)
  } loc(#loc406)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc424)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc251)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc252)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc427)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc427)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc427)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc260)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc261)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc261)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc261)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc261)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc261)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc261)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc261)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc261)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc334)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc262)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc263)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc264)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc264)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc429)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc268)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc269)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc431)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc272)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc272)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc273)
        } loc(#loc430)
      } loc(#loc428)
    } loc(#loc426)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc274)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc405)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc432)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc277)
    cir.return loc(#loc248)
  } loc(#loc423)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc433)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc282, #loc283])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc435)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc433)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc287)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc287)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc439)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc440)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc440)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc440)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc298)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc442)
            cir.if %9 {
              %10 = cir.const #cir.int<1> : !s32i loc(#loc302)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc303)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc304)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc304)
              cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc444)
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc307)
                cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc446)
                cir.for : cond {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc309)
                  %16 = cir.const #cir.int<10> : !s32i loc(#loc310)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc447)
                  cir.condition(%17) loc(#loc311)
                } body {
                  cir.scope {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc313)
                    %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc314)
                    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc314)
                    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc314)
                    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc315)
                  } loc(#loc448)
                  cir.yield loc(#loc306)
                } step {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc316)
                  %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc317)
                  cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc449)
                  cir.yield loc(#loc445)
                } loc(#loc445)
              } loc(#loc445)
            } else {
              %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc318)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc318)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc319)
            } loc(#loc443)
          } loc(#loc441)
        } loc(#loc438)
      } loc(#loc437)
    } loc(#loc436)
    cir.return loc(#loc281)
  } loc(#loc434)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc451)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc324)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc325)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc452)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc327)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc453)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc329)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc433)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc454)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc331)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc332)
    cir.return loc(#loc321)
  } loc(#loc450)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":68:23)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":25:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":25:24)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":47:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":27:1)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":51:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":28:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":29:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":50:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":29:8)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":30:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":31:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":49:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":32:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":32:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":33:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":33:34)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":36:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":48:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":36:17)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":36:25)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":37:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":44:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":46:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":38:32)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":38:24)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":38:17)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:17)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":43:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:25)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:21)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:28)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:32)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:30)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":41:17)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":42:41)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":42:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":42:21)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:37)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:36)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":47:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":53:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":73:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":55:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":55:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":57:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":57:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":57:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":58:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":70:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":59:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":59:45)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":69:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:32)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:49)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:59)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":62:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":65:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":67:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":64:25)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":64:20)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":64:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":64:36)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":68:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":71:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":71:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":72:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":72:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":224:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":229:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":226:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":226:14)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":227:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":227:14)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":228:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":228:13)
#loc92 = loc("/usr/include/stdlib.h":575:1)
#loc93 = loc("/usr/include/stdlib.h":575:41)
#loc94 = loc("/usr/include/time.h":76:1)
#loc95 = loc("/usr/include/time.h":76:38)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":245:15)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":247:15)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":250:15)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":252:15)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":240:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":255:1)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":241:1)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":243:27)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":243:22)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":243:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":245:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":246:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":246:62)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":247:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":250:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":251:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":251:61)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":252:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":254:12)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":254:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":80:1)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":80:29)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":90:19)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":109:27)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":85:1)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":113:1)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":86:1)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":87:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":112:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":87:8)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":88:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":91:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":93:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":90:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":94:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":111:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":95:13)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":95:17)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":96:13)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":96:34)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":110:13)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:17)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:25)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:27)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:30)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:38)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:40)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":99:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":106:13)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":108:13)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":100:32)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":100:24)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":100:17)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:17)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":105:17)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:25)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:21)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:28)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:32)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:30)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":103:17)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":104:41)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":104:34)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":104:21)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:37)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:36)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":109:17)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":115:1)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":135:1)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":117:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":117:9)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":119:13)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":119:12)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":119:5)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":120:5)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":132:5)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":121:9)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":121:45)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:9)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":131:9)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:19)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:32)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:49)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:13)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:59)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":124:9)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":127:9)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":129:9)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":126:25)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":126:20)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":126:13)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":126:36)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":130:23)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":130:13)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":133:22)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":133:5)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":134:18)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":134:5)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":81:1)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":81:29)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":138:1)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":161:1)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":139:1)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":140:5)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":160:5)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":140:8)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":141:5)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":142:9)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":159:9)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":143:13)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":143:17)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":144:13)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":144:34)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:13)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":158:13)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:17)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:25)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:27)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:30)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:38)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:40)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":147:13)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":154:13)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":156:13)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":148:32)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":148:24)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":148:17)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:17)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":153:17)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:25)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:21)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:28)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:32)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:30)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":151:17)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":152:41)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":152:34)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":152:21)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:37)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:36)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":157:27)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":157:17)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":163:1)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":183:1)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":165:5)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":165:9)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":167:13)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":167:12)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":167:5)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":168:5)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":180:5)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":169:9)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":169:45)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:9)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":179:9)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:19)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:32)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:49)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:13)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:59)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":172:9)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":175:9)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":177:9)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":174:25)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":174:20)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":174:13)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":174:36)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":178:23)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":178:13)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":181:22)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":181:5)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":182:18)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":182:5)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":82:1)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":82:28)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":186:1)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":210:1)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":187:1)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":188:5)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":209:5)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":188:8)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":189:5)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":190:9)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":208:9)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":191:13)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":191:17)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":192:13)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":192:34)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":195:13)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":207:13)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":195:17)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":195:25)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":196:13)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":203:13)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":205:13)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":197:32)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":197:24)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":197:17)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:17)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":202:17)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:25)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:21)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:28)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:32)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:30)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":200:17)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":201:41)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":201:34)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":201:21)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:37)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:36)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":206:27)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":206:17)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":212:1)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":222:1)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":214:5)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":214:9)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":216:13)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":216:12)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":216:5)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":219:12)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":219:5)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":220:21)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":220:5)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":221:17)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":221:5)
#loc333 = loc(fused[#loc1, #loc2])
#loc334 = loc(fused[#loc3, #loc4])
#loc335 = loc(fused[#loc5, #loc6])
#loc336 = loc(fused[#loc7, #loc8])
#loc337 = loc(fused[#loc10, #loc11])
#loc338 = loc(fused[#loc12, #loc13])
#loc339 = loc(fused[#loc15, #loc16])
#loc341 = loc(fused[#loc20, #loc21])
#loc342 = loc(fused[#loc23, #loc21])
#loc343 = loc(fused[#loc24, #loc25])
#loc344 = loc(fused[#loc26, #loc27])
#loc345 = loc(fused[#loc28, #loc29])
#loc346 = loc(fused[#loc30, #loc31])
#loc347 = loc(fused[#loc32, #loc33])
#loc348 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc349 = loc(fused[#loc39, #loc37])
#loc350 = loc(fused[#loc40, #loc41])
#loc351 = loc(fused[#loc43, #loc42])
#loc352 = loc(fused[#loc44, #loc45])
#loc353 = loc(fused[#loc47, #loc41])
#loc354 = loc(fused[#loc52, #loc51])
#loc355 = loc(fused[#loc54, #loc55])
#loc356 = loc(fused[#loc56, #loc57])
#loc357 = loc(fused[#loc60, #loc58])
#loc358 = loc(fused[#loc61, #loc62])
#loc359 = loc(fused[#loc63, #loc64])
#loc360 = loc(fused[#loc65, #loc66])
#loc361 = loc(fused[#loc70, #loc71])
#loc362 = loc(fused[#loc72, #loc73, #loc74, #loc66])
#loc363 = loc(fused[#loc77, #loc78])
#loc364 = loc(fused[#loc81, #loc80])
#loc365 = loc(fused[#loc84, #loc85])
#loc366 = loc(fused[#loc86, #loc87])
#loc367 = loc(fused[#loc88, #loc89])
#loc368 = loc(fused[#loc90, #loc91])
#loc369 = loc(fused[#loc92, #loc93])
#loc370 = loc(fused[#loc94, #loc95])
#loc371 = loc(fused[#loc100, #loc101])
#loc374 = loc(fused[#loc111, #loc112])
#loc375 = loc(fused[#loc115, #loc116])
#loc376 = loc(fused[#loc119, #loc118])
#loc377 = loc(fused[#loc120, #loc121])
#loc378 = loc(fused[#loc124, #loc125])
#loc380 = loc(fused[#loc129, #loc130])
#loc381 = loc(fused[#loc132, #loc133, #loc134, #loc130])
#loc382 = loc(fused[#loc136, #loc137])
#loc383 = loc(fused[#loc138, #loc139])
#loc384 = loc(fused[#loc140, #loc141])
#loc385 = loc(fused[#loc142, #loc143])
#loc386 = loc(fused[#loc144, #loc145])
#loc387 = loc(fused[#loc147, #loc149])
#loc388 = loc(fused[#loc150, #loc151, #loc152, #loc143])
#loc389 = loc(fused[#loc155, #loc153])
#loc390 = loc(fused[#loc156, #loc157])
#loc391 = loc(fused[#loc159, #loc158])
#loc392 = loc(fused[#loc160, #loc161])
#loc393 = loc(fused[#loc163, #loc157])
#loc394 = loc(fused[#loc168, #loc167])
#loc395 = loc(fused[#loc170, #loc171])
#loc396 = loc(fused[#loc172, #loc173])
#loc397 = loc(fused[#loc176, #loc174])
#loc398 = loc(fused[#loc177, #loc178])
#loc399 = loc(fused[#loc179, #loc180])
#loc400 = loc(fused[#loc181, #loc182])
#loc401 = loc(fused[#loc186, #loc187])
#loc402 = loc(fused[#loc188, #loc189, #loc190, #loc182])
#loc403 = loc(fused[#loc193, #loc194])
#loc404 = loc(fused[#loc198, #loc197])
#loc405 = loc(fused[#loc201, #loc202])
#loc406 = loc(fused[#loc203, #loc204])
#loc408 = loc(fused[#loc208, #loc209])
#loc409 = loc(fused[#loc211, #loc209])
#loc410 = loc(fused[#loc212, #loc213])
#loc411 = loc(fused[#loc214, #loc215])
#loc412 = loc(fused[#loc216, #loc217])
#loc413 = loc(fused[#loc218, #loc219])
#loc414 = loc(fused[#loc220, #loc221])
#loc415 = loc(fused[#loc223, #loc225])
#loc416 = loc(fused[#loc226, #loc227, #loc228, #loc219])
#loc417 = loc(fused[#loc231, #loc229])
#loc418 = loc(fused[#loc232, #loc233])
#loc419 = loc(fused[#loc235, #loc234])
#loc420 = loc(fused[#loc236, #loc237])
#loc421 = loc(fused[#loc239, #loc233])
#loc422 = loc(fused[#loc244, #loc243])
#loc423 = loc(fused[#loc247, #loc248])
#loc424 = loc(fused[#loc249, #loc250])
#loc425 = loc(fused[#loc253, #loc251])
#loc426 = loc(fused[#loc254, #loc255])
#loc427 = loc(fused[#loc256, #loc257])
#loc428 = loc(fused[#loc258, #loc259])
#loc429 = loc(fused[#loc263, #loc264])
#loc430 = loc(fused[#loc265, #loc266, #loc267, #loc259])
#loc431 = loc(fused[#loc270, #loc271])
#loc432 = loc(fused[#loc275, #loc274])
#loc433 = loc(fused[#loc278, #loc279])
#loc434 = loc(fused[#loc280, #loc281])
#loc436 = loc(fused[#loc285, #loc286])
#loc437 = loc(fused[#loc288, #loc286])
#loc438 = loc(fused[#loc289, #loc290])
#loc439 = loc(fused[#loc291, #loc292])
#loc440 = loc(fused[#loc293, #loc294])
#loc441 = loc(fused[#loc295, #loc296])
#loc442 = loc(fused[#loc297, #loc298])
#loc443 = loc(fused[#loc299, #loc300, #loc301, #loc296])
#loc444 = loc(fused[#loc304, #loc302])
#loc445 = loc(fused[#loc305, #loc306])
#loc446 = loc(fused[#loc308, #loc307])
#loc447 = loc(fused[#loc309, #loc310])
#loc448 = loc(fused[#loc312, #loc306])
#loc449 = loc(fused[#loc317, #loc316])
#loc450 = loc(fused[#loc320, #loc321])
#loc451 = loc(fused[#loc322, #loc323])
#loc452 = loc(fused[#loc326, #loc324])
#loc453 = loc(fused[#loc328, #loc327])
#loc454 = loc(fused[#loc330, #loc329])
