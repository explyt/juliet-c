!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":32:52)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":32:102)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":32:106)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":39:52)
#true = #cir.bool<true> : !cir.bool
!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G = !cir.struct<class "CWE400_Resource_Exhaustion__rand_sleep_84::CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G" {!s32i} #cir.record.decl.ast>
#loc40 = loc(fused[#loc6, #loc7])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc38)
  cir.func  @_ZN41CWE400_Resource_Exhaustion__rand_sleep_8449CWE400_Resource_Exhaustion__rand_sleep_84_goodB2GC2Ei(%arg0: !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G> loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":32:52), %arg1: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>> loc(#loc8)
    cir.store %arg1, %1 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>>, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G> loc(#loc5)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    %4 = cir.get_member %2[0] {name = "count"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G> -> !cir.ptr<!s32i> loc(#loc10)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc12)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc12)
    %9 = cir.ternary(%8, true {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc12)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc12)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc12)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc12)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc12)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc12)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc12)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc12)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc12)
      cir.yield %23 : !u32i loc(#loc12)
    }, false {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc12)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc12)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc12)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc12)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc12)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc12)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc12)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc12)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc12)
      %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc12)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc12)
      %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc12)
      %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc12)
      cir.yield %27 : !u32i loc(#loc12)
    }) : (!cir.bool) -> !u32i loc(#loc12)
    %10 = cir.cast(integral, %9 : !u32i), !s32i loc(#loc12)
    %11 = cir.get_member %2[0] {name = "count"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G> -> !cir.ptr<!s32i> loc(#loc10)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc42)
    cir.return loc(#loc4)
  } loc(#loc39)
  cir.func  @_ZN41CWE400_Resource_Exhaustion__rand_sleep_8449CWE400_Resource_Exhaustion__rand_sleep_84_goodB2GC1Ei(!cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>, !s32i) alias(@_ZN41CWE400_Resource_Exhaustion__rand_sleep_8449CWE400_Resource_Exhaustion__rand_sleep_84_goodB2GC2Ei) loc(#loc39)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc43)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc44)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc18)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc19)
  cir.func  @_ZN41CWE400_Resource_Exhaustion__rand_sleep_8449CWE400_Resource_Exhaustion__rand_sleep_84_goodB2GD2Ev(%arg0: !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G> loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":39:52)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc22)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>> loc(#loc23)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>>, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G> loc(#loc22)
    cir.scope {
      %2 = cir.get_member %1[0] {name = "count"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G> -> !cir.ptr<!s32i> loc(#loc10)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc27)
      %5 = cir.cmp(gt, %3, %4) : !s32i, !cir.bool loc(#loc47)
      %6 = cir.ternary(%5, true {
        %7 = cir.get_member %1[0] {name = "count"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G> -> !cir.ptr<!s32i> loc(#loc10)
        %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %9 = cir.const #cir.int<2000> : !s32i loc(#loc30)
        %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc48)
        %11 = cir.ternary(%10, true {
          %12 = cir.const #true loc(#loc28)
          cir.yield %12 : !cir.bool loc(#loc28)
        }, false {
          %12 = cir.const #false loc(#loc28)
          cir.yield %12 : !cir.bool loc(#loc28)
        }) : (!cir.bool) -> !cir.bool loc(#loc28)
        cir.yield %11 : !cir.bool loc(#loc28)
      }, false {
        %7 = cir.const #false loc(#loc28)
        cir.yield %7 : !cir.bool loc(#loc28)
      }) : (!cir.bool) -> !cir.bool loc(#loc28)
      cir.if %6 {
        %7 = cir.get_member %1[0] {name = "count"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G> -> !cir.ptr<!s32i> loc(#loc10)
        %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc34)
        %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc34)
        %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc35)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc18)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc18)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc36)
      } else {
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc19)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc19)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc37)
      } loc(#loc49)
    } loc(#loc46)
    cir.return loc(#loc21)
  } loc(#loc45)
  cir.func  @_ZN41CWE400_Resource_Exhaustion__rand_sleep_8449CWE400_Resource_Exhaustion__rand_sleep_84_goodB2GD1Ev(!cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_843A3ACWE400_Resource_Exhaustion__rand_sleep_84_goodB2G>) alias(@_ZN41CWE400_Resource_Exhaustion__rand_sleep_8449CWE400_Resource_Exhaustion__rand_sleep_84_goodB2GD2Ev) loc(#loc45)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":32:1)
#loc4 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":37:1)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":33:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":34:13)
#loc10 = loc("./CWE400_Resource_Exhaustion__rand_sleep_84.h":56:9)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":34:5)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":36:13)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":36:5)
#loc14 = loc("/usr/include/unistd.h":480:1)
#loc15 = loc("/usr/include/unistd.h":480:43)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":45:19)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":49:19)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":39:1)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":51:1)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":40:1)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":42:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":50:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":42:9)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":42:17)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":42:19)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":42:22)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":42:31)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":43:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":46:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":48:5)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":44:15)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":44:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":45:9)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_84_goodB2G.cpp":49:9)
#loc38 = loc(fused[#loc1, #loc2])
#loc39 = loc(fused[#loc3, #loc4])
#loc41 = loc(fused[#loc11, #loc9])
#loc42 = loc(fused[#loc13, #loc12])
#loc43 = loc(fused[#loc14, #loc15])
#loc44 = loc(fused[#loc16, #loc17])
#loc45 = loc(fused[#loc20, #loc21])
#loc46 = loc(fused[#loc24, #loc25])
#loc47 = loc(fused[#loc26, #loc27])
#loc48 = loc(fused[#loc29, #loc30])
#loc49 = loc(fused[#loc31, #loc32, #loc33, #loc25])
