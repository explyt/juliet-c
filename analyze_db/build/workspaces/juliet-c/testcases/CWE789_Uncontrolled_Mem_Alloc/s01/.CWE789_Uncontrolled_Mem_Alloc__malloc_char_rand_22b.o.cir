!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":31:65)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":31:72)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":67:70)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":67:77)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":99:70)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":99:77)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":126:69)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":126:76)
#true = #cir.bool<true> : !cir.bool
#loc212 = loc(fused[#loc17, #loc18])
#loc230 = loc(fused[#loc63, #loc64])
#loc249 = loc(fused[#loc114, #loc115])
#loc268 = loc(fused[#loc163, #loc164])
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc205)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc206)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc207)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc209)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_badSink(%arg0: !u64i loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc212)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc19)
    cir.scope {
      %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_badGlobal : !cir.ptr<!s32i> loc(#loc205)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc22)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc216)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc218)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc219)
            cir.if %7 {
              %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc36)
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
              %10 = cir.const #cir.int<1> : !u64i loc(#loc221)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc222)
              %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc223)
              cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
              cir.scope {
                %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc226)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc47)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc48)
                  %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc49)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc47)
                } loc(#loc227)
              } loc(#loc225)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc50)
              %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc50)
              %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc53)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc54)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc54)
            } else {
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc56)
            } loc(#loc220)
          } loc(#loc217)
        } loc(#loc215)
      } loc(#loc214)
    } loc(#loc213)
    cir.return loc(#loc16)
  } loc(#loc211)
  cir.global "private" external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_goodB2G1Global : !s32i {alignment = 4 : i64} loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc60)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_goodB2G1Sink(%arg0: !u64i loc(fused[#loc63, #loc64])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc230)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc65)
    cir.scope {
      %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc228)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc68)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc68)
      cir.if %3 {
        %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc234)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc79)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc236)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc237)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc83)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc84)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc84)
              %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc238)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc82)
                cir.yield %14 : !cir.bool loc(#loc82)
              }, false {
                %14 = cir.const #false loc(#loc82)
                cir.yield %14 : !cir.bool loc(#loc82)
              }) : (!cir.bool) -> !cir.bool loc(#loc82)
              cir.yield %13 : !cir.bool loc(#loc82)
            }, false {
              %9 = cir.const #false loc(#loc82)
              cir.yield %9 : !cir.bool loc(#loc82)
            }) : (!cir.bool) -> !cir.bool loc(#loc82)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc88)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc89)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc240)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc241)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc242)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc97)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc245)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc99)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc100)
                  %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc101)
                  cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
                } loc(#loc246)
              } loc(#loc244)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc102)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc104)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc104)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc106)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc107)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc107)
            } else {
              %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc60)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc60)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc109)
            } loc(#loc239)
          } loc(#loc235)
        } loc(#loc233)
      } loc(#loc232)
    } loc(#loc231)
    cir.return loc(#loc62)
  } loc(#loc229)
  cir.global "private" external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_goodB2G2Global : !s32i {alignment = 4 : i64} loc(#loc247)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_goodB2G2Sink(%arg0: !u64i loc(fused[#loc114, #loc115])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc249)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc116)
    cir.scope {
      %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc247)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc119)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc119)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc253)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc127)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc255)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc256)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc131)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc132)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc132)
              %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc257)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc130)
                cir.yield %14 : !cir.bool loc(#loc130)
              }, false {
                %14 = cir.const #false loc(#loc130)
                cir.yield %14 : !cir.bool loc(#loc130)
              }) : (!cir.bool) -> !cir.bool loc(#loc130)
              cir.yield %13 : !cir.bool loc(#loc130)
            }, false {
              %9 = cir.const #false loc(#loc130)
              cir.yield %9 : !cir.bool loc(#loc130)
            }) : (!cir.bool) -> !cir.bool loc(#loc130)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc136)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc137)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc259)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc260)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc261)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc264)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc147)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc148)
                  %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc149)
                  cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
                } loc(#loc265)
              } loc(#loc263)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc150)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc152)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc152)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc154)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc155)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
            } else {
              %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc157)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc157)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc158)
            } loc(#loc258)
          } loc(#loc254)
        } loc(#loc252)
      } loc(#loc251)
    } loc(#loc250)
    cir.return loc(#loc113)
  } loc(#loc248)
  cir.global "private" external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_goodG2BGlobal : !s32i {alignment = 4 : i64} loc(#loc266)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_goodG2BSink(%arg0: !u64i loc(fused[#loc163, #loc164])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc268)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc165)
    cir.scope {
      %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc266)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc168)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc168)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc272)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc176)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc274)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc275)
            cir.if %7 {
              %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc182)
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc183)
              %10 = cir.const #cir.int<1> : !u64i loc(#loc277)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc278)
              %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc279)
              cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
              cir.scope {
                %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc191)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc191)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc282)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc193)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc194)
                  %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc195)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc193)
                } loc(#loc283)
              } loc(#loc281)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc196)
              %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc198)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc198)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc196)
              %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc200)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc201)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc202)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc201)
            } else {
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc203)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc203)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc204)
            } loc(#loc276)
          } loc(#loc273)
        } loc(#loc271)
      } loc(#loc270)
    } loc(#loc269)
    cir.return loc(#loc162)
  } loc(#loc267)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":29:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":29:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":45:34)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":51:27)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":31:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":55:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":32:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":33:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":54:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":33:8)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":34:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":35:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":53:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":36:13)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":36:20)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":40:13)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":52:13)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":40:17)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":40:24)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":40:43)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":41:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":48:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":50:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":42:36)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":42:43)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":42:48)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":42:59)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":42:60)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":42:17)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":43:17)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":43:49)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":43:21)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":43:33)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":43:39)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":43:40)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":43:46)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":43:45)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":45:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":45:24)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":46:27)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":46:17)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":47:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":47:22)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":51:17)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":62:1)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":62:12)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":72:19)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":92:27)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":67:1)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":96:1)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":68:1)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":69:5)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":95:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":69:8)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":70:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":73:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":75:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":72:9)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":76:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":94:9)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":77:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":77:20)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":81:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":93:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":81:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":81:24)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":81:43)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":81:45)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":81:48)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":81:55)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":82:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":89:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":91:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":83:36)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":83:43)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":83:48)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":83:59)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":83:60)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":83:17)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":84:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":84:49)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":84:21)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":84:33)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":84:39)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":84:40)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":84:46)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":84:45)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":86:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":86:24)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":86:34)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":87:27)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":87:17)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":88:17)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":88:22)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":92:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":63:1)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":63:12)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":99:1)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":123:1)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":100:1)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":101:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":122:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":101:8)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":102:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":103:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":121:9)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":104:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":104:20)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":108:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":120:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":108:17)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":108:24)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":108:43)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":108:45)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":108:48)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":108:55)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":109:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":116:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":118:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":110:36)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":110:43)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":110:48)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":110:59)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":110:60)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":110:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":111:17)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":111:49)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":111:21)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":111:33)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":111:39)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":111:40)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":111:46)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":111:45)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":113:17)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":113:24)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":113:34)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":114:27)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":114:17)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":115:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":115:22)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":119:27)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":119:17)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":64:1)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":64:12)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":126:1)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":150:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":127:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":128:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":149:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":128:8)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":129:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":130:9)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":148:9)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":131:13)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":131:20)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":135:13)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":147:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":135:17)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":135:24)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":135:43)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":136:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":143:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":145:13)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":137:36)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":137:43)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":137:48)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":137:59)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":137:60)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":137:17)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":138:17)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":138:49)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":138:21)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":138:33)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":138:39)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":138:40)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":138:46)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":138:45)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":140:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":140:24)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":140:34)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":141:27)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":141:17)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":142:17)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":142:22)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":146:27)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22b.c":146:17)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc3, #loc4])
#loc207 = loc(fused[#loc5, #loc6])
#loc208 = loc(fused[#loc7, #loc8])
#loc209 = loc(fused[#loc10, #loc11])
#loc210 = loc(fused[#loc12, #loc13])
#loc211 = loc(fused[#loc15, #loc16])
#loc213 = loc(fused[#loc20, #loc21])
#loc214 = loc(fused[#loc23, #loc21])
#loc215 = loc(fused[#loc24, #loc25])
#loc216 = loc(fused[#loc26, #loc27])
#loc217 = loc(fused[#loc28, #loc29])
#loc218 = loc(fused[#loc31, #loc32])
#loc219 = loc(fused[#loc30, #loc32])
#loc220 = loc(fused[#loc33, #loc34, #loc35, #loc29])
#loc221 = loc(fused[#loc38, #loc39])
#loc222 = loc(fused[#loc37, #loc39])
#loc223 = loc(fused[#loc36, #loc40])
#loc224 = loc(fused[#loc41, #loc40])
#loc225 = loc(fused[#loc42, #loc43])
#loc226 = loc(fused[#loc44, #loc45])
#loc227 = loc(fused[#loc46, #loc43])
#loc228 = loc(fused[#loc57, #loc58])
#loc229 = loc(fused[#loc61, #loc62])
#loc231 = loc(fused[#loc66, #loc67])
#loc232 = loc(fused[#loc69, #loc70, #loc71, #loc67])
#loc233 = loc(fused[#loc73, #loc74])
#loc234 = loc(fused[#loc75, #loc76])
#loc235 = loc(fused[#loc77, #loc78])
#loc236 = loc(fused[#loc80, #loc81])
#loc237 = loc(fused[#loc79, #loc81])
#loc238 = loc(fused[#loc83, #loc84])
#loc239 = loc(fused[#loc85, #loc86, #loc87, #loc78])
#loc240 = loc(fused[#loc90, #loc91])
#loc241 = loc(fused[#loc89, #loc91])
#loc242 = loc(fused[#loc88, #loc92])
#loc243 = loc(fused[#loc93, #loc92])
#loc244 = loc(fused[#loc94, #loc95])
#loc245 = loc(fused[#loc96, #loc97])
#loc246 = loc(fused[#loc98, #loc95])
#loc247 = loc(fused[#loc110, #loc111])
#loc248 = loc(fused[#loc112, #loc113])
#loc250 = loc(fused[#loc117, #loc118])
#loc251 = loc(fused[#loc120, #loc118])
#loc252 = loc(fused[#loc121, #loc122])
#loc253 = loc(fused[#loc123, #loc124])
#loc254 = loc(fused[#loc125, #loc126])
#loc255 = loc(fused[#loc128, #loc129])
#loc256 = loc(fused[#loc127, #loc129])
#loc257 = loc(fused[#loc131, #loc132])
#loc258 = loc(fused[#loc133, #loc134, #loc135, #loc126])
#loc259 = loc(fused[#loc138, #loc139])
#loc260 = loc(fused[#loc137, #loc139])
#loc261 = loc(fused[#loc136, #loc140])
#loc262 = loc(fused[#loc141, #loc140])
#loc263 = loc(fused[#loc142, #loc143])
#loc264 = loc(fused[#loc144, #loc145])
#loc265 = loc(fused[#loc146, #loc143])
#loc266 = loc(fused[#loc159, #loc160])
#loc267 = loc(fused[#loc161, #loc162])
#loc269 = loc(fused[#loc166, #loc167])
#loc270 = loc(fused[#loc169, #loc167])
#loc271 = loc(fused[#loc170, #loc171])
#loc272 = loc(fused[#loc172, #loc173])
#loc273 = loc(fused[#loc174, #loc175])
#loc274 = loc(fused[#loc177, #loc178])
#loc275 = loc(fused[#loc176, #loc178])
#loc276 = loc(fused[#loc179, #loc180, #loc181, #loc175])
#loc277 = loc(fused[#loc184, #loc185])
#loc278 = loc(fused[#loc183, #loc185])
#loc279 = loc(fused[#loc182, #loc186])
#loc280 = loc(fused[#loc187, #loc186])
#loc281 = loc(fused[#loc188, #loc189])
#loc282 = loc(fused[#loc190, #loc191])
#loc283 = loc(fused[#loc192, #loc189])
