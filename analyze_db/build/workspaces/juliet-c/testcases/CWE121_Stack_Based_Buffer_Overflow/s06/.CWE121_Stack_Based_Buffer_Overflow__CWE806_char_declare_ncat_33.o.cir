!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc90)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc91)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc92)
  cir.func @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc95)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc96)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc12)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %6 = cir.const #cir.int<65> : !s8i loc(#loc18)
    %7 = cir.cast(integral, %6 : !s8i), !s32i loc(#loc18)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc19)
    cir.libc.memset %11 bytes from %5 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc98)
    %12 = cir.const #cir.int<0> : !s8i loc(#loc23)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc25)
    %17 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc99)
    cir.scope {
      %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc101)
      %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
      %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      cir.store %20, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
      cir.scope {
        %21 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc103)
        %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc103)
        cir.store %22, %21 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc103)
        %23 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc36)
        %24 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc37)
        %25 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %26 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc39)
        %27 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc39)
        %29 = cir.call @strncat(%24, %25, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
        %30 = cir.const #cir.int<0> : !s8i loc(#loc41)
        %31 = cir.const #cir.int<50> : !s32i loc(#loc42)
        %32 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc42)
        %34 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc44)
        %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc44)
        cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc104)
        %36 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc46)
      } loc(#loc102)
    } loc(#loc100)
    cir.return loc(#loc8)
  } loc(#loc93)
  cir.func internal private @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc108)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
    %6 = cir.const #cir.int<65> : !s8i loc(#loc58)
    %7 = cir.cast(integral, %6 : !s8i), !s32i loc(#loc58)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc59)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc59)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc59)
    cir.libc.memset %11 bytes from %5 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc110)
    %12 = cir.const #cir.int<0> : !s8i loc(#loc63)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc65)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc65)
    %17 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc111)
    cir.scope {
      %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc113)
      %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
      %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
      cir.store %20, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
      cir.scope {
        %21 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc115)
        %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc115)
        cir.store %22, %21 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc115)
        %23 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc76)
        %24 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc77)
        %25 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
        %26 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc79)
        %27 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
        %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc79)
        %29 = cir.call @strncat(%24, %25, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc76)
        %30 = cir.const #cir.int<0> : !s8i loc(#loc81)
        %31 = cir.const #cir.int<50> : !s32i loc(#loc82)
        %32 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc82)
        %34 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc84)
        %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc84)
        cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc116)
        %36 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
        cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      } loc(#loc114)
    } loc(#loc112)
    cir.return loc(#loc48)
  } loc(#loc105)
  cir.func @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33L7goodG2BEv() : () -> () loc(#loc89)
    cir.return loc(#loc88)
  } loc(#loc117)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":152:1)
#loc2 = loc("/usr/include/string.h":153:29)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":26:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":45:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":28:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":28:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":29:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":29:23)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":30:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":31:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":31:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":33:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":33:18)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":33:23)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":33:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":33:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":33:28)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":34:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":34:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":34:10)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":34:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":34:15)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":35:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":44:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":36:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":36:23)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":37:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":43:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":38:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":38:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":40:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":40:21)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":40:27)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":40:33)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":40:40)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":41:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":41:18)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":41:21)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":41:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":42:23)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":42:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":52:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":71:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":54:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":54:12)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":55:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":55:23)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":56:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":56:24)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":57:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":57:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":59:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":59:18)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":59:23)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":59:26)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":59:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":59:27)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":60:18)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":60:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":60:10)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":60:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":60:14)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":61:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":70:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":62:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":62:23)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":63:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":69:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":64:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":64:29)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":66:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":66:21)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":66:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":66:33)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":66:40)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":67:26)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":67:18)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":67:21)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":67:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":68:23)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":68:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":73:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":76:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_33.cpp":75:5)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc7, #loc8])
#loc94 = loc(fused[#loc9, #loc10])
#loc95 = loc(fused[#loc11, #loc12])
#loc96 = loc(fused[#loc13, #loc14])
#loc97 = loc(fused[#loc16, #loc15])
#loc98 = loc(fused[#loc21, #loc22])
#loc99 = loc(fused[#loc24, #loc23])
#loc100 = loc(fused[#loc28, #loc29])
#loc101 = loc(fused[#loc30, #loc31])
#loc102 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc34, #loc35])
#loc104 = loc(fused[#loc44, #loc41])
#loc105 = loc(fused[#loc47, #loc48])
#loc106 = loc(fused[#loc49, #loc50])
#loc107 = loc(fused[#loc51, #loc52])
#loc108 = loc(fused[#loc53, #loc54])
#loc109 = loc(fused[#loc56, #loc55])
#loc110 = loc(fused[#loc61, #loc62])
#loc111 = loc(fused[#loc64, #loc63])
#loc112 = loc(fused[#loc68, #loc69])
#loc113 = loc(fused[#loc70, #loc71])
#loc114 = loc(fused[#loc72, #loc73])
#loc115 = loc(fused[#loc74, #loc75])
#loc116 = loc(fused[#loc84, #loc81])
#loc117 = loc(fused[#loc87, #loc88])
