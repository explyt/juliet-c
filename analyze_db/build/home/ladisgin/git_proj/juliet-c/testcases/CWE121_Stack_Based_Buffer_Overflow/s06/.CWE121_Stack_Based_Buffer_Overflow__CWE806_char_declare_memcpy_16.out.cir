!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":85:10)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":85:14)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":85:20)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":85:32)
#loc139 = loc(fused[#loc60, #loc61])
#loc140 = loc(fused[#loc62, #loc63])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc123)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%4) loc(#loc15)
      } do {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
        %5 = cir.const #cir.int<65> : !s32i loc(#loc17)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc18)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc19)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc18)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc18)
        cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc126)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc22)
        %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc22)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc24)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc24)
        %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc26)
        cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc127)
        cir.break loc(#loc27)
      } loc(#loc125)
    } loc(#loc125)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc129)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc129)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc129)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc32)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc34)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc34)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc130)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc131)
      cir.libc.memcpy %13 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc132)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc40)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc41)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc41)
      %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc43)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc43)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc133)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    } loc(#loc128)
    cir.return loc(#loc6)
  } loc(#loc121)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc47)
  } loc(#loc134)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc136)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc57)
  cir.func @main(%arg0: !s32i loc(fused[#loc60, #loc61]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc62, #loc63])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc64)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc65)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc66)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc66)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc67)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc54)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16_good() : () -> () loc(#loc69)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc56)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16_bad() : () -> () loc(#loc73)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.return %17 : !s32i loc(#loc143)
  } loc(#loc138)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc146)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc88)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc88)
        cir.condition(%4) loc(#loc88)
      } do {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
        %5 = cir.const #cir.int<65> : !s32i loc(#loc90)
        %6 = cir.const #cir.int<50> : !s32i loc(#loc91)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc92)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc91)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc91)
        cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc149)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc95)
        %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc95)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
        %13 = cir.const #cir.int<50> : !s32i loc(#loc97)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc98)
        %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc97)
        %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc99)
        cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc150)
        cir.break loc(#loc100)
      } loc(#loc148)
    } loc(#loc148)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc152)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc152)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc152)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc105)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc107)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc107)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc153)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc154)
      cir.libc.memcpy %13 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc155)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc113)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc113)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc114)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc115)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc114)
      %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc116)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc116)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc156)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    } loc(#loc151)
    cir.return loc(#loc79)
  } loc(#loc144)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":42:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":25:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":25:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":26:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":27:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":27:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":34:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":28:11)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":31:16)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":31:22)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":31:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":31:31)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":31:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":31:32)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":32:23)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":32:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":32:14)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":32:18)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":32:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":33:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":35:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":41:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":36:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":36:25)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":38:16)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":38:22)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":38:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":38:35)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":38:41)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":38:52)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":38:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":38:53)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":39:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":39:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":39:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":39:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":40:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":40:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":70:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":73:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":72:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":72:13)
#loc50 = loc("/usr/include/stdlib.h":575:1)
#loc51 = loc("/usr/include/stdlib.h":575:41)
#loc52 = loc("/usr/include/time.h":76:1)
#loc53 = loc("/usr/include/time.h":76:38)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":90:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":92:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":95:15)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":97:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":85:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":100:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":86:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":88:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":88:22)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":88:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":90:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":91:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":91:76)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":92:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":95:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":96:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":96:75)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":97:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":99:12)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":99:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":49:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":68:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":51:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":51:12)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":52:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":52:24)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":53:12)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":53:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":54:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":60:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":54:11)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":57:16)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":57:22)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":57:27)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":57:30)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":57:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":57:31)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":58:22)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":58:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":58:14)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":58:17)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":58:18)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":59:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":61:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":67:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":62:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":62:25)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":64:16)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":64:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":64:28)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":64:35)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":64:41)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":64:52)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":64:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":64:53)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":65:22)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":65:14)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":65:17)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":65:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":66:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_16.c":66:9)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc12, #loc11])
#loc125 = loc(fused[#loc13, #loc14])
#loc126 = loc(fused[#loc20, #loc21])
#loc127 = loc(fused[#loc23, #loc22])
#loc128 = loc(fused[#loc28, #loc29])
#loc129 = loc(fused[#loc30, #loc31])
#loc130 = loc(fused[#loc36, #loc37])
#loc131 = loc(fused[#loc34, #loc37])
#loc132 = loc(fused[#loc38, #loc39])
#loc133 = loc(fused[#loc43, #loc40])
#loc134 = loc(fused[#loc46, #loc47])
#loc135 = loc(fused[#loc48, #loc49])
#loc136 = loc(fused[#loc50, #loc51])
#loc137 = loc(fused[#loc52, #loc53])
#loc138 = loc(fused[#loc58, #loc59])
#loc141 = loc(fused[#loc69, #loc70])
#loc142 = loc(fused[#loc73, #loc74])
#loc143 = loc(fused[#loc77, #loc76])
#loc144 = loc(fused[#loc78, #loc79])
#loc145 = loc(fused[#loc80, #loc81])
#loc146 = loc(fused[#loc82, #loc83])
#loc147 = loc(fused[#loc85, #loc84])
#loc148 = loc(fused[#loc86, #loc87])
#loc149 = loc(fused[#loc93, #loc94])
#loc150 = loc(fused[#loc96, #loc95])
#loc151 = loc(fused[#loc101, #loc102])
#loc152 = loc(fused[#loc103, #loc104])
#loc153 = loc(fused[#loc109, #loc110])
#loc154 = loc(fused[#loc107, #loc110])
#loc155 = loc(fused[#loc111, #loc112])
#loc156 = loc(fused[#loc116, #loc113])
