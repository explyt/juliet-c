!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc110 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":112:10)
#loc111 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":112:14)
#loc112 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":112:20)
#loc113 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":112:32)
#loc167 = loc(fused[#loc110, #loc111])
#loc168 = loc(fused[#loc112, #loc113])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc126)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc127)
  cir.func private @printDoubleLine(!cir.double) loc(#loc128)
  cir.func @_ZN52CWE758_Undefined_Behavior__double_pointer_new_use_043badEv() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc11)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc11)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc133)
          %3 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc134)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc135)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc133)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc135)
          cir.store %6, %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc133)
          %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc18)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc20)
          cir.store %8, %3 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc134)
          %9 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc21)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc21)
          cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc22)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc23)
          %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc24)
          cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc25)
        } loc(#loc132)
      } loc(#loc131)
    } loc(#loc130)
    cir.return loc(#loc8)
  } loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.func internal private @_ZN52CWE758_Undefined_Behavior__double_pointer_new_use_04L5good1Ev() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc31)
      cir.if %1 {
        %2 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc35)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc140)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc141)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc142)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc44)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc142)
          cir.store %6, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc143)
          %7 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc46)
          %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc47)
          cir.store %7, %8 : !cir.double, !cir.ptr<!cir.double> loc(#loc144)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc145)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc141)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc145)
          cir.store %11, %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc141)
          %12 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc50)
          %13 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc51)
          cir.store %12, %13 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc146)
          cir.scope {
            %16 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc148)
            %17 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc56)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc57)
            cir.store %18, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc148)
            %19 = cir.load deref %16 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc58)
            %20 = cir.load %19 : !cir.ptr<!cir.double>, !cir.double loc(#loc59)
            cir.call @printDoubleLine(%20) : (!cir.double) -> () loc(#loc60)
          } loc(#loc147)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc61)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc61)
          cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
        } loc(#loc139)
      } loc(#loc138)
    } loc(#loc137)
    cir.return loc(#loc28)
  } loc(#loc136)
  cir.func internal private @_ZN52CWE758_Undefined_Behavior__double_pointer_new_use_04L5good2Ev() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc66)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc153)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc154)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc155)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc76)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc155)
          cir.store %6, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc156)
          %7 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc78)
          %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc79)
          cir.store %7, %8 : !cir.double, !cir.ptr<!cir.double> loc(#loc157)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc158)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc154)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc158)
          cir.store %11, %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc154)
          %12 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc82)
          %13 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc83)
          cir.store %12, %13 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc159)
          cir.scope {
            %16 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc161)
            %17 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc88)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc89)
            cir.store %18, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc161)
            %19 = cir.load deref %16 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc90)
            %20 = cir.load %19 : !cir.ptr<!cir.double>, !cir.double loc(#loc91)
            cir.call @printDoubleLine(%20) : (!cir.double) -> () loc(#loc92)
          } loc(#loc160)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc93)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc93)
          cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
        } loc(#loc152)
      } loc(#loc151)
    } loc(#loc150)
    cir.return loc(#loc63)
  } loc(#loc149)
  cir.func @_ZN52CWE758_Undefined_Behavior__double_pointer_new_use_044goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE758_Undefined_Behavior__double_pointer_new_use_04L5good1Ev() : () -> () loc(#loc96)
    cir.call @_ZN52CWE758_Undefined_Behavior__double_pointer_new_use_04L5good2Ev() : () -> () loc(#loc97)
    cir.return loc(#loc95)
  } loc(#loc162)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc163)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc164)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc107)
  cir.func @main(%arg0: !s32i loc(fused[#loc110, #loc111]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc112, #loc113])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc109)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc114)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc115)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc116)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc116)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc117)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc104)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.call @_ZN52CWE758_Undefined_Behavior__double_pointer_new_use_044goodEv() : () -> () loc(#loc119)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc105)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc106)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.call @_ZN52CWE758_Undefined_Behavior__double_pointer_new_use_043badEv() : () -> () loc(#loc122)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc107)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc124)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.return %15 : !s32i loc(#loc169)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc7 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":29:1)
#loc8 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":40:1)
#loc9 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":31:5)
#loc10 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":39:5)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":31:8)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":32:5)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":33:9)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":38:9)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":34:13)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":34:45)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":35:13)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":35:30)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":34:34)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":35:29)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":36:20)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":29:6)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":37:30)
#loc24 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":37:29)
#loc25 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":37:13)
#loc26 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":52:19)
#loc27 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":47:1)
#loc28 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":70:1)
#loc29 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":49:5)
#loc30 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":69:5)
#loc31 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":49:8)
#loc32 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":50:5)
#loc33 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":53:5)
#loc34 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":55:5)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":52:9)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":56:9)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":68:9)
#loc38 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":57:13)
#loc39 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":57:22)
#loc40 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":61:13)
#loc41 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":61:45)
#loc42 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":59:20)
#loc43 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":59:24)
#loc44 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":47:13)
#loc45 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":59:13)
#loc46 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":60:21)
#loc47 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":60:14)
#loc48 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":60:13)
#loc49 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":61:34)
#loc50 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":62:24)
#loc51 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":62:14)
#loc52 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":62:13)
#loc53 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":63:13)
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":66:13)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":64:17)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":64:34)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":64:33)
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":65:34)
#loc59 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":65:33)
#loc60 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":65:17)
#loc61 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":67:20)
#loc62 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":73:1)
#loc63 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":91:1)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":75:5)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":90:5)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":75:8)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":76:5)
#loc68 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":77:9)
#loc69 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":89:9)
#loc70 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":78:13)
#loc71 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":78:22)
#loc72 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":82:13)
#loc73 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":82:45)
#loc74 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":80:20)
#loc75 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":80:24)
#loc76 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":73:13)
#loc77 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":80:13)
#loc78 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":81:21)
#loc79 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":81:14)
#loc80 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":81:13)
#loc81 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":82:34)
#loc82 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":83:24)
#loc83 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":83:14)
#loc84 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":83:13)
#loc85 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":84:13)
#loc86 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":87:13)
#loc87 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":85:17)
#loc88 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":85:34)
#loc89 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":85:33)
#loc90 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":86:34)
#loc91 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":86:33)
#loc92 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":86:17)
#loc93 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":88:20)
#loc94 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":93:1)
#loc95 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":97:1)
#loc96 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":95:5)
#loc97 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":96:5)
#loc98 = loc("/usr/include/stdlib.h":575:1)
#loc99 = loc("/usr/include/stdlib.h":575:41)
#loc100 = loc("/usr/include/time.h":76:1)
#loc101 = loc("/usr/include/time.h":76:38)
#loc102 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc103 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc104 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":117:15)
#loc105 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":119:15)
#loc106 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":122:15)
#loc107 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":124:15)
#loc108 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":112:1)
#loc109 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":127:1)
#loc114 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":113:1)
#loc115 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":115:27)
#loc116 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":115:22)
#loc117 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":115:5)
#loc118 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":117:5)
#loc119 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":118:5)
#loc120 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":119:5)
#loc121 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":122:5)
#loc122 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":123:5)
#loc123 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":124:5)
#loc124 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":126:12)
#loc125 = loc("CWE758_Undefined_Behavior__double_pointer_new_use_04.cpp":126:5)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc5, #loc6])
#loc129 = loc(fused[#loc7, #loc8])
#loc130 = loc(fused[#loc9, #loc10])
#loc131 = loc(fused[#loc12, #loc10])
#loc132 = loc(fused[#loc13, #loc14])
#loc133 = loc(fused[#loc15, #loc16])
#loc134 = loc(fused[#loc17, #loc18])
#loc135 = loc(fused[#loc19, #loc16])
#loc136 = loc(fused[#loc27, #loc28])
#loc137 = loc(fused[#loc29, #loc30])
#loc138 = loc(fused[#loc32, #loc33, #loc34, #loc30])
#loc139 = loc(fused[#loc36, #loc37])
#loc140 = loc(fused[#loc38, #loc39])
#loc141 = loc(fused[#loc40, #loc41])
#loc142 = loc(fused[#loc42, #loc43])
#loc143 = loc(fused[#loc45, #loc43])
#loc144 = loc(fused[#loc48, #loc46])
#loc145 = loc(fused[#loc49, #loc41])
#loc146 = loc(fused[#loc52, #loc50])
#loc147 = loc(fused[#loc53, #loc54])
#loc148 = loc(fused[#loc55, #loc56])
#loc149 = loc(fused[#loc62, #loc63])
#loc150 = loc(fused[#loc64, #loc65])
#loc151 = loc(fused[#loc67, #loc65])
#loc152 = loc(fused[#loc68, #loc69])
#loc153 = loc(fused[#loc70, #loc71])
#loc154 = loc(fused[#loc72, #loc73])
#loc155 = loc(fused[#loc74, #loc75])
#loc156 = loc(fused[#loc77, #loc75])
#loc157 = loc(fused[#loc80, #loc78])
#loc158 = loc(fused[#loc81, #loc73])
#loc159 = loc(fused[#loc84, #loc82])
#loc160 = loc(fused[#loc85, #loc86])
#loc161 = loc(fused[#loc87, #loc88])
#loc162 = loc(fused[#loc94, #loc95])
#loc163 = loc(fused[#loc98, #loc99])
#loc164 = loc(fused[#loc100, #loc101])
#loc165 = loc(fused[#loc102, #loc103])
#loc166 = loc(fused[#loc108, #loc109])
#loc169 = loc(fused[#loc125, #loc124])
