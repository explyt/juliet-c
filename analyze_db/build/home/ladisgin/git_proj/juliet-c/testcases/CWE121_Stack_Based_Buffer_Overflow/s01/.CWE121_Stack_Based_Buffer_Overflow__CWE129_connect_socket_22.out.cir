!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":89:44)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":290:10)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":290:14)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":290:20)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":290:32)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":166:44)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":234:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc427 = loc(fused[#loc144, #loc145])
#loc428 = loc(fused[#loc146, #loc147])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc371)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc372)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc373)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc374)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc375)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc376)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc377)
  cir.func private @close(!s32i) -> !s32i loc(#loc378)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_badSink(!s32i) loc(#loc379)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc381)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc382)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc383)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc384)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc385)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc33)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb1 loc(#loc387)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc27)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb2 loc(#loc388)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc388)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc39)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc42)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    cir.br ^bb5 loc(#loc390)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc49)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc391)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc392)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc51)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc47)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc393)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc394)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc395)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc59)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc396)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc62)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc397)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc67)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc67)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc68)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc398)
    cir.br ^bb9 loc(#loc399)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc400)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc401)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc401)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc79)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc80)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc402)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc403)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc82)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc73)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc85)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc85)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc85)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc85)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc85)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc85)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc85)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc86)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc404)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc88)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc88)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.br ^bb13 loc(#loc406)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc94)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc407)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc95)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc95)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc95)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc95)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc95)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc95)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc95)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc95)
  ^bb18(%68: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":89:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc95)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc95)
  ^bb20(%69: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":89:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc95)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc409)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc99)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc92)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc100)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc410)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc104)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    cir.br ^bb3 loc(#loc38)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc38)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc412)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc110)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc413)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc414)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc113)
    cir.br ^bb29 loc(#loc108)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc108)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc36)
  ^bb31:  // pred: ^bb30
    %83 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %84 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_badGlobal : !cir.ptr<!s32i> loc(#loc371)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_badSink(%85) : (!s32i) -> () loc(#loc117)
    cir.return loc(#loc21)
  } loc(#loc380)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodB2G1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc416)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodB2G2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc417)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodG2BGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc418)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc420)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc126)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc421)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc128)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc422)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc130)
    cir.return loc(#loc125)
  } loc(#loc419)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc423)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc424)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc425)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc141)
  cir.func @main(%arg0: !s32i loc(fused[#loc144, #loc145]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc146, #loc147])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc427)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc428)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc143)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc148)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc149)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc150)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc150)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc151)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc138)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_good : !cir.ptr<!cir.func<!void ()>> loc(#loc429)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_good() : () -> () loc(#loc153)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc139)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc140)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc430)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_bad() : () -> () loc(#loc157)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc141)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc160)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc431)
    cir.return %17 : !s32i loc(#loc431)
  } loc(#loc426)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodB2G1Sink(!s32i) loc(#loc432)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc434)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc435)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc436)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc437)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc438)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc177)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    cir.br ^bb1 loc(#loc440)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc171)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    cir.br ^bb2 loc(#loc441)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc441)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc183)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc183)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc184)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc186)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc187)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc442)
    cir.br ^bb5 loc(#loc443)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc193)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc444)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc445)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc195)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc191)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc446)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc447)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc448)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc203)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc203)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc449)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc205)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc205)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc206)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc450)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc209)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc209)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc210)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc451)
    cir.br ^bb9 loc(#loc452)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc453)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc454)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc454)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc220)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc221)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc455)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc456)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc223)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc214)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc225)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc225)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc226)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc226)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc226)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc226)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc226)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc226)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc226)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc227)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc457)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc228)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc229)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc229)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc458)
    cir.br ^bb13 loc(#loc459)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc235)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc460)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc236)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc236)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc236)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc238)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc461)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc236)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc236)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc236)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc236)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc236)
  ^bb18(%68: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":166:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc236)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc236)
  ^bb20(%69: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":166:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc236)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc462)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc240)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc233)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc241)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc241)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc243)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc243)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc463)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc244)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc245)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc464)
    cir.br ^bb3 loc(#loc182)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc182)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc465)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc251)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc251)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc466)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc467)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc254)
    cir.br ^bb29 loc(#loc249)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc249)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc180)
  ^bb31:  // pred: ^bb30
    %83 = cir.const #cir.int<0> : !s32i loc(#loc255)
    %84 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc416)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc468)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodB2G1Sink(%85) : (!s32i) -> () loc(#loc258)
    cir.return loc(#loc165)
  } loc(#loc433)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodB2G2Sink(!s32i) loc(#loc469)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc471)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc472)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc473)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc474)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc475)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc274)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc476)
    cir.br ^bb1 loc(#loc477)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc268)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc473)
    cir.br ^bb2 loc(#loc478)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc478)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc280)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc280)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc280)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc281)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc282)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc283)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc284)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc479)
    cir.br ^bb5 loc(#loc480)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc290)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc290)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc481)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc482)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc292)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc288)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc483)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc295)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc484)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc485)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc300)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc300)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc486)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc302)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc302)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc303)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc487)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc306)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc306)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc307)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc488)
    cir.br ^bb9 loc(#loc489)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc490)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc491)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc491)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc317)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc318)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc318)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc492)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc493)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc320)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc311)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc321)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc322)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc322)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc323)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc323)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc323)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc323)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc323)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc323)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc323)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc324)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc324)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc494)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc325)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc326)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc326)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc495)
    cir.br ^bb13 loc(#loc496)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc331)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc332)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc332)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc497)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc333)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc333)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc333)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc335)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc498)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc333)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc333)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc333)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc333)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc333)
  ^bb18(%68: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":234:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc333)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc333)
  ^bb20(%69: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":234:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc333)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc499)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc337)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc330)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc338)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc338)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc339)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc340)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc340)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc500)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc341)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc342)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc501)
    cir.br ^bb3 loc(#loc279)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc279)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc502)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc347)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc348)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc348)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc503)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc504)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc350)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc351)
    cir.br ^bb29 loc(#loc346)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc346)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc277)
  ^bb31:  // pred: ^bb30
    %83 = cir.const #cir.int<1> : !s32i loc(#loc352)
    %84 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc417)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc505)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc354)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodB2G2Sink(%85) : (!s32i) -> () loc(#loc355)
    cir.return loc(#loc262)
  } loc(#loc470)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodG2BSink(!s32i) loc(#loc506)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc508)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc362)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc363)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc365)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc510)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc367)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc418)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc511)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc369)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22_goodG2BSink(%6) : (!s32i) -> () loc(#loc370)
    cir.return loc(#loc359)
  } loc(#loc507)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":45:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":45:78)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":80:49)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":47:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":47:83)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":49:1)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":112:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":59:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":59:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":60:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":60:28)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":61:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":61:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":62:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":62:41)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":51:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":51:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":53:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":53:12)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":53:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":54:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":109:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":63:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":98:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":98:16)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":73:36)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":73:45)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":73:58)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":73:29)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":73:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":73:69)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":74:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":77:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":74:17)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":74:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":75:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":76:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":78:20)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":78:21)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":78:30)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":78:33)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":78:47)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":78:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":78:48)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":79:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":79:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":80:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":80:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":80:59)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":81:38)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":81:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":81:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":81:46)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":82:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":85:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":82:25)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":82:58)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":82:59)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":82:68)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":82:82)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":82:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":82:88)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":83:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":84:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":88:31)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":88:46)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":88:59)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":88:77)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":88:80)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":88:26)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":88:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":88:81)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":89:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":92:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":89:17)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":89:31)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":89:47)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":89:61)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":90:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":91:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":94:39)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":94:25)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":94:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":96:25)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":96:20)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":96:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":96:36)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":99:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":102:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":99:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":99:30)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":100:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":101:26)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":101:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":110:78)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":110:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":111:74)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":111:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":119:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":119:83)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":120:1)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":120:83)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":121:1)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":121:82)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":274:1)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":279:1)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":276:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":276:14)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":277:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":277:14)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":278:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":278:13)
#loc132 = loc("/usr/include/stdlib.h":575:1)
#loc133 = loc("/usr/include/stdlib.h":575:41)
#loc134 = loc("/usr/include/time.h":76:1)
#loc135 = loc("/usr/include/time.h":76:38)
#loc136 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc137 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":295:15)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":297:15)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":300:15)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":302:15)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":290:1)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":305:1)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":291:1)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":293:27)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":293:22)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":293:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":295:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":296:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":296:71)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":297:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":300:5)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":301:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":301:70)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":302:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":304:12)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":304:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":124:1)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":124:88)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":126:1)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":189:1)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":136:9)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":136:13)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":137:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":137:28)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":138:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":138:32)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":139:9)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":139:41)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":128:5)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":128:9)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":130:13)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":130:12)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":130:5)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":131:5)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":186:5)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":140:9)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":175:17)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":175:16)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":150:36)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":150:45)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":150:58)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":150:29)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":150:13)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":150:69)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":151:13)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":154:13)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":151:17)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":151:34)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":152:13)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":153:17)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":155:20)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":155:21)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":155:30)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":155:33)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":155:47)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":155:13)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":155:48)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":156:34)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":156:13)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":157:49)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":157:39)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":157:13)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":157:59)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":158:38)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":158:32)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":158:13)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":158:46)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":159:13)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":162:13)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":159:25)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":159:58)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":159:59)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":159:68)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":159:82)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":159:17)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":159:88)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":160:13)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":161:17)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":165:31)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":165:46)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":165:59)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":165:77)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":165:80)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":165:26)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":165:13)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":165:81)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":166:13)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":169:13)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":166:17)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":166:31)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":166:47)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":166:61)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":167:13)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":168:17)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":171:39)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":171:25)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":171:13)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":173:25)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":173:20)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":173:13)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":173:36)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":176:9)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":179:9)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":176:13)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":176:30)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":177:9)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":178:26)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":178:13)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":187:83)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":187:5)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":188:79)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":188:5)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":192:1)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":192:88)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":194:1)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":257:1)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":204:9)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":204:13)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":205:9)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":205:28)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":206:9)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":206:32)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":207:9)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":207:41)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":196:5)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":196:9)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":198:13)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":198:12)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":198:5)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":199:5)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":254:5)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":208:9)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":243:17)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":243:16)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":218:36)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":218:45)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":218:58)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":218:29)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":218:13)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":218:69)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":219:13)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":222:13)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":219:17)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":219:34)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":220:13)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":221:17)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":223:20)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":223:21)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":223:30)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":223:33)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":223:47)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":223:13)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":223:48)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":224:34)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":224:13)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":225:49)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":225:39)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":225:13)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":225:59)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":226:38)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":226:32)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":226:13)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":226:46)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":227:13)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":230:13)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":227:25)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":227:58)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":227:59)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":227:68)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":227:82)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":227:17)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":227:88)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":228:13)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":229:17)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":233:31)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":233:46)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":233:59)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":233:77)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":233:80)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":233:26)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":233:13)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":233:81)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":234:13)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":237:13)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":234:17)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":234:31)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":234:47)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":234:61)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":235:13)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":236:17)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":239:39)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":239:25)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":239:13)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":241:25)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":241:20)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":241:13)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":241:36)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":244:9)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":247:9)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":244:13)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":244:30)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":245:9)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":246:26)
#loc351 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":246:13)
#loc352 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":255:83)
#loc353 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":255:5)
#loc354 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":256:79)
#loc355 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":256:5)
#loc356 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":260:1)
#loc357 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":260:87)
#loc358 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":262:1)
#loc359 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":272:1)
#loc360 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":264:5)
#loc361 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":264:9)
#loc362 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":266:13)
#loc363 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":266:12)
#loc364 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":266:5)
#loc365 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":269:12)
#loc366 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":269:5)
#loc367 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":270:82)
#loc368 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":270:5)
#loc369 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":271:78)
#loc370 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c":271:5)
#loc371 = loc(fused[#loc1, #loc2])
#loc372 = loc(fused[#loc3, #loc4])
#loc373 = loc(fused[#loc5, #loc6])
#loc374 = loc(fused[#loc8, #loc9])
#loc375 = loc(fused[#loc10, #loc11])
#loc376 = loc(fused[#loc12, #loc13])
#loc377 = loc(fused[#loc14, #loc15])
#loc378 = loc(fused[#loc16, #loc17])
#loc379 = loc(fused[#loc18, #loc19])
#loc380 = loc(fused[#loc20, #loc21])
#loc381 = loc(fused[#loc22, #loc23])
#loc382 = loc(fused[#loc24, #loc25])
#loc383 = loc(fused[#loc26, #loc27])
#loc384 = loc(fused[#loc28, #loc29])
#loc385 = loc(fused[#loc30, #loc31])
#loc386 = loc(fused[#loc34, #loc32])
#loc387 = loc(fused[#loc35, #loc36])
#loc388 = loc(fused[#loc37, #loc38])
#loc389 = loc(fused[#loc44, #loc45])
#loc390 = loc(fused[#loc46, #loc47])
#loc391 = loc(fused[#loc48, #loc49])
#loc392 = loc(fused[#loc50, #loc47])
#loc393 = loc(fused[#loc52, #loc53])
#loc394 = loc(fused[#loc55, #loc56])
#loc395 = loc(fused[#loc57, #loc58])
#loc396 = loc(fused[#loc61, #loc59])
#loc397 = loc(fused[#loc65, #loc66])
#loc398 = loc(fused[#loc70, #loc71])
#loc399 = loc(fused[#loc72, #loc73])
#loc400 = loc(fused[#loc75, #loc76])
#loc401 = loc(fused[#loc77, #loc78])
#loc402 = loc(fused[#loc79, #loc80])
#loc403 = loc(fused[#loc81, #loc73])
#loc404 = loc(fused[#loc85, #loc86])
#loc405 = loc(fused[#loc89, #loc90])
#loc406 = loc(fused[#loc91, #loc92])
#loc407 = loc(fused[#loc93, #loc94])
#loc408 = loc(fused[#loc96, #loc97])
#loc409 = loc(fused[#loc98, #loc92])
#loc410 = loc(fused[#loc102, #loc100])
#loc411 = loc(fused[#loc105, #loc106])
#loc412 = loc(fused[#loc107, #loc108])
#loc413 = loc(fused[#loc109, #loc110])
#loc414 = loc(fused[#loc111, #loc108])
#loc415 = loc(fused[#loc115, #loc114])
#loc416 = loc(fused[#loc118, #loc119])
#loc417 = loc(fused[#loc120, #loc121])
#loc418 = loc(fused[#loc122, #loc123])
#loc419 = loc(fused[#loc124, #loc125])
#loc420 = loc(fused[#loc126, #loc127])
#loc421 = loc(fused[#loc128, #loc129])
#loc422 = loc(fused[#loc130, #loc131])
#loc423 = loc(fused[#loc132, #loc133])
#loc424 = loc(fused[#loc134, #loc135])
#loc425 = loc(fused[#loc136, #loc137])
#loc426 = loc(fused[#loc142, #loc143])
#loc429 = loc(fused[#loc153, #loc154])
#loc430 = loc(fused[#loc157, #loc158])
#loc431 = loc(fused[#loc161, #loc160])
#loc432 = loc(fused[#loc162, #loc163])
#loc433 = loc(fused[#loc164, #loc165])
#loc434 = loc(fused[#loc166, #loc167])
#loc435 = loc(fused[#loc168, #loc169])
#loc436 = loc(fused[#loc170, #loc171])
#loc437 = loc(fused[#loc172, #loc173])
#loc438 = loc(fused[#loc174, #loc175])
#loc439 = loc(fused[#loc178, #loc176])
#loc440 = loc(fused[#loc179, #loc180])
#loc441 = loc(fused[#loc181, #loc182])
#loc442 = loc(fused[#loc188, #loc189])
#loc443 = loc(fused[#loc190, #loc191])
#loc444 = loc(fused[#loc192, #loc193])
#loc445 = loc(fused[#loc194, #loc191])
#loc446 = loc(fused[#loc196, #loc197])
#loc447 = loc(fused[#loc199, #loc200])
#loc448 = loc(fused[#loc201, #loc202])
#loc449 = loc(fused[#loc204, #loc203])
#loc450 = loc(fused[#loc207, #loc208])
#loc451 = loc(fused[#loc211, #loc212])
#loc452 = loc(fused[#loc213, #loc214])
#loc453 = loc(fused[#loc216, #loc217])
#loc454 = loc(fused[#loc218, #loc219])
#loc455 = loc(fused[#loc220, #loc221])
#loc456 = loc(fused[#loc222, #loc214])
#loc457 = loc(fused[#loc226, #loc227])
#loc458 = loc(fused[#loc230, #loc231])
#loc459 = loc(fused[#loc232, #loc233])
#loc460 = loc(fused[#loc234, #loc235])
#loc461 = loc(fused[#loc237, #loc238])
#loc462 = loc(fused[#loc239, #loc233])
#loc463 = loc(fused[#loc243, #loc241])
#loc464 = loc(fused[#loc246, #loc247])
#loc465 = loc(fused[#loc248, #loc249])
#loc466 = loc(fused[#loc250, #loc251])
#loc467 = loc(fused[#loc252, #loc249])
#loc468 = loc(fused[#loc256, #loc255])
#loc469 = loc(fused[#loc259, #loc260])
#loc470 = loc(fused[#loc261, #loc262])
#loc471 = loc(fused[#loc263, #loc264])
#loc472 = loc(fused[#loc265, #loc266])
#loc473 = loc(fused[#loc267, #loc268])
#loc474 = loc(fused[#loc269, #loc270])
#loc475 = loc(fused[#loc271, #loc272])
#loc476 = loc(fused[#loc275, #loc273])
#loc477 = loc(fused[#loc276, #loc277])
#loc478 = loc(fused[#loc278, #loc279])
#loc479 = loc(fused[#loc285, #loc286])
#loc480 = loc(fused[#loc287, #loc288])
#loc481 = loc(fused[#loc289, #loc290])
#loc482 = loc(fused[#loc291, #loc288])
#loc483 = loc(fused[#loc293, #loc294])
#loc484 = loc(fused[#loc296, #loc297])
#loc485 = loc(fused[#loc298, #loc299])
#loc486 = loc(fused[#loc301, #loc300])
#loc487 = loc(fused[#loc304, #loc305])
#loc488 = loc(fused[#loc308, #loc309])
#loc489 = loc(fused[#loc310, #loc311])
#loc490 = loc(fused[#loc313, #loc314])
#loc491 = loc(fused[#loc315, #loc316])
#loc492 = loc(fused[#loc317, #loc318])
#loc493 = loc(fused[#loc319, #loc311])
#loc494 = loc(fused[#loc323, #loc324])
#loc495 = loc(fused[#loc327, #loc328])
#loc496 = loc(fused[#loc329, #loc330])
#loc497 = loc(fused[#loc331, #loc332])
#loc498 = loc(fused[#loc334, #loc335])
#loc499 = loc(fused[#loc336, #loc330])
#loc500 = loc(fused[#loc340, #loc338])
#loc501 = loc(fused[#loc343, #loc344])
#loc502 = loc(fused[#loc345, #loc346])
#loc503 = loc(fused[#loc347, #loc348])
#loc504 = loc(fused[#loc349, #loc346])
#loc505 = loc(fused[#loc353, #loc352])
#loc506 = loc(fused[#loc356, #loc357])
#loc507 = loc(fused[#loc358, #loc359])
#loc508 = loc(fused[#loc360, #loc361])
#loc509 = loc(fused[#loc364, #loc362])
#loc510 = loc(fused[#loc366, #loc365])
#loc511 = loc(fused[#loc368, #loc367])
