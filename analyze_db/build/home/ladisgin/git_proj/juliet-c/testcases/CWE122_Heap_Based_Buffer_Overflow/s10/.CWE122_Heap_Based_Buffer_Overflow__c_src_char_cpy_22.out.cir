!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":106:10)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":106:14)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":106:20)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":106:32)
#loc190 = loc(fused[#loc70, #loc71])
#loc191 = loc(fused[#loc72, #loc73])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc162)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc163)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc164)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc165)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc168)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc22)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc172)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc173)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc178)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb3 loc(#loc28)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badGlobal : !cir.ptr<!s32i> loc(#loc162)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %19 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badSource(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc38)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.br ^bb5 loc(#loc181)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc170)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc170)
    %21 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc43)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc44)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %24 = cir.call @strcpy(%22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc48)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc48)
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc16)
  } loc(#loc169)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc182)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc183)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc184)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc187)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_good : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.return %17 : !s32i loc(#loc194)
  } loc(#loc189)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc195)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc96)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc97)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc199)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc200)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.br ^bb1 loc(#loc203)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc204)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc205)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc109)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb3 loc(#loc103)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc182)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %19 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Source(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc113)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.br ^bb5 loc(#loc208)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc197)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc197)
    %21 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc118)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc119)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %24 = cir.call @strcpy(%22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc118)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc123)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
    cir.br ^bb6 loc(#loc117)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc91)
  } loc(#loc196)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc209)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc133)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc134)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc213)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc214)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    cir.br ^bb1 loc(#loc217)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc219)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc144)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc146)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc144)
    cir.br ^bb3 loc(#loc140)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc183)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %19 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Source(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc150)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    cir.br ^bb5 loc(#loc222)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc211)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc211)
    %21 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc155)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc156)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %24 = cir.call @strcpy(%22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc160)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc160)
    cir.br ^bb6 loc(#loc154)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc128)
  } loc(#loc210)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":24:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":24:70)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":26:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":26:82)
#loc9 = loc("/usr/include/string.h":141:1)
#loc10 = loc("/usr/include/string.h":142:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":28:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":42:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":36:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":36:25)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":30:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":30:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:20)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:27)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:31)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:42)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:43)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:17)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:30)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:29)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":33:70)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":33:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":34:75)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":34:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":34:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":34:79)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":35:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":41:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":38:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":38:16)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":38:22)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":39:19)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":39:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":40:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":40:14)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":49:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":49:75)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":50:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":50:75)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":90:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":94:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":92:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":92:14)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":93:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":93:14)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":111:15)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":113:15)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":116:15)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":118:15)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":106:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":121:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":107:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":109:27)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":109:22)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":109:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":111:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":112:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":112:63)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":113:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":116:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":117:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":117:62)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":118:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":120:12)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":120:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":53:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":53:87)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":55:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":69:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":63:9)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":63:25)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":57:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":57:12)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:20)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:27)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:31)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:42)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:43)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:33)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:17)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:23)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:24)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:30)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:29)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":60:75)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":60:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":61:80)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":61:12)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":61:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":61:84)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":62:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":68:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":65:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":65:16)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":65:22)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":66:19)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":66:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":67:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":67:14)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":72:1)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":72:87)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":74:1)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":88:1)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":82:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":82:25)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":76:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":76:12)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:20)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:27)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:31)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:42)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:43)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:33)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:17)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:23)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:24)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:30)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:29)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":79:75)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":79:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":80:80)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":80:12)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":80:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":80:84)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":81:5)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":87:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":84:9)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":84:16)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":84:22)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":85:19)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":85:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":86:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":86:14)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc3, #loc4])
#loc164 = loc(fused[#loc5, #loc6])
#loc165 = loc(fused[#loc7, #loc8])
#loc166 = loc(fused[#loc9, #loc10])
#loc167 = loc(fused[#loc11, #loc12])
#loc168 = loc(fused[#loc13, #loc14])
#loc169 = loc(fused[#loc15, #loc16])
#loc170 = loc(fused[#loc17, #loc18])
#loc171 = loc(fused[#loc19, #loc20])
#loc172 = loc(fused[#loc23, #loc24])
#loc173 = loc(fused[#loc22, #loc24])
#loc174 = loc(fused[#loc21, #loc25])
#loc175 = loc(fused[#loc26, #loc25])
#loc176 = loc(fused[#loc27, #loc28])
#loc177 = loc(fused[#loc29, #loc30])
#loc178 = loc(fused[#loc31, #loc28])
#loc179 = loc(fused[#loc36, #loc35])
#loc180 = loc(fused[#loc39, #loc40])
#loc181 = loc(fused[#loc41, #loc42])
#loc182 = loc(fused[#loc50, #loc51])
#loc183 = loc(fused[#loc52, #loc53])
#loc184 = loc(fused[#loc54, #loc55])
#loc185 = loc(fused[#loc56, #loc57])
#loc186 = loc(fused[#loc58, #loc59])
#loc187 = loc(fused[#loc60, #loc61])
#loc188 = loc(fused[#loc62, #loc63])
#loc189 = loc(fused[#loc68, #loc69])
#loc192 = loc(fused[#loc79, #loc80])
#loc193 = loc(fused[#loc83, #loc84])
#loc194 = loc(fused[#loc87, #loc86])
#loc195 = loc(fused[#loc88, #loc89])
#loc196 = loc(fused[#loc90, #loc91])
#loc197 = loc(fused[#loc92, #loc93])
#loc198 = loc(fused[#loc94, #loc95])
#loc199 = loc(fused[#loc98, #loc99])
#loc200 = loc(fused[#loc97, #loc99])
#loc201 = loc(fused[#loc96, #loc100])
#loc202 = loc(fused[#loc101, #loc100])
#loc203 = loc(fused[#loc102, #loc103])
#loc204 = loc(fused[#loc104, #loc105])
#loc205 = loc(fused[#loc106, #loc103])
#loc206 = loc(fused[#loc111, #loc110])
#loc207 = loc(fused[#loc114, #loc115])
#loc208 = loc(fused[#loc116, #loc117])
#loc209 = loc(fused[#loc125, #loc126])
#loc210 = loc(fused[#loc127, #loc128])
#loc211 = loc(fused[#loc129, #loc130])
#loc212 = loc(fused[#loc131, #loc132])
#loc213 = loc(fused[#loc135, #loc136])
#loc214 = loc(fused[#loc134, #loc136])
#loc215 = loc(fused[#loc133, #loc137])
#loc216 = loc(fused[#loc138, #loc137])
#loc217 = loc(fused[#loc139, #loc140])
#loc218 = loc(fused[#loc141, #loc142])
#loc219 = loc(fused[#loc143, #loc140])
#loc220 = loc(fused[#loc148, #loc147])
#loc221 = loc(fused[#loc151, #loc152])
#loc222 = loc(fused[#loc153, #loc154])
