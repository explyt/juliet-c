!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":174:10)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":174:14)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":174:20)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":174:32)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":142:27)
#true = #cir.bool<true> : !cir.bool
#loc363 = loc(fused[#loc119, #loc120])
#loc364 = loc(fused[#loc121, #loc122])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc316)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc317)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc318)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc319)
  cir.func private @printIntLine(!s32i) loc(#loc320)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc321)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc322)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc324)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc325)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc326)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc327)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc328)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc329)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc330)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc329)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc330)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc34)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    cir.br ^bb1 loc(#loc332)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    %11 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc39)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc317)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %16 = cir.call @__isoc99_fscanf(%13, %15, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc39)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %18 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    cir.store %17, %18 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb2 loc(#loc37)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc334)
  ^bb3:  // pred: ^bb2
    %19 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.br ^bb4 loc(#loc335)
  ^bb4:  // pred: ^bb3
    %21 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc49)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc50)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc50)
    %24 = cir.const #cir.int<4> : !u64i loc(#loc336)
    %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc337)
    %26 = cir.call @malloc(%25) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc338)
    cir.store %27, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc327)
    cir.br ^bb5 loc(#loc339)
  ^bb5:  // pred: ^bb4
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc56)
    %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s32i>, !cir.bool loc(#loc340)
    cir.brcond %31 ^bb6, ^bb7 loc(#loc341)
  ^bb6:  // pred: ^bb5
    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc58)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc60)
    cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
    cir.br ^bb7 loc(#loc54)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc54)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc342)
  ^bb9:  // pred: ^bb8
    %35 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %35, %2 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.br ^bb10 loc(#loc342)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc66)
    %38 = cir.cmp(lt, %36, %37) : !s32i, !cir.bool loc(#loc344)
    cir.brcond %38 ^bb11, ^bb15 loc(#loc67)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc345)
  ^bb12:  // pred: ^bb11
    %39 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc72)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    cir.br ^bb13 loc(#loc62)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc62)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %44 = cir.unary(inc, %43) : !s32i, !s32i loc(#loc74)
    cir.store %44, %2 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb10 loc(#loc342)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc62)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc348)
  ^bb17:  // pred: ^bb16
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %46 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %47 = cir.cmp(ge, %45, %46) : !s32i, !cir.bool loc(#loc349)
    cir.brcond %47 ^bb18, ^bb27 loc(#loc350)
  ^bb18:  // pred: ^bb17
    %48 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %49 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc85)
    cir.store %48, %51 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.br ^bb19 loc(#loc352)
  ^bb19:  // pred: ^bb18
    %52 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %52, %2 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.br ^bb20 loc(#loc352)
  ^bb20:  // 2 preds: ^bb19, ^bb24
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %54 = cir.const #cir.int<10> : !s32i loc(#loc91)
    %55 = cir.cmp(lt, %53, %54) : !s32i, !cir.bool loc(#loc354)
    cir.brcond %55 ^bb21, ^bb25 loc(#loc92)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc355)
  ^bb22:  // pred: ^bb21
    %56 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %57 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %58 = cir.ptr_stride(%56 : !cir.ptr<!s32i>, %57 : !s32i), !cir.ptr<!s32i> loc(#loc96)
    %59 = cir.load %58 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    cir.call @printIntLine(%59) : (!s32i) -> () loc(#loc97)
    cir.br ^bb23 loc(#loc87)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc87)
  ^bb24:  // pred: ^bb23
    %60 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %61 = cir.unary(inc, %60) : !s32i, !s32i loc(#loc99)
    cir.store %61, %2 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.br ^bb20 loc(#loc352)
  ^bb25:  // pred: ^bb20
    cir.br ^bb26 loc(#loc87)
  ^bb26:  // pred: ^bb25
    cir.br ^bb28 loc(#loc80)
  ^bb27:  // pred: ^bb17
    %62 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
    %63 = cir.cast(array_to_ptrdecay, %62 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%63) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb28 loc(#loc76)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc76)
  ^bb29:  // pred: ^bb28
    %64 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc101)
    cir.call @free(%65) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc102)
    cir.br ^bb30 loc(#loc48)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc45)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc18)
  } loc(#loc323)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc358)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc105)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc359)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc107)
    cir.return loc(#loc104)
  } loc(#loc357)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc360)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc361)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc116)
  cir.func @main(%arg0: !s32i loc(fused[#loc119, #loc120]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc121, #loc122])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc363)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc364)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc123)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc124)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc125)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc125)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc126)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc113)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc365)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32_good() : () -> () loc(#loc128)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc115)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc366)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32_bad() : () -> () loc(#loc132)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc116)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc135)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc367)
    cir.return %17 : !s32i loc(#loc367)
  } loc(#loc362)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc369)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc370)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc371)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc372)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc373)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc374)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc375)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc374)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc375)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc154)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    cir.br ^bb1 loc(#loc377)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    %11 = cir.const #cir.int<7> : !s32i loc(#loc159)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.br ^bb2 loc(#loc157)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc380)
  ^bb3:  // pred: ^bb2
    %14 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc142)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc370)
    cir.br ^bb4 loc(#loc381)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc169)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc170)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc170)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc382)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc383)
    %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc169)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc384)
    cir.store %22, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc372)
    cir.br ^bb5 loc(#loc385)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc175)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc176)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc176)
    %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc386)
    cir.brcond %26 ^bb6, ^bb7 loc(#loc387)
  ^bb6:  // pred: ^bb5
    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc178)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc180)
    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc178)
    cir.br ^bb7 loc(#loc174)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc174)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc388)
  ^bb9:  // pred: ^bb8
    %30 = cir.const #cir.int<0> : !s32i loc(#loc183)
    cir.store %30, %2 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    cir.br ^bb10 loc(#loc388)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %32 = cir.const #cir.int<10> : !s32i loc(#loc186)
    %33 = cir.cmp(lt, %31, %32) : !s32i, !cir.bool loc(#loc390)
    cir.brcond %33 ^bb11, ^bb15 loc(#loc187)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc391)
  ^bb12:  // pred: ^bb11
    %34 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc192)
    cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.br ^bb13 loc(#loc182)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc182)
  ^bb14:  // pred: ^bb13
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %39 = cir.unary(inc, %38) : !s32i, !s32i loc(#loc194)
    cir.store %39, %2 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb10 loc(#loc388)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc182)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc394)
  ^bb17:  // pred: ^bb16
    %40 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %42 = cir.cmp(ge, %40, %41) : !s32i, !cir.bool loc(#loc395)
    cir.brcond %42 ^bb18, ^bb27 loc(#loc396)
  ^bb18:  // pred: ^bb17
    %43 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc203)
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc205)
    cir.store %43, %46 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    cir.br ^bb19 loc(#loc398)
  ^bb19:  // pred: ^bb18
    %47 = cir.const #cir.int<0> : !s32i loc(#loc208)
    cir.store %47, %2 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    cir.br ^bb20 loc(#loc398)
  ^bb20:  // 2 preds: ^bb19, ^bb24
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    %49 = cir.const #cir.int<10> : !s32i loc(#loc211)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc400)
    cir.brcond %50 ^bb21, ^bb25 loc(#loc212)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc401)
  ^bb22:  // pred: ^bb21
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc214)
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc216)
    %54 = cir.load %53 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    cir.call @printIntLine(%54) : (!s32i) -> () loc(#loc217)
    cir.br ^bb23 loc(#loc207)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc207)
  ^bb24:  // pred: ^bb23
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %56 = cir.unary(inc, %55) : !s32i, !s32i loc(#loc219)
    cir.store %56, %2 : !s32i, !cir.ptr<!s32i> loc(#loc402)
    cir.br ^bb20 loc(#loc398)
  ^bb25:  // pred: ^bb20
    cir.br ^bb26 loc(#loc207)
  ^bb26:  // pred: ^bb25
    cir.br ^bb28 loc(#loc200)
  ^bb27:  // pred: ^bb17
    %57 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc220)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc220)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    cir.br ^bb28 loc(#loc196)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc196)
  ^bb29:  // pred: ^bb28
    %59 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc222)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc222)
    cir.call @free(%60) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc223)
    cir.br ^bb30 loc(#loc168)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc165)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc138)
  } loc(#loc368)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc224)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc404)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc405)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc406)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc407)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc408)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc409)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc410)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc409)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc410)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc241)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc242)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    cir.br ^bb1 loc(#loc412)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc228)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    %11 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc247)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc317)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc248)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc249)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc249)
    %16 = cir.call @__isoc99_fscanf(%13, %15, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc247)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    %18 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc251)
    cir.store %17, %18 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    cir.br ^bb2 loc(#loc245)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc414)
  ^bb3:  // pred: ^bb2
    %19 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc230)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.br ^bb4 loc(#loc415)
  ^bb4:  // pred: ^bb3
    %21 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc258)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc259)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc259)
    %24 = cir.const #cir.int<4> : !u64i loc(#loc416)
    %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc417)
    %26 = cir.call @malloc(%25) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc258)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc418)
    cir.store %27, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc407)
    cir.br ^bb5 loc(#loc419)
  ^bb5:  // pred: ^bb4
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc264)
    %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc265)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc265)
    %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s32i>, !cir.bool loc(#loc420)
    cir.brcond %31 ^bb6, ^bb7 loc(#loc421)
  ^bb6:  // pred: ^bb5
    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc267)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc269)
    cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc267)
    cir.br ^bb7 loc(#loc263)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc263)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc422)
  ^bb9:  // pred: ^bb8
    %35 = cir.const #cir.int<0> : !s32i loc(#loc272)
    cir.store %35, %2 : !s32i, !cir.ptr<!s32i> loc(#loc423)
    cir.br ^bb10 loc(#loc422)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc275)
    %38 = cir.cmp(lt, %36, %37) : !s32i, !cir.bool loc(#loc424)
    cir.brcond %38 ^bb11, ^bb15 loc(#loc276)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc425)
  ^bb12:  // pred: ^bb11
    %39 = cir.const #cir.int<0> : !s32i loc(#loc278)
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc279)
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc281)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    cir.br ^bb13 loc(#loc271)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc271)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %44 = cir.unary(inc, %43) : !s32i, !s32i loc(#loc283)
    cir.store %44, %2 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    cir.br ^bb10 loc(#loc422)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc271)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc428)
  ^bb17:  // pred: ^bb16
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %46 = cir.const #cir.int<0> : !s32i loc(#loc287)
    %47 = cir.cmp(ge, %45, %46) : !s32i, !cir.bool loc(#loc429)
    cir.brcond %47 ^bb18, ^bb23 loc(#loc288)
  ^bb18:  // pred: ^bb17
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    %49 = cir.const #cir.int<10> : !s32i loc(#loc290)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc430)
    cir.brcond %50 ^bb19, ^bb20 loc(#loc288)
  ^bb19:  // pred: ^bb18
    %51 = cir.const #true loc(#loc288)
    cir.br ^bb21(%51 : !cir.bool) loc(#loc288)
  ^bb20:  // pred: ^bb18
    %52 = cir.const #false loc(#loc288)
    cir.br ^bb21(%52 : !cir.bool) loc(#loc288)
  ^bb21(%53: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":142:27)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc288)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%53 : !cir.bool) loc(#loc288)
  ^bb23:  // pred: ^bb17
    %54 = cir.const #false loc(#loc288)
    cir.br ^bb24(%54 : !cir.bool) loc(#loc288)
  ^bb24(%55: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":142:27)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc288)
  ^bb25:  // pred: ^bb24
    cir.brcond %55 ^bb26, ^bb35 loc(#loc431)
  ^bb26:  // pred: ^bb25
    %56 = cir.const #cir.int<1> : !s32i loc(#loc295)
    %57 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc296)
    %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %59 = cir.ptr_stride(%57 : !cir.ptr<!s32i>, %58 : !s32i), !cir.ptr<!s32i> loc(#loc298)
    cir.store %56, %59 : !s32i, !cir.ptr<!s32i> loc(#loc432)
    cir.br ^bb27 loc(#loc433)
  ^bb27:  // pred: ^bb26
    %60 = cir.const #cir.int<0> : !s32i loc(#loc301)
    cir.store %60, %2 : !s32i, !cir.ptr<!s32i> loc(#loc434)
    cir.br ^bb28 loc(#loc433)
  ^bb28:  // 2 preds: ^bb27, ^bb32
    %61 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %62 = cir.const #cir.int<10> : !s32i loc(#loc304)
    %63 = cir.cmp(lt, %61, %62) : !s32i, !cir.bool loc(#loc435)
    cir.brcond %63 ^bb29, ^bb33 loc(#loc305)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc436)
  ^bb30:  // pred: ^bb29
    %64 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc307)
    %65 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %66 = cir.ptr_stride(%64 : !cir.ptr<!s32i>, %65 : !s32i), !cir.ptr<!s32i> loc(#loc309)
    %67 = cir.load %66 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    cir.call @printIntLine(%67) : (!s32i) -> () loc(#loc310)
    cir.br ^bb31 loc(#loc300)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc300)
  ^bb32:  // pred: ^bb31
    %68 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc311)
    %69 = cir.unary(inc, %68) : !s32i, !s32i loc(#loc312)
    cir.store %69, %2 : !s32i, !cir.ptr<!s32i> loc(#loc437)
    cir.br ^bb28 loc(#loc433)
  ^bb33:  // pred: ^bb28
    cir.br ^bb34 loc(#loc300)
  ^bb34:  // pred: ^bb33
    cir.br ^bb36 loc(#loc293)
  ^bb35:  // pred: ^bb25
    %70 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc224)
    %71 = cir.cast(array_to_ptrdecay, %70 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc224)
    cir.call @printLine(%71) : (!cir.ptr<!s8i>) -> () loc(#loc313)
    cir.br ^bb36 loc(#loc285)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc285)
  ^bb37:  // pred: ^bb36
    %72 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc314)
    %73 = cir.cast(bitcast, %72 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc314)
    cir.call @free(%73) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc315)
    cir.br ^bb38 loc(#loc257)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc254)
  ^bb39:  // pred: ^bb38
    cir.return loc(#loc226)
  } loc(#loc403)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":32:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":59:27)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":22:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":64:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":30:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":30:21)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":36:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":36:21)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":38:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":38:17)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":39:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":39:58)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":24:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":24:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":25:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":25:22)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":26:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":26:22)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":28:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":28:12)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":28:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":29:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":34:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":30:20)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":32:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":32:16)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":33:21)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":33:10)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":33:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":35:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":63:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":36:20)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":37:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":62:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":39:35)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":39:42)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":39:47)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":39:57)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":40:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":40:43)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":40:17)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":40:27)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":40:33)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":40:34)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":40:40)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":40:39)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":42:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":45:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":42:22)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":42:18)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":42:25)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":42:29)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":42:27)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":43:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":44:29)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":44:17)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":44:24)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":44:25)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":42:34)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":42:33)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":48:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":60:13)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":48:17)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":48:25)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":49:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":56:13)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":58:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":50:32)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":50:17)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":50:24)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":50:28)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":52:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":55:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":52:25)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":52:21)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":52:28)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":52:32)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":52:30)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":53:17)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":54:34)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":54:41)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":54:42)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":54:21)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":52:37)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":52:36)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":59:17)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":61:18)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":61:13)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":160:1)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":164:1)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":162:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":162:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":163:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":163:13)
#loc109 = loc("/usr/include/stdlib.h":575:1)
#loc110 = loc("/usr/include/stdlib.h":575:41)
#loc111 = loc("/usr/include/time.h":76:1)
#loc112 = loc("/usr/include/time.h":76:38)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":179:15)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":181:15)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":184:15)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":186:15)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":174:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":189:1)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":175:1)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":177:27)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":177:22)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":177:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":179:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":180:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":180:64)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":181:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":184:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":185:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":185:63)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":186:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":188:12)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":188:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":71:1)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":114:1)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":79:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":79:21)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":86:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":86:21)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":88:13)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":88:17)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":89:13)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":89:58)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":73:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":73:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":74:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":74:22)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":75:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":75:22)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":77:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":77:12)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":77:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":78:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":84:5)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":79:20)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":82:16)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":82:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":83:21)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":83:10)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":83:9)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":85:5)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":113:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":86:20)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":87:9)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":112:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":89:35)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":89:42)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":89:47)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":89:57)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":90:13)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":90:43)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":90:17)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":90:27)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":90:33)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":90:34)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":90:40)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":90:39)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":92:13)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":95:13)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":92:22)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":92:18)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":92:25)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":92:29)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":92:27)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":93:13)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":94:29)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":94:17)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":94:24)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":94:25)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":92:34)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":92:33)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":98:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":110:13)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":98:17)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":98:25)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":99:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":106:13)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":108:13)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":100:32)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":100:17)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":100:24)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":100:28)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":102:17)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":105:17)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":102:25)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":102:21)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":102:28)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":102:32)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":102:30)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":103:17)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":104:34)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":104:41)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":104:42)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":104:21)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":102:37)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":102:36)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":109:27)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":109:17)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":111:18)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":111:13)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":153:27)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":117:1)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":158:1)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":125:9)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":125:21)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":131:9)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":131:21)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":133:13)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":133:17)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":134:13)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":134:58)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":119:5)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":119:9)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":120:5)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":120:22)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":121:5)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":121:22)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":123:13)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":123:12)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":123:5)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":124:5)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":129:5)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":125:20)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":127:9)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":127:16)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":127:23)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":128:21)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":128:10)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":128:9)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":130:5)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":157:5)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":131:20)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":132:9)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":156:9)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":134:35)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":134:42)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":134:47)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":134:57)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":135:13)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":135:43)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":135:17)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":135:27)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":135:33)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":135:34)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":135:40)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":135:39)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":137:13)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":140:13)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":137:22)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":137:18)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":137:25)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":137:29)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":137:27)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":138:13)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":139:29)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":139:17)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":139:24)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":139:25)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":137:34)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":137:33)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":142:13)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":154:13)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":142:17)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":142:25)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":142:30)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":142:38)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":142:40)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":143:13)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":150:13)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":152:13)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":144:32)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":144:17)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":144:24)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":144:28)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":146:17)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":149:17)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":146:25)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":146:21)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":146:28)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":146:32)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":146:30)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":147:17)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":148:34)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":148:41)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":148:42)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":148:21)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":146:37)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":146:36)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":153:17)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":155:18)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_32.c":155:13)
#loc316 = loc(fused[#loc1, #loc2])
#loc317 = loc(fused[#loc3, #loc4])
#loc318 = loc(fused[#loc6, #loc7])
#loc319 = loc(fused[#loc8, #loc9])
#loc320 = loc(fused[#loc10, #loc11])
#loc321 = loc(fused[#loc12, #loc13])
#loc322 = loc(fused[#loc15, #loc16])
#loc323 = loc(fused[#loc17, #loc18])
#loc324 = loc(fused[#loc19, #loc20])
#loc325 = loc(fused[#loc21, #loc22])
#loc326 = loc(fused[#loc23, #loc24])
#loc327 = loc(fused[#loc25, #loc26])
#loc328 = loc(fused[#loc27, #loc28])
#loc329 = loc(fused[#loc29, #loc30])
#loc330 = loc(fused[#loc31, #loc32])
#loc331 = loc(fused[#loc35, #loc33])
#loc332 = loc(fused[#loc36, #loc37])
#loc333 = loc(fused[#loc43, #loc41])
#loc334 = loc(fused[#loc44, #loc45])
#loc335 = loc(fused[#loc47, #loc48])
#loc336 = loc(fused[#loc51, #loc52])
#loc337 = loc(fused[#loc50, #loc52])
#loc338 = loc(fused[#loc49, #loc26])
#loc339 = loc(fused[#loc53, #loc54])
#loc340 = loc(fused[#loc55, #loc56])
#loc341 = loc(fused[#loc57, #loc54])
#loc342 = loc(fused[#loc61, #loc62])
#loc343 = loc(fused[#loc64, #loc63])
#loc344 = loc(fused[#loc65, #loc66])
#loc345 = loc(fused[#loc68, #loc62])
#loc346 = loc(fused[#loc70, #loc69])
#loc347 = loc(fused[#loc74, #loc73])
#loc348 = loc(fused[#loc75, #loc76])
#loc349 = loc(fused[#loc77, #loc78])
#loc350 = loc(fused[#loc79, #loc80, #loc81, #loc76])
#loc351 = loc(fused[#loc83, #loc82])
#loc352 = loc(fused[#loc86, #loc87])
#loc353 = loc(fused[#loc89, #loc88])
#loc354 = loc(fused[#loc90, #loc91])
#loc355 = loc(fused[#loc93, #loc87])
#loc356 = loc(fused[#loc99, #loc98])
#loc357 = loc(fused[#loc103, #loc104])
#loc358 = loc(fused[#loc105, #loc106])
#loc359 = loc(fused[#loc107, #loc108])
#loc360 = loc(fused[#loc109, #loc110])
#loc361 = loc(fused[#loc111, #loc112])
#loc362 = loc(fused[#loc117, #loc118])
#loc365 = loc(fused[#loc128, #loc129])
#loc366 = loc(fused[#loc132, #loc133])
#loc367 = loc(fused[#loc136, #loc135])
#loc368 = loc(fused[#loc137, #loc138])
#loc369 = loc(fused[#loc139, #loc140])
#loc370 = loc(fused[#loc141, #loc142])
#loc371 = loc(fused[#loc143, #loc144])
#loc372 = loc(fused[#loc145, #loc146])
#loc373 = loc(fused[#loc147, #loc148])
#loc374 = loc(fused[#loc149, #loc150])
#loc375 = loc(fused[#loc151, #loc152])
#loc376 = loc(fused[#loc155, #loc153])
#loc377 = loc(fused[#loc156, #loc157])
#loc378 = loc(fused[#loc160, #loc159])
#loc379 = loc(fused[#loc163, #loc161])
#loc380 = loc(fused[#loc164, #loc165])
#loc381 = loc(fused[#loc167, #loc168])
#loc382 = loc(fused[#loc171, #loc172])
#loc383 = loc(fused[#loc170, #loc172])
#loc384 = loc(fused[#loc169, #loc146])
#loc385 = loc(fused[#loc173, #loc174])
#loc386 = loc(fused[#loc175, #loc176])
#loc387 = loc(fused[#loc177, #loc174])
#loc388 = loc(fused[#loc181, #loc182])
#loc389 = loc(fused[#loc184, #loc183])
#loc390 = loc(fused[#loc185, #loc186])
#loc391 = loc(fused[#loc188, #loc182])
#loc392 = loc(fused[#loc190, #loc189])
#loc393 = loc(fused[#loc194, #loc193])
#loc394 = loc(fused[#loc195, #loc196])
#loc395 = loc(fused[#loc197, #loc198])
#loc396 = loc(fused[#loc199, #loc200, #loc201, #loc196])
#loc397 = loc(fused[#loc203, #loc202])
#loc398 = loc(fused[#loc206, #loc207])
#loc399 = loc(fused[#loc209, #loc208])
#loc400 = loc(fused[#loc210, #loc211])
#loc401 = loc(fused[#loc213, #loc207])
#loc402 = loc(fused[#loc219, #loc218])
#loc403 = loc(fused[#loc225, #loc226])
#loc404 = loc(fused[#loc227, #loc228])
#loc405 = loc(fused[#loc229, #loc230])
#loc406 = loc(fused[#loc231, #loc232])
#loc407 = loc(fused[#loc233, #loc234])
#loc408 = loc(fused[#loc235, #loc236])
#loc409 = loc(fused[#loc237, #loc238])
#loc410 = loc(fused[#loc239, #loc240])
#loc411 = loc(fused[#loc243, #loc241])
#loc412 = loc(fused[#loc244, #loc245])
#loc413 = loc(fused[#loc252, #loc250])
#loc414 = loc(fused[#loc253, #loc254])
#loc415 = loc(fused[#loc256, #loc257])
#loc416 = loc(fused[#loc260, #loc261])
#loc417 = loc(fused[#loc259, #loc261])
#loc418 = loc(fused[#loc258, #loc234])
#loc419 = loc(fused[#loc262, #loc263])
#loc420 = loc(fused[#loc264, #loc265])
#loc421 = loc(fused[#loc266, #loc263])
#loc422 = loc(fused[#loc270, #loc271])
#loc423 = loc(fused[#loc273, #loc272])
#loc424 = loc(fused[#loc274, #loc275])
#loc425 = loc(fused[#loc277, #loc271])
#loc426 = loc(fused[#loc279, #loc278])
#loc427 = loc(fused[#loc283, #loc282])
#loc428 = loc(fused[#loc284, #loc285])
#loc429 = loc(fused[#loc286, #loc287])
#loc430 = loc(fused[#loc289, #loc291])
#loc431 = loc(fused[#loc292, #loc293, #loc294, #loc285])
#loc432 = loc(fused[#loc296, #loc295])
#loc433 = loc(fused[#loc299, #loc300])
#loc434 = loc(fused[#loc302, #loc301])
#loc435 = loc(fused[#loc303, #loc304])
#loc436 = loc(fused[#loc306, #loc300])
#loc437 = loc(fused[#loc312, #loc311])
