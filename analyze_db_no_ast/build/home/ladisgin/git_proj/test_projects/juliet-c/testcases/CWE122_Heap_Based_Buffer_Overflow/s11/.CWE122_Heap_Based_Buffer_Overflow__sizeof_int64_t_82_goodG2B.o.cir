!s64i = !cir.int<s, 64>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":24:68)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":24:75)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":24:85)
#loc19 = loc(fused[#loc8, #loc9])
!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_823A3ACWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_base = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82::CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_823A3ACWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82::CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B" {!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_823A3ACWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLongLongLine(!s64i) loc(#loc16)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc17)
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_8260CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B6actionEPl(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_823A3ACWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B> loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":24:68), %arg1: !cir.ptr<!s64i> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_823A3ACWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_823A3ACWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc19)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_823A3ACWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_823A3ACWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B>> loc(#loc10)
    cir.store %arg1, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc10)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_823A3ACWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_823A3ACWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B> loc(#loc7)
    %3 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc11)
    %4 = cir.load %3 : !cir.ptr<!s64i>, !s64i loc(#loc12)
    cir.call @printLongLongLine(%4) : (!s64i) -> () loc(#loc13)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc14)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc15)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc15)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc14)
    cir.return loc(#loc6)
  } loc(#loc18)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":24:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":29:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":25:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":27:24)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":27:23)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":27:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":28:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_82_goodG2B.cpp":28:10)
#loc16 = loc(fused[#loc1, #loc2])
#loc17 = loc(fused[#loc3, #loc4])
#loc18 = loc(fused[#loc5, #loc6])
