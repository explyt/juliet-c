!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":113:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_15L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc296)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_15L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc297)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_153badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc298)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc299)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc300)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc301)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc302)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc303)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc304)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc305)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc306)
  cir.func private @close(!s32i) -> !s32i loc(#loc307)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc308)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc27)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc309)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc311)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc312)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc313)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc314)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc315)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc316)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc317)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc318)
    %8 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc298)
    %9 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_153badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc298)
    cir.copy %9 to %8 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc298)
    %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc48)
    cir.store %10, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc319)
    cir.br ^bb1 loc(#loc320)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<6> : !s32i loc(#loc52)
    cir.br ^bb2 loc(#loc50)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %11 : !s32i, ^bb58 [
      6: ^bb4
    ] loc(#loc50)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc53)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc321)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc39)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc41)
    cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc56)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc56)
    cir.store %18, %5 : !u64i, !cir.ptr<!u64i> loc(#loc316)
    cir.br ^bb6 loc(#loc322)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc322)
  ^bb7:  // pred: ^bb46
    %19 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc60)
    cir.brcond %20 ^bb8, ^bb47 loc(#loc60)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc323)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<2> : !s32i loc(#loc63)
    %22 = cir.const #cir.int<1> : !u32i loc(#loc64)
    %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc64)
    %24 = cir.const #cir.int<6> : !u32i loc(#loc65)
    %25 = cir.cast(integral, %24 : !u32i), !s32i loc(#loc65)
    %26 = cir.call @socket(%21, %23, %25) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc66)
    cir.store %26, %3 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.br ^bb10 loc(#loc325)
  ^bb10:  // pred: ^bb9
    %27 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc72)
    %30 = cir.cmp(eq, %27, %29) : !s32i, !cir.bool loc(#loc326)
    cir.brcond %30 ^bb11, ^bb12 loc(#loc327)
  ^bb11:  // pred: ^bb10
    cir.br ^bb47 loc(#loc74)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc70)
  ^bb13:  // pred: ^bb12
    %31 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc328)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %33 = cir.const #cir.int<16> : !u64i loc(#loc329)
    cir.libc.memset %33 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc330)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc82)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc82)
    %36 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc331)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc85)
    %39 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc86)
    %40 = cir.get_member %39[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc87)
    cir.store %38, %40 : !u32i, !cir.ptr<!u32i> loc(#loc332)
    %41 = cir.const #cir.int<27015> : !s32i loc(#loc89)
    %42 = cir.cast(integral, %41 : !s32i), !u16i loc(#loc89)
    %43 = cir.call @htons(%42) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc90)
    %44 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
    cir.store %43, %44 : !u16i, !cir.ptr<!u16i> loc(#loc333)
    cir.br ^bb14 loc(#loc334)
  ^bb14:  // pred: ^bb13
    %45 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %46 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc335)
    %47 = cir.const #cir.int<16> : !u64i loc(#loc336)
    %48 = cir.cast(integral, %47 : !u64i), !u32i loc(#loc336)
    %49 = cir.call @bind(%45, %46, %48) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc101)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %51 = cir.unary(minus, %50) nsw : !s32i, !s32i loc(#loc102)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %52 ^bb15, ^bb16 loc(#loc338)
  ^bb15:  // pred: ^bb14
    cir.br ^bb47 loc(#loc104)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc95)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc339)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %54 = cir.const #cir.int<5> : !s32i loc(#loc108)
    %55 = cir.call @listen(%53, %54) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc109)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc110)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc340)
    cir.brcond %58 ^bb19, ^bb20 loc(#loc341)
  ^bb19:  // pred: ^bb18
    cir.br ^bb47 loc(#loc112)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc106)
  ^bb21:  // pred: ^bb20
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %60 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc114)
    %61 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc115)
    %62 = cir.call @accept(%59, %60, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc116)
    cir.store %62, %4 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.br ^bb22 loc(#loc343)
  ^bb22:  // pred: ^bb21
    %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc122)
    %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc344)
    cir.brcond %66 ^bb23, ^bb24 loc(#loc345)
  ^bb23:  // pred: ^bb22
    cir.br ^bb47 loc(#loc124)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc120)
  ^bb25:  // pred: ^bb24
    %67 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %68 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %69 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %70 = cir.ptr_stride(%68 : !cir.ptr<!s8i>, %69 : !u64i), !cir.ptr<!s8i> loc(#loc128)
    %71 = cir.cast(bitcast, %70 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc346)
    %72 = cir.const #cir.int<1> : !u64i loc(#loc347)
    %73 = cir.const #cir.int<4096> : !s32i loc(#loc133)
    %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc133)
    %75 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %76 = cir.binop(sub, %74, %75) : !u64i loc(#loc348)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %78 = cir.cast(integral, %77 : !s32i), !u64i loc(#loc135)
    %79 = cir.binop(sub, %76, %78) : !u64i loc(#loc349)
    %80 = cir.binop(mul, %72, %79) : !u64i loc(#loc350)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %82 = cir.call @recv(%67, %71, %80, %81) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc138)
    %83 = cir.cast(integral, %82 : !s64i), !s32i loc(#loc138)
    cir.store %83, %0 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.br ^bb26 loc(#loc352)
  ^bb26:  // pred: ^bb25
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %85 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %86 = cir.unary(minus, %85) nsw : !s32i, !s32i loc(#loc144)
    %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc353)
    cir.brcond %87 ^bb27, ^bb28 loc(#loc145)
  ^bb27:  // pred: ^bb26
    %88 = cir.const #true loc(#loc145)
    cir.br ^bb33(%88 : !cir.bool) loc(#loc145)
  ^bb28:  // pred: ^bb26
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %90 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %91 = cir.cmp(eq, %89, %90) : !s32i, !cir.bool loc(#loc354)
    cir.brcond %91 ^bb29, ^bb30 loc(#loc145)
  ^bb29:  // pred: ^bb28
    %92 = cir.const #true loc(#loc145)
    cir.br ^bb31(%92 : !cir.bool) loc(#loc145)
  ^bb30:  // pred: ^bb28
    %93 = cir.const #false loc(#loc145)
    cir.br ^bb31(%93 : !cir.bool) loc(#loc145)
  ^bb31(%94: !cir.bool loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":113:44)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc145)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33(%94 : !cir.bool) loc(#loc145)
  ^bb33(%95: !cir.bool loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":113:44)):  // 2 preds: ^bb27, ^bb32
    cir.br ^bb34 loc(#loc145)
  ^bb34:  // pred: ^bb33
    cir.brcond %95 ^bb35, ^bb36 loc(#loc355)
  ^bb35:  // pred: ^bb34
    cir.br ^bb47 loc(#loc149)
  ^bb36:  // pred: ^bb34
    cir.br ^bb37 loc(#loc142)
  ^bb37:  // pred: ^bb36
    %96 = cir.const #cir.int<0> : !s8i loc(#loc150)
    %97 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    %98 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %99 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %100 = cir.cast(integral, %99 : !s32i), !u64i loc(#loc153)
    %101 = cir.const #cir.int<1> : !u64i loc(#loc356)
    %102 = cir.binop(div, %100, %101) : !u64i loc(#loc357)
    %103 = cir.binop(add, %98, %102) : !u64i loc(#loc358)
    %104 = cir.ptr_stride(%97 : !cir.ptr<!s8i>, %103 : !u64i), !cir.ptr<!s8i> loc(#loc156)
    cir.store %96, %104 : !s8i, !cir.ptr<!s8i> loc(#loc359)
    %105 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %106 = cir.const #cir.int<13> : !s8i loc(#loc158)
    %107 = cir.cast(integral, %106 : !s8i), !s32i loc(#loc158)
    %108 = cir.call @strchr(%105, %107) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc159)
    cir.store %108, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc360)
    cir.br ^bb38 loc(#loc361)
  ^bb38:  // pred: ^bb37
    %109 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %110 = cir.cast(ptr_to_bool, %109 : !cir.ptr<!s8i>), !cir.bool loc(#loc164)
    cir.brcond %110 ^bb39, ^bb40 loc(#loc362)
  ^bb39:  // pred: ^bb38
    %111 = cir.const #cir.int<0> : !s8i loc(#loc166)
    %112 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    cir.store %111, %112 : !s8i, !cir.ptr<!s8i> loc(#loc363)
    cir.br ^bb40 loc(#loc163)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc163)
  ^bb41:  // pred: ^bb40
    %113 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %114 = cir.const #cir.int<10> : !s8i loc(#loc170)
    %115 = cir.cast(integral, %114 : !s8i), !s32i loc(#loc170)
    %116 = cir.call @strchr(%113, %115) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc171)
    cir.store %116, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc364)
    cir.br ^bb42 loc(#loc365)
  ^bb42:  // pred: ^bb41
    %117 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %118 = cir.cast(ptr_to_bool, %117 : !cir.ptr<!s8i>), !cir.bool loc(#loc176)
    cir.brcond %118 ^bb43, ^bb44 loc(#loc366)
  ^bb43:  // pred: ^bb42
    %119 = cir.const #cir.int<0> : !s8i loc(#loc178)
    %120 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    cir.store %119, %120 : !s8i, !cir.ptr<!s8i> loc(#loc367)
    cir.br ^bb44 loc(#loc175)
  ^bb44:  // 2 preds: ^bb42, ^bb43
    cir.br ^bb45 loc(#loc175)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc62)
  ^bb46:  // pred: ^bb45
    cir.br ^bb7 loc(#loc59)
  ^bb47:  // 6 preds: ^bb7, ^bb11, ^bb15, ^bb19, ^bb23, ^bb35
    cir.br ^bb48 loc(#loc59)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc368)
  ^bb49:  // pred: ^bb48
    %121 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %122 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %123 = cir.unary(minus, %122) nsw : !s32i, !s32i loc(#loc184)
    %124 = cir.cmp(ne, %121, %123) : !s32i, !cir.bool loc(#loc369)
    cir.brcond %124 ^bb50, ^bb51 loc(#loc370)
  ^bb50:  // pred: ^bb49
    %125 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %126 = cir.call @close(%125) : (!s32i) -> !s32i loc(#loc187)
    cir.br ^bb51 loc(#loc182)
  ^bb51:  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc182)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc371)
  ^bb53:  // pred: ^bb52
    %127 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %128 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %129 = cir.unary(minus, %128) nsw : !s32i, !s32i loc(#loc191)
    %130 = cir.cmp(ne, %127, %129) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %130 ^bb54, ^bb55 loc(#loc373)
  ^bb54:  // pred: ^bb53
    %131 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %132 = cir.call @close(%131) : (!s32i) -> !s32i loc(#loc194)
    cir.br ^bb55 loc(#loc189)
  ^bb55:  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc189)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc55)
  ^bb57:  // pred: ^bb56
    cir.br ^bb59 loc(#loc195)
  ^bb58:  // pred: ^bb2
    %133 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
    %134 = cir.cast(array_to_ptrdecay, %133 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%134) : (!cir.ptr<!s8i>) -> () loc(#loc196)
    cir.br ^bb59 loc(#loc197)
  ^bb59:  // 2 preds: ^bb57, ^bb58
    cir.br ^bb60 loc(#loc51)
  ^bb60:  // pred: ^bb59
    cir.br ^bb61 loc(#loc374)
  ^bb61:  // pred: ^bb60
    %135 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
    %136 = cir.const #cir.int<2> : !s32i loc(#loc201)
    %137 = cir.const #cir.int<64> : !s32i loc(#loc202)
    %138 = cir.binop(or, %136, %137) : !s32i loc(#loc375)
    %139 = cir.const #cir.int<256> : !s32i loc(#loc203)
    %140 = cir.const #cir.int<128> : !s32i loc(#loc204)
    %141 = cir.binop(or, %139, %140) : !s32i loc(#loc376)
    %142 = cir.call @open(%135, %138, %141) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc205)
    cir.store %142, %6 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb62 loc(#loc378)
  ^bb62:  // pred: ^bb61
    %143 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    %144 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %145 = cir.unary(minus, %144) nsw : !s32i, !s32i loc(#loc212)
    %146 = cir.cmp(ne, %143, %145) : !s32i, !cir.bool loc(#loc379)
    cir.brcond %146 ^bb63, ^bb64 loc(#loc380)
  ^bb63:  // pred: ^bb62
    %147 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %148 = cir.call @close(%147) : (!s32i) -> !s32i loc(#loc215)
    cir.br ^bb64 loc(#loc209)
  ^bb64:  // 2 preds: ^bb62, ^bb63
    cir.br ^bb65 loc(#loc209)
  ^bb65:  // pred: ^bb64
    cir.br ^bb66 loc(#loc199)
  ^bb66:  // pred: ^bb65
    cir.return loc(#loc31)
  } loc(#loc310)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc381)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc218)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc383)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc384)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc297)
    %3 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_15L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc297)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc297)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc225)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc385)
    cir.br ^bb1 loc(#loc386)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc229)
    cir.br ^bb2 loc(#loc227)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc227)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc230)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc231)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc231)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc232)
    cir.br ^bb6 loc(#loc233)
  ^bb5:  // pred: ^bb2
    %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc234)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc218)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc218)
    %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc234)
    cir.br ^bb6 loc(#loc236)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc228)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc387)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc240)
    %15 = cir.const #cir.int<64> : !s32i loc(#loc241)
    %16 = cir.binop(or, %14, %15) : !s32i loc(#loc388)
    %17 = cir.const #cir.int<256> : !s32i loc(#loc242)
    %18 = cir.const #cir.int<128> : !s32i loc(#loc243)
    %19 = cir.binop(or, %17, %18) : !s32i loc(#loc389)
    %20 = cir.call @open(%13, %16, %19) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc244)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    cir.br ^bb9 loc(#loc391)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc251)
    %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc392)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc393)
  ^bb10:  // pred: ^bb9
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc254)
    cir.br ^bb11 loc(#loc248)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc248)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc238)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc220)
  } loc(#loc382)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc395)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc396)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc296)
    %3 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_15L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc296)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc296)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc261)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc397)
    cir.br ^bb1 loc(#loc398)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<6> : !s32i loc(#loc265)
    cir.br ^bb2 loc(#loc263)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc263)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc266)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc267)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc268)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc269)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc269)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc267)
    cir.br ^bb6 loc(#loc270)
  ^bb5:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc271)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc271)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc272)
    cir.br ^bb6 loc(#loc273)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc264)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc399)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc276)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc277)
    %15 = cir.const #cir.int<64> : !s32i loc(#loc278)
    %16 = cir.binop(or, %14, %15) : !s32i loc(#loc400)
    %17 = cir.const #cir.int<256> : !s32i loc(#loc279)
    %18 = cir.const #cir.int<128> : !s32i loc(#loc280)
    %19 = cir.binop(or, %17, %18) : !s32i loc(#loc401)
    %20 = cir.call @open(%13, %16, %19) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc281)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc402)
    cir.br ^bb9 loc(#loc403)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc288)
    %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc404)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc405)
  ^bb10:  // pred: ^bb9
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc291)
    cir.br ^bb11 loc(#loc285)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc285)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc275)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc256)
  } loc(#loc394)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_15L8goodG2B1Ev() : () -> () loc(#loc294)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_15L8goodG2B2Ev() : () -> () loc(#loc295)
    cir.return loc(#loc293)
  } loc(#loc406)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":200:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":200:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":172:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":172:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":63:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":63:37)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/netinet/in.h":402:1)
#loc12 = loc("/usr/include/netinet/in.h":403:40)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc21 = loc("/usr/include/string.h":226:1)
#loc22 = loc("/usr/include/string.h":227:50)
#loc23 = loc("/usr/include/unistd.h":358:1)
#loc24 = loc("/usr/include/unistd.h":358:27)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":150:19)
#loc28 = loc("/usr/include/fcntl.h":209:1)
#loc29 = loc("/usr/include/fcntl.h":209:56)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":60:1)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":162:1)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":73:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":73:13)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":74:9)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":74:28)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":75:9)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":75:15)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":76:9)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":76:31)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":77:9)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":77:31)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":78:9)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":78:37)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":154:9)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":154:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":62:5)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":62:12)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":64:12)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":64:5)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":65:5)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":152:5)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":65:12)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":67:5)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":68:5)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":146:5)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":78:26)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":78:33)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":79:9)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":131:17)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":131:16)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":80:9)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":130:9)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":89:35)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":89:44)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":89:57)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":89:28)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":89:13)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":89:68)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":90:13)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":93:13)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":90:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":90:33)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":91:13)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":92:17)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":94:20)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":94:21)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":94:30)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":94:33)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":94:47)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":94:13)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":94:48)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":95:34)
#loc83 = loc("/usr/include/netinet/in.h":249:5)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":95:13)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":96:39)
#loc86 = loc("/usr/include/netinet/in.h":251:20)
#loc87 = loc("/usr/include/netinet/in.h":33:15)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":96:13)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":97:38)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":97:32)
#loc91 = loc("/usr/include/netinet/in.h":250:15)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":97:13)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":97:46)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":98:13)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":101:13)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":98:22)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":98:54)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":98:55)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":98:64)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":98:78)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":98:17)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":98:84)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":99:13)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":100:17)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":102:13)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":105:13)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":102:24)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":102:38)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":102:17)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":102:57)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":103:13)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":104:17)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":106:35)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":106:49)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":106:55)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":106:28)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":106:13)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":106:59)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":107:13)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":110:13)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":107:17)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":107:33)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":108:13)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":109:17)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:31)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:54)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:61)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:59)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:45)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:68)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:71)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:82)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:87)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:102)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:112)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:113)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:116)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:26)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:13)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":112:117)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":113:13)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":116:13)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":113:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":113:31)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":113:47)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":113:61)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":114:13)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":115:17)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":118:57)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":118:13)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":118:18)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":118:28)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":118:41)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":118:52)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":118:53)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":120:30)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":120:36)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":120:23)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":120:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":120:40)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":121:13)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":124:13)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":121:17)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":122:13)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":123:28)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":123:18)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":123:17)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":125:30)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":125:36)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":125:23)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":125:13)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":125:40)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":126:13)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":129:13)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":126:17)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":127:13)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":128:28)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":128:18)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":128:17)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":132:9)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":135:9)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":132:13)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":132:29)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":133:9)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":134:26)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":134:13)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":136:9)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":139:9)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":136:13)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":136:29)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":137:9)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":138:26)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":138:13)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":147:5)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":150:9)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":151:9)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":153:5)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":161:5)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":156:25)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":156:31)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":156:38)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":156:47)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":156:55)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":156:20)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":156:9)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":156:63)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":157:9)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":160:9)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":157:13)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":157:26)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":157:25)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":158:9)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":159:19)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":159:13)
#loc216 = loc("/usr/include/string.h":149:1)
#loc217 = loc("/usr/include/string.h":150:14)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":182:22)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":169:1)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":194:1)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":186:9)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":186:13)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":171:5)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":171:12)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":173:12)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":173:5)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":174:5)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":184:5)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":174:12)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":176:5)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":178:19)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":178:9)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":179:9)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":182:9)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":182:16)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":183:9)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":185:5)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":193:5)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":188:25)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":188:31)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":188:38)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":188:47)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":188:55)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":188:20)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":188:9)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":188:63)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":189:9)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":192:9)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":189:13)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":189:26)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":189:25)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":190:9)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":191:19)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":191:13)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":197:1)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":222:1)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":214:9)
#loc258 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":214:13)
#loc259 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":199:5)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":199:12)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":201:12)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":201:5)
#loc263 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":202:5)
#loc264 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":212:5)
#loc265 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":202:12)
#loc266 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":204:5)
#loc267 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":206:9)
#loc268 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":206:16)
#loc269 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":206:22)
#loc270 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":207:9)
#loc271 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":210:19)
#loc272 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":210:9)
#loc273 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":211:9)
#loc274 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":213:5)
#loc275 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":221:5)
#loc276 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":216:25)
#loc277 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":216:31)
#loc278 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":216:38)
#loc279 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":216:47)
#loc280 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":216:55)
#loc281 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":216:20)
#loc282 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":216:9)
#loc283 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":216:63)
#loc284 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":217:9)
#loc285 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":220:9)
#loc286 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":217:13)
#loc287 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":217:26)
#loc288 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":217:25)
#loc289 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":218:9)
#loc290 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":219:19)
#loc291 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":219:13)
#loc292 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":224:1)
#loc293 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":228:1)
#loc294 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":226:5)
#loc295 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_15.cpp":227:5)
#loc296 = loc(fused[#loc1, #loc2])
#loc297 = loc(fused[#loc3, #loc4])
#loc298 = loc(fused[#loc5, #loc6])
#loc299 = loc(fused[#loc7, #loc8])
#loc300 = loc(fused[#loc9, #loc10])
#loc301 = loc(fused[#loc11, #loc12])
#loc302 = loc(fused[#loc13, #loc14])
#loc303 = loc(fused[#loc15, #loc16])
#loc304 = loc(fused[#loc17, #loc18])
#loc305 = loc(fused[#loc19, #loc20])
#loc306 = loc(fused[#loc21, #loc22])
#loc307 = loc(fused[#loc23, #loc24])
#loc308 = loc(fused[#loc25, #loc26])
#loc309 = loc(fused[#loc28, #loc29])
#loc310 = loc(fused[#loc30, #loc31])
#loc311 = loc(fused[#loc32, #loc33])
#loc312 = loc(fused[#loc34, #loc35])
#loc313 = loc(fused[#loc36, #loc37])
#loc314 = loc(fused[#loc38, #loc39])
#loc315 = loc(fused[#loc40, #loc41])
#loc316 = loc(fused[#loc42, #loc43])
#loc317 = loc(fused[#loc44, #loc45])
#loc318 = loc(fused[#loc46, #loc47])
#loc319 = loc(fused[#loc49, #loc48])
#loc320 = loc(fused[#loc50, #loc51])
#loc321 = loc(fused[#loc54, #loc55])
#loc322 = loc(fused[#loc58, #loc59])
#loc323 = loc(fused[#loc61, #loc62])
#loc324 = loc(fused[#loc67, #loc68])
#loc325 = loc(fused[#loc69, #loc70])
#loc326 = loc(fused[#loc71, #loc72])
#loc327 = loc(fused[#loc73, #loc70])
#loc328 = loc(fused[#loc75, #loc76])
#loc329 = loc(fused[#loc78, #loc79])
#loc330 = loc(fused[#loc80, #loc81])
#loc331 = loc(fused[#loc84, #loc82])
#loc332 = loc(fused[#loc88, #loc85])
#loc333 = loc(fused[#loc92, #loc93])
#loc334 = loc(fused[#loc94, #loc95])
#loc335 = loc(fused[#loc97, #loc98])
#loc336 = loc(fused[#loc99, #loc100])
#loc337 = loc(fused[#loc101, #loc102])
#loc338 = loc(fused[#loc103, #loc95])
#loc339 = loc(fused[#loc105, #loc106])
#loc340 = loc(fused[#loc109, #loc110])
#loc341 = loc(fused[#loc111, #loc106])
#loc342 = loc(fused[#loc117, #loc118])
#loc343 = loc(fused[#loc119, #loc120])
#loc344 = loc(fused[#loc121, #loc122])
#loc345 = loc(fused[#loc123, #loc120])
#loc346 = loc(fused[#loc129, #loc130])
#loc347 = loc(fused[#loc131, #loc132])
#loc348 = loc(fused[#loc133, #loc134])
#loc349 = loc(fused[#loc133, #loc135])
#loc350 = loc(fused[#loc131, #loc136])
#loc351 = loc(fused[#loc139, #loc140])
#loc352 = loc(fused[#loc141, #loc142])
#loc353 = loc(fused[#loc143, #loc144])
#loc354 = loc(fused[#loc146, #loc147])
#loc355 = loc(fused[#loc148, #loc142])
#loc356 = loc(fused[#loc154, #loc155])
#loc357 = loc(fused[#loc153, #loc155])
#loc358 = loc(fused[#loc152, #loc155])
#loc359 = loc(fused[#loc151, #loc150])
#loc360 = loc(fused[#loc160, #loc161])
#loc361 = loc(fused[#loc162, #loc163])
#loc362 = loc(fused[#loc165, #loc163])
#loc363 = loc(fused[#loc168, #loc166])
#loc364 = loc(fused[#loc172, #loc173])
#loc365 = loc(fused[#loc174, #loc175])
#loc366 = loc(fused[#loc177, #loc175])
#loc367 = loc(fused[#loc180, #loc178])
#loc368 = loc(fused[#loc181, #loc182])
#loc369 = loc(fused[#loc183, #loc184])
#loc370 = loc(fused[#loc185, #loc182])
#loc371 = loc(fused[#loc188, #loc189])
#loc372 = loc(fused[#loc190, #loc191])
#loc373 = loc(fused[#loc192, #loc189])
#loc374 = loc(fused[#loc198, #loc199])
#loc375 = loc(fused[#loc201, #loc202])
#loc376 = loc(fused[#loc203, #loc204])
#loc377 = loc(fused[#loc206, #loc207])
#loc378 = loc(fused[#loc208, #loc209])
#loc379 = loc(fused[#loc210, #loc211])
#loc380 = loc(fused[#loc213, #loc209])
#loc381 = loc(fused[#loc216, #loc217])
#loc382 = loc(fused[#loc219, #loc220])
#loc383 = loc(fused[#loc221, #loc222])
#loc384 = loc(fused[#loc223, #loc224])
#loc385 = loc(fused[#loc226, #loc225])
#loc386 = loc(fused[#loc227, #loc228])
#loc387 = loc(fused[#loc237, #loc238])
#loc388 = loc(fused[#loc240, #loc241])
#loc389 = loc(fused[#loc242, #loc243])
#loc390 = loc(fused[#loc245, #loc246])
#loc391 = loc(fused[#loc247, #loc248])
#loc392 = loc(fused[#loc249, #loc250])
#loc393 = loc(fused[#loc252, #loc248])
#loc394 = loc(fused[#loc255, #loc256])
#loc395 = loc(fused[#loc257, #loc258])
#loc396 = loc(fused[#loc259, #loc260])
#loc397 = loc(fused[#loc262, #loc261])
#loc398 = loc(fused[#loc263, #loc264])
#loc399 = loc(fused[#loc274, #loc275])
#loc400 = loc(fused[#loc277, #loc278])
#loc401 = loc(fused[#loc279, #loc280])
#loc402 = loc(fused[#loc282, #loc283])
#loc403 = loc(fused[#loc284, #loc285])
#loc404 = loc(fused[#loc286, #loc287])
#loc405 = loc(fused[#loc289, #loc285])
#loc406 = loc(fused[#loc292, #loc293])
