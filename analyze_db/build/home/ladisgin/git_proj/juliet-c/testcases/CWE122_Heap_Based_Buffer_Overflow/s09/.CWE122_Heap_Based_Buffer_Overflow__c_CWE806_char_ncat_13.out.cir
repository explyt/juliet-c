!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":113:10)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":113:14)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":113:20)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":113:32)
#loc236 = loc(fused[#loc82, #loc83])
#loc237 = loc(fused[#loc84, #loc85])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc206)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc207)
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc208)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc209)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc210)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc211)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc212)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc20)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc215)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc216)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc217)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc220)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc32)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc221)
    } loc(#loc219)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc208)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc36)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc223)
      cir.if %11 {
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc39)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc40)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc40)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc40)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc225)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc44)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc46)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc46)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc48)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc226)
      } loc(#loc224)
    } loc(#loc222)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc228)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc228)
      cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc228)
      %10 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc53)
      %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc54)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
      %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
      %16 = cir.call @strncat(%11, %12, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc53)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc58)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc58)
      %19 = cir.const #cir.int<50> : !s32i loc(#loc59)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc59)
      %22 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc61)
      %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc61)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc229)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc64)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
      cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc64)
    } loc(#loc227)
    cir.return loc(#loc16)
  } loc(#loc213)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc67)
  } loc(#loc230)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc233)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc89)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13_good() : () -> () loc(#loc91)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13_bad() : () -> () loc(#loc95)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    cir.return %17 : !s32i loc(#loc240)
  } loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc105)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc106)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc243)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc244)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc245)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc248)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc116)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc117)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc118)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc116)
      } loc(#loc249)
    } loc(#loc247)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc208)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc122)
      %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc251)
      cir.if %11 {
        %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc126)
      } else {
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc128)
        %15 = cir.const #cir.int<50> : !s32i loc(#loc129)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc130)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc129)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc129)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc253)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc133)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc133)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
        %22 = cir.const #cir.int<50> : !s32i loc(#loc135)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc136)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc135)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc137)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc254)
      } loc(#loc252)
    } loc(#loc250)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc256)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc256)
      cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc256)
      %10 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc142)
      %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc143)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
      %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc145)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
      %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc145)
      %16 = cir.call @strncat(%11, %12, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc142)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc147)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc147)
      %19 = cir.const #cir.int<50> : !s32i loc(#loc148)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc149)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc148)
      %22 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc150)
      %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc150)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc257)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc152)
      %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc153)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
      cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
    } loc(#loc255)
    cir.return loc(#loc102)
  } loc(#loc241)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc259)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc159)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc160)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc160)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc260)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc261)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc262)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc263)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc168)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc265)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc170)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc171)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc172)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc170)
      } loc(#loc266)
    } loc(#loc264)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc208)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc175)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc176)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc268)
      cir.if %11 {
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc178)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc179)
        %15 = cir.const #cir.int<50> : !s32i loc(#loc180)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc181)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc180)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc180)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc184)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc184)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
        %22 = cir.const #cir.int<50> : !s32i loc(#loc186)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc187)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc186)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc188)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc271)
      } loc(#loc269)
    } loc(#loc267)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc273)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc273)
      cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc273)
      %10 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc193)
      %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc194)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
      %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc196)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
      %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc196)
      %16 = cir.call @strncat(%11, %12, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc193)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc198)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc198)
      %19 = cir.const #cir.int<50> : !s32i loc(#loc199)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc200)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc199)
      %22 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc201)
      %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc201)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc274)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc203)
      %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc204)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc205)
      cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc204)
    } loc(#loc272)
    cir.return loc(#loc156)
  } loc(#loc258)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc6 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc7 = loc("/usr/include/string.h":152:1)
#loc8 = loc("/usr/include/string.h":153:29)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":23:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":42:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":25:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":25:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":26:20)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":26:27)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":26:31)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":26:42)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":26:43)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":26:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":27:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":27:33)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":27:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":27:17)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":27:23)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":27:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":27:30)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":27:29)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":28:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":33:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":28:8)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":28:27)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":29:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":31:16)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":31:22)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":31:27)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":31:31)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":31:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":31:32)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":32:23)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":32:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":32:14)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":32:18)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":32:19)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":34:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":41:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":35:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":35:25)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":37:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":37:17)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":37:23)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":37:29)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":37:36)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":38:22)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":38:14)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":38:17)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":38:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":39:19)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":39:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":40:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":40:14)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":97:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":101:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":99:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":99:14)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":100:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":100:14)
#loc72 = loc("/usr/include/stdlib.h":575:1)
#loc73 = loc("/usr/include/stdlib.h":575:41)
#loc74 = loc("/usr/include/time.h":76:1)
#loc75 = loc("/usr/include/time.h":76:38)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":118:15)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":120:15)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":123:15)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":125:15)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":113:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":128:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":114:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":116:27)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":116:22)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":116:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":118:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":119:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":119:67)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":120:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":123:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":124:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":124:66)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":125:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":127:12)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":127:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":57:19)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":49:1)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":73:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":51:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":51:12)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":52:20)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":52:27)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":52:31)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":52:42)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":52:43)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":52:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":53:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":53:33)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":53:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":53:17)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":53:23)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":53:24)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":53:30)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":53:29)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":54:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":64:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":54:8)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":54:27)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":55:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":58:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":60:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":57:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":62:16)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":62:22)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":62:27)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":62:30)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":62:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":62:31)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":63:22)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":63:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":63:14)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":63:17)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":63:18)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":65:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":72:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":66:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":66:25)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":68:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":68:17)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":68:23)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":68:29)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":68:36)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":69:22)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":69:14)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":69:17)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":69:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":70:19)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":70:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":71:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":71:14)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":76:1)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":95:1)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":78:5)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":78:12)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":79:20)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":79:27)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":79:31)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":79:42)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":79:43)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":79:5)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":80:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":80:33)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":80:9)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":80:17)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":80:23)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":80:24)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":80:30)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":80:29)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":81:5)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":86:5)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":81:8)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":81:27)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":82:5)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":84:16)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":84:22)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":84:27)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":84:30)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":84:9)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":84:31)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":85:22)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":85:9)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":85:14)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":85:17)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":85:18)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":87:5)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":94:5)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":88:9)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":88:25)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":90:9)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":90:17)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":90:23)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":90:29)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":90:36)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":91:22)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":91:14)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":91:17)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":91:9)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":92:19)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":92:9)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":93:9)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_13.c":93:14)
#loc206 = loc(fused[#loc1, #loc2])
#loc207 = loc(fused[#loc3, #loc4])
#loc208 = loc(fused[#loc5, #loc6])
#loc209 = loc(fused[#loc7, #loc8])
#loc210 = loc(fused[#loc9, #loc10])
#loc211 = loc(fused[#loc11, #loc12])
#loc212 = loc(fused[#loc13, #loc14])
#loc213 = loc(fused[#loc15, #loc16])
#loc214 = loc(fused[#loc17, #loc18])
#loc215 = loc(fused[#loc21, #loc22])
#loc216 = loc(fused[#loc20, #loc22])
#loc217 = loc(fused[#loc19, #loc23])
#loc218 = loc(fused[#loc24, #loc23])
#loc219 = loc(fused[#loc25, #loc26])
#loc220 = loc(fused[#loc27, #loc28])
#loc221 = loc(fused[#loc29, #loc26])
#loc222 = loc(fused[#loc33, #loc34])
#loc223 = loc(fused[#loc35, #loc36])
#loc224 = loc(fused[#loc37, #loc34])
#loc225 = loc(fused[#loc42, #loc43])
#loc226 = loc(fused[#loc45, #loc44])
#loc227 = loc(fused[#loc49, #loc50])
#loc228 = loc(fused[#loc51, #loc52])
#loc229 = loc(fused[#loc61, #loc58])
#loc230 = loc(fused[#loc66, #loc67])
#loc231 = loc(fused[#loc68, #loc69])
#loc232 = loc(fused[#loc70, #loc71])
#loc233 = loc(fused[#loc72, #loc73])
#loc234 = loc(fused[#loc74, #loc75])
#loc235 = loc(fused[#loc80, #loc81])
#loc238 = loc(fused[#loc91, #loc92])
#loc239 = loc(fused[#loc95, #loc96])
#loc240 = loc(fused[#loc99, #loc98])
#loc241 = loc(fused[#loc101, #loc102])
#loc242 = loc(fused[#loc103, #loc104])
#loc243 = loc(fused[#loc107, #loc108])
#loc244 = loc(fused[#loc106, #loc108])
#loc245 = loc(fused[#loc105, #loc109])
#loc246 = loc(fused[#loc110, #loc109])
#loc247 = loc(fused[#loc111, #loc112])
#loc248 = loc(fused[#loc113, #loc114])
#loc249 = loc(fused[#loc115, #loc112])
#loc250 = loc(fused[#loc119, #loc120])
#loc251 = loc(fused[#loc121, #loc122])
#loc252 = loc(fused[#loc123, #loc124, #loc125, #loc120])
#loc253 = loc(fused[#loc131, #loc132])
#loc254 = loc(fused[#loc134, #loc133])
#loc255 = loc(fused[#loc138, #loc139])
#loc256 = loc(fused[#loc140, #loc141])
#loc257 = loc(fused[#loc150, #loc147])
#loc258 = loc(fused[#loc155, #loc156])
#loc259 = loc(fused[#loc157, #loc158])
#loc260 = loc(fused[#loc161, #loc162])
#loc261 = loc(fused[#loc160, #loc162])
#loc262 = loc(fused[#loc159, #loc163])
#loc263 = loc(fused[#loc164, #loc163])
#loc264 = loc(fused[#loc165, #loc166])
#loc265 = loc(fused[#loc167, #loc168])
#loc266 = loc(fused[#loc169, #loc166])
#loc267 = loc(fused[#loc173, #loc174])
#loc268 = loc(fused[#loc175, #loc176])
#loc269 = loc(fused[#loc177, #loc174])
#loc270 = loc(fused[#loc182, #loc183])
#loc271 = loc(fused[#loc185, #loc184])
#loc272 = loc(fused[#loc189, #loc190])
#loc273 = loc(fused[#loc191, #loc192])
#loc274 = loc(fused[#loc201, #loc198])
