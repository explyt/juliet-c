!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":28:71)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":28:78)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":59:75)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":59:82)
#loc141 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc74, #loc75])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc135)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc136)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc139)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc13, #loc14])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc136)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc143)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
    cir.store %arg0, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc136)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc136)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc21)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc22)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc21)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc145)
    cir.br ^bb2 loc(#loc146)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc27)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc147)
    cir.br ^bb3 loc(#loc146)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc148)
    %15 = cir.cmp(lt, %10, %14) : !u64i, !cir.bool loc(#loc149)
    cir.brcond %15 ^bb4, ^bb8 loc(#loc32)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc150)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc35)
    %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc35)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc38)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc41)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb3 loc(#loc146)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // pred: ^bb8
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
    cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc12)
  } loc(#loc140)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc154)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc54)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc56)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc57)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc57)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc158)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc159)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc163)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc69)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb3 loc(#loc63)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_badSink(%16) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.return loc(#loc51)
  } loc(#loc155)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc74, #loc75])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc135)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc168)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
    cir.store %arg0, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc79)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc135)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc135)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc82)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc83)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc82)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc170)
    cir.br ^bb2 loc(#loc171)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc88)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc172)
    cir.br ^bb3 loc(#loc171)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc91)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc92)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc173)
    %15 = cir.cmp(lt, %10, %14) : !u64i, !cir.bool loc(#loc174)
    cir.brcond %15 ^bb4, ^bb8 loc(#loc93)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc175)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc96)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc96)
    %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc96)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc99)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    cir.br ^bb6 loc(#loc87)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc87)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc102)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.br ^bb3 loc(#loc171)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc87)
  ^bb9:  // pred: ^bb8
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc106)
    cir.br ^bb10 loc(#loc81)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc73)
  } loc(#loc165)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc109)
    cir.return loc(#loc108)
  } loc(#loc178)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc115)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc117)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc118)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc118)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc118)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc183)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc184)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc185)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc128)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc188)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc130)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc132)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc130)
    cir.br ^bb3 loc(#loc126)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc126)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_goodG2BSink(%18) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.return loc(#loc112)
  } loc(#loc180)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":62:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":62:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":31:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":31:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":28:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":43:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":32:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":32:16)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":32:19)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":29:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":30:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":42:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":33:21)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":33:28)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":33:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":33:34)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":39:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:18)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:14)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:21)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:25)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:37)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:23)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":37:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:30)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:18)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:19)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:31)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:41)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:40)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":40:19)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":40:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":41:14)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":41:9)
#loc46 = loc("/usr/include/stdlib.h":672:1)
#loc47 = loc("/usr/include/stdlib.h":672:45)
#loc48 = loc("/usr/include/stdlib.h":756:1)
#loc49 = loc("/usr/include/stdlib.h":756:70)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":45:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":53:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":47:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":47:12)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":48:12)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":48:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:20)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:30)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:41)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:42)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:33)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:17)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:23)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:30)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:29)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":52:70)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":52:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":59:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":74:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":63:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":63:16)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":63:19)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":60:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":61:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":73:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":64:21)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":64:28)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":64:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":64:34)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":70:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:18)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:14)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:21)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:25)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:37)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:23)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":68:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:30)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:23)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:18)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:19)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:31)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:41)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:40)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":71:19)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":71:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":72:14)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":72:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":87:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":90:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":89:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":89:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":77:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":85:1)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":79:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":79:12)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":80:12)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":80:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:20)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:28)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:31)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:34)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:45)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:27)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:46)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:33)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:17)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:23)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:24)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:30)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:29)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":84:74)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":84:5)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc142 = loc(fused[#loc15, #loc16])
#loc143 = loc(fused[#loc15, #loc17])
#loc144 = loc(fused[#loc19, #loc20])
#loc145 = loc(fused[#loc23, #loc24])
#loc146 = loc(fused[#loc25, #loc26])
#loc147 = loc(fused[#loc28, #loc27])
#loc148 = loc(fused[#loc30, #loc31])
#loc149 = loc(fused[#loc29, #loc31])
#loc150 = loc(fused[#loc33, #loc26])
#loc151 = loc(fused[#loc36, #loc39])
#loc152 = loc(fused[#loc41, #loc40])
#loc153 = loc(fused[#loc46, #loc47])
#loc154 = loc(fused[#loc48, #loc49])
#loc155 = loc(fused[#loc50, #loc51])
#loc156 = loc(fused[#loc52, #loc53])
#loc157 = loc(fused[#loc55, #loc54])
#loc158 = loc(fused[#loc58, #loc59])
#loc159 = loc(fused[#loc57, #loc59])
#loc160 = loc(fused[#loc56, #loc60])
#loc161 = loc(fused[#loc61, #loc60])
#loc162 = loc(fused[#loc62, #loc63])
#loc163 = loc(fused[#loc64, #loc65])
#loc164 = loc(fused[#loc66, #loc63])
#loc165 = loc(fused[#loc72, #loc73])
#loc167 = loc(fused[#loc76, #loc77])
#loc168 = loc(fused[#loc76, #loc78])
#loc169 = loc(fused[#loc80, #loc81])
#loc170 = loc(fused[#loc84, #loc85])
#loc171 = loc(fused[#loc86, #loc87])
#loc172 = loc(fused[#loc89, #loc88])
#loc173 = loc(fused[#loc91, #loc92])
#loc174 = loc(fused[#loc90, #loc92])
#loc175 = loc(fused[#loc94, #loc87])
#loc176 = loc(fused[#loc97, #loc100])
#loc177 = loc(fused[#loc102, #loc101])
#loc178 = loc(fused[#loc107, #loc108])
#loc179 = loc(fused[#loc109, #loc110])
#loc180 = loc(fused[#loc111, #loc112])
#loc181 = loc(fused[#loc113, #loc114])
#loc182 = loc(fused[#loc116, #loc115])
#loc183 = loc(fused[#loc120, #loc121])
#loc184 = loc(fused[#loc122, #loc121])
#loc185 = loc(fused[#loc117, #loc123])
#loc186 = loc(fused[#loc124, #loc123])
#loc187 = loc(fused[#loc125, #loc126])
#loc188 = loc(fused[#loc127, #loc128])
#loc189 = loc(fused[#loc129, #loc126])
