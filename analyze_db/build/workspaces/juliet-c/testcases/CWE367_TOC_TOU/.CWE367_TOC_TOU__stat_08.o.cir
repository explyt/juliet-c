!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_timespec = !cir.record<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.record<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc261)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc262)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc264)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc265)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc266)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc267)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc268)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc269)
  cir.func no_proto @CWE367_TOC_TOU__stat_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc272)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc25)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc25)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc275)
          %4 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc276)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc277)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc275)
          cir.store %6, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc275)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc35)
          %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc36)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc277)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc40)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc262)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc279)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc45)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc46)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc46)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc47)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc48)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc281)
            } loc(#loc280)
          } loc(#loc278)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc51)
            %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc51)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc53)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc283)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc55)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc55)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc56)
              %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc56)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc58)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc285)
              %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc59)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc286)
            } loc(#loc284)
          } loc(#loc282)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
            %13 = cir.call @stat(%12, %4) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc63)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc64)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc65)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc288)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc67)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc68)
              cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
            } loc(#loc289)
          } loc(#loc287)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc70)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc71)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc290)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc76)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc77)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc78)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc292)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc80)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc81)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
            } loc(#loc293)
          } loc(#loc291)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
            %16 = cir.const #cir.int<11> : !u64i loc(#loc295)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc87)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc89)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc89)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc296)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc91)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc92)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
            } loc(#loc297)
          } loc(#loc294)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc97)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc299)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc100)
            } loc(#loc300)
          } loc(#loc298)
        } loc(#loc274)
      } loc(#loc273)
    } loc(#loc271)
    cir.return loc(#loc22)
  } loc(#loc270)
  cir.func no_proto @CWE367_TOC_TOU__stat_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc302)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc103)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc303)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc105)
    cir.return loc(#loc102)
  } loc(#loc301)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc109)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc305)
    cir.return %2 : !s32i loc(#loc305)
  } loc(#loc304)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc112)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc308)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc117)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc117)
      cir.if %2 {
        %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc111)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc111)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc122)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc311)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc312)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc311)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc311)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc128)
          %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc129)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc312)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc133)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc262)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc134)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc314)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc138)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc138)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc139)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc140)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc140)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc141)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc142)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc316)
            } loc(#loc315)
          } loc(#loc313)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc145)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc145)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc147)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc147)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc318)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc149)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc149)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc150)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc150)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc152)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc152)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc320)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc153)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc321)
            } loc(#loc319)
          } loc(#loc317)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc155)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc156)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc322)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc161)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc162)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc163)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc324)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc165)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc166)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc165)
            } loc(#loc325)
          } loc(#loc323)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc169)
            %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc112)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc112)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
            %15 = cir.const #cir.int<12> : !u64i loc(#loc327)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc172)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc173)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc174)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc174)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc328)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc176)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc177)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc176)
            } loc(#loc329)
          } loc(#loc326)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc180)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc181)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc182)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc331)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc184)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc185)
            } loc(#loc332)
          } loc(#loc330)
        } loc(#loc310)
      } loc(#loc309)
    } loc(#loc307)
    cir.return loc(#loc114)
  } loc(#loc306)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc187)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc188)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    cir.return %2 : !s32i loc(#loc334)
  } loc(#loc333)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc337)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc194)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc194)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc340)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc341)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc340)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc340)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc202)
          %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc203)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc341)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc206)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc207)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc262)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc208)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc209)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc210)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc343)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc212)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc212)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc213)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc214)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc214)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc215)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc216)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc216)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc345)
            } loc(#loc344)
          } loc(#loc342)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc219)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc220)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc219)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc221)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc221)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc347)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc223)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc223)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc224)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc225)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc224)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc226)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc226)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc349)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc227)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc227)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc350)
            } loc(#loc348)
          } loc(#loc346)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc228)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc229)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc230)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc351)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc235)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc236)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc237)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc353)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc239)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc240)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc239)
            } loc(#loc354)
          } loc(#loc352)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc243)
            %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc244)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc244)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc244)
            %15 = cir.const #cir.int<12> : !u64i loc(#loc356)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc247)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc248)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc249)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc249)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc357)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc251)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc252)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc251)
            } loc(#loc358)
          } loc(#loc355)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc255)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc256)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc257)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc360)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc259)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc260)
            } loc(#loc361)
          } loc(#loc359)
        } loc(#loc339)
      } loc(#loc338)
    } loc(#loc336)
    cir.return loc(#loc191)
  } loc(#loc335)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__stat_08.c":60:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/stat.h":205:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/stat.h":206:43)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__stat_08.c":78:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__stat_08.c":50:1)
#loc22 = loc("CWE367_TOC_TOU__stat_08.c":88:1)
#loc23 = loc("CWE367_TOC_TOU__stat_08.c":52:5)
#loc24 = loc("CWE367_TOC_TOU__stat_08.c":87:5)
#loc25 = loc("CWE367_TOC_TOU__stat_08.c":52:8)
#loc26 = loc("CWE367_TOC_TOU__stat_08.c":52:26)
#loc27 = loc("CWE367_TOC_TOU__stat_08.c":53:5)
#loc28 = loc("CWE367_TOC_TOU__stat_08.c":54:9)
#loc29 = loc("CWE367_TOC_TOU__stat_08.c":86:9)
#loc30 = loc("CWE367_TOC_TOU__stat_08.c":55:13)
#loc31 = loc("CWE367_TOC_TOU__stat_08.c":55:34)
#loc32 = loc("CWE367_TOC_TOU__stat_08.c":56:13)
#loc33 = loc("CWE367_TOC_TOU__stat_08.c":56:25)
#loc34 = loc("CWE367_TOC_TOU__stat_08.c":57:13)
#loc35 = loc("CWE367_TOC_TOU__stat_08.c":57:29)
#loc36 = loc("CWE367_TOC_TOU__stat_08.c":57:28)
#loc37 = loc("CWE367_TOC_TOU__stat_08.c":58:13)
#loc38 = loc("CWE367_TOC_TOU__stat_08.c":63:13)
#loc39 = loc("CWE367_TOC_TOU__stat_08.c":58:23)
#loc40 = loc("CWE367_TOC_TOU__stat_08.c":58:33)
#loc41 = loc("CWE367_TOC_TOU__stat_08.c":58:38)
#loc42 = loc("CWE367_TOC_TOU__stat_08.c":58:17)
#loc43 = loc("CWE367_TOC_TOU__stat_08.c":58:48)
#loc44 = loc("CWE367_TOC_TOU__stat_08.c":59:13)
#loc45 = loc("CWE367_TOC_TOU__stat_08.c":60:17)
#loc46 = loc("CWE367_TOC_TOU__stat_08.c":62:31)
#loc47 = loc("CWE367_TOC_TOU__stat_08.c":62:26)
#loc48 = loc("CWE367_TOC_TOU__stat_08.c":62:17)
#loc49 = loc("CWE367_TOC_TOU__stat_08.c":64:13)
#loc50 = loc("CWE367_TOC_TOU__stat_08.c":67:13)
#loc51 = loc("CWE367_TOC_TOU__stat_08.c":64:17)
#loc52 = loc("CWE367_TOC_TOU__stat_08.c":64:24)
#loc53 = loc("CWE367_TOC_TOU__stat_08.c":64:36)
#loc54 = loc("CWE367_TOC_TOU__stat_08.c":65:13)
#loc55 = loc("CWE367_TOC_TOU__stat_08.c":66:48)
#loc56 = loc("CWE367_TOC_TOU__stat_08.c":66:26)
#loc57 = loc("CWE367_TOC_TOU__stat_08.c":66:33)
#loc58 = loc("CWE367_TOC_TOU__stat_08.c":66:43)
#loc59 = loc("CWE367_TOC_TOU__stat_08.c":66:17)
#loc60 = loc("CWE367_TOC_TOU__stat_08.c":69:13)
#loc61 = loc("CWE367_TOC_TOU__stat_08.c":72:13)
#loc62 = loc("CWE367_TOC_TOU__stat_08.c":69:22)
#loc63 = loc("CWE367_TOC_TOU__stat_08.c":69:17)
#loc64 = loc("CWE367_TOC_TOU__stat_08.c":69:49)
#loc65 = loc("CWE367_TOC_TOU__stat_08.c":69:48)
#loc66 = loc("CWE367_TOC_TOU__stat_08.c":70:13)
#loc67 = loc("CWE367_TOC_TOU__stat_08.c":71:17)
#loc68 = loc("CWE367_TOC_TOU__stat_08.c":71:22)
#loc69 = loc("CWE367_TOC_TOU__stat_08.c":73:30)
#loc70 = loc("CWE367_TOC_TOU__stat_08.c":73:40)
#loc71 = loc("CWE367_TOC_TOU__stat_08.c":73:25)
#loc72 = loc("CWE367_TOC_TOU__stat_08.c":73:13)
#loc73 = loc("CWE367_TOC_TOU__stat_08.c":73:46)
#loc74 = loc("CWE367_TOC_TOU__stat_08.c":74:13)
#loc75 = loc("CWE367_TOC_TOU__stat_08.c":77:13)
#loc76 = loc("CWE367_TOC_TOU__stat_08.c":74:17)
#loc77 = loc("CWE367_TOC_TOU__stat_08.c":74:30)
#loc78 = loc("CWE367_TOC_TOU__stat_08.c":74:29)
#loc79 = loc("CWE367_TOC_TOU__stat_08.c":75:13)
#loc80 = loc("CWE367_TOC_TOU__stat_08.c":76:17)
#loc81 = loc("CWE367_TOC_TOU__stat_08.c":76:22)
#loc82 = loc("CWE367_TOC_TOU__stat_08.c":78:13)
#loc83 = loc("CWE367_TOC_TOU__stat_08.c":81:13)
#loc84 = loc("CWE367_TOC_TOU__stat_08.c":78:23)
#loc85 = loc("CWE367_TOC_TOU__stat_08.c":78:50)
#loc86 = loc("CWE367_TOC_TOU__stat_08.c":78:72)
#loc87 = loc("CWE367_TOC_TOU__stat_08.c":78:17)
#loc88 = loc("CWE367_TOC_TOU__stat_08.c":78:79)
#loc89 = loc("CWE367_TOC_TOU__stat_08.c":78:78)
#loc90 = loc("CWE367_TOC_TOU__stat_08.c":79:13)
#loc91 = loc("CWE367_TOC_TOU__stat_08.c":80:17)
#loc92 = loc("CWE367_TOC_TOU__stat_08.c":80:22)
#loc93 = loc("CWE367_TOC_TOU__stat_08.c":82:13)
#loc94 = loc("CWE367_TOC_TOU__stat_08.c":85:13)
#loc95 = loc("CWE367_TOC_TOU__stat_08.c":82:17)
#loc96 = loc("CWE367_TOC_TOU__stat_08.c":82:30)
#loc97 = loc("CWE367_TOC_TOU__stat_08.c":82:29)
#loc98 = loc("CWE367_TOC_TOU__stat_08.c":83:13)
#loc99 = loc("CWE367_TOC_TOU__stat_08.c":84:23)
#loc100 = loc("CWE367_TOC_TOU__stat_08.c":84:17)
#loc101 = loc("CWE367_TOC_TOU__stat_08.c":171:1)
#loc102 = loc("CWE367_TOC_TOU__stat_08.c":175:1)
#loc103 = loc("CWE367_TOC_TOU__stat_08.c":173:5)
#loc104 = loc("CWE367_TOC_TOU__stat_08.c":173:11)
#loc105 = loc("CWE367_TOC_TOU__stat_08.c":174:5)
#loc106 = loc("CWE367_TOC_TOU__stat_08.c":174:11)
#loc107 = loc("CWE367_TOC_TOU__stat_08.c":38:1)
#loc108 = loc("CWE367_TOC_TOU__stat_08.c":41:1)
#loc109 = loc("CWE367_TOC_TOU__stat_08.c":40:12)
#loc110 = loc("CWE367_TOC_TOU__stat_08.c":40:5)
#loc111 = loc("CWE367_TOC_TOU__stat_08.c":100:19)
#loc112 = loc("CWE367_TOC_TOU__stat_08.c":123:33)
#loc113 = loc("CWE367_TOC_TOU__stat_08.c":95:1)
#loc114 = loc("CWE367_TOC_TOU__stat_08.c":133:1)
#loc115 = loc("CWE367_TOC_TOU__stat_08.c":97:5)
#loc116 = loc("CWE367_TOC_TOU__stat_08.c":132:5)
#loc117 = loc("CWE367_TOC_TOU__stat_08.c":97:8)
#loc118 = loc("CWE367_TOC_TOU__stat_08.c":97:27)
#loc119 = loc("CWE367_TOC_TOU__stat_08.c":98:5)
#loc120 = loc("CWE367_TOC_TOU__stat_08.c":101:5)
#loc121 = loc("CWE367_TOC_TOU__stat_08.c":103:5)
#loc122 = loc("CWE367_TOC_TOU__stat_08.c":100:9)
#loc123 = loc("CWE367_TOC_TOU__stat_08.c":104:9)
#loc124 = loc("CWE367_TOC_TOU__stat_08.c":131:9)
#loc125 = loc("CWE367_TOC_TOU__stat_08.c":105:13)
#loc126 = loc("CWE367_TOC_TOU__stat_08.c":105:34)
#loc127 = loc("CWE367_TOC_TOU__stat_08.c":106:13)
#loc128 = loc("CWE367_TOC_TOU__stat_08.c":106:29)
#loc129 = loc("CWE367_TOC_TOU__stat_08.c":106:28)
#loc130 = loc("CWE367_TOC_TOU__stat_08.c":107:13)
#loc131 = loc("CWE367_TOC_TOU__stat_08.c":112:13)
#loc132 = loc("CWE367_TOC_TOU__stat_08.c":107:23)
#loc133 = loc("CWE367_TOC_TOU__stat_08.c":107:33)
#loc134 = loc("CWE367_TOC_TOU__stat_08.c":107:38)
#loc135 = loc("CWE367_TOC_TOU__stat_08.c":107:17)
#loc136 = loc("CWE367_TOC_TOU__stat_08.c":107:48)
#loc137 = loc("CWE367_TOC_TOU__stat_08.c":108:13)
#loc138 = loc("CWE367_TOC_TOU__stat_08.c":109:27)
#loc139 = loc("CWE367_TOC_TOU__stat_08.c":109:17)
#loc140 = loc("CWE367_TOC_TOU__stat_08.c":111:31)
#loc141 = loc("CWE367_TOC_TOU__stat_08.c":111:26)
#loc142 = loc("CWE367_TOC_TOU__stat_08.c":111:17)
#loc143 = loc("CWE367_TOC_TOU__stat_08.c":113:13)
#loc144 = loc("CWE367_TOC_TOU__stat_08.c":116:13)
#loc145 = loc("CWE367_TOC_TOU__stat_08.c":113:17)
#loc146 = loc("CWE367_TOC_TOU__stat_08.c":113:24)
#loc147 = loc("CWE367_TOC_TOU__stat_08.c":113:36)
#loc148 = loc("CWE367_TOC_TOU__stat_08.c":114:13)
#loc149 = loc("CWE367_TOC_TOU__stat_08.c":115:48)
#loc150 = loc("CWE367_TOC_TOU__stat_08.c":115:26)
#loc151 = loc("CWE367_TOC_TOU__stat_08.c":115:33)
#loc152 = loc("CWE367_TOC_TOU__stat_08.c":115:43)
#loc153 = loc("CWE367_TOC_TOU__stat_08.c":115:17)
#loc154 = loc("CWE367_TOC_TOU__stat_08.c":118:30)
#loc155 = loc("CWE367_TOC_TOU__stat_08.c":118:40)
#loc156 = loc("CWE367_TOC_TOU__stat_08.c":118:25)
#loc157 = loc("CWE367_TOC_TOU__stat_08.c":118:13)
#loc158 = loc("CWE367_TOC_TOU__stat_08.c":118:46)
#loc159 = loc("CWE367_TOC_TOU__stat_08.c":119:13)
#loc160 = loc("CWE367_TOC_TOU__stat_08.c":122:13)
#loc161 = loc("CWE367_TOC_TOU__stat_08.c":119:17)
#loc162 = loc("CWE367_TOC_TOU__stat_08.c":119:30)
#loc163 = loc("CWE367_TOC_TOU__stat_08.c":119:29)
#loc164 = loc("CWE367_TOC_TOU__stat_08.c":120:13)
#loc165 = loc("CWE367_TOC_TOU__stat_08.c":121:17)
#loc166 = loc("CWE367_TOC_TOU__stat_08.c":121:22)
#loc167 = loc("CWE367_TOC_TOU__stat_08.c":123:13)
#loc168 = loc("CWE367_TOC_TOU__stat_08.c":126:13)
#loc169 = loc("CWE367_TOC_TOU__stat_08.c":123:23)
#loc170 = loc("CWE367_TOC_TOU__stat_08.c":123:51)
#loc171 = loc("CWE367_TOC_TOU__stat_08.c":123:74)
#loc172 = loc("CWE367_TOC_TOU__stat_08.c":123:17)
#loc173 = loc("CWE367_TOC_TOU__stat_08.c":123:81)
#loc174 = loc("CWE367_TOC_TOU__stat_08.c":123:80)
#loc175 = loc("CWE367_TOC_TOU__stat_08.c":124:13)
#loc176 = loc("CWE367_TOC_TOU__stat_08.c":125:17)
#loc177 = loc("CWE367_TOC_TOU__stat_08.c":125:22)
#loc178 = loc("CWE367_TOC_TOU__stat_08.c":127:13)
#loc179 = loc("CWE367_TOC_TOU__stat_08.c":130:13)
#loc180 = loc("CWE367_TOC_TOU__stat_08.c":127:17)
#loc181 = loc("CWE367_TOC_TOU__stat_08.c":127:30)
#loc182 = loc("CWE367_TOC_TOU__stat_08.c":127:29)
#loc183 = loc("CWE367_TOC_TOU__stat_08.c":128:13)
#loc184 = loc("CWE367_TOC_TOU__stat_08.c":129:23)
#loc185 = loc("CWE367_TOC_TOU__stat_08.c":129:17)
#loc186 = loc("CWE367_TOC_TOU__stat_08.c":43:1)
#loc187 = loc("CWE367_TOC_TOU__stat_08.c":46:1)
#loc188 = loc("CWE367_TOC_TOU__stat_08.c":45:12)
#loc189 = loc("CWE367_TOC_TOU__stat_08.c":45:5)
#loc190 = loc("CWE367_TOC_TOU__stat_08.c":136:1)
#loc191 = loc("CWE367_TOC_TOU__stat_08.c":169:1)
#loc192 = loc("CWE367_TOC_TOU__stat_08.c":138:5)
#loc193 = loc("CWE367_TOC_TOU__stat_08.c":168:5)
#loc194 = loc("CWE367_TOC_TOU__stat_08.c":138:8)
#loc195 = loc("CWE367_TOC_TOU__stat_08.c":138:26)
#loc196 = loc("CWE367_TOC_TOU__stat_08.c":139:5)
#loc197 = loc("CWE367_TOC_TOU__stat_08.c":140:9)
#loc198 = loc("CWE367_TOC_TOU__stat_08.c":167:9)
#loc199 = loc("CWE367_TOC_TOU__stat_08.c":141:13)
#loc200 = loc("CWE367_TOC_TOU__stat_08.c":141:34)
#loc201 = loc("CWE367_TOC_TOU__stat_08.c":142:13)
#loc202 = loc("CWE367_TOC_TOU__stat_08.c":142:29)
#loc203 = loc("CWE367_TOC_TOU__stat_08.c":142:28)
#loc204 = loc("CWE367_TOC_TOU__stat_08.c":143:13)
#loc205 = loc("CWE367_TOC_TOU__stat_08.c":148:13)
#loc206 = loc("CWE367_TOC_TOU__stat_08.c":143:23)
#loc207 = loc("CWE367_TOC_TOU__stat_08.c":143:33)
#loc208 = loc("CWE367_TOC_TOU__stat_08.c":143:38)
#loc209 = loc("CWE367_TOC_TOU__stat_08.c":143:17)
#loc210 = loc("CWE367_TOC_TOU__stat_08.c":143:48)
#loc211 = loc("CWE367_TOC_TOU__stat_08.c":144:13)
#loc212 = loc("CWE367_TOC_TOU__stat_08.c":145:27)
#loc213 = loc("CWE367_TOC_TOU__stat_08.c":145:17)
#loc214 = loc("CWE367_TOC_TOU__stat_08.c":147:31)
#loc215 = loc("CWE367_TOC_TOU__stat_08.c":147:26)
#loc216 = loc("CWE367_TOC_TOU__stat_08.c":147:17)
#loc217 = loc("CWE367_TOC_TOU__stat_08.c":149:13)
#loc218 = loc("CWE367_TOC_TOU__stat_08.c":152:13)
#loc219 = loc("CWE367_TOC_TOU__stat_08.c":149:17)
#loc220 = loc("CWE367_TOC_TOU__stat_08.c":149:24)
#loc221 = loc("CWE367_TOC_TOU__stat_08.c":149:36)
#loc222 = loc("CWE367_TOC_TOU__stat_08.c":150:13)
#loc223 = loc("CWE367_TOC_TOU__stat_08.c":151:48)
#loc224 = loc("CWE367_TOC_TOU__stat_08.c":151:26)
#loc225 = loc("CWE367_TOC_TOU__stat_08.c":151:33)
#loc226 = loc("CWE367_TOC_TOU__stat_08.c":151:43)
#loc227 = loc("CWE367_TOC_TOU__stat_08.c":151:17)
#loc228 = loc("CWE367_TOC_TOU__stat_08.c":154:30)
#loc229 = loc("CWE367_TOC_TOU__stat_08.c":154:40)
#loc230 = loc("CWE367_TOC_TOU__stat_08.c":154:25)
#loc231 = loc("CWE367_TOC_TOU__stat_08.c":154:13)
#loc232 = loc("CWE367_TOC_TOU__stat_08.c":154:46)
#loc233 = loc("CWE367_TOC_TOU__stat_08.c":155:13)
#loc234 = loc("CWE367_TOC_TOU__stat_08.c":158:13)
#loc235 = loc("CWE367_TOC_TOU__stat_08.c":155:17)
#loc236 = loc("CWE367_TOC_TOU__stat_08.c":155:30)
#loc237 = loc("CWE367_TOC_TOU__stat_08.c":155:29)
#loc238 = loc("CWE367_TOC_TOU__stat_08.c":156:13)
#loc239 = loc("CWE367_TOC_TOU__stat_08.c":157:17)
#loc240 = loc("CWE367_TOC_TOU__stat_08.c":157:22)
#loc241 = loc("CWE367_TOC_TOU__stat_08.c":159:13)
#loc242 = loc("CWE367_TOC_TOU__stat_08.c":162:13)
#loc243 = loc("CWE367_TOC_TOU__stat_08.c":159:23)
#loc244 = loc("CWE367_TOC_TOU__stat_08.c":159:33)
#loc245 = loc("CWE367_TOC_TOU__stat_08.c":159:51)
#loc246 = loc("CWE367_TOC_TOU__stat_08.c":159:74)
#loc247 = loc("CWE367_TOC_TOU__stat_08.c":159:17)
#loc248 = loc("CWE367_TOC_TOU__stat_08.c":159:81)
#loc249 = loc("CWE367_TOC_TOU__stat_08.c":159:80)
#loc250 = loc("CWE367_TOC_TOU__stat_08.c":160:13)
#loc251 = loc("CWE367_TOC_TOU__stat_08.c":161:17)
#loc252 = loc("CWE367_TOC_TOU__stat_08.c":161:22)
#loc253 = loc("CWE367_TOC_TOU__stat_08.c":163:13)
#loc254 = loc("CWE367_TOC_TOU__stat_08.c":166:13)
#loc255 = loc("CWE367_TOC_TOU__stat_08.c":163:17)
#loc256 = loc("CWE367_TOC_TOU__stat_08.c":163:30)
#loc257 = loc("CWE367_TOC_TOU__stat_08.c":163:29)
#loc258 = loc("CWE367_TOC_TOU__stat_08.c":164:13)
#loc259 = loc("CWE367_TOC_TOU__stat_08.c":165:23)
#loc260 = loc("CWE367_TOC_TOU__stat_08.c":165:17)
#loc261 = loc(fused[#loc1, #loc2])
#loc262 = loc(fused[#loc3, #loc4])
#loc263 = loc(fused[#loc5, #loc6])
#loc264 = loc(fused[#loc8, #loc9])
#loc265 = loc(fused[#loc10, #loc11])
#loc266 = loc(fused[#loc12, #loc13])
#loc267 = loc(fused[#loc14, #loc15])
#loc268 = loc(fused[#loc16, #loc17])
#loc269 = loc(fused[#loc19, #loc20])
#loc270 = loc(fused[#loc21, #loc22])
#loc271 = loc(fused[#loc23, #loc24])
#loc272 = loc(fused[#loc25, #loc26])
#loc273 = loc(fused[#loc27, #loc24])
#loc274 = loc(fused[#loc28, #loc29])
#loc275 = loc(fused[#loc30, #loc31])
#loc276 = loc(fused[#loc32, #loc33])
#loc277 = loc(fused[#loc34, #loc35])
#loc278 = loc(fused[#loc37, #loc38])
#loc279 = loc(fused[#loc42, #loc43])
#loc280 = loc(fused[#loc44, #loc38])
#loc281 = loc(fused[#loc48, #loc46])
#loc282 = loc(fused[#loc49, #loc50])
#loc283 = loc(fused[#loc51, #loc53])
#loc284 = loc(fused[#loc54, #loc50])
#loc285 = loc(fused[#loc56, #loc58])
#loc286 = loc(fused[#loc59, #loc55])
#loc287 = loc(fused[#loc60, #loc61])
#loc288 = loc(fused[#loc63, #loc64])
#loc289 = loc(fused[#loc66, #loc61])
#loc290 = loc(fused[#loc72, #loc73])
#loc291 = loc(fused[#loc74, #loc75])
#loc292 = loc(fused[#loc76, #loc77])
#loc293 = loc(fused[#loc79, #loc75])
#loc294 = loc(fused[#loc82, #loc83])
#loc295 = loc(fused[#loc85, #loc86])
#loc296 = loc(fused[#loc87, #loc88])
#loc297 = loc(fused[#loc90, #loc83])
#loc298 = loc(fused[#loc93, #loc94])
#loc299 = loc(fused[#loc95, #loc96])
#loc300 = loc(fused[#loc98, #loc94])
#loc301 = loc(fused[#loc101, #loc102])
#loc302 = loc(fused[#loc103, #loc104])
#loc303 = loc(fused[#loc105, #loc106])
#loc304 = loc(fused[#loc107, #loc108])
#loc305 = loc(fused[#loc110, #loc109])
#loc306 = loc(fused[#loc113, #loc114])
#loc307 = loc(fused[#loc115, #loc116])
#loc308 = loc(fused[#loc117, #loc118])
#loc309 = loc(fused[#loc119, #loc120, #loc121, #loc116])
#loc310 = loc(fused[#loc123, #loc124])
#loc311 = loc(fused[#loc125, #loc126])
#loc312 = loc(fused[#loc127, #loc128])
#loc313 = loc(fused[#loc130, #loc131])
#loc314 = loc(fused[#loc135, #loc136])
#loc315 = loc(fused[#loc137, #loc131])
#loc316 = loc(fused[#loc142, #loc140])
#loc317 = loc(fused[#loc143, #loc144])
#loc318 = loc(fused[#loc145, #loc147])
#loc319 = loc(fused[#loc148, #loc144])
#loc320 = loc(fused[#loc150, #loc152])
#loc321 = loc(fused[#loc153, #loc149])
#loc322 = loc(fused[#loc157, #loc158])
#loc323 = loc(fused[#loc159, #loc160])
#loc324 = loc(fused[#loc161, #loc162])
#loc325 = loc(fused[#loc164, #loc160])
#loc326 = loc(fused[#loc167, #loc168])
#loc327 = loc(fused[#loc170, #loc171])
#loc328 = loc(fused[#loc172, #loc173])
#loc329 = loc(fused[#loc175, #loc168])
#loc330 = loc(fused[#loc178, #loc179])
#loc331 = loc(fused[#loc180, #loc181])
#loc332 = loc(fused[#loc183, #loc179])
#loc333 = loc(fused[#loc186, #loc187])
#loc334 = loc(fused[#loc189, #loc188])
#loc335 = loc(fused[#loc190, #loc191])
#loc336 = loc(fused[#loc192, #loc193])
#loc337 = loc(fused[#loc194, #loc195])
#loc338 = loc(fused[#loc196, #loc193])
#loc339 = loc(fused[#loc197, #loc198])
#loc340 = loc(fused[#loc199, #loc200])
#loc341 = loc(fused[#loc201, #loc202])
#loc342 = loc(fused[#loc204, #loc205])
#loc343 = loc(fused[#loc209, #loc210])
#loc344 = loc(fused[#loc211, #loc205])
#loc345 = loc(fused[#loc216, #loc214])
#loc346 = loc(fused[#loc217, #loc218])
#loc347 = loc(fused[#loc219, #loc221])
#loc348 = loc(fused[#loc222, #loc218])
#loc349 = loc(fused[#loc224, #loc226])
#loc350 = loc(fused[#loc227, #loc223])
#loc351 = loc(fused[#loc231, #loc232])
#loc352 = loc(fused[#loc233, #loc234])
#loc353 = loc(fused[#loc235, #loc236])
#loc354 = loc(fused[#loc238, #loc234])
#loc355 = loc(fused[#loc241, #loc242])
#loc356 = loc(fused[#loc245, #loc246])
#loc357 = loc(fused[#loc247, #loc248])
#loc358 = loc(fused[#loc250, #loc242])
#loc359 = loc(fused[#loc253, #loc254])
#loc360 = loc(fused[#loc255, #loc256])
#loc361 = loc(fused[#loc258, #loc254])
