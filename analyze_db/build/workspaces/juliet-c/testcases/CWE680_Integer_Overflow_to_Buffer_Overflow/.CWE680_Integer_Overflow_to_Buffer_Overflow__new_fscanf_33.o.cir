!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc111)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc113)
  cir.func private @printIntLine(!s32i) loc(#loc114)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc116)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc117)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc118)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc119)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc120)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc121)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc22)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc24)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %8 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc26)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc112)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %13 = cir.call @__isoc23_fscanf(%10, %12, %4) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc26)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.br ^bb2 loc(#loc124)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc32)
    %18 = cir.const #cir.int<4> : !u64i loc(#loc125)
    %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc126)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc127)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %21 = cir.call @_Znam(%20) : (!u64i) -> !cir.ptr<!void> loc(#loc37)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc128)
    cir.store %23, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    cir.br ^bb3 loc(#loc130)
  ^bb3:  // pred: ^bb2
    %24 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc43)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc131)
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc46)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc132)
    cir.brcond %29 ^bb5, ^bb9 loc(#loc132)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc133)
  ^bb6:  // pred: ^bb5
    %30 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc51)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    cir.br ^bb7 loc(#loc42)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc42)
  ^bb8:  // pred: ^bb7
    %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc53)
    cir.store %35, %2 : !u64i, !cir.ptr<!u64i> loc(#loc135)
    cir.br ^bb4 loc(#loc130)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc42)
  ^bb10:  // pred: ^bb9
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc56)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc57)
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    cir.delete.array %40 : <!s32i> loc(#loc58)
    cir.br ^bb11 loc(#loc31)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc29)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc11)
  } loc(#loc115)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc139)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc140)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc141)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc142)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc71)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc73)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %8 = cir.const #cir.int<20> : !s32i loc(#loc75)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.br ^bb2 loc(#loc146)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc81)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc147)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc148)
    cir.store %14, %1 : !u64i, !cir.ptr<!u64i> loc(#loc149)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc85)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc86)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc150)
    cir.store %18, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
    cir.br ^bb3 loc(#loc152)
  ^bb3:  // pred: ^bb2
    %19 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc92)
    cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc153)
    cir.br ^bb4 loc(#loc152)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc94)
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc95)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc154)
    cir.brcond %24 ^bb5, ^bb9 loc(#loc154)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc155)
  ^bb6:  // pred: ^bb5
    %25 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
    %27 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc99)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc100)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.br ^bb7 loc(#loc91)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc91)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc102)
    cir.store %30, %2 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.br ^bb4 loc(#loc152)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc91)
  ^bb10:  // pred: ^bb9
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc105)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc106)
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
    cir.delete.array %35 : <!s32i> loc(#loc107)
    cir.br ^bb11 loc(#loc80)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc78)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc60)
  } loc(#loc136)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_334goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33L7goodG2BEv() : () -> () loc(#loc110)
    cir.return loc(#loc109)
  } loc(#loc158)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":31:19)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":24:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":48:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":33:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":33:20)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":35:13)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":35:20)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":35:30)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":36:13)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":36:18)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":26:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":26:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":27:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":27:20)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":29:13)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":29:12)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":29:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":31:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":31:12)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":32:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":47:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":34:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":46:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":38:25)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":38:32)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":38:42)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":38:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":39:41)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":24:6)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":39:32)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":39:50)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":39:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":40:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":43:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":40:22)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":40:18)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":40:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":40:37)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":41:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":42:33)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":42:17)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":42:28)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":42:29)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":40:44)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":40:43)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":44:26)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":44:37)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":44:38)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":44:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":45:23)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":55:1)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":79:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":64:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":64:20)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":66:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":66:20)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":66:30)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":67:13)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":67:18)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":57:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":57:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":58:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":58:20)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":60:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":60:12)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":60:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":62:12)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":62:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":63:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":78:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":65:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":77:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":69:25)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":69:32)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":69:42)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":69:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":70:41)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":55:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":70:32)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":70:50)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":70:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":71:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":74:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":71:22)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":71:18)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":71:25)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":71:37)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":72:13)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":73:33)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":73:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":73:28)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":73:29)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":71:44)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":71:43)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":75:26)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":75:37)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":75:38)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":75:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":76:23)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":81:1)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":84:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_33.cpp":83:5)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc6, #loc7])
#loc114 = loc(fused[#loc8, #loc9])
#loc115 = loc(fused[#loc10, #loc11])
#loc116 = loc(fused[#loc12, #loc13])
#loc117 = loc(fused[#loc14, #loc15])
#loc118 = loc(fused[#loc14, #loc16])
#loc119 = loc(fused[#loc17, #loc18])
#loc120 = loc(fused[#loc19, #loc20])
#loc121 = loc(fused[#loc21, #loc22])
#loc122 = loc(fused[#loc25, #loc23])
#loc123 = loc(fused[#loc28, #loc29])
#loc124 = loc(fused[#loc30, #loc31])
#loc125 = loc(fused[#loc33, #loc34])
#loc126 = loc(fused[#loc32, #loc34])
#loc127 = loc(fused[#loc35, #loc34])
#loc128 = loc(fused[#loc38, #loc39])
#loc129 = loc(fused[#loc40, #loc39])
#loc130 = loc(fused[#loc41, #loc42])
#loc131 = loc(fused[#loc44, #loc43])
#loc132 = loc(fused[#loc45, #loc46])
#loc133 = loc(fused[#loc47, #loc42])
#loc134 = loc(fused[#loc49, #loc48])
#loc135 = loc(fused[#loc53, #loc52])
#loc136 = loc(fused[#loc59, #loc60])
#loc137 = loc(fused[#loc61, #loc62])
#loc138 = loc(fused[#loc63, #loc64])
#loc139 = loc(fused[#loc63, #loc65])
#loc140 = loc(fused[#loc66, #loc67])
#loc141 = loc(fused[#loc68, #loc69])
#loc142 = loc(fused[#loc70, #loc71])
#loc143 = loc(fused[#loc74, #loc72])
#loc144 = loc(fused[#loc76, #loc75])
#loc145 = loc(fused[#loc77, #loc78])
#loc146 = loc(fused[#loc79, #loc80])
#loc147 = loc(fused[#loc82, #loc83])
#loc148 = loc(fused[#loc81, #loc83])
#loc149 = loc(fused[#loc84, #loc83])
#loc150 = loc(fused[#loc87, #loc88])
#loc151 = loc(fused[#loc89, #loc88])
#loc152 = loc(fused[#loc90, #loc91])
#loc153 = loc(fused[#loc93, #loc92])
#loc154 = loc(fused[#loc94, #loc95])
#loc155 = loc(fused[#loc96, #loc91])
#loc156 = loc(fused[#loc98, #loc97])
#loc157 = loc(fused[#loc102, #loc101])
#loc158 = loc(fused[#loc108, #loc109])
