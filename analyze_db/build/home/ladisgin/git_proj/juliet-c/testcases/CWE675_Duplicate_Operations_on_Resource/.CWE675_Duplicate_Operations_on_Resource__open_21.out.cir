!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":34:21)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":34:25)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":148:10)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":148:14)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":148:20)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":148:32)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":64:26)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":64:30)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":91:26)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":91:30)
#loc150 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":113:25)
#loc151 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":113:29)
#loc181 = loc(fused[#loc10, #loc11])
#loc199 = loc(fused[#loc59, #loc60])
#loc200 = loc(fused[#loc61, #loc62])
#loc206 = loc(fused[#loc82, #loc83])
#loc218 = loc(fused[#loc117, #loc118])
#loc230 = loc(fused[#loc150, #loc151])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc178)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc179)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc10, #loc11])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc181)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc12)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc179)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
        %5 = cir.call @close(%4) : (!s32i) -> !s32i loc(#loc18)
      } loc(#loc183)
    } loc(#loc182)
    cir.return loc(#loc9)
  } loc(#loc180)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc24)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc27)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc187)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc28)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc29)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc188)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc30)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc34)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %15 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc179)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.call @badSink(%16) : (!s32i) -> () loc(#loc38)
    cir.return loc(#loc20)
  } loc(#loc184)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc40)
  } loc(#loc191)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc195)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc196)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func @main(%arg0: !s32i loc(fused[#loc59, #loc60]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc200)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc65)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc65)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc66)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_21_good() : () -> () loc(#loc68)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_21_bad() : () -> () loc(#loc72)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.return %17 : !s32i loc(#loc203)
  } loc(#loc198)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc79)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc82, #loc83])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc206)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc204)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc87)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc87)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc91)
      } else {
      } loc(#loc208)
    } loc(#loc207)
    cir.return loc(#loc81)
  } loc(#loc205)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc97)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc99)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc99)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc100)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc101)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc212)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc102)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc103)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc213)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc104)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc108)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %15 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc204)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @goodB2G1Sink(%16) : (!s32i) -> () loc(#loc112)
    cir.return loc(#loc93)
  } loc(#loc209)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc216)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc117, #loc118])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc218)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc216)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc122)
      cir.if %3 {
      } loc(#loc220)
    } loc(#loc219)
    cir.return loc(#loc116)
  } loc(#loc217)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc129)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc131)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc131)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc132)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc133)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc224)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc134)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc135)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc225)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc136)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc140)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %15 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc216)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.call @goodB2G2Sink(%16) : (!s32i) -> () loc(#loc144)
    cir.return loc(#loc125)
  } loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc145)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc228)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc150, #loc151])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc230)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc228)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc155)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
        %5 = cir.call @close(%4) : (!s32i) -> !s32i loc(#loc158)
      } loc(#loc232)
    } loc(#loc231)
    cir.return loc(#loc149)
  } loc(#loc229)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc234)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc164)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc145)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc145)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc166)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc167)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc236)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc168)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc169)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc237)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc170)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %13 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc228)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.call @goodG2BSink(%14) : (!s32i) -> () loc(#loc176)
    cir.return loc(#loc160)
  } loc(#loc233)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_21.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":47:17)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":32:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":32:24)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":34:1)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":41:1)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":35:1)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":36:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":40:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":36:8)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":37:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":39:15)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":39:9)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":43:1)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":52:1)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":45:5)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":45:9)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":46:13)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":46:12)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":46:5)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":47:39)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":47:46)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":47:55)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":47:63)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":47:12)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":47:5)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":47:71)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":49:11)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":49:5)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":50:17)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":50:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":51:13)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":51:5)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":132:1)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":137:1)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":134:5)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":134:14)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":135:5)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":135:14)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":136:5)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":136:13)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":153:15)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":155:15)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":158:15)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":160:15)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":148:1)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":163:1)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":149:1)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":151:27)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":151:22)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":151:5)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":153:5)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":154:5)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":154:59)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":155:5)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":158:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":159:5)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":159:58)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":160:5)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":162:12)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":162:5)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":59:1)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":59:29)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":69:19)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":64:1)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":77:1)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":65:1)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":66:5)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":76:5)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":66:8)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":67:5)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":70:5)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":72:5)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":69:9)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":79:1)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":88:1)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":81:5)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":81:9)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":82:13)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":82:12)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":82:5)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":83:17)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":83:39)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":83:46)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":83:55)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":83:63)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":83:12)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":83:5)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":83:71)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":85:11)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":85:5)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":86:22)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":86:5)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":87:18)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":87:5)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":60:1)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":60:29)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":91:1)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":99:1)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":92:1)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":93:5)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":98:5)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":93:8)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":94:5)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":101:1)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":110:1)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":103:5)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":103:9)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":104:13)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":104:12)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":104:5)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":105:17)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":105:39)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":105:46)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":105:55)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":105:63)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":105:12)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":105:5)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":105:71)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":107:11)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":107:5)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":108:22)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":108:5)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":109:18)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":109:5)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":127:17)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":61:1)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":61:28)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":113:1)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":120:1)
#loc152 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":114:1)
#loc153 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":115:5)
#loc154 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":119:5)
#loc155 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":115:8)
#loc156 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":116:5)
#loc157 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":118:15)
#loc158 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":118:9)
#loc159 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":122:1)
#loc160 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":130:1)
#loc161 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":124:5)
#loc162 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":124:9)
#loc163 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":125:13)
#loc164 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":125:12)
#loc165 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":125:5)
#loc166 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":127:40)
#loc167 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":127:47)
#loc168 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":127:56)
#loc169 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":127:64)
#loc170 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":127:12)
#loc171 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":127:5)
#loc172 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":127:72)
#loc173 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":128:21)
#loc174 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":128:5)
#loc175 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":129:17)
#loc176 = loc("CWE675_Duplicate_Operations_on_Resource__open_21.c":129:5)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc4, #loc5])
#loc179 = loc(fused[#loc6, #loc7])
#loc180 = loc(fused[#loc8, #loc9])
#loc182 = loc(fused[#loc13, #loc14])
#loc183 = loc(fused[#loc16, #loc14])
#loc184 = loc(fused[#loc19, #loc20])
#loc185 = loc(fused[#loc21, #loc22])
#loc186 = loc(fused[#loc25, #loc23])
#loc187 = loc(fused[#loc26, #loc27])
#loc188 = loc(fused[#loc28, #loc29])
#loc189 = loc(fused[#loc31, #loc32])
#loc190 = loc(fused[#loc36, #loc35])
#loc191 = loc(fused[#loc39, #loc40])
#loc192 = loc(fused[#loc41, #loc42])
#loc193 = loc(fused[#loc43, #loc44])
#loc194 = loc(fused[#loc45, #loc46])
#loc195 = loc(fused[#loc47, #loc48])
#loc196 = loc(fused[#loc49, #loc50])
#loc197 = loc(fused[#loc51, #loc52])
#loc198 = loc(fused[#loc57, #loc58])
#loc201 = loc(fused[#loc68, #loc69])
#loc202 = loc(fused[#loc72, #loc73])
#loc203 = loc(fused[#loc76, #loc75])
#loc204 = loc(fused[#loc77, #loc78])
#loc205 = loc(fused[#loc80, #loc81])
#loc207 = loc(fused[#loc85, #loc86])
#loc208 = loc(fused[#loc88, #loc89, #loc90, #loc86])
#loc209 = loc(fused[#loc92, #loc93])
#loc210 = loc(fused[#loc94, #loc95])
#loc211 = loc(fused[#loc98, #loc96])
#loc212 = loc(fused[#loc100, #loc101])
#loc213 = loc(fused[#loc102, #loc103])
#loc214 = loc(fused[#loc105, #loc106])
#loc215 = loc(fused[#loc110, #loc109])
#loc216 = loc(fused[#loc113, #loc114])
#loc217 = loc(fused[#loc115, #loc116])
#loc219 = loc(fused[#loc120, #loc121])
#loc220 = loc(fused[#loc123, #loc121])
#loc221 = loc(fused[#loc124, #loc125])
#loc222 = loc(fused[#loc126, #loc127])
#loc223 = loc(fused[#loc130, #loc128])
#loc224 = loc(fused[#loc132, #loc133])
#loc225 = loc(fused[#loc134, #loc135])
#loc226 = loc(fused[#loc137, #loc138])
#loc227 = loc(fused[#loc142, #loc141])
#loc228 = loc(fused[#loc146, #loc147])
#loc229 = loc(fused[#loc148, #loc149])
#loc231 = loc(fused[#loc153, #loc154])
#loc232 = loc(fused[#loc156, #loc154])
#loc233 = loc(fused[#loc159, #loc160])
#loc234 = loc(fused[#loc161, #loc162])
#loc235 = loc(fused[#loc165, #loc163])
#loc236 = loc(fused[#loc166, #loc167])
#loc237 = loc(fused[#loc168, #loc169])
#loc238 = loc(fused[#loc171, #loc172])
#loc239 = loc(fused[#loc174, #loc173])
