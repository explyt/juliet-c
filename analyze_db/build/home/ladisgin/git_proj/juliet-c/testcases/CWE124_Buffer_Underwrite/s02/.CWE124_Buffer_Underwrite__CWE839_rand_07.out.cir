!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":35:16)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":232:10)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":232:14)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":232:20)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":232:32)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":74:16)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":87:27)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":113:16)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":121:27)
#true = #cir.bool<true> : !cir.bool
#loc347 = loc(fused[#loc79, #loc80])
#loc348 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc313)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc314)
  cir.func private @printIntLine(!s32i) loc(#loc315)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_rand_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc319)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc320)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc19)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.br ^bb1 loc(#loc322)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc313)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc24)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc323)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc324)
  ^bb2:  // pred: ^bb1
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.binop(and, %9, %10) : !s32i loc(#loc26)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %12 ^bb3, ^bb4 loc(#loc26)
  ^bb3:  // pred: ^bb2
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc26)
    %15 = cir.const #cir.int<30> : !s32i loc(#loc26)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc26)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc26)
    %19 = cir.const #cir.int<15> : !s32i loc(#loc26)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc26)
    %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc26)
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc26)
    %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc26)
    cir.br ^bb5(%24 : !u32i) loc(#loc26)
  ^bb4:  // pred: ^bb2
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc26)
    %27 = cir.const #cir.int<30> : !s32i loc(#loc26)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc26)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc26)
    %31 = cir.const #cir.int<15> : !s32i loc(#loc26)
    %32 = cir.shift(left, %30 : !u32i, %31 : !s32i) -> !u32i loc(#loc26)
    %33 = cir.binop(xor, %28, %32) : !u32i loc(#loc26)
    %34 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc26)
    %36 = cir.binop(xor, %33, %35) : !u32i loc(#loc26)
    %37 = cir.unary(minus, %36) : !u32i, !u32i loc(#loc26)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %39 = cir.cast(integral, %38 : !s32i), !u32i loc(#loc26)
    %40 = cir.binop(sub, %37, %39) : !u32i loc(#loc26)
    cir.br ^bb5(%40 : !u32i) loc(#loc26)
  ^bb5(%41: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":35:16)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    %42 = cir.cast(integral, %41 : !u32i), !s32i loc(#loc26)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc326)
  ^bb9:  // pred: ^bb8
    %43 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc313)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc31)
    %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc327)
    cir.brcond %46 ^bb10, ^bb26 loc(#loc328)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc329)
  ^bb11:  // pred: ^bb10
    %47 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc319)
    cir.store %47, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc319)
    cir.br ^bb12 loc(#loc330)
  ^bb12:  // pred: ^bb11
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %49 = cir.const #cir.int<10> : !s32i loc(#loc38)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc331)
    cir.brcond %50 ^bb13, ^bb22 loc(#loc332)
  ^bb13:  // pred: ^bb12
    %51 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %53 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc44)
    %54 = cir.ptr_stride(%53 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc44)
    cir.store %51, %54 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb14 loc(#loc334)
  ^bb14:  // pred: ^bb13
    %55 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %55, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb15 loc(#loc334)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %56 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %57 = cir.const #cir.int<10> : !s32i loc(#loc50)
    %58 = cir.cmp(lt, %56, %57) : !s32i, !cir.bool loc(#loc336)
    cir.brcond %58 ^bb16, ^bb20 loc(#loc51)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc337)
  ^bb17:  // pred: ^bb16
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %60 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc54)
    %61 = cir.ptr_stride(%60 : !cir.ptr<!s32i>, %59 : !s32i), !cir.ptr<!s32i> loc(#loc54)
    %62 = cir.load %61 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.call @printIntLine(%62) : (!s32i) -> () loc(#loc55)
    cir.br ^bb18 loc(#loc46)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc46)
  ^bb19:  // pred: ^bb18
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %64 = cir.unary(inc, %63) : !s32i, !s32i loc(#loc57)
    cir.store %64, %0 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.br ^bb15 loc(#loc334)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc46)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23 loc(#loc40)
  ^bb22:  // pred: ^bb12
    %65 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc9)
    %66 = cir.cast(array_to_ptrdecay, %65 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%66) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb23 loc(#loc36)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc36)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc34)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc29)
  ^bb26:  // 2 preds: ^bb9, ^bb25
    cir.br ^bb27 loc(#loc29)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc11)
  } loc(#loc317)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_rand_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc340)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc341)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc342)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc343)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc60)
  } loc(#loc339)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc344)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc345)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc347)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc348)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_rand_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc349)
    cir.call @CWE124_Buffer_Underwrite__CWE839_rand_07_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_rand_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc350)
    cir.call @CWE124_Buffer_Underwrite__CWE839_rand_07_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc351)
    cir.return %17 : !s32i loc(#loc351)
  } loc(#loc346)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc98)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc353)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc354)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc355)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc108)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.br ^bb1 loc(#loc357)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc313)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc113)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc359)
  ^bb2:  // pred: ^bb1
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %11 = cir.binop(and, %9, %10) : !s32i loc(#loc115)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc115)
    cir.brcond %12 ^bb3, ^bb4 loc(#loc115)
  ^bb3:  // pred: ^bb2
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc115)
    %15 = cir.const #cir.int<30> : !s32i loc(#loc115)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc115)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc115)
    %19 = cir.const #cir.int<15> : !s32i loc(#loc115)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc115)
    %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc115)
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc115)
    %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc115)
    cir.br ^bb5(%24 : !u32i) loc(#loc115)
  ^bb4:  // pred: ^bb2
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc115)
    %27 = cir.const #cir.int<30> : !s32i loc(#loc115)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc115)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc115)
    %31 = cir.const #cir.int<15> : !s32i loc(#loc115)
    %32 = cir.shift(left, %30 : !u32i, %31 : !s32i) -> !u32i loc(#loc115)
    %33 = cir.binop(xor, %28, %32) : !u32i loc(#loc115)
    %34 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc115)
    %36 = cir.binop(xor, %33, %35) : !u32i loc(#loc115)
    %37 = cir.unary(minus, %36) : !u32i, !u32i loc(#loc115)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %39 = cir.cast(integral, %38 : !s32i), !u32i loc(#loc115)
    %40 = cir.binop(sub, %37, %39) : !u32i loc(#loc115)
    cir.br ^bb5(%40 : !u32i) loc(#loc115)
  ^bb5(%41: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":74:16)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc115)
  ^bb6:  // pred: ^bb5
    %42 = cir.cast(integral, %41 : !u32i), !s32i loc(#loc115)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    cir.br ^bb7 loc(#loc111)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc111)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc361)
  ^bb9:  // pred: ^bb8
    %43 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc313)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc120)
    %46 = cir.cmp(ne, %44, %45) : !s32i, !cir.bool loc(#loc362)
    cir.brcond %46 ^bb10, ^bb11 loc(#loc363)
  ^bb10:  // pred: ^bb9
    %47 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb35 loc(#loc122)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc364)
  ^bb12:  // pred: ^bb11
    %49 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc354)
    cir.store %49, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc354)
    cir.br ^bb13 loc(#loc365)
  ^bb13:  // pred: ^bb12
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %52 = cir.cmp(ge, %50, %51) : !s32i, !cir.bool loc(#loc366)
    cir.brcond %52 ^bb14, ^bb19 loc(#loc131)
  ^bb14:  // pred: ^bb13
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %54 = cir.const #cir.int<10> : !s32i loc(#loc133)
    %55 = cir.cmp(lt, %53, %54) : !s32i, !cir.bool loc(#loc367)
    cir.brcond %55 ^bb15, ^bb16 loc(#loc131)
  ^bb15:  // pred: ^bb14
    %56 = cir.const #true loc(#loc131)
    cir.br ^bb17(%56 : !cir.bool) loc(#loc131)
  ^bb16:  // pred: ^bb14
    %57 = cir.const #false loc(#loc131)
    cir.br ^bb17(%57 : !cir.bool) loc(#loc131)
  ^bb17(%58: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":87:27)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc131)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20(%58 : !cir.bool) loc(#loc131)
  ^bb19:  // pred: ^bb13
    %59 = cir.const #false loc(#loc131)
    cir.br ^bb20(%59 : !cir.bool) loc(#loc131)
  ^bb20(%60: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":87:27)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc131)
  ^bb21:  // pred: ^bb20
    cir.brcond %60 ^bb22, ^bb31 loc(#loc368)
  ^bb22:  // pred: ^bb21
    %61 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %62 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %63 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc140)
    %64 = cir.ptr_stride(%63 : !cir.ptr<!s32i>, %62 : !s32i), !cir.ptr<!s32i> loc(#loc140)
    cir.store %61, %64 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    cir.br ^bb23 loc(#loc370)
  ^bb23:  // pred: ^bb22
    %65 = cir.const #cir.int<0> : !s32i loc(#loc143)
    cir.store %65, %0 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb24 loc(#loc370)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %66 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %67 = cir.const #cir.int<10> : !s32i loc(#loc146)
    %68 = cir.cmp(lt, %66, %67) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %68 ^bb25, ^bb29 loc(#loc147)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc373)
  ^bb26:  // pred: ^bb25
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %70 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc150)
    %71 = cir.ptr_stride(%70 : !cir.ptr<!s32i>, %69 : !s32i), !cir.ptr<!s32i> loc(#loc150)
    %72 = cir.load %71 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.call @printIntLine(%72) : (!s32i) -> () loc(#loc151)
    cir.br ^bb27 loc(#loc142)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc142)
  ^bb28:  // pred: ^bb27
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %74 = cir.unary(inc, %73) : !s32i, !s32i loc(#loc153)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb24 loc(#loc370)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc142)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc136)
  ^bb31:  // pred: ^bb21
    %75 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc98)
    %76 = cir.cast(array_to_ptrdecay, %75 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    cir.br ^bb32 loc(#loc128)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc128)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc126)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc118)
  ^bb35:  // 2 preds: ^bb10, ^bb34
    cir.br ^bb36 loc(#loc118)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc100)
  } loc(#loc352)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc376)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc377)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc378)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc164)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.br ^bb1 loc(#loc380)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc313)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc169)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc381)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc382)
  ^bb2:  // pred: ^bb1
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc171)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %11 = cir.binop(and, %9, %10) : !s32i loc(#loc171)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc171)
    cir.brcond %12 ^bb3, ^bb4 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc171)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc171)
    %15 = cir.const #cir.int<30> : !s32i loc(#loc171)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc171)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc171)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc171)
    %19 = cir.const #cir.int<15> : !s32i loc(#loc171)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc171)
    %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc171)
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc171)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc171)
    %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc171)
    cir.br ^bb5(%24 : !u32i) loc(#loc171)
  ^bb4:  // pred: ^bb2
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc171)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc171)
    %27 = cir.const #cir.int<30> : !s32i loc(#loc171)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc171)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc171)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc171)
    %31 = cir.const #cir.int<15> : !s32i loc(#loc171)
    %32 = cir.shift(left, %30 : !u32i, %31 : !s32i) -> !u32i loc(#loc171)
    %33 = cir.binop(xor, %28, %32) : !u32i loc(#loc171)
    %34 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc171)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc171)
    %36 = cir.binop(xor, %33, %35) : !u32i loc(#loc171)
    %37 = cir.unary(minus, %36) : !u32i, !u32i loc(#loc171)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %39 = cir.cast(integral, %38 : !s32i), !u32i loc(#loc171)
    %40 = cir.binop(sub, %37, %39) : !u32i loc(#loc171)
    cir.br ^bb5(%40 : !u32i) loc(#loc171)
  ^bb5(%41: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":113:16)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc171)
  ^bb6:  // pred: ^bb5
    %42 = cir.cast(integral, %41 : !u32i), !s32i loc(#loc171)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb7 loc(#loc167)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc167)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc384)
  ^bb9:  // pred: ^bb8
    %43 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc313)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc176)
    %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc385)
    cir.brcond %46 ^bb10, ^bb34 loc(#loc386)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc387)
  ^bb11:  // pred: ^bb10
    %47 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc377)
    cir.store %47, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc377)
    cir.br ^bb12 loc(#loc388)
  ^bb12:  // pred: ^bb11
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %50 = cir.cmp(ge, %48, %49) : !s32i, !cir.bool loc(#loc389)
    cir.brcond %50 ^bb13, ^bb18 loc(#loc184)
  ^bb13:  // pred: ^bb12
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %52 = cir.const #cir.int<10> : !s32i loc(#loc186)
    %53 = cir.cmp(lt, %51, %52) : !s32i, !cir.bool loc(#loc390)
    cir.brcond %53 ^bb14, ^bb15 loc(#loc184)
  ^bb14:  // pred: ^bb13
    %54 = cir.const #true loc(#loc184)
    cir.br ^bb16(%54 : !cir.bool) loc(#loc184)
  ^bb15:  // pred: ^bb13
    %55 = cir.const #false loc(#loc184)
    cir.br ^bb16(%55 : !cir.bool) loc(#loc184)
  ^bb16(%56: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":121:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc184)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%56 : !cir.bool) loc(#loc184)
  ^bb18:  // pred: ^bb12
    %57 = cir.const #false loc(#loc184)
    cir.br ^bb19(%57 : !cir.bool) loc(#loc184)
  ^bb19(%58: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":121:27)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc184)
  ^bb20:  // pred: ^bb19
    cir.brcond %58 ^bb21, ^bb30 loc(#loc391)
  ^bb21:  // pred: ^bb20
    %59 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %60 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %61 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc193)
    %62 = cir.ptr_stride(%61 : !cir.ptr<!s32i>, %60 : !s32i), !cir.ptr<!s32i> loc(#loc193)
    cir.store %59, %62 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.br ^bb22 loc(#loc393)
  ^bb22:  // pred: ^bb21
    %63 = cir.const #cir.int<0> : !s32i loc(#loc196)
    cir.store %63, %0 : !s32i, !cir.ptr<!s32i> loc(#loc394)
    cir.br ^bb23 loc(#loc393)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %65 = cir.const #cir.int<10> : !s32i loc(#loc199)
    %66 = cir.cmp(lt, %64, %65) : !s32i, !cir.bool loc(#loc395)
    cir.brcond %66 ^bb24, ^bb28 loc(#loc200)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc396)
  ^bb25:  // pred: ^bb24
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    %68 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc203)
    %69 = cir.ptr_stride(%68 : !cir.ptr<!s32i>, %67 : !s32i), !cir.ptr<!s32i> loc(#loc203)
    %70 = cir.load %69 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.call @printIntLine(%70) : (!s32i) -> () loc(#loc204)
    cir.br ^bb26 loc(#loc195)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc195)
  ^bb27:  // pred: ^bb26
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    %72 = cir.unary(inc, %71) : !s32i, !s32i loc(#loc206)
    cir.store %72, %0 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    cir.br ^bb23 loc(#loc393)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc195)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc189)
  ^bb30:  // pred: ^bb20
    %73 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc207)
    %74 = cir.cast(array_to_ptrdecay, %73 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc207)
    cir.call @printLine(%74) : (!cir.ptr<!s8i>) -> () loc(#loc208)
    cir.br ^bb31 loc(#loc181)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc181)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc179)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc174)
  ^bb34:  // 2 preds: ^bb9, ^bb33
    cir.br ^bb35 loc(#loc174)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc156)
  } loc(#loc375)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc399)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc400)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc401)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc218)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc402)
    cir.br ^bb1 loc(#loc403)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc313)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc223)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc404)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc405)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc227)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    cir.br ^bb4 loc(#loc225)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<7> : !s32i loc(#loc229)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    cir.br ^bb4 loc(#loc221)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc221)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc407)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc313)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    %14 = cir.const #cir.int<5> : !s32i loc(#loc234)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %15 ^bb7, ^bb23 loc(#loc409)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc410)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc400)
    cir.store %16, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc400)
    cir.br ^bb9 loc(#loc411)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc241)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc412)
    cir.brcond %19 ^bb10, ^bb19 loc(#loc413)
  ^bb10:  // pred: ^bb9
    %20 = cir.const #cir.int<1> : !s32i loc(#loc245)
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc247)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc247)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    cir.br ^bb11 loc(#loc415)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc250)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc416)
    cir.br ^bb12 loc(#loc415)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc253)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc417)
    cir.brcond %27 ^bb13, ^bb17 loc(#loc254)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc418)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc257)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc257)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc258)
    cir.br ^bb15 loc(#loc249)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc249)
  ^bb16:  // pred: ^bb15
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %33 = cir.unary(inc, %32) : !s32i, !s32i loc(#loc260)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc419)
    cir.br ^bb12 loc(#loc415)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc249)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc243)
  ^bb19:  // pred: ^bb9
    %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc261)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc261)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc262)
    cir.br ^bb20 loc(#loc239)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc239)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc237)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc232)
  ^bb23:  // 2 preds: ^bb6, ^bb22
    cir.br ^bb24 loc(#loc232)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc210)
  } loc(#loc398)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc421)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc422)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc423)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc271)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc272)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc424)
    cir.br ^bb1 loc(#loc425)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc313)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc277)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc426)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc427)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<7> : !s32i loc(#loc279)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc428)
    cir.br ^bb3 loc(#loc275)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc275)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc429)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc313)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc284)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc430)
    cir.brcond %13 ^bb6, ^bb22 loc(#loc431)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc432)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc422)
    cir.store %14, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc422)
    cir.br ^bb8 loc(#loc433)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc291)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc434)
    cir.brcond %17 ^bb9, ^bb18 loc(#loc435)
  ^bb9:  // pred: ^bb8
    %18 = cir.const #cir.int<1> : !s32i loc(#loc295)
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc297)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc297)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    cir.br ^bb10 loc(#loc437)
  ^bb10:  // pred: ^bb9
    %22 = cir.const #cir.int<0> : !s32i loc(#loc300)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    cir.br ^bb11 loc(#loc437)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc303)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc439)
    cir.brcond %25 ^bb12, ^bb16 loc(#loc304)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc440)
  ^bb13:  // pred: ^bb12
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc306)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc307)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc307)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc308)
    cir.br ^bb14 loc(#loc299)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc299)
  ^bb15:  // pred: ^bb14
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    %31 = cir.unary(inc, %30) : !s32i, !s32i loc(#loc310)
    cir.store %31, %0 : !s32i, !cir.ptr<!s32i> loc(#loc441)
    cir.br ^bb11 loc(#loc437)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc299)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc293)
  ^bb18:  // pred: ^bb8
    %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc311)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc311)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc312)
    cir.br ^bb19 loc(#loc289)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc289)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc287)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc282)
  ^bb22:  // 2 preds: ^bb5, ^bb21
    cir.br ^bb23 loc(#loc282)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc264)
  } loc(#loc420)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_07.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":23:1)
#loc2 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":23:25)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":55:27)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":27:1)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":59:1)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":40:13)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":40:17)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":41:13)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":41:34)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":29:5)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":29:9)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":31:13)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":31:12)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":31:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":32:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":36:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":32:8)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":32:20)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":33:5)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":35:9)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":37:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":58:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":37:8)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":37:20)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":38:5)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":39:9)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":57:9)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":44:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":56:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":44:17)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":44:24)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":45:13)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":52:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":54:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":46:32)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":46:24)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":46:17)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":48:17)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":51:17)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":48:25)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":48:21)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":48:28)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":48:32)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":48:30)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":49:17)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":50:41)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":50:34)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":50:21)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":48:37)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":48:36)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":55:17)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":215:1)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":221:1)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":217:5)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":217:14)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":218:5)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":218:14)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":219:5)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":219:14)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":220:5)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":220:14)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":237:15)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":239:15)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":242:15)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":244:15)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":232:1)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":247:1)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":233:1)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":235:27)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":235:22)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":235:5)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":237:5)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":238:5)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":238:51)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":239:5)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":242:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":243:5)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":243:50)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":244:5)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":246:12)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":246:5)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":79:19)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":98:27)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":66:1)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":102:1)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":84:13)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":84:17)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":85:13)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":85:34)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":68:5)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":68:9)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":70:13)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":70:12)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":70:5)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":71:5)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":75:5)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":71:8)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":71:20)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":72:5)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":74:9)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":76:5)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":101:5)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":76:8)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":76:20)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":77:5)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":80:5)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":82:5)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":79:9)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":83:9)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":100:9)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":87:13)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":99:13)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":87:17)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":87:25)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":87:30)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":87:38)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":87:40)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":88:13)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":95:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":97:13)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":89:32)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":89:24)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":89:17)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":91:17)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":94:17)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":91:25)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":91:21)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":91:28)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":91:32)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":91:30)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":92:17)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":93:41)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":93:34)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":93:21)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":91:37)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":91:36)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":98:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":105:1)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":136:1)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":118:13)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":118:17)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":119:13)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":119:34)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":107:5)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":107:9)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":109:13)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":109:12)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":109:5)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":110:5)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":114:5)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":110:8)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":110:20)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":111:5)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":113:9)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":115:5)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":135:5)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":115:8)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":115:20)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":116:5)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":117:9)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":134:9)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":121:13)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":133:13)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":121:17)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":121:25)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":121:30)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":121:38)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":121:40)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":122:13)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":129:13)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":131:13)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":123:32)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":123:24)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":123:17)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":125:17)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":128:17)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":125:25)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":125:21)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":125:28)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":125:32)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":125:30)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":126:17)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":127:41)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":127:34)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":127:21)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":125:37)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":125:36)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":132:27)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":132:17)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":139:1)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":177:1)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":158:13)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":158:17)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":159:13)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":159:34)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":141:5)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":141:9)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":143:13)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":143:12)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":143:5)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":144:5)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":154:5)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":144:8)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":144:20)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":145:5)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":148:5)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":150:5)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":147:19)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":147:9)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":153:16)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":153:9)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":155:5)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":176:5)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":155:8)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":155:20)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":156:5)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":157:9)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":175:9)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":162:13)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":174:13)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":162:17)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":162:24)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":163:13)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":170:13)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":172:13)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":164:32)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":164:24)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":164:17)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":166:17)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":169:17)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":166:25)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":166:21)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":166:28)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":166:32)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":166:30)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":167:17)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":168:41)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":168:34)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":168:21)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":166:37)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":166:36)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":173:27)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":173:17)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":180:1)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":213:1)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":194:13)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":194:17)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":195:13)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":195:34)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":182:5)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":182:9)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":184:13)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":184:12)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":184:5)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":185:5)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":190:5)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":185:8)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":185:20)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":186:5)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":189:16)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":189:9)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":191:5)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":212:5)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":191:8)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":191:20)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":192:5)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":193:9)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":211:9)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":198:13)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":210:13)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":198:17)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":198:24)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":199:13)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":206:13)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":208:13)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":200:32)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":200:24)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":200:17)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":202:17)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":205:17)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":202:25)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":202:21)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":202:28)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":202:32)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":202:30)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":203:17)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":204:41)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":204:34)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":204:21)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":202:37)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":202:36)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":209:27)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_rand_07.c":209:17)
#loc313 = loc(fused[#loc1, #loc2])
#loc314 = loc(fused[#loc3, #loc4])
#loc315 = loc(fused[#loc5, #loc6])
#loc316 = loc(fused[#loc7, #loc8])
#loc317 = loc(fused[#loc10, #loc11])
#loc318 = loc(fused[#loc12, #loc13])
#loc319 = loc(fused[#loc14, #loc15])
#loc320 = loc(fused[#loc16, #loc17])
#loc321 = loc(fused[#loc20, #loc18])
#loc322 = loc(fused[#loc21, #loc22])
#loc323 = loc(fused[#loc23, #loc24])
#loc324 = loc(fused[#loc25, #loc22])
#loc325 = loc(fused[#loc27, #loc26])
#loc326 = loc(fused[#loc28, #loc29])
#loc327 = loc(fused[#loc30, #loc31])
#loc328 = loc(fused[#loc32, #loc29])
#loc329 = loc(fused[#loc33, #loc34])
#loc330 = loc(fused[#loc35, #loc36])
#loc331 = loc(fused[#loc37, #loc38])
#loc332 = loc(fused[#loc39, #loc40, #loc41, #loc36])
#loc333 = loc(fused[#loc44, #loc42])
#loc334 = loc(fused[#loc45, #loc46])
#loc335 = loc(fused[#loc48, #loc47])
#loc336 = loc(fused[#loc49, #loc50])
#loc337 = loc(fused[#loc52, #loc46])
#loc338 = loc(fused[#loc57, #loc56])
#loc339 = loc(fused[#loc59, #loc60])
#loc340 = loc(fused[#loc61, #loc62])
#loc341 = loc(fused[#loc63, #loc64])
#loc342 = loc(fused[#loc65, #loc66])
#loc343 = loc(fused[#loc67, #loc68])
#loc344 = loc(fused[#loc69, #loc70])
#loc345 = loc(fused[#loc71, #loc72])
#loc346 = loc(fused[#loc77, #loc78])
#loc349 = loc(fused[#loc88, #loc89])
#loc350 = loc(fused[#loc92, #loc93])
#loc351 = loc(fused[#loc96, #loc95])
#loc352 = loc(fused[#loc99, #loc100])
#loc353 = loc(fused[#loc101, #loc102])
#loc354 = loc(fused[#loc103, #loc104])
#loc355 = loc(fused[#loc105, #loc106])
#loc356 = loc(fused[#loc109, #loc107])
#loc357 = loc(fused[#loc110, #loc111])
#loc358 = loc(fused[#loc112, #loc113])
#loc359 = loc(fused[#loc114, #loc111])
#loc360 = loc(fused[#loc116, #loc115])
#loc361 = loc(fused[#loc117, #loc118])
#loc362 = loc(fused[#loc119, #loc120])
#loc363 = loc(fused[#loc121, #loc122, #loc123, #loc118])
#loc364 = loc(fused[#loc125, #loc126])
#loc365 = loc(fused[#loc127, #loc128])
#loc366 = loc(fused[#loc129, #loc130])
#loc367 = loc(fused[#loc132, #loc134])
#loc368 = loc(fused[#loc135, #loc136, #loc137, #loc128])
#loc369 = loc(fused[#loc140, #loc138])
#loc370 = loc(fused[#loc141, #loc142])
#loc371 = loc(fused[#loc144, #loc143])
#loc372 = loc(fused[#loc145, #loc146])
#loc373 = loc(fused[#loc148, #loc142])
#loc374 = loc(fused[#loc153, #loc152])
#loc375 = loc(fused[#loc155, #loc156])
#loc376 = loc(fused[#loc157, #loc158])
#loc377 = loc(fused[#loc159, #loc160])
#loc378 = loc(fused[#loc161, #loc162])
#loc379 = loc(fused[#loc165, #loc163])
#loc380 = loc(fused[#loc166, #loc167])
#loc381 = loc(fused[#loc168, #loc169])
#loc382 = loc(fused[#loc170, #loc167])
#loc383 = loc(fused[#loc172, #loc171])
#loc384 = loc(fused[#loc173, #loc174])
#loc385 = loc(fused[#loc175, #loc176])
#loc386 = loc(fused[#loc177, #loc174])
#loc387 = loc(fused[#loc178, #loc179])
#loc388 = loc(fused[#loc180, #loc181])
#loc389 = loc(fused[#loc182, #loc183])
#loc390 = loc(fused[#loc185, #loc187])
#loc391 = loc(fused[#loc188, #loc189, #loc190, #loc181])
#loc392 = loc(fused[#loc193, #loc191])
#loc393 = loc(fused[#loc194, #loc195])
#loc394 = loc(fused[#loc197, #loc196])
#loc395 = loc(fused[#loc198, #loc199])
#loc396 = loc(fused[#loc201, #loc195])
#loc397 = loc(fused[#loc206, #loc205])
#loc398 = loc(fused[#loc209, #loc210])
#loc399 = loc(fused[#loc211, #loc212])
#loc400 = loc(fused[#loc213, #loc214])
#loc401 = loc(fused[#loc215, #loc216])
#loc402 = loc(fused[#loc219, #loc217])
#loc403 = loc(fused[#loc220, #loc221])
#loc404 = loc(fused[#loc222, #loc223])
#loc405 = loc(fused[#loc224, #loc225, #loc226, #loc221])
#loc406 = loc(fused[#loc230, #loc229])
#loc407 = loc(fused[#loc231, #loc232])
#loc408 = loc(fused[#loc233, #loc234])
#loc409 = loc(fused[#loc235, #loc232])
#loc410 = loc(fused[#loc236, #loc237])
#loc411 = loc(fused[#loc238, #loc239])
#loc412 = loc(fused[#loc240, #loc241])
#loc413 = loc(fused[#loc242, #loc243, #loc244, #loc239])
#loc414 = loc(fused[#loc247, #loc245])
#loc415 = loc(fused[#loc248, #loc249])
#loc416 = loc(fused[#loc251, #loc250])
#loc417 = loc(fused[#loc252, #loc253])
#loc418 = loc(fused[#loc255, #loc249])
#loc419 = loc(fused[#loc260, #loc259])
#loc420 = loc(fused[#loc263, #loc264])
#loc421 = loc(fused[#loc265, #loc266])
#loc422 = loc(fused[#loc267, #loc268])
#loc423 = loc(fused[#loc269, #loc270])
#loc424 = loc(fused[#loc273, #loc271])
#loc425 = loc(fused[#loc274, #loc275])
#loc426 = loc(fused[#loc276, #loc277])
#loc427 = loc(fused[#loc278, #loc275])
#loc428 = loc(fused[#loc280, #loc279])
#loc429 = loc(fused[#loc281, #loc282])
#loc430 = loc(fused[#loc283, #loc284])
#loc431 = loc(fused[#loc285, #loc282])
#loc432 = loc(fused[#loc286, #loc287])
#loc433 = loc(fused[#loc288, #loc289])
#loc434 = loc(fused[#loc290, #loc291])
#loc435 = loc(fused[#loc292, #loc293, #loc294, #loc289])
#loc436 = loc(fused[#loc297, #loc295])
#loc437 = loc(fused[#loc298, #loc299])
#loc438 = loc(fused[#loc301, #loc300])
#loc439 = loc(fused[#loc302, #loc303])
#loc440 = loc(fused[#loc305, #loc299])
#loc441 = loc(fused[#loc310, #loc309])
