!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_unionType = !cir.record<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_unionType" {!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc148)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc149)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc150)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc153)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc154)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %4 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc156)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    cir.store %5, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc23)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc24)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc24)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc158)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc159)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc160)
    cir.store %12, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc163)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc36)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
    cir.br ^bb3 loc(#loc30)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc30)
  ^bb4:  // pred: ^bb3
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %21 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc38)
    cir.store %20, %21 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
    cir.br ^bb5 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %22 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc42)
    %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.store %23, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
    cir.br ^bb6 loc(#loc167)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc168)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc169)
  ^bb8:  // pred: ^bb7
    %24 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc49)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc170)
    cir.br ^bb9 loc(#loc169)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc52)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc171)
    cir.brcond %29 ^bb10, ^bb14 loc(#loc53)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc172)
  ^bb11:  // pred: ^bb10
    %30 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %32 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %34 = cir.get_member %33[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc58)
    cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!ty__twoIntsStruct>, %36 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc62)
    cir.store %35, %39 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb12 loc(#loc48)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc48)
  ^bb13:  // pred: ^bb12
    %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc64)
    cir.store %41, %2 : !u64i, !cir.ptr<!u64i> loc(#loc175)
    cir.br ^bb9 loc(#loc169)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc48)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc46)
  ^bb16:  // pred: ^bb15
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc65)
    %44 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc66)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc67)
    %48 = cir.const #cir.int<8> : !u64i loc(#loc176)
    %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc177)
    cir.libc.memmove %49 bytes from %45 to %43 : !cir.ptr<!void>, !u64i loc(#loc178)
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!ty__twoIntsStruct>, %51 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    cir.call @printStructLine(%52) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc75)
    %53 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc76)
    cir.call @free(%54) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
    cir.br ^bb17 loc(#loc44)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc41)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc10)
  } loc(#loc151)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc80)
    cir.return loc(#loc79)
  } loc(#loc179)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc183)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc184)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %4 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc186)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
    cir.store %5, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc187)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc96)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc97)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc188)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc189)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
    cir.store %12, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc193)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc107)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc109)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb3 loc(#loc103)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // pred: ^bb3
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
    %21 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc38)
    cir.store %20, %21 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc195)
    cir.br ^bb5 loc(#loc196)
  ^bb5:  // pred: ^bb4
    %22 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc42)
    %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    cir.store %23, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc182)
    cir.br ^bb6 loc(#loc197)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc198)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc199)
  ^bb8:  // pred: ^bb7
    %24 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc120)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc200)
    cir.br ^bb9 loc(#loc199)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc122)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc123)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc123)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc201)
    cir.brcond %29 ^bb10, ^bb14 loc(#loc124)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc202)
  ^bb11:  // pred: ^bb10
    %30 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %32 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    %34 = cir.get_member %33[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc58)
    cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc130)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!ty__twoIntsStruct>, %36 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc62)
    cir.store %35, %39 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.br ^bb12 loc(#loc119)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc119)
  ^bb13:  // pred: ^bb12
    %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc133)
    cir.store %41, %2 : !u64i, !cir.ptr<!u64i> loc(#loc205)
    cir.br ^bb9 loc(#loc199)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc119)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc117)
  ^bb16:  // pred: ^bb15
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc134)
    %44 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc135)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc136)
    %48 = cir.const #cir.int<8> : !u64i loc(#loc206)
    %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc207)
    cir.libc.memmove %49 bytes from %45 to %43 : !cir.ptr<!void>, !u64i loc(#loc208)
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!ty__twoIntsStruct>, %51 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    cir.call @printStructLine(%52) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc144)
    %53 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc145)
    cir.call @free(%54) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc146)
    cir.br ^bb17 loc(#loc115)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc113)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc83)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":55:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":37:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":37:40)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":39:13)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":39:37)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":41:17)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":41:24)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":29:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":29:21)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":30:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":30:77)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":31:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":31:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":33:29)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":33:36)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":33:39)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":33:59)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":33:60)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":33:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":34:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":34:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":34:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":34:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":34:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":34:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":34:30)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":34:29)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":35:26)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":21:21)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":35:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":36:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":54:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":22:21)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":38:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":53:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":40:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":48:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":43:17)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":47:17)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":43:26)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":43:22)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":43:29)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":43:33)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":43:31)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":44:17)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":45:40)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":45:28)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":45:21)
#loc58 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":46:40)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":46:28)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":46:21)
#loc62 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":43:39)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":43:38)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":50:21)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":50:27)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":50:35)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":50:39)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":50:59)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":50:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":50:60)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":51:30)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":51:35)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":51:36)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":51:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":52:18)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":52:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":92:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":95:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":94:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":94:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":62:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":90:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":72:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":72:40)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":74:13)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":74:37)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":76:17)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":76:24)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":64:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":64:21)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":65:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":65:77)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":66:12)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":66:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":68:29)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":68:36)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":68:40)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":68:60)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":68:61)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":68:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":69:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":69:33)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":69:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":69:17)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":69:23)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":69:24)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":69:30)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":69:29)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":70:26)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":70:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":71:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":89:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":73:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":88:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":75:13)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":83:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":78:17)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":82:17)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":78:26)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":78:22)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":78:29)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":78:33)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":78:31)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":79:17)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":80:40)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":80:28)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":80:21)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":81:40)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":81:28)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":81:21)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":78:39)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":78:38)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":85:21)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":85:27)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":85:35)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":85:39)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":85:59)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":85:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":85:60)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":86:30)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":86:35)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":86:36)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":86:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":87:18)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_34.c":87:13)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc13, #loc14])
#loc154 = loc(fused[#loc15, #loc16])
#loc155 = loc(fused[#loc17, #loc18])
#loc156 = loc(fused[#loc19, #loc20])
#loc157 = loc(fused[#loc22, #loc21])
#loc158 = loc(fused[#loc25, #loc26])
#loc159 = loc(fused[#loc24, #loc26])
#loc160 = loc(fused[#loc23, #loc27])
#loc161 = loc(fused[#loc28, #loc27])
#loc162 = loc(fused[#loc29, #loc30])
#loc163 = loc(fused[#loc31, #loc32])
#loc164 = loc(fused[#loc33, #loc30])
#loc165 = loc(fused[#loc39, #loc37])
#loc166 = loc(fused[#loc40, #loc41])
#loc167 = loc(fused[#loc43, #loc44])
#loc168 = loc(fused[#loc45, #loc46])
#loc169 = loc(fused[#loc47, #loc48])
#loc170 = loc(fused[#loc50, #loc49])
#loc171 = loc(fused[#loc51, #loc52])
#loc172 = loc(fused[#loc54, #loc48])
#loc173 = loc(fused[#loc57, #loc55])
#loc174 = loc(fused[#loc61, #loc59])
#loc175 = loc(fused[#loc64, #loc63])
#loc176 = loc(fused[#loc68, #loc69])
#loc177 = loc(fused[#loc67, #loc69])
#loc178 = loc(fused[#loc70, #loc71])
#loc179 = loc(fused[#loc78, #loc79])
#loc180 = loc(fused[#loc80, #loc81])
#loc181 = loc(fused[#loc82, #loc83])
#loc182 = loc(fused[#loc84, #loc85])
#loc183 = loc(fused[#loc86, #loc87])
#loc184 = loc(fused[#loc88, #loc89])
#loc185 = loc(fused[#loc90, #loc91])
#loc186 = loc(fused[#loc92, #loc93])
#loc187 = loc(fused[#loc95, #loc94])
#loc188 = loc(fused[#loc98, #loc99])
#loc189 = loc(fused[#loc97, #loc99])
#loc190 = loc(fused[#loc96, #loc100])
#loc191 = loc(fused[#loc101, #loc100])
#loc192 = loc(fused[#loc102, #loc103])
#loc193 = loc(fused[#loc104, #loc105])
#loc194 = loc(fused[#loc106, #loc103])
#loc195 = loc(fused[#loc111, #loc110])
#loc196 = loc(fused[#loc112, #loc113])
#loc197 = loc(fused[#loc114, #loc115])
#loc198 = loc(fused[#loc116, #loc117])
#loc199 = loc(fused[#loc118, #loc119])
#loc200 = loc(fused[#loc121, #loc120])
#loc201 = loc(fused[#loc122, #loc123])
#loc202 = loc(fused[#loc125, #loc119])
#loc203 = loc(fused[#loc128, #loc126])
#loc204 = loc(fused[#loc131, #loc129])
#loc205 = loc(fused[#loc133, #loc132])
#loc206 = loc(fused[#loc137, #loc138])
#loc207 = loc(fused[#loc136, #loc138])
#loc208 = loc(fused[#loc139, #loc140])
