!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE482_Comparing_Instead_of_Assigning/CWE482_Comparing_Instead_of_Assigning__basic_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc37)
  cir.func no_proto @CWE482_Comparing_Instead_of_Assigning__basic_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBadSink", init] {alignment = 4 : i64} loc(#loc39)
    cir.br ^bb1 loc(#loc40)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc40)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %2 ^bb3, ^bb6 loc(#loc9)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc41)
  ^bb4:  // pred: ^bb3
    %3 = cir.const #cir.int<0> : !s32i loc(#loc6)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc39)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc13)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc15)
    cir.br ^bb5 loc(#loc11)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc16)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc8)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc4)
  } loc(#loc38)
  cir.func no_proto @CWE482_Comparing_Instead_of_Assigning__basic_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc43)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc18)
  } loc(#loc42)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intGoodSink", init] {alignment = 4 : i64} loc(#loc45)
    cir.br ^bb1 loc(#loc46)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc46)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc27)
    cir.brcond %2 ^bb3, ^bb6 loc(#loc27)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc47)
  ^bb4:  // pred: ^bb3
    %3 = cir.const #cir.int<0> : !s32i loc(#loc24)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc31)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc32)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc35)
    cir.br ^bb5 loc(#loc29)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc22)
  } loc(#loc44)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE482_Comparing_Instead_of_Assigning/CWE482_Comparing_Instead_of_Assigning__basic_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":20:1)
#loc4 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":34:1)
#loc5 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":25:13)
#loc6 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":25:30)
#loc7 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":22:5)
#loc8 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":33:5)
#loc9 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":22:11)
#loc10 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":24:9)
#loc11 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":31:9)
#loc12 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":27:26)
#loc13 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":27:13)
#loc14 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":30:26)
#loc15 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":30:13)
#loc16 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":32:9)
#loc17 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":57:1)
#loc18 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":60:1)
#loc19 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":59:5)
#loc20 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":59:11)
#loc21 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":41:1)
#loc22 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":55:1)
#loc23 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":46:13)
#loc24 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":46:31)
#loc25 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":43:5)
#loc26 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":54:5)
#loc27 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":43:11)
#loc28 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":45:9)
#loc29 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":52:9)
#loc30 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":48:26)
#loc31 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":48:13)
#loc32 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":50:27)
#loc33 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":50:13)
#loc34 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":51:26)
#loc35 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":51:13)
#loc36 = loc("CWE482_Comparing_Instead_of_Assigning__basic_16.c":53:9)
#loc37 = loc(fused[#loc1, #loc2])
#loc38 = loc(fused[#loc3, #loc4])
#loc39 = loc(fused[#loc5, #loc6])
#loc40 = loc(fused[#loc7, #loc8])
#loc41 = loc(fused[#loc10, #loc11])
#loc42 = loc(fused[#loc17, #loc18])
#loc43 = loc(fused[#loc19, #loc20])
#loc44 = loc(fused[#loc21, #loc22])
#loc45 = loc(fused[#loc23, #loc24])
#loc46 = loc(fused[#loc25, #loc26])
#loc47 = loc(fused[#loc28, #loc29])
#loc48 = loc(fused[#loc33, #loc32])
