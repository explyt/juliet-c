!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_unionType = !cir.struct<union "CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_unionType" {!s32i, !s32i}>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc134)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc137)
  cir.func private @printIntLine(!s32i) loc(#loc138)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc139)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc143)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc144)
    %4 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_unionType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc145)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc27)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc135)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc29)
    %13 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %14 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %15 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc36)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.br ^bb2 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc39)
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc40)
    %20 = cir.const #cir.int<4> : !u64i loc(#loc150)
    %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc151)
    %22 = cir.call @malloc(%21) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc39)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc152)
    cir.store %23, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    cir.br ^bb3 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc48)
    %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc155)
    cir.brcond %27 ^bb4, ^bb5 loc(#loc156)
  ^bb4:  // pred: ^bb3
    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc50)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc52)
    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc50)
    cir.br ^bb5 loc(#loc46)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc46)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc157)
  ^bb7:  // pred: ^bb6
    %31 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc55)
    cir.store %32, %1 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.br ^bb8 loc(#loc157)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc58)
    %36 = cir.cmp(lt, %33, %35) : !u64i, !cir.bool loc(#loc159)
    cir.brcond %36 ^bb9, ^bb13 loc(#loc59)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc160)
  ^bb10:  // pred: ^bb9
    %37 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !u64i), !cir.ptr<!s32i> loc(#loc64)
    cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb11 loc(#loc54)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc54)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc66)
    cir.store %42, %1 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    cir.br ^bb8 loc(#loc157)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc54)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc69)
    %46 = cir.load %45 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    cir.call @printIntLine(%46) : (!s32i) -> () loc(#loc70)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc71)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
    cir.br ^bb15 loc(#loc38)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc35)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc15)
  } loc(#loc140)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc74)
  } loc(#loc163)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc166)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc168)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc169)
    %4 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_unionType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc170)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc90)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    %7 = cir.const #cir.int<20> : !s32i loc(#loc92)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %9 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc36)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb2 loc(#loc175)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc100)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc101)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc176)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc177)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc100)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc178)
    cir.store %18, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc179)
    cir.br ^bb3 loc(#loc180)
  ^bb3:  // pred: ^bb2
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc109)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc181)
    cir.brcond %22 ^bb4, ^bb5 loc(#loc182)
  ^bb4:  // pred: ^bb3
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc111)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc113)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc111)
    cir.br ^bb5 loc(#loc107)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc107)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc183)
  ^bb7:  // pred: ^bb6
    %26 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc116)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb8 loc(#loc183)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc119)
    %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc185)
    cir.brcond %31 ^bb9, ^bb13 loc(#loc120)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc186)
  ^bb10:  // pred: ^bb9
    %32 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !u64i), !cir.ptr<!s32i> loc(#loc125)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb11 loc(#loc115)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc115)
  ^bb12:  // pred: ^bb11
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc127)
    cir.store %37, %1 : !u64i, !cir.ptr<!u64i> loc(#loc188)
    cir.br ^bb8 loc(#loc183)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc115)
  ^bb14:  // pred: ^bb13
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc130)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc131)
    %42 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc132)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
    cir.br ^bb15 loc(#loc99)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc97)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc78)
  } loc(#loc165)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":34:19)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":27:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":53:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":37:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":37:28)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":39:13)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":39:20)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":40:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":40:18)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":29:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":29:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":30:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":30:76)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":32:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":32:12)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":32:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":34:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":34:12)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":35:26)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":21:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":35:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":36:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":52:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":22:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":38:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":51:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":43:32)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":43:39)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":43:46)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":43:56)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":43:57)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":43:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":44:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":44:47)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":44:17)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":44:31)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":44:37)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":44:38)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":44:44)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":44:43)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":45:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":48:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":45:22)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":45:18)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":45:25)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":45:37)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":45:27)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":46:13)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":47:33)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":47:17)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":47:28)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":47:29)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":45:44)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":45:43)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":49:26)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":49:37)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":49:38)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":49:13)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":50:18)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":50:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":88:1)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":91:1)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":90:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":90:13)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":60:1)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":86:1)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":70:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":70:28)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":72:13)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":72:20)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":73:13)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":73:18)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":62:5)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":62:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":63:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":63:76)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":65:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":65:12)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":65:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":67:12)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":67:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":68:26)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":68:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":69:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":85:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":71:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":84:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":76:32)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":76:39)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":76:46)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":76:56)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":76:57)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":76:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":77:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":77:47)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":77:17)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":77:31)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":77:37)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":77:38)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":77:44)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":77:43)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":78:13)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":81:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":78:22)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":78:18)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":78:25)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":78:37)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":78:27)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":79:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":80:33)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":80:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":80:28)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":80:29)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":78:44)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":78:43)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":82:26)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":82:37)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":82:38)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":82:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":83:18)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_34.c":83:13)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc6, #loc7])
#loc137 = loc(fused[#loc8, #loc9])
#loc138 = loc(fused[#loc10, #loc11])
#loc139 = loc(fused[#loc12, #loc13])
#loc140 = loc(fused[#loc14, #loc15])
#loc141 = loc(fused[#loc16, #loc17])
#loc142 = loc(fused[#loc18, #loc19])
#loc143 = loc(fused[#loc20, #loc21])
#loc144 = loc(fused[#loc22, #loc23])
#loc145 = loc(fused[#loc24, #loc25])
#loc146 = loc(fused[#loc28, #loc26])
#loc147 = loc(fused[#loc33, #loc31])
#loc148 = loc(fused[#loc34, #loc35])
#loc149 = loc(fused[#loc37, #loc38])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc40, #loc42])
#loc152 = loc(fused[#loc39, #loc43])
#loc153 = loc(fused[#loc44, #loc43])
#loc154 = loc(fused[#loc45, #loc46])
#loc155 = loc(fused[#loc47, #loc48])
#loc156 = loc(fused[#loc49, #loc46])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc56, #loc55])
#loc159 = loc(fused[#loc57, #loc58])
#loc160 = loc(fused[#loc60, #loc54])
#loc161 = loc(fused[#loc62, #loc61])
#loc162 = loc(fused[#loc66, #loc65])
#loc163 = loc(fused[#loc73, #loc74])
#loc164 = loc(fused[#loc75, #loc76])
#loc165 = loc(fused[#loc77, #loc78])
#loc166 = loc(fused[#loc79, #loc80])
#loc167 = loc(fused[#loc81, #loc82])
#loc168 = loc(fused[#loc83, #loc84])
#loc169 = loc(fused[#loc85, #loc86])
#loc170 = loc(fused[#loc87, #loc88])
#loc171 = loc(fused[#loc91, #loc89])
#loc172 = loc(fused[#loc93, #loc92])
#loc173 = loc(fused[#loc95, #loc94])
#loc174 = loc(fused[#loc96, #loc97])
#loc175 = loc(fused[#loc98, #loc99])
#loc176 = loc(fused[#loc102, #loc103])
#loc177 = loc(fused[#loc101, #loc103])
#loc178 = loc(fused[#loc100, #loc104])
#loc179 = loc(fused[#loc105, #loc104])
#loc180 = loc(fused[#loc106, #loc107])
#loc181 = loc(fused[#loc108, #loc109])
#loc182 = loc(fused[#loc110, #loc107])
#loc183 = loc(fused[#loc114, #loc115])
#loc184 = loc(fused[#loc117, #loc116])
#loc185 = loc(fused[#loc118, #loc119])
#loc186 = loc(fused[#loc121, #loc115])
#loc187 = loc(fused[#loc123, #loc122])
#loc188 = loc(fused[#loc127, #loc126])
