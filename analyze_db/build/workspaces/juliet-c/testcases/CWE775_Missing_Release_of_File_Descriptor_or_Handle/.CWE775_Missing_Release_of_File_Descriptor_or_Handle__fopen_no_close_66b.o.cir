!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":21:86)
#loc4 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":21:103)
#loc14 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":34:90)
#loc15 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":34:107)
#loc29 = loc(fused[#loc3, #loc4])
#loc33 = loc(fused[#loc14, #loc15])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func @CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc29)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data", init] {alignment = 8 : i64} loc(#loc30)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>> loc(#loc7)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc8)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc9)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc6)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc8)
    cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc30)
    cir.return loc(#loc2)
  } loc(#loc28)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc31)
  cir.func @CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b_goodB2GSink(%arg0: !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(fused[#loc14, #loc15])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc33)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data", init] {alignment = 8 : i64} loc(#loc34)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>> loc(#loc18)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc19)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc20)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc17)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
    cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc34)
    cir.br ^bb1 loc(#loc35)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc24)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc36)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc37)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %11 = cir.call @fclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc27)
    cir.br ^bb3 loc(#loc22)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc13)
  } loc(#loc32)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":0:0)
#loc1 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":21:1)
#loc2 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":27:1)
#loc5 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":24:5)
#loc6 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":24:30)
#loc7 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":22:1)
#loc8 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":24:19)
#loc9 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":24:29)
#loc10 = loc("/usr/include/stdio.h":184:1)
#loc11 = loc("/usr/include/stdio.h":184:36)
#loc12 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":34:1)
#loc13 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":42:1)
#loc16 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":36:5)
#loc17 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":36:30)
#loc18 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":35:1)
#loc19 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":36:19)
#loc20 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":36:29)
#loc21 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":38:5)
#loc22 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":41:5)
#loc23 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":38:9)
#loc24 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":38:17)
#loc25 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":39:5)
#loc26 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":40:16)
#loc27 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_66b.c":40:9)
#loc28 = loc(fused[#loc1, #loc2])
#loc30 = loc(fused[#loc5, #loc6])
#loc31 = loc(fused[#loc10, #loc11])
#loc32 = loc(fused[#loc12, #loc13])
#loc34 = loc(fused[#loc16, #loc17])
#loc35 = loc(fused[#loc21, #loc22])
#loc36 = loc(fused[#loc23, #loc24])
#loc37 = loc(fused[#loc25, #loc22])
