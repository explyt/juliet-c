!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc80)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc10)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc10)
        cir.condition(%1) loc(#loc10)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc85)
            %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc86)
            %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc18)
            %3 = cir.get_global @gets : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc87)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>> loc(#loc87)
            %5 = cir.call %4(%2) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>>, !cir.ptr<!s8i>) -> !s32i loc(#loc19)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc19)
            %7 = cir.cast(int_to_ptr, %6 : !u64i), !cir.ptr<!s8i> loc(#loc19)
            cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
            cir.scope {
              %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
              %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc90)
              cir.if %19 {
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc27)
                %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
                %23 = cir.const #cir.int<1> : !s32i loc(#loc29)
                cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
              } loc(#loc91)
            } loc(#loc89)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc30)
            %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc30)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc31)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc31)
            %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc33)
            %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc33)
            cir.store %9, %14 : !s8i, !cir.ptr<!s8i> loc(#loc92)
            %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc34)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc35)
          } loc(#loc84)
          cir.break loc(#loc36)
        } loc(#loc83)
        cir.yield loc(#loc9)
      } loc(#loc82)
    } loc(#loc82)
    cir.return loc(#loc7)
  } loc(#loc81)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc38)
  } loc(#loc93)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc95)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc96)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc49)
        cir.condition(%1) loc(#loc49)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc101)
            %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc102)
            %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc57)
            %3 = cir.const #cir.int<10> : !s32i loc(#loc58)
            %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
            %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc59)
            %6 = cir.call @fgets(%2, %3, %5) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc60)
            cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
            cir.scope {
              %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
              %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
              %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc105)
              cir.if %18 {
                %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc68)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc68)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc69)
                %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc70)
                %22 = cir.const #cir.int<1> : !s32i loc(#loc71)
                cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
              } loc(#loc106)
            } loc(#loc104)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc72)
            %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc72)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc73)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc74)
            %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc73)
            %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc75)
            %13 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc75)
            cir.store %8, %13 : !s8i, !cir.ptr<!s8i> loc(#loc107)
            %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc76)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc77)
          } loc(#loc100)
          cir.break loc(#loc78)
        } loc(#loc99)
        cir.yield loc(#loc48)
      } loc(#loc98)
    } loc(#loc98)
    cir.return loc(#loc46)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":37:27)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":22:1)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":45:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":24:5)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":44:5)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":24:11)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":25:5)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":26:9)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":42:9)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":27:13)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":27:32)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":28:13)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":28:19)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:27)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:22)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:31)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:13)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":34:13)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":39:13)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":34:17)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":34:27)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":35:13)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":37:17)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":38:17)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":38:22)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:33)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:18)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:28)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:13)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":41:23)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":41:13)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":43:9)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":75:1)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":78:1)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":77:5)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":77:11)
#loc41 = loc("/usr/include/stdio.h":654:1)
#loc42 = loc("/usr/include/stdio.h":655:59)
#loc43 = loc("/usr/include/stdio.h":149:1)
#loc44 = loc("/usr/include/stdio.h":149:14)
#loc45 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":52:1)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":73:1)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":54:5)
#loc48 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":72:5)
#loc49 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":54:11)
#loc50 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":55:5)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":56:9)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":70:9)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":57:13)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":57:32)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":58:13)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":58:19)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:28)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:34)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:45)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:22)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:13)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:50)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":62:13)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":67:13)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":62:17)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":62:27)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":63:13)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":65:27)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":65:17)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":66:17)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":66:22)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:33)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:18)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:28)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:13)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":69:23)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":69:13)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":71:9)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc4, #loc5])
#loc81 = loc(fused[#loc6, #loc7])
#loc82 = loc(fused[#loc8, #loc9])
#loc83 = loc(fused[#loc11, #loc9])
#loc84 = loc(fused[#loc12, #loc13])
#loc85 = loc(fused[#loc14, #loc15])
#loc86 = loc(fused[#loc16, #loc17])
#loc87 = loc(fused[#loc19, #loc20])
#loc88 = loc(fused[#loc21, #loc20])
#loc89 = loc(fused[#loc22, #loc23])
#loc90 = loc(fused[#loc24, #loc25])
#loc91 = loc(fused[#loc26, #loc23])
#loc92 = loc(fused[#loc33, #loc30])
#loc93 = loc(fused[#loc37, #loc38])
#loc94 = loc(fused[#loc39, #loc40])
#loc95 = loc(fused[#loc41, #loc42])
#loc96 = loc(fused[#loc43, #loc44])
#loc97 = loc(fused[#loc45, #loc46])
#loc98 = loc(fused[#loc47, #loc48])
#loc99 = loc(fused[#loc50, #loc48])
#loc100 = loc(fused[#loc51, #loc52])
#loc101 = loc(fused[#loc53, #loc54])
#loc102 = loc(fused[#loc55, #loc56])
#loc103 = loc(fused[#loc61, #loc62])
#loc104 = loc(fused[#loc63, #loc64])
#loc105 = loc(fused[#loc65, #loc66])
#loc106 = loc(fused[#loc67, #loc64])
#loc107 = loc(fused[#loc75, #loc72])
