!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":25:21)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":25:25)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":72:26)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":72:30)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":85:27)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":114:26)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":114:30)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":122:27)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":151:25)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":151:29)
#true = #cir.bool<true> : !cir.bool
#loc252 = loc(fused[#loc10, #loc11])
#loc278 = loc(fused[#loc75, #loc76])
#loc301 = loc(fused[#loc137, #loc138])
#loc324 = loc(fused[#loc197, #loc198])
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_negative_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc248)
  cir.func private @printIntLine(!s32i) loc(#loc249)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc10, #loc11])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc253)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc254)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc252)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc16)
    cir.br ^bb1 loc(#loc255)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc248)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb2, ^bb18 loc(#loc256)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc257)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc254)
    cir.store %6, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc254)
    cir.br ^bb4 loc(#loc258)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc26)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc259)
    cir.brcond %9 ^bb5, ^bb14 loc(#loc260)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc32)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc32)
    cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.br ^bb6 loc(#loc262)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #cir.int<0> : !s32i loc(#loc35)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.br ^bb7 loc(#loc262)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc38)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %17 ^bb8, ^bb12 loc(#loc39)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc265)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc42)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc43)
    cir.br ^bb10 loc(#loc34)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc34)
  ^bb11:  // pred: ^bb10
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %23 = cir.unary(inc, %22) nsw : !s32i, !s32i loc(#loc45)
    cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.br ^bb7 loc(#loc262)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc34)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc28)
  ^bb14:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc7)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb15 loc(#loc24)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc24)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc22)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc18)
  ^bb18:  // 2 preds: ^bb1, ^bb17
    cir.br ^bb19 loc(#loc18)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc9)
  } loc(#loc251)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_negative_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc268)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc52)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc54)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc55)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %6 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc248)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.call @badSink(%7) : (!s32i) -> () loc(#loc60)
    cir.return loc(#loc48)
  } loc(#loc267)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_negative_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc273)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc274)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc275)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    cir.return loc(#loc62)
  } loc(#loc272)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc72)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc75, #loc76])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc279)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc280)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc278)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.br ^bb1 loc(#loc281)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc276)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc84)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc282)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb27 loc(#loc86)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc283)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc280)
    cir.store %8, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc280)
    cir.br ^bb5 loc(#loc284)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc285)
    cir.brcond %11 ^bb6, ^bb11 loc(#loc95)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc97)
    %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc95)
  ^bb7:  // pred: ^bb6
    %15 = cir.const #true loc(#loc95)
    cir.br ^bb9(%15 : !cir.bool) loc(#loc95)
  ^bb8:  // pred: ^bb6
    %16 = cir.const #false loc(#loc95)
    cir.br ^bb9(%16 : !cir.bool) loc(#loc95)
  ^bb9(%17: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":85:27)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc95)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12(%17 : !cir.bool) loc(#loc95)
  ^bb11:  // pred: ^bb5
    %18 = cir.const #false loc(#loc95)
    cir.br ^bb12(%18 : !cir.bool) loc(#loc95)
  ^bb12(%19: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":85:27)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc95)
  ^bb13:  // pred: ^bb12
    cir.brcond %19 ^bb14, ^bb23 loc(#loc287)
  ^bb14:  // pred: ^bb13
    %20 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc104)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc104)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb15 loc(#loc289)
  ^bb15:  // pred: ^bb14
    %24 = cir.const #cir.int<0> : !s32i loc(#loc107)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    cir.br ^bb16 loc(#loc289)
  ^bb16:  // 2 preds: ^bb15, ^bb20
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc110)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc291)
    cir.brcond %27 ^bb17, ^bb21 loc(#loc111)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc292)
  ^bb18:  // pred: ^bb17
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc114)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc114)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc115)
    cir.br ^bb19 loc(#loc106)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc106)
  ^bb20:  // pred: ^bb19
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %33 = cir.unary(inc, %32) nsw : !s32i, !s32i loc(#loc117)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb16 loc(#loc289)
  ^bb21:  // pred: ^bb16
    cir.br ^bb22 loc(#loc106)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24 loc(#loc100)
  ^bb23:  // pred: ^bb13
    %34 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc72)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb24 loc(#loc92)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc92)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc90)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc83)
  ^bb27:  // 2 preds: ^bb2, ^bb26
    cir.br ^bb28 loc(#loc83)
  ^bb28:  // pred: ^bb27
    cir.return loc(#loc74)
  } loc(#loc277)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc295)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc124)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc126)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc127)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %6 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc276)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.call @goodB2G1Sink(%7) : (!s32i) -> () loc(#loc132)
    cir.return loc(#loc120)
  } loc(#loc294)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc299)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc137, #loc138])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc302)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc303)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc301)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.br ^bb1 loc(#loc304)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc299)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc146)
    cir.brcond %5 ^bb2, ^bb26 loc(#loc305)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc306)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc303)
    cir.store %6, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc303)
    cir.br ^bb4 loc(#loc307)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc308)
    cir.brcond %9 ^bb5, ^bb10 loc(#loc154)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc156)
    %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc309)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc154)
  ^bb6:  // pred: ^bb5
    %13 = cir.const #true loc(#loc154)
    cir.br ^bb8(%13 : !cir.bool) loc(#loc154)
  ^bb7:  // pred: ^bb5
    %14 = cir.const #false loc(#loc154)
    cir.br ^bb8(%14 : !cir.bool) loc(#loc154)
  ^bb8(%15: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":122:27)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc154)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11(%15 : !cir.bool) loc(#loc154)
  ^bb10:  // pred: ^bb4
    %16 = cir.const #false loc(#loc154)
    cir.br ^bb11(%16 : !cir.bool) loc(#loc154)
  ^bb11(%17: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":122:27)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc154)
  ^bb12:  // pred: ^bb11
    cir.brcond %17 ^bb13, ^bb22 loc(#loc310)
  ^bb13:  // pred: ^bb12
    %18 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc163)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc163)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.br ^bb14 loc(#loc312)
  ^bb14:  // pred: ^bb13
    %22 = cir.const #cir.int<0> : !s32i loc(#loc166)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.br ^bb15 loc(#loc312)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc169)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc314)
    cir.brcond %25 ^bb16, ^bb20 loc(#loc170)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc315)
  ^bb17:  // pred: ^bb16
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc173)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc173)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc174)
    cir.br ^bb18 loc(#loc165)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc165)
  ^bb19:  // pred: ^bb18
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %31 = cir.unary(inc, %30) nsw : !s32i, !s32i loc(#loc176)
    cir.store %31, %0 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    cir.br ^bb15 loc(#loc312)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc165)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23 loc(#loc159)
  ^bb22:  // pred: ^bb12
    %32 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc177)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    cir.br ^bb23 loc(#loc151)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc151)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc149)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc145)
  ^bb26:  // 2 preds: ^bb1, ^bb25
    cir.br ^bb27 loc(#loc145)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc136)
  } loc(#loc300)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc184)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc186)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc187)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %6 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc299)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.call @goodB2G2Sink(%7) : (!s32i) -> () loc(#loc192)
    cir.return loc(#loc180)
  } loc(#loc317)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc322)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc197, #loc198])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc325)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc326)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc324)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.br ^bb1 loc(#loc327)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc322)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc206)
    cir.brcond %5 ^bb2, ^bb18 loc(#loc328)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc329)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc326)
    cir.store %6, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc326)
    cir.br ^bb4 loc(#loc330)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc213)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc331)
    cir.brcond %9 ^bb5, ^bb14 loc(#loc332)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc219)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc219)
    cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb6 loc(#loc334)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #cir.int<0> : !s32i loc(#loc222)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb7 loc(#loc334)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc225)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc336)
    cir.brcond %17 ^bb8, ^bb12 loc(#loc226)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc337)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc229)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc229)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc230)
    cir.br ^bb10 loc(#loc221)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc221)
  ^bb11:  // pred: ^bb10
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    %23 = cir.unary(inc, %22) nsw : !s32i, !s32i loc(#loc232)
    cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.br ^bb7 loc(#loc334)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc221)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc215)
  ^bb14:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc233)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc233)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc234)
    cir.br ^bb15 loc(#loc211)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc211)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc209)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc205)
  ^bb18:  // 2 preds: ^bb1, ^bb17
    cir.br ^bb19 loc(#loc205)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc196)
  } loc(#loc323)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc340)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc240)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc242)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc322)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc247)
    cir.return loc(#loc236)
  } loc(#loc339)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_negative_21.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":23:1)
#loc2 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":23:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":45:27)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":25:1)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":49:1)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":30:13)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":30:17)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":31:13)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":31:34)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":26:1)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":27:5)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":48:5)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":27:8)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":28:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":29:9)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":47:9)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":34:13)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":46:13)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":34:17)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":34:24)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":35:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":42:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":44:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":36:32)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":36:24)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":36:17)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":38:17)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":41:17)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":38:25)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":38:21)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":38:28)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":38:32)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":38:30)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":39:17)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":40:41)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":40:34)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":40:21)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":38:37)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":38:36)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":45:17)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":51:1)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":60:1)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":53:5)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":53:9)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":55:13)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":55:12)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":55:5)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":57:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":57:12)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":57:5)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":58:17)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":58:5)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":59:13)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":59:5)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":189:1)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":194:1)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":191:5)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":191:14)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":192:5)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":192:14)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":193:5)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":193:13)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":67:1)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":67:29)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":77:19)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":96:27)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":72:1)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":100:1)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":82:13)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":82:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":83:13)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":83:34)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":73:1)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":74:5)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":99:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":74:8)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":75:5)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":78:5)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":80:5)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":77:9)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":81:9)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":98:9)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":85:13)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":97:13)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":85:17)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":85:25)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":85:30)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":85:38)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":85:40)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":86:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":93:13)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":95:13)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":87:32)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":87:24)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":87:17)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":89:17)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":92:17)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":89:25)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":89:21)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":89:28)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":89:32)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":89:30)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":90:17)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":91:41)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":91:34)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":91:21)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":89:37)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":89:36)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":96:17)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":102:1)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":111:1)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":104:5)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":104:9)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":106:13)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":106:12)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":106:5)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":108:13)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":108:12)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":108:5)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":109:22)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":109:5)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":110:18)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":110:5)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":68:1)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":68:29)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":114:1)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":137:1)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":119:13)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":119:17)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":120:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":120:34)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":115:1)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":116:5)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":136:5)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":116:8)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":117:5)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":118:9)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":135:9)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":122:13)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":134:13)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":122:17)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":122:25)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":122:30)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":122:38)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":122:40)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":123:13)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":130:13)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":132:13)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":124:32)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":124:24)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":124:17)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":126:17)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":129:17)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":126:25)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":126:21)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":126:28)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":126:32)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":126:30)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":127:17)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":128:41)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":128:34)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":128:21)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":126:37)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":126:36)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":133:27)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":133:17)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":139:1)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":148:1)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":141:5)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":141:9)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":143:13)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":143:12)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":143:5)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":145:13)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":145:12)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":145:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":146:22)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":146:5)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":147:18)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":147:5)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":69:1)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":69:28)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":151:1)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":175:1)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":156:13)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":156:17)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":157:13)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":157:34)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":152:1)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":153:5)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":174:5)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":153:8)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":154:5)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":155:9)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":173:9)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":160:13)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":172:13)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":160:17)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":160:24)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":161:13)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":168:13)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":170:13)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":162:32)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":162:24)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":162:17)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":164:17)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":167:17)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":164:25)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":164:21)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":164:28)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":164:32)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":164:30)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":165:17)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":166:41)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":166:34)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":166:21)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":164:37)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":164:36)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":171:27)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":171:17)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":177:1)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":187:1)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":179:5)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":179:9)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":181:13)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":181:12)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":181:5)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":184:12)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":184:5)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":185:21)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":185:5)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":186:17)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_negative_21.c":186:5)
#loc248 = loc(fused[#loc1, #loc2])
#loc249 = loc(fused[#loc3, #loc4])
#loc250 = loc(fused[#loc5, #loc6])
#loc251 = loc(fused[#loc8, #loc9])
#loc253 = loc(fused[#loc12, #loc13])
#loc254 = loc(fused[#loc14, #loc15])
#loc255 = loc(fused[#loc17, #loc18])
#loc256 = loc(fused[#loc20, #loc18])
#loc257 = loc(fused[#loc21, #loc22])
#loc258 = loc(fused[#loc23, #loc24])
#loc259 = loc(fused[#loc25, #loc26])
#loc260 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc261 = loc(fused[#loc32, #loc30])
#loc262 = loc(fused[#loc33, #loc34])
#loc263 = loc(fused[#loc36, #loc35])
#loc264 = loc(fused[#loc37, #loc38])
#loc265 = loc(fused[#loc40, #loc34])
#loc266 = loc(fused[#loc45, #loc44])
#loc267 = loc(fused[#loc47, #loc48])
#loc268 = loc(fused[#loc49, #loc50])
#loc269 = loc(fused[#loc53, #loc51])
#loc270 = loc(fused[#loc56, #loc54])
#loc271 = loc(fused[#loc58, #loc57])
#loc272 = loc(fused[#loc61, #loc62])
#loc273 = loc(fused[#loc63, #loc64])
#loc274 = loc(fused[#loc65, #loc66])
#loc275 = loc(fused[#loc67, #loc68])
#loc276 = loc(fused[#loc69, #loc70])
#loc277 = loc(fused[#loc73, #loc74])
#loc279 = loc(fused[#loc77, #loc78])
#loc280 = loc(fused[#loc79, #loc80])
#loc281 = loc(fused[#loc82, #loc83])
#loc282 = loc(fused[#loc85, #loc86, #loc87, #loc83])
#loc283 = loc(fused[#loc89, #loc90])
#loc284 = loc(fused[#loc91, #loc92])
#loc285 = loc(fused[#loc93, #loc94])
#loc286 = loc(fused[#loc96, #loc98])
#loc287 = loc(fused[#loc99, #loc100, #loc101, #loc92])
#loc288 = loc(fused[#loc104, #loc102])
#loc289 = loc(fused[#loc105, #loc106])
#loc290 = loc(fused[#loc108, #loc107])
#loc291 = loc(fused[#loc109, #loc110])
#loc292 = loc(fused[#loc112, #loc106])
#loc293 = loc(fused[#loc117, #loc116])
#loc294 = loc(fused[#loc119, #loc120])
#loc295 = loc(fused[#loc121, #loc122])
#loc296 = loc(fused[#loc125, #loc123])
#loc297 = loc(fused[#loc128, #loc126])
#loc298 = loc(fused[#loc130, #loc129])
#loc299 = loc(fused[#loc133, #loc134])
#loc300 = loc(fused[#loc135, #loc136])
#loc302 = loc(fused[#loc139, #loc140])
#loc303 = loc(fused[#loc141, #loc142])
#loc304 = loc(fused[#loc144, #loc145])
#loc305 = loc(fused[#loc147, #loc145])
#loc306 = loc(fused[#loc148, #loc149])
#loc307 = loc(fused[#loc150, #loc151])
#loc308 = loc(fused[#loc152, #loc153])
#loc309 = loc(fused[#loc155, #loc157])
#loc310 = loc(fused[#loc158, #loc159, #loc160, #loc151])
#loc311 = loc(fused[#loc163, #loc161])
#loc312 = loc(fused[#loc164, #loc165])
#loc313 = loc(fused[#loc167, #loc166])
#loc314 = loc(fused[#loc168, #loc169])
#loc315 = loc(fused[#loc171, #loc165])
#loc316 = loc(fused[#loc176, #loc175])
#loc317 = loc(fused[#loc179, #loc180])
#loc318 = loc(fused[#loc181, #loc182])
#loc319 = loc(fused[#loc185, #loc183])
#loc320 = loc(fused[#loc188, #loc186])
#loc321 = loc(fused[#loc190, #loc189])
#loc322 = loc(fused[#loc193, #loc194])
#loc323 = loc(fused[#loc195, #loc196])
#loc325 = loc(fused[#loc199, #loc200])
#loc326 = loc(fused[#loc201, #loc202])
#loc327 = loc(fused[#loc204, #loc205])
#loc328 = loc(fused[#loc207, #loc205])
#loc329 = loc(fused[#loc208, #loc209])
#loc330 = loc(fused[#loc210, #loc211])
#loc331 = loc(fused[#loc212, #loc213])
#loc332 = loc(fused[#loc214, #loc215, #loc216, #loc211])
#loc333 = loc(fused[#loc219, #loc217])
#loc334 = loc(fused[#loc220, #loc221])
#loc335 = loc(fused[#loc223, #loc222])
#loc336 = loc(fused[#loc224, #loc225])
#loc337 = loc(fused[#loc227, #loc221])
#loc338 = loc(fused[#loc232, #loc231])
#loc339 = loc(fused[#loc235, #loc236])
#loc340 = loc(fused[#loc237, #loc238])
#loc341 = loc(fused[#loc241, #loc239])
#loc342 = loc(fused[#loc243, #loc242])
#loc343 = loc(fused[#loc245, #loc244])
