!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":114:10)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":114:14)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":114:20)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":114:32)
#loc185 = loc(fused[#loc61, #loc62])
#loc186 = loc(fused[#loc63, #loc64])
!ty__charVoid = !cir.struct<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc159)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc11)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc163)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc166)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc3)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc3)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc3)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc17)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc167)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc17)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc19)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc21)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc169)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc169)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc25)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc25)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
          %18 = cir.const #cir.int<32> : !u64i loc(#loc170)
          cir.libc.memmove %18 bytes from %17 to %14 : !cir.ptr<!void>, !u64i loc(#loc171)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc30)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc30)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc172)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc173)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc174)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc35)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc35)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc175)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc37)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc38)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc176)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc41)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc17)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc42)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc44)
        } loc(#loc165)
      } loc(#loc164)
    } loc(#loc162)
    cir.return loc(#loc7)
  } loc(#loc161)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc179)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc182)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc186)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc68)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    cir.return %17 : !s32i loc(#loc189)
  } loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc79)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc159)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc85)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc192)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc89)
      } else {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc195)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc94)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc94)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc17)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc196)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc17)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc96)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc98)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc198)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc198)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc101)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc101)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc199)
          cir.libc.memmove %18 bytes from %17 to %14 : !cir.ptr<!void>, !u64i loc(#loc200)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc106)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc201)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc202)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc203)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc111)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc111)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc204)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc113)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc114)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc205)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc206)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc117)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc17)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc118)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc207)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc120)
        } loc(#loc194)
      } loc(#loc193)
    } loc(#loc191)
    cir.return loc(#loc81)
  } loc(#loc190)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc159)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc126)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc210)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc213)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc132)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc132)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc17)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc214)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc17)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc134)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc136)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc216)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc216)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc139)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc139)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc217)
          cir.libc.memmove %18 bytes from %17 to %14 : !cir.ptr<!void>, !u64i loc(#loc218)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc144)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc144)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc219)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc220)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc221)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc149)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc149)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc222)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc151)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc152)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc223)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc224)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc155)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc17)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc156)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc158)
        } loc(#loc212)
      } loc(#loc211)
    } loc(#loc209)
    cir.return loc(#loc122)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":40:49)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":34:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":50:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":36:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":49:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":36:8)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":36:27)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":37:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":38:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":48:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":39:13)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":39:22)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":28:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":40:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":42:46)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":42:31)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":42:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":27:10)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":44:21)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":44:36)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":44:47)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":44:56)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":44:77)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":44:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":44:78)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":45:91)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":45:39)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":45:70)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":45:72)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":45:83)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":45:86)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":45:38)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":45:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":45:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":46:31)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":46:46)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":46:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":47:46)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":47:31)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":47:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":99:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":103:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":101:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":101:11)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":102:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":102:11)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":119:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":121:15)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":124:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":126:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":114:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":129:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":115:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":117:27)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":117:22)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":117:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":119:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":120:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":120:75)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":121:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":124:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":125:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":125:74)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":126:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":128:12)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":128:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":62:19)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":57:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":78:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":59:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":77:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":59:8)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":59:27)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":60:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":63:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":65:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":62:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":66:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":76:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":67:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":67:22)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":68:49)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":68:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":70:46)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":70:31)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":70:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":72:21)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":72:36)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":72:47)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":72:56)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":72:87)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":72:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":72:88)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":73:91)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":73:39)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":73:70)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":73:72)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":73:83)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":73:86)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":73:38)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":73:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":73:28)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":74:31)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":74:46)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":74:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":75:46)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":75:31)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":75:13)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":81:1)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":97:1)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":83:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":96:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":83:8)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":83:27)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":84:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":85:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":95:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":86:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":86:22)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":87:49)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":87:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":89:46)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":89:31)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":89:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":91:21)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":91:36)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":91:47)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":91:56)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":91:87)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":91:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":91:88)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":92:91)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":92:39)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":92:70)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":92:72)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":92:83)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":92:86)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":92:38)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":92:13)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":92:28)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":93:31)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":93:46)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":93:13)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":94:46)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":94:31)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c":94:13)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc4, #loc5])
#loc161 = loc(fused[#loc6, #loc7])
#loc162 = loc(fused[#loc8, #loc9])
#loc163 = loc(fused[#loc10, #loc11])
#loc164 = loc(fused[#loc12, #loc9])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc18, #loc3])
#loc168 = loc(fused[#loc20, #loc19])
#loc169 = loc(fused[#loc23, #loc24])
#loc170 = loc(fused[#loc26, #loc27])
#loc171 = loc(fused[#loc28, #loc29])
#loc172 = loc(fused[#loc31, #loc32])
#loc173 = loc(fused[#loc33, #loc34])
#loc174 = loc(fused[#loc31, #loc34])
#loc175 = loc(fused[#loc36, #loc35])
#loc176 = loc(fused[#loc37, #loc30])
#loc177 = loc(fused[#loc39, #loc40])
#loc178 = loc(fused[#loc43, #loc42])
#loc179 = loc(fused[#loc45, #loc46])
#loc180 = loc(fused[#loc47, #loc48])
#loc181 = loc(fused[#loc49, #loc50])
#loc182 = loc(fused[#loc51, #loc52])
#loc183 = loc(fused[#loc53, #loc54])
#loc184 = loc(fused[#loc59, #loc60])
#loc187 = loc(fused[#loc70, #loc71])
#loc188 = loc(fused[#loc74, #loc75])
#loc189 = loc(fused[#loc78, #loc77])
#loc190 = loc(fused[#loc80, #loc81])
#loc191 = loc(fused[#loc82, #loc83])
#loc192 = loc(fused[#loc84, #loc85])
#loc193 = loc(fused[#loc86, #loc87, #loc88, #loc83])
#loc194 = loc(fused[#loc90, #loc91])
#loc195 = loc(fused[#loc92, #loc93])
#loc196 = loc(fused[#loc95, #loc94])
#loc197 = loc(fused[#loc97, #loc96])
#loc198 = loc(fused[#loc99, #loc100])
#loc199 = loc(fused[#loc102, #loc103])
#loc200 = loc(fused[#loc104, #loc105])
#loc201 = loc(fused[#loc107, #loc108])
#loc202 = loc(fused[#loc109, #loc110])
#loc203 = loc(fused[#loc107, #loc110])
#loc204 = loc(fused[#loc112, #loc111])
#loc205 = loc(fused[#loc113, #loc106])
#loc206 = loc(fused[#loc115, #loc116])
#loc207 = loc(fused[#loc119, #loc118])
#loc208 = loc(fused[#loc121, #loc122])
#loc209 = loc(fused[#loc123, #loc124])
#loc210 = loc(fused[#loc125, #loc126])
#loc211 = loc(fused[#loc127, #loc124])
#loc212 = loc(fused[#loc128, #loc129])
#loc213 = loc(fused[#loc130, #loc131])
#loc214 = loc(fused[#loc133, #loc132])
#loc215 = loc(fused[#loc135, #loc134])
#loc216 = loc(fused[#loc137, #loc138])
#loc217 = loc(fused[#loc140, #loc141])
#loc218 = loc(fused[#loc142, #loc143])
#loc219 = loc(fused[#loc145, #loc146])
#loc220 = loc(fused[#loc147, #loc148])
#loc221 = loc(fused[#loc145, #loc148])
#loc222 = loc(fused[#loc150, #loc149])
#loc223 = loc(fused[#loc151, #loc144])
#loc224 = loc(fused[#loc153, #loc154])
#loc225 = loc(fused[#loc157, #loc156])
