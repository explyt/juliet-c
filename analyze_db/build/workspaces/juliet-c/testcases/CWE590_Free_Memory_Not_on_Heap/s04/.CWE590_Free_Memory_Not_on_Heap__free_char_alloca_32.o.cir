!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc114)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc115)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc118)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc119)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc121)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc122)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc121)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc122)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    cir.store %6, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.br ^bb2 loc(#loc125)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc10)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc10)
    %13 = cir.alloca !u8i, !cir.ptr<!u8i>, %12 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %18 = cir.const #cir.int<65> : !s32i loc(#loc27)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc28)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc28)
    cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc126)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc32)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc34)
    %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc127)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %30, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    cir.br ^bb3 loc(#loc25)
  ^bb3:  // pred: ^bb2
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %32 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
    cir.store %31, %32 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc130)
  ^bb5:  // pred: ^bb4
    %33 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %34 = cir.load %33 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.store %34, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %36 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc47)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    cir.br ^bb6 loc(#loc43)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc116)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc132)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc50)
  } loc(#loc131)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc134)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc140)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc141)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc140)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc141)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc72)
    cir.store %6, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc61)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.br ^bb2 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc79)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc80)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc145)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc146)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc149)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc150)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc89)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc90)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc89)
    cir.br ^bb5 loc(#loc84)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc84)
  ^bb6:  // pred: ^bb5
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
    %26 = cir.const #cir.int<65> : !s32i loc(#loc92)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc93)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc93)
    cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc151)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc97)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc99)
    %37 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc101)
    cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc152)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    cir.store %38, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.br ^bb7 loc(#loc78)
  ^bb7:  // pred: ^bb6
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %40 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.store %39, %40 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.br ^bb8 loc(#loc75)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc155)
  ^bb9:  // pred: ^bb8
    %41 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc65)
    %42 = cir.load %41 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.store %42, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %43 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %44 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc112)
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
    cir.br ^bb10 loc(#loc108)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc59)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":46:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":30:9)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":30:24)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":33:13)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":33:41)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":41:9)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":41:24)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":25:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":25:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":26:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":26:25)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":27:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":27:25)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":28:12)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":28:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":29:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":39:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":30:23)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":31:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":37:9)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":34:20)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":34:32)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":34:37)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":34:41)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":34:13)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":34:42)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":35:33)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":35:13)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":35:24)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":35:28)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":35:29)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":36:20)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":36:13)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":38:21)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":38:10)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":38:9)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":40:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":45:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":41:23)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":42:19)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":42:9)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":44:9)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":44:14)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":83:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":86:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":85:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":85:13)
#loc53 = loc("/usr/include/stdlib.h":672:1)
#loc54 = loc("/usr/include/stdlib.h":672:45)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":66:27)
#loc56 = loc("/usr/include/stdlib.h":756:1)
#loc57 = loc("/usr/include/stdlib.h":756:70)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":53:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":81:1)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":60:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":60:24)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":63:13)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":63:64)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":76:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":76:24)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":55:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":55:12)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":56:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":56:25)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":57:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":57:25)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":58:12)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":58:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":59:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":74:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":60:23)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":61:9)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":72:9)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":63:41)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":63:48)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":63:52)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":63:63)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":64:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":68:13)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":64:17)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":64:31)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":65:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":66:17)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":67:17)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":67:22)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":69:20)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":69:32)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":69:37)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":69:41)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":69:13)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":69:42)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":70:33)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":70:13)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":70:24)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":70:28)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":70:29)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":71:20)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":71:13)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":73:21)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":73:10)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":73:9)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":75:5)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":80:5)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":76:23)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":77:19)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":77:9)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":79:9)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_32.c":79:14)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc9, #loc10])
#loc119 = loc(fused[#loc11, #loc12])
#loc120 = loc(fused[#loc13, #loc14])
#loc121 = loc(fused[#loc15, #loc16])
#loc122 = loc(fused[#loc17, #loc18])
#loc123 = loc(fused[#loc20, #loc19])
#loc124 = loc(fused[#loc21, #loc22])
#loc125 = loc(fused[#loc24, #loc25])
#loc126 = loc(fused[#loc30, #loc31])
#loc127 = loc(fused[#loc33, #loc32])
#loc128 = loc(fused[#loc38, #loc37])
#loc129 = loc(fused[#loc41, #loc39])
#loc130 = loc(fused[#loc42, #loc43])
#loc131 = loc(fused[#loc49, #loc50])
#loc132 = loc(fused[#loc51, #loc52])
#loc133 = loc(fused[#loc53, #loc54])
#loc134 = loc(fused[#loc56, #loc57])
#loc135 = loc(fused[#loc58, #loc59])
#loc136 = loc(fused[#loc60, #loc61])
#loc137 = loc(fused[#loc62, #loc63])
#loc138 = loc(fused[#loc64, #loc65])
#loc139 = loc(fused[#loc66, #loc67])
#loc140 = loc(fused[#loc68, #loc69])
#loc141 = loc(fused[#loc70, #loc71])
#loc142 = loc(fused[#loc73, #loc72])
#loc143 = loc(fused[#loc74, #loc75])
#loc144 = loc(fused[#loc77, #loc78])
#loc145 = loc(fused[#loc81, #loc82])
#loc146 = loc(fused[#loc80, #loc82])
#loc147 = loc(fused[#loc79, #loc63])
#loc148 = loc(fused[#loc83, #loc84])
#loc149 = loc(fused[#loc85, #loc86])
#loc150 = loc(fused[#loc87, #loc84])
#loc151 = loc(fused[#loc95, #loc96])
#loc152 = loc(fused[#loc98, #loc97])
#loc153 = loc(fused[#loc103, #loc102])
#loc154 = loc(fused[#loc106, #loc104])
#loc155 = loc(fused[#loc107, #loc108])
