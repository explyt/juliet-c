!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":131:10)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":131:14)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":131:20)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":131:32)
#loc214 = loc(fused[#loc66, #loc67])
#loc215 = loc(fused[#loc68, #loc69])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc194)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc195)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc12)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc12)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %18 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc197)
    %19 = cir.call %18() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %20 ^bb2, ^bb3 loc(#loc198)
  ^bb2:  // pred: ^bb1
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc20)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc200)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc201)
  ^bb5:  // pred: ^bb4
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %29 = cir.const #cir.int<67> : !s32i loc(#loc27)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc28)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc28)
    cir.libc.memset %33 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc202)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc32)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc33)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc35)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc203)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc38)
    %47 = cir.const #cir.int<1> : !u64i loc(#loc204)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc205)
    cir.libc.memcpy %48 bytes from %44 to %42 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc206)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %50 = cir.cast(integral, %49 : !s32i), !s8i loc(#loc43)
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %54 = cir.binop(sub, %52, %53) nsw : !s32i loc(#loc45)
    %55 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc47)
    cir.store %50, %55 : !s8i, !cir.ptr<!s8i> loc(#loc207)
    %56 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%56) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc191)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc208)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc211)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc63)
  cir.func @main(%arg0: !s32i loc(fused[#loc66, #loc67]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc68, #loc69])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc215)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc72)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc72)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc73)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc60)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08_good() : () -> () loc(#loc75)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc61)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc217)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08_bad() : () -> () loc(#loc79)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    cir.return %17 : !s32i loc(#loc218)
  } loc(#loc213)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc86)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    cir.return %2 : !s32i loc(#loc220)
  } loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc222)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc224)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc96)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc96)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc96)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc96)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc225)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc96)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc98)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc98)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc98)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc98)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc98)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
    cir.br ^bb1 loc(#loc226)
  ^bb1:  // pred: ^bb0
    %18 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc227)
    %19 = cir.call %18() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc101)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc101)
    cir.brcond %20 ^bb2, ^bb3 loc(#loc228)
  ^bb2:  // pred: ^bb1
    %21 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.br ^bb4 loc(#loc104)
  ^bb3:  // pred: ^bb1
    %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc109)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc231)
  ^bb6:  // pred: ^bb5
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
    %31 = cir.const #cir.int<67> : !s32i loc(#loc116)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc117)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc117)
    cir.libc.memset %35 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc232)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc121)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc122)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc233)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc127)
    %49 = cir.const #cir.int<1> : !u64i loc(#loc234)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc235)
    cir.libc.memcpy %50 bytes from %46 to %44 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc236)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc132)
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc134)
    %57 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %52, %57 : !s8i, !cir.ptr<!s8i> loc(#loc237)
    %58 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.br ^bb7 loc(#loc114)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc90)
  } loc(#loc221)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc141)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    cir.return %2 : !s32i loc(#loc239)
  } loc(#loc238)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc241)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc243)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc150)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc150)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc150)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc150)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc150)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc244)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc150)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc152)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc152)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc152)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc152)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc152)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc152)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
    cir.br ^bb1 loc(#loc245)
  ^bb1:  // pred: ^bb0
    %18 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc246)
    %19 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc155)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc155)
    cir.brcond %20 ^bb2, ^bb3 loc(#loc247)
  ^bb2:  // pred: ^bb1
    %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc160)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc163)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc249)
    cir.br ^bb3 loc(#loc154)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc154)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc250)
  ^bb5:  // pred: ^bb4
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc166)
    %29 = cir.const #cir.int<67> : !s32i loc(#loc167)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc168)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc168)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc168)
    cir.libc.memset %33 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc251)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc172)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc173)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc173)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc175)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc252)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc178)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc178)
    %47 = cir.const #cir.int<1> : !u64i loc(#loc253)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc254)
    cir.libc.memcpy %48 bytes from %44 to %42 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc255)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %50 = cir.cast(integral, %49 : !s32i), !s8i loc(#loc183)
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc185)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %54 = cir.binop(sub, %52, %53) nsw : !s32i loc(#loc185)
    %55 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc187)
    cir.store %50, %55 : !s8i, !cir.ptr<!s8i> loc(#loc256)
    %56 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%56) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    cir.br ^bb6 loc(#loc165)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc144)
  } loc(#loc240)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":37:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":58:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":50:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":50:24)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":39:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":39:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":40:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":40:36)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":41:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":41:37)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":42:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":48:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":42:8)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":42:26)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":43:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":46:16)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":46:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":47:19)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":47:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":47:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":47:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":49:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":57:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":51:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":51:24)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":51:29)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":51:33)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":51:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":51:34)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":52:25)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":52:16)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":52:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":52:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":54:16)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":54:22)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":54:30)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":54:34)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":54:45)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":54:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":54:46)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":55:23)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":55:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":55:14)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":55:18)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":55:19)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":56:19)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":56:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":115:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":119:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":117:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":117:14)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":118:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":118:14)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":136:15)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":138:15)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":141:15)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":143:15)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":131:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":146:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":132:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":134:27)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":134:22)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":134:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":136:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":137:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":137:75)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":138:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":141:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":142:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":142:74)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":143:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":145:12)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":145:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":25:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":28:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":27:12)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":27:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":73:19)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":65:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":90:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":82:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":82:24)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":67:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":67:12)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":68:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":68:36)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":69:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":69:37)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":70:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":80:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":70:8)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":70:27)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":71:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":74:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":76:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":73:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":78:16)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":78:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":79:19)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":79:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":79:14)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":79:15)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":81:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":89:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":83:16)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":83:24)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":83:29)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":83:33)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":83:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":83:34)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":84:25)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":84:16)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":84:20)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":84:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":86:16)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":86:22)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":86:30)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":86:34)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":86:45)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":86:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":86:46)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":87:23)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":87:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":87:14)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":87:18)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":87:19)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":88:19)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":88:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":30:1)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":33:1)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":32:12)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":32:5)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":93:1)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":113:1)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":105:9)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":105:24)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":95:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":95:12)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":96:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":96:36)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":97:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":97:37)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":98:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":103:5)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":98:8)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":98:26)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":99:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":101:16)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":101:9)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":102:19)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":102:9)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":102:14)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":102:15)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":104:5)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":112:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":106:16)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":106:24)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":106:29)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":106:33)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":106:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":106:34)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":107:25)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":107:16)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":107:20)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":107:9)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":109:16)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":109:22)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":109:30)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":109:34)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":109:45)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":109:9)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":109:46)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":110:23)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":110:9)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":110:14)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":110:18)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":110:19)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":111:19)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_08.c":111:9)
#loc190 = loc(fused[#loc1, #loc2])
#loc191 = loc(fused[#loc3, #loc4])
#loc192 = loc(fused[#loc5, #loc6])
#loc193 = loc(fused[#loc7, #loc8])
#loc194 = loc(fused[#loc9, #loc10])
#loc195 = loc(fused[#loc11, #loc12])
#loc196 = loc(fused[#loc13, #loc14])
#loc197 = loc(fused[#loc15, #loc16])
#loc198 = loc(fused[#loc17, #loc14])
#loc199 = loc(fused[#loc19, #loc18])
#loc200 = loc(fused[#loc21, #loc20])
#loc201 = loc(fused[#loc24, #loc25])
#loc202 = loc(fused[#loc30, #loc31])
#loc203 = loc(fused[#loc35, #loc32])
#loc204 = loc(fused[#loc39, #loc40])
#loc205 = loc(fused[#loc38, #loc40])
#loc206 = loc(fused[#loc41, #loc42])
#loc207 = loc(fused[#loc44, #loc43])
#loc208 = loc(fused[#loc50, #loc51])
#loc209 = loc(fused[#loc52, #loc53])
#loc210 = loc(fused[#loc54, #loc55])
#loc211 = loc(fused[#loc56, #loc57])
#loc212 = loc(fused[#loc58, #loc59])
#loc213 = loc(fused[#loc64, #loc65])
#loc216 = loc(fused[#loc75, #loc76])
#loc217 = loc(fused[#loc79, #loc80])
#loc218 = loc(fused[#loc83, #loc82])
#loc219 = loc(fused[#loc84, #loc85])
#loc220 = loc(fused[#loc87, #loc86])
#loc221 = loc(fused[#loc89, #loc90])
#loc222 = loc(fused[#loc91, #loc92])
#loc223 = loc(fused[#loc93, #loc94])
#loc224 = loc(fused[#loc95, #loc96])
#loc225 = loc(fused[#loc97, #loc98])
#loc226 = loc(fused[#loc99, #loc100])
#loc227 = loc(fused[#loc101, #loc102])
#loc228 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc229 = loc(fused[#loc108, #loc107])
#loc230 = loc(fused[#loc110, #loc109])
#loc231 = loc(fused[#loc113, #loc114])
#loc232 = loc(fused[#loc119, #loc120])
#loc233 = loc(fused[#loc124, #loc121])
#loc234 = loc(fused[#loc128, #loc129])
#loc235 = loc(fused[#loc127, #loc129])
#loc236 = loc(fused[#loc130, #loc131])
#loc237 = loc(fused[#loc133, #loc132])
#loc238 = loc(fused[#loc139, #loc140])
#loc239 = loc(fused[#loc142, #loc141])
#loc240 = loc(fused[#loc143, #loc144])
#loc241 = loc(fused[#loc145, #loc146])
#loc242 = loc(fused[#loc147, #loc148])
#loc243 = loc(fused[#loc149, #loc150])
#loc244 = loc(fused[#loc151, #loc152])
#loc245 = loc(fused[#loc153, #loc154])
#loc246 = loc(fused[#loc155, #loc156])
#loc247 = loc(fused[#loc157, #loc154])
#loc248 = loc(fused[#loc159, #loc158])
#loc249 = loc(fused[#loc161, #loc160])
#loc250 = loc(fused[#loc164, #loc165])
#loc251 = loc(fused[#loc170, #loc171])
#loc252 = loc(fused[#loc175, #loc172])
#loc253 = loc(fused[#loc179, #loc180])
#loc254 = loc(fused[#loc178, #loc180])
#loc255 = loc(fused[#loc181, #loc182])
#loc256 = loc(fused[#loc184, #loc183])
