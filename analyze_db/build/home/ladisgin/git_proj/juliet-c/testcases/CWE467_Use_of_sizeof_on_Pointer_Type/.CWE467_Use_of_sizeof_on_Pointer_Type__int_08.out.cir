!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc59 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":107:10)
#loc60 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":107:14)
#loc61 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":107:20)
#loc62 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":107:32)
#loc177 = loc(fused[#loc59, #loc60])
#loc178 = loc(fused[#loc61, #loc62])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc154)
  cir.func private @printIntLine(!s32i) loc(#loc155)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__int_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["badInt", init] {alignment = 8 : i64} loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc160)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc161)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc162)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc12)
    cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc158)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc163)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc164)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    cir.br ^bb4 loc(#loc166)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc28)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc167)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc168)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc32)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<5> : !s32i loc(#loc33)
    %17 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %18 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc38)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc39)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc14)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc14)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc157)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__int_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc173)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func @main(%arg0: !s32i loc(fused[#loc59, #loc60]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc65)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc65)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc66)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %8 = cir.get_global @CWE467_Use_of_sizeof_on_Pointer_Type__int_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE467_Use_of_sizeof_on_Pointer_Type__int_08_good() : () -> () loc(#loc68)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %13 = cir.get_global @CWE467_Use_of_sizeof_on_Pointer_Type__int_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE467_Use_of_sizeof_on_Pointer_Type__int_08_bad() : () -> () loc(#loc72)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.return %17 : !s32i loc(#loc181)
  } loc(#loc176)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc79)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.return %2 : !s32i loc(#loc183)
  } loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc81)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["goodInt", init] {alignment = 8 : i64} loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc187)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc88)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc88)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc188)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc81)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb10 loc(#loc91)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc189)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc85)
    cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc185)
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc96)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc190)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc191)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
    cir.br ^bb5 loc(#loc193)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc104)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc194)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc195)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc106)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc108)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc106)
    cir.br ^bb7 loc(#loc102)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc102)
  ^bb8:  // pred: ^bb7
    %18 = cir.const #cir.int<6> : !s32i loc(#loc109)
    %19 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %20 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc114)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc115)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
    cir.br ^bb9 loc(#loc95)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc87)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc87)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc83)
  } loc(#loc184)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.return %2 : !s32i loc(#loc198)
  } loc(#loc197)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["goodInt", init] {alignment = 8 : i64} loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc202)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc127)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc127)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc203)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc204)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc124)
    cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc200)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc132)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc205)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc206)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc207)
    cir.br ^bb4 loc(#loc208)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc140)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc209)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc210)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc144)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
    cir.br ^bb6 loc(#loc138)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc138)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<6> : !s32i loc(#loc145)
    %17 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %18 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc150)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc151)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc152)
    cir.br ^bb8 loc(#loc131)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc126)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc126)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc122)
  } loc(#loc199)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":33:1)
#loc10 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":47:1)
#loc11 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":38:13)
#loc12 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":38:28)
#loc13 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":35:5)
#loc14 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":46:5)
#loc15 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":35:8)
#loc16 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":35:26)
#loc17 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":36:5)
#loc18 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":37:9)
#loc19 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":45:9)
#loc20 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":40:29)
#loc21 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":40:36)
#loc22 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":40:49)
#loc23 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":40:50)
#loc24 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":40:13)
#loc25 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":41:13)
#loc26 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":41:43)
#loc27 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":41:17)
#loc28 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":41:27)
#loc29 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":41:33)
#loc30 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":41:34)
#loc31 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":41:40)
#loc32 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":41:39)
#loc33 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":42:23)
#loc34 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":42:14)
#loc35 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":42:13)
#loc36 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":43:27)
#loc37 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":43:26)
#loc38 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":43:13)
#loc39 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":44:18)
#loc40 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":44:13)
#loc41 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":92:1)
#loc42 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":96:1)
#loc43 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":94:5)
#loc44 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":94:11)
#loc45 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":95:5)
#loc46 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":95:11)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":112:15)
#loc54 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":114:15)
#loc55 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":117:15)
#loc56 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":119:15)
#loc57 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":107:1)
#loc58 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":122:1)
#loc63 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":108:1)
#loc64 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":110:27)
#loc65 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":110:22)
#loc66 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":110:5)
#loc67 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":112:5)
#loc68 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":113:5)
#loc69 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":113:55)
#loc70 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":114:5)
#loc71 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":117:5)
#loc72 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":118:5)
#loc73 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":118:54)
#loc74 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":119:5)
#loc75 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":121:12)
#loc76 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":121:5)
#loc77 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":21:1)
#loc78 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":24:1)
#loc79 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":23:12)
#loc80 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":23:5)
#loc81 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":59:19)
#loc82 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":54:1)
#loc83 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":73:1)
#loc84 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":64:13)
#loc85 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":64:29)
#loc86 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":56:5)
#loc87 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":72:5)
#loc88 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":56:8)
#loc89 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":56:27)
#loc90 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":57:5)
#loc91 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":60:5)
#loc92 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":62:5)
#loc93 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":59:9)
#loc94 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":63:9)
#loc95 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":71:9)
#loc96 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":66:30)
#loc97 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":66:37)
#loc98 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":66:52)
#loc99 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":66:53)
#loc100 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":66:13)
#loc101 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":67:13)
#loc102 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":67:44)
#loc103 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":67:17)
#loc104 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":67:28)
#loc105 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":67:34)
#loc106 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":67:35)
#loc107 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":67:41)
#loc108 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":67:40)
#loc109 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":68:24)
#loc110 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":68:14)
#loc111 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":68:13)
#loc112 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":69:27)
#loc113 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":69:26)
#loc114 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":69:13)
#loc115 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":70:18)
#loc116 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":70:13)
#loc117 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":26:1)
#loc118 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":29:1)
#loc119 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":28:12)
#loc120 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":28:5)
#loc121 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":76:1)
#loc122 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":90:1)
#loc123 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":81:13)
#loc124 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":81:29)
#loc125 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":78:5)
#loc126 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":89:5)
#loc127 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":78:8)
#loc128 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":78:26)
#loc129 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":79:5)
#loc130 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":80:9)
#loc131 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":88:9)
#loc132 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":83:30)
#loc133 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":83:37)
#loc134 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":83:52)
#loc135 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":83:53)
#loc136 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":83:13)
#loc137 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":84:13)
#loc138 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":84:44)
#loc139 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":84:17)
#loc140 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":84:28)
#loc141 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":84:34)
#loc142 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":84:35)
#loc143 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":84:41)
#loc144 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":84:40)
#loc145 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":85:24)
#loc146 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":85:14)
#loc147 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":85:13)
#loc148 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":86:27)
#loc149 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":86:26)
#loc150 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":86:13)
#loc151 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":87:18)
#loc152 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_08.c":87:13)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc3, #loc4])
#loc155 = loc(fused[#loc5, #loc6])
#loc156 = loc(fused[#loc7, #loc8])
#loc157 = loc(fused[#loc9, #loc10])
#loc158 = loc(fused[#loc11, #loc12])
#loc159 = loc(fused[#loc13, #loc14])
#loc160 = loc(fused[#loc15, #loc16])
#loc161 = loc(fused[#loc17, #loc14])
#loc162 = loc(fused[#loc18, #loc19])
#loc163 = loc(fused[#loc21, #loc22])
#loc164 = loc(fused[#loc20, #loc23])
#loc165 = loc(fused[#loc24, #loc23])
#loc166 = loc(fused[#loc25, #loc26])
#loc167 = loc(fused[#loc27, #loc28])
#loc168 = loc(fused[#loc29, #loc26])
#loc169 = loc(fused[#loc35, #loc33])
#loc170 = loc(fused[#loc41, #loc42])
#loc171 = loc(fused[#loc43, #loc44])
#loc172 = loc(fused[#loc45, #loc46])
#loc173 = loc(fused[#loc47, #loc48])
#loc174 = loc(fused[#loc49, #loc50])
#loc175 = loc(fused[#loc51, #loc52])
#loc176 = loc(fused[#loc57, #loc58])
#loc179 = loc(fused[#loc68, #loc69])
#loc180 = loc(fused[#loc72, #loc73])
#loc181 = loc(fused[#loc76, #loc75])
#loc182 = loc(fused[#loc77, #loc78])
#loc183 = loc(fused[#loc80, #loc79])
#loc184 = loc(fused[#loc82, #loc83])
#loc185 = loc(fused[#loc84, #loc85])
#loc186 = loc(fused[#loc86, #loc87])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc90, #loc91, #loc92, #loc87])
#loc189 = loc(fused[#loc94, #loc95])
#loc190 = loc(fused[#loc97, #loc98])
#loc191 = loc(fused[#loc96, #loc99])
#loc192 = loc(fused[#loc100, #loc99])
#loc193 = loc(fused[#loc101, #loc102])
#loc194 = loc(fused[#loc103, #loc104])
#loc195 = loc(fused[#loc105, #loc102])
#loc196 = loc(fused[#loc111, #loc109])
#loc197 = loc(fused[#loc117, #loc118])
#loc198 = loc(fused[#loc120, #loc119])
#loc199 = loc(fused[#loc121, #loc122])
#loc200 = loc(fused[#loc123, #loc124])
#loc201 = loc(fused[#loc125, #loc126])
#loc202 = loc(fused[#loc127, #loc128])
#loc203 = loc(fused[#loc129, #loc126])
#loc204 = loc(fused[#loc130, #loc131])
#loc205 = loc(fused[#loc133, #loc134])
#loc206 = loc(fused[#loc132, #loc135])
#loc207 = loc(fused[#loc136, #loc135])
#loc208 = loc(fused[#loc137, #loc138])
#loc209 = loc(fused[#loc139, #loc140])
#loc210 = loc(fused[#loc141, #loc138])
#loc211 = loc(fused[#loc147, #loc145])
