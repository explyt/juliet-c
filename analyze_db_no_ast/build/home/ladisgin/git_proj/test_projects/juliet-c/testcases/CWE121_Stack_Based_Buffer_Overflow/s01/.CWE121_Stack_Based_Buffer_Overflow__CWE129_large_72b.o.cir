!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:18)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:28)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":28:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":28:26)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":58:18)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":58:30)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":83:18)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":83:30)
#true = #cir.bool<true> : !cir.bool
#loc138 = loc(fused[#loc4, #loc5])
#loc143 = loc(fused[#loc22, #loc23])
#loc157 = loc(fused[#loc59, #loc60])
#loc171 = loc(fused[#loc98, #loc99])
!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data = !cir.struct<struct "std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" {!cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl = !cir.struct<struct "std::_Vector_base<int, std::allocator<int>>::_Vector_impl" {!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E = !cir.struct<struct "std::_Vector_base<int, std::allocator<int>>" {!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E = !cir.struct<class "std::vector<int, std::allocator<int>>" {!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func linkonce_odr  @_ZNSt6vectorIiSaIiEEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!s32i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>>, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %9 : !u64i), !cir.ptr<!s32i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    cir.return %11 : !cir.ptr<!s32i> loc(#loc139)
  } loc(#loc137)
  cir.func private  @printIntLine(!s32i) loc(#loc140)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc19)
  cir.func  @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_727badSinkESt6vectorIiSaIiEE(%arg0: !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E loc(fused[#loc22, #loc23])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc144)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc26)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc27)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc27)
    %4 = cir.call @_ZNSt6vectorIiSaIiEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr2) loc(#loc28)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc146)
      %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc147)
      %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc147)
      cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc147)
      cir.scope {
        %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc38)
        %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc149)
        cir.if %11 {
          %12 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc44)
          %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc44)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc151)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc47)
            cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc153)
            cir.for : cond {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc49)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc50)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc154)
              cir.condition(%19) loc(#loc154)
            } body {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc51)
              %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc52)
              %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc52)
              %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc53)
              cir.yield loc(#loc46)
            } step {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc54)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc55)
              cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc155)
              cir.yield loc(#loc152)
            } loc(#loc152)
          } loc(#loc152)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc19)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc56)
        } loc(#loc150)
      } loc(#loc148)
    } loc(#loc145)
    cir.return loc(#loc21)
  } loc(#loc142)
  cir.func  @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_7211goodG2BSinkESt6vectorIiSaIiEE(%arg0: !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E loc(fused[#loc59, #loc60])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc158)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc63)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc64)
    %4 = cir.call @_ZNSt6vectorIiSaIiEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr2) loc(#loc65)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc160)
      %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc161)
      %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc161)
      cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc161)
      cir.scope {
        %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc75)
        %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc163)
        cir.if %11 {
          %12 = cir.const #cir.int<1> : !s32i loc(#loc79)
          %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
          %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc81)
          %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc81)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc165)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
            cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc167)
            cir.for : cond {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc86)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc87)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc168)
              cir.condition(%19) loc(#loc168)
            } body {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc89)
              %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc89)
              %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc90)
              cir.yield loc(#loc83)
            } step {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc91)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc92)
              cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc169)
              cir.yield loc(#loc166)
            } loc(#loc166)
          } loc(#loc166)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc93)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc93)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc94)
        } loc(#loc164)
      } loc(#loc162)
    } loc(#loc159)
    cir.return loc(#loc58)
  } loc(#loc156)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc95)
  cir.func  @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_7211goodB2GSinkESt6vectorIiSaIiEE(%arg0: !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E loc(fused[#loc98, #loc99])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc172)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc102)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc103)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc103)
    %4 = cir.call @_ZNSt6vectorIiSaIiEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr2) loc(#loc104)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc174)
      %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc175)
      %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc175)
      cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc175)
      cir.scope {
        %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc113)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc114)
        %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc177)
        %12 = cir.ternary(%11, true {
          %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
          %14 = cir.const #cir.int<10> : !s32i loc(#loc117)
          %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc178)
          %16 = cir.ternary(%15, true {
            %17 = cir.const #true loc(#loc115)
            cir.yield %17 : !cir.bool loc(#loc115)
          }, false {
            %17 = cir.const #false loc(#loc115)
            cir.yield %17 : !cir.bool loc(#loc115)
          }) : (!cir.bool) -> !cir.bool loc(#loc115)
          cir.yield %16 : !cir.bool loc(#loc115)
        }, false {
          %13 = cir.const #false loc(#loc115)
          cir.yield %13 : !cir.bool loc(#loc115)
        }) : (!cir.bool) -> !cir.bool loc(#loc115)
        cir.if %12 {
          %13 = cir.const #cir.int<1> : !s32i loc(#loc122)
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
          %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc124)
          %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc124)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc180)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc127)
            cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc182)
            cir.for : cond {
              %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
              %19 = cir.const #cir.int<10> : !s32i loc(#loc130)
              %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc183)
              cir.condition(%20) loc(#loc183)
            } body {
              %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc132)
              %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc132)
              %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc132)
              cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc133)
              cir.yield loc(#loc126)
            } step {
              %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc135)
              cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc184)
              cir.yield loc(#loc181)
            } loc(#loc181)
          } loc(#loc181)
        } else {
          %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc95)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc95)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc136)
        } loc(#loc179)
      } loc(#loc176)
    } loc(#loc173)
    cir.return loc(#loc97)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1127:7)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1132:7)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1129:7)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:11)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":373:20)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":93:10)
#loc10 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:25)
#loc11 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:36)
#loc12 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:34)
#loc13 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:2)
#loc14 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:39)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":48:23)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":28:1)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":51:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":31:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":31:28)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":29:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":31:27)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":31:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":32:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":50:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":33:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":33:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":34:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":34:30)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":37:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":49:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":37:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":37:21)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":38:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":45:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":47:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":39:28)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":39:20)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":39:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":41:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":44:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":41:21)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":41:17)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":41:24)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":41:28)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":43:37)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":43:30)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":43:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":41:33)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":41:32)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":48:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":58:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":80:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":60:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":60:28)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":59:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":60:27)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":60:16)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":61:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":79:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":62:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":62:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":63:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":63:30)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":66:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":78:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":66:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":66:21)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":67:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":74:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":76:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":68:28)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":68:20)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":68:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":70:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":73:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":70:21)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":70:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":70:24)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":70:28)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":72:37)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":72:30)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":72:17)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":70:33)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":70:32)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":77:23)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":77:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":101:23)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":83:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":104:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":85:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":85:28)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":84:1)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":85:27)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":85:16)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":86:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":103:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":87:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":87:13)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":88:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":88:30)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":90:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":102:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":90:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":90:21)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":90:23)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":90:26)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":90:34)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":90:36)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":91:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":98:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":100:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":92:28)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":92:20)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":92:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":94:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":97:13)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":94:21)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":94:17)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":94:24)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":94:28)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":96:37)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":96:30)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":96:17)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":94:33)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":94:32)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_72b.cpp":101:13)
#loc137 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc15, #loc16])
#loc141 = loc(fused[#loc17, #loc18])
#loc142 = loc(fused[#loc20, #loc21])
#loc144 = loc(fused[#loc24, #loc25])
#loc145 = loc(fused[#loc29, #loc30])
#loc146 = loc(fused[#loc31, #loc32])
#loc147 = loc(fused[#loc33, #loc34])
#loc148 = loc(fused[#loc35, #loc36])
#loc149 = loc(fused[#loc37, #loc38])
#loc150 = loc(fused[#loc39, #loc40, #loc41, #loc36])
#loc151 = loc(fused[#loc44, #loc42])
#loc152 = loc(fused[#loc45, #loc46])
#loc153 = loc(fused[#loc48, #loc47])
#loc154 = loc(fused[#loc49, #loc50])
#loc155 = loc(fused[#loc55, #loc54])
#loc156 = loc(fused[#loc57, #loc58])
#loc158 = loc(fused[#loc61, #loc62])
#loc159 = loc(fused[#loc66, #loc67])
#loc160 = loc(fused[#loc68, #loc69])
#loc161 = loc(fused[#loc70, #loc71])
#loc162 = loc(fused[#loc72, #loc73])
#loc163 = loc(fused[#loc74, #loc75])
#loc164 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc165 = loc(fused[#loc81, #loc79])
#loc166 = loc(fused[#loc82, #loc83])
#loc167 = loc(fused[#loc85, #loc84])
#loc168 = loc(fused[#loc86, #loc87])
#loc169 = loc(fused[#loc92, #loc91])
#loc170 = loc(fused[#loc96, #loc97])
#loc172 = loc(fused[#loc100, #loc101])
#loc173 = loc(fused[#loc105, #loc106])
#loc174 = loc(fused[#loc107, #loc108])
#loc175 = loc(fused[#loc109, #loc110])
#loc176 = loc(fused[#loc111, #loc112])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc116, #loc118])
#loc179 = loc(fused[#loc119, #loc120, #loc121, #loc112])
#loc180 = loc(fused[#loc124, #loc122])
#loc181 = loc(fused[#loc125, #loc126])
#loc182 = loc(fused[#loc128, #loc127])
#loc183 = loc(fused[#loc129, #loc130])
#loc184 = loc(fused[#loc135, #loc134])
