!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":113:10)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":113:14)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":113:20)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":113:32)
#loc174 = loc(fused[#loc60, #loc61])
#loc175 = loc(fused[#loc62, #loc63])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc154)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc155)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc157)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc161)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc154)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %9 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc26)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc165)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc30)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc32)
    %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc167)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc159)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc159)
    %22 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc37)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc38)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc39)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc39)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %30 = cir.call @snprintf(%23, %26, %28, %29) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc37)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc11)
  } loc(#loc158)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc168)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc171)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc57)
  cir.func @main(%arg0: !s32i loc(fused[#loc60, #loc61]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc62, #loc63])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc64)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc65)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc66)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc66)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc67)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc54)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09_good : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09_good() : () -> () loc(#loc69)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc56)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09_bad() : () -> () loc(#loc73)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.return %17 : !s32i loc(#loc178)
  } loc(#loc173)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc181)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc183)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc179)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc186)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb4 loc(#loc95)
  ^bb3:  // pred: ^bb1
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc99)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc100)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc100)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc100)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc104)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc106)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc106)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc108)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc92)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc189)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc181)
    cir.store %23, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc181)
    %24 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc111)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc112)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc113)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc113)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc115)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc115)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %32 = cir.call @snprintf(%25, %28, %30, %31) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc111)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb7 loc(#loc110)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc82)
  } loc(#loc180)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc193)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc154)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc131)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc196)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
    %9 = cir.const #cir.int<65> : !s32i loc(#loc134)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc135)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc135)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc135)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc197)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc139)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %17 = cir.const #cir.int<50> : !s32i loc(#loc141)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc141)
    %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc143)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    cir.br ^bb3 loc(#loc130)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc199)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc191)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc191)
    %22 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc146)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc147)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc148)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc148)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc150)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc150)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    %30 = cir.call @snprintf(%23, %26, %28, %29) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc146)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    cir.br ^bb6 loc(#loc145)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc120)
  } loc(#loc190)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/stdio.h":385:1)
#loc4 = loc("/usr/include/stdio.h":387:62)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":43:38)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":29:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":46:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":41:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":41:25)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":31:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":31:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":32:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":32:24)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":33:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":39:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":34:8)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":35:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":37:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":37:22)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":37:27)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":37:31)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":37:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":37:32)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":38:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":38:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":38:14)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":38:18)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":38:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":40:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":45:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":43:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":43:18)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":43:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":43:31)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":43:44)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":44:19)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":44:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":97:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":101:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":99:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":99:14)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":100:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":100:14)
#loc50 = loc("/usr/include/stdlib.h":575:1)
#loc51 = loc("/usr/include/stdlib.h":575:41)
#loc52 = loc("/usr/include/time.h":76:1)
#loc53 = loc("/usr/include/time.h":76:38)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":118:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":120:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":123:15)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":125:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":113:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":128:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":114:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":116:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":116:22)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":116:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":118:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":119:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":119:78)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":120:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":123:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":124:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":124:77)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":125:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":127:12)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":127:5)
#loc78 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc79 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":61:19)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":53:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":75:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":70:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":70:25)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":55:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":55:12)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":56:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":56:24)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":57:12)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":57:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":58:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":68:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":58:8)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":59:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":62:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":64:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":61:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":66:16)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":66:22)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":66:27)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":66:30)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":66:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":66:31)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":67:22)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":67:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":67:14)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":67:17)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":67:18)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":69:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":74:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":72:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":72:18)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":72:24)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":72:31)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":72:38)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":72:44)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":73:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":73:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":78:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":95:1)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":90:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":90:25)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":80:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":80:12)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":81:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":81:24)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":82:12)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":82:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":83:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":88:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":83:8)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":84:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":86:16)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":86:22)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":86:27)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":86:30)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":86:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":86:31)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":87:22)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":87:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":87:14)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":87:17)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":87:18)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":89:5)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":94:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":92:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":92:18)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":92:24)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":92:31)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":92:38)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":92:44)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":93:19)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_09.c":93:9)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc8, #loc9])
#loc158 = loc(fused[#loc10, #loc11])
#loc159 = loc(fused[#loc12, #loc13])
#loc160 = loc(fused[#loc14, #loc15])
#loc161 = loc(fused[#loc16, #loc17])
#loc162 = loc(fused[#loc19, #loc18])
#loc163 = loc(fused[#loc20, #loc21])
#loc164 = loc(fused[#loc23, #loc21])
#loc165 = loc(fused[#loc28, #loc29])
#loc166 = loc(fused[#loc31, #loc30])
#loc167 = loc(fused[#loc35, #loc36])
#loc168 = loc(fused[#loc44, #loc45])
#loc169 = loc(fused[#loc46, #loc47])
#loc170 = loc(fused[#loc48, #loc49])
#loc171 = loc(fused[#loc50, #loc51])
#loc172 = loc(fused[#loc52, #loc53])
#loc173 = loc(fused[#loc58, #loc59])
#loc176 = loc(fused[#loc69, #loc70])
#loc177 = loc(fused[#loc73, #loc74])
#loc178 = loc(fused[#loc77, #loc76])
#loc179 = loc(fused[#loc78, #loc79])
#loc180 = loc(fused[#loc81, #loc82])
#loc181 = loc(fused[#loc83, #loc84])
#loc182 = loc(fused[#loc85, #loc86])
#loc183 = loc(fused[#loc87, #loc88])
#loc184 = loc(fused[#loc90, #loc89])
#loc185 = loc(fused[#loc91, #loc92])
#loc186 = loc(fused[#loc94, #loc95, #loc96, #loc92])
#loc187 = loc(fused[#loc102, #loc103])
#loc188 = loc(fused[#loc105, #loc104])
#loc189 = loc(fused[#loc109, #loc110])
#loc190 = loc(fused[#loc119, #loc120])
#loc191 = loc(fused[#loc121, #loc122])
#loc192 = loc(fused[#loc123, #loc124])
#loc193 = loc(fused[#loc125, #loc126])
#loc194 = loc(fused[#loc128, #loc127])
#loc195 = loc(fused[#loc129, #loc130])
#loc196 = loc(fused[#loc132, #loc130])
#loc197 = loc(fused[#loc137, #loc138])
#loc198 = loc(fused[#loc140, #loc139])
#loc199 = loc(fused[#loc144, #loc145])
