!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"goodXXXXXX\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc83)
  cir.global "private" constant cir_private @__const.CWE459_Incomplete_Cleanup__char_01_bad.filename = #cir.const_array<"badXXXXXX\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> loc(#loc84)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc85)
  cir.func private @fdopen(!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc9)
  cir.func private @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Temporary file\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc12)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc88)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["filename"] {alignment = 1 : i64} loc(#loc84)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc90)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc91)
    cir.br ^bb1 loc(#loc92)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.CWE459_Incomplete_Cleanup__char_01_bad.filename : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc84)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc84)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc23)
    %5 = cir.call @mkstemp(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc24)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.br ^bb2 loc(#loc93)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc29)
    %9 = cir.cmp(ne, %6, %8) : !s32i, !cir.bool loc(#loc94)
    cir.brcond %9 ^bb3, ^bb8 loc(#loc95)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc9)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc9)
    %13 = cir.call @fdopen(%10, %12) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc32)
    cir.store %13, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc38)
    %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc98)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc99)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc40)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc12)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc12)
    %22 = cir.call @fprintf(%19, %21) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc43)
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc22)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc16)
  } loc(#loc89)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc101)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    cir.return loc(#loc45)
  } loc(#loc100)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc102)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["filename"] {alignment = 1 : i64} loc(#loc83)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc104)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc105)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc83)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc83)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc58)
    %5 = cir.call @mkstemp(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc59)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.br ^bb2 loc(#loc107)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc64)
    %9 = cir.cmp(ne, %6, %8) : !s32i, !cir.bool loc(#loc108)
    cir.brcond %9 ^bb3, ^bb8 loc(#loc109)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc67)
    %13 = cir.call @fdopen(%10, %12) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc68)
    cir.store %13, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc74)
    %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc112)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc113)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc76)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
    %22 = cir.call @fprintf(%19, %21) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc76)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
    %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc80)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc81)
    %26 = cir.call @unlink(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc82)
    cir.br ^bb6 loc(#loc72)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc72)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc61)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc61)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc57)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc51)
  } loc(#loc103)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_01.c":0:0)
#loc1 = loc("CWE459_Incomplete_Cleanup__char_01.c":66:9)
#loc2 = loc("CWE459_Incomplete_Cleanup__char_01.c":66:27)
#loc3 = loc("CWE459_Incomplete_Cleanup__char_01.c":42:9)
#loc4 = loc("CWE459_Incomplete_Cleanup__char_01.c":42:27)
#loc5 = loc("/usr/include/stdlib.h":827:1)
#loc6 = loc("/usr/include/stdlib.h":827:39)
#loc7 = loc("/usr/include/stdio.h":299:1)
#loc8 = loc("/usr/include/stdio.h":300:3)
#loc9 = loc("CWE459_Incomplete_Cleanup__char_01.c":48:38)
#loc10 = loc("/usr/include/stdio.h":357:1)
#loc11 = loc("/usr/include/stdio.h":358:45)
#loc12 = loc("CWE459_Incomplete_Cleanup__char_01.c":51:32)
#loc13 = loc("/usr/include/stdio.h":184:1)
#loc14 = loc("/usr/include/stdio.h":184:36)
#loc15 = loc("CWE459_Incomplete_Cleanup__char_01.c":39:1)
#loc16 = loc("CWE459_Incomplete_Cleanup__char_01.c":57:1)
#loc17 = loc("CWE459_Incomplete_Cleanup__char_01.c":43:9)
#loc18 = loc("CWE459_Incomplete_Cleanup__char_01.c":43:15)
#loc19 = loc("CWE459_Incomplete_Cleanup__char_01.c":45:9)
#loc20 = loc("CWE459_Incomplete_Cleanup__char_01.c":45:40)
#loc21 = loc("CWE459_Incomplete_Cleanup__char_01.c":41:5)
#loc22 = loc("CWE459_Incomplete_Cleanup__char_01.c":56:5)
#loc23 = loc("CWE459_Incomplete_Cleanup__char_01.c":45:32)
#loc24 = loc("CWE459_Incomplete_Cleanup__char_01.c":45:24)
#loc25 = loc("CWE459_Incomplete_Cleanup__char_01.c":46:9)
#loc26 = loc("CWE459_Incomplete_Cleanup__char_01.c":55:9)
#loc27 = loc("CWE459_Incomplete_Cleanup__char_01.c":46:13)
#loc28 = loc("CWE459_Incomplete_Cleanup__char_01.c":46:26)
#loc29 = loc("CWE459_Incomplete_Cleanup__char_01.c":46:25)
#loc30 = loc("CWE459_Incomplete_Cleanup__char_01.c":47:9)
#loc31 = loc("CWE459_Incomplete_Cleanup__char_01.c":48:28)
#loc32 = loc("CWE459_Incomplete_Cleanup__char_01.c":48:21)
#loc33 = loc("CWE459_Incomplete_Cleanup__char_01.c":48:13)
#loc34 = loc("CWE459_Incomplete_Cleanup__char_01.c":48:41)
#loc35 = loc("CWE459_Incomplete_Cleanup__char_01.c":49:13)
#loc36 = loc("CWE459_Incomplete_Cleanup__char_01.c":54:13)
#loc37 = loc("CWE459_Incomplete_Cleanup__char_01.c":49:17)
#loc38 = loc("CWE459_Incomplete_Cleanup__char_01.c":49:26)
#loc39 = loc("CWE459_Incomplete_Cleanup__char_01.c":50:13)
#loc40 = loc("CWE459_Incomplete_Cleanup__char_01.c":51:17)
#loc41 = loc("CWE459_Incomplete_Cleanup__char_01.c":51:25)
#loc42 = loc("CWE459_Incomplete_Cleanup__char_01.c":52:24)
#loc43 = loc("CWE459_Incomplete_Cleanup__char_01.c":52:17)
#loc44 = loc("CWE459_Incomplete_Cleanup__char_01.c":84:1)
#loc45 = loc("CWE459_Incomplete_Cleanup__char_01.c":87:1)
#loc46 = loc("CWE459_Incomplete_Cleanup__char_01.c":86:5)
#loc47 = loc("CWE459_Incomplete_Cleanup__char_01.c":86:11)
#loc48 = loc("/usr/include/unistd.h":858:1)
#loc49 = loc("/usr/include/unistd.h":858:48)
#loc50 = loc("CWE459_Incomplete_Cleanup__char_01.c":63:1)
#loc51 = loc("CWE459_Incomplete_Cleanup__char_01.c":82:1)
#loc52 = loc("CWE459_Incomplete_Cleanup__char_01.c":67:9)
#loc53 = loc("CWE459_Incomplete_Cleanup__char_01.c":67:15)
#loc54 = loc("CWE459_Incomplete_Cleanup__char_01.c":69:9)
#loc55 = loc("CWE459_Incomplete_Cleanup__char_01.c":69:40)
#loc56 = loc("CWE459_Incomplete_Cleanup__char_01.c":65:5)
#loc57 = loc("CWE459_Incomplete_Cleanup__char_01.c":81:5)
#loc58 = loc("CWE459_Incomplete_Cleanup__char_01.c":69:32)
#loc59 = loc("CWE459_Incomplete_Cleanup__char_01.c":69:24)
#loc60 = loc("CWE459_Incomplete_Cleanup__char_01.c":70:9)
#loc61 = loc("CWE459_Incomplete_Cleanup__char_01.c":80:9)
#loc62 = loc("CWE459_Incomplete_Cleanup__char_01.c":70:13)
#loc63 = loc("CWE459_Incomplete_Cleanup__char_01.c":70:26)
#loc64 = loc("CWE459_Incomplete_Cleanup__char_01.c":70:25)
#loc65 = loc("CWE459_Incomplete_Cleanup__char_01.c":71:9)
#loc66 = loc("CWE459_Incomplete_Cleanup__char_01.c":72:28)
#loc67 = loc("CWE459_Incomplete_Cleanup__char_01.c":72:38)
#loc68 = loc("CWE459_Incomplete_Cleanup__char_01.c":72:21)
#loc69 = loc("CWE459_Incomplete_Cleanup__char_01.c":72:13)
#loc70 = loc("CWE459_Incomplete_Cleanup__char_01.c":72:41)
#loc71 = loc("CWE459_Incomplete_Cleanup__char_01.c":73:13)
#loc72 = loc("CWE459_Incomplete_Cleanup__char_01.c":79:13)
#loc73 = loc("CWE459_Incomplete_Cleanup__char_01.c":73:17)
#loc74 = loc("CWE459_Incomplete_Cleanup__char_01.c":73:26)
#loc75 = loc("CWE459_Incomplete_Cleanup__char_01.c":74:13)
#loc76 = loc("CWE459_Incomplete_Cleanup__char_01.c":75:17)
#loc77 = loc("CWE459_Incomplete_Cleanup__char_01.c":75:25)
#loc78 = loc("CWE459_Incomplete_Cleanup__char_01.c":75:32)
#loc79 = loc("CWE459_Incomplete_Cleanup__char_01.c":76:24)
#loc80 = loc("CWE459_Incomplete_Cleanup__char_01.c":76:17)
#loc81 = loc("CWE459_Incomplete_Cleanup__char_01.c":78:24)
#loc82 = loc("CWE459_Incomplete_Cleanup__char_01.c":78:17)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc5, #loc6])
#loc86 = loc(fused[#loc7, #loc8])
#loc87 = loc(fused[#loc10, #loc11])
#loc88 = loc(fused[#loc13, #loc14])
#loc89 = loc(fused[#loc15, #loc16])
#loc90 = loc(fused[#loc17, #loc18])
#loc91 = loc(fused[#loc19, #loc20])
#loc92 = loc(fused[#loc21, #loc22])
#loc93 = loc(fused[#loc25, #loc26])
#loc94 = loc(fused[#loc27, #loc28])
#loc95 = loc(fused[#loc30, #loc26])
#loc96 = loc(fused[#loc33, #loc34])
#loc97 = loc(fused[#loc35, #loc36])
#loc98 = loc(fused[#loc37, #loc38])
#loc99 = loc(fused[#loc39, #loc36])
#loc100 = loc(fused[#loc44, #loc45])
#loc101 = loc(fused[#loc46, #loc47])
#loc102 = loc(fused[#loc48, #loc49])
#loc103 = loc(fused[#loc50, #loc51])
#loc104 = loc(fused[#loc52, #loc53])
#loc105 = loc(fused[#loc54, #loc55])
#loc106 = loc(fused[#loc56, #loc57])
#loc107 = loc(fused[#loc60, #loc61])
#loc108 = loc(fused[#loc62, #loc63])
#loc109 = loc(fused[#loc65, #loc61])
#loc110 = loc(fused[#loc69, #loc70])
#loc111 = loc(fused[#loc71, #loc72])
#loc112 = loc(fused[#loc73, #loc74])
#loc113 = loc(fused[#loc75, #loc72])
