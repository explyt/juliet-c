!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc114)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc117)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc118)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc18)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc19)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc21)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc21)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc23)
        %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc24)
        cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc121)
        cir.break loc(#loc25)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc26)
        cir.break loc(#loc27)
      }
      ] loc(#loc16)
    } loc(#loc119)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc123)
      %4 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc123)
      cir.store %4, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc123)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc32)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc34)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc35)
      %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc36)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc35)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc37)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc124)
      %14 = cir.call @strncpy(%6, %7, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    } loc(#loc122)
    cir.return loc(#loc9)
  } loc(#loc115)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc125)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc130)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc131)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc56)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc57)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc57)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc58)
        cir.break loc(#loc59)
      },
      case (default) {
        %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc62)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc62)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc64)
        %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc65)
        cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc134)
        cir.break loc(#loc66)
      }
      ] loc(#loc54)
    } loc(#loc132)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc136)
      %4 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc136)
      cir.store %4, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc136)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc71)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc73)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc74)
      %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc75)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc74)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc76)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc76)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc137)
      %14 = cir.call @strncpy(%6, %7, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc71)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    } loc(#loc135)
    cir.return loc(#loc47)
  } loc(#loc128)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc140)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc141)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc89)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc90)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc92)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc92)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc94)
        %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc95)
        cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc144)
        cir.break loc(#loc96)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc98)
        cir.break loc(#loc99)
      }
      ] loc(#loc87)
    } loc(#loc142)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc146)
      %4 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc146)
      cir.store %4, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc146)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc104)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc106)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc107)
      %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc108)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc107)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc109)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc109)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc147)
      %14 = cir.call @strncpy(%6, %7, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    } loc(#loc145)
    cir.return loc(#loc80)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":43:19)
#loc4 = loc("/usr/include/string.h":144:1)
#loc5 = loc("/usr/include/string.h":146:14)
#loc6 = loc("/usr/include/string.h":407:1)
#loc7 = loc("/usr/include/string.h":408:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":28:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":53:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":30:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":30:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":31:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":31:26)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":32:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":32:29)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":33:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":45:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":33:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":38:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":38:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":39:19)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":39:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":39:14)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":39:15)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":40:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":43:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":44:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":46:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":52:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":47:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":47:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:17)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:23)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:31)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:38)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:48)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":51:19)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":51:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":115:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":119:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":117:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":117:14)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":118:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":118:14)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":60:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":85:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":62:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":62:12)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":63:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":63:26)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":64:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":64:29)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":65:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":77:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":65:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":69:19)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":69:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":70:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":74:16)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":74:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":75:19)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":75:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":75:14)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":75:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":76:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":78:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":84:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":79:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":79:29)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:17)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:23)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:31)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:38)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:48)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":83:19)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":83:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":88:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":113:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":90:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":90:12)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":91:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":91:26)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":92:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":92:29)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":93:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":105:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":93:12)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":98:16)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":98:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":99:19)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":99:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":99:14)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":99:15)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":100:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":103:19)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":103:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":104:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":106:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":112:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":107:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":107:29)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:17)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:23)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:31)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:38)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:48)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":111:19)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":111:9)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc4, #loc5])
#loc114 = loc(fused[#loc6, #loc7])
#loc115 = loc(fused[#loc8, #loc9])
#loc116 = loc(fused[#loc10, #loc11])
#loc117 = loc(fused[#loc12, #loc13])
#loc118 = loc(fused[#loc14, #loc15])
#loc119 = loc(fused[#loc16, #loc17])
#loc120 = loc(fused[#loc20, #loc19])
#loc121 = loc(fused[#loc22, #loc21])
#loc122 = loc(fused[#loc28, #loc29])
#loc123 = loc(fused[#loc30, #loc31])
#loc124 = loc(fused[#loc35, #loc37])
#loc125 = loc(fused[#loc40, #loc41])
#loc126 = loc(fused[#loc42, #loc43])
#loc127 = loc(fused[#loc44, #loc45])
#loc128 = loc(fused[#loc46, #loc47])
#loc129 = loc(fused[#loc48, #loc49])
#loc130 = loc(fused[#loc50, #loc51])
#loc131 = loc(fused[#loc52, #loc53])
#loc132 = loc(fused[#loc54, #loc55])
#loc133 = loc(fused[#loc61, #loc60])
#loc134 = loc(fused[#loc63, #loc62])
#loc135 = loc(fused[#loc67, #loc68])
#loc136 = loc(fused[#loc69, #loc70])
#loc137 = loc(fused[#loc74, #loc76])
#loc138 = loc(fused[#loc79, #loc80])
#loc139 = loc(fused[#loc81, #loc82])
#loc140 = loc(fused[#loc83, #loc84])
#loc141 = loc(fused[#loc85, #loc86])
#loc142 = loc(fused[#loc87, #loc88])
#loc143 = loc(fused[#loc91, #loc90])
#loc144 = loc(fused[#loc93, #loc92])
#loc145 = loc(fused[#loc100, #loc101])
#loc146 = loc(fused[#loc102, #loc103])
#loc147 = loc(fused[#loc107, #loc109])
