!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":127:10)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":127:14)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":127:20)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":127:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc187 = loc(fused[#loc122, #loc123])
#loc188 = loc(fused[#loc124, #loc125])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.return %2 : !s32i loc(#loc139)
  } loc(#loc138)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc140)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc141)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc144)
    cir.scope {
      %7 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc18)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc146)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc149)
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc150)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc151)
          %12 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc28)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc151)
          cir.call @_ZN12TwoIntsClassC2Ev(%14) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc26)
          cir.store %14, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc150)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc29)
          %16 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc30)
          %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc152)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc32)
          %19 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
          %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc153)
          %21 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
          cir.store %21, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc154)
        } loc(#loc148)
      } loc(#loc147)
    } loc(#loc145)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc39)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc40)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc41)
    cir.return loc(#loc11)
  } loc(#loc142)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc43)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %2 : !s32i loc(#loc156)
  } loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc157)
  cir.func internal private @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc53)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc160)
    cir.scope {
      %7 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc57)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc162)
      cir.if %8 {
        %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
      } else {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc165)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc166)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc165)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc166)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc66)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc165)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc68)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc167)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc70)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc168)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc72)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc169)
        } loc(#loc164)
      } loc(#loc163)
    } loc(#loc161)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc74)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc76)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc77)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc77)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc78)
    cir.return loc(#loc50)
  } loc(#loc158)
  cir.func internal private @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc172)
    cir.scope {
      %7 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc87)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc174)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc177)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc178)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc177)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc178)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc93)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc177)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc95)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc96)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc179)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc97)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc98)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc180)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc99)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc181)
        } loc(#loc176)
      } loc(#loc175)
    } loc(#loc173)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc101)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc103)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc104)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc104)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc105)
    cir.return loc(#loc80)
  } loc(#loc170)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_084goodEv() extra(#fn_attr) {
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08L8goodG2B1Ev() : () -> () loc(#loc108)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08L8goodG2B2Ev() : () -> () loc(#loc109)
    cir.return loc(#loc107)
  } loc(#loc182)
  cir.func private @srand(!u32i) extra(#fn_attr2) loc(#loc183)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc184)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc119)
  cir.func @main(%arg0: !s32i loc(fused[#loc122, #loc123]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc124, #loc125])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc187)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc121)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc126)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc127)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc128)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc128)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr2) loc(#loc129)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc116)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_084goodEv() : () -> () loc(#loc131)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc117)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc118)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_083badEv() : () -> () loc(#loc134)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc119)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc136)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    cir.return %15 : !s32i loc(#loc189)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":24:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":27:1)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":26:12)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":26:5)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":39:1)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":57:1)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":41:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":41:20)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":42:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":42:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":43:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":53:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":43:8)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":43:26)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":44:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":45:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":52:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":47:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":47:45)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":48:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":48:53)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":48:41)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":48:45)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":49:34)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":49:13)
#loc31 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":50:34)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":50:13)
#loc34 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":51:20)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":51:13)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":54:18)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":54:24)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":54:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":56:12)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":39:6)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":29:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":32:1)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":31:12)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":31:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":71:19)
#loc47 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc48 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":64:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":86:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":66:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":66:20)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":67:12)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":67:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":68:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":82:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":68:8)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":68:27)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":69:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":72:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":74:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":71:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":75:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":81:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":77:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":77:45)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":77:41)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":78:34)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":78:13)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":79:34)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":79:13)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":80:20)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":80:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":83:18)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":83:24)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":83:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":85:12)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":64:13)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":89:1)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":106:1)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":91:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":91:20)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":92:12)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":92:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":93:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":102:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":93:8)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":93:26)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":94:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":95:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":101:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":97:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":97:45)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":97:41)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":98:34)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":98:13)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":99:34)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":99:13)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":100:20)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":100:13)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":103:18)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":103:24)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":103:5)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":105:12)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":89:13)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":108:1)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":112:1)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":110:5)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":111:5)
#loc110 = loc("/usr/include/stdlib.h":575:1)
#loc111 = loc("/usr/include/stdlib.h":575:41)
#loc112 = loc("/usr/include/time.h":76:1)
#loc113 = loc("/usr/include/time.h":76:38)
#loc114 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc115 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":132:15)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":134:15)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":137:15)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":139:15)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":127:1)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":142:1)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":128:1)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":130:27)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":130:22)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":130:5)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":132:5)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":133:5)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":134:5)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":137:5)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":138:5)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":139:5)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":141:12)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":141:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc4, #loc3])
#loc140 = loc(fused[#loc6, #loc7])
#loc141 = loc(fused[#loc8, #loc9])
#loc142 = loc(fused[#loc10, #loc11])
#loc143 = loc(fused[#loc12, #loc13])
#loc144 = loc(fused[#loc15, #loc14])
#loc145 = loc(fused[#loc16, #loc17])
#loc146 = loc(fused[#loc18, #loc19])
#loc147 = loc(fused[#loc20, #loc17])
#loc148 = loc(fused[#loc21, #loc22])
#loc149 = loc(fused[#loc23, #loc24])
#loc150 = loc(fused[#loc25, #loc26])
#loc151 = loc(fused[#loc27, #loc26])
#loc152 = loc(fused[#loc30, #loc29])
#loc153 = loc(fused[#loc33, #loc32])
#loc154 = loc(fused[#loc36, #loc35])
#loc155 = loc(fused[#loc42, #loc43])
#loc156 = loc(fused[#loc45, #loc44])
#loc157 = loc(fused[#loc47, #loc48])
#loc158 = loc(fused[#loc49, #loc50])
#loc159 = loc(fused[#loc51, #loc52])
#loc160 = loc(fused[#loc54, #loc53])
#loc161 = loc(fused[#loc55, #loc56])
#loc162 = loc(fused[#loc57, #loc58])
#loc163 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc164 = loc(fused[#loc63, #loc64])
#loc165 = loc(fused[#loc65, #loc66])
#loc166 = loc(fused[#loc67, #loc66])
#loc167 = loc(fused[#loc69, #loc68])
#loc168 = loc(fused[#loc71, #loc70])
#loc169 = loc(fused[#loc73, #loc72])
#loc170 = loc(fused[#loc79, #loc80])
#loc171 = loc(fused[#loc81, #loc82])
#loc172 = loc(fused[#loc84, #loc83])
#loc173 = loc(fused[#loc85, #loc86])
#loc174 = loc(fused[#loc87, #loc88])
#loc175 = loc(fused[#loc89, #loc86])
#loc176 = loc(fused[#loc90, #loc91])
#loc177 = loc(fused[#loc92, #loc93])
#loc178 = loc(fused[#loc94, #loc93])
#loc179 = loc(fused[#loc96, #loc95])
#loc180 = loc(fused[#loc98, #loc97])
#loc181 = loc(fused[#loc100, #loc99])
#loc182 = loc(fused[#loc106, #loc107])
#loc183 = loc(fused[#loc110, #loc111])
#loc184 = loc(fused[#loc112, #loc113])
#loc185 = loc(fused[#loc114, #loc115])
#loc186 = loc(fused[#loc120, #loc121])
#loc189 = loc(fused[#loc137, #loc136])
