!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc97)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc98)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc99)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc100)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc101)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc98)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc104)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc105)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc107)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc107)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc21)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc108)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc28)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc110)
    cir.br ^bb4 loc(#loc24)
  ^bb3:  // pred: ^bb1
    %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc34)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc112)
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc113)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc98)
    cir.copy %20 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc98)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc41)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc42)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc43)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc42)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc44)
    %30 = cir.binop(add, %27, %29) : !u64i loc(#loc114)
    %31 = cir.const #cir.int<1> : !u64i loc(#loc115)
    %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc116)
    cir.libc.memmove %32 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc117)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb7 loc(#loc39)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc12)
  } loc(#loc102)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    cir.return loc(#loc53)
  } loc(#loc118)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc122)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc125)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc125)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc66)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc66)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc126)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc73)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc128)
    cir.br ^bb4 loc(#loc69)
  ^bb3:  // pred: ^bb1
    %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc77)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc79)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc130)
    cir.br ^bb4 loc(#loc65)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc65)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc131)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc97)
    cir.copy %20 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc97)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc86)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc87)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc88)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc87)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc89)
    %30 = cir.binop(add, %27, %29) : !u64i loc(#loc132)
    %31 = cir.const #cir.int<1> : !u64i loc(#loc133)
    %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc134)
    cir.libc.memmove %32 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc135)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc57)
  } loc(#loc120)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":82:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":82:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":48:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":48:29)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":28:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":54:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":30:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":31:26)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":32:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":32:29)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":46:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":33:8)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":33:33)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":34:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":39:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":41:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":37:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":37:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":38:19)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":38:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":38:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":38:15)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":44:16)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":44:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":45:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":45:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":45:14)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":45:15)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":47:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":53:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":51:17)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":51:23)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":51:32)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":51:39)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":51:49)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":51:54)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":51:65)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":51:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":51:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":51:66)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":52:19)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":52:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":90:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":93:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":92:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":92:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":62:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":88:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":64:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":64:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":65:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":65:26)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":66:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":66:29)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":67:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":80:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":67:8)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":67:33)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":68:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":73:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":75:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":71:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":71:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":72:19)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":72:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":72:14)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":72:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":78:16)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":78:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":79:19)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":79:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":79:14)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":79:15)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":81:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":87:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":85:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":85:23)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":85:32)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":85:39)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":85:49)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":85:54)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":85:65)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":85:31)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":85:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":85:66)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":86:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_12.c":86:9)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc99 = loc(fused[#loc5, #loc6])
#loc100 = loc(fused[#loc7, #loc8])
#loc101 = loc(fused[#loc9, #loc10])
#loc102 = loc(fused[#loc11, #loc12])
#loc103 = loc(fused[#loc13, #loc14])
#loc104 = loc(fused[#loc15, #loc16])
#loc105 = loc(fused[#loc17, #loc18])
#loc106 = loc(fused[#loc19, #loc20])
#loc107 = loc(fused[#loc21, #loc22])
#loc108 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc109 = loc(fused[#loc27, #loc26])
#loc110 = loc(fused[#loc29, #loc28])
#loc111 = loc(fused[#loc33, #loc32])
#loc112 = loc(fused[#loc35, #loc34])
#loc113 = loc(fused[#loc38, #loc39])
#loc114 = loc(fused[#loc42, #loc44])
#loc115 = loc(fused[#loc45, #loc46])
#loc116 = loc(fused[#loc47, #loc46])
#loc117 = loc(fused[#loc48, #loc49])
#loc118 = loc(fused[#loc52, #loc53])
#loc119 = loc(fused[#loc54, #loc55])
#loc120 = loc(fused[#loc56, #loc57])
#loc121 = loc(fused[#loc58, #loc59])
#loc122 = loc(fused[#loc60, #loc61])
#loc123 = loc(fused[#loc62, #loc63])
#loc124 = loc(fused[#loc64, #loc65])
#loc125 = loc(fused[#loc66, #loc67])
#loc126 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc127 = loc(fused[#loc72, #loc71])
#loc128 = loc(fused[#loc74, #loc73])
#loc129 = loc(fused[#loc78, #loc77])
#loc130 = loc(fused[#loc80, #loc79])
#loc131 = loc(fused[#loc83, #loc84])
#loc132 = loc(fused[#loc87, #loc89])
#loc133 = loc(fused[#loc90, #loc91])
#loc134 = loc(fused[#loc92, #loc91])
#loc135 = loc(fused[#loc93, #loc94])
