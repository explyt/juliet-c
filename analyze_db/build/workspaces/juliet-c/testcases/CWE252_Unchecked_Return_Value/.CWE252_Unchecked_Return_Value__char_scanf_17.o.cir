!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc63)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc10)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc66)
        cir.condition(%4) loc(#loc14)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc69)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc70)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc69)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc69)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
            %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc22)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
            %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
            %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc22)
          } loc(#loc68)
        } loc(#loc67)
        cir.yield loc(#loc9)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc25)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
        cir.yield loc(#loc64)
      } loc(#loc64)
    } loc(#loc64)
    cir.return loc(#loc5)
  } loc(#loc62)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc73)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc72)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc76)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc39)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc79)
        cir.condition(%4) loc(#loc43)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc82)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc83)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc82)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc82)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
            cir.scope {
              %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc53)
              %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc54)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc54)
              %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
              %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc53)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc56)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc56)
              %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc85)
              cir.if %13 {
                %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc32)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc58)
              } loc(#loc86)
            } loc(#loc84)
          } loc(#loc81)
        } loc(#loc80)
        cir.yield loc(#loc38)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc60)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
        cir.yield loc(#loc77)
      } loc(#loc77)
    } loc(#loc77)
    cir.return loc(#loc34)
  } loc(#loc75)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":35:19)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":24:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":38:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":26:5)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":26:9)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":37:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:13)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:9)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:16)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:20)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:18)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":28:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":29:9)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":36:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":32:13)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":32:36)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":33:13)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":33:27)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":35:13)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":35:29)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:24)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:23)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":64:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":67:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":66:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":66:11)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":58:27)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":45:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":62:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":47:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":47:9)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":61:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:13)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:16)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:20)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:18)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":49:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":50:9)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":60:9)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":53:13)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":53:36)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":54:13)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":54:27)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":56:13)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":59:13)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":56:17)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":56:23)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":56:33)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":56:42)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":57:13)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":58:17)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:24)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:23)
#loc61 = loc(fused[#loc1, #loc2])
#loc62 = loc(fused[#loc4, #loc5])
#loc63 = loc(fused[#loc6, #loc7])
#loc64 = loc(fused[#loc8, #loc9])
#loc65 = loc(fused[#loc11, #loc10])
#loc66 = loc(fused[#loc12, #loc13])
#loc67 = loc(fused[#loc15, #loc9])
#loc68 = loc(fused[#loc16, #loc17])
#loc69 = loc(fused[#loc18, #loc19])
#loc70 = loc(fused[#loc20, #loc21])
#loc71 = loc(fused[#loc25, #loc24])
#loc72 = loc(fused[#loc26, #loc27])
#loc73 = loc(fused[#loc28, #loc29])
#loc74 = loc(fused[#loc30, #loc31])
#loc75 = loc(fused[#loc33, #loc34])
#loc76 = loc(fused[#loc35, #loc36])
#loc77 = loc(fused[#loc37, #loc38])
#loc78 = loc(fused[#loc40, #loc39])
#loc79 = loc(fused[#loc41, #loc42])
#loc80 = loc(fused[#loc44, #loc38])
#loc81 = loc(fused[#loc45, #loc46])
#loc82 = loc(fused[#loc47, #loc48])
#loc83 = loc(fused[#loc49, #loc50])
#loc84 = loc(fused[#loc51, #loc52])
#loc85 = loc(fused[#loc53, #loc56])
#loc86 = loc(fused[#loc57, #loc52])
#loc87 = loc(fused[#loc60, #loc59])
