!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":90:44)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":175:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc233)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc235)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc236)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc237)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc238)
  cir.func private @close(!s32i) -> !s32i loc(#loc239)
  cir.func private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_647badSinkEPv(!cir.ptr<!void>) loc(#loc240)
  cir.func @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_643badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc243)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc244)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc245)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc246)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc31)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc25)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb2 loc(#loc249)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc249)
  ^bb3:  // pred: ^bb26
    %9 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %10 ^bb4, ^bb27 loc(#loc37)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc250)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %12 = cir.const #cir.int<1> : !u32i loc(#loc41)
    %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc41)
    %14 = cir.const #cir.int<6> : !u32i loc(#loc42)
    %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc42)
    %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.br ^bb6 loc(#loc252)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc49)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc253)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc254)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc51)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc47)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc255)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc256)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc257)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc59)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc258)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc62)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc259)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc67)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc67)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc68)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc260)
    cir.br ^bb10 loc(#loc261)
  ^bb10:  // pred: ^bb9
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc262)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc263)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc263)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc79)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %42 = cir.unary(minus, %41) nsw : !s32i, !s32i loc(#loc80)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %43 ^bb11, ^bb12 loc(#loc265)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc82)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc73)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc85)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc85)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc85)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc85)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc85)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc85)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc85)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc86)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc266)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc88)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc88)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb14 loc(#loc268)
  ^bb14:  // pred: ^bb13
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc94)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc269)
    cir.brcond %63 ^bb15, ^bb16 loc(#loc95)
  ^bb15:  // pred: ^bb14
    %64 = cir.const #true loc(#loc95)
    cir.br ^bb21(%64 : !cir.bool) loc(#loc95)
  ^bb16:  // pred: ^bb14
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc270)
    cir.brcond %67 ^bb17, ^bb18 loc(#loc95)
  ^bb17:  // pred: ^bb16
    %68 = cir.const #true loc(#loc95)
    cir.br ^bb19(%68 : !cir.bool) loc(#loc95)
  ^bb18:  // pred: ^bb16
    %69 = cir.const #false loc(#loc95)
    cir.br ^bb19(%69 : !cir.bool) loc(#loc95)
  ^bb19(%70: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":90:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc95)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%70 : !cir.bool) loc(#loc95)
  ^bb21(%71: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":90:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc95)
  ^bb22:  // pred: ^bb21
    cir.brcond %71 ^bb23, ^bb24 loc(#loc271)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc99)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc92)
  ^bb25:  // pred: ^bb24
    %72 = cir.const #cir.int<0> : !s8i loc(#loc100)
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
    %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %72, %75 : !s8i, !cir.ptr<!s8i> loc(#loc272)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
    %77 = cir.call @atoi(%76) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc104)
    cir.store %77, %4 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb26 loc(#loc39)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc36)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc36)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc274)
  ^bb29:  // pred: ^bb28
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc110)
    %81 = cir.cmp(ne, %78, %80) : !s32i, !cir.bool loc(#loc275)
    cir.brcond %81 ^bb30, ^bb31 loc(#loc276)
  ^bb30:  // pred: ^bb29
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %83 = cir.call @close(%82) : (!s32i) -> !s32i loc(#loc113)
    cir.br ^bb31 loc(#loc108)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc108)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc34)
  ^bb33:  // pred: ^bb32
    %84 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc277)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_647badSinkEPv(%84) : (!cir.ptr<!void>) -> () loc(#loc116)
    cir.return loc(#loc19)
  } loc(#loc241)
  cir.func private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_6411goodG2BSinkEPv(!cir.ptr<!void>) loc(#loc278)
  cir.func internal private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc124)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc126)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %4 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc283)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_6411goodG2BSinkEPv(%4) : (!cir.ptr<!void>) -> () loc(#loc130)
    cir.return loc(#loc120)
  } loc(#loc279)
  cir.func private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_6411goodB2GSinkEPv(!cir.ptr<!void>) loc(#loc284)
  cir.func internal private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc286)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc287)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc288)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc289)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc290)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc146)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb1 loc(#loc292)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc140)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb2 loc(#loc293)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc293)
  ^bb3:  // pred: ^bb26
    %9 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc152)
    cir.brcond %10 ^bb4, ^bb27 loc(#loc152)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc294)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<2> : !s32i loc(#loc155)
    %12 = cir.const #cir.int<1> : !u32i loc(#loc156)
    %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc156)
    %14 = cir.const #cir.int<6> : !u32i loc(#loc157)
    %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc157)
    %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc158)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb6 loc(#loc296)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc164)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc297)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc298)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc166)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc162)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc299)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc300)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc301)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc174)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc174)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc302)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc176)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc176)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc177)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc303)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc180)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc180)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc181)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc304)
    cir.br ^bb10 loc(#loc305)
  ^bb10:  // pred: ^bb9
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc306)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc307)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc307)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc191)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %42 = cir.unary(minus, %41) nsw : !s32i, !s32i loc(#loc192)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc308)
    cir.brcond %43 ^bb11, ^bb12 loc(#loc309)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc194)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc185)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc196)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc196)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc197)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc197)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc197)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc197)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc197)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc197)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc197)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc198)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc310)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc199)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc200)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc200)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.br ^bb14 loc(#loc312)
  ^bb14:  // pred: ^bb13
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc206)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc313)
    cir.brcond %63 ^bb15, ^bb16 loc(#loc207)
  ^bb15:  // pred: ^bb14
    %64 = cir.const #true loc(#loc207)
    cir.br ^bb21(%64 : !cir.bool) loc(#loc207)
  ^bb16:  // pred: ^bb14
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc209)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc314)
    cir.brcond %67 ^bb17, ^bb18 loc(#loc207)
  ^bb17:  // pred: ^bb16
    %68 = cir.const #true loc(#loc207)
    cir.br ^bb19(%68 : !cir.bool) loc(#loc207)
  ^bb18:  // pred: ^bb16
    %69 = cir.const #false loc(#loc207)
    cir.br ^bb19(%69 : !cir.bool) loc(#loc207)
  ^bb19(%70: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":175:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc207)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%70 : !cir.bool) loc(#loc207)
  ^bb21(%71: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":175:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc207)
  ^bb22:  // pred: ^bb21
    cir.brcond %71 ^bb23, ^bb24 loc(#loc315)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc211)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc204)
  ^bb25:  // pred: ^bb24
    %72 = cir.const #cir.int<0> : !s8i loc(#loc212)
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc214)
    %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc214)
    cir.store %72, %75 : !s8i, !cir.ptr<!s8i> loc(#loc316)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc215)
    %77 = cir.call @atoi(%76) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc216)
    cir.store %77, %4 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb26 loc(#loc154)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc151)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc151)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc318)
  ^bb29:  // pred: ^bb28
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc222)
    %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc222)
    %81 = cir.cmp(ne, %78, %80) : !s32i, !cir.bool loc(#loc319)
    cir.brcond %81 ^bb30, ^bb31 loc(#loc320)
  ^bb30:  // pred: ^bb29
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    %83 = cir.call @close(%82) : (!s32i) -> !s32i loc(#loc225)
    cir.br ^bb31 loc(#loc220)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc220)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc149)
  ^bb33:  // pred: ^bb32
    %84 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc321)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_6411goodB2GSinkEPv(%84) : (!cir.ptr<!void>) -> () loc(#loc228)
    cir.return loc(#loc134)
  } loc(#loc285)
  cir.func @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_644goodEv() extra(#fn_attr1) {
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64L7goodG2BEv() : () -> () loc(#loc231)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64L7goodB2GEv() : () -> () loc(#loc232)
    cir.return loc(#loc230)
  } loc(#loc322)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":81:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":48:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":48:32)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":50:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":112:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":60:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":60:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":61:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":61:28)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":62:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":62:32)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":63:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":63:41)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":52:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":52:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":54:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":54:12)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":54:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":55:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":110:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":64:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":99:17)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":99:16)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":65:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":98:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":74:36)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":74:45)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":74:58)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":74:29)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":74:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":74:69)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":75:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":78:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":75:17)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":75:34)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":76:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":77:17)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":79:20)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":79:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":79:30)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":79:33)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":79:47)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":79:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":79:48)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":80:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":80:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":81:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":81:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":81:59)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":82:38)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":82:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":82:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":82:46)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":83:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":86:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":83:25)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":83:58)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":83:59)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":83:68)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":83:82)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":83:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":83:88)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":84:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":85:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":89:31)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":89:46)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":89:59)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":89:77)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":89:80)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":89:26)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":89:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":89:81)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":90:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":93:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":90:17)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":90:31)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":90:47)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":90:61)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":91:13)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":92:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":95:39)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":95:25)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":95:13)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":97:25)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":97:20)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":97:13)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":97:36)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":100:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":103:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":100:13)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":100:30)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":101:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":102:26)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":102:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":111:13)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":111:14)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":111:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":119:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":119:36)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":121:1)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":130:1)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":123:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":123:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":125:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":125:12)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":125:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":128:12)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":128:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":129:17)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":129:18)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":129:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":133:1)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":133:36)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":135:1)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":197:1)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":145:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":145:13)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":146:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":146:28)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":147:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":147:32)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":148:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":148:41)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":137:5)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":137:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":139:13)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":139:12)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":139:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":140:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":195:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":149:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":184:17)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":184:16)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":150:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":183:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":159:36)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":159:45)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":159:58)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":159:29)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":159:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":159:69)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":160:13)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":163:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":160:17)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":160:34)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":161:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":162:17)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":164:20)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":164:21)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":164:30)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":164:33)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":164:47)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":164:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":164:48)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":165:34)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":165:13)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":166:49)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":166:39)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":166:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":166:59)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":167:38)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":167:32)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":167:13)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":167:46)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":168:13)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":171:13)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":168:25)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":168:58)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":168:59)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":168:68)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":168:82)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":168:17)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":168:88)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":169:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":170:17)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":174:31)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":174:46)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":174:59)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":174:77)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":174:80)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":174:26)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":174:13)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":174:81)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":175:13)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":178:13)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":175:17)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":175:31)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":175:47)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":175:61)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":176:13)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":177:17)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":180:39)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":180:25)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":180:13)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":182:25)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":182:20)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":182:13)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":182:36)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":185:9)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":188:9)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":185:13)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":185:30)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":186:9)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":187:26)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":187:13)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":196:17)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":196:18)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":196:5)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":199:1)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":203:1)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":201:5)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_64a.cpp":202:5)
#loc233 = loc(fused[#loc1, #loc2])
#loc234 = loc(fused[#loc3, #loc4])
#loc235 = loc(fused[#loc6, #loc7])
#loc236 = loc(fused[#loc8, #loc9])
#loc237 = loc(fused[#loc10, #loc11])
#loc238 = loc(fused[#loc12, #loc13])
#loc239 = loc(fused[#loc14, #loc15])
#loc240 = loc(fused[#loc16, #loc17])
#loc241 = loc(fused[#loc18, #loc19])
#loc242 = loc(fused[#loc20, #loc21])
#loc243 = loc(fused[#loc22, #loc23])
#loc244 = loc(fused[#loc24, #loc25])
#loc245 = loc(fused[#loc26, #loc27])
#loc246 = loc(fused[#loc28, #loc29])
#loc247 = loc(fused[#loc32, #loc30])
#loc248 = loc(fused[#loc33, #loc34])
#loc249 = loc(fused[#loc35, #loc36])
#loc250 = loc(fused[#loc38, #loc39])
#loc251 = loc(fused[#loc44, #loc45])
#loc252 = loc(fused[#loc46, #loc47])
#loc253 = loc(fused[#loc48, #loc49])
#loc254 = loc(fused[#loc50, #loc47])
#loc255 = loc(fused[#loc52, #loc53])
#loc256 = loc(fused[#loc55, #loc56])
#loc257 = loc(fused[#loc57, #loc58])
#loc258 = loc(fused[#loc61, #loc59])
#loc259 = loc(fused[#loc65, #loc66])
#loc260 = loc(fused[#loc70, #loc71])
#loc261 = loc(fused[#loc72, #loc73])
#loc262 = loc(fused[#loc75, #loc76])
#loc263 = loc(fused[#loc77, #loc78])
#loc264 = loc(fused[#loc79, #loc80])
#loc265 = loc(fused[#loc81, #loc73])
#loc266 = loc(fused[#loc85, #loc86])
#loc267 = loc(fused[#loc89, #loc90])
#loc268 = loc(fused[#loc91, #loc92])
#loc269 = loc(fused[#loc93, #loc94])
#loc270 = loc(fused[#loc96, #loc97])
#loc271 = loc(fused[#loc98, #loc92])
#loc272 = loc(fused[#loc102, #loc100])
#loc273 = loc(fused[#loc105, #loc106])
#loc274 = loc(fused[#loc107, #loc108])
#loc275 = loc(fused[#loc109, #loc110])
#loc276 = loc(fused[#loc111, #loc108])
#loc277 = loc(fused[#loc114, #loc115])
#loc278 = loc(fused[#loc117, #loc118])
#loc279 = loc(fused[#loc119, #loc120])
#loc280 = loc(fused[#loc121, #loc122])
#loc281 = loc(fused[#loc125, #loc123])
#loc282 = loc(fused[#loc127, #loc126])
#loc283 = loc(fused[#loc128, #loc129])
#loc284 = loc(fused[#loc131, #loc132])
#loc285 = loc(fused[#loc133, #loc134])
#loc286 = loc(fused[#loc135, #loc136])
#loc287 = loc(fused[#loc137, #loc138])
#loc288 = loc(fused[#loc139, #loc140])
#loc289 = loc(fused[#loc141, #loc142])
#loc290 = loc(fused[#loc143, #loc144])
#loc291 = loc(fused[#loc147, #loc145])
#loc292 = loc(fused[#loc148, #loc149])
#loc293 = loc(fused[#loc150, #loc151])
#loc294 = loc(fused[#loc153, #loc154])
#loc295 = loc(fused[#loc159, #loc160])
#loc296 = loc(fused[#loc161, #loc162])
#loc297 = loc(fused[#loc163, #loc164])
#loc298 = loc(fused[#loc165, #loc162])
#loc299 = loc(fused[#loc167, #loc168])
#loc300 = loc(fused[#loc170, #loc171])
#loc301 = loc(fused[#loc172, #loc173])
#loc302 = loc(fused[#loc175, #loc174])
#loc303 = loc(fused[#loc178, #loc179])
#loc304 = loc(fused[#loc182, #loc183])
#loc305 = loc(fused[#loc184, #loc185])
#loc306 = loc(fused[#loc187, #loc188])
#loc307 = loc(fused[#loc189, #loc190])
#loc308 = loc(fused[#loc191, #loc192])
#loc309 = loc(fused[#loc193, #loc185])
#loc310 = loc(fused[#loc197, #loc198])
#loc311 = loc(fused[#loc201, #loc202])
#loc312 = loc(fused[#loc203, #loc204])
#loc313 = loc(fused[#loc205, #loc206])
#loc314 = loc(fused[#loc208, #loc209])
#loc315 = loc(fused[#loc210, #loc204])
#loc316 = loc(fused[#loc214, #loc212])
#loc317 = loc(fused[#loc217, #loc218])
#loc318 = loc(fused[#loc219, #loc220])
#loc319 = loc(fused[#loc221, #loc222])
#loc320 = loc(fused[#loc223, #loc220])
#loc321 = loc(fused[#loc226, #loc227])
#loc322 = loc(fused[#loc229, #loc230])
