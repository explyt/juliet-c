!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63b_badSink(!cir.ptr<!s32i>) loc(#loc31)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc33)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc8)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc34)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc11)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc35)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63b_badSink(%0) : (!cir.ptr<!s32i>) -> () loc(#loc13)
    cir.return loc(#loc4)
  } loc(#loc32)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc37)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc16)
    cir.return loc(#loc15)
  } loc(#loc36)
  cir.func private @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63b_goodG2BSink(!cir.ptr<!s32i>) loc(#loc38)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc40)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc25)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc27)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc42)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63b_goodG2BSink(%0) : (!cir.ptr<!s32i>) -> () loc(#loc30)
    cir.return loc(#loc21)
  } loc(#loc39)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":0:0)
#loc1 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":22:1)
#loc2 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":22:92)
#loc3 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":24:1)
#loc4 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":32:1)
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":26:5)
#loc6 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":26:9)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":28:13)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":28:12)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":28:5)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":30:13)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":30:12)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":30:5)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":31:5)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":51:1)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":54:1)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":53:5)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":53:13)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":39:1)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":39:93)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":41:1)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":49:1)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":43:5)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":43:9)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":45:13)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":45:12)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":45:5)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":47:12)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":47:16)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":47:5)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_63a.c":48:5)
#loc31 = loc(fused[#loc1, #loc2])
#loc32 = loc(fused[#loc3, #loc4])
#loc33 = loc(fused[#loc5, #loc6])
#loc34 = loc(fused[#loc9, #loc7])
#loc35 = loc(fused[#loc12, #loc10])
#loc36 = loc(fused[#loc14, #loc15])
#loc37 = loc(fused[#loc16, #loc17])
#loc38 = loc(fused[#loc18, #loc19])
#loc39 = loc(fused[#loc20, #loc21])
#loc40 = loc(fused[#loc22, #loc23])
#loc41 = loc(fused[#loc26, #loc24])
#loc42 = loc(fused[#loc29, #loc28])
