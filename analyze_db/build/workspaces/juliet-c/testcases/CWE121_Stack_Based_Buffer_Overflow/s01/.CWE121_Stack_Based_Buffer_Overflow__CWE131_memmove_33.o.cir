!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc64)
  cir.func @_ZN53CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc66)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc67)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc8)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc68)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc11)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc69)
    cir.scope {
      %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc71)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc16)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
      cir.store %10, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc71)
      cir.scope {
        %11 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc73)
        %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc73)
        cir.store %12, %11 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc73)
        %13 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc21)
        %15 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc22)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc22)
        %17 = cir.const #cir.int<10> : !s32i loc(#loc23)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc23)
        %19 = cir.const #cir.int<4> : !u64i loc(#loc74)
        %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc75)
        cir.libc.memmove %20 bytes from %16 to %14 : !cir.ptr<!void>, !u64i loc(#loc76)
        %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc29)
        %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc30)
        %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc31)
      } loc(#loc72)
    } loc(#loc70)
    cir.return loc(#loc4)
  } loc(#loc65)
  cir.func internal private @_ZN53CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc78)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc79)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc37)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc38)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc80)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc40)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc40)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc40)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc40)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc40)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc40)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc40)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc81)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc83)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc45)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
      cir.store %12, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc83)
      cir.scope {
        %13 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc85)
        %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc85)
        cir.store %14, %13 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc85)
        %15 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc50)
        %17 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc51)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc51)
        %19 = cir.const #cir.int<10> : !s32i loc(#loc52)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc52)
        %21 = cir.const #cir.int<4> : !u64i loc(#loc86)
        %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc87)
        cir.libc.memmove %22 bytes from %18 to %16 : !cir.ptr<!void>, !u64i loc(#loc88)
        %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc58)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc59)
        %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc57)
        cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc60)
      } loc(#loc84)
    } loc(#loc82)
    cir.return loc(#loc33)
  } loc(#loc77)
  cir.func @_ZN53CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_334goodEv() extra(#fn_attr) {
    cir.call @_ZN53CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33L7goodG2BEv() : () -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc89)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":24:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":40:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":26:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":26:11)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":27:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":27:22)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":28:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":28:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":30:19)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":30:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":39:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":32:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":32:22)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":33:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":38:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":34:13)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":34:32)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":36:21)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":36:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":36:35)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":36:38)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":36:48)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":36:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":36:49)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":37:26)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":37:31)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":37:32)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":37:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":47:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":63:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":49:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":49:11)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":50:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":50:22)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":51:12)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":51:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":53:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":53:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":54:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":62:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":55:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":55:22)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":56:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":61:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":57:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":57:32)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":59:21)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":59:27)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":59:35)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":59:38)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":59:48)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":59:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":59:49)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":60:26)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":60:31)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":60:32)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":60:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":65:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":68:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_33.cpp":67:5)
#loc64 = loc(fused[#loc1, #loc2])
#loc65 = loc(fused[#loc3, #loc4])
#loc66 = loc(fused[#loc5, #loc6])
#loc67 = loc(fused[#loc7, #loc8])
#loc68 = loc(fused[#loc10, #loc9])
#loc69 = loc(fused[#loc12, #loc11])
#loc70 = loc(fused[#loc13, #loc14])
#loc71 = loc(fused[#loc15, #loc16])
#loc72 = loc(fused[#loc17, #loc18])
#loc73 = loc(fused[#loc19, #loc20])
#loc74 = loc(fused[#loc24, #loc25])
#loc75 = loc(fused[#loc23, #loc25])
#loc76 = loc(fused[#loc26, #loc27])
#loc77 = loc(fused[#loc32, #loc33])
#loc78 = loc(fused[#loc34, #loc35])
#loc79 = loc(fused[#loc36, #loc37])
#loc80 = loc(fused[#loc39, #loc38])
#loc81 = loc(fused[#loc41, #loc40])
#loc82 = loc(fused[#loc42, #loc43])
#loc83 = loc(fused[#loc44, #loc45])
#loc84 = loc(fused[#loc46, #loc47])
#loc85 = loc(fused[#loc48, #loc49])
#loc86 = loc(fused[#loc53, #loc54])
#loc87 = loc(fused[#loc52, #loc54])
#loc88 = loc(fused[#loc55, #loc56])
#loc89 = loc(fused[#loc61, #loc62])
