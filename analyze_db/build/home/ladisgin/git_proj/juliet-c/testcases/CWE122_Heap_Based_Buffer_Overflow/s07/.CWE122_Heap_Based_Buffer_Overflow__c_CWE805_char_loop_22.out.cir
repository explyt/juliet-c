!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":124:10)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":124:14)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":124:20)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":124:32)
#loc239 = loc(fused[#loc82, #loc83])
#loc240 = loc(fused[#loc84, #loc85])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc210)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc211)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc212)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc213)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc215)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc216)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %5 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_badGlobal : !cir.ptr<!s32i> loc(#loc210)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %7 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_badSource(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc22)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %10 = cir.const #cir.int<67> : !s32i loc(#loc28)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc29)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc29)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc222)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc33)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc34)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    cir.br ^bb2 loc(#loc224)
  ^bb2:  // pred: ^bb1
    %22 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc39)
    cir.store %23, %0 : !u64i, !cir.ptr<!u64i> loc(#loc225)
    cir.br ^bb3 loc(#loc224)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %24 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc42)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc226)
    cir.brcond %27 ^bb4, ^bb8 loc(#loc43)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc227)
  ^bb5:  // pred: ^bb4
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc46)
    %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc46)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc49)
    cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc228)
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // pred: ^bb6
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc52)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.br ^bb3 loc(#loc224)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc38)
  ^bb9:  // pred: ^bb8
    %37 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc53)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc55)
    %43 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %42 : !s32i), !cir.ptr<!s8i> loc(#loc57)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb10 loc(#loc26)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc214)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc231)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc232)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc67)
  } loc(#loc233)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc236)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc240)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc89)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_good : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_good() : () -> () loc(#loc91)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_bad() : () -> () loc(#loc95)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    cir.return %17 : !s32i loc(#loc243)
  } loc(#loc238)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc244)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc247)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc248)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc110)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %5 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc231)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %7 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_goodG2B1Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc115)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
    cir.br ^bb1 loc(#loc252)
  ^bb1:  // pred: ^bb0
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc120)
    %10 = cir.const #cir.int<67> : !s32i loc(#loc121)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc122)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc122)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc253)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc126)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc127)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc129)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc254)
    cir.br ^bb2 loc(#loc255)
  ^bb2:  // pred: ^bb1
    %22 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc132)
    cir.store %23, %0 : !u64i, !cir.ptr<!u64i> loc(#loc256)
    cir.br ^bb3 loc(#loc255)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %24 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc135)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc135)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc257)
    cir.brcond %27 ^bb4, ^bb8 loc(#loc136)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc258)
  ^bb5:  // pred: ^bb4
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc138)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc139)
    %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc139)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc141)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc142)
    cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc259)
    cir.br ^bb6 loc(#loc131)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc131)
  ^bb7:  // pred: ^bb6
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc145)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc260)
    cir.br ^bb3 loc(#loc255)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc131)
  ^bb9:  // pred: ^bb8
    %37 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc146)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc148)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc148)
    %43 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %42 : !s32i), !cir.ptr<!s8i> loc(#loc150)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc261)
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc154)
    cir.br ^bb10 loc(#loc119)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc103)
  } loc(#loc245)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc262)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc264)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc265)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc165)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %5 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc232)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %7 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22_goodG2B2Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc170)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    cir.br ^bb1 loc(#loc270)
  ^bb1:  // pred: ^bb0
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc175)
    %10 = cir.const #cir.int<67> : !s32i loc(#loc176)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc177)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc177)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc177)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc271)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc181)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc182)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc182)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc184)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc184)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc272)
    cir.br ^bb2 loc(#loc273)
  ^bb2:  // pred: ^bb1
    %22 = cir.const #cir.int<0> : !s32i loc(#loc187)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc187)
    cir.store %23, %0 : !u64i, !cir.ptr<!u64i> loc(#loc274)
    cir.br ^bb3 loc(#loc273)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %24 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc189)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc190)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc190)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc275)
    cir.brcond %27 ^bb4, ^bb8 loc(#loc191)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc276)
  ^bb5:  // pred: ^bb4
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc193)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc194)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc194)
    %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc194)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc196)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc197)
    cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc277)
    cir.br ^bb6 loc(#loc186)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc186)
  ^bb7:  // pred: ^bb6
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc199)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc200)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc278)
    cir.br ^bb3 loc(#loc273)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc186)
  ^bb9:  // pred: ^bb8
    %37 = cir.const #cir.int<0> : !s32i loc(#loc201)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc201)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc203)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc203)
    %43 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %42 : !s32i), !cir.ptr<!s8i> loc(#loc205)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc279)
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc207)
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc208)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc209)
    cir.br ^bb10 loc(#loc174)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc158)
  } loc(#loc263)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":24:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":24:74)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":26:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":26:86)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":28:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":48:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":35:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":35:16)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":36:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":36:24)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":30:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":30:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":31:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":31:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":32:74)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":32:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":33:79)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":33:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":33:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":33:83)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":34:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":47:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":37:16)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":37:24)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":37:29)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":37:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":37:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":37:34)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":38:25)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":38:16)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":38:20)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":38:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":40:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":43:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":40:18)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":40:14)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":40:21)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":40:25)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":40:23)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":41:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":42:30)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":42:23)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":42:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":42:18)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":42:19)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":42:31)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":40:31)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":40:30)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":44:23)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":44:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":44:14)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":44:18)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":44:19)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":45:19)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":45:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":46:14)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":46:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":55:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":55:79)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":56:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":56:79)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":108:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":112:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":110:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":110:14)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":111:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":111:14)
#loc72 = loc("/usr/include/stdlib.h":575:1)
#loc73 = loc("/usr/include/stdlib.h":575:41)
#loc74 = loc("/usr/include/time.h":76:1)
#loc75 = loc("/usr/include/time.h":76:38)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":129:15)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":131:15)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":134:15)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":136:15)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":124:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":139:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":125:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":127:27)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":127:22)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":127:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":129:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":130:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":130:67)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":131:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":134:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":135:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":135:66)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":136:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":138:12)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":138:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":59:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":59:91)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":61:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":81:1)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":68:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":68:16)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":69:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":69:24)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":63:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":63:12)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":64:12)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":64:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":65:79)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":65:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":66:84)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":66:12)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":66:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":66:88)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":67:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":80:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":70:16)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":70:24)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":70:29)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":70:33)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":70:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":70:34)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":71:25)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":71:16)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":71:20)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":71:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":73:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":76:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":73:18)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":73:14)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":73:21)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":73:25)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":73:23)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":74:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":75:30)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":75:23)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":75:13)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":75:18)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":75:19)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":75:31)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":73:31)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":73:30)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":77:23)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":77:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":77:14)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":77:18)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":77:19)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":78:19)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":78:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":79:14)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":79:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":84:1)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":84:91)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":86:1)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":106:1)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":93:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":93:16)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":94:9)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":94:24)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":88:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":88:12)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":89:12)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":89:5)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":90:79)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":90:5)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":91:84)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":91:12)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":91:5)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":91:88)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":92:5)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":105:5)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":95:16)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":95:24)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":95:29)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":95:33)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":95:9)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":95:34)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":96:25)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":96:16)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":96:20)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":96:9)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":98:9)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":101:9)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":98:18)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":98:14)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":98:21)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":98:25)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":98:23)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":99:9)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":100:30)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":100:23)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":100:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":100:18)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":100:19)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":100:31)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":98:31)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":98:30)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":102:23)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":102:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":102:14)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":102:18)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":102:19)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":103:19)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":103:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":104:14)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_22a.c":104:9)
#loc210 = loc(fused[#loc1, #loc2])
#loc211 = loc(fused[#loc3, #loc4])
#loc212 = loc(fused[#loc5, #loc6])
#loc213 = loc(fused[#loc7, #loc8])
#loc214 = loc(fused[#loc9, #loc10])
#loc215 = loc(fused[#loc11, #loc12])
#loc216 = loc(fused[#loc13, #loc14])
#loc217 = loc(fused[#loc15, #loc16])
#loc218 = loc(fused[#loc18, #loc17])
#loc219 = loc(fused[#loc20, #loc19])
#loc220 = loc(fused[#loc23, #loc24])
#loc221 = loc(fused[#loc25, #loc26])
#loc222 = loc(fused[#loc31, #loc32])
#loc223 = loc(fused[#loc36, #loc33])
#loc224 = loc(fused[#loc37, #loc38])
#loc225 = loc(fused[#loc40, #loc39])
#loc226 = loc(fused[#loc41, #loc42])
#loc227 = loc(fused[#loc44, #loc38])
#loc228 = loc(fused[#loc47, #loc50])
#loc229 = loc(fused[#loc52, #loc51])
#loc230 = loc(fused[#loc54, #loc53])
#loc231 = loc(fused[#loc62, #loc63])
#loc232 = loc(fused[#loc64, #loc65])
#loc233 = loc(fused[#loc66, #loc67])
#loc234 = loc(fused[#loc68, #loc69])
#loc235 = loc(fused[#loc70, #loc71])
#loc236 = loc(fused[#loc72, #loc73])
#loc237 = loc(fused[#loc74, #loc75])
#loc238 = loc(fused[#loc80, #loc81])
#loc241 = loc(fused[#loc91, #loc92])
#loc242 = loc(fused[#loc95, #loc96])
#loc243 = loc(fused[#loc99, #loc98])
#loc244 = loc(fused[#loc100, #loc101])
#loc245 = loc(fused[#loc102, #loc103])
#loc246 = loc(fused[#loc104, #loc105])
#loc247 = loc(fused[#loc106, #loc107])
#loc248 = loc(fused[#loc108, #loc109])
#loc249 = loc(fused[#loc111, #loc110])
#loc250 = loc(fused[#loc113, #loc112])
#loc251 = loc(fused[#loc116, #loc117])
#loc252 = loc(fused[#loc118, #loc119])
#loc253 = loc(fused[#loc124, #loc125])
#loc254 = loc(fused[#loc129, #loc126])
#loc255 = loc(fused[#loc130, #loc131])
#loc256 = loc(fused[#loc133, #loc132])
#loc257 = loc(fused[#loc134, #loc135])
#loc258 = loc(fused[#loc137, #loc131])
#loc259 = loc(fused[#loc140, #loc143])
#loc260 = loc(fused[#loc145, #loc144])
#loc261 = loc(fused[#loc147, #loc146])
#loc262 = loc(fused[#loc155, #loc156])
#loc263 = loc(fused[#loc157, #loc158])
#loc264 = loc(fused[#loc159, #loc160])
#loc265 = loc(fused[#loc161, #loc162])
#loc266 = loc(fused[#loc163, #loc164])
#loc267 = loc(fused[#loc166, #loc165])
#loc268 = loc(fused[#loc168, #loc167])
#loc269 = loc(fused[#loc171, #loc172])
#loc270 = loc(fused[#loc173, #loc174])
#loc271 = loc(fused[#loc179, #loc180])
#loc272 = loc(fused[#loc184, #loc181])
#loc273 = loc(fused[#loc185, #loc186])
#loc274 = loc(fused[#loc188, #loc187])
#loc275 = loc(fused[#loc189, #loc190])
#loc276 = loc(fused[#loc192, #loc186])
#loc277 = loc(fused[#loc195, #loc198])
#loc278 = loc(fused[#loc200, #loc199])
#loc279 = loc(fused[#loc202, #loc201])
