!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":53:21)
#loc12 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":53:28)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":87:25)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":87:32)
#loc91 = loc(fused[#loc11, #loc12])
#loc110 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc87)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_execl_44_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc88)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc7)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc7)
    %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc14)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc14)
    %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc16)
    %9 = cir.call @execl(%2, %4, %6, %7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc17)
    cir.return loc(#loc10)
  } loc(#loc90)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc92)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc22)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execl_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc97)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc98)
    %3 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc99)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc88)
    %5 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc34)
    cir.store %5, %3 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc99)
    %6 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_execl_44_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc88)
    cir.copy %6 to %4 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc88)
    %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc39)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc39)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc96)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc22)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc22)
    %13 = cir.call @getenv(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    cir.br ^bb2 loc(#loc102)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
    %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc103)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc104)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc47)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc50)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc52)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %26 = cir.binop(sub, %24, %25) : !u64i loc(#loc105)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc54)
    %29 = cir.binop(sub, %26, %28) : !u64i loc(#loc106)
    %30 = cir.call @strncat(%21, %22, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
    cir.br ^bb4 loc(#loc43)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc43)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // pred: ^bb5
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc55)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.call %31(%32) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc55)
    cir.return loc(#loc26)
  } loc(#loc95)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execl_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc107)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc63, #loc64])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc65)
    %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc66)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc66)
    %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc67)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc67)
    %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc68)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc68)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
    %9 = cir.call @execl(%2, %4, %6, %7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc71)
    cir.return loc(#loc62)
  } loc(#loc109)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc74)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc114)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc87)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc80)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc114)
    %4 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc87)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc87)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc83)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc74)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc74)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc85)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc85)
    cir.return loc(#loc76)
  } loc(#loc112)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_44.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":98:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":98:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":65:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":65:28)
#loc5 = loc("/usr/include/unistd.h":594:1)
#loc6 = loc("/usr/include/unistd.h":595:14)
#loc7 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":57:11)
#loc8 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":57:47)
#loc9 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":53:1)
#loc10 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":58:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":54:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":57:29)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":57:61)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":57:75)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":57:5)
#loc18 = loc("/usr/include/string.h":407:1)
#loc19 = loc("/usr/include/string.h":408:33)
#loc20 = loc("/usr/include/stdlib.h":773:1)
#loc21 = loc("/usr/include/stdlib.h":773:50)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":70:37)
#loc23 = loc("/usr/include/string.h":152:1)
#loc24 = loc("/usr/include/string.h":153:29)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":60:1)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":80:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":69:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":69:37)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":70:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":70:49)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":62:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":62:12)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":64:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":64:32)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":66:12)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":66:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":67:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":77:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":69:26)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":69:33)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":70:30)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":72:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":76:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":72:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":72:28)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":73:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":75:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":75:21)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":75:26)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":75:25)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":75:35)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":75:48)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":75:52)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":75:60)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":79:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":79:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":105:1)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":108:1)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":107:5)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":107:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":87:1)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":92:1)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":88:1)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":91:11)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":91:29)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":91:47)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":91:61)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":91:75)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":91:5)
#loc72 = loc("/usr/include/string.h":149:1)
#loc73 = loc("/usr/include/string.h":150:14)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":101:18)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":94:1)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":103:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":96:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":96:12)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":97:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":97:32)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":99:12)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":99:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":101:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":101:12)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":102:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execl_44.c":102:13)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc89 = loc(fused[#loc5, #loc6])
#loc90 = loc(fused[#loc9, #loc10])
#loc92 = loc(fused[#loc18, #loc19])
#loc93 = loc(fused[#loc20, #loc21])
#loc94 = loc(fused[#loc23, #loc24])
#loc95 = loc(fused[#loc25, #loc26])
#loc96 = loc(fused[#loc27, #loc28])
#loc97 = loc(fused[#loc29, #loc30])
#loc98 = loc(fused[#loc31, #loc32])
#loc99 = loc(fused[#loc33, #loc34])
#loc100 = loc(fused[#loc36, #loc35])
#loc101 = loc(fused[#loc37, #loc38])
#loc102 = loc(fused[#loc42, #loc43])
#loc103 = loc(fused[#loc44, #loc45])
#loc104 = loc(fused[#loc46, #loc43])
#loc105 = loc(fused[#loc52, #loc53])
#loc106 = loc(fused[#loc52, #loc54])
#loc107 = loc(fused[#loc57, #loc58])
#loc108 = loc(fused[#loc59, #loc60])
#loc109 = loc(fused[#loc61, #loc62])
#loc111 = loc(fused[#loc72, #loc73])
#loc112 = loc(fused[#loc75, #loc76])
#loc113 = loc(fused[#loc77, #loc78])
#loc114 = loc(fused[#loc79, #loc80])
#loc115 = loc(fused[#loc82, #loc81])
