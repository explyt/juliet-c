!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_struct_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc116)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_struct_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc118)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc119)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc120)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc12)
      cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
      cir.for : cond {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc123)
        cir.condition(%6) loc(#loc16)
      } body {
        cir.scope {
          %4 = cir.const #cir.int<0> : !s32i loc(#loc18)
          %5 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
          cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc125)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc21)
          %7 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc126)
        } loc(#loc124)
        cir.yield loc(#loc11)
      } step {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc25)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
        cir.yield loc(#loc121)
      } loc(#loc121)
    } loc(#loc121)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc28)
      cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc129)
      cir.for : cond {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc130)
        cir.condition(%6) loc(#loc32)
      } body {
        cir.scope {
          %4 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %5 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
          cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc132)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc36)
          %7 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc133)
          cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc38)
        } loc(#loc131)
        cir.yield loc(#loc27)
      } step {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc40)
        cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc134)
        cir.yield loc(#loc128)
      } loc(#loc128)
    } loc(#loc128)
    cir.return loc(#loc4)
  } loc(#loc117)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_struct_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc135)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc140)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc141)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc56)
      cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
      cir.for : cond {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc144)
        cir.condition(%6) loc(#loc60)
      } body {
        cir.scope {
          %4 = cir.const #cir.int<0> : !s32i loc(#loc62)
          %5 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
          cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc146)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc64)
          %7 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc147)
        } loc(#loc145)
        cir.yield loc(#loc55)
      } step {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc67)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
        cir.yield loc(#loc142)
      } loc(#loc142)
    } loc(#loc142)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc70)
      cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc150)
      cir.for : cond {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc73)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc151)
        cir.condition(%6) loc(#loc74)
      } body {
        cir.scope {
          cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc76)
        } loc(#loc152)
        cir.yield loc(#loc69)
      } step {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc78)
        cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc153)
        cir.yield loc(#loc149)
      } loc(#loc149)
    } loc(#loc149)
    cir.return loc(#loc48)
  } loc(#loc138)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc156)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc157)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc88)
      cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
      cir.for : cond {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc91)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc160)
        cir.condition(%6) loc(#loc92)
      } body {
        cir.scope {
          %4 = cir.const #cir.int<0> : !s32i loc(#loc94)
          %5 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
          cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc162)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc96)
          %7 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc163)
          cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc98)
        } loc(#loc161)
        cir.yield loc(#loc87)
      } step {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc100)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
        cir.yield loc(#loc158)
      } loc(#loc158)
    } loc(#loc158)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc103)
      cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc166)
      cir.for : cond {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc167)
        cir.condition(%6) loc(#loc107)
      } body {
        cir.scope {
          %4 = cir.const #cir.int<1> : !s32i loc(#loc109)
          %5 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
          cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc169)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc111)
          %7 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc170)
          cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc113)
        } loc(#loc168)
        cir.yield loc(#loc102)
      } step {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc115)
        cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc171)
        cir.yield loc(#loc165)
      } loc(#loc165)
    } loc(#loc165)
    cir.return loc(#loc80)
  } loc(#loc154)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_struct_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":24:1)
#loc4 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":41:1)
#loc5 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":26:5)
#loc6 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":26:9)
#loc7 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":26:11)
#loc8 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":27:5)
#loc9 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":27:19)
#loc10 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":28:5)
#loc11 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":33:5)
#loc12 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":28:13)
#loc13 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":28:9)
#loc14 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":28:16)
#loc15 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":28:20)
#loc16 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":28:18)
#loc17 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":29:5)
#loc18 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":31:23)
#loc19 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc20 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":31:9)
#loc21 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":32:23)
#loc22 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc23 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":32:9)
#loc24 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":28:24)
#loc25 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":28:23)
#loc26 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":34:5)
#loc27 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":40:5)
#loc28 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":34:13)
#loc29 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":34:9)
#loc30 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":34:16)
#loc31 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":34:20)
#loc32 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":34:18)
#loc33 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":35:5)
#loc34 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":37:23)
#loc35 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":37:9)
#loc36 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":38:23)
#loc37 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":38:9)
#loc38 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":39:9)
#loc39 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":34:24)
#loc40 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":34:23)
#loc41 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":86:1)
#loc42 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":90:1)
#loc43 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":88:5)
#loc44 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":88:13)
#loc45 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":89:5)
#loc46 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":89:13)
#loc47 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":48:1)
#loc48 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":63:1)
#loc49 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":50:5)
#loc50 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":50:9)
#loc51 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":50:11)
#loc52 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":51:5)
#loc53 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":51:19)
#loc54 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":52:5)
#loc55 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":57:5)
#loc56 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":52:13)
#loc57 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":52:9)
#loc58 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":52:16)
#loc59 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":52:20)
#loc60 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":52:18)
#loc61 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":53:5)
#loc62 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":55:23)
#loc63 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":55:9)
#loc64 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":56:23)
#loc65 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":56:9)
#loc66 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":52:24)
#loc67 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":52:23)
#loc68 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":58:5)
#loc69 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":62:5)
#loc70 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":58:13)
#loc71 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":58:9)
#loc72 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":58:16)
#loc73 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":58:20)
#loc74 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":58:18)
#loc75 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":59:5)
#loc76 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":61:9)
#loc77 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":58:24)
#loc78 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":58:23)
#loc79 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":66:1)
#loc80 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":84:1)
#loc81 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":68:5)
#loc82 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":68:9)
#loc83 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":68:11)
#loc84 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":69:5)
#loc85 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":69:19)
#loc86 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":70:5)
#loc87 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":76:5)
#loc88 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":70:13)
#loc89 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":70:9)
#loc90 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":70:16)
#loc91 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":70:20)
#loc92 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":70:18)
#loc93 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":71:5)
#loc94 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":73:23)
#loc95 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":73:9)
#loc96 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":74:23)
#loc97 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":74:9)
#loc98 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":75:9)
#loc99 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":70:24)
#loc100 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":70:23)
#loc101 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":77:5)
#loc102 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":83:5)
#loc103 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":77:13)
#loc104 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":77:9)
#loc105 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":77:16)
#loc106 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":77:20)
#loc107 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":77:18)
#loc108 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":78:5)
#loc109 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":80:23)
#loc110 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":80:9)
#loc111 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":81:23)
#loc112 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":81:9)
#loc113 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":82:9)
#loc114 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":77:24)
#loc115 = loc("CWE563_Unused_Variable__unused_value_struct_17.c":77:23)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc3, #loc4])
#loc118 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc5, #loc7])
#loc120 = loc(fused[#loc8, #loc9])
#loc121 = loc(fused[#loc10, #loc11])
#loc122 = loc(fused[#loc13, #loc12])
#loc123 = loc(fused[#loc14, #loc15])
#loc124 = loc(fused[#loc17, #loc11])
#loc125 = loc(fused[#loc20, #loc18])
#loc126 = loc(fused[#loc23, #loc21])
#loc127 = loc(fused[#loc25, #loc24])
#loc128 = loc(fused[#loc26, #loc27])
#loc129 = loc(fused[#loc29, #loc28])
#loc130 = loc(fused[#loc30, #loc31])
#loc131 = loc(fused[#loc33, #loc27])
#loc132 = loc(fused[#loc35, #loc34])
#loc133 = loc(fused[#loc37, #loc36])
#loc134 = loc(fused[#loc40, #loc39])
#loc135 = loc(fused[#loc41, #loc42])
#loc136 = loc(fused[#loc43, #loc44])
#loc137 = loc(fused[#loc45, #loc46])
#loc138 = loc(fused[#loc47, #loc48])
#loc139 = loc(fused[#loc49, #loc50])
#loc140 = loc(fused[#loc49, #loc51])
#loc141 = loc(fused[#loc52, #loc53])
#loc142 = loc(fused[#loc54, #loc55])
#loc143 = loc(fused[#loc57, #loc56])
#loc144 = loc(fused[#loc58, #loc59])
#loc145 = loc(fused[#loc61, #loc55])
#loc146 = loc(fused[#loc63, #loc62])
#loc147 = loc(fused[#loc65, #loc64])
#loc148 = loc(fused[#loc67, #loc66])
#loc149 = loc(fused[#loc68, #loc69])
#loc150 = loc(fused[#loc71, #loc70])
#loc151 = loc(fused[#loc72, #loc73])
#loc152 = loc(fused[#loc75, #loc69])
#loc153 = loc(fused[#loc78, #loc77])
#loc154 = loc(fused[#loc79, #loc80])
#loc155 = loc(fused[#loc81, #loc82])
#loc156 = loc(fused[#loc81, #loc83])
#loc157 = loc(fused[#loc84, #loc85])
#loc158 = loc(fused[#loc86, #loc87])
#loc159 = loc(fused[#loc89, #loc88])
#loc160 = loc(fused[#loc90, #loc91])
#loc161 = loc(fused[#loc93, #loc87])
#loc162 = loc(fused[#loc95, #loc94])
#loc163 = loc(fused[#loc97, #loc96])
#loc164 = loc(fused[#loc100, #loc99])
#loc165 = loc(fused[#loc101, #loc102])
#loc166 = loc(fused[#loc104, #loc103])
#loc167 = loc(fused[#loc105, #loc106])
#loc168 = loc(fused[#loc108, #loc102])
#loc169 = loc(fused[#loc110, #loc109])
#loc170 = loc(fused[#loc112, #loc111])
#loc171 = loc(fused[#loc115, #loc114])
