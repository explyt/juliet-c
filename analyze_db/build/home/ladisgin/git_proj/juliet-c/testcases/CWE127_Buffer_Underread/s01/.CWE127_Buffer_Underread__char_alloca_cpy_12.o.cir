!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_cpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc111)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc113)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_cpy_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc117)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc14)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc16)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc17)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc118)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc21)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc23)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc119)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %24 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc121)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc121)
    %26 = cir.call %25() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc28)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc28)
    cir.brcond %27 ^bb2, ^bb3 loc(#loc122)
  ^bb2:  // pred: ^bb1
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %29 = cir.const #cir.int<8> : !s32i loc(#loc34)
    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc34)
    %31 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc35)
    cir.store %31, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    cir.br ^bb4 loc(#loc31)
  ^bb3:  // pred: ^bb1
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %32, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc125)
  ^bb6:  // pred: ^bb5
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc41)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
    %35 = cir.const #cir.int<67> : !s32i loc(#loc42)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %37 = cir.const #cir.int<2> : !s32i loc(#loc44)
    %38 = cir.binop(mul, %36, %37) nsw : !s32i loc(#loc43)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc43)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc43)
    cir.libc.memset %41 bytes from %34 set to %35 : !cir.ptr<!void>, !s32i, !u64i loc(#loc126)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc48)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc49)
    %45 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %46 = cir.binop(mul, %44, %45) nsw : !s32i loc(#loc49)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc49)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc52)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %43, %50 : !s8i, !cir.ptr<!s8i> loc(#loc127)
    %51 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc53)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc54)
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %54 = cir.call @strcpy(%52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc53)
    %55 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb7 loc(#loc40)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc8)
  } loc(#loc114)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_cpy_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc59)
  } loc(#loc128)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc133)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc69)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc69)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc69)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc69)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc69)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc69)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc71)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc72)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc72)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc134)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc76)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc78)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc80)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc135)
    cir.br ^bb1 loc(#loc136)
  ^bb1:  // pred: ^bb0
    %24 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc137)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc137)
    %26 = cir.call %25() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc83)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %27 ^bb2, ^bb3 loc(#loc138)
  ^bb2:  // pred: ^bb1
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %28, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.br ^bb4 loc(#loc86)
  ^bb3:  // pred: ^bb1
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    cir.store %29, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc82)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc141)
  ^bb6:  // pred: ^bb5
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc94)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    %32 = cir.const #cir.int<67> : !s32i loc(#loc95)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc97)
    %35 = cir.binop(mul, %33, %34) nsw : !s32i loc(#loc96)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc96)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc96)
    cir.libc.memset %38 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc142)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc101)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %42 = cir.const #cir.int<2> : !s32i loc(#loc103)
    %43 = cir.binop(mul, %41, %42) nsw : !s32i loc(#loc102)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc102)
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc105)
    %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc105)
    cir.store %40, %47 : !s8i, !cir.ptr<!s8i> loc(#loc143)
    %48 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc106)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc107)
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %51 = cir.call @strcpy(%49, %50) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb7 loc(#loc93)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc63)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_cpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":23:1)
#loc8 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":47:1)
#loc9 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":40:9)
#loc10 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":40:24)
#loc11 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":25:5)
#loc12 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":25:12)
#loc13 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":26:5)
#loc14 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":26:33)
#loc15 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":27:12)
#loc16 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":27:24)
#loc17 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":27:29)
#loc18 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":27:33)
#loc19 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":27:5)
#loc20 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":27:34)
#loc21 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":28:25)
#loc22 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":28:5)
#loc23 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":28:16)
#loc24 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":28:20)
#loc25 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":28:21)
#loc26 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":29:5)
#loc27 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":38:5)
#loc28 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":29:8)
#loc29 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":29:33)
#loc30 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":30:5)
#loc31 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":33:5)
#loc32 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":35:5)
#loc33 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":32:16)
#loc34 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":32:29)
#loc35 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":32:27)
#loc36 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":32:9)
#loc37 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":37:16)
#loc38 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":37:9)
#loc39 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":39:5)
#loc40 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":46:5)
#loc41 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":41:16)
#loc42 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":41:22)
#loc43 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":41:27)
#loc44 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":41:31)
#loc45 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":41:33)
#loc46 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":41:9)
#loc47 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":41:34)
#loc48 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":42:25)
#loc49 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":42:14)
#loc50 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":42:18)
#loc51 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":42:20)
#loc52 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":42:9)
#loc53 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":44:9)
#loc54 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":44:16)
#loc55 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":44:22)
#loc56 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":45:19)
#loc57 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":45:9)
#loc58 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":81:1)
#loc59 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":84:1)
#loc60 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":83:5)
#loc61 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":83:13)
#loc62 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":55:1)
#loc63 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":79:1)
#loc64 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":72:9)
#loc65 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":72:24)
#loc66 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":57:5)
#loc67 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":57:12)
#loc68 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":58:5)
#loc69 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":58:33)
#loc70 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":59:12)
#loc71 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":59:24)
#loc72 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":59:29)
#loc73 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":59:33)
#loc74 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":59:5)
#loc75 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":59:34)
#loc76 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":60:25)
#loc77 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":60:5)
#loc78 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":60:16)
#loc79 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":60:20)
#loc80 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":60:21)
#loc81 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":61:5)
#loc82 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":70:5)
#loc83 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":61:8)
#loc84 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":61:33)
#loc85 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":62:5)
#loc86 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":65:5)
#loc87 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":67:5)
#loc88 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":64:16)
#loc89 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":64:9)
#loc90 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":69:16)
#loc91 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":69:9)
#loc92 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":71:5)
#loc93 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":78:5)
#loc94 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":73:16)
#loc95 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":73:22)
#loc96 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":73:27)
#loc97 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":73:31)
#loc98 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":73:33)
#loc99 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":73:9)
#loc100 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":73:34)
#loc101 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":74:25)
#loc102 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":74:14)
#loc103 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":74:18)
#loc104 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":74:20)
#loc105 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":74:9)
#loc106 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":76:9)
#loc107 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":76:16)
#loc108 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":76:22)
#loc109 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":77:19)
#loc110 = loc("CWE127_Buffer_Underread__char_alloca_cpy_12.c":77:9)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc13, #loc14])
#loc118 = loc(fused[#loc19, #loc20])
#loc119 = loc(fused[#loc22, #loc21])
#loc120 = loc(fused[#loc26, #loc27])
#loc121 = loc(fused[#loc28, #loc29])
#loc122 = loc(fused[#loc30, #loc31, #loc32, #loc27])
#loc123 = loc(fused[#loc36, #loc34])
#loc124 = loc(fused[#loc38, #loc37])
#loc125 = loc(fused[#loc39, #loc40])
#loc126 = loc(fused[#loc46, #loc47])
#loc127 = loc(fused[#loc52, #loc48])
#loc128 = loc(fused[#loc58, #loc59])
#loc129 = loc(fused[#loc60, #loc61])
#loc130 = loc(fused[#loc62, #loc63])
#loc131 = loc(fused[#loc64, #loc65])
#loc132 = loc(fused[#loc66, #loc67])
#loc133 = loc(fused[#loc68, #loc69])
#loc134 = loc(fused[#loc74, #loc75])
#loc135 = loc(fused[#loc77, #loc76])
#loc136 = loc(fused[#loc81, #loc82])
#loc137 = loc(fused[#loc83, #loc84])
#loc138 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc139 = loc(fused[#loc89, #loc88])
#loc140 = loc(fused[#loc91, #loc90])
#loc141 = loc(fused[#loc92, #loc93])
#loc142 = loc(fused[#loc99, #loc100])
#loc143 = loc(fused[#loc105, #loc101])
