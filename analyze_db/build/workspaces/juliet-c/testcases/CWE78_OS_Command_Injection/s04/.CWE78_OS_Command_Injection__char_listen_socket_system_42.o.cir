!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc25 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":56:25)
#loc26 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":56:32)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":158:29)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":158:36)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc257 = loc(fused[#loc25, #loc26])
#loc332 = loc(fused[#loc218, #loc219])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc245)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_system_42_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc246)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc247)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc248)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc249)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc250)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc251)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc252)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc253)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc254)
  cir.func private @close(!s32i) -> !s32i loc(#loc255)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc25, #loc26])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc24)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc27)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc259)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc260)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc261)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc262)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc263)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc264)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc37)
      cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc262)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc39)
      cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc263)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc42)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc42)
      cir.store %16, %9 : !u64i, !cir.ptr<!u64i> loc(#loc264)
      cir.scope {
        cir.do {
          cir.scope {
            %17 = cir.const #cir.int<2> : !s32i loc(#loc48)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc49)
            %19 = cir.const #cir.int<6> : !s32i loc(#loc50)
            %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
            cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc267)
            cir.scope {
              %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc56)
              %75 = cir.const #cir.int<1> : !s32i loc(#loc57)
              %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc57)
              %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc269)
              cir.if %77 {
                cir.break loc(#loc59)
              } loc(#loc270)
            } loc(#loc268)
            %21 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc271)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc272)
            cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc273)
            %24 = cir.const #cir.int<2> : !s32i loc(#loc67)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc67)
            %26 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc274)
            %27 = cir.const #cir.int<0> : !s32i loc(#loc70)
            %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc70)
            %29 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
            %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
            cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc275)
            %31 = cir.const #cir.int<27015> : !s32i loc(#loc74)
            %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc74)
            %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
            %34 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc276)
            cir.scope {
              %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc81)
              %75 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc278)
              %76 = cir.const #cir.int<16> : !u64i loc(#loc279)
              %77 = cir.cast(integral, %76 : !u64i), !u32i loc(#loc279)
              %78 = cir.call @bind(%74, %75, %77) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc87)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc87)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc280)
              cir.if %81 {
                cir.break loc(#loc89)
              } loc(#loc281)
            } loc(#loc277)
            cir.scope {
              %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %75 = cir.const #cir.int<5> : !s32i loc(#loc93)
              %76 = cir.call @listen(%74, %75) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc95)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc283)
              cir.if %79 {
                cir.break loc(#loc97)
              } loc(#loc284)
            } loc(#loc282)
            %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
            %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
            %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
            cir.store %38, %8 : !s32i, !cir.ptr<!s32i> loc(#loc285)
            cir.scope {
              %74 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %75 = cir.const #cir.int<1> : !s32i loc(#loc107)
              %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc107)
              %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc287)
              cir.if %77 {
                cir.break loc(#loc109)
              } loc(#loc288)
            } loc(#loc286)
            %39 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
            %41 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc112)
            %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc113)
            %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc289)
            %44 = cir.const #cir.int<1> : !u64i loc(#loc290)
            %45 = cir.const #cir.int<100> : !s32i loc(#loc118)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc118)
            %47 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc119)
            %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc291)
            %49 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc120)
            %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc292)
            %52 = cir.binop(mul, %44, %51) : !u64i loc(#loc293)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc123)
            %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc123)
            cir.store %55, %4 : !s32i, !cir.ptr<!s32i> loc(#loc294)
            cir.scope {
              %74 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              %75 = cir.const #cir.int<1> : !s32i loc(#loc129)
              %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc129)
              %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc296)
              %78 = cir.ternary(%77, true {
                %79 = cir.const #true loc(#loc130)
                cir.yield %79 : !cir.bool loc(#loc130)
              }, false {
                %79 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                %80 = cir.const #cir.int<0> : !s32i loc(#loc132)
                %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc297)
                %82 = cir.ternary(%81, true {
                  %83 = cir.const #true loc(#loc130)
                  cir.yield %83 : !cir.bool loc(#loc130)
                }, false {
                  %83 = cir.const #false loc(#loc130)
                  cir.yield %83 : !cir.bool loc(#loc130)
                }) : (!cir.bool) -> !cir.bool loc(#loc130)
                cir.yield %82 : !cir.bool loc(#loc130)
              }) : (!cir.bool) -> !cir.bool loc(#loc130)
              cir.if %78 {
                cir.break loc(#loc134)
              } loc(#loc298)
            } loc(#loc295)
            %56 = cir.const #cir.int<0> : !s32i loc(#loc135)
            %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc135)
            %58 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
            %59 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc137)
            %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc138)
            %62 = cir.const #cir.int<1> : !u64i loc(#loc299)
            %63 = cir.binop(div, %61, %62) : !u64i loc(#loc300)
            %64 = cir.binop(add, %59, %63) : !u64i loc(#loc301)
            %65 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc141)
            cir.store %57, %65 : !s8i, !cir.ptr<!s8i> loc(#loc302)
            %66 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc142)
            %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
            %68 = cir.const #cir.int<13> : !s32i loc(#loc144)
            %69 = cir.call @strchr(%67, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc142)
            cir.store %69, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
            cir.scope {
              %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
              %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc149)
              cir.if %75 {
                %76 = cir.const #cir.int<0> : !s32i loc(#loc151)
                %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc151)
                %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc306)
              } loc(#loc305)
            } loc(#loc304)
            %70 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc154)
            %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
            %72 = cir.const #cir.int<10> : !s32i loc(#loc156)
            %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc154)
            cir.store %73, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
            cir.scope {
              %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
              %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc161)
              cir.if %75 {
                %76 = cir.const #cir.int<0> : !s32i loc(#loc163)
                %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc163)
                %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc310)
              } loc(#loc309)
            } loc(#loc308)
          } loc(#loc266)
          cir.yield loc(#loc45)
        } while {
          %17 = cir.const #cir.int<0> : !s32i loc(#loc166)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc166)
          cir.condition(%18) loc(#loc166)
        } loc(#loc265)
      } loc(#loc265)
      cir.scope {
        %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc170)
        %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc170)
        %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc312)
        cir.if %20 {
          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc172)
          %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc173)
        } loc(#loc313)
      } loc(#loc311)
      cir.scope {
        %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc176)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc177)
        %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc315)
        cir.if %20 {
          %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc179)
          %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc180)
        } loc(#loc316)
      } loc(#loc314)
    } loc(#loc258)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc317)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc317)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc317)
  } loc(#loc256)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc318)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc319)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc187)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc320)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc322)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc246)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_system_42_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc246)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc246)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc194)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
    %5 = cir.call @badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc197)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
      %7 = cir.call @system(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc203)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc204)
      %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc326)
      cir.if %9 {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc187)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc187)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc206)
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc207)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc208)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc207)
      } loc(#loc327)
    } loc(#loc325)
    cir.return loc(#loc191)
  } loc(#loc321)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc329)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc211)
    cir.return loc(#loc210)
  } loc(#loc328)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc215)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc218, #loc219])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc332)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc217)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    %2 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc221)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc222)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc215)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc215)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc221)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc223)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc333)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc333)
  } loc(#loc331)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc335)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc245)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc245)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc245)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc229)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc336)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
    %5 = cir.call @goodG2BSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc232)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc337)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
      %7 = cir.call @system(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc238)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc239)
      %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc339)
      cir.if %9 {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc241)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc241)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc242)
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc243)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc244)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc243)
      } loc(#loc340)
    } loc(#loc338)
    cir.return loc(#loc226)
  } loc(#loc334)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_42.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":169:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":169:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":143:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":143:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":402:1)
#loc10 = loc("/usr/include/netinet/in.h":403:40)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":56:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":138:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":57:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":58:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":136:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":63:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":63:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":64:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":64:28)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":65:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":65:15)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":66:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":66:31)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":67:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":67:31)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":68:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":68:37)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":68:26)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":68:33)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":69:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":121:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":70:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":120:9)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:35)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:44)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:57)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:28)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:68)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":80:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":83:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":80:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":80:33)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":81:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":82:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:20)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:30)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:33)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:47)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:13)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:48)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":85:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":85:13)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":86:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":86:13)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":87:38)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":87:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":87:13)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":87:46)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:13)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":91:13)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:22)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:54)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:55)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:64)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:78)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:84)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":89:13)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":90:17)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":92:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":95:13)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":92:24)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":92:38)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":92:17)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":92:57)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":93:13)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":94:17)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:35)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:49)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:55)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:28)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:13)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:59)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":97:13)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":100:13)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":97:17)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":97:33)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":98:13)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":99:17)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:31)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:54)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:61)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:59)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:45)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:68)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:71)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:82)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:87)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:93)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:103)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:104)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:107)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:26)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:13)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:108)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:13)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":106:13)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:17)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:31)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:44)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:47)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:61)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":104:13)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":105:17)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:57)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:13)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:18)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:28)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:41)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:52)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:53)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":110:23)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":110:30)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":110:36)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":110:13)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":110:40)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":111:13)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":114:13)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":111:17)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":112:13)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":113:28)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":113:18)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":113:17)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":115:23)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":115:30)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":115:36)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":115:13)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":115:40)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":116:13)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":119:13)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":116:17)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":117:13)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":118:28)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":118:18)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":118:17)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":121:16)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":122:9)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":125:9)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":122:13)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":122:29)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":123:9)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":124:26)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":124:13)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":126:9)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":129:9)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":126:13)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":126:29)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":127:9)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":128:26)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":128:13)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":137:12)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":137:5)
#loc183 = loc("/usr/include/stdlib.h":923:1)
#loc184 = loc("/usr/include/stdlib.h":923:41)
#loc185 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc186 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":149:19)
#loc188 = loc("/usr/include/stdlib.h":756:1)
#loc189 = loc("/usr/include/stdlib.h":756:70)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":140:1)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":152:1)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":142:5)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":142:12)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":144:12)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":144:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":145:22)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":145:12)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":145:5)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":145:26)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":147:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":151:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":147:16)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":147:9)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":147:25)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":148:5)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":149:9)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":150:9)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":150:14)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":180:1)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":183:1)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":182:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":182:13)
#loc213 = loc("/usr/include/string.h":149:1)
#loc214 = loc("/usr/include/string.h":150:14)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":161:18)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":158:1)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":163:1)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":159:1)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":161:5)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":161:12)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":162:12)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":162:5)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":166:1)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":178:1)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":168:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":168:12)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":170:12)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":170:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":171:26)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":171:12)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":171:5)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":171:30)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":173:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":177:5)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":173:16)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":173:9)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":173:25)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":174:5)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":175:19)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":175:9)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":176:9)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":176:14)
#loc245 = loc(fused[#loc1, #loc2])
#loc246 = loc(fused[#loc3, #loc4])
#loc247 = loc(fused[#loc5, #loc6])
#loc248 = loc(fused[#loc7, #loc8])
#loc249 = loc(fused[#loc9, #loc10])
#loc250 = loc(fused[#loc11, #loc12])
#loc251 = loc(fused[#loc13, #loc14])
#loc252 = loc(fused[#loc15, #loc16])
#loc253 = loc(fused[#loc17, #loc18])
#loc254 = loc(fused[#loc19, #loc20])
#loc255 = loc(fused[#loc21, #loc22])
#loc256 = loc(fused[#loc23, #loc24])
#loc258 = loc(fused[#loc28, #loc29])
#loc259 = loc(fused[#loc30, #loc31])
#loc260 = loc(fused[#loc32, #loc33])
#loc261 = loc(fused[#loc34, #loc35])
#loc262 = loc(fused[#loc36, #loc37])
#loc263 = loc(fused[#loc38, #loc39])
#loc264 = loc(fused[#loc40, #loc41])
#loc265 = loc(fused[#loc44, #loc45])
#loc266 = loc(fused[#loc46, #loc47])
#loc267 = loc(fused[#loc52, #loc53])
#loc268 = loc(fused[#loc54, #loc55])
#loc269 = loc(fused[#loc56, #loc57])
#loc270 = loc(fused[#loc58, #loc55])
#loc271 = loc(fused[#loc60, #loc61])
#loc272 = loc(fused[#loc63, #loc64])
#loc273 = loc(fused[#loc65, #loc66])
#loc274 = loc(fused[#loc69, #loc67])
#loc275 = loc(fused[#loc73, #loc70])
#loc276 = loc(fused[#loc77, #loc78])
#loc277 = loc(fused[#loc79, #loc80])
#loc278 = loc(fused[#loc82, #loc83])
#loc279 = loc(fused[#loc84, #loc85])
#loc280 = loc(fused[#loc86, #loc87])
#loc281 = loc(fused[#loc88, #loc80])
#loc282 = loc(fused[#loc90, #loc91])
#loc283 = loc(fused[#loc94, #loc95])
#loc284 = loc(fused[#loc96, #loc91])
#loc285 = loc(fused[#loc102, #loc103])
#loc286 = loc(fused[#loc104, #loc105])
#loc287 = loc(fused[#loc106, #loc107])
#loc288 = loc(fused[#loc108, #loc105])
#loc289 = loc(fused[#loc114, #loc115])
#loc290 = loc(fused[#loc116, #loc117])
#loc291 = loc(fused[#loc118, #loc119])
#loc292 = loc(fused[#loc118, #loc120])
#loc293 = loc(fused[#loc116, #loc121])
#loc294 = loc(fused[#loc124, #loc125])
#loc295 = loc(fused[#loc126, #loc127])
#loc296 = loc(fused[#loc128, #loc129])
#loc297 = loc(fused[#loc131, #loc132])
#loc298 = loc(fused[#loc133, #loc127])
#loc299 = loc(fused[#loc139, #loc140])
#loc300 = loc(fused[#loc138, #loc140])
#loc301 = loc(fused[#loc137, #loc140])
#loc302 = loc(fused[#loc136, #loc135])
#loc303 = loc(fused[#loc145, #loc146])
#loc304 = loc(fused[#loc147, #loc148])
#loc305 = loc(fused[#loc150, #loc148])
#loc306 = loc(fused[#loc153, #loc151])
#loc307 = loc(fused[#loc157, #loc158])
#loc308 = loc(fused[#loc159, #loc160])
#loc309 = loc(fused[#loc162, #loc160])
#loc310 = loc(fused[#loc165, #loc163])
#loc311 = loc(fused[#loc167, #loc168])
#loc312 = loc(fused[#loc169, #loc170])
#loc313 = loc(fused[#loc171, #loc168])
#loc314 = loc(fused[#loc174, #loc175])
#loc315 = loc(fused[#loc176, #loc177])
#loc316 = loc(fused[#loc178, #loc175])
#loc317 = loc(fused[#loc182, #loc181])
#loc318 = loc(fused[#loc183, #loc184])
#loc319 = loc(fused[#loc185, #loc186])
#loc320 = loc(fused[#loc188, #loc189])
#loc321 = loc(fused[#loc190, #loc191])
#loc322 = loc(fused[#loc192, #loc193])
#loc323 = loc(fused[#loc195, #loc194])
#loc324 = loc(fused[#loc198, #loc199])
#loc325 = loc(fused[#loc200, #loc201])
#loc326 = loc(fused[#loc203, #loc204])
#loc327 = loc(fused[#loc205, #loc201])
#loc328 = loc(fused[#loc209, #loc210])
#loc329 = loc(fused[#loc211, #loc212])
#loc330 = loc(fused[#loc213, #loc214])
#loc331 = loc(fused[#loc216, #loc217])
#loc333 = loc(fused[#loc224, #loc223])
#loc334 = loc(fused[#loc225, #loc226])
#loc335 = loc(fused[#loc227, #loc228])
#loc336 = loc(fused[#loc230, #loc229])
#loc337 = loc(fused[#loc233, #loc234])
#loc338 = loc(fused[#loc235, #loc236])
#loc339 = loc(fused[#loc238, #loc239])
#loc340 = loc(fused[#loc240, #loc236])
