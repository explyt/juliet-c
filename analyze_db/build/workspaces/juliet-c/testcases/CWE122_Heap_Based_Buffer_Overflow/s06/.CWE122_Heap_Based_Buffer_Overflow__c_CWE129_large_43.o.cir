!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":25:23)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":25:28)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":70:27)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":70:32)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":112:27)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":112:32)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":134:23)
#true = #cir.bool<true> : !cir.bool
#loc242 = loc(fused[#loc3, #loc4])
#loc277 = loc(fused[#loc87, #loc88])
#loc307 = loc(fused[#loc161, #loc162])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc242)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc5)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc7)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.return loc(#loc2)
  } loc(#loc241)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc244)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc245)
  cir.func private @printIntLine(!s32i) loc(#loc246)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc248)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc250)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc251)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc252)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc28)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43L9badSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc30)
    cir.br ^bb1 loc(#loc254)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc33)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc34)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc34)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc255)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc256)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc33)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc257)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc251)
    cir.br ^bb2 loc(#loc258)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc40)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc259)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc260)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc42)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc44)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc42)
    cir.br ^bb4 loc(#loc38)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc38)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc261)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.br ^bb7 loc(#loc261)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc50)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc263)
    cir.brcond %21 ^bb8, ^bb12 loc(#loc263)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc264)
  ^bb9:  // pred: ^bb8
    %22 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc55)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.br ^bb10 loc(#loc46)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc46)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc57)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.br ^bb7 loc(#loc261)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc46)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc267)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %30 = cir.cmp(ge, %28, %29) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %30 ^bb15, ^bb24 loc(#loc269)
  ^bb15:  // pred: ^bb14
    %31 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc68)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.br ^bb16 loc(#loc271)
  ^bb16:  // pred: ^bb15
    %35 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %35, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.br ^bb17 loc(#loc271)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc74)
    %38 = cir.cmp(lt, %36, %37) : !s32i, !cir.bool loc(#loc273)
    cir.brcond %38 ^bb18, ^bb22 loc(#loc273)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc274)
  ^bb19:  // pred: ^bb18
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %40 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc78)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc79)
    cir.br ^bb20 loc(#loc70)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc70)
  ^bb21:  // pred: ^bb20
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %44 = cir.unary(inc, %43) nsw : !s32i, !s32i loc(#loc81)
    cir.store %44, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.br ^bb17 loc(#loc271)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc70)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc63)
  ^bb24:  // pred: ^bb14
    %45 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc16)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb25 loc(#loc59)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc59)
  ^bb26:  // pred: ^bb25
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc83)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc84)
    cir.br ^bb27 loc(#loc32)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc20)
  } loc(#loc249)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc87, #loc88])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc277)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc89)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc90)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.return loc(#loc86)
  } loc(#loc276)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc281)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc282)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc101)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43L13goodG2BSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc103)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc106)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc107)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc107)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc285)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc286)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc106)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc287)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc281)
    cir.br ^bb2 loc(#loc288)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc113)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc289)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc290)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc115)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc117)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc115)
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc111)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc291)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    cir.br ^bb7 loc(#loc291)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc123)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc293)
    cir.brcond %21 ^bb8, ^bb12 loc(#loc293)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc294)
  ^bb9:  // pred: ^bb8
    %22 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc128)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb10 loc(#loc119)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc119)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc130)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb7 loc(#loc291)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc119)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc297)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %30 = cir.cmp(ge, %28, %29) : !s32i, !cir.bool loc(#loc298)
    cir.brcond %30 ^bb15, ^bb24 loc(#loc299)
  ^bb15:  // pred: ^bb14
    %31 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc141)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb16 loc(#loc301)
  ^bb16:  // pred: ^bb15
    %35 = cir.const #cir.int<0> : !s32i loc(#loc144)
    cir.store %35, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb17 loc(#loc301)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc147)
    %38 = cir.cmp(lt, %36, %37) : !s32i, !cir.bool loc(#loc303)
    cir.brcond %38 ^bb18, ^bb22 loc(#loc303)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc304)
  ^bb19:  // pred: ^bb18
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
    %40 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc151)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc152)
    cir.br ^bb20 loc(#loc143)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc143)
  ^bb21:  // pred: ^bb20
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %44 = cir.unary(inc, %43) nsw : !s32i, !s32i loc(#loc154)
    cir.store %44, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb17 loc(#loc301)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc143)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc136)
  ^bb24:  // pred: ^bb14
    %45 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc155)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb25 loc(#loc132)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc132)
  ^bb26:  // pred: ^bb25
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc157)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc158)
    cir.br ^bb27 loc(#loc105)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc93)
  } loc(#loc279)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc161, #loc162])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc307)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc163)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc164)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.return loc(#loc160)
  } loc(#loc306)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc166)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc310)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc311)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc312)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc176)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43L13goodB2GSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc178)
    cir.br ^bb1 loc(#loc314)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc181)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc182)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc182)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc315)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc316)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc181)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc317)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc311)
    cir.br ^bb2 loc(#loc318)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc188)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc319)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc320)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc190)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc192)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc190)
    cir.br ^bb4 loc(#loc186)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc321)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc195)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    cir.br ^bb7 loc(#loc321)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc198)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc323)
    cir.brcond %21 ^bb8, ^bb12 loc(#loc323)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc324)
  ^bb9:  // pred: ^bb8
    %22 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc201)
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc203)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.br ^bb10 loc(#loc194)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc194)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc205)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.br ^bb7 loc(#loc321)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc194)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc327)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc209)
    %30 = cir.cmp(ge, %28, %29) : !s32i, !cir.bool loc(#loc328)
    cir.brcond %30 ^bb15, ^bb20 loc(#loc210)
  ^bb15:  // pred: ^bb14
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %32 = cir.const #cir.int<10> : !s32i loc(#loc212)
    %33 = cir.cmp(lt, %31, %32) : !s32i, !cir.bool loc(#loc329)
    cir.brcond %33 ^bb16, ^bb17 loc(#loc210)
  ^bb16:  // pred: ^bb15
    %34 = cir.const #true loc(#loc210)
    cir.br ^bb18(%34 : !cir.bool) loc(#loc210)
  ^bb17:  // pred: ^bb15
    %35 = cir.const #false loc(#loc210)
    cir.br ^bb18(%35 : !cir.bool) loc(#loc210)
  ^bb18(%36: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":134:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc210)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%36 : !cir.bool) loc(#loc210)
  ^bb20:  // pred: ^bb14
    %37 = cir.const #false loc(#loc210)
    cir.br ^bb21(%37 : !cir.bool) loc(#loc210)
  ^bb21(%38: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":134:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc210)
  ^bb22:  // pred: ^bb21
    cir.brcond %38 ^bb23, ^bb32 loc(#loc330)
  ^bb23:  // pred: ^bb22
    %39 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc220)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    cir.br ^bb24 loc(#loc332)
  ^bb24:  // pred: ^bb23
    %43 = cir.const #cir.int<0> : !s32i loc(#loc223)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb25 loc(#loc332)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc226)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc334)
    cir.brcond %46 ^bb26, ^bb30 loc(#loc334)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc335)
  ^bb27:  // pred: ^bb26
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc228)
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc230)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc231)
    cir.br ^bb28 loc(#loc222)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc222)
  ^bb29:  // pred: ^bb28
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %52 = cir.unary(inc, %51) nsw : !s32i, !s32i loc(#loc233)
    cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb25 loc(#loc332)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc222)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc215)
  ^bb32:  // pred: ^bb22
    %53 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc166)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc234)
    cir.br ^bb33 loc(#loc207)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc207)
  ^bb34:  // pred: ^bb33
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc235)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc235)
    cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc236)
    cir.br ^bb35 loc(#loc180)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc168)
  } loc(#loc309)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_434goodEv() extra(#fn_attr) {
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43L7goodG2BEv() : () -> () loc(#loc239)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43L7goodB2GEv() : () -> () loc(#loc240)
    cir.return loc(#loc238)
  } loc(#loc337)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":29:1)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":28:12)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":28:5)
#loc8 = loc("/usr/include/stdlib.h":672:1)
#loc9 = loc("/usr/include/stdlib.h":672:45)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":59:23)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":31:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":63:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":38:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":38:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":39:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":39:54)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":33:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":33:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":35:13)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":35:12)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":35:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":36:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":37:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":62:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":39:31)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":39:38)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":39:43)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":39:53)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":40:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":40:39)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":40:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":40:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":40:29)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":40:30)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":40:36)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":40:35)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":42:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":45:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":42:18)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":42:14)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":42:21)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":42:25)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":43:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":44:25)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":44:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":44:20)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":44:21)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":42:30)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":42:29)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":48:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":60:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":48:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":48:21)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":49:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":56:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":58:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":50:28)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":50:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":50:20)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":50:24)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":52:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":55:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":52:21)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":52:17)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":52:24)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":52:28)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":53:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":54:30)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":54:37)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":54:38)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":54:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":52:33)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":52:32)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":59:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":61:14)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":61:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":70:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":75:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":71:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":74:12)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":74:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":77:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":109:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":84:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":84:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":85:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":85:54)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":79:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":79:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":81:13)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":81:12)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":81:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":82:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":83:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":108:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":85:31)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":85:38)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":85:43)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":85:53)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":86:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":86:39)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":86:13)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":86:23)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":86:29)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":86:30)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":86:36)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":86:35)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":88:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":91:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":88:18)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":88:14)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":88:21)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":88:25)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":89:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":90:25)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":90:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":90:20)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":90:21)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":88:30)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":88:29)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":94:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":106:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":94:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":94:21)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":95:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":102:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":104:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":96:28)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":96:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":96:20)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":96:24)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":98:13)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":101:13)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":98:21)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":98:17)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":98:24)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":98:28)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":99:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":100:30)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":100:37)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":100:38)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":100:17)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":98:33)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":98:32)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":105:23)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":105:13)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":107:14)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":107:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":112:1)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":116:1)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":113:1)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":115:12)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":115:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":145:23)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":118:1)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":149:1)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":125:9)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":125:13)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":126:9)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":126:54)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":120:5)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":120:9)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":122:13)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":122:12)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":122:5)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":123:5)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":124:5)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":148:5)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":126:31)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":126:38)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":126:43)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":126:53)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":127:9)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":127:39)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":127:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":127:23)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":127:29)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":127:30)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":127:36)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":127:35)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":129:9)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":132:9)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":129:18)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":129:14)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":129:21)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":129:25)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":130:9)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":131:25)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":131:13)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":131:20)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":131:21)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":129:30)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":129:29)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":134:9)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":146:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":134:13)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":134:21)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":134:26)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":134:34)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":134:36)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":135:9)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":142:9)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":144:9)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":136:28)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":136:13)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":136:20)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":136:24)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":138:13)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":141:13)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":138:21)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":138:17)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":138:24)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":138:28)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":139:13)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":140:30)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":140:37)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":140:38)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":140:17)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":138:33)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":138:32)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":145:13)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":147:14)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":147:9)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":151:1)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":155:1)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":153:5)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_43.cpp":154:5)
#loc241 = loc(fused[#loc1, #loc2])
#loc243 = loc(fused[#loc7, #loc6])
#loc244 = loc(fused[#loc8, #loc9])
#loc245 = loc(fused[#loc10, #loc11])
#loc246 = loc(fused[#loc12, #loc13])
#loc247 = loc(fused[#loc14, #loc15])
#loc248 = loc(fused[#loc17, #loc18])
#loc249 = loc(fused[#loc19, #loc20])
#loc250 = loc(fused[#loc21, #loc22])
#loc251 = loc(fused[#loc23, #loc24])
#loc252 = loc(fused[#loc25, #loc26])
#loc253 = loc(fused[#loc29, #loc27])
#loc254 = loc(fused[#loc31, #loc32])
#loc255 = loc(fused[#loc35, #loc36])
#loc256 = loc(fused[#loc34, #loc36])
#loc257 = loc(fused[#loc33, #loc24])
#loc258 = loc(fused[#loc37, #loc38])
#loc259 = loc(fused[#loc39, #loc40])
#loc260 = loc(fused[#loc41, #loc38])
#loc261 = loc(fused[#loc45, #loc46])
#loc262 = loc(fused[#loc48, #loc47])
#loc263 = loc(fused[#loc49, #loc50])
#loc264 = loc(fused[#loc51, #loc46])
#loc265 = loc(fused[#loc53, #loc52])
#loc266 = loc(fused[#loc57, #loc56])
#loc267 = loc(fused[#loc58, #loc59])
#loc268 = loc(fused[#loc60, #loc61])
#loc269 = loc(fused[#loc62, #loc63, #loc64, #loc59])
#loc270 = loc(fused[#loc66, #loc65])
#loc271 = loc(fused[#loc69, #loc70])
#loc272 = loc(fused[#loc72, #loc71])
#loc273 = loc(fused[#loc73, #loc74])
#loc274 = loc(fused[#loc75, #loc70])
#loc275 = loc(fused[#loc81, #loc80])
#loc276 = loc(fused[#loc85, #loc86])
#loc278 = loc(fused[#loc91, #loc90])
#loc279 = loc(fused[#loc92, #loc93])
#loc280 = loc(fused[#loc94, #loc95])
#loc281 = loc(fused[#loc96, #loc97])
#loc282 = loc(fused[#loc98, #loc99])
#loc283 = loc(fused[#loc102, #loc100])
#loc284 = loc(fused[#loc104, #loc105])
#loc285 = loc(fused[#loc108, #loc109])
#loc286 = loc(fused[#loc107, #loc109])
#loc287 = loc(fused[#loc106, #loc97])
#loc288 = loc(fused[#loc110, #loc111])
#loc289 = loc(fused[#loc112, #loc113])
#loc290 = loc(fused[#loc114, #loc111])
#loc291 = loc(fused[#loc118, #loc119])
#loc292 = loc(fused[#loc121, #loc120])
#loc293 = loc(fused[#loc122, #loc123])
#loc294 = loc(fused[#loc124, #loc119])
#loc295 = loc(fused[#loc126, #loc125])
#loc296 = loc(fused[#loc130, #loc129])
#loc297 = loc(fused[#loc131, #loc132])
#loc298 = loc(fused[#loc133, #loc134])
#loc299 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc300 = loc(fused[#loc139, #loc138])
#loc301 = loc(fused[#loc142, #loc143])
#loc302 = loc(fused[#loc145, #loc144])
#loc303 = loc(fused[#loc146, #loc147])
#loc304 = loc(fused[#loc148, #loc143])
#loc305 = loc(fused[#loc154, #loc153])
#loc306 = loc(fused[#loc159, #loc160])
#loc308 = loc(fused[#loc165, #loc164])
#loc309 = loc(fused[#loc167, #loc168])
#loc310 = loc(fused[#loc169, #loc170])
#loc311 = loc(fused[#loc171, #loc172])
#loc312 = loc(fused[#loc173, #loc174])
#loc313 = loc(fused[#loc177, #loc175])
#loc314 = loc(fused[#loc179, #loc180])
#loc315 = loc(fused[#loc183, #loc184])
#loc316 = loc(fused[#loc182, #loc184])
#loc317 = loc(fused[#loc181, #loc172])
#loc318 = loc(fused[#loc185, #loc186])
#loc319 = loc(fused[#loc187, #loc188])
#loc320 = loc(fused[#loc189, #loc186])
#loc321 = loc(fused[#loc193, #loc194])
#loc322 = loc(fused[#loc196, #loc195])
#loc323 = loc(fused[#loc197, #loc198])
#loc324 = loc(fused[#loc199, #loc194])
#loc325 = loc(fused[#loc201, #loc200])
#loc326 = loc(fused[#loc205, #loc204])
#loc327 = loc(fused[#loc206, #loc207])
#loc328 = loc(fused[#loc208, #loc209])
#loc329 = loc(fused[#loc211, #loc213])
#loc330 = loc(fused[#loc214, #loc215, #loc216, #loc207])
#loc331 = loc(fused[#loc218, #loc217])
#loc332 = loc(fused[#loc221, #loc222])
#loc333 = loc(fused[#loc224, #loc223])
#loc334 = loc(fused[#loc225, #loc226])
#loc335 = loc(fused[#loc227, #loc222])
#loc336 = loc(fused[#loc233, #loc232])
#loc337 = loc(fused[#loc237, #loc238])
