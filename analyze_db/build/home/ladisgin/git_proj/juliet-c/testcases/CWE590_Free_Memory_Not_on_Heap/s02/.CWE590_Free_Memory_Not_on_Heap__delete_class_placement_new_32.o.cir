!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc94)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc95)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_323badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc97)
    %1 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc98)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc99)
    %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc100)
    %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc102)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc103)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc102)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc103)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc22)
    cir.store %7, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc104)
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc9)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc26)
    cir.store %9, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc97)
    cir.br ^bb2 loc(#loc106)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.int<8> : !u64i loc(#loc107)
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc30)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc107)
    cir.call @_ZN12TwoIntsClassC2Ev(%13) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc13)
    cir.store %13, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc99)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
    %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc34)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
    cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc110)
    cir.br ^bb3 loc(#loc28)
  ^bb3:  // pred: ^bb2
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc39)
    %22 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc40)
    cir.store %21, %22 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc111)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // pred: ^bb4
    %23 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc15)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc44)
    cir.store %24, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc100)
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
    %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc47)
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc48)
    cir.call @_ZdlPv(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc49)
    cir.br ^bb6 loc(#loc43)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc7)
  } loc(#loc96)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc113)
  cir.func internal private @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
    %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc119)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc120)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc119)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc120)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
    cir.store %6, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc55)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc70)
    cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc115)
    cir.br ^bb2 loc(#loc123)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<8> : !u64i loc(#loc124)
    %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc116)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc124)
    cir.call @_ZN12TwoIntsClassC2Ev(%11) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc57)
    cir.store %11, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc116)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc75)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc77)
    %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc78)
    cir.store %18, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc127)
    cir.br ^bb3 loc(#loc72)
  ^bb3:  // pred: ^bb2
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
    %20 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc81)
    cir.store %19, %20 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc128)
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc129)
  ^bb5:  // pred: ^bb4
    %21 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc59)
    %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc85)
    cir.store %22, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc117)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc86)
    %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc88)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc89)
    cir.call @_ZdlPv(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc90)
    cir.br ^bb6 loc(#loc84)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc53)
  } loc(#loc114)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_324goodEv() extra(#fn_attr2) {
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32L7goodG2BEv() : () -> () loc(#loc93)
    cir.return loc(#loc92)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":26:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":50:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":33:9)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":33:32)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":36:13)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":36:45)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":37:13)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":37:53)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":45:9)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":45:32)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":28:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":28:20)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":29:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":29:33)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":30:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":30:33)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":31:12)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":31:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":32:5)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":43:5)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":33:31)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":34:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":41:9)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":37:41)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":37:45)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":38:34)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":38:13)
#loc33 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":39:34)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":39:13)
#loc36 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":40:20)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":40:13)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":42:21)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":42:10)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":42:9)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":44:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":49:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":45:31)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":46:22)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":46:28)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":46:9)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":48:16)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":26:6)
#loc50 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc51 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":57:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":80:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":64:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":64:32)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":67:13)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":67:45)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":75:9)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":75:32)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":59:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":59:20)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":60:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":60:33)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":61:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":61:33)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":62:12)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":62:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":63:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":73:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":64:31)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":65:9)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":71:9)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":67:41)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":68:34)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":68:13)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":69:34)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":69:13)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":70:20)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":70:13)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":72:21)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":72:10)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":72:9)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":74:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":79:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":75:31)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":76:22)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":76:28)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":76:9)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":78:16)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":57:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":82:1)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":85:1)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":84:5)
#loc94 = loc(fused[#loc2, #loc3])
#loc95 = loc(fused[#loc4, #loc5])
#loc96 = loc(fused[#loc6, #loc7])
#loc97 = loc(fused[#loc8, #loc9])
#loc98 = loc(fused[#loc10, #loc11])
#loc99 = loc(fused[#loc12, #loc13])
#loc100 = loc(fused[#loc14, #loc15])
#loc101 = loc(fused[#loc16, #loc17])
#loc102 = loc(fused[#loc18, #loc19])
#loc103 = loc(fused[#loc20, #loc21])
#loc104 = loc(fused[#loc23, #loc22])
#loc105 = loc(fused[#loc24, #loc25])
#loc106 = loc(fused[#loc27, #loc28])
#loc107 = loc(fused[#loc29, #loc13])
#loc108 = loc(fused[#loc32, #loc31])
#loc109 = loc(fused[#loc35, #loc34])
#loc110 = loc(fused[#loc38, #loc37])
#loc111 = loc(fused[#loc41, #loc39])
#loc112 = loc(fused[#loc42, #loc43])
#loc113 = loc(fused[#loc50, #loc51])
#loc114 = loc(fused[#loc52, #loc53])
#loc115 = loc(fused[#loc54, #loc55])
#loc116 = loc(fused[#loc56, #loc57])
#loc117 = loc(fused[#loc58, #loc59])
#loc118 = loc(fused[#loc60, #loc61])
#loc119 = loc(fused[#loc62, #loc63])
#loc120 = loc(fused[#loc64, #loc65])
#loc121 = loc(fused[#loc67, #loc66])
#loc122 = loc(fused[#loc68, #loc69])
#loc123 = loc(fused[#loc71, #loc72])
#loc124 = loc(fused[#loc73, #loc57])
#loc125 = loc(fused[#loc75, #loc74])
#loc126 = loc(fused[#loc77, #loc76])
#loc127 = loc(fused[#loc79, #loc78])
#loc128 = loc(fused[#loc82, #loc80])
#loc129 = loc(fused[#loc83, #loc84])
#loc130 = loc(fused[#loc91, #loc92])
