!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":431:10)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":431:14)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":431:20)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":431:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc796 = loc(fused[#loc255, #loc256])
#loc797 = loc(fused[#loc257, #loc258])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc689)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc690)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc691)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc692)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc9)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc693)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc694)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc695)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc696)
  cir.func private @close(!s32i) -> !s32i loc(#loc697)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc698)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc22)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc699)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc25)
  cir.func private @printIntLine(!s32i) loc(#loc700)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc702)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc703)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc703)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc703)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc704)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc706)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc706)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc38)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc38)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc709)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc710)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc711)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc712)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc713)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc52)
          cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc712)
          %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc55)
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
          %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc55)
          cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc713)
          cir.scope {
            cir.do {
              %18 = cir.const #cir.int<2> : !s32i loc(#loc59)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc60)
              %20 = cir.const #cir.int<6> : !s32i loc(#loc61)
              %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
              cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc715)
              cir.scope {
                %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc68)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc68)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc717)
                cir.if %75 {
                  cir.break loc(#loc70)
                } loc(#loc718)
              } loc(#loc716)
              %22 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc719)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc73)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc720)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc721)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc78)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc78)
              %27 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc722)
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc9)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc9)
              %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc81)
              %31 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc723)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc86)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc86)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc87)
              %36 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc724)
              cir.scope {
                %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                %73 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc726)
                %74 = cir.const #cir.int<16> : !u64i loc(#loc727)
                %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc727)
                %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc98)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc99)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc99)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc728)
                cir.if %79 {
                  cir.break loc(#loc101)
                } loc(#loc729)
              } loc(#loc725)
              %37 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
              %39 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc104)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc105)
              %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc730)
              %42 = cir.const #cir.int<1> : !u64i loc(#loc731)
              %43 = cir.const #cir.int<100> : !s32i loc(#loc110)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc110)
              %45 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc111)
              %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc732)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc112)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc112)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc733)
              %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc734)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc114)
              %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc115)
              cir.store %53, %8 : !s32i, !cir.ptr<!s32i> loc(#loc735)
              cir.scope {
                %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc121)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc121)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc737)
                %76 = cir.ternary(%75, true {
                  %77 = cir.const #true loc(#loc122)
                  cir.yield %77 : !cir.bool loc(#loc122)
                }, false {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                  %78 = cir.const #cir.int<0> : !s32i loc(#loc124)
                  %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc738)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc122)
                    cir.yield %81 : !cir.bool loc(#loc122)
                  }, false {
                    %81 = cir.const #false loc(#loc122)
                    cir.yield %81 : !cir.bool loc(#loc122)
                  }) : (!cir.bool) -> !cir.bool loc(#loc122)
                  cir.yield %80 : !cir.bool loc(#loc122)
                }) : (!cir.bool) -> !cir.bool loc(#loc122)
                cir.if %76 {
                  cir.break loc(#loc126)
                } loc(#loc739)
              } loc(#loc736)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc127)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc127)
              %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
              %57 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc129)
              %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc130)
              %60 = cir.const #cir.int<1> : !u64i loc(#loc740)
              %61 = cir.binop(div, %59, %60) : !u64i loc(#loc741)
              %62 = cir.binop(add, %57, %61) : !u64i loc(#loc742)
              %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc133)
              cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc743)
              %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc134)
              %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
              %66 = cir.const #cir.int<13> : !s32i loc(#loc136)
              %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc134)
              cir.store %67, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc744)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc141)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s32i loc(#loc143)
                  %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc143)
                  %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
                  cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc747)
                } loc(#loc746)
              } loc(#loc745)
              %68 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc146)
              %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %70 = cir.const #cir.int<10> : !s32i loc(#loc148)
              %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
              cir.store %71, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc748)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc153)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s32i loc(#loc155)
                  %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc155)
                  %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
                  cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc751)
                } loc(#loc750)
              } loc(#loc749)
              cir.yield loc(#loc58)
            } while {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc158)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc158)
              cir.condition(%19) loc(#loc158)
            } loc(#loc714)
          } loc(#loc714)
          cir.scope {
            %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc161)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc162)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc162)
            %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc753)
            cir.if %21 {
              %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc164)
              %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc165)
            } loc(#loc754)
          } loc(#loc752)
        } loc(#loc708)
      } else {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc166)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc22)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc22)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
      } loc(#loc707)
    } loc(#loc705)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc756)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc756)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc170)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc170)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc759)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc760)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc761)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc183)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc25)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc25)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc183)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc185)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc763)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc187)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc765)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc191)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc767)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc193)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc194)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc768)
                  cir.condition(%23) loc(#loc195)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc197)
                    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc198)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc770)
                  } loc(#loc769)
                  cir.yield loc(#loc190)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc199)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc200)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc771)
                  cir.yield loc(#loc766)
                } loc(#loc766)
              } loc(#loc766)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc201)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc202)
            } loc(#loc764)
          } loc(#loc762)
        } loc(#loc758)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc773)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc774)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc775)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc211)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc213)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc213)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc211)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc214)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc777)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc219)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc780)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc221)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc782)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc225)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc784)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc785)
                      cir.condition(%26) loc(#loc229)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                        %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc232)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc787)
                      } loc(#loc786)
                      cir.yield loc(#loc224)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                      %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc234)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc788)
                      cir.yield loc(#loc783)
                    } loc(#loc783)
                  } loc(#loc783)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc236)
                } loc(#loc781)
              } loc(#loc779)
            } loc(#loc778)
          } loc(#loc776)
        } loc(#loc772)
      } loc(#loc757)
    } loc(#loc755)
    cir.return loc(#loc29)
  } loc(#loc701)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc790)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc239)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc791)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc241)
    cir.return loc(#loc238)
  } loc(#loc789)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc792)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc793)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc794)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc251)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc252)
  cir.func @main(%arg0: !s32i loc(fused[#loc255, #loc256]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc257, #loc258])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc796)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc797)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc254)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc259)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc260)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc261)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc261)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc262)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc249)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc249)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc263)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc798)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_12_good() : () -> () loc(#loc264)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc250)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc250)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc266)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc251)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc251)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc267)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc799)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_12_bad() : () -> () loc(#loc268)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc252)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc252)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc270)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc271)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc800)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc800)
    cir.return %17 : !s32i loc(#loc800)
  } loc(#loc795)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc802)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc803)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc803)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc803)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc279)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc804)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc806)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc806)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc283)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc283)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc809)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc810)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc811)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc812)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc813)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc297)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc297)
          cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc812)
          %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc300)
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc301)
          %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc300)
          cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc813)
          cir.scope {
            cir.do {
              %18 = cir.const #cir.int<2> : !s32i loc(#loc304)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc305)
              %20 = cir.const #cir.int<6> : !s32i loc(#loc306)
              %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc307)
              cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc815)
              cir.scope {
                %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc313)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc313)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc817)
                cir.if %75 {
                  cir.break loc(#loc315)
                } loc(#loc818)
              } loc(#loc816)
              %22 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc819)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc318)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc820)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc821)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc323)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc323)
              %27 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc822)
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc325)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc325)
              %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc326)
              %31 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc823)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc329)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc329)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc330)
              %36 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc824)
              cir.scope {
                %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc335)
                %73 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc826)
                %74 = cir.const #cir.int<16> : !u64i loc(#loc827)
                %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc827)
                %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc340)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc341)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc341)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc828)
                cir.if %79 {
                  cir.break loc(#loc343)
                } loc(#loc829)
              } loc(#loc825)
              %37 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc344)
              %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc345)
              %39 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc346)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc347)
              %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc830)
              %42 = cir.const #cir.int<1> : !u64i loc(#loc831)
              %43 = cir.const #cir.int<100> : !s32i loc(#loc352)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc352)
              %45 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc353)
              %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc832)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc354)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc354)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc833)
              %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc834)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc356)
              %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc357)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc357)
              cir.store %53, %8 : !s32i, !cir.ptr<!s32i> loc(#loc835)
              cir.scope {
                %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc362)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc363)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc363)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc837)
                %76 = cir.ternary(%75, true {
                  %77 = cir.const #true loc(#loc364)
                  cir.yield %77 : !cir.bool loc(#loc364)
                }, false {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc365)
                  %78 = cir.const #cir.int<0> : !s32i loc(#loc366)
                  %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc838)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc364)
                    cir.yield %81 : !cir.bool loc(#loc364)
                  }, false {
                    %81 = cir.const #false loc(#loc364)
                    cir.yield %81 : !cir.bool loc(#loc364)
                  }) : (!cir.bool) -> !cir.bool loc(#loc364)
                  cir.yield %80 : !cir.bool loc(#loc364)
                }) : (!cir.bool) -> !cir.bool loc(#loc364)
                cir.if %76 {
                  cir.break loc(#loc368)
                } loc(#loc839)
              } loc(#loc836)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc369)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc369)
              %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc370)
              %57 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc371)
              %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc372)
              %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc372)
              %60 = cir.const #cir.int<1> : !u64i loc(#loc840)
              %61 = cir.binop(div, %59, %60) : !u64i loc(#loc841)
              %62 = cir.binop(add, %57, %61) : !u64i loc(#loc842)
              %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc375)
              cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc843)
              %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc376)
              %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc377)
              %66 = cir.const #cir.int<13> : !s32i loc(#loc378)
              %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc376)
              cir.store %67, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc844)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc383)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc383)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s32i loc(#loc385)
                  %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc385)
                  %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc386)
                  cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc847)
                } loc(#loc846)
              } loc(#loc845)
              %68 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc388)
              %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc389)
              %70 = cir.const #cir.int<10> : !s32i loc(#loc390)
              %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc388)
              cir.store %71, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc848)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc395)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc395)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s32i loc(#loc397)
                  %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc397)
                  %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc398)
                  cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc851)
                } loc(#loc850)
              } loc(#loc849)
              cir.yield loc(#loc303)
            } while {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc400)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc400)
              cir.condition(%19) loc(#loc400)
            } loc(#loc814)
          } loc(#loc814)
          cir.scope {
            %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc403)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc404)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc404)
            %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc853)
            cir.if %21 {
              %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc406)
              %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc407)
            } loc(#loc854)
          } loc(#loc852)
        } loc(#loc808)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc856)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc857)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc858)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc859)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc860)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc417)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc417)
          cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc859)
          %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc420)
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc421)
          %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc420)
          cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc860)
          cir.scope {
            cir.do {
              %18 = cir.const #cir.int<2> : !s32i loc(#loc424)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc425)
              %20 = cir.const #cir.int<6> : !s32i loc(#loc426)
              %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc427)
              cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc862)
              cir.scope {
                %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc432)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc433)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc433)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc864)
                cir.if %75 {
                  cir.break loc(#loc435)
                } loc(#loc865)
              } loc(#loc863)
              %22 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc866)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc438)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc867)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc868)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc443)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc443)
              %27 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc869)
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc445)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc445)
              %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc446)
              %31 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc870)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc449)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc449)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc450)
              %36 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc871)
              cir.scope {
                %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc455)
                %73 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc873)
                %74 = cir.const #cir.int<16> : !u64i loc(#loc874)
                %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc874)
                %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc460)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc461)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc461)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc875)
                cir.if %79 {
                  cir.break loc(#loc463)
                } loc(#loc876)
              } loc(#loc872)
              %37 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc464)
              %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc465)
              %39 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc466)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc467)
              %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc877)
              %42 = cir.const #cir.int<1> : !u64i loc(#loc878)
              %43 = cir.const #cir.int<100> : !s32i loc(#loc472)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc472)
              %45 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc473)
              %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc879)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc474)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc474)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc880)
              %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc881)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc476)
              %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc477)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc477)
              cir.store %53, %8 : !s32i, !cir.ptr<!s32i> loc(#loc882)
              cir.scope {
                %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc482)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc483)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc483)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc884)
                %76 = cir.ternary(%75, true {
                  %77 = cir.const #true loc(#loc484)
                  cir.yield %77 : !cir.bool loc(#loc484)
                }, false {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc485)
                  %78 = cir.const #cir.int<0> : !s32i loc(#loc486)
                  %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc885)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc484)
                    cir.yield %81 : !cir.bool loc(#loc484)
                  }, false {
                    %81 = cir.const #false loc(#loc484)
                    cir.yield %81 : !cir.bool loc(#loc484)
                  }) : (!cir.bool) -> !cir.bool loc(#loc484)
                  cir.yield %80 : !cir.bool loc(#loc484)
                }) : (!cir.bool) -> !cir.bool loc(#loc484)
                cir.if %76 {
                  cir.break loc(#loc488)
                } loc(#loc886)
              } loc(#loc883)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc489)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc489)
              %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc490)
              %57 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc491)
              %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc492)
              %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc492)
              %60 = cir.const #cir.int<1> : !u64i loc(#loc887)
              %61 = cir.binop(div, %59, %60) : !u64i loc(#loc888)
              %62 = cir.binop(add, %57, %61) : !u64i loc(#loc889)
              %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc495)
              cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc890)
              %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc496)
              %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc497)
              %66 = cir.const #cir.int<13> : !s32i loc(#loc498)
              %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc496)
              cir.store %67, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc891)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc503)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc503)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s32i loc(#loc505)
                  %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc505)
                  %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc506)
                  cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc894)
                } loc(#loc893)
              } loc(#loc892)
              %68 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc508)
              %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc509)
              %70 = cir.const #cir.int<10> : !s32i loc(#loc510)
              %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc508)
              cir.store %71, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc895)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc515)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc515)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s32i loc(#loc517)
                  %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc517)
                  %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc518)
                  cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc898)
                } loc(#loc897)
              } loc(#loc896)
              cir.yield loc(#loc423)
            } while {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc520)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc520)
              cir.condition(%19) loc(#loc520)
            } loc(#loc861)
          } loc(#loc861)
          cir.scope {
            %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc523)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc524)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc524)
            %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc900)
            cir.if %21 {
              %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc526)
              %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc527)
            } loc(#loc901)
          } loc(#loc899)
        } loc(#loc855)
      } loc(#loc807)
    } loc(#loc805)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc903)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc903)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc530)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc530)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc906)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc907)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc908)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc543)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc544)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc545)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc545)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc543)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc546)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc910)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc550)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc551)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc913)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc553)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc915)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc557)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc917)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc559)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc560)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc918)
                      cir.condition(%26) loc(#loc561)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc563)
                        %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc564)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc920)
                      } loc(#loc919)
                      cir.yield loc(#loc556)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc565)
                      %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc566)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc921)
                      cir.yield loc(#loc916)
                    } loc(#loc916)
                  } loc(#loc916)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc567)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc568)
                } loc(#loc914)
              } loc(#loc912)
            } loc(#loc911)
          } loc(#loc909)
        } loc(#loc905)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc923)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc924)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc925)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc577)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc578)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc579)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc579)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc577)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc580)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc927)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc584)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc585)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc930)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc587)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc932)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc591)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc934)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc593)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc594)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc935)
                      cir.condition(%26) loc(#loc595)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc597)
                        %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc598)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc937)
                      } loc(#loc936)
                      cir.yield loc(#loc590)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc599)
                      %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc600)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc938)
                      cir.yield loc(#loc933)
                    } loc(#loc933)
                  } loc(#loc933)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc601)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc602)
                } loc(#loc931)
              } loc(#loc929)
            } loc(#loc928)
          } loc(#loc926)
        } loc(#loc922)
      } loc(#loc904)
    } loc(#loc902)
    cir.return loc(#loc274)
  } loc(#loc801)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc940)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc941)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc941)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc941)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc609)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc942)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc944)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc944)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc613)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc613)
      cir.if %7 {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc618)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc619)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc620)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc620)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc618)
      } else {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc621)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc622)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc623)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc623)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc621)
      } loc(#loc945)
    } loc(#loc943)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc947)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc947)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc626)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc626)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc950)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc951)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc952)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc639)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc640)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc641)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc641)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc639)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc642)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc954)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc644)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc956)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc648)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc958)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc650)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc651)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc959)
                  cir.condition(%23) loc(#loc652)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc654)
                    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc655)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc961)
                  } loc(#loc960)
                  cir.yield loc(#loc647)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc656)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc657)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc962)
                  cir.yield loc(#loc957)
                } loc(#loc957)
              } loc(#loc957)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc658)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc659)
            } loc(#loc955)
          } loc(#loc953)
        } loc(#loc949)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc964)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc965)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc966)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc668)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc669)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc670)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc670)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc668)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc671)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc968)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc673)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc970)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc677)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc972)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc679)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc680)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc973)
                  cir.condition(%23) loc(#loc681)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc683)
                    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc684)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc975)
                  } loc(#loc974)
                  cir.yield loc(#loc676)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc685)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc686)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc976)
                  cir.yield loc(#loc971)
                } loc(#loc971)
              } loc(#loc971)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc687)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc688)
            } loc(#loc969)
          } loc(#loc967)
        } loc(#loc963)
      } loc(#loc948)
    } loc(#loc946)
    cir.return loc(#loc604)
  } loc(#loc939)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/sys/socket.h":102:1)
#loc6 = loc("/usr/include/sys/socket.h":102:62)
#loc7 = loc("/usr/include/arpa/inet.h":34:1)
#loc8 = loc("/usr/include/arpa/inet.h":34:47)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":83:53)
#loc10 = loc("/usr/include/netinet/in.h":404:1)
#loc11 = loc("/usr/include/netinet/in.h":405:40)
#loc12 = loc("/usr/include/sys/socket.h":126:1)
#loc13 = loc("/usr/include/sys/socket.h":126:75)
#loc14 = loc("/usr/include/sys/socket.h":145:1)
#loc15 = loc("/usr/include/sys/socket.h":145:68)
#loc16 = loc("/usr/include/string.h":246:1)
#loc17 = loc("/usr/include/string.h":247:33)
#loc18 = loc("/usr/include/unistd.h":358:1)
#loc19 = loc("/usr/include/unistd.h":358:27)
#loc20 = loc("/usr/include/string.h":141:1)
#loc21 = loc("/usr/include/string.h":142:14)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":127:22)
#loc23 = loc("/usr/include/stdio.h":468:1)
#loc24 = loc("/usr/include/stdio.h":468:12)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":133:30)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":49:1)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":166:1)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":51:5)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":51:12)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":52:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":52:28)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":53:12)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":53:5)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":54:5)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":128:5)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":54:8)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":54:33)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":55:5)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":123:5)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":125:5)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":56:9)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":122:9)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":61:13)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":61:17)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":62:13)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":62:32)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":63:13)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":63:19)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":64:13)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":64:36)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":65:13)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":65:41)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":65:30)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":65:37)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":66:13)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":111:21)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":76:40)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":76:49)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":76:62)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":76:33)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":76:17)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":76:73)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":77:17)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":80:17)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":77:21)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":77:38)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":78:17)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":79:21)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":81:24)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":81:25)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":81:34)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":81:37)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":81:51)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":81:17)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":81:52)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":82:38)
#loc79 = loc("/usr/include/netinet/in.h":249:5)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":82:17)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":83:43)
#loc82 = loc("/usr/include/netinet/in.h":251:20)
#loc83 = loc("/usr/include/netinet/in.h":33:15)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":83:17)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":83:63)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":84:42)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":84:36)
#loc88 = loc("/usr/include/netinet/in.h":250:15)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":84:17)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":84:50)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":85:17)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":88:17)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":85:29)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":85:62)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":85:63)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":85:72)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":85:86)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":85:21)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":85:92)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":86:17)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":87:21)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:35)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:59)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:66)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:64)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:50)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:73)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:76)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:87)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:92)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:98)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:108)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:109)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:112)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:30)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:17)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":92:113)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":93:17)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":96:17)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":93:21)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":93:35)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":93:48)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":93:51)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":93:65)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":94:17)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":95:21)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":98:61)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":98:17)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":98:22)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":98:32)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":98:45)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":98:56)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":98:57)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":100:27)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":100:34)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":100:40)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":100:17)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":100:44)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":101:17)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":104:17)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":101:21)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":102:17)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":103:32)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":103:22)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":103:21)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":105:27)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":105:34)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":105:40)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":105:17)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":105:44)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":106:17)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":109:17)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":106:21)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":107:17)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":108:32)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":108:22)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":108:21)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":111:20)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":112:13)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":115:13)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":112:17)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":112:34)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":113:13)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":114:30)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":114:17)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":127:9)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":127:16)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":129:5)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":165:5)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":129:8)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":129:33)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":130:5)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":145:5)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":147:5)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":131:9)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":144:9)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":132:13)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":132:17)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":132:20)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":132:23)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":133:13)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":143:13)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":133:17)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":133:24)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":133:43)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":134:13)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":136:31)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":136:17)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":137:17)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":141:17)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":137:26)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":137:22)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":137:29)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":137:33)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":137:31)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":138:17)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":140:32)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":140:21)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":137:37)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":137:36)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":142:30)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":142:17)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":148:9)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":164:9)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":149:13)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":149:17)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":149:20)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":149:23)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":150:13)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":163:13)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":150:17)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":150:24)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":150:30)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":150:43)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":151:13)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":153:17)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":162:17)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":153:21)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":153:25)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":154:17)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":155:35)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":155:21)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":156:21)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":160:21)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":156:30)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":156:26)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":156:33)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":156:37)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":156:35)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":157:21)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":159:36)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":159:25)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":156:41)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":156:40)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":161:34)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":161:21)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":416:1)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":420:1)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":418:5)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":418:13)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":419:5)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":419:13)
#loc243 = loc("/usr/include/stdlib.h":575:1)
#loc244 = loc("/usr/include/stdlib.h":575:41)
#loc245 = loc("/usr/include/time.h":76:1)
#loc246 = loc("/usr/include/time.h":76:38)
#loc247 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc248 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":436:15)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":438:15)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":441:15)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":443:15)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":431:1)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":446:1)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":432:1)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":434:27)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":434:22)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":434:5)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":436:5)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":437:5)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":437:66)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":438:5)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":441:5)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":442:5)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":442:65)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":443:5)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":445:12)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":445:5)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":175:1)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":360:1)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":177:5)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":177:12)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":178:5)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":178:28)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":179:12)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":179:5)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":180:5)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":319:5)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":180:8)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":180:33)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":181:5)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":249:5)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":251:5)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":182:9)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":248:9)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":187:13)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":187:17)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":188:13)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":188:32)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":189:13)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":189:19)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":190:13)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":190:36)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":191:13)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":191:41)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":191:30)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":191:37)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":192:13)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":237:21)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":202:40)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":202:49)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":202:62)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":202:33)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":202:17)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":202:73)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":203:17)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":206:17)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":203:21)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":203:38)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":204:17)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":205:21)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":207:24)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":207:25)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":207:34)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":207:37)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":207:51)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":207:17)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":207:52)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":208:38)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":208:17)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":209:53)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":209:43)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":209:17)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":209:63)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":210:42)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":210:36)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":210:17)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":210:50)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":211:17)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":214:17)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":211:29)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":211:62)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":211:63)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":211:72)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":211:86)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":211:21)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":211:92)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":212:17)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":213:21)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:35)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:59)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:66)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:64)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:50)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:73)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:76)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:87)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:92)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:98)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:108)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:109)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:112)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:30)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:17)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":218:113)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":219:17)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":222:17)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":219:21)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":219:35)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":219:48)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":219:51)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":219:65)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":220:17)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":221:21)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":224:61)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":224:17)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":224:22)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":224:32)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":224:45)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":224:56)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":224:57)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":226:27)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":226:34)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":226:40)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":226:17)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":226:44)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":227:17)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":230:17)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":227:21)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":228:17)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":229:32)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":229:22)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":229:21)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":231:27)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":231:34)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":231:40)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":231:17)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":231:44)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":232:17)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":235:17)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":232:21)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":233:17)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":234:32)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":234:22)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":234:21)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":237:20)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":238:13)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":241:13)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":238:17)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":238:34)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":239:13)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":240:30)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":240:17)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":252:9)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":318:9)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":257:13)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":257:17)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":258:13)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":258:32)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":259:13)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":259:19)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":260:13)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":260:36)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":261:13)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":261:41)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":261:30)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":261:37)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":262:13)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":307:21)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":272:40)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":272:49)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":272:62)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":272:33)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":272:17)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":272:73)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":273:17)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":276:17)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":273:21)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":273:38)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":274:17)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":275:21)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":277:24)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":277:25)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":277:34)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":277:37)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":277:51)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":277:17)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":277:52)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":278:38)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":278:17)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":279:53)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":279:43)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":279:17)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":279:63)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":280:42)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":280:36)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":280:17)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":280:50)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":281:17)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":284:17)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":281:29)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":281:62)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":281:63)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":281:72)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":281:86)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":281:21)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":281:92)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":282:17)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":283:21)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:35)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:59)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:66)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:64)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:50)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:73)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:76)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:87)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:92)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:98)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:108)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:109)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:112)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:30)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:17)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":288:113)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":289:17)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":292:17)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":289:21)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":289:35)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":289:48)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":289:51)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":289:65)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":290:17)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":291:21)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":294:61)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":294:17)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":294:22)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":294:32)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":294:45)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":294:56)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":294:57)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":296:27)
#loc497 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":296:34)
#loc498 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":296:40)
#loc499 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":296:17)
#loc500 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":296:44)
#loc501 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":297:17)
#loc502 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":300:17)
#loc503 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":297:21)
#loc504 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":298:17)
#loc505 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":299:32)
#loc506 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":299:22)
#loc507 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":299:21)
#loc508 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":301:27)
#loc509 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":301:34)
#loc510 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":301:40)
#loc511 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":301:17)
#loc512 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":301:44)
#loc513 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":302:17)
#loc514 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":305:17)
#loc515 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":302:21)
#loc516 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":303:17)
#loc517 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":304:32)
#loc518 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":304:22)
#loc519 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":304:21)
#loc520 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":307:20)
#loc521 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":308:13)
#loc522 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":311:13)
#loc523 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":308:17)
#loc524 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":308:34)
#loc525 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":309:13)
#loc526 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":310:30)
#loc527 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":310:17)
#loc528 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":320:5)
#loc529 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":359:5)
#loc530 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":320:8)
#loc531 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":320:33)
#loc532 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":321:5)
#loc533 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":339:5)
#loc534 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":341:5)
#loc535 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":322:9)
#loc536 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":338:9)
#loc537 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":323:13)
#loc538 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":323:17)
#loc539 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":323:20)
#loc540 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":323:23)
#loc541 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":324:13)
#loc542 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":337:13)
#loc543 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":324:17)
#loc544 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":324:24)
#loc545 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":324:30)
#loc546 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":324:43)
#loc547 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":325:13)
#loc548 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":327:17)
#loc549 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":336:17)
#loc550 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":327:21)
#loc551 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":327:25)
#loc552 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":328:17)
#loc553 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":329:35)
#loc554 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":329:21)
#loc555 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":330:21)
#loc556 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":334:21)
#loc557 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":330:30)
#loc558 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":330:26)
#loc559 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":330:33)
#loc560 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":330:37)
#loc561 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":330:35)
#loc562 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":331:21)
#loc563 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":333:36)
#loc564 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":333:25)
#loc565 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":330:41)
#loc566 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":330:40)
#loc567 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":335:34)
#loc568 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":335:21)
#loc569 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":342:9)
#loc570 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":358:9)
#loc571 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":343:13)
#loc572 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":343:17)
#loc573 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":343:20)
#loc574 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":343:23)
#loc575 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":344:13)
#loc576 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":357:13)
#loc577 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":344:17)
#loc578 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":344:24)
#loc579 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":344:30)
#loc580 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":344:43)
#loc581 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":345:13)
#loc582 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":347:17)
#loc583 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":356:17)
#loc584 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":347:21)
#loc585 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":347:25)
#loc586 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":348:17)
#loc587 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":349:35)
#loc588 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":349:21)
#loc589 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":350:21)
#loc590 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":354:21)
#loc591 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":350:30)
#loc592 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":350:26)
#loc593 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":350:33)
#loc594 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":350:37)
#loc595 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":350:35)
#loc596 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":351:21)
#loc597 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":353:36)
#loc598 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":353:25)
#loc599 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":350:41)
#loc600 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":350:40)
#loc601 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":355:34)
#loc602 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":355:21)
#loc603 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":365:1)
#loc604 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":414:1)
#loc605 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":367:5)
#loc606 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":367:12)
#loc607 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":368:5)
#loc608 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":368:28)
#loc609 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":369:12)
#loc610 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":369:5)
#loc611 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":370:5)
#loc612 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":379:5)
#loc613 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":370:8)
#loc614 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":370:33)
#loc615 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":371:5)
#loc616 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":374:5)
#loc617 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":376:5)
#loc618 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":373:9)
#loc619 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":373:16)
#loc620 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":373:22)
#loc621 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":378:9)
#loc622 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":378:16)
#loc623 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":378:22)
#loc624 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":380:5)
#loc625 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":413:5)
#loc626 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":380:8)
#loc627 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":380:33)
#loc628 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":381:5)
#loc629 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":396:5)
#loc630 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":398:5)
#loc631 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":382:9)
#loc632 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":395:9)
#loc633 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":383:13)
#loc634 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":383:17)
#loc635 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":383:20)
#loc636 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":383:23)
#loc637 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":384:13)
#loc638 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":394:13)
#loc639 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":384:17)
#loc640 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":384:24)
#loc641 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":384:30)
#loc642 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":384:43)
#loc643 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":385:13)
#loc644 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":387:31)
#loc645 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":387:17)
#loc646 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":388:17)
#loc647 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":392:17)
#loc648 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":388:26)
#loc649 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":388:22)
#loc650 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":388:29)
#loc651 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":388:33)
#loc652 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":388:31)
#loc653 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":389:17)
#loc654 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":391:32)
#loc655 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":391:21)
#loc656 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":388:37)
#loc657 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":388:36)
#loc658 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":393:30)
#loc659 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":393:17)
#loc660 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":399:9)
#loc661 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":412:9)
#loc662 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":400:13)
#loc663 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":400:17)
#loc664 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":400:20)
#loc665 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":400:23)
#loc666 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":401:13)
#loc667 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":411:13)
#loc668 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":401:17)
#loc669 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":401:24)
#loc670 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":401:30)
#loc671 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":401:43)
#loc672 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":402:13)
#loc673 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":404:31)
#loc674 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":404:17)
#loc675 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":405:17)
#loc676 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":409:17)
#loc677 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":405:26)
#loc678 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":405:22)
#loc679 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":405:29)
#loc680 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":405:33)
#loc681 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":405:31)
#loc682 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":406:17)
#loc683 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":408:32)
#loc684 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":408:21)
#loc685 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":405:37)
#loc686 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":405:36)
#loc687 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":410:30)
#loc688 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_12.c":410:17)
#loc689 = loc(fused[#loc1, #loc2])
#loc690 = loc(fused[#loc3, #loc4])
#loc691 = loc(fused[#loc5, #loc6])
#loc692 = loc(fused[#loc7, #loc8])
#loc693 = loc(fused[#loc10, #loc11])
#loc694 = loc(fused[#loc12, #loc13])
#loc695 = loc(fused[#loc14, #loc15])
#loc696 = loc(fused[#loc16, #loc17])
#loc697 = loc(fused[#loc18, #loc19])
#loc698 = loc(fused[#loc20, #loc21])
#loc699 = loc(fused[#loc23, #loc24])
#loc700 = loc(fused[#loc26, #loc27])
#loc701 = loc(fused[#loc28, #loc29])
#loc702 = loc(fused[#loc30, #loc31])
#loc703 = loc(fused[#loc32, #loc33])
#loc704 = loc(fused[#loc35, #loc34])
#loc705 = loc(fused[#loc36, #loc37])
#loc706 = loc(fused[#loc38, #loc39])
#loc707 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc708 = loc(fused[#loc43, #loc44])
#loc709 = loc(fused[#loc45, #loc46])
#loc710 = loc(fused[#loc47, #loc48])
#loc711 = loc(fused[#loc49, #loc50])
#loc712 = loc(fused[#loc51, #loc52])
#loc713 = loc(fused[#loc53, #loc54])
#loc714 = loc(fused[#loc57, #loc58])
#loc715 = loc(fused[#loc63, #loc64])
#loc716 = loc(fused[#loc65, #loc66])
#loc717 = loc(fused[#loc67, #loc68])
#loc718 = loc(fused[#loc69, #loc66])
#loc719 = loc(fused[#loc71, #loc72])
#loc720 = loc(fused[#loc74, #loc75])
#loc721 = loc(fused[#loc76, #loc77])
#loc722 = loc(fused[#loc80, #loc78])
#loc723 = loc(fused[#loc84, #loc85])
#loc724 = loc(fused[#loc89, #loc90])
#loc725 = loc(fused[#loc91, #loc92])
#loc726 = loc(fused[#loc94, #loc95])
#loc727 = loc(fused[#loc96, #loc97])
#loc728 = loc(fused[#loc98, #loc99])
#loc729 = loc(fused[#loc100, #loc92])
#loc730 = loc(fused[#loc106, #loc107])
#loc731 = loc(fused[#loc108, #loc109])
#loc732 = loc(fused[#loc110, #loc111])
#loc733 = loc(fused[#loc110, #loc112])
#loc734 = loc(fused[#loc108, #loc113])
#loc735 = loc(fused[#loc116, #loc117])
#loc736 = loc(fused[#loc118, #loc119])
#loc737 = loc(fused[#loc120, #loc121])
#loc738 = loc(fused[#loc123, #loc124])
#loc739 = loc(fused[#loc125, #loc119])
#loc740 = loc(fused[#loc131, #loc132])
#loc741 = loc(fused[#loc130, #loc132])
#loc742 = loc(fused[#loc129, #loc132])
#loc743 = loc(fused[#loc128, #loc127])
#loc744 = loc(fused[#loc137, #loc138])
#loc745 = loc(fused[#loc139, #loc140])
#loc746 = loc(fused[#loc142, #loc140])
#loc747 = loc(fused[#loc145, #loc143])
#loc748 = loc(fused[#loc149, #loc150])
#loc749 = loc(fused[#loc151, #loc152])
#loc750 = loc(fused[#loc154, #loc152])
#loc751 = loc(fused[#loc157, #loc155])
#loc752 = loc(fused[#loc159, #loc160])
#loc753 = loc(fused[#loc161, #loc162])
#loc754 = loc(fused[#loc163, #loc160])
#loc755 = loc(fused[#loc168, #loc169])
#loc756 = loc(fused[#loc170, #loc171])
#loc757 = loc(fused[#loc172, #loc173, #loc174, #loc169])
#loc758 = loc(fused[#loc175, #loc176])
#loc759 = loc(fused[#loc177, #loc178])
#loc760 = loc(fused[#loc177, #loc179])
#loc761 = loc(fused[#loc177, #loc180])
#loc762 = loc(fused[#loc181, #loc182])
#loc763 = loc(fused[#loc183, #loc185])
#loc764 = loc(fused[#loc186, #loc182])
#loc765 = loc(fused[#loc188, #loc187])
#loc766 = loc(fused[#loc189, #loc190])
#loc767 = loc(fused[#loc192, #loc191])
#loc768 = loc(fused[#loc193, #loc194])
#loc769 = loc(fused[#loc196, #loc190])
#loc770 = loc(fused[#loc198, #loc197])
#loc771 = loc(fused[#loc200, #loc199])
#loc772 = loc(fused[#loc203, #loc204])
#loc773 = loc(fused[#loc205, #loc206])
#loc774 = loc(fused[#loc205, #loc207])
#loc775 = loc(fused[#loc205, #loc208])
#loc776 = loc(fused[#loc209, #loc210])
#loc777 = loc(fused[#loc211, #loc214])
#loc778 = loc(fused[#loc215, #loc210])
#loc779 = loc(fused[#loc216, #loc217])
#loc780 = loc(fused[#loc218, #loc219])
#loc781 = loc(fused[#loc220, #loc217])
#loc782 = loc(fused[#loc222, #loc221])
#loc783 = loc(fused[#loc223, #loc224])
#loc784 = loc(fused[#loc226, #loc225])
#loc785 = loc(fused[#loc227, #loc228])
#loc786 = loc(fused[#loc230, #loc224])
#loc787 = loc(fused[#loc232, #loc231])
#loc788 = loc(fused[#loc234, #loc233])
#loc789 = loc(fused[#loc237, #loc238])
#loc790 = loc(fused[#loc239, #loc240])
#loc791 = loc(fused[#loc241, #loc242])
#loc792 = loc(fused[#loc243, #loc244])
#loc793 = loc(fused[#loc245, #loc246])
#loc794 = loc(fused[#loc247, #loc248])
#loc795 = loc(fused[#loc253, #loc254])
#loc798 = loc(fused[#loc264, #loc265])
#loc799 = loc(fused[#loc268, #loc269])
#loc800 = loc(fused[#loc272, #loc271])
#loc801 = loc(fused[#loc273, #loc274])
#loc802 = loc(fused[#loc275, #loc276])
#loc803 = loc(fused[#loc277, #loc278])
#loc804 = loc(fused[#loc280, #loc279])
#loc805 = loc(fused[#loc281, #loc282])
#loc806 = loc(fused[#loc283, #loc284])
#loc807 = loc(fused[#loc285, #loc286, #loc287, #loc282])
#loc808 = loc(fused[#loc288, #loc289])
#loc809 = loc(fused[#loc290, #loc291])
#loc810 = loc(fused[#loc292, #loc293])
#loc811 = loc(fused[#loc294, #loc295])
#loc812 = loc(fused[#loc296, #loc297])
#loc813 = loc(fused[#loc298, #loc299])
#loc814 = loc(fused[#loc302, #loc303])
#loc815 = loc(fused[#loc308, #loc309])
#loc816 = loc(fused[#loc310, #loc311])
#loc817 = loc(fused[#loc312, #loc313])
#loc818 = loc(fused[#loc314, #loc311])
#loc819 = loc(fused[#loc316, #loc317])
#loc820 = loc(fused[#loc319, #loc320])
#loc821 = loc(fused[#loc321, #loc322])
#loc822 = loc(fused[#loc324, #loc323])
#loc823 = loc(fused[#loc327, #loc328])
#loc824 = loc(fused[#loc331, #loc332])
#loc825 = loc(fused[#loc333, #loc334])
#loc826 = loc(fused[#loc336, #loc337])
#loc827 = loc(fused[#loc338, #loc339])
#loc828 = loc(fused[#loc340, #loc341])
#loc829 = loc(fused[#loc342, #loc334])
#loc830 = loc(fused[#loc348, #loc349])
#loc831 = loc(fused[#loc350, #loc351])
#loc832 = loc(fused[#loc352, #loc353])
#loc833 = loc(fused[#loc352, #loc354])
#loc834 = loc(fused[#loc350, #loc355])
#loc835 = loc(fused[#loc358, #loc359])
#loc836 = loc(fused[#loc360, #loc361])
#loc837 = loc(fused[#loc362, #loc363])
#loc838 = loc(fused[#loc365, #loc366])
#loc839 = loc(fused[#loc367, #loc361])
#loc840 = loc(fused[#loc373, #loc374])
#loc841 = loc(fused[#loc372, #loc374])
#loc842 = loc(fused[#loc371, #loc374])
#loc843 = loc(fused[#loc370, #loc369])
#loc844 = loc(fused[#loc379, #loc380])
#loc845 = loc(fused[#loc381, #loc382])
#loc846 = loc(fused[#loc384, #loc382])
#loc847 = loc(fused[#loc387, #loc385])
#loc848 = loc(fused[#loc391, #loc392])
#loc849 = loc(fused[#loc393, #loc394])
#loc850 = loc(fused[#loc396, #loc394])
#loc851 = loc(fused[#loc399, #loc397])
#loc852 = loc(fused[#loc401, #loc402])
#loc853 = loc(fused[#loc403, #loc404])
#loc854 = loc(fused[#loc405, #loc402])
#loc855 = loc(fused[#loc408, #loc409])
#loc856 = loc(fused[#loc410, #loc411])
#loc857 = loc(fused[#loc412, #loc413])
#loc858 = loc(fused[#loc414, #loc415])
#loc859 = loc(fused[#loc416, #loc417])
#loc860 = loc(fused[#loc418, #loc419])
#loc861 = loc(fused[#loc422, #loc423])
#loc862 = loc(fused[#loc428, #loc429])
#loc863 = loc(fused[#loc430, #loc431])
#loc864 = loc(fused[#loc432, #loc433])
#loc865 = loc(fused[#loc434, #loc431])
#loc866 = loc(fused[#loc436, #loc437])
#loc867 = loc(fused[#loc439, #loc440])
#loc868 = loc(fused[#loc441, #loc442])
#loc869 = loc(fused[#loc444, #loc443])
#loc870 = loc(fused[#loc447, #loc448])
#loc871 = loc(fused[#loc451, #loc452])
#loc872 = loc(fused[#loc453, #loc454])
#loc873 = loc(fused[#loc456, #loc457])
#loc874 = loc(fused[#loc458, #loc459])
#loc875 = loc(fused[#loc460, #loc461])
#loc876 = loc(fused[#loc462, #loc454])
#loc877 = loc(fused[#loc468, #loc469])
#loc878 = loc(fused[#loc470, #loc471])
#loc879 = loc(fused[#loc472, #loc473])
#loc880 = loc(fused[#loc472, #loc474])
#loc881 = loc(fused[#loc470, #loc475])
#loc882 = loc(fused[#loc478, #loc479])
#loc883 = loc(fused[#loc480, #loc481])
#loc884 = loc(fused[#loc482, #loc483])
#loc885 = loc(fused[#loc485, #loc486])
#loc886 = loc(fused[#loc487, #loc481])
#loc887 = loc(fused[#loc493, #loc494])
#loc888 = loc(fused[#loc492, #loc494])
#loc889 = loc(fused[#loc491, #loc494])
#loc890 = loc(fused[#loc490, #loc489])
#loc891 = loc(fused[#loc499, #loc500])
#loc892 = loc(fused[#loc501, #loc502])
#loc893 = loc(fused[#loc504, #loc502])
#loc894 = loc(fused[#loc507, #loc505])
#loc895 = loc(fused[#loc511, #loc512])
#loc896 = loc(fused[#loc513, #loc514])
#loc897 = loc(fused[#loc516, #loc514])
#loc898 = loc(fused[#loc519, #loc517])
#loc899 = loc(fused[#loc521, #loc522])
#loc900 = loc(fused[#loc523, #loc524])
#loc901 = loc(fused[#loc525, #loc522])
#loc902 = loc(fused[#loc528, #loc529])
#loc903 = loc(fused[#loc530, #loc531])
#loc904 = loc(fused[#loc532, #loc533, #loc534, #loc529])
#loc905 = loc(fused[#loc535, #loc536])
#loc906 = loc(fused[#loc537, #loc538])
#loc907 = loc(fused[#loc537, #loc539])
#loc908 = loc(fused[#loc537, #loc540])
#loc909 = loc(fused[#loc541, #loc542])
#loc910 = loc(fused[#loc543, #loc546])
#loc911 = loc(fused[#loc547, #loc542])
#loc912 = loc(fused[#loc548, #loc549])
#loc913 = loc(fused[#loc550, #loc551])
#loc914 = loc(fused[#loc552, #loc549])
#loc915 = loc(fused[#loc554, #loc553])
#loc916 = loc(fused[#loc555, #loc556])
#loc917 = loc(fused[#loc558, #loc557])
#loc918 = loc(fused[#loc559, #loc560])
#loc919 = loc(fused[#loc562, #loc556])
#loc920 = loc(fused[#loc564, #loc563])
#loc921 = loc(fused[#loc566, #loc565])
#loc922 = loc(fused[#loc569, #loc570])
#loc923 = loc(fused[#loc571, #loc572])
#loc924 = loc(fused[#loc571, #loc573])
#loc925 = loc(fused[#loc571, #loc574])
#loc926 = loc(fused[#loc575, #loc576])
#loc927 = loc(fused[#loc577, #loc580])
#loc928 = loc(fused[#loc581, #loc576])
#loc929 = loc(fused[#loc582, #loc583])
#loc930 = loc(fused[#loc584, #loc585])
#loc931 = loc(fused[#loc586, #loc583])
#loc932 = loc(fused[#loc588, #loc587])
#loc933 = loc(fused[#loc589, #loc590])
#loc934 = loc(fused[#loc592, #loc591])
#loc935 = loc(fused[#loc593, #loc594])
#loc936 = loc(fused[#loc596, #loc590])
#loc937 = loc(fused[#loc598, #loc597])
#loc938 = loc(fused[#loc600, #loc599])
#loc939 = loc(fused[#loc603, #loc604])
#loc940 = loc(fused[#loc605, #loc606])
#loc941 = loc(fused[#loc607, #loc608])
#loc942 = loc(fused[#loc610, #loc609])
#loc943 = loc(fused[#loc611, #loc612])
#loc944 = loc(fused[#loc613, #loc614])
#loc945 = loc(fused[#loc615, #loc616, #loc617, #loc612])
#loc946 = loc(fused[#loc624, #loc625])
#loc947 = loc(fused[#loc626, #loc627])
#loc948 = loc(fused[#loc628, #loc629, #loc630, #loc625])
#loc949 = loc(fused[#loc631, #loc632])
#loc950 = loc(fused[#loc633, #loc634])
#loc951 = loc(fused[#loc633, #loc635])
#loc952 = loc(fused[#loc633, #loc636])
#loc953 = loc(fused[#loc637, #loc638])
#loc954 = loc(fused[#loc639, #loc642])
#loc955 = loc(fused[#loc643, #loc638])
#loc956 = loc(fused[#loc645, #loc644])
#loc957 = loc(fused[#loc646, #loc647])
#loc958 = loc(fused[#loc649, #loc648])
#loc959 = loc(fused[#loc650, #loc651])
#loc960 = loc(fused[#loc653, #loc647])
#loc961 = loc(fused[#loc655, #loc654])
#loc962 = loc(fused[#loc657, #loc656])
#loc963 = loc(fused[#loc660, #loc661])
#loc964 = loc(fused[#loc662, #loc663])
#loc965 = loc(fused[#loc662, #loc664])
#loc966 = loc(fused[#loc662, #loc665])
#loc967 = loc(fused[#loc666, #loc667])
#loc968 = loc(fused[#loc668, #loc671])
#loc969 = loc(fused[#loc672, #loc667])
#loc970 = loc(fused[#loc674, #loc673])
#loc971 = loc(fused[#loc675, #loc676])
#loc972 = loc(fused[#loc678, #loc677])
#loc973 = loc(fused[#loc679, #loc680])
#loc974 = loc(fused[#loc682, #loc676])
#loc975 = loc(fused[#loc684, #loc683])
#loc976 = loc(fused[#loc686, #loc685])
