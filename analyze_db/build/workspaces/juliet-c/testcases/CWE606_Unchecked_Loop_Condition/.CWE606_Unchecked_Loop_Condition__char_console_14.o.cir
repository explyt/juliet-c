!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc439)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc440)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc441)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc442)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc443)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc444)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc14)
  cir.func private @printIntLine(!s32i) loc(#loc445)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_14_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc447)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc448)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc448)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc448)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc449)
    cir.scope {
      %4 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc439)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc451)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc454)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc34)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc34)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc454)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc38)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc38)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc39)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc456)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc40)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc457)
            cir.if %18 {
              cir.scope {
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
                %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc45)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc46)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc47)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc47)
                %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc460)
                %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc460)
                %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc442)
                %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc49)
                %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc50)
                %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
                %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc461)
                cir.if %32 {
                  %33 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc55)
                  %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                  %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc55)
                  cir.store %35, %8 : !u64i, !cir.ptr<!u64i> loc(#loc463)
                  cir.scope {
                    %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc61)
                    %37 = cir.const #cir.int<0> : !s32i loc(#loc62)
                    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc62)
                    %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc465)
                    %40 = cir.ternary(%39, true {
                      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
                      %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc66)
                      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc66)
                      %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc466)
                      %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc67)
                      %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc64)
                      %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc64)
                      %49 = cir.const #cir.int<10> : !s32i loc(#loc68)
                      %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc467)
                      %51 = cir.ternary(%50, true {
                        %52 = cir.const #true loc(#loc63)
                        cir.yield %52 : !cir.bool loc(#loc63)
                      }, false {
                        %52 = cir.const #false loc(#loc63)
                        cir.yield %52 : !cir.bool loc(#loc63)
                      }) : (!cir.bool) -> !cir.bool loc(#loc63)
                      cir.yield %51 : !cir.bool loc(#loc63)
                    }, false {
                      %41 = cir.const #false loc(#loc63)
                      cir.yield %41 : !cir.bool loc(#loc63)
                    }) : (!cir.bool) -> !cir.bool loc(#loc63)
                    cir.if %40 {
                      %41 = cir.const #cir.int<0> : !s32i loc(#loc70)
                      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc70)
                      %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
                      %44 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc72)
                      %45 = cir.const #cir.int<1> : !s32i loc(#loc73)
                      %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc73)
                      %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc469)
                      %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc74)
                      cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc470)
                    } loc(#loc468)
                  } loc(#loc464)
                } else {
                  %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc75)
                  %35 = cir.const #cir.int<0> : !s32i loc(#loc76)
                  %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc76)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
                  %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc78)
                  %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc79)
                  cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc471)
                } loc(#loc462)
              } loc(#loc459)
            } loc(#loc458)
          } loc(#loc455)
        } loc(#loc453)
      } loc(#loc452)
    } loc(#loc450)
    cir.scope {
      %4 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc439)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc82)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc83)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc473)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc476)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc477)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc478)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc93)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc14)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc14)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc93)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc480)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc97)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc482)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc101)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc484)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc485)
                  cir.condition(%23) loc(#loc105)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                    %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc108)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc487)
                  } loc(#loc486)
                  cir.yield loc(#loc100)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                  %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc110)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc488)
                  cir.yield loc(#loc483)
                } loc(#loc483)
              } loc(#loc483)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc112)
            } loc(#loc481)
          } loc(#loc479)
        } loc(#loc475)
      } loc(#loc474)
    } loc(#loc472)
    cir.return loc(#loc18)
  } loc(#loc446)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc490)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc115)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc491)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc117)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc492)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc119)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc493)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc121)
    cir.return loc(#loc114)
  } loc(#loc489)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc123)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc495)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc496)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc496)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc496)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc497)
    cir.scope {
      %4 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc439)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc134)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc135)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc499)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc502)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc141)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc141)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc502)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc145)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc145)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc146)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc504)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc147)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc147)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc505)
            cir.if %18 {
              cir.scope {
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
                %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc152)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc153)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc154)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc154)
                %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc155)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc508)
                %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc508)
                %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc442)
                %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc156)
                %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc157)
                %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc158)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
                %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc509)
                cir.if %32 {
                  %33 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc162)
                  %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                  %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc162)
                  cir.store %35, %8 : !u64i, !cir.ptr<!u64i> loc(#loc511)
                  cir.scope {
                    %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc168)
                    %37 = cir.const #cir.int<0> : !s32i loc(#loc169)
                    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc169)
                    %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc513)
                    %40 = cir.ternary(%39, true {
                      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
                      %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc172)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc173)
                      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc173)
                      %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc514)
                      %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc174)
                      %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc171)
                      %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc171)
                      %49 = cir.const #cir.int<10> : !s32i loc(#loc175)
                      %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc515)
                      %51 = cir.ternary(%50, true {
                        %52 = cir.const #true loc(#loc170)
                        cir.yield %52 : !cir.bool loc(#loc170)
                      }, false {
                        %52 = cir.const #false loc(#loc170)
                        cir.yield %52 : !cir.bool loc(#loc170)
                      }) : (!cir.bool) -> !cir.bool loc(#loc170)
                      cir.yield %51 : !cir.bool loc(#loc170)
                    }, false {
                      %41 = cir.const #false loc(#loc170)
                      cir.yield %41 : !cir.bool loc(#loc170)
                    }) : (!cir.bool) -> !cir.bool loc(#loc170)
                    cir.if %40 {
                      %41 = cir.const #cir.int<0> : !s32i loc(#loc177)
                      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc177)
                      %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
                      %44 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc179)
                      %45 = cir.const #cir.int<1> : !s32i loc(#loc180)
                      %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc180)
                      %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc517)
                      %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc181)
                      cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc518)
                    } loc(#loc516)
                  } loc(#loc512)
                } else {
                  %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc182)
                  %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc182)
                  cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc183)
                  %35 = cir.const #cir.int<0> : !s32i loc(#loc184)
                  %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc184)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
                  %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc186)
                  %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc187)
                  cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc519)
                } loc(#loc510)
              } loc(#loc507)
            } loc(#loc506)
          } loc(#loc503)
        } loc(#loc501)
      } loc(#loc500)
    } loc(#loc498)
    cir.scope {
      %4 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc439)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc190)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc191)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc521)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc195)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc524)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc525)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc526)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc204)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc206)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc206)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc204)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc207)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc528)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc211)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc212)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc531)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc214)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc533)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc218)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc535)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc221)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc536)
                      cir.condition(%26) loc(#loc222)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                        %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc225)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc538)
                      } loc(#loc537)
                      cir.yield loc(#loc217)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                      %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc227)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc539)
                      cir.yield loc(#loc534)
                    } loc(#loc534)
                  } loc(#loc534)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc229)
                } loc(#loc532)
              } loc(#loc530)
            } loc(#loc529)
          } loc(#loc527)
        } loc(#loc523)
      } loc(#loc522)
    } loc(#loc520)
    cir.return loc(#loc125)
  } loc(#loc494)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc541)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc542)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc542)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc542)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc236)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc543)
    cir.scope {
      %4 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc439)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc240)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc241)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc545)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc548)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc247)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc248)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc247)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc548)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc251)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc251)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc252)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc550)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc253)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc253)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc551)
            cir.if %18 {
              cir.scope {
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc257)
                %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc258)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc259)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc260)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc260)
                %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc261)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc554)
                %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc554)
                %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc442)
                %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc262)
                %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc263)
                %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc264)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc264)
                %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc555)
                cir.if %32 {
                  %33 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc268)
                  %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
                  %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc268)
                  cir.store %35, %8 : !u64i, !cir.ptr<!u64i> loc(#loc557)
                  cir.scope {
                    %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc274)
                    %37 = cir.const #cir.int<0> : !s32i loc(#loc275)
                    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc275)
                    %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc559)
                    %40 = cir.ternary(%39, true {
                      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc277)
                      %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc278)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc279)
                      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc279)
                      %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc560)
                      %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc280)
                      %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc277)
                      %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc277)
                      %49 = cir.const #cir.int<10> : !s32i loc(#loc281)
                      %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc561)
                      %51 = cir.ternary(%50, true {
                        %52 = cir.const #true loc(#loc276)
                        cir.yield %52 : !cir.bool loc(#loc276)
                      }, false {
                        %52 = cir.const #false loc(#loc276)
                        cir.yield %52 : !cir.bool loc(#loc276)
                      }) : (!cir.bool) -> !cir.bool loc(#loc276)
                      cir.yield %51 : !cir.bool loc(#loc276)
                    }, false {
                      %41 = cir.const #false loc(#loc276)
                      cir.yield %41 : !cir.bool loc(#loc276)
                    }) : (!cir.bool) -> !cir.bool loc(#loc276)
                    cir.if %40 {
                      %41 = cir.const #cir.int<0> : !s32i loc(#loc283)
                      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc283)
                      %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc284)
                      %44 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc285)
                      %45 = cir.const #cir.int<1> : !s32i loc(#loc286)
                      %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc286)
                      %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc563)
                      %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc287)
                      cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc564)
                    } loc(#loc562)
                  } loc(#loc558)
                } else {
                  %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc288)
                  %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc288)
                  cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc289)
                  %35 = cir.const #cir.int<0> : !s32i loc(#loc290)
                  %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc290)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc291)
                  %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc292)
                  %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc293)
                  cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc565)
                } loc(#loc556)
              } loc(#loc553)
            } loc(#loc552)
          } loc(#loc549)
        } loc(#loc547)
      } loc(#loc546)
    } loc(#loc544)
    cir.scope {
      %4 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc439)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc296)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc297)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc567)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc570)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc571)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc572)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc307)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc308)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc309)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc309)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc307)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc310)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc574)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc314)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc315)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc577)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc317)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc579)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc321)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc581)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc323)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc582)
                      cir.condition(%26) loc(#loc325)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                        %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc328)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc584)
                      } loc(#loc583)
                      cir.yield loc(#loc320)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc329)
                      %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc330)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc585)
                      cir.yield loc(#loc580)
                    } loc(#loc580)
                  } loc(#loc580)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc331)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc332)
                } loc(#loc578)
              } loc(#loc576)
            } loc(#loc575)
          } loc(#loc573)
        } loc(#loc569)
      } loc(#loc568)
    } loc(#loc566)
    cir.return loc(#loc231)
  } loc(#loc540)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc586)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc335)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc588)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc589)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc589)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc589)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc342)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc590)
    cir.scope {
      %4 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc439)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc346)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc347)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc592)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc351)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc351)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc352)
      } else {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc353)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc354)
        %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc335)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc335)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc353)
      } loc(#loc593)
    } loc(#loc591)
    cir.scope {
      %4 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc439)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc357)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc358)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc595)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc598)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc599)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc600)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc368)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc369)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc370)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc370)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc368)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc371)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc602)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc373)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc604)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc377)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc606)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc379)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc380)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc607)
                  cir.condition(%23) loc(#loc381)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc383)
                    %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc384)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc609)
                  } loc(#loc608)
                  cir.yield loc(#loc376)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc385)
                  %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc386)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc610)
                  cir.yield loc(#loc605)
                } loc(#loc605)
              } loc(#loc605)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc387)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc388)
            } loc(#loc603)
          } loc(#loc601)
        } loc(#loc597)
      } loc(#loc596)
    } loc(#loc594)
    cir.return loc(#loc337)
  } loc(#loc587)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc612)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc613)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc613)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc613)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc395)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc614)
    cir.scope {
      %4 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc439)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc399)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc400)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc616)
      cir.if %7 {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc402)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc403)
        %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc404)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc404)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc402)
      } loc(#loc617)
    } loc(#loc615)
    cir.scope {
      %4 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc439)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc407)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc408)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc619)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc622)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc623)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc624)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc418)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc419)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc420)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc420)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc418)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc421)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc626)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc423)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc628)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc427)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc630)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc429)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc430)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc631)
                  cir.condition(%23) loc(#loc431)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc433)
                    %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc434)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc633)
                  } loc(#loc632)
                  cir.yield loc(#loc426)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc435)
                  %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc436)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc634)
                  cir.yield loc(#loc629)
                } loc(#loc629)
              } loc(#loc629)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc437)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc438)
            } loc(#loc627)
          } loc(#loc625)
        } loc(#loc621)
      } loc(#loc620)
    } loc(#loc618)
    cir.return loc(#loc390)
  } loc(#loc611)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_14.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":54:31)
#loc12 = loc("/usr/include/stdio.h":468:1)
#loc13 = loc("/usr/include/stdio.h":468:12)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":65:30)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":28:1)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":78:1)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":30:5)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":30:12)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":31:5)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":31:28)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":32:12)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":32:5)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":33:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":60:5)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":33:8)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":33:20)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":34:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":35:9)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":59:9)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":37:13)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":37:41)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":37:30)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":37:37)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":39:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":58:13)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":39:17)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":39:21)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":39:31)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":40:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":42:17)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":57:17)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":42:27)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":42:32)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":42:31)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":42:47)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":42:51)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":42:61)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":42:21)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":42:71)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":43:17)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":51:17)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":53:17)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":46:31)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":46:38)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":46:21)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":46:42)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":47:21)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":50:21)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":47:25)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":47:35)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":47:37)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":47:40)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":47:45)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":47:53)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":47:54)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":47:59)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":48:21)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":49:43)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":49:25)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":49:30)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":49:38)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":49:39)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":54:21)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":56:37)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":56:21)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":56:26)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":56:33)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":61:5)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":77:5)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":61:8)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":61:20)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":62:5)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":63:9)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":76:9)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":64:13)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":64:17)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":64:20)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":64:23)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":65:13)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":75:13)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":65:17)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":65:24)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":65:43)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":66:13)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":68:31)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":68:17)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":69:17)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":73:17)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":69:26)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":69:22)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":69:29)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":69:33)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":69:31)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":70:17)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":72:32)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":72:21)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":69:37)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":69:36)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":74:30)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":74:17)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":266:1)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":272:1)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":268:5)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":268:14)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":269:5)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":269:14)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":270:5)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":270:14)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":271:5)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":271:14)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":121:19)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":85:1)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":143:1)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":87:5)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":87:12)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":88:5)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":88:28)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":89:12)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":89:5)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":90:5)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":117:5)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":90:8)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":90:20)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":91:5)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":92:9)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":116:9)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":94:13)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":94:41)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":94:30)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":94:37)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":96:13)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":115:13)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":96:17)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":96:21)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":96:31)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":97:13)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":99:17)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":114:17)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":99:27)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":99:32)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":99:31)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":99:47)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":99:51)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":99:61)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":99:21)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":99:71)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":100:17)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":108:17)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":110:17)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":103:31)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":103:38)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":103:21)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":103:42)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":104:21)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":107:21)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":104:25)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":104:35)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":104:37)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":104:40)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":104:45)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":104:53)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":104:54)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":104:59)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":105:21)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":106:43)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":106:25)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":106:30)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":106:38)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":106:39)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":111:31)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":111:21)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":113:37)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":113:21)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":113:26)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":113:33)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":118:5)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":142:5)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":118:8)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":118:20)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":119:5)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":122:5)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":124:5)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":121:9)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":125:9)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":141:9)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":126:13)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":126:17)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":126:20)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":126:23)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":127:13)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":140:13)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":127:17)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":127:24)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":127:30)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":127:43)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":128:13)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":130:17)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":139:17)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":130:21)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":130:25)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":131:17)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":132:35)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":132:21)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":133:21)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":137:21)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":133:30)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":133:26)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":133:33)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":133:37)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":133:35)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":134:21)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":136:36)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":136:25)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":133:41)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":133:40)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":138:34)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":138:21)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":146:1)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":199:1)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":148:5)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":148:12)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":149:5)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":149:28)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":150:12)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":150:5)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":151:5)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":178:5)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":151:8)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":151:20)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":152:5)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":153:9)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":177:9)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":155:13)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":155:41)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":155:30)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":155:37)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":157:13)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":176:13)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":157:17)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":157:21)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":157:31)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":158:13)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":160:17)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":175:17)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":160:27)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":160:32)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":160:31)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":160:47)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":160:51)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":160:61)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":160:21)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":160:71)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":161:17)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":169:17)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":171:17)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":164:31)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":164:38)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":164:21)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":164:42)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":165:21)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":168:21)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":165:25)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":165:35)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":165:37)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":165:40)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":165:45)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":165:53)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":165:54)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":165:59)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":166:21)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":167:43)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":167:25)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":167:30)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":167:38)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":167:39)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":172:31)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":172:21)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":174:37)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":174:21)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":174:26)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":174:33)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":179:5)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":198:5)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":179:8)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":179:20)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":180:5)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":181:9)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":197:9)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":182:13)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":182:17)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":182:20)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":182:23)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":183:13)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":196:13)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":183:17)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":183:24)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":183:30)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":183:43)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":184:13)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":186:17)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":195:17)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":186:21)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":186:25)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":187:17)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":188:35)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":188:21)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":189:21)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":193:21)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":189:30)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":189:26)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":189:33)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":189:37)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":189:35)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":190:21)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":192:36)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":192:25)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":189:41)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":189:40)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":194:34)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":194:21)
#loc333 = loc("/usr/include/string.h":141:1)
#loc334 = loc("/usr/include/string.h":142:14)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":215:22)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":202:1)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":234:1)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":204:5)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":204:12)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":205:5)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":205:28)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":206:12)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":206:5)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":207:5)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":216:5)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":207:8)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":207:20)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":208:5)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":211:5)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":213:5)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":210:19)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":210:9)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":215:9)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":215:16)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":217:5)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":233:5)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":217:8)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":217:20)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":218:5)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":219:9)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":232:9)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":220:13)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":220:17)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":220:20)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":220:23)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":221:13)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":231:13)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":221:17)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":221:24)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":221:30)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":221:43)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":222:13)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":224:31)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":224:17)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":225:17)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":229:17)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":225:26)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":225:22)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":225:29)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":225:33)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":225:31)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":226:17)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":228:32)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":228:21)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":225:37)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":225:36)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":230:30)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":230:17)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":237:1)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":264:1)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":239:5)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":239:12)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":240:5)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":240:28)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":241:12)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":241:5)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":242:5)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":246:5)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":242:8)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":242:20)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":243:5)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":245:9)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":245:16)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":245:22)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":247:5)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":263:5)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":247:8)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":247:20)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":248:5)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":249:9)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":262:9)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":250:13)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":250:17)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":250:20)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":250:23)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":251:13)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":261:13)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":251:17)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":251:24)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":251:30)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":251:43)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":252:13)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":254:31)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":254:17)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":255:17)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":259:17)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":255:26)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":255:22)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":255:29)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":255:33)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":255:31)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":256:17)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":258:32)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":258:21)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":255:37)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":255:36)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":260:30)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_console_14.c":260:17)
#loc439 = loc(fused[#loc1, #loc2])
#loc440 = loc(fused[#loc3, #loc4])
#loc441 = loc(fused[#loc5, #loc6])
#loc442 = loc(fused[#loc7, #loc8])
#loc443 = loc(fused[#loc9, #loc10])
#loc444 = loc(fused[#loc12, #loc13])
#loc445 = loc(fused[#loc15, #loc16])
#loc446 = loc(fused[#loc17, #loc18])
#loc447 = loc(fused[#loc19, #loc20])
#loc448 = loc(fused[#loc21, #loc22])
#loc449 = loc(fused[#loc24, #loc23])
#loc450 = loc(fused[#loc25, #loc26])
#loc451 = loc(fused[#loc27, #loc28])
#loc452 = loc(fused[#loc29, #loc26])
#loc453 = loc(fused[#loc30, #loc31])
#loc454 = loc(fused[#loc32, #loc33])
#loc455 = loc(fused[#loc36, #loc37])
#loc456 = loc(fused[#loc38, #loc39])
#loc457 = loc(fused[#loc38, #loc40])
#loc458 = loc(fused[#loc41, #loc37])
#loc459 = loc(fused[#loc42, #loc43])
#loc460 = loc(fused[#loc47, #loc48])
#loc461 = loc(fused[#loc50, #loc51])
#loc462 = loc(fused[#loc52, #loc53, #loc54, #loc43])
#loc463 = loc(fused[#loc57, #loc58])
#loc464 = loc(fused[#loc59, #loc60])
#loc465 = loc(fused[#loc61, #loc62])
#loc466 = loc(fused[#loc65, #loc66])
#loc467 = loc(fused[#loc64, #loc68])
#loc468 = loc(fused[#loc69, #loc60])
#loc469 = loc(fused[#loc72, #loc73])
#loc470 = loc(fused[#loc71, #loc70])
#loc471 = loc(fused[#loc77, #loc76])
#loc472 = loc(fused[#loc80, #loc81])
#loc473 = loc(fused[#loc82, #loc83])
#loc474 = loc(fused[#loc84, #loc81])
#loc475 = loc(fused[#loc85, #loc86])
#loc476 = loc(fused[#loc87, #loc88])
#loc477 = loc(fused[#loc87, #loc89])
#loc478 = loc(fused[#loc87, #loc90])
#loc479 = loc(fused[#loc91, #loc92])
#loc480 = loc(fused[#loc93, #loc95])
#loc481 = loc(fused[#loc96, #loc92])
#loc482 = loc(fused[#loc98, #loc97])
#loc483 = loc(fused[#loc99, #loc100])
#loc484 = loc(fused[#loc102, #loc101])
#loc485 = loc(fused[#loc103, #loc104])
#loc486 = loc(fused[#loc106, #loc100])
#loc487 = loc(fused[#loc108, #loc107])
#loc488 = loc(fused[#loc110, #loc109])
#loc489 = loc(fused[#loc113, #loc114])
#loc490 = loc(fused[#loc115, #loc116])
#loc491 = loc(fused[#loc117, #loc118])
#loc492 = loc(fused[#loc119, #loc120])
#loc493 = loc(fused[#loc121, #loc122])
#loc494 = loc(fused[#loc124, #loc125])
#loc495 = loc(fused[#loc126, #loc127])
#loc496 = loc(fused[#loc128, #loc129])
#loc497 = loc(fused[#loc131, #loc130])
#loc498 = loc(fused[#loc132, #loc133])
#loc499 = loc(fused[#loc134, #loc135])
#loc500 = loc(fused[#loc136, #loc133])
#loc501 = loc(fused[#loc137, #loc138])
#loc502 = loc(fused[#loc139, #loc140])
#loc503 = loc(fused[#loc143, #loc144])
#loc504 = loc(fused[#loc145, #loc146])
#loc505 = loc(fused[#loc145, #loc147])
#loc506 = loc(fused[#loc148, #loc144])
#loc507 = loc(fused[#loc149, #loc150])
#loc508 = loc(fused[#loc154, #loc155])
#loc509 = loc(fused[#loc157, #loc158])
#loc510 = loc(fused[#loc159, #loc160, #loc161, #loc150])
#loc511 = loc(fused[#loc164, #loc165])
#loc512 = loc(fused[#loc166, #loc167])
#loc513 = loc(fused[#loc168, #loc169])
#loc514 = loc(fused[#loc172, #loc173])
#loc515 = loc(fused[#loc171, #loc175])
#loc516 = loc(fused[#loc176, #loc167])
#loc517 = loc(fused[#loc179, #loc180])
#loc518 = loc(fused[#loc178, #loc177])
#loc519 = loc(fused[#loc185, #loc184])
#loc520 = loc(fused[#loc188, #loc189])
#loc521 = loc(fused[#loc190, #loc191])
#loc522 = loc(fused[#loc192, #loc193, #loc194, #loc189])
#loc523 = loc(fused[#loc196, #loc197])
#loc524 = loc(fused[#loc198, #loc199])
#loc525 = loc(fused[#loc198, #loc200])
#loc526 = loc(fused[#loc198, #loc201])
#loc527 = loc(fused[#loc202, #loc203])
#loc528 = loc(fused[#loc204, #loc207])
#loc529 = loc(fused[#loc208, #loc203])
#loc530 = loc(fused[#loc209, #loc210])
#loc531 = loc(fused[#loc211, #loc212])
#loc532 = loc(fused[#loc213, #loc210])
#loc533 = loc(fused[#loc215, #loc214])
#loc534 = loc(fused[#loc216, #loc217])
#loc535 = loc(fused[#loc219, #loc218])
#loc536 = loc(fused[#loc220, #loc221])
#loc537 = loc(fused[#loc223, #loc217])
#loc538 = loc(fused[#loc225, #loc224])
#loc539 = loc(fused[#loc227, #loc226])
#loc540 = loc(fused[#loc230, #loc231])
#loc541 = loc(fused[#loc232, #loc233])
#loc542 = loc(fused[#loc234, #loc235])
#loc543 = loc(fused[#loc237, #loc236])
#loc544 = loc(fused[#loc238, #loc239])
#loc545 = loc(fused[#loc240, #loc241])
#loc546 = loc(fused[#loc242, #loc239])
#loc547 = loc(fused[#loc243, #loc244])
#loc548 = loc(fused[#loc245, #loc246])
#loc549 = loc(fused[#loc249, #loc250])
#loc550 = loc(fused[#loc251, #loc252])
#loc551 = loc(fused[#loc251, #loc253])
#loc552 = loc(fused[#loc254, #loc250])
#loc553 = loc(fused[#loc255, #loc256])
#loc554 = loc(fused[#loc260, #loc261])
#loc555 = loc(fused[#loc263, #loc264])
#loc556 = loc(fused[#loc265, #loc266, #loc267, #loc256])
#loc557 = loc(fused[#loc270, #loc271])
#loc558 = loc(fused[#loc272, #loc273])
#loc559 = loc(fused[#loc274, #loc275])
#loc560 = loc(fused[#loc278, #loc279])
#loc561 = loc(fused[#loc277, #loc281])
#loc562 = loc(fused[#loc282, #loc273])
#loc563 = loc(fused[#loc285, #loc286])
#loc564 = loc(fused[#loc284, #loc283])
#loc565 = loc(fused[#loc291, #loc290])
#loc566 = loc(fused[#loc294, #loc295])
#loc567 = loc(fused[#loc296, #loc297])
#loc568 = loc(fused[#loc298, #loc295])
#loc569 = loc(fused[#loc299, #loc300])
#loc570 = loc(fused[#loc301, #loc302])
#loc571 = loc(fused[#loc301, #loc303])
#loc572 = loc(fused[#loc301, #loc304])
#loc573 = loc(fused[#loc305, #loc306])
#loc574 = loc(fused[#loc307, #loc310])
#loc575 = loc(fused[#loc311, #loc306])
#loc576 = loc(fused[#loc312, #loc313])
#loc577 = loc(fused[#loc314, #loc315])
#loc578 = loc(fused[#loc316, #loc313])
#loc579 = loc(fused[#loc318, #loc317])
#loc580 = loc(fused[#loc319, #loc320])
#loc581 = loc(fused[#loc322, #loc321])
#loc582 = loc(fused[#loc323, #loc324])
#loc583 = loc(fused[#loc326, #loc320])
#loc584 = loc(fused[#loc328, #loc327])
#loc585 = loc(fused[#loc330, #loc329])
#loc586 = loc(fused[#loc333, #loc334])
#loc587 = loc(fused[#loc336, #loc337])
#loc588 = loc(fused[#loc338, #loc339])
#loc589 = loc(fused[#loc340, #loc341])
#loc590 = loc(fused[#loc343, #loc342])
#loc591 = loc(fused[#loc344, #loc345])
#loc592 = loc(fused[#loc346, #loc347])
#loc593 = loc(fused[#loc348, #loc349, #loc350, #loc345])
#loc594 = loc(fused[#loc355, #loc356])
#loc595 = loc(fused[#loc357, #loc358])
#loc596 = loc(fused[#loc359, #loc356])
#loc597 = loc(fused[#loc360, #loc361])
#loc598 = loc(fused[#loc362, #loc363])
#loc599 = loc(fused[#loc362, #loc364])
#loc600 = loc(fused[#loc362, #loc365])
#loc601 = loc(fused[#loc366, #loc367])
#loc602 = loc(fused[#loc368, #loc371])
#loc603 = loc(fused[#loc372, #loc367])
#loc604 = loc(fused[#loc374, #loc373])
#loc605 = loc(fused[#loc375, #loc376])
#loc606 = loc(fused[#loc378, #loc377])
#loc607 = loc(fused[#loc379, #loc380])
#loc608 = loc(fused[#loc382, #loc376])
#loc609 = loc(fused[#loc384, #loc383])
#loc610 = loc(fused[#loc386, #loc385])
#loc611 = loc(fused[#loc389, #loc390])
#loc612 = loc(fused[#loc391, #loc392])
#loc613 = loc(fused[#loc393, #loc394])
#loc614 = loc(fused[#loc396, #loc395])
#loc615 = loc(fused[#loc397, #loc398])
#loc616 = loc(fused[#loc399, #loc400])
#loc617 = loc(fused[#loc401, #loc398])
#loc618 = loc(fused[#loc405, #loc406])
#loc619 = loc(fused[#loc407, #loc408])
#loc620 = loc(fused[#loc409, #loc406])
#loc621 = loc(fused[#loc410, #loc411])
#loc622 = loc(fused[#loc412, #loc413])
#loc623 = loc(fused[#loc412, #loc414])
#loc624 = loc(fused[#loc412, #loc415])
#loc625 = loc(fused[#loc416, #loc417])
#loc626 = loc(fused[#loc418, #loc421])
#loc627 = loc(fused[#loc422, #loc417])
#loc628 = loc(fused[#loc424, #loc423])
#loc629 = loc(fused[#loc425, #loc426])
#loc630 = loc(fused[#loc428, #loc427])
#loc631 = loc(fused[#loc429, #loc430])
#loc632 = loc(fused[#loc432, #loc426])
#loc633 = loc(fused[#loc434, #loc433])
#loc634 = loc(fused[#loc436, #loc435])
