!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":27:12)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":94:10)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":94:14)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":94:20)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":94:32)
#loc154 = loc(fused[#loc66, #loc67])
#loc155 = loc(fused[#loc68, #loc69])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc130)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc132)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc135)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc136)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc137)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc138)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc20)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc22)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %10 ^bb1, ^bb2 loc(#loc22)
  ^bb1:  // pred: ^bb0
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc22)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc22)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc22)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc22)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc22)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc22)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc22)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc22)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc22)
    cir.br ^bb3(%22 : !u32i) loc(#loc22)
  ^bb2:  // pred: ^bb0
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc22)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc22)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc22)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc22)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc22)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc22)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc22)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc22)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc22)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc22)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc22)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc22)
    cir.br ^bb3(%38 : !u32i) loc(#loc22)
  ^bb3(%39: !u32i loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":27:12)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc22)
    cir.store %40, %4 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.br ^bb5 loc(#loc141)
  ^bb5:  // pred: ^bb4
    %41 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %41, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    cir.store %42, %1 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    cir.br ^bb6 loc(#loc142)
  ^bb6:  // pred: ^bb5
    %43 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc137)
    cir.store %43, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc137)
    %44 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    %46 = cir.const #cir.int<65> : !s32i loc(#loc29)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %49 = cir.binop(sub, %47, %48) nsw : !s32i loc(#loc30)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc30)
    cir.libc.memset %50 bytes from %45 set to %46 : !cir.ptr<!void>, !s32i, !u64i loc(#loc143)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc34)
    %53 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc35)
    %56 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %52, %57 : !s8i, !cir.ptr<!s8i> loc(#loc144)
    cir.br ^bb7 loc(#loc145)
  ^bb7:  // pred: ^bb6
    %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %59 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %60 = cir.cmp(lt, %58, %59) : !s32i, !cir.bool loc(#loc146)
    cir.brcond %60 ^bb8, ^bb9 loc(#loc147)
  ^bb8:  // pred: ^bb7
    %61 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc43)
    %62 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    %63 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc46)
    %66 = cir.call @strncpy(%62, %63, %65) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %68 = cir.cast(integral, %67 : !s32i), !s8i loc(#loc47)
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %70 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc49)
    cir.store %68, %71 : !s8i, !cir.ptr<!s8i> loc(#loc148)
    cir.br ^bb9 loc(#loc39)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc25)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc8)
  } loc(#loc133)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc53)
  } loc(#loc149)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc151)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc63)
  cir.func @main(%arg0: !s32i loc(fused[#loc66, #loc67]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc68, #loc69])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc72)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc72)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc73)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc60)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31_good() : () -> () loc(#loc75)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc61)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31_bad() : () -> () loc(#loc79)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.return %17 : !s32i loc(#loc158)
  } loc(#loc153)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc161)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc162)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc163)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc164)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc97)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc99)
    cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb1 loc(#loc167)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb2 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc163)
    cir.store %12, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc163)
    %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    %15 = cir.const #cir.int<65> : !s32i loc(#loc107)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc108)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc108)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc112)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc113)
    %25 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    cir.br ^bb3 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc119)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc172)
    cir.brcond %29 ^bb4, ^bb5 loc(#loc173)
  ^bb4:  // pred: ^bb3
    %30 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc121)
    %31 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
    %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc124)
    %35 = cir.call @strncpy(%31, %32, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc121)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc125)
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %39 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    cir.br ^bb5 loc(#loc117)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc117)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc103)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc85)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":21:1)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":46:1)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":29:9)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":29:24)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":30:9)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":30:20)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":32:13)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":32:28)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":33:13)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":33:30)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":23:5)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":23:9)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":25:13)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":25:12)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":25:5)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":27:5)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":28:5)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":45:5)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":31:9)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":44:9)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":34:20)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":34:28)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":34:33)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":34:37)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":34:13)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":34:38)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":35:29)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":35:20)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":35:24)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":35:13)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":36:13)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":42:13)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":36:17)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":36:24)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":37:13)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":40:17)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":40:25)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":40:31)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":40:39)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":41:30)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":41:22)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":41:17)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":43:23)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":43:13)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":80:1)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":83:1)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":82:5)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":82:13)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":99:15)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":101:15)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":104:15)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":106:15)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":94:1)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":109:1)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":95:1)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":97:27)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":97:22)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":97:5)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":99:5)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":100:5)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":100:70)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":101:5)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":104:5)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":105:5)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":105:69)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":106:5)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":108:12)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":108:5)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":53:1)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":78:1)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":61:9)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":61:24)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":62:9)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":62:20)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":64:13)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":64:28)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":65:13)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":65:30)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":55:5)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":55:9)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":57:13)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":57:12)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":57:5)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":59:12)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":59:16)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":59:5)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":60:5)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":77:5)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":63:9)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":76:9)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":66:20)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":66:28)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":66:33)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":66:37)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":66:13)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":66:38)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":67:29)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":67:20)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":67:24)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":67:13)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":68:13)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":74:13)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":68:17)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":68:24)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":69:13)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":72:17)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":72:25)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":72:31)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":72:39)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":73:30)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":73:22)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":73:17)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":75:23)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_31.c":75:13)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc7, #loc8])
#loc134 = loc(fused[#loc9, #loc10])
#loc135 = loc(fused[#loc11, #loc12])
#loc136 = loc(fused[#loc13, #loc14])
#loc137 = loc(fused[#loc15, #loc16])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc21, #loc19])
#loc140 = loc(fused[#loc23, #loc22])
#loc141 = loc(fused[#loc24, #loc25])
#loc142 = loc(fused[#loc26, #loc27])
#loc143 = loc(fused[#loc32, #loc33])
#loc144 = loc(fused[#loc37, #loc34])
#loc145 = loc(fused[#loc38, #loc39])
#loc146 = loc(fused[#loc40, #loc41])
#loc147 = loc(fused[#loc42, #loc39])
#loc148 = loc(fused[#loc49, #loc47])
#loc149 = loc(fused[#loc52, #loc53])
#loc150 = loc(fused[#loc54, #loc55])
#loc151 = loc(fused[#loc56, #loc57])
#loc152 = loc(fused[#loc58, #loc59])
#loc153 = loc(fused[#loc64, #loc65])
#loc156 = loc(fused[#loc75, #loc76])
#loc157 = loc(fused[#loc79, #loc80])
#loc158 = loc(fused[#loc83, #loc82])
#loc159 = loc(fused[#loc84, #loc85])
#loc160 = loc(fused[#loc86, #loc87])
#loc161 = loc(fused[#loc88, #loc89])
#loc162 = loc(fused[#loc90, #loc91])
#loc163 = loc(fused[#loc92, #loc93])
#loc164 = loc(fused[#loc94, #loc95])
#loc165 = loc(fused[#loc98, #loc96])
#loc166 = loc(fused[#loc101, #loc100])
#loc167 = loc(fused[#loc102, #loc103])
#loc168 = loc(fused[#loc104, #loc105])
#loc169 = loc(fused[#loc110, #loc111])
#loc170 = loc(fused[#loc115, #loc112])
#loc171 = loc(fused[#loc116, #loc117])
#loc172 = loc(fused[#loc118, #loc119])
#loc173 = loc(fused[#loc120, #loc117])
#loc174 = loc(fused[#loc127, #loc125])
