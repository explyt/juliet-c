!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":26:23)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":26:32)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":49:27)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":49:36)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":68:27)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":68:36)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":110:10)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":110:14)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":110:20)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":110:32)
#loc119 = loc(fused[#loc9, #loc10])
#loc127 = loc(fused[#loc33, #loc34])
#loc135 = loc(fused[#loc54, #loc55])
#loc149 = loc(fused[#loc99, #loc100])
#loc150 = loc(fused[#loc101, #loc102])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc115)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc117)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_43L9badSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc119)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc11)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc12)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc13)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc117)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc117)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc14)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc12)
    cir.return loc(#loc8)
  } loc(#loc118)
  cir.func private @printLongLongLine(!s64i) loc(#loc120)
  cir.func @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc23)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc124)
    cir.call @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_43L9badSourceERl(%1) : (!cir.ptr<!s64i>) -> () loc(#loc25)
    cir.br ^bb1 loc(#loc125)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc28)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc20)
    %6 = cir.binop(add, %3, %5) nsw : !s64i loc(#loc28)
    cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc122)
    %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc29)
    cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc30)
    cir.br ^bb2 loc(#loc27)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc18)
  } loc(#loc121)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_43L13goodG2BSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc33, #loc34])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc127)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc35)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %2 = cir.cast(integral, %1 : !s32i), !s64i loc(#loc36)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
    cir.store %2, %3 : !s64i, !cir.ptr<!s64i> loc(#loc128)
    cir.return loc(#loc32)
  } loc(#loc126)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc44)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc132)
    cir.call @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_43L13goodG2BSourceERl(%1) : (!cir.ptr<!s64i>) -> () loc(#loc46)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc49)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc41)
    %6 = cir.binop(add, %3, %5) nsw : !s64i loc(#loc49)
    cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc130)
    %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc50)
    cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc51)
    cir.br ^bb2 loc(#loc48)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc39)
  } loc(#loc129)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_43L13goodB2GSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc54, #loc55])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc135)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc56)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc57)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc136)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc136)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc61)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc57)
    cir.return loc(#loc53)
  } loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc62)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc69)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc140)
    cir.call @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_43L13goodB2GSourceERl(%1) : (!cir.ptr<!s64i>) -> () loc(#loc71)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc74)
    %4 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc75)
    %5 = cir.cmp(lt, %3, %4) : !s64i, !cir.bool loc(#loc142)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc143)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc79)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc66)
    %9 = cir.binop(add, %6, %8) nsw : !s64i loc(#loc79)
    cir.store %9, %0 : !s64i, !cir.ptr<!s64i> loc(#loc138)
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc80)
    cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc81)
    cir.br ^bb4 loc(#loc77)
  ^bb3:  // pred: ^bb1
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc64)
  } loc(#loc137)
  cir.func @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_434goodEv() extra(#fn_attr) {
    cir.call @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_43L7goodG2BEv() : () -> () loc(#loc85)
    cir.call @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_43L7goodB2GEv() : () -> () loc(#loc86)
    cir.return loc(#loc84)
  } loc(#loc144)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc145)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc96)
  cir.func @main(%arg0: !s32i loc(fused[#loc99, #loc100]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc101, #loc102])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc98)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc103)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc104)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc105)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc105)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc106)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc93)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.call @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_434goodEv() : () -> () loc(#loc108)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc95)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.call @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_433badEv() : () -> () loc(#loc111)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc96)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc113)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.return %15 : !s32i loc(#loc151)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":29:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":29:24)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":26:1)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":30:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":27:1)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":29:5)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":29:13)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":29:33)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":32:1)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":42:1)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":39:9)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":39:33)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":34:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":34:13)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":35:12)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":35:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":36:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":37:5)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":41:5)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":39:26)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":40:27)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":40:9)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":49:1)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":53:1)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":50:1)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":52:12)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":52:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":55:1)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":65:1)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":62:9)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":62:33)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":57:5)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":57:13)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":58:12)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":58:5)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":59:5)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":60:5)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":64:5)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":62:26)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":63:27)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":63:9)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":68:1)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":72:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":69:1)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":71:5)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":71:13)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":71:20)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":71:24)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":71:33)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":87:19)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":74:1)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":89:1)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":82:9)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":82:33)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":76:5)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":76:13)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":77:12)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":77:5)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":78:5)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":80:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":88:5)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":80:9)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":80:16)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":81:5)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":84:5)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":86:5)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":82:26)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":83:27)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":83:9)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":87:9)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":91:1)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":95:1)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":93:5)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":94:5)
#loc87 = loc("/usr/include/stdlib.h":575:1)
#loc88 = loc("/usr/include/stdlib.h":575:41)
#loc89 = loc("/usr/include/time.h":76:1)
#loc90 = loc("/usr/include/time.h":76:38)
#loc91 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc92 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":115:15)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":117:15)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":120:15)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":122:15)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":110:1)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":125:1)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":111:1)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":113:27)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":113:22)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":113:5)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":115:5)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":116:5)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":117:5)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":120:5)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":121:5)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":122:5)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":124:12)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_43.cpp":124:5)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc17, #loc18])
#loc122 = loc(fused[#loc19, #loc20])
#loc123 = loc(fused[#loc21, #loc22])
#loc124 = loc(fused[#loc24, #loc23])
#loc125 = loc(fused[#loc26, #loc27])
#loc126 = loc(fused[#loc31, #loc32])
#loc128 = loc(fused[#loc37, #loc36])
#loc129 = loc(fused[#loc38, #loc39])
#loc130 = loc(fused[#loc40, #loc41])
#loc131 = loc(fused[#loc42, #loc43])
#loc132 = loc(fused[#loc45, #loc44])
#loc133 = loc(fused[#loc47, #loc48])
#loc134 = loc(fused[#loc52, #loc53])
#loc136 = loc(fused[#loc59, #loc60])
#loc137 = loc(fused[#loc63, #loc64])
#loc138 = loc(fused[#loc65, #loc66])
#loc139 = loc(fused[#loc67, #loc68])
#loc140 = loc(fused[#loc70, #loc69])
#loc141 = loc(fused[#loc72, #loc73])
#loc142 = loc(fused[#loc74, #loc75])
#loc143 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc144 = loc(fused[#loc83, #loc84])
#loc145 = loc(fused[#loc87, #loc88])
#loc146 = loc(fused[#loc89, #loc90])
#loc147 = loc(fused[#loc91, #loc92])
#loc148 = loc(fused[#loc97, #loc98])
#loc151 = loc(fused[#loc114, #loc113])
