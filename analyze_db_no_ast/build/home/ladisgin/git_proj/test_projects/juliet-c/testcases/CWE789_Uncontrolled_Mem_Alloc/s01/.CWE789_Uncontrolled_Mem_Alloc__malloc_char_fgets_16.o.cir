!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc228)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc229)
  cir.func private  @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc230)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc231)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc232)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc233)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc234)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc16)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc235)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc24)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc238)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc28)
        cir.condition(%4) loc(#loc28)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc241)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc241)
          cir.store %4, %3 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc241)
          cir.scope {
            %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc35)
            %6 = cir.const #cir.int<3> : !s32i loc(#loc36)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc36)
            %8 = cir.const #cir.int<8> : !u64i loc(#loc36)
            %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc36)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc36)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc36)
            %12 = cir.binop(add, %9, %11) : !u64i loc(#loc36)
            %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc36)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
            %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
            %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc243)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc40)
            cir.if %20 {
              %21 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc44)
              %22 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc45)
              %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc47)
              %25 = cir.call @strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc44)
              cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc245)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc50)
            } loc(#loc244)
          } loc(#loc242)
        } loc(#loc240)
        cir.break loc(#loc51)
      } loc(#loc239)
    } loc(#loc239)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc54)
        cir.condition(%4) loc(#loc54)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc248)
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc61)
            %5 = cir.const #cir.int<5> : !u64i loc(#loc250)
            %6 = cir.cmp(gt, %4, %5) : !u64i, !s32i loc(#loc251)
            %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc64)
            cir.if %7 {
              %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc68)
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc69)
              %10 = cir.const #cir.int<1> : !u64i loc(#loc253)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc254)
              %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc255)
              cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
              cir.scope {
                %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc258)
                %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc78)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc80)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc81)
                  %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc82)
                  cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
                } loc(#loc259)
              } loc(#loc257)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc83)
              %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
              %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc16)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc16)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
              %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc86)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc87)
              %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
            } else {
              %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc19)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc19)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc89)
            } loc(#loc252)
          } loc(#loc249)
        } loc(#loc247)
        cir.break loc(#loc90)
      } loc(#loc246)
    } loc(#loc246)
    cir.return loc(#loc21)
  } loc(#loc236)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    cir.return loc(#loc92)
  } loc(#loc260)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc97)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc264)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc102)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc265)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc106)
        cir.condition(%4) loc(#loc106)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc268)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc268)
          cir.store %4, %3 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc268)
          cir.scope {
            %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc113)
            %6 = cir.const #cir.int<3> : !s32i loc(#loc114)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc114)
            %8 = cir.const #cir.int<8> : !u64i loc(#loc114)
            %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc114)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc114)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc114)
            %12 = cir.binop(add, %9, %11) : !u64i loc(#loc114)
            %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc114)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc115)
            %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc116)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
            %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc270)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc118)
            cir.if %20 {
              %21 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc122)
              %22 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc123)
              %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc125)
              %25 = cir.call @strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc122)
              cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc272)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc128)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc128)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc129)
            } loc(#loc271)
          } loc(#loc269)
        } loc(#loc267)
        cir.break loc(#loc130)
      } loc(#loc266)
    } loc(#loc266)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc133)
        cir.condition(%4) loc(#loc133)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc275)
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc140)
            %5 = cir.const #cir.int<5> : !u64i loc(#loc277)
            %6 = cir.cmp(gt, %4, %5) : !u64i, !s32i loc(#loc278)
            %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc143)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc145)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc146)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc146)
              %12 = cir.cmp(lt, %9, %11) : !u64i, !s32i loc(#loc279)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc147)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc144)
                cir.yield %15 : !cir.bool loc(#loc144)
              }, false {
                %15 = cir.const #false loc(#loc144)
                cir.yield %15 : !cir.bool loc(#loc144)
              }) : (!cir.bool) -> !cir.bool loc(#loc144)
              cir.yield %14 : !cir.bool loc(#loc144)
            }, false {
              %9 = cir.const #false loc(#loc144)
              cir.yield %9 : !cir.bool loc(#loc144)
            }) : (!cir.bool) -> !cir.bool loc(#loc144)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc151)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc152)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc281)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc282)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc283)
              cir.store %14, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
              cir.scope {
                %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc160)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc286)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc161)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc163)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc164)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc165)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc163)
                } loc(#loc287)
              } loc(#loc285)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc166)
              %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
              %17 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc168)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc168)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
              %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc170)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc171)
              %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc172)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc171)
            } else {
              %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc97)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc97)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc173)
            } loc(#loc280)
          } loc(#loc276)
        } loc(#loc274)
        cir.break loc(#loc174)
      } loc(#loc273)
    } loc(#loc273)
    cir.return loc(#loc99)
  } loc(#loc263)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc289)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc179)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc179)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc290)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc183)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc183)
        cir.condition(%4) loc(#loc183)
      } do {
        %3 = cir.const #cir.int<20> : !s32i loc(#loc184)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc184)
        cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc292)
        cir.break loc(#loc186)
      } loc(#loc291)
    } loc(#loc291)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc189)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc189)
        cir.condition(%4) loc(#loc189)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc295)
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc196)
            %5 = cir.const #cir.int<5> : !u64i loc(#loc297)
            %6 = cir.cmp(gt, %4, %5) : !u64i, !s32i loc(#loc298)
            %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc199)
            cir.if %7 {
              %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc203)
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc204)
              %10 = cir.const #cir.int<1> : !u64i loc(#loc300)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc301)
              %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc203)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc302)
              cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
              cir.scope {
                %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc212)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc212)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc305)
                %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc213)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc215)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc216)
                  %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc217)
                  cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc215)
                } loc(#loc306)
              } loc(#loc304)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc218)
              %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
              %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc220)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc220)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
              %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc222)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc223)
              %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc224)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc223)
            } else {
              %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc225)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc225)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc226)
            } loc(#loc299)
          } loc(#loc296)
        } loc(#loc294)
        cir.break loc(#loc227)
      } loc(#loc293)
    } loc(#loc293)
    cir.return loc(#loc176)
  } loc(#loc288)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":181:1)
#loc6 = loc("/usr/include/stdlib.h":183:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":47:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/string.h":141:1)
#loc15 = loc("/usr/include/string.h":142:14)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":64:34)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":70:27)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":30:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":75:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":32:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":32:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":34:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":34:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":35:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":51:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":35:11)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":37:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":49:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":38:13)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":38:49)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":48:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:23)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:36)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:53)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:17)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:63)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:60)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":41:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":44:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":46:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:24)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:32)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:45)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:51)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:52)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":47:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":50:9)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":52:5)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":74:5)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":52:11)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":54:9)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":72:9)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":55:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":55:20)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":59:13)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":71:13)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":59:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":59:24)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":59:43)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":59:22)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":60:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":67:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":69:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:36)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:43)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:48)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:59)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:60)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:17)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:49)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:21)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:33)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:30)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:39)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:40)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:46)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:45)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":64:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":64:24)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":65:27)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":65:17)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":66:17)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":66:22)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":70:17)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":73:9)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":166:1)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":170:1)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":168:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":168:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":169:5)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":169:13)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":122:27)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":82:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":127:1)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":84:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":84:12)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":86:12)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":86:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":87:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":103:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":87:11)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":89:9)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":101:9)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":90:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":90:49)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":100:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:23)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:36)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:53)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:17)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:63)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:60)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":93:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":96:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":98:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:24)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:32)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:45)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:51)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:17)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:52)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":99:27)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":99:17)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":102:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":104:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":126:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":104:11)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":106:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":124:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":107:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":107:20)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":123:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:17)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:24)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:43)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:22)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:45)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:48)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:55)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:53)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":112:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":119:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":121:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:36)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:43)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:48)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:59)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:60)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:17)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:17)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:49)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:21)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:33)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:30)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:39)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:40)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:46)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:45)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":116:17)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":116:24)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":116:34)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":117:27)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":117:17)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":118:17)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":118:22)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":122:17)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":125:9)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":130:1)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":164:1)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":132:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":132:12)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":134:12)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":134:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":135:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":140:5)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":135:11)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":138:16)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":138:9)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":139:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":141:5)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":163:5)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":141:11)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":143:9)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":161:9)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":144:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":144:20)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":148:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":160:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":148:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":148:24)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":148:43)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":148:22)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":149:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":156:13)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":158:13)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:36)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:43)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:48)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:59)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:60)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:17)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:49)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:21)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:33)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:30)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:39)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:40)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:46)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:45)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":153:17)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":153:24)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":153:34)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":154:27)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":154:17)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":155:17)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":155:22)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":159:27)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":159:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":162:9)
#loc228 = loc(fused[#loc1, #loc2])
#loc229 = loc(fused[#loc3, #loc4])
#loc230 = loc(fused[#loc5, #loc6])
#loc231 = loc(fused[#loc7, #loc8])
#loc232 = loc(fused[#loc10, #loc11])
#loc233 = loc(fused[#loc12, #loc13])
#loc234 = loc(fused[#loc14, #loc15])
#loc235 = loc(fused[#loc17, #loc18])
#loc236 = loc(fused[#loc20, #loc21])
#loc237 = loc(fused[#loc22, #loc23])
#loc238 = loc(fused[#loc25, #loc24])
#loc239 = loc(fused[#loc26, #loc27])
#loc240 = loc(fused[#loc29, #loc30])
#loc241 = loc(fused[#loc31, #loc32])
#loc242 = loc(fused[#loc33, #loc34])
#loc243 = loc(fused[#loc38, #loc39])
#loc244 = loc(fused[#loc41, #loc42, #loc43, #loc34])
#loc245 = loc(fused[#loc48, #loc49])
#loc246 = loc(fused[#loc52, #loc53])
#loc247 = loc(fused[#loc55, #loc56])
#loc248 = loc(fused[#loc57, #loc58])
#loc249 = loc(fused[#loc59, #loc60])
#loc250 = loc(fused[#loc62, #loc63])
#loc251 = loc(fused[#loc61, #loc63])
#loc252 = loc(fused[#loc65, #loc66, #loc67, #loc60])
#loc253 = loc(fused[#loc70, #loc71])
#loc254 = loc(fused[#loc69, #loc71])
#loc255 = loc(fused[#loc68, #loc72])
#loc256 = loc(fused[#loc73, #loc72])
#loc257 = loc(fused[#loc74, #loc75])
#loc258 = loc(fused[#loc76, #loc77])
#loc259 = loc(fused[#loc79, #loc75])
#loc260 = loc(fused[#loc91, #loc92])
#loc261 = loc(fused[#loc93, #loc94])
#loc262 = loc(fused[#loc95, #loc96])
#loc263 = loc(fused[#loc98, #loc99])
#loc264 = loc(fused[#loc100, #loc101])
#loc265 = loc(fused[#loc103, #loc102])
#loc266 = loc(fused[#loc104, #loc105])
#loc267 = loc(fused[#loc107, #loc108])
#loc268 = loc(fused[#loc109, #loc110])
#loc269 = loc(fused[#loc111, #loc112])
#loc270 = loc(fused[#loc116, #loc117])
#loc271 = loc(fused[#loc119, #loc120, #loc121, #loc112])
#loc272 = loc(fused[#loc126, #loc127])
#loc273 = loc(fused[#loc131, #loc132])
#loc274 = loc(fused[#loc134, #loc135])
#loc275 = loc(fused[#loc136, #loc137])
#loc276 = loc(fused[#loc138, #loc139])
#loc277 = loc(fused[#loc141, #loc142])
#loc278 = loc(fused[#loc140, #loc142])
#loc279 = loc(fused[#loc145, #loc146])
#loc280 = loc(fused[#loc148, #loc149, #loc150, #loc139])
#loc281 = loc(fused[#loc153, #loc154])
#loc282 = loc(fused[#loc152, #loc154])
#loc283 = loc(fused[#loc151, #loc155])
#loc284 = loc(fused[#loc156, #loc155])
#loc285 = loc(fused[#loc157, #loc158])
#loc286 = loc(fused[#loc159, #loc160])
#loc287 = loc(fused[#loc162, #loc158])
#loc288 = loc(fused[#loc175, #loc176])
#loc289 = loc(fused[#loc177, #loc178])
#loc290 = loc(fused[#loc180, #loc179])
#loc291 = loc(fused[#loc181, #loc182])
#loc292 = loc(fused[#loc185, #loc184])
#loc293 = loc(fused[#loc187, #loc188])
#loc294 = loc(fused[#loc190, #loc191])
#loc295 = loc(fused[#loc192, #loc193])
#loc296 = loc(fused[#loc194, #loc195])
#loc297 = loc(fused[#loc197, #loc198])
#loc298 = loc(fused[#loc196, #loc198])
#loc299 = loc(fused[#loc200, #loc201, #loc202, #loc195])
#loc300 = loc(fused[#loc205, #loc206])
#loc301 = loc(fused[#loc204, #loc206])
#loc302 = loc(fused[#loc203, #loc207])
#loc303 = loc(fused[#loc208, #loc207])
#loc304 = loc(fused[#loc209, #loc210])
#loc305 = loc(fused[#loc211, #loc212])
#loc306 = loc(fused[#loc214, #loc210])
