!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @_ZL10staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc254)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc255)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc256)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc9)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc258)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc259)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc260)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc261)
  cir.func private @close(!s32i) -> !s32i loc(#loc262)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc22)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc264)
  cir.func @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_073badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc267)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc267)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc267)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
    cir.scope {
      %4 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc254)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc36)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc270)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc273)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc274)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc275)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc276)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc277)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc47)
          cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc276)
          %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc50)
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
          %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc50)
          cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc277)
          cir.scope {
            cir.do {
              cir.scope {
                %18 = cir.const #cir.int<2> : !s32i loc(#loc56)
                %19 = cir.const #cir.int<1> : !u32i loc(#loc57)
                %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc57)
                %21 = cir.const #cir.int<6> : !u32i loc(#loc58)
                %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc58)
                %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
                cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc280)
                cir.scope {
                  %73 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc65)
                  %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc65)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc282)
                  cir.if %76 {
                    cir.break loc(#loc67)
                  } loc(#loc283)
                } loc(#loc281)
                %24 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc284)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc70)
                %26 = cir.const #cir.int<16> : !u64i loc(#loc285)
                cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc286)
                %27 = cir.const #cir.int<2> : !s32i loc(#loc75)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc75)
                %29 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc287)
                %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc9)
                %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc9)
                %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc78)
                %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
                %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
                cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc288)
                %35 = cir.const #cir.int<27015> : !s32i loc(#loc83)
                %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc83)
                %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc84)
                %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
                cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc289)
                cir.scope {
                  %73 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                  %74 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc291)
                  %75 = cir.const #cir.int<16> : !u64i loc(#loc292)
                  %76 = cir.cast(integral, %75 : !u64i), !u32i loc(#loc292)
                  %77 = cir.call @connect(%73, %74, %76) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc95)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc96)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc96)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc293)
                  cir.if %80 {
                    cir.break loc(#loc98)
                  } loc(#loc294)
                } loc(#loc290)
                %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
                %41 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc101)
                %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc102)
                %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc295)
                %44 = cir.const #cir.int<1> : !u64i loc(#loc296)
                %45 = cir.const #cir.int<4096> : !s32i loc(#loc107)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc107)
                %47 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc108)
                %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc297)
                %49 = cir.const #cir.int<1> : !s32i loc(#loc109)
                %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc109)
                %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc298)
                %52 = cir.binop(mul, %44, %51) : !u64i loc(#loc299)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc111)
                %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
                %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc112)
                cir.store %55, %8 : !s32i, !cir.ptr<!s32i> loc(#loc300)
                cir.scope {
                  %73 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc118)
                  %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc118)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc302)
                  %77 = cir.ternary(%76, true {
                    %78 = cir.const #true loc(#loc119)
                    cir.yield %78 : !cir.bool loc(#loc119)
                  }, false {
                    %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                    %79 = cir.const #cir.int<0> : !s32i loc(#loc121)
                    %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc303)
                    %81 = cir.ternary(%80, true {
                      %82 = cir.const #true loc(#loc119)
                      cir.yield %82 : !cir.bool loc(#loc119)
                    }, false {
                      %82 = cir.const #false loc(#loc119)
                      cir.yield %82 : !cir.bool loc(#loc119)
                    }) : (!cir.bool) -> !cir.bool loc(#loc119)
                    cir.yield %81 : !cir.bool loc(#loc119)
                  }) : (!cir.bool) -> !cir.bool loc(#loc119)
                  cir.if %77 {
                    cir.break loc(#loc123)
                  } loc(#loc304)
                } loc(#loc301)
                %56 = cir.const #cir.int<0> : !s8i loc(#loc124)
                %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
                %58 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc126)
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc127)
                %61 = cir.const #cir.int<1> : !u64i loc(#loc305)
                %62 = cir.binop(div, %60, %61) : !u64i loc(#loc306)
                %63 = cir.binop(add, %58, %62) : !u64i loc(#loc307)
                %64 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %63 : !u64i), !cir.ptr<!s8i> loc(#loc130)
                cir.store %56, %64 : !s8i, !cir.ptr<!s8i> loc(#loc308)
                %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
                %66 = cir.const #cir.int<13> : !s8i loc(#loc132)
                %67 = cir.cast(integral, %66 : !s8i), !s32i loc(#loc132)
                %68 = cir.call @strchr(%65, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc133)
                cir.store %68, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc309)
                cir.scope {
                  %73 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                  %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc138)
                  cir.if %74 {
                    %75 = cir.const #cir.int<0> : !s8i loc(#loc140)
                    %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc312)
                  } loc(#loc311)
                } loc(#loc310)
                %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
                %70 = cir.const #cir.int<10> : !s8i loc(#loc144)
                %71 = cir.cast(integral, %70 : !s8i), !s32i loc(#loc144)
                %72 = cir.call @strchr(%69, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc145)
                cir.store %72, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc313)
                cir.scope {
                  %73 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                  %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc150)
                  cir.if %74 {
                    %75 = cir.const #cir.int<0> : !s8i loc(#loc152)
                    %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc316)
                  } loc(#loc315)
                } loc(#loc314)
              } loc(#loc279)
              cir.yield loc(#loc53)
            } while {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc155)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc155)
              cir.condition(%19) loc(#loc155)
            } loc(#loc278)
          } loc(#loc278)
          cir.scope {
            %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc158)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc159)
            %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc159)
            %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc318)
            cir.if %21 {
              %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc161)
              %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc162)
            } loc(#loc319)
          } loc(#loc317)
        } loc(#loc272)
      } loc(#loc271)
    } loc(#loc269)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc321)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc166)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc321)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc167)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc22)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc22)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc167)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc322)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc173)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc174)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc324)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc176)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc177)
        } loc(#loc325)
      } loc(#loc323)
    } loc(#loc320)
    cir.return loc(#loc26)
  } loc(#loc265)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc326)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc180)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc327)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc183)
  cir.func internal private @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc329)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc330)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc330)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc330)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc190)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc331)
    cir.scope {
      %4 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc254)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc194)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc195)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc333)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc180)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc180)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc199)
      } else {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc200)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
        %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc183)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc183)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc200)
      } loc(#loc334)
    } loc(#loc332)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc336)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc205)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc336)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc206)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc208)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc208)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc206)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc337)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc213)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc214)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc339)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc216)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc217)
        } loc(#loc340)
      } loc(#loc338)
    } loc(#loc335)
    cir.return loc(#loc185)
  } loc(#loc328)
  cir.func internal private @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc342)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc343)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc343)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc343)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc224)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc344)
    cir.scope {
      %4 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc254)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc228)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc229)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc346)
      cir.if %7 {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc231)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
        %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc233)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc233)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc231)
      } loc(#loc347)
    } loc(#loc345)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc349)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc237)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc349)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc238)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc240)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc240)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc238)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc350)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc245)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc246)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc352)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc248)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc249)
        } loc(#loc353)
      } loc(#loc351)
    } loc(#loc348)
    cir.return loc(#loc219)
  } loc(#loc341)
  cir.func @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_074goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07L8goodG2B1Ev() : () -> () loc(#loc252)
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07L8goodG2B2Ev() : () -> () loc(#loc253)
    cir.return loc(#loc251)
  } loc(#loc354)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":0:0)
#loc1 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":53:1)
#loc2 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":53:25)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc7 = loc("/usr/include/arpa/inet.h":34:1)
#loc8 = loc("/usr/include/arpa/inet.h":34:47)
#loc9 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":94:53)
#loc10 = loc("/usr/include/netinet/in.h":402:1)
#loc11 = loc("/usr/include/netinet/in.h":403:40)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc16 = loc("/usr/include/string.h":226:1)
#loc17 = loc("/usr/include/string.h":227:50)
#loc18 = loc("/usr/include/unistd.h":358:1)
#loc19 = loc("/usr/include/unistd.h":358:27)
#loc20 = loc("/usr/include/stdio.h":264:1)
#loc21 = loc("/usr/include/stdio.h":266:3)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":138:29)
#loc23 = loc("/usr/include/stdio.h":184:1)
#loc24 = loc("/usr/include/stdio.h":184:36)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":60:1)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":144:1)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":62:5)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":62:12)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":63:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":63:37)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":64:12)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":64:5)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":65:5)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":134:5)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":65:8)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":65:20)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":66:5)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":67:9)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":133:9)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":72:13)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":72:17)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":73:13)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":73:32)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":74:13)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":74:19)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":75:13)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":75:36)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":76:13)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":76:41)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":76:30)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":76:37)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":77:13)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":122:21)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":78:13)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":121:13)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":87:40)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":87:49)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":87:62)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":87:33)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":87:17)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":87:73)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":88:17)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":91:17)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":88:21)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":88:38)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":89:17)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":90:21)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":92:24)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":92:25)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":92:34)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":92:37)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":92:51)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":92:17)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":92:52)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":93:38)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":93:17)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":94:43)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":94:17)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":94:63)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":95:42)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":95:36)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":95:17)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":95:50)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":96:17)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":99:17)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":96:29)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":96:62)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":96:63)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":96:72)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":96:86)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":96:21)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":96:92)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":97:17)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":98:21)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:35)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:59)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:66)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:64)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:50)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:73)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:76)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:87)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:92)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:107)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:117)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:118)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:121)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:30)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:17)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":103:122)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":104:17)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":107:17)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":104:21)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":104:35)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":104:48)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":104:51)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":104:65)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":105:17)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":106:21)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":109:61)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":109:17)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":109:22)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":109:32)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":109:45)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":109:56)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":109:57)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":111:34)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":111:40)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":111:27)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":111:17)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":111:44)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":112:17)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":115:17)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":112:21)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":113:17)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":114:32)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":114:22)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":114:21)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":116:34)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":116:40)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":116:27)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":116:17)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":116:44)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":117:17)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":120:17)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":117:21)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":118:17)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":119:32)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":119:22)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":119:21)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":122:20)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":123:13)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":126:13)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":123:17)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":123:34)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":124:13)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":125:30)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":125:17)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":135:5)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":143:5)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":136:9)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":136:23)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":138:17)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":138:23)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":138:9)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":138:34)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":139:9)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":142:9)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":139:13)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":139:22)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":140:9)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":141:20)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":141:13)
#loc178 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc179 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":159:19)
#loc181 = loc("/usr/include/string.h":149:1)
#loc182 = loc("/usr/include/string.h":150:14)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":168:22)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":151:1)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":180:1)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":153:5)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":153:12)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":154:5)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":154:37)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":155:12)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":155:5)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":156:5)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":170:5)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":156:8)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":156:20)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":157:5)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":160:5)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":162:5)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":159:9)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":168:9)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":168:16)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":171:5)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":179:5)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":172:9)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":172:23)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":174:17)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":174:23)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":174:29)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":174:9)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":174:34)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":175:9)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":178:9)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":175:13)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":175:22)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":176:9)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":177:20)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":177:13)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":183:1)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":207:1)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":185:5)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":185:12)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":186:5)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":186:37)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":187:12)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":187:5)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":188:5)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":197:5)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":188:8)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":188:20)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":189:5)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":195:9)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":195:16)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":195:22)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":198:5)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":206:5)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":199:9)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":199:23)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":201:17)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":201:23)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":201:29)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":201:9)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":201:34)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":202:9)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":205:9)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":202:13)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":202:22)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":203:9)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":204:20)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":204:13)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":209:1)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":213:1)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":211:5)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_07.cpp":212:5)
#loc254 = loc(fused[#loc1, #loc2])
#loc255 = loc(fused[#loc3, #loc4])
#loc256 = loc(fused[#loc5, #loc6])
#loc257 = loc(fused[#loc7, #loc8])
#loc258 = loc(fused[#loc10, #loc11])
#loc259 = loc(fused[#loc12, #loc13])
#loc260 = loc(fused[#loc14, #loc15])
#loc261 = loc(fused[#loc16, #loc17])
#loc262 = loc(fused[#loc18, #loc19])
#loc263 = loc(fused[#loc20, #loc21])
#loc264 = loc(fused[#loc23, #loc24])
#loc265 = loc(fused[#loc25, #loc26])
#loc266 = loc(fused[#loc27, #loc28])
#loc267 = loc(fused[#loc29, #loc30])
#loc268 = loc(fused[#loc32, #loc31])
#loc269 = loc(fused[#loc33, #loc34])
#loc270 = loc(fused[#loc35, #loc36])
#loc271 = loc(fused[#loc37, #loc34])
#loc272 = loc(fused[#loc38, #loc39])
#loc273 = loc(fused[#loc40, #loc41])
#loc274 = loc(fused[#loc42, #loc43])
#loc275 = loc(fused[#loc44, #loc45])
#loc276 = loc(fused[#loc46, #loc47])
#loc277 = loc(fused[#loc48, #loc49])
#loc278 = loc(fused[#loc52, #loc53])
#loc279 = loc(fused[#loc54, #loc55])
#loc280 = loc(fused[#loc60, #loc61])
#loc281 = loc(fused[#loc62, #loc63])
#loc282 = loc(fused[#loc64, #loc65])
#loc283 = loc(fused[#loc66, #loc63])
#loc284 = loc(fused[#loc68, #loc69])
#loc285 = loc(fused[#loc71, #loc72])
#loc286 = loc(fused[#loc73, #loc74])
#loc287 = loc(fused[#loc77, #loc75])
#loc288 = loc(fused[#loc81, #loc82])
#loc289 = loc(fused[#loc86, #loc87])
#loc290 = loc(fused[#loc88, #loc89])
#loc291 = loc(fused[#loc91, #loc92])
#loc292 = loc(fused[#loc93, #loc94])
#loc293 = loc(fused[#loc95, #loc96])
#loc294 = loc(fused[#loc97, #loc89])
#loc295 = loc(fused[#loc103, #loc104])
#loc296 = loc(fused[#loc105, #loc106])
#loc297 = loc(fused[#loc107, #loc108])
#loc298 = loc(fused[#loc107, #loc109])
#loc299 = loc(fused[#loc105, #loc110])
#loc300 = loc(fused[#loc113, #loc114])
#loc301 = loc(fused[#loc115, #loc116])
#loc302 = loc(fused[#loc117, #loc118])
#loc303 = loc(fused[#loc120, #loc121])
#loc304 = loc(fused[#loc122, #loc116])
#loc305 = loc(fused[#loc128, #loc129])
#loc306 = loc(fused[#loc127, #loc129])
#loc307 = loc(fused[#loc126, #loc129])
#loc308 = loc(fused[#loc125, #loc124])
#loc309 = loc(fused[#loc134, #loc135])
#loc310 = loc(fused[#loc136, #loc137])
#loc311 = loc(fused[#loc139, #loc137])
#loc312 = loc(fused[#loc142, #loc140])
#loc313 = loc(fused[#loc146, #loc147])
#loc314 = loc(fused[#loc148, #loc149])
#loc315 = loc(fused[#loc151, #loc149])
#loc316 = loc(fused[#loc154, #loc152])
#loc317 = loc(fused[#loc156, #loc157])
#loc318 = loc(fused[#loc158, #loc159])
#loc319 = loc(fused[#loc160, #loc157])
#loc320 = loc(fused[#loc163, #loc164])
#loc321 = loc(fused[#loc165, #loc166])
#loc322 = loc(fused[#loc169, #loc170])
#loc323 = loc(fused[#loc171, #loc172])
#loc324 = loc(fused[#loc173, #loc174])
#loc325 = loc(fused[#loc175, #loc172])
#loc326 = loc(fused[#loc178, #loc179])
#loc327 = loc(fused[#loc181, #loc182])
#loc328 = loc(fused[#loc184, #loc185])
#loc329 = loc(fused[#loc186, #loc187])
#loc330 = loc(fused[#loc188, #loc189])
#loc331 = loc(fused[#loc191, #loc190])
#loc332 = loc(fused[#loc192, #loc193])
#loc333 = loc(fused[#loc194, #loc195])
#loc334 = loc(fused[#loc196, #loc197, #loc198, #loc193])
#loc335 = loc(fused[#loc202, #loc203])
#loc336 = loc(fused[#loc204, #loc205])
#loc337 = loc(fused[#loc209, #loc210])
#loc338 = loc(fused[#loc211, #loc212])
#loc339 = loc(fused[#loc213, #loc214])
#loc340 = loc(fused[#loc215, #loc212])
#loc341 = loc(fused[#loc218, #loc219])
#loc342 = loc(fused[#loc220, #loc221])
#loc343 = loc(fused[#loc222, #loc223])
#loc344 = loc(fused[#loc225, #loc224])
#loc345 = loc(fused[#loc226, #loc227])
#loc346 = loc(fused[#loc228, #loc229])
#loc347 = loc(fused[#loc230, #loc227])
#loc348 = loc(fused[#loc234, #loc235])
#loc349 = loc(fused[#loc236, #loc237])
#loc350 = loc(fused[#loc241, #loc242])
#loc351 = loc(fused[#loc243, #loc244])
#loc352 = loc(fused[#loc245, #loc246])
#loc353 = loc(fused[#loc247, #loc244])
#loc354 = loc(fused[#loc250, #loc251])
