!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":30:16)
#loc48 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":77:10)
#loc49 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":77:14)
#loc50 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":77:20)
#loc51 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":77:32)
#loc114 = loc(fused[#loc48, #loc49])
#loc115 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc94)
  cir.func private @printHexCharLine(!s8i) loc(#loc95)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_rand_to_char_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc97)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc98)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc99)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc14)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc18)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.br ^bb2 loc(#loc101)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc103)
    cir.brcond %8 ^bb3, ^bb11 loc(#loc22)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // pred: ^bb3
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %11 = cir.binop(and, %9, %10) : !s32i loc(#loc24)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc24)
  ^bb5:  // pred: ^bb4
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc24)
    %15 = cir.const #cir.int<30> : !s32i loc(#loc24)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc24)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc24)
    %19 = cir.const #cir.int<15> : !s32i loc(#loc24)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc24)
    %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc24)
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc24)
    %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc24)
    cir.br ^bb7(%24 : !u32i) loc(#loc24)
  ^bb6:  // pred: ^bb4
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc24)
    %27 = cir.const #cir.int<30> : !s32i loc(#loc24)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc24)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc24)
    %31 = cir.const #cir.int<15> : !s32i loc(#loc24)
    %32 = cir.shift(left, %30 : !u32i, %31 : !s32i) -> !u32i loc(#loc24)
    %33 = cir.binop(xor, %28, %32) : !u32i loc(#loc24)
    %34 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc24)
    %36 = cir.binop(xor, %33, %35) : !u32i loc(#loc24)
    %37 = cir.unary(minus, %36) : !u32i, !u32i loc(#loc24)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %39 = cir.cast(integral, %38 : !s32i), !u32i loc(#loc24)
    %40 = cir.binop(sub, %37, %39) : !u32i loc(#loc24)
    cir.br ^bb7(%40 : !u32i) loc(#loc24)
  ^bb7(%41: !u32i loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":30:16)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    %42 = cir.cast(integral, %41 : !u32i), !s32i loc(#loc24)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.br ^bb9 loc(#loc17)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    %43 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %44 = cir.unary(inc, %43) : !s32i, !s32i loc(#loc27)
    cir.store %44, %1 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.br ^bb2 loc(#loc101)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc17)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc107)
  ^bb13:  // pred: ^bb12
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc8)
    %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc8)
    cir.store %46, %0 : !s8i, !cir.ptr<!s8i> loc(#loc97)
    %47 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc30)
    cir.call @printHexCharLine(%47) : (!s8i) -> () loc(#loc31)
    cir.br ^bb14 loc(#loc29)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc6)
  } loc(#loc96)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_rand_to_char_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc108)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc110)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc111)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc45)
  cir.func @main(%arg0: !s32i loc(fused[#loc48, #loc49]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc50, #loc51])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc53)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc54)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc54)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc55)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc42)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %8 = cir.get_global @CWE197_Numeric_Truncation_Error__int_rand_to_char_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc116)
    cir.call @CWE197_Numeric_Truncation_Error__int_rand_to_char_17_good() : () -> () loc(#loc57)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc44)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %13 = cir.get_global @CWE197_Numeric_Truncation_Error__int_rand_to_char_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc117)
    cir.call @CWE197_Numeric_Truncation_Error__int_rand_to_char_17_bad() : () -> () loc(#loc61)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    cir.return %17 : !s32i loc(#loc118)
  } loc(#loc113)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc120)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc121)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc122)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc75)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.br ^bb2 loc(#loc124)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc126)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc83)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc127)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<127> : !s32i loc(#loc85)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc86)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc85)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.br ^bb5 loc(#loc78)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc78)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %13 = cir.unary(inc, %12) : !s32i, !s32i loc(#loc89)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.br ^bb2 loc(#loc124)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc78)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc130)
  ^bb9:  // pred: ^bb8
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc69)
    cir.store %15, %0 : !s8i, !cir.ptr<!s8i> loc(#loc120)
    %16 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc92)
    cir.call @printHexCharLine(%16) : (!s8i) -> () loc(#loc93)
    cir.br ^bb10 loc(#loc91)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc67)
  } loc(#loc119)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":21:1)
#loc6 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":37:1)
#loc7 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":34:9)
#loc8 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":34:31)
#loc9 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":23:5)
#loc10 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":23:9)
#loc11 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":24:5)
#loc12 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":24:9)
#loc13 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":26:13)
#loc14 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":26:12)
#loc15 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":26:5)
#loc16 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":27:5)
#loc17 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":31:5)
#loc18 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":27:13)
#loc19 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":27:9)
#loc20 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":27:16)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":27:20)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":27:18)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":28:5)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":30:9)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":27:24)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":27:23)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":32:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":36:5)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":35:26)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":35:9)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":62:1)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":65:1)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":64:5)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":64:13)
#loc36 = loc("/usr/include/stdlib.h":575:1)
#loc37 = loc("/usr/include/stdlib.h":575:41)
#loc38 = loc("/usr/include/time.h":76:1)
#loc39 = loc("/usr/include/time.h":76:38)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":82:15)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":84:15)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":87:15)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":89:15)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":77:1)
#loc47 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":92:1)
#loc52 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":78:1)
#loc53 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":80:27)
#loc54 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":80:22)
#loc55 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":80:5)
#loc56 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":82:5)
#loc57 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":83:5)
#loc58 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":83:63)
#loc59 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":84:5)
#loc60 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":87:5)
#loc61 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":88:5)
#loc62 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":88:62)
#loc63 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":89:5)
#loc64 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":91:12)
#loc65 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":91:5)
#loc66 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":44:1)
#loc67 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":60:1)
#loc68 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":57:9)
#loc69 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":57:31)
#loc70 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":46:5)
#loc71 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":46:9)
#loc72 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":47:5)
#loc73 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":47:9)
#loc74 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":49:13)
#loc75 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":49:12)
#loc76 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":49:5)
#loc77 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":50:5)
#loc78 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":54:5)
#loc79 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":50:13)
#loc80 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":50:9)
#loc81 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":50:16)
#loc82 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":50:20)
#loc83 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":50:18)
#loc84 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":51:5)
#loc85 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":53:16)
#loc86 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":53:25)
#loc87 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":53:9)
#loc88 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":50:24)
#loc89 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":50:23)
#loc90 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":55:5)
#loc91 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":59:5)
#loc92 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":58:26)
#loc93 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_17.c":58:9)
#loc94 = loc(fused[#loc1, #loc2])
#loc95 = loc(fused[#loc3, #loc4])
#loc96 = loc(fused[#loc5, #loc6])
#loc97 = loc(fused[#loc7, #loc8])
#loc98 = loc(fused[#loc9, #loc10])
#loc99 = loc(fused[#loc11, #loc12])
#loc100 = loc(fused[#loc15, #loc13])
#loc101 = loc(fused[#loc16, #loc17])
#loc102 = loc(fused[#loc19, #loc18])
#loc103 = loc(fused[#loc20, #loc21])
#loc104 = loc(fused[#loc23, #loc17])
#loc105 = loc(fused[#loc25, #loc24])
#loc106 = loc(fused[#loc27, #loc26])
#loc107 = loc(fused[#loc28, #loc29])
#loc108 = loc(fused[#loc32, #loc33])
#loc109 = loc(fused[#loc34, #loc35])
#loc110 = loc(fused[#loc36, #loc37])
#loc111 = loc(fused[#loc38, #loc39])
#loc112 = loc(fused[#loc40, #loc41])
#loc113 = loc(fused[#loc46, #loc47])
#loc116 = loc(fused[#loc57, #loc58])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc65, #loc64])
#loc119 = loc(fused[#loc66, #loc67])
#loc120 = loc(fused[#loc68, #loc69])
#loc121 = loc(fused[#loc70, #loc71])
#loc122 = loc(fused[#loc72, #loc73])
#loc123 = loc(fused[#loc76, #loc74])
#loc124 = loc(fused[#loc77, #loc78])
#loc125 = loc(fused[#loc80, #loc79])
#loc126 = loc(fused[#loc81, #loc82])
#loc127 = loc(fused[#loc84, #loc78])
#loc128 = loc(fused[#loc87, #loc86])
#loc129 = loc(fused[#loc89, #loc88])
#loc130 = loc(fused[#loc90, #loc91])
