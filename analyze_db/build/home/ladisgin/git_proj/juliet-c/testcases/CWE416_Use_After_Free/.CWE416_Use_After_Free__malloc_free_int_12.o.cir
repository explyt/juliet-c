!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc287)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc288)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc289)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc290)
  cir.func private @printIntLine(!s32i) loc(#loc291)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc293)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc294)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc296)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc296)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc25)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc298)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc299)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc300)
        cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc301)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc33)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc303)
          cir.if %19 {
            %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc37)
            cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
          } loc(#loc304)
        } loc(#loc302)
        cir.scope {
          %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc306)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc44)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc44)
            cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc308)
            cir.for : cond {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc46)
              %20 = cir.const #cir.int<100> : !s32i loc(#loc47)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc47)
              %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc309)
              cir.condition(%22) loc(#loc48)
            } body {
              cir.scope {
                %19 = cir.const #cir.int<5> : !s32i loc(#loc50)
                %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
                %21 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc53)
                cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc311)
              } loc(#loc310)
              cir.yield loc(#loc43)
            } step {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc54)
              %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc55)
              cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc312)
              cir.yield loc(#loc307)
            } loc(#loc307)
          } loc(#loc307)
        } loc(#loc305)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc57)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc58)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc59)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc59)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc313)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc314)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc315)
        cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc316)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc67)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc318)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc69)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc70)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc71)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc69)
          } loc(#loc319)
        } loc(#loc317)
        cir.scope {
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc321)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc78)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc78)
            cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc323)
            cir.for : cond {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc80)
              %17 = cir.const #cir.int<100> : !s32i loc(#loc81)
              %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc81)
              %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc324)
              cir.condition(%19) loc(#loc82)
            } body {
              cir.scope {
                %16 = cir.const #cir.int<5> : !s32i loc(#loc84)
                %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
                %18 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc86)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc87)
                cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc326)
              } loc(#loc325)
              cir.yield loc(#loc77)
            } step {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc88)
              %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc89)
              cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc327)
              cir.yield loc(#loc322)
            } loc(#loc322)
          } loc(#loc322)
        } loc(#loc320)
      } loc(#loc297)
    } loc(#loc295)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc329)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc329)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc92)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc92)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc98)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc99)
        %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc97)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc100)
      } else {
      } loc(#loc330)
    } loc(#loc328)
    cir.return loc(#loc12)
  } loc(#loc292)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc332)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc103)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc333)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc105)
    cir.return loc(#loc102)
  } loc(#loc331)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc335)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc111)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc336)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc338)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc338)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc115)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc115)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc120)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc121)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc121)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc340)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc341)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc342)
        cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc343)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc129)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc129)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc345)
          cir.if %19 {
            %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc131)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc132)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc133)
            cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
          } loc(#loc346)
        } loc(#loc344)
        cir.scope {
          %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc348)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc140)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc140)
            cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc350)
            cir.for : cond {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc142)
              %20 = cir.const #cir.int<100> : !s32i loc(#loc143)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc143)
              %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc351)
              cir.condition(%22) loc(#loc144)
            } body {
              cir.scope {
                %19 = cir.const #cir.int<5> : !s32i loc(#loc146)
                %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
                %21 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc148)
                %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc149)
                cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc353)
              } loc(#loc352)
              cir.yield loc(#loc139)
            } step {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc150)
              %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc151)
              cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc354)
              cir.yield loc(#loc349)
            } loc(#loc349)
          } loc(#loc349)
        } loc(#loc347)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc152)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc153)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc152)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc154)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc155)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc155)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc355)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc356)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc357)
        cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc358)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc163)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc360)
          cir.if %19 {
            %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc165)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc166)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc167)
            cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc165)
          } loc(#loc361)
        } loc(#loc359)
        cir.scope {
          %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc363)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc174)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc174)
            cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc365)
            cir.for : cond {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc176)
              %20 = cir.const #cir.int<100> : !s32i loc(#loc177)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc177)
              %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc366)
              cir.condition(%22) loc(#loc178)
            } body {
              cir.scope {
                %19 = cir.const #cir.int<5> : !s32i loc(#loc180)
                %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
                %21 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc182)
                %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc183)
                cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc368)
              } loc(#loc367)
              cir.yield loc(#loc173)
            } step {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc184)
              %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc185)
              cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc369)
              cir.yield loc(#loc364)
            } loc(#loc364)
          } loc(#loc364)
        } loc(#loc362)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc186)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc187)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc186)
      } loc(#loc339)
    } loc(#loc337)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc371)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc371)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc190)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc190)
      cir.if %5 {
      } else {
      } loc(#loc372)
    } loc(#loc370)
    cir.return loc(#loc108)
  } loc(#loc334)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc374)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc199)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc375)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc377)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc377)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc203)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc203)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc208)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc209)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc209)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc379)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc380)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc208)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc381)
        cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc382)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc216)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc217)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc217)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc384)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc219)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc220)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc221)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc219)
          } loc(#loc385)
        } loc(#loc383)
        cir.scope {
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc387)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc228)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc228)
            cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc389)
            cir.for : cond {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc230)
              %17 = cir.const #cir.int<100> : !s32i loc(#loc231)
              %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc231)
              %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc390)
              cir.condition(%19) loc(#loc232)
            } body {
              cir.scope {
                %16 = cir.const #cir.int<5> : !s32i loc(#loc234)
                %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc235)
                %18 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc236)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc237)
                cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc392)
              } loc(#loc391)
              cir.yield loc(#loc227)
            } step {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc238)
              %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc239)
              cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc393)
              cir.yield loc(#loc388)
            } loc(#loc388)
          } loc(#loc388)
        } loc(#loc386)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc240)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc241)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc241)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc394)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc395)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc240)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc396)
        cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc397)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc248)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc249)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc249)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc399)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc251)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc252)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc253)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc251)
          } loc(#loc400)
        } loc(#loc398)
        cir.scope {
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc402)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc260)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc260)
            cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc404)
            cir.for : cond {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc262)
              %17 = cir.const #cir.int<100> : !s32i loc(#loc263)
              %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc263)
              %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc405)
              cir.condition(%19) loc(#loc264)
            } body {
              cir.scope {
                %16 = cir.const #cir.int<5> : !s32i loc(#loc266)
                %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc267)
                %18 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc268)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc269)
                cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc407)
              } loc(#loc406)
              cir.yield loc(#loc259)
            } step {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc270)
              %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc271)
              cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc408)
              cir.yield loc(#loc403)
            } loc(#loc403)
          } loc(#loc403)
        } loc(#loc401)
      } loc(#loc378)
    } loc(#loc376)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc410)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc410)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc274)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc274)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc279)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc280)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc281)
        %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc279)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc282)
      } else {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc283)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc284)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc285)
        %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc283)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc286)
      } loc(#loc411)
    } loc(#loc409)
    cir.return loc(#loc196)
  } loc(#loc373)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":24:1)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":69:1)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":26:5)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":26:11)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":28:12)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":28:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":29:5)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":55:5)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":29:8)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":29:33)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":30:5)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":42:5)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":44:5)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":31:23)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":31:30)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":31:34)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":31:44)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":31:45)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":31:9)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":32:9)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":32:37)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":32:13)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":32:21)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":32:27)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":32:28)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":32:34)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":32:33)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":33:9)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":39:9)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":34:13)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":34:20)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":35:13)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":38:13)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":35:21)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":35:17)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":35:24)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":35:28)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":35:26)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":36:13)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":37:27)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":37:17)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":37:22)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":37:23)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":35:34)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":35:33)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":41:9)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":41:14)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":45:23)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":45:30)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":45:34)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":45:44)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":45:45)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":45:9)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":46:9)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":46:37)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":46:13)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":46:21)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":46:27)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":46:28)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":46:34)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":46:33)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":47:9)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":53:9)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":48:13)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":48:20)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":49:13)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":52:13)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":49:21)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":49:17)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":49:24)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":49:28)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":49:26)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":50:13)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":51:27)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":51:17)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":51:22)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":51:23)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":49:34)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":49:33)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":56:5)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":68:5)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":56:8)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":56:33)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":57:5)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":61:5)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":63:5)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":59:22)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":59:27)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":59:28)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":59:9)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":175:1)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":179:1)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":177:5)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":177:13)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":178:5)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":178:13)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":78:1)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":125:1)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":80:5)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":80:11)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":82:12)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":82:5)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":83:5)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":110:5)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":83:8)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":83:33)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":84:5)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":96:5)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":98:5)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":85:23)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":85:30)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":85:34)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":85:44)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":85:45)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":85:9)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":86:9)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":86:37)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":86:13)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":86:21)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":86:27)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":86:28)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":86:34)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":86:33)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":87:9)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":93:9)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":88:13)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":88:20)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":89:13)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":92:13)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":89:21)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":89:17)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":89:24)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":89:28)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":89:26)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":90:13)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":91:27)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":91:17)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":91:22)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":91:23)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":89:34)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":89:33)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":95:9)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":95:14)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":99:23)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":99:30)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":99:34)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":99:44)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":99:45)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":99:9)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":100:9)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":100:37)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":100:13)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":100:21)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":100:27)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":100:28)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":100:34)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":100:33)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":101:9)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":107:9)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":102:13)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":102:20)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":103:13)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":106:13)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":103:21)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":103:17)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":103:24)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":103:28)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":103:26)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":104:13)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":105:27)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":105:17)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":105:22)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":105:23)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":103:34)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":103:33)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":109:9)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":109:14)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":111:5)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":124:5)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":111:8)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":111:33)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":112:5)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":117:5)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":119:5)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":130:1)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":173:1)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":132:5)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":132:11)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":134:12)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":134:5)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":135:5)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":160:5)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":135:8)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":135:33)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":136:5)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":147:5)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":149:5)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":137:23)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":137:30)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":137:34)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":137:44)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":137:45)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":137:9)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":138:9)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":138:37)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":138:13)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":138:21)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":138:27)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":138:28)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":138:34)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":138:33)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":139:9)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":145:9)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":140:13)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":140:20)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":141:13)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":144:13)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":141:21)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":141:17)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":141:24)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":141:28)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":141:26)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":142:13)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":143:27)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":143:17)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":143:22)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":143:23)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":141:34)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":141:33)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":150:23)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":150:30)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":150:34)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":150:44)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":150:45)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":150:9)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":151:9)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":151:37)
#loc248 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":151:13)
#loc249 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":151:21)
#loc250 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":151:27)
#loc251 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":151:28)
#loc252 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":151:34)
#loc253 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":151:33)
#loc254 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":152:9)
#loc255 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":158:9)
#loc256 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":153:13)
#loc257 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":153:20)
#loc258 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":154:13)
#loc259 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":157:13)
#loc260 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":154:21)
#loc261 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":154:17)
#loc262 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":154:24)
#loc263 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":154:28)
#loc264 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":154:26)
#loc265 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":155:13)
#loc266 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":156:27)
#loc267 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":156:17)
#loc268 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":156:22)
#loc269 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":156:23)
#loc270 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":154:34)
#loc271 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":154:33)
#loc272 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":161:5)
#loc273 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":172:5)
#loc274 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":161:8)
#loc275 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":161:33)
#loc276 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":162:5)
#loc277 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":166:5)
#loc278 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":168:5)
#loc279 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":164:22)
#loc280 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":164:27)
#loc281 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":164:28)
#loc282 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":164:9)
#loc283 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":170:22)
#loc284 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":170:27)
#loc285 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":170:28)
#loc286 = loc("CWE416_Use_After_Free__malloc_free_int_12.c":170:9)
#loc287 = loc(fused[#loc1, #loc2])
#loc288 = loc(fused[#loc3, #loc4])
#loc289 = loc(fused[#loc5, #loc6])
#loc290 = loc(fused[#loc7, #loc8])
#loc291 = loc(fused[#loc9, #loc10])
#loc292 = loc(fused[#loc11, #loc12])
#loc293 = loc(fused[#loc13, #loc14])
#loc294 = loc(fused[#loc16, #loc15])
#loc295 = loc(fused[#loc17, #loc18])
#loc296 = loc(fused[#loc19, #loc20])
#loc297 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc298 = loc(fused[#loc26, #loc27])
#loc299 = loc(fused[#loc25, #loc27])
#loc300 = loc(fused[#loc24, #loc28])
#loc301 = loc(fused[#loc29, #loc28])
#loc302 = loc(fused[#loc30, #loc31])
#loc303 = loc(fused[#loc32, #loc33])
#loc304 = loc(fused[#loc34, #loc31])
#loc305 = loc(fused[#loc38, #loc39])
#loc306 = loc(fused[#loc40, #loc41])
#loc307 = loc(fused[#loc42, #loc43])
#loc308 = loc(fused[#loc45, #loc44])
#loc309 = loc(fused[#loc46, #loc47])
#loc310 = loc(fused[#loc49, #loc43])
#loc311 = loc(fused[#loc51, #loc50])
#loc312 = loc(fused[#loc55, #loc54])
#loc313 = loc(fused[#loc60, #loc61])
#loc314 = loc(fused[#loc59, #loc61])
#loc315 = loc(fused[#loc58, #loc62])
#loc316 = loc(fused[#loc63, #loc62])
#loc317 = loc(fused[#loc64, #loc65])
#loc318 = loc(fused[#loc66, #loc67])
#loc319 = loc(fused[#loc68, #loc65])
#loc320 = loc(fused[#loc72, #loc73])
#loc321 = loc(fused[#loc74, #loc75])
#loc322 = loc(fused[#loc76, #loc77])
#loc323 = loc(fused[#loc79, #loc78])
#loc324 = loc(fused[#loc80, #loc81])
#loc325 = loc(fused[#loc83, #loc77])
#loc326 = loc(fused[#loc85, #loc84])
#loc327 = loc(fused[#loc89, #loc88])
#loc328 = loc(fused[#loc90, #loc91])
#loc329 = loc(fused[#loc92, #loc93])
#loc330 = loc(fused[#loc94, #loc95, #loc96, #loc91])
#loc331 = loc(fused[#loc101, #loc102])
#loc332 = loc(fused[#loc103, #loc104])
#loc333 = loc(fused[#loc105, #loc106])
#loc334 = loc(fused[#loc107, #loc108])
#loc335 = loc(fused[#loc109, #loc110])
#loc336 = loc(fused[#loc112, #loc111])
#loc337 = loc(fused[#loc113, #loc114])
#loc338 = loc(fused[#loc115, #loc116])
#loc339 = loc(fused[#loc117, #loc118, #loc119, #loc114])
#loc340 = loc(fused[#loc122, #loc123])
#loc341 = loc(fused[#loc121, #loc123])
#loc342 = loc(fused[#loc120, #loc124])
#loc343 = loc(fused[#loc125, #loc124])
#loc344 = loc(fused[#loc126, #loc127])
#loc345 = loc(fused[#loc128, #loc129])
#loc346 = loc(fused[#loc130, #loc127])
#loc347 = loc(fused[#loc134, #loc135])
#loc348 = loc(fused[#loc136, #loc137])
#loc349 = loc(fused[#loc138, #loc139])
#loc350 = loc(fused[#loc141, #loc140])
#loc351 = loc(fused[#loc142, #loc143])
#loc352 = loc(fused[#loc145, #loc139])
#loc353 = loc(fused[#loc147, #loc146])
#loc354 = loc(fused[#loc151, #loc150])
#loc355 = loc(fused[#loc156, #loc157])
#loc356 = loc(fused[#loc155, #loc157])
#loc357 = loc(fused[#loc154, #loc158])
#loc358 = loc(fused[#loc159, #loc158])
#loc359 = loc(fused[#loc160, #loc161])
#loc360 = loc(fused[#loc162, #loc163])
#loc361 = loc(fused[#loc164, #loc161])
#loc362 = loc(fused[#loc168, #loc169])
#loc363 = loc(fused[#loc170, #loc171])
#loc364 = loc(fused[#loc172, #loc173])
#loc365 = loc(fused[#loc175, #loc174])
#loc366 = loc(fused[#loc176, #loc177])
#loc367 = loc(fused[#loc179, #loc173])
#loc368 = loc(fused[#loc181, #loc180])
#loc369 = loc(fused[#loc185, #loc184])
#loc370 = loc(fused[#loc188, #loc189])
#loc371 = loc(fused[#loc190, #loc191])
#loc372 = loc(fused[#loc192, #loc193, #loc194, #loc189])
#loc373 = loc(fused[#loc195, #loc196])
#loc374 = loc(fused[#loc197, #loc198])
#loc375 = loc(fused[#loc200, #loc199])
#loc376 = loc(fused[#loc201, #loc202])
#loc377 = loc(fused[#loc203, #loc204])
#loc378 = loc(fused[#loc205, #loc206, #loc207, #loc202])
#loc379 = loc(fused[#loc210, #loc211])
#loc380 = loc(fused[#loc209, #loc211])
#loc381 = loc(fused[#loc208, #loc212])
#loc382 = loc(fused[#loc213, #loc212])
#loc383 = loc(fused[#loc214, #loc215])
#loc384 = loc(fused[#loc216, #loc217])
#loc385 = loc(fused[#loc218, #loc215])
#loc386 = loc(fused[#loc222, #loc223])
#loc387 = loc(fused[#loc224, #loc225])
#loc388 = loc(fused[#loc226, #loc227])
#loc389 = loc(fused[#loc229, #loc228])
#loc390 = loc(fused[#loc230, #loc231])
#loc391 = loc(fused[#loc233, #loc227])
#loc392 = loc(fused[#loc235, #loc234])
#loc393 = loc(fused[#loc239, #loc238])
#loc394 = loc(fused[#loc242, #loc243])
#loc395 = loc(fused[#loc241, #loc243])
#loc396 = loc(fused[#loc240, #loc244])
#loc397 = loc(fused[#loc245, #loc244])
#loc398 = loc(fused[#loc246, #loc247])
#loc399 = loc(fused[#loc248, #loc249])
#loc400 = loc(fused[#loc250, #loc247])
#loc401 = loc(fused[#loc254, #loc255])
#loc402 = loc(fused[#loc256, #loc257])
#loc403 = loc(fused[#loc258, #loc259])
#loc404 = loc(fused[#loc261, #loc260])
#loc405 = loc(fused[#loc262, #loc263])
#loc406 = loc(fused[#loc265, #loc259])
#loc407 = loc(fused[#loc267, #loc266])
#loc408 = loc(fused[#loc271, #loc270])
#loc409 = loc(fused[#loc272, #loc273])
#loc410 = loc(fused[#loc274, #loc275])
#loc411 = loc(fused[#loc276, #loc277, #loc278, #loc273])
