!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":108:10)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":108:14)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":108:20)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":108:32)
!ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType = !cir.struct<union "CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType" {!s64i, !s64i}>
#loc145 = loc(fused[#loc52, #loc53])
#loc146 = loc(fused[#loc54, #loc55])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc125)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc127)
  cir.func private @printLongLongLine(!s64i) loc(#loc128)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_add_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc132)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc17)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc126)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc127)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc127)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc17)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc19)
    %10 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType> -> !cir.ptr<!s64i> loc(#loc20)
    cir.store %9, %10 : !s64i, !cir.ptr<!s64i> loc(#loc133)
    cir.scope {
      %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc135)
      %12 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType> -> !cir.ptr<!s64i> loc(#loc26)
      %13 = cir.load %12 : !cir.ptr<!s64i>, !s64i loc(#loc25)
      cir.store %13, %11 : !s64i, !cir.ptr<!s64i> loc(#loc135)
      cir.scope {
        %14 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc137)
        %15 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc31)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc30)
        %18 = cir.binop(add, %15, %17) nsw : !s64i loc(#loc31)
        cir.store %18, %14 : !s64i, !cir.ptr<!s64i> loc(#loc137)
        %19 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc32)
        cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc33)
      } loc(#loc136)
    } loc(#loc134)
    cir.return loc(#loc10)
  } loc(#loc129)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_add_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc138)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc141)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc145)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc146)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc59)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_add_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_add_34_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_add_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_add_34_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.return %17 : !s32i loc(#loc149)
  } loc(#loc144)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc76)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc153)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc78)
    cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc154)
    %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc80)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType> -> !cir.ptr<!s64i> loc(#loc20)
    cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc155)
    cir.scope {
      %7 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc157)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType> -> !cir.ptr<!s64i> loc(#loc26)
      %9 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc85)
      cir.store %9, %7 : !s64i, !cir.ptr<!s64i> loc(#loc157)
      cir.scope {
        %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc159)
        %11 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc90)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc89)
        %14 = cir.binop(add, %11, %13) nsw : !s64i loc(#loc90)
        cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc159)
        %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc91)
        cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc92)
      } loc(#loc158)
    } loc(#loc156)
    cir.return loc(#loc71)
  } loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc93)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc100)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc163)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc102)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc126)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc103)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc164)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc164)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc102)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc106)
    %10 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType> -> !cir.ptr<!s64i> loc(#loc20)
    cir.store %9, %10 : !s64i, !cir.ptr<!s64i> loc(#loc165)
    cir.scope {
      %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc167)
      %12 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_add_34_unionType> -> !cir.ptr<!s64i> loc(#loc26)
      %13 = cir.load %12 : !cir.ptr<!s64i>, !s64i loc(#loc111)
      cir.store %13, %11 : !s64i, !cir.ptr<!s64i> loc(#loc167)
      cir.scope {
        %14 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc114)
        %15 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc115)
        %16 = cir.cmp(lt, %14, %15) : !s64i, !cir.bool loc(#loc169)
        cir.if %16 {
          %17 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc171)
          %18 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc121)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc120)
          %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc120)
          %21 = cir.binop(add, %18, %20) nsw : !s64i loc(#loc121)
          cir.store %21, %17 : !s64i, !cir.ptr<!s64i> loc(#loc171)
          %22 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc122)
          cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc123)
        } else {
          %17 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc93)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc93)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc124)
        } loc(#loc170)
      } loc(#loc168)
    } loc(#loc166)
    cir.return loc(#loc95)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":35:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":35:24)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":29:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":45:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":31:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":31:13)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":32:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":32:62)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":33:12)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":33:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":35:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":35:13)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":36:26)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":23:13)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":36:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":37:5)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":44:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":38:9)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":38:32)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":24:13)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":39:9)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":43:9)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":41:13)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":41:37)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":41:30)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":42:31)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":42:13)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":94:1)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":98:1)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":96:5)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":96:13)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":97:5)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":97:13)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":113:15)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":115:15)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":118:15)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":120:15)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":108:1)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":123:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":109:1)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":111:27)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":111:22)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":111:5)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":113:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":114:5)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":114:57)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":115:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":118:5)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":119:5)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":119:56)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":120:5)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":122:12)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":122:5)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":52:1)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":68:1)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":54:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":54:13)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":55:5)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":55:62)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":56:12)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":56:5)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":58:12)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":58:5)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":59:26)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":59:5)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":60:5)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":67:5)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":61:9)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":61:32)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":62:9)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":66:9)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":64:13)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":64:37)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":64:30)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":65:31)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":65:13)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":89:23)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":71:1)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":92:1)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":73:5)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":73:13)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":74:5)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":74:62)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":75:12)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":75:5)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":77:5)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":77:13)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":77:20)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":77:24)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":78:26)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":78:5)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":79:5)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":91:5)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":80:9)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":80:32)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":82:9)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":90:9)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":82:13)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":82:20)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":83:9)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":86:9)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":88:9)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":84:13)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":84:37)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":84:30)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":85:31)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":85:13)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_34.c":89:13)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc16, #loc15])
#loc133 = loc(fused[#loc21, #loc19])
#loc134 = loc(fused[#loc22, #loc23])
#loc135 = loc(fused[#loc24, #loc25])
#loc136 = loc(fused[#loc27, #loc28])
#loc137 = loc(fused[#loc29, #loc30])
#loc138 = loc(fused[#loc34, #loc35])
#loc139 = loc(fused[#loc36, #loc37])
#loc140 = loc(fused[#loc38, #loc39])
#loc141 = loc(fused[#loc40, #loc41])
#loc142 = loc(fused[#loc42, #loc43])
#loc143 = loc(fused[#loc44, #loc45])
#loc144 = loc(fused[#loc50, #loc51])
#loc147 = loc(fused[#loc61, #loc62])
#loc148 = loc(fused[#loc65, #loc66])
#loc149 = loc(fused[#loc69, #loc68])
#loc150 = loc(fused[#loc70, #loc71])
#loc151 = loc(fused[#loc72, #loc73])
#loc152 = loc(fused[#loc74, #loc75])
#loc153 = loc(fused[#loc77, #loc76])
#loc154 = loc(fused[#loc79, #loc78])
#loc155 = loc(fused[#loc81, #loc80])
#loc156 = loc(fused[#loc82, #loc83])
#loc157 = loc(fused[#loc84, #loc85])
#loc158 = loc(fused[#loc86, #loc87])
#loc159 = loc(fused[#loc88, #loc89])
#loc160 = loc(fused[#loc94, #loc95])
#loc161 = loc(fused[#loc96, #loc97])
#loc162 = loc(fused[#loc98, #loc99])
#loc163 = loc(fused[#loc101, #loc100])
#loc164 = loc(fused[#loc104, #loc105])
#loc165 = loc(fused[#loc107, #loc106])
#loc166 = loc(fused[#loc108, #loc109])
#loc167 = loc(fused[#loc110, #loc111])
#loc168 = loc(fused[#loc112, #loc113])
#loc169 = loc(fused[#loc114, #loc115])
#loc170 = loc(fused[#loc116, #loc117, #loc118, #loc113])
#loc171 = loc(fused[#loc119, #loc120])
