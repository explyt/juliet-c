!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc201)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc202)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc203)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc204)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc205)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc13)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc207)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc208)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc203)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc211)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<6> : !s32i loc(#loc29)
    cir.br ^bb2 loc(#loc27)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc27)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc30)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc31)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc32)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc32)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc215)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc216)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc31)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc217)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    cir.br ^bb5 loc(#loc219)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc220)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc221)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc42)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc44)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc42)
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc38)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10 loc(#loc45)
  ^bb9:  // pred: ^bb2
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc13)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb10 loc(#loc47)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc222)
  ^bb12:  // pred: ^bb11
    %22 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc203)
    cir.copy %22 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc203)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc51)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc223)
    cir.br ^bb13 loc(#loc224)
  ^bb13:  // pred: ^bb12
    %26 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc56)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc225)
    cir.br ^bb14 loc(#loc224)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc60)
    %32 = cir.binop(add, %29, %31) : !u64i loc(#loc226)
    %33 = cir.cmp(lt, %28, %32) : !u64i, !cir.bool loc(#loc227)
    cir.brcond %33 ^bb15, ^bb19 loc(#loc61)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc228)
  ^bb16:  // pred: ^bb15
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc64)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc64)
    %37 = cir.load %36 : !cir.ptr<!s8i>, !s8i loc(#loc64)
    %38 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc229)
    cir.br ^bb17 loc(#loc55)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc55)
  ^bb18:  // pred: ^bb17
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc70)
    cir.store %42, %1 : !u64i, !cir.ptr<!u64i> loc(#loc230)
    cir.br ^bb14 loc(#loc224)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc55)
  ^bb20:  // pred: ^bb19
    %43 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc74)
    cir.br ^bb21 loc(#loc49)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc19)
  } loc(#loc209)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    cir.return loc(#loc76)
  } loc(#loc231)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc202)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc235)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc236)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc88)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc92)
    cir.br ^bb2 loc(#loc90)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc90)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb10 loc(#loc96)
  ^bb5:  // pred: ^bb2
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc97)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc98)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc98)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc98)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc240)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc241)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc242)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    cir.br ^bb6 loc(#loc244)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc245)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc246)
  ^bb7:  // pred: ^bb6
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc110)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc112)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc113)
  ^bb10:  // 2 preds: ^bb4, ^bb9
    cir.br ^bb11 loc(#loc91)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc247)
  ^bb12:  // pred: ^bb11
    %24 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc202)
    cir.copy %24 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc202)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc116)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc117)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc116)
    cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc248)
    cir.br ^bb13 loc(#loc249)
  ^bb13:  // pred: ^bb12
    %28 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc122)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc250)
    cir.br ^bb14 loc(#loc249)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc126)
    %34 = cir.binop(add, %31, %33) : !u64i loc(#loc251)
    %35 = cir.cmp(lt, %30, %34) : !u64i, !cir.bool loc(#loc252)
    cir.brcond %35 ^bb15, ^bb19 loc(#loc127)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc253)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc130)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc130)
    %39 = cir.load %38 : !cir.ptr<!s8i>, !s8i loc(#loc130)
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc254)
    cir.br ^bb17 loc(#loc121)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc121)
  ^bb18:  // pred: ^bb17
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %44 = cir.unary(inc, %43) : !u64i, !u64i loc(#loc136)
    cir.store %44, %1 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb14 loc(#loc249)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc121)
  ^bb20:  // pred: ^bb19
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    %46 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc140)
    cir.br ^bb21 loc(#loc115)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc82)
  } loc(#loc234)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc201)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc257)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc258)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc259)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc148)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
    cir.br ^bb1 loc(#loc261)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<6> : !s32i loc(#loc152)
    cir.br ^bb2 loc(#loc150)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc150)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc153)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc154)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc155)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc155)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc155)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc262)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc263)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc264)
    cir.store %14, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
    cir.br ^bb5 loc(#loc266)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc165)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc267)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc268)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc167)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc169)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc167)
    cir.br ^bb7 loc(#loc163)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc163)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10 loc(#loc170)
  ^bb9:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc171)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    cir.br ^bb10 loc(#loc173)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc151)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc269)
  ^bb12:  // pred: ^bb11
    %24 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc201)
    cir.copy %24 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc201)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc176)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc177)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc176)
    cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc270)
    cir.br ^bb13 loc(#loc271)
  ^bb13:  // pred: ^bb12
    %28 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc182)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc272)
    cir.br ^bb14 loc(#loc271)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc184)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc185)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc186)
    %34 = cir.binop(add, %31, %33) : !u64i loc(#loc273)
    %35 = cir.cmp(lt, %30, %34) : !u64i, !cir.bool loc(#loc274)
    cir.brcond %35 ^bb15, ^bb19 loc(#loc187)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc275)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc189)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc190)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc190)
    %39 = cir.load %38 : !cir.ptr<!s8i>, !s8i loc(#loc190)
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc192)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc193)
    cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc276)
    cir.br ^bb17 loc(#loc181)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc181)
  ^bb18:  // pred: ^bb17
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc195)
    %44 = cir.unary(inc, %43) : !u64i, !u64i loc(#loc196)
    cir.store %44, %1 : !u64i, !cir.ptr<!u64i> loc(#loc277)
    cir.br ^bb14 loc(#loc271)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc181)
  ^bb20:  // pred: ^bb19
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc198)
    %46 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc199)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc200)
    cir.br ^bb21 loc(#loc175)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc142)
  } loc(#loc256)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":113:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":113:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":81:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":81:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":45:9)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":45:29)
#loc7 = loc("/usr/include/stdlib.h":672:1)
#loc8 = loc("/usr/include/stdlib.h":672:45)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":41:19)
#loc14 = loc("/usr/include/string.h":407:1)
#loc15 = loc("/usr/include/string.h":408:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":28:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":57:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":46:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":46:16)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":46:19)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":30:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":30:12)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":31:12)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":31:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":32:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":43:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":32:12)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":34:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":36:24)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":36:31)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":36:34)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":36:45)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":36:46)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":36:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":37:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":37:37)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":37:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":37:21)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":37:27)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":37:28)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":37:34)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":37:33)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":38:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":41:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":42:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":44:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":56:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":47:21)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":47:28)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":47:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":47:34)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":50:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":53:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":50:18)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":50:14)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":50:21)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":50:25)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":50:37)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":50:23)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":51:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":52:30)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":52:23)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":52:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":52:18)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":52:19)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":52:31)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":50:41)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":50:40)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":54:19)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":54:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":55:14)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":55:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":127:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":131:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":129:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":129:14)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":130:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":130:14)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":64:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":93:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":82:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":82:16)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":82:19)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":66:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":66:12)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":67:12)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":67:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":68:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":79:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":68:12)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":70:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":72:19)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":72:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":73:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":76:24)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":76:32)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":76:35)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":76:38)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":76:49)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":76:31)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":76:50)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":76:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":77:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":77:37)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":77:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":77:21)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":77:27)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":77:28)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":77:34)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":77:33)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":78:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":80:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":92:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":83:21)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":83:28)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":83:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":83:34)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":86:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":89:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":86:18)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":86:14)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":86:21)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":86:25)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":86:37)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":86:23)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":87:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":88:30)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":88:23)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":88:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":88:18)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":88:19)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":88:31)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":86:41)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":86:40)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":90:19)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":90:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":91:14)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":91:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":96:1)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":125:1)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":114:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":114:16)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":114:19)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":98:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":98:12)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":99:12)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":99:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":100:5)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":111:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":100:12)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":102:5)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":104:24)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":104:32)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":104:35)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":104:38)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":104:49)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":104:31)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":104:50)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":104:9)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":105:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":105:37)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":105:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":105:21)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":105:27)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":105:28)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":105:34)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":105:33)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":106:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":109:19)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":109:9)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":110:9)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":112:5)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":124:5)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":115:21)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":115:28)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":115:9)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":115:34)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":118:9)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":121:9)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":118:18)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":118:14)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":118:21)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":118:25)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":118:37)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":118:23)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":119:9)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":120:30)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":120:23)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":120:13)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":120:18)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":120:19)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":120:31)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":118:41)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":118:40)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":122:19)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":122:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":123:14)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_15.c":123:9)
#loc201 = loc(fused[#loc1, #loc2])
#loc202 = loc(fused[#loc3, #loc4])
#loc203 = loc(fused[#loc5, #loc6])
#loc204 = loc(fused[#loc7, #loc8])
#loc205 = loc(fused[#loc9, #loc10])
#loc206 = loc(fused[#loc11, #loc12])
#loc207 = loc(fused[#loc14, #loc15])
#loc208 = loc(fused[#loc16, #loc17])
#loc209 = loc(fused[#loc18, #loc19])
#loc210 = loc(fused[#loc20, #loc21])
#loc211 = loc(fused[#loc20, #loc22])
#loc212 = loc(fused[#loc23, #loc24])
#loc213 = loc(fused[#loc26, #loc25])
#loc214 = loc(fused[#loc27, #loc28])
#loc215 = loc(fused[#loc33, #loc34])
#loc216 = loc(fused[#loc32, #loc34])
#loc217 = loc(fused[#loc31, #loc35])
#loc218 = loc(fused[#loc36, #loc35])
#loc219 = loc(fused[#loc37, #loc38])
#loc220 = loc(fused[#loc39, #loc40])
#loc221 = loc(fused[#loc41, #loc38])
#loc222 = loc(fused[#loc48, #loc49])
#loc223 = loc(fused[#loc52, #loc53])
#loc224 = loc(fused[#loc54, #loc55])
#loc225 = loc(fused[#loc57, #loc56])
#loc226 = loc(fused[#loc59, #loc60])
#loc227 = loc(fused[#loc58, #loc60])
#loc228 = loc(fused[#loc62, #loc55])
#loc229 = loc(fused[#loc65, #loc68])
#loc230 = loc(fused[#loc70, #loc69])
#loc231 = loc(fused[#loc75, #loc76])
#loc232 = loc(fused[#loc77, #loc78])
#loc233 = loc(fused[#loc79, #loc80])
#loc234 = loc(fused[#loc81, #loc82])
#loc235 = loc(fused[#loc83, #loc84])
#loc236 = loc(fused[#loc83, #loc85])
#loc237 = loc(fused[#loc86, #loc87])
#loc238 = loc(fused[#loc89, #loc88])
#loc239 = loc(fused[#loc90, #loc91])
#loc240 = loc(fused[#loc100, #loc101])
#loc241 = loc(fused[#loc102, #loc101])
#loc242 = loc(fused[#loc97, #loc103])
#loc243 = loc(fused[#loc104, #loc103])
#loc244 = loc(fused[#loc105, #loc106])
#loc245 = loc(fused[#loc107, #loc108])
#loc246 = loc(fused[#loc109, #loc106])
#loc247 = loc(fused[#loc114, #loc115])
#loc248 = loc(fused[#loc118, #loc119])
#loc249 = loc(fused[#loc120, #loc121])
#loc250 = loc(fused[#loc123, #loc122])
#loc251 = loc(fused[#loc125, #loc126])
#loc252 = loc(fused[#loc124, #loc126])
#loc253 = loc(fused[#loc128, #loc121])
#loc254 = loc(fused[#loc131, #loc134])
#loc255 = loc(fused[#loc136, #loc135])
#loc256 = loc(fused[#loc141, #loc142])
#loc257 = loc(fused[#loc143, #loc144])
#loc258 = loc(fused[#loc143, #loc145])
#loc259 = loc(fused[#loc146, #loc147])
#loc260 = loc(fused[#loc149, #loc148])
#loc261 = loc(fused[#loc150, #loc151])
#loc262 = loc(fused[#loc157, #loc158])
#loc263 = loc(fused[#loc159, #loc158])
#loc264 = loc(fused[#loc154, #loc160])
#loc265 = loc(fused[#loc161, #loc160])
#loc266 = loc(fused[#loc162, #loc163])
#loc267 = loc(fused[#loc164, #loc165])
#loc268 = loc(fused[#loc166, #loc163])
#loc269 = loc(fused[#loc174, #loc175])
#loc270 = loc(fused[#loc178, #loc179])
#loc271 = loc(fused[#loc180, #loc181])
#loc272 = loc(fused[#loc183, #loc182])
#loc273 = loc(fused[#loc185, #loc186])
#loc274 = loc(fused[#loc184, #loc186])
#loc275 = loc(fused[#loc188, #loc181])
#loc276 = loc(fused[#loc191, #loc194])
#loc277 = loc(fused[#loc196, #loc195])
