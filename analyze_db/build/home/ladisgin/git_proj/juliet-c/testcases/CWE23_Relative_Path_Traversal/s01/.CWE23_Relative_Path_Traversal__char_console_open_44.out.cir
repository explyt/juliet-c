!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc11 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":40:21)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":40:28)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":94:25)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":94:32)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":136:10)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":136:14)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":136:20)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":136:32)
#true = #cir.bool<true> : !cir.bool
#loc177 = loc(fused[#loc11, #loc12])
#loc214 = loc(fused[#loc105, #loc106])
#loc232 = loc(fused[#loc156, #loc157])
#loc233 = loc(fused[#loc158, #loc159])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_44.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_44L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc172)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_443badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc173)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc174)
  cir.func private @close(!s32i) -> !s32i loc(#loc175)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_44L7badSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc177)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc179)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %3 = cir.const #cir.int<2> : !s32i loc(#loc19)
      %4 = cir.const #cir.int<64> : !s32i loc(#loc20)
      %5 = cir.binop(or, %3, %4) : !s32i loc(#loc180)
      %6 = cir.const #cir.int<256> : !s32i loc(#loc21)
      %7 = cir.const #cir.int<128> : !s32i loc(#loc22)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc181)
      %9 = cir.call @open(%2, %5, %8) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc23)
      cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc182)
      cir.scope {
        %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc30)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc184)
        cir.if %13 {
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc33)
        } loc(#loc185)
      } loc(#loc183)
    } loc(#loc178)
    cir.return loc(#loc10)
  } loc(#loc176)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc186)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc187)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc188)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc42)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_443badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc173)
    %3 = cir.get_global @_ZN51CWE23_Relative_Path_Traversal__char_console_open_44L7badSinkEPc : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc48)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc192)
    %4 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_443badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc173)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc173)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc49)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc195)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc55)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc55)
      cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc195)
      cir.scope {
        %12 = cir.const #cir.int<4096> : !s32i loc(#loc59)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc59)
        %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc60)
        %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc197)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc61)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc61)
        %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc198)
        cir.if %18 {
          cir.scope {
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
            %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc66)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc67)
            %22 = cir.const #cir.int<4096> : !s32i loc(#loc68)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc68)
            %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc69)
            %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc201)
            %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc201)
            %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
            %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc71)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc72)
            %31 = cir.cmp(ne, %29, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc202)
            cir.if %31 {
              %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc76)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
              %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc76)
              cir.store %34, %8 : !u64i, !cir.ptr<!u64i> loc(#loc204)
              cir.scope {
                %35 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc82)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc83)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc83)
                %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc206)
                %39 = cir.ternary(%38, true {
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
                  %41 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc86)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc87)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc87)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc207)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc88)
                  %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc85)
                  %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc85)
                  %48 = cir.const #cir.int<10> : !s8i loc(#loc89)
                  %49 = cir.cast(integral, %48 : !s8i), !s32i loc(#loc89)
                  %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc208)
                  %51 = cir.ternary(%50, true {
                    %52 = cir.const #true loc(#loc84)
                    cir.yield %52 : !cir.bool loc(#loc84)
                  }, false {
                    %52 = cir.const #false loc(#loc84)
                    cir.yield %52 : !cir.bool loc(#loc84)
                  }) : (!cir.bool) -> !cir.bool loc(#loc84)
                  cir.yield %51 : !cir.bool loc(#loc84)
                }, false {
                  %40 = cir.const #false loc(#loc84)
                  cir.yield %40 : !cir.bool loc(#loc84)
                }) : (!cir.bool) -> !cir.bool loc(#loc84)
                cir.if %39 {
                  %40 = cir.const #cir.int<0> : !s8i loc(#loc91)
                  %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
                  %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc93)
                  %43 = cir.const #cir.int<1> : !s32i loc(#loc94)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc94)
                  %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc210)
                  %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc95)
                  cir.store %40, %46 : !s8i, !cir.ptr<!s8i> loc(#loc211)
                } loc(#loc209)
              } loc(#loc205)
            } else {
              %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
              cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc96)
              %34 = cir.const #cir.int<0> : !s8i loc(#loc97)
              %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
              %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc99)
              %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc100)
              cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc212)
            } loc(#loc203)
          } loc(#loc200)
        } loc(#loc199)
      } loc(#loc196)
    } loc(#loc194)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc101)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc101)
    cir.return loc(#loc44)
  } loc(#loc190)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_44L11goodG2BSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc105, #loc106])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc214)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc216)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
      %3 = cir.const #cir.int<2> : !s32i loc(#loc113)
      %4 = cir.const #cir.int<64> : !s32i loc(#loc114)
      %5 = cir.binop(or, %3, %4) : !s32i loc(#loc217)
      %6 = cir.const #cir.int<256> : !s32i loc(#loc115)
      %7 = cir.const #cir.int<128> : !s32i loc(#loc116)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc218)
      %9 = cir.call @open(%2, %5, %8) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc117)
      cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc219)
      cir.scope {
        %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc122)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc123)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc124)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc221)
        cir.if %13 {
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc127)
        } loc(#loc222)
      } loc(#loc220)
    } loc(#loc215)
    cir.return loc(#loc104)
  } loc(#loc213)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc130)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_44L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc226)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc172)
    %3 = cir.get_global @_ZN51CWE23_Relative_Path_Traversal__char_console_open_44L11goodG2BSinkEPc : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc136)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc226)
    %4 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_44L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc172)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc172)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc137)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc139)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc130)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc130)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc139)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc141)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc141)
    cir.return loc(#loc132)
  } loc(#loc224)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_444goodEv() extra(#fn_attr) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_44L7goodG2BEv() : () -> () loc(#loc145)
    cir.return loc(#loc144)
  } loc(#loc228)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc229)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc230)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc153)
  cir.func @main(%arg0: !s32i loc(fused[#loc156, #loc157]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc158, #loc159])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc232)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc233)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc155)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc160)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc161)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc162)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc162)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc163)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc150)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_444goodEv() : () -> () loc(#loc165)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc151)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc152)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_443badEv() : () -> () loc(#loc168)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc153)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc170)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    cir.return %15 : !s32i loc(#loc234)
  } loc(#loc231)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_44.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":111:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":111:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":58:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":58:37)
#loc5 = loc("/usr/include/fcntl.h":209:1)
#loc6 = loc("/usr/include/fcntl.h":209:56)
#loc7 = loc("/usr/include/unistd.h":358:1)
#loc8 = loc("/usr/include/unistd.h":358:27)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":40:1)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":51:1)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":41:1)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":42:5)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":50:5)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":43:9)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":43:13)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":45:25)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":45:31)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":45:38)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":45:47)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":45:55)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":45:20)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":45:9)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":45:63)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":46:9)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":49:9)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":46:13)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":46:26)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":46:25)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":47:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":48:19)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":48:13)
#loc34 = loc("/usr/include/string.h":407:1)
#loc35 = loc("/usr/include/string.h":408:33)
#loc36 = loc("/usr/include/stdio.h":654:1)
#loc37 = loc("/usr/include/stdio.h":655:59)
#loc38 = loc("/usr/include/stdio.h":149:1)
#loc39 = loc("/usr/include/stdio.h":149:14)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":79:27)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":53:1)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":87:1)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":55:5)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":55:12)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":57:5)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":57:32)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":59:12)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":59:5)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":60:5)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":84:5)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":62:9)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":62:37)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":62:26)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":62:33)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":64:9)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":83:9)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":64:13)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":64:26)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":64:36)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":65:9)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":67:13)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":82:13)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":67:23)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":67:28)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":67:27)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":67:43)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":67:56)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":67:66)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":67:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":67:76)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":68:13)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":76:13)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":78:13)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":71:27)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":71:34)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":71:17)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":71:38)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":72:17)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":75:17)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":72:21)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":72:31)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":72:33)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":72:36)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":72:41)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":72:49)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":72:50)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":72:55)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":73:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":74:39)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":74:21)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":74:26)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":74:34)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":74:35)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":79:17)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":81:33)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":81:17)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":81:22)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":81:29)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":86:5)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":86:13)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":94:1)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":105:1)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":95:1)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":96:5)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":104:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":97:9)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":97:13)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":99:25)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":99:31)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":99:38)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":99:47)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":99:55)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":99:20)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":99:9)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":99:63)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":100:9)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":103:9)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":100:13)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":100:26)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":100:25)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":101:9)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":102:19)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":102:13)
#loc128 = loc("/usr/include/string.h":149:1)
#loc129 = loc("/usr/include/string.h":150:14)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":114:18)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":107:1)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":116:1)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":109:5)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":109:12)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":110:5)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":110:32)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":112:12)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":112:5)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":114:5)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":114:12)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":115:5)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":115:13)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":118:1)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":121:1)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":120:5)
#loc146 = loc("/usr/include/stdlib.h":575:1)
#loc147 = loc("/usr/include/stdlib.h":575:41)
#loc148 = loc("/usr/include/time.h":76:1)
#loc149 = loc("/usr/include/time.h":76:38)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":141:15)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":143:15)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":146:15)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":148:15)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":136:1)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":151:1)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":137:1)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":139:27)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":139:22)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":139:5)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":141:5)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":142:5)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":143:5)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":146:5)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":147:5)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":148:5)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":150:12)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_console_open_44.cpp":150:5)
#loc172 = loc(fused[#loc1, #loc2])
#loc173 = loc(fused[#loc3, #loc4])
#loc174 = loc(fused[#loc5, #loc6])
#loc175 = loc(fused[#loc7, #loc8])
#loc176 = loc(fused[#loc9, #loc10])
#loc178 = loc(fused[#loc14, #loc15])
#loc179 = loc(fused[#loc16, #loc17])
#loc180 = loc(fused[#loc19, #loc20])
#loc181 = loc(fused[#loc21, #loc22])
#loc182 = loc(fused[#loc24, #loc25])
#loc183 = loc(fused[#loc26, #loc27])
#loc184 = loc(fused[#loc28, #loc29])
#loc185 = loc(fused[#loc31, #loc27])
#loc186 = loc(fused[#loc34, #loc35])
#loc187 = loc(fused[#loc36, #loc37])
#loc188 = loc(fused[#loc38, #loc39])
#loc189 = loc(fused[#loc40, #loc41])
#loc190 = loc(fused[#loc43, #loc44])
#loc191 = loc(fused[#loc45, #loc46])
#loc192 = loc(fused[#loc47, #loc48])
#loc193 = loc(fused[#loc50, #loc49])
#loc194 = loc(fused[#loc51, #loc52])
#loc195 = loc(fused[#loc53, #loc54])
#loc196 = loc(fused[#loc57, #loc58])
#loc197 = loc(fused[#loc59, #loc60])
#loc198 = loc(fused[#loc59, #loc61])
#loc199 = loc(fused[#loc62, #loc58])
#loc200 = loc(fused[#loc63, #loc64])
#loc201 = loc(fused[#loc68, #loc69])
#loc202 = loc(fused[#loc71, #loc72])
#loc203 = loc(fused[#loc73, #loc74, #loc75, #loc64])
#loc204 = loc(fused[#loc78, #loc79])
#loc205 = loc(fused[#loc80, #loc81])
#loc206 = loc(fused[#loc82, #loc83])
#loc207 = loc(fused[#loc86, #loc87])
#loc208 = loc(fused[#loc85, #loc89])
#loc209 = loc(fused[#loc90, #loc81])
#loc210 = loc(fused[#loc93, #loc94])
#loc211 = loc(fused[#loc92, #loc91])
#loc212 = loc(fused[#loc98, #loc97])
#loc213 = loc(fused[#loc103, #loc104])
#loc215 = loc(fused[#loc108, #loc109])
#loc216 = loc(fused[#loc110, #loc111])
#loc217 = loc(fused[#loc113, #loc114])
#loc218 = loc(fused[#loc115, #loc116])
#loc219 = loc(fused[#loc118, #loc119])
#loc220 = loc(fused[#loc120, #loc121])
#loc221 = loc(fused[#loc122, #loc123])
#loc222 = loc(fused[#loc125, #loc121])
#loc223 = loc(fused[#loc128, #loc129])
#loc224 = loc(fused[#loc131, #loc132])
#loc225 = loc(fused[#loc133, #loc134])
#loc226 = loc(fused[#loc135, #loc136])
#loc227 = loc(fused[#loc138, #loc137])
#loc228 = loc(fused[#loc143, #loc144])
#loc229 = loc(fused[#loc146, #loc147])
#loc230 = loc(fused[#loc148, #loc149])
#loc231 = loc(fused[#loc154, #loc155])
#loc234 = loc(fused[#loc171, #loc170])
