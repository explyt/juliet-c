!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":31:16)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":71:16)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":79:27)
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc206)
  cir.func private @printIntLine(!s32i) loc(#loc207)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_rand_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc211)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc212)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc213)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc20)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<0> : !s32i loc(#loc24)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb2 loc(#loc216)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc218)
    cir.brcond %10 ^bb3, ^bb11 loc(#loc28)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc219)
  ^bb4:  // pred: ^bb3
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %13 = cir.binop(and, %11, %12) : !s32i loc(#loc30)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc30)
  ^bb5:  // pred: ^bb4
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc30)
    %17 = cir.const #cir.int<30> : !s32i loc(#loc30)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc30)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc30)
    %21 = cir.const #cir.int<15> : !s32i loc(#loc30)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc30)
    %23 = cir.binop(xor, %18, %22) : !u32i loc(#loc30)
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc30)
    %26 = cir.binop(xor, %23, %25) : !u32i loc(#loc30)
    cir.br ^bb7(%26 : !u32i) loc(#loc30)
  ^bb6:  // pred: ^bb4
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc30)
    %29 = cir.const #cir.int<30> : !s32i loc(#loc30)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc30)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc30)
    %33 = cir.const #cir.int<15> : !s32i loc(#loc30)
    %34 = cir.shift(left, %32 : !u32i, %33 : !s32i) -> !u32i loc(#loc30)
    %35 = cir.binop(xor, %30, %34) : !u32i loc(#loc30)
    %36 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc30)
    %38 = cir.binop(xor, %35, %37) : !u32i loc(#loc30)
    %39 = cir.unary(minus, %38) : !u32i, !u32i loc(#loc30)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %41 = cir.cast(integral, %40 : !s32i), !u32i loc(#loc30)
    %42 = cir.binop(sub, %39, %41) : !u32i loc(#loc30)
    cir.br ^bb7(%42 : !u32i) loc(#loc30)
  ^bb7(%43: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":31:16)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    %44 = cir.cast(integral, %43 : !u32i), !s32i loc(#loc30)
    cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb9 loc(#loc23)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // pred: ^bb9
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %46 = cir.unary(inc, %45) : !s32i, !s32i loc(#loc33)
    cir.store %46, %2 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb2 loc(#loc216)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc23)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc222)
  ^bb13:  // pred: ^bb12
    %47 = cir.const #cir.int<0> : !s32i loc(#loc36)
    cir.store %47, %3 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb14 loc(#loc222)
  ^bb14:  // 2 preds: ^bb13, ^bb33
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc224)
    cir.brcond %50 ^bb15, ^bb34 loc(#loc40)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc225)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc226)
  ^bb17:  // pred: ^bb16
    %51 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc211)
    cir.store %51, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc211)
    cir.br ^bb18 loc(#loc227)
  ^bb18:  // pred: ^bb17
    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %53 = cir.const #cir.int<10> : !s32i loc(#loc47)
    %54 = cir.cmp(lt, %52, %53) : !s32i, !cir.bool loc(#loc228)
    cir.brcond %54 ^bb19, ^bb28 loc(#loc229)
  ^bb19:  // pred: ^bb18
    %55 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %57 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc53)
    %58 = cir.ptr_stride(%57 : !cir.ptr<!s32i>, %56 : !s32i), !cir.ptr<!s32i> loc(#loc53)
    cir.store %55, %58 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.br ^bb20 loc(#loc231)
  ^bb20:  // pred: ^bb19
    %59 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb21 loc(#loc231)
  ^bb21:  // 2 preds: ^bb20, ^bb25
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %61 = cir.const #cir.int<10> : !s32i loc(#loc59)
    %62 = cir.cmp(lt, %60, %61) : !s32i, !cir.bool loc(#loc233)
    cir.brcond %62 ^bb22, ^bb26 loc(#loc60)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc234)
  ^bb23:  // pred: ^bb22
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %64 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc63)
    %65 = cir.ptr_stride(%64 : !cir.ptr<!s32i>, %63 : !s32i), !cir.ptr<!s32i> loc(#loc63)
    %66 = cir.load %65 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    cir.call @printIntLine(%66) : (!s32i) -> () loc(#loc64)
    cir.br ^bb24 loc(#loc55)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc55)
  ^bb25:  // pred: ^bb24
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %68 = cir.unary(inc, %67) : !s32i, !s32i loc(#loc66)
    cir.store %68, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.br ^bb21 loc(#loc231)
  ^bb26:  // pred: ^bb21
    cir.br ^bb27 loc(#loc55)
  ^bb27:  // pred: ^bb26
    cir.br ^bb29 loc(#loc49)
  ^bb28:  // pred: ^bb18
    %69 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc7)
    %70 = cir.cast(array_to_ptrdecay, %69 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.br ^bb29 loc(#loc45)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc45)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc43)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc35)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc35)
  ^bb33:  // pred: ^bb32
    %71 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %72 = cir.unary(inc, %71) : !s32i, !s32i loc(#loc69)
    cir.store %72, %3 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb14 loc(#loc222)
  ^bb34:  // pred: ^bb14
    cir.br ^bb35 loc(#loc35)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc9)
  } loc(#loc209)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_rand_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc71)
  } loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc76)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc241)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc242)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc243)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc244)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc245)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc89)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.br ^bb1 loc(#loc247)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.br ^bb2 loc(#loc247)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc249)
    cir.brcond %10 ^bb3, ^bb11 loc(#loc97)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc250)
  ^bb4:  // pred: ^bb3
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %13 = cir.binop(and, %11, %12) : !s32i loc(#loc99)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc99)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc99)
  ^bb5:  // pred: ^bb4
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc99)
    %17 = cir.const #cir.int<30> : !s32i loc(#loc99)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc99)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc99)
    %21 = cir.const #cir.int<15> : !s32i loc(#loc99)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc99)
    %23 = cir.binop(xor, %18, %22) : !u32i loc(#loc99)
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc99)
    %26 = cir.binop(xor, %23, %25) : !u32i loc(#loc99)
    cir.br ^bb7(%26 : !u32i) loc(#loc99)
  ^bb6:  // pred: ^bb4
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc99)
    %29 = cir.const #cir.int<30> : !s32i loc(#loc99)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc99)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc99)
    %33 = cir.const #cir.int<15> : !s32i loc(#loc99)
    %34 = cir.shift(left, %32 : !u32i, %33 : !s32i) -> !u32i loc(#loc99)
    %35 = cir.binop(xor, %30, %34) : !u32i loc(#loc99)
    %36 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc99)
    %38 = cir.binop(xor, %35, %37) : !u32i loc(#loc99)
    %39 = cir.unary(minus, %38) : !u32i, !u32i loc(#loc99)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %41 = cir.cast(integral, %40 : !s32i), !u32i loc(#loc99)
    %42 = cir.binop(sub, %39, %41) : !u32i loc(#loc99)
    cir.br ^bb7(%42 : !u32i) loc(#loc99)
  ^bb7(%43: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":71:16)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc99)
  ^bb8:  // pred: ^bb7
    %44 = cir.cast(integral, %43 : !u32i), !s32i loc(#loc99)
    cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.br ^bb9 loc(#loc92)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc92)
  ^bb10:  // pred: ^bb9
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %46 = cir.unary(inc, %45) : !s32i, !s32i loc(#loc102)
    cir.store %46, %2 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.br ^bb2 loc(#loc247)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc92)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc253)
  ^bb13:  // pred: ^bb12
    %47 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %47, %3 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.br ^bb14 loc(#loc253)
  ^bb14:  // 2 preds: ^bb13, ^bb41
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc255)
    cir.brcond %50 ^bb15, ^bb42 loc(#loc109)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc256)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc257)
  ^bb17:  // pred: ^bb16
    %51 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc242)
    cir.store %51, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc242)
    cir.br ^bb18 loc(#loc258)
  ^bb18:  // pred: ^bb17
    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %53 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %54 = cir.cmp(ge, %52, %53) : !s32i, !cir.bool loc(#loc259)
    cir.brcond %54 ^bb19, ^bb24 loc(#loc117)
  ^bb19:  // pred: ^bb18
    %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %56 = cir.const #cir.int<10> : !s32i loc(#loc119)
    %57 = cir.cmp(lt, %55, %56) : !s32i, !cir.bool loc(#loc260)
    cir.brcond %57 ^bb20, ^bb21 loc(#loc117)
  ^bb20:  // pred: ^bb19
    %58 = cir.const #true loc(#loc117)
    cir.br ^bb22(%58 : !cir.bool) loc(#loc117)
  ^bb21:  // pred: ^bb19
    %59 = cir.const #false loc(#loc117)
    cir.br ^bb22(%59 : !cir.bool) loc(#loc117)
  ^bb22(%60: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":79:27)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc117)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25(%60 : !cir.bool) loc(#loc117)
  ^bb24:  // pred: ^bb18
    %61 = cir.const #false loc(#loc117)
    cir.br ^bb25(%61 : !cir.bool) loc(#loc117)
  ^bb25(%62: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":79:27)):  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc117)
  ^bb26:  // pred: ^bb25
    cir.brcond %62 ^bb27, ^bb36 loc(#loc261)
  ^bb27:  // pred: ^bb26
    %63 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %64 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %65 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc126)
    %66 = cir.ptr_stride(%65 : !cir.ptr<!s32i>, %64 : !s32i), !cir.ptr<!s32i> loc(#loc126)
    cir.store %63, %66 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.br ^bb28 loc(#loc263)
  ^bb28:  // pred: ^bb27
    %67 = cir.const #cir.int<0> : !s32i loc(#loc129)
    cir.store %67, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb29 loc(#loc263)
  ^bb29:  // 2 preds: ^bb28, ^bb33
    %68 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %69 = cir.const #cir.int<10> : !s32i loc(#loc132)
    %70 = cir.cmp(lt, %68, %69) : !s32i, !cir.bool loc(#loc265)
    cir.brcond %70 ^bb30, ^bb34 loc(#loc133)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc266)
  ^bb31:  // pred: ^bb30
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %72 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc136)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s32i>, %71 : !s32i), !cir.ptr<!s32i> loc(#loc136)
    %74 = cir.load %73 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    cir.call @printIntLine(%74) : (!s32i) -> () loc(#loc137)
    cir.br ^bb32 loc(#loc128)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc128)
  ^bb33:  // pred: ^bb32
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %76 = cir.unary(inc, %75) : !s32i, !s32i loc(#loc139)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb29 loc(#loc263)
  ^bb34:  // pred: ^bb29
    cir.br ^bb35 loc(#loc128)
  ^bb35:  // pred: ^bb34
    cir.br ^bb37 loc(#loc122)
  ^bb36:  // pred: ^bb26
    %77 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc76)
    %78 = cir.cast(array_to_ptrdecay, %77 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%78) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    cir.br ^bb37 loc(#loc114)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc114)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc112)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc104)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc104)
  ^bb41:  // pred: ^bb40
    %79 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %80 = cir.unary(inc, %79) : !s32i, !s32i loc(#loc142)
    cir.store %80, %3 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    cir.br ^bb14 loc(#loc253)
  ^bb42:  // pred: ^bb14
    cir.br ^bb43 loc(#loc104)
  ^bb43:  // pred: ^bb42
    cir.return loc(#loc78)
  } loc(#loc240)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc270)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc271)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc272)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc273)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc274)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc155)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.br ^bb1 loc(#loc276)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<0> : !s32i loc(#loc159)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.br ^bb2 loc(#loc276)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc278)
    cir.brcond %10 ^bb3, ^bb7 loc(#loc163)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc279)
  ^bb4:  // pred: ^bb3
    %11 = cir.const #cir.int<7> : !s32i loc(#loc165)
    cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    cir.br ^bb5 loc(#loc158)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc158)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %13 = cir.unary(inc, %12) : !s32i, !s32i loc(#loc168)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.br ^bb2 loc(#loc276)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc158)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc282)
  ^bb9:  // pred: ^bb8
    %14 = cir.const #cir.int<0> : !s32i loc(#loc171)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb10 loc(#loc282)
  ^bb10:  // 2 preds: ^bb9, ^bb29
    %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc284)
    cir.brcond %17 ^bb11, ^bb30 loc(#loc175)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc285)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc286)
  ^bb13:  // pred: ^bb12
    %18 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc271)
    cir.store %18, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc271)
    cir.br ^bb14 loc(#loc287)
  ^bb14:  // pred: ^bb13
    %19 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc182)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc288)
    cir.brcond %21 ^bb15, ^bb24 loc(#loc289)
  ^bb15:  // pred: ^bb14
    %22 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %23 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %24 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc188)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc188)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    cir.br ^bb16 loc(#loc291)
  ^bb16:  // pred: ^bb15
    %26 = cir.const #cir.int<0> : !s32i loc(#loc191)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    cir.br ^bb17 loc(#loc291)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %28 = cir.const #cir.int<10> : !s32i loc(#loc194)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc293)
    cir.brcond %29 ^bb18, ^bb22 loc(#loc195)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc294)
  ^bb19:  // pred: ^bb18
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc198)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc198)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc199)
    cir.br ^bb20 loc(#loc190)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc190)
  ^bb21:  // pred: ^bb20
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %35 = cir.unary(inc, %34) : !s32i, !s32i loc(#loc201)
    cir.store %35, %0 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb17 loc(#loc291)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc190)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc184)
  ^bb24:  // pred: ^bb14
    %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc202)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    cir.br ^bb25 loc(#loc180)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc180)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc178)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc170)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc170)
  ^bb29:  // pred: ^bb28
    %38 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %39 = cir.unary(inc, %38) : !s32i, !s32i loc(#loc205)
    cir.store %39, %3 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb10 loc(#loc282)
  ^bb30:  // pred: ^bb10
    cir.br ^bb31 loc(#loc170)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc144)
  } loc(#loc269)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":51:27)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":22:1)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":55:1)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":36:13)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":36:17)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":37:13)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":37:34)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":24:5)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":24:9)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":24:11)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":25:5)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":25:9)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":27:13)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":27:12)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":27:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":28:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":32:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":28:13)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":28:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":28:16)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":28:20)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":28:18)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":29:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":31:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":28:24)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":28:23)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":33:5)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":54:5)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":33:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":33:9)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":33:16)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":33:20)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":33:18)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":34:5)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":35:9)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":53:9)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":40:13)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":52:13)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":40:17)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":40:24)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":41:13)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":48:13)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":50:13)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":42:32)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":42:24)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":42:17)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":44:17)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":47:17)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":44:25)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":44:21)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":44:28)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":44:32)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":44:30)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":45:17)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":46:41)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":46:34)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":46:21)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":44:37)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":44:36)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":51:17)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":33:24)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":33:23)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":133:1)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":137:1)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":135:5)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":135:13)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":136:5)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":136:13)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":90:27)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":62:1)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":94:1)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":76:13)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":76:17)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":77:13)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":77:34)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":64:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":64:9)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":64:11)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":65:5)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":65:9)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":67:13)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":67:12)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":67:5)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":68:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":72:5)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":68:13)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":68:9)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":68:16)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":68:20)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":68:18)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":69:5)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":71:9)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":68:24)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":68:23)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":73:5)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":93:5)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":73:13)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":73:9)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":73:16)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":73:20)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":73:18)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":74:5)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":75:9)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":92:9)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":79:13)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":91:13)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":79:17)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":79:25)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":79:30)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":79:38)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":79:40)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":80:13)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":87:13)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":89:13)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":81:32)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":81:24)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":81:17)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":83:17)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":86:17)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":83:25)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":83:21)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":83:28)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":83:32)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":83:30)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":84:17)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":85:41)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":85:34)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":85:21)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":83:37)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":83:36)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":90:17)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":73:24)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":73:23)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":97:1)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":131:1)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":112:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":112:17)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":113:13)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":113:34)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":99:5)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":99:9)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":99:11)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":100:5)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":100:9)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":102:13)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":102:12)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":102:5)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":103:5)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":108:5)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":103:13)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":103:9)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":103:16)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":103:20)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":103:18)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":104:5)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":107:16)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":107:9)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":103:24)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":103:23)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":109:5)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":130:5)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":109:13)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":109:9)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":109:16)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":109:20)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":109:18)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":110:5)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":111:9)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":129:9)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":116:13)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":128:13)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":116:17)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":116:24)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":117:13)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":124:13)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":126:13)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":118:32)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":118:24)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":118:17)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":120:17)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":123:17)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":120:25)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":120:21)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":120:28)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":120:32)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":120:30)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":121:17)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":122:41)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":122:34)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":122:21)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":120:37)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":120:36)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":127:27)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":127:17)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":109:24)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_rand_17.c":109:23)
#loc206 = loc(fused[#loc1, #loc2])
#loc207 = loc(fused[#loc3, #loc4])
#loc208 = loc(fused[#loc5, #loc6])
#loc209 = loc(fused[#loc8, #loc9])
#loc210 = loc(fused[#loc10, #loc11])
#loc211 = loc(fused[#loc12, #loc13])
#loc212 = loc(fused[#loc14, #loc15])
#loc213 = loc(fused[#loc14, #loc16])
#loc214 = loc(fused[#loc17, #loc18])
#loc215 = loc(fused[#loc21, #loc19])
#loc216 = loc(fused[#loc22, #loc23])
#loc217 = loc(fused[#loc25, #loc24])
#loc218 = loc(fused[#loc26, #loc27])
#loc219 = loc(fused[#loc29, #loc23])
#loc220 = loc(fused[#loc31, #loc30])
#loc221 = loc(fused[#loc33, #loc32])
#loc222 = loc(fused[#loc34, #loc35])
#loc223 = loc(fused[#loc37, #loc36])
#loc224 = loc(fused[#loc38, #loc39])
#loc225 = loc(fused[#loc41, #loc35])
#loc226 = loc(fused[#loc42, #loc43])
#loc227 = loc(fused[#loc44, #loc45])
#loc228 = loc(fused[#loc46, #loc47])
#loc229 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc230 = loc(fused[#loc53, #loc51])
#loc231 = loc(fused[#loc54, #loc55])
#loc232 = loc(fused[#loc57, #loc56])
#loc233 = loc(fused[#loc58, #loc59])
#loc234 = loc(fused[#loc61, #loc55])
#loc235 = loc(fused[#loc66, #loc65])
#loc236 = loc(fused[#loc69, #loc68])
#loc237 = loc(fused[#loc70, #loc71])
#loc238 = loc(fused[#loc72, #loc73])
#loc239 = loc(fused[#loc74, #loc75])
#loc240 = loc(fused[#loc77, #loc78])
#loc241 = loc(fused[#loc79, #loc80])
#loc242 = loc(fused[#loc81, #loc82])
#loc243 = loc(fused[#loc83, #loc84])
#loc244 = loc(fused[#loc83, #loc85])
#loc245 = loc(fused[#loc86, #loc87])
#loc246 = loc(fused[#loc90, #loc88])
#loc247 = loc(fused[#loc91, #loc92])
#loc248 = loc(fused[#loc94, #loc93])
#loc249 = loc(fused[#loc95, #loc96])
#loc250 = loc(fused[#loc98, #loc92])
#loc251 = loc(fused[#loc100, #loc99])
#loc252 = loc(fused[#loc102, #loc101])
#loc253 = loc(fused[#loc103, #loc104])
#loc254 = loc(fused[#loc106, #loc105])
#loc255 = loc(fused[#loc107, #loc108])
#loc256 = loc(fused[#loc110, #loc104])
#loc257 = loc(fused[#loc111, #loc112])
#loc258 = loc(fused[#loc113, #loc114])
#loc259 = loc(fused[#loc115, #loc116])
#loc260 = loc(fused[#loc118, #loc120])
#loc261 = loc(fused[#loc121, #loc122, #loc123, #loc114])
#loc262 = loc(fused[#loc126, #loc124])
#loc263 = loc(fused[#loc127, #loc128])
#loc264 = loc(fused[#loc130, #loc129])
#loc265 = loc(fused[#loc131, #loc132])
#loc266 = loc(fused[#loc134, #loc128])
#loc267 = loc(fused[#loc139, #loc138])
#loc268 = loc(fused[#loc142, #loc141])
#loc269 = loc(fused[#loc143, #loc144])
#loc270 = loc(fused[#loc145, #loc146])
#loc271 = loc(fused[#loc147, #loc148])
#loc272 = loc(fused[#loc149, #loc150])
#loc273 = loc(fused[#loc149, #loc151])
#loc274 = loc(fused[#loc152, #loc153])
#loc275 = loc(fused[#loc156, #loc154])
#loc276 = loc(fused[#loc157, #loc158])
#loc277 = loc(fused[#loc160, #loc159])
#loc278 = loc(fused[#loc161, #loc162])
#loc279 = loc(fused[#loc164, #loc158])
#loc280 = loc(fused[#loc166, #loc165])
#loc281 = loc(fused[#loc168, #loc167])
#loc282 = loc(fused[#loc169, #loc170])
#loc283 = loc(fused[#loc172, #loc171])
#loc284 = loc(fused[#loc173, #loc174])
#loc285 = loc(fused[#loc176, #loc170])
#loc286 = loc(fused[#loc177, #loc178])
#loc287 = loc(fused[#loc179, #loc180])
#loc288 = loc(fused[#loc181, #loc182])
#loc289 = loc(fused[#loc183, #loc184, #loc185, #loc180])
#loc290 = loc(fused[#loc188, #loc186])
#loc291 = loc(fused[#loc189, #loc190])
#loc292 = loc(fused[#loc192, #loc191])
#loc293 = loc(fused[#loc193, #loc194])
#loc294 = loc(fused[#loc196, #loc190])
#loc295 = loc(fused[#loc201, #loc200])
#loc296 = loc(fused[#loc205, #loc204])
