!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_fscanf_preinc_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc176)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc177)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printIntLine(!s32i) loc(#loc179)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_preinc_14_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc181)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc182)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc176)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc21)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc185)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc186)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc178)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc23)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc187)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc176)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc28)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc188)
    cir.brcond %16 ^bb6, ^bb9 loc(#loc189)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc190)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc32)
    cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc35)
    cir.br ^bb8 loc(#loc31)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc26)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc11)
  } loc(#loc180)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_preinc_14_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc37)
  } loc(#loc192)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc200)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc176)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc61)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc204)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc63)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc178)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc65)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc65)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc63)
    cir.br ^bb3 loc(#loc59)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc205)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc176)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc69)
    %16 = cir.cmp(ne, %14, %15) : !s32i, !cir.bool loc(#loc206)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc207)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    cir.br ^bb13 loc(#loc71)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc208)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %20 = cir.const #cir.int<2147483647> : !s32i loc(#loc77)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc209)
    cir.brcond %21 ^bb9, ^bb10 loc(#loc210)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc81)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc84)
    cir.br ^bb11 loc(#loc79)
  ^bb10:  // pred: ^bb8
    %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc49)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb11 loc(#loc75)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc75)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc67)
  ^bb13:  // 2 preds: ^bb6, ^bb12
    cir.br ^bb14 loc(#loc67)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc51)
  } loc(#loc198)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc176)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc97)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc99)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc178)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc100)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc101)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc101)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc99)
    cir.br ^bb3 loc(#loc95)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc95)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc219)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc176)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc105)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc220)
    cir.brcond %16 ^bb6, ^bb12 loc(#loc221)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc222)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %18 = cir.const #cir.int<2147483647> : !s32i loc(#loc110)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc223)
    cir.brcond %19 ^bb8, ^bb9 loc(#loc224)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc114)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc117)
    cir.br ^bb10 loc(#loc112)
  ^bb9:  // pred: ^bb7
    %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc118)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb10 loc(#loc108)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc108)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc103)
  ^bb12:  // 2 preds: ^bb5, ^bb11
    cir.br ^bb13 loc(#loc103)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc87)
  } loc(#loc212)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc227)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc228)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc126)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb1 loc(#loc230)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc176)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc131)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc231)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc232)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc135)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.br ^bb4 loc(#loc133)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc137)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.br ^bb4 loc(#loc129)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc129)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc234)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc176)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc142)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc235)
    cir.brcond %13 ^bb7, ^bb10 loc(#loc236)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc237)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc146)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc149)
    cir.br ^bb9 loc(#loc145)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc140)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc140)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc121)
  } loc(#loc226)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc240)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc241)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc156)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc176)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc161)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc244)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc245)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc163)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.br ^bb3 loc(#loc159)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc159)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc247)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc176)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc168)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc248)
    cir.brcond %11 ^bb6, ^bb9 loc(#loc249)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc250)
  ^bb7:  // pred: ^bb6
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %13 = cir.unary(inc, %12) : !s32i, !s32i loc(#loc172)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc175)
    cir.br ^bb8 loc(#loc171)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc166)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc166)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc151)
  } loc(#loc239)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_fscanf_preinc_14.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":30:23)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":22:1)
#loc11 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":41:1)
#loc12 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":37:13)
#loc13 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":37:26)
#loc14 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":24:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":24:9)
#loc16 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":26:12)
#loc17 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":26:5)
#loc18 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":27:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":31:5)
#loc20 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":27:8)
#loc21 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":27:20)
#loc22 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":28:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":30:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":30:16)
#loc25 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":32:5)
#loc26 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":40:5)
#loc27 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":32:8)
#loc28 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":32:20)
#loc29 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":33:5)
#loc30 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":34:9)
#loc31 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":39:9)
#loc32 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":36:13)
#loc33 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":36:15)
#loc34 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":38:26)
#loc35 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":38:13)
#loc36 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":155:1)
#loc37 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":161:1)
#loc38 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":157:5)
#loc39 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":157:14)
#loc40 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":158:5)
#loc41 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":158:14)
#loc42 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":159:5)
#loc43 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":159:14)
#loc44 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":160:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":160:14)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":61:19)
#loc49 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":74:23)
#loc50 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":48:1)
#loc51 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":77:1)
#loc52 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":69:13)
#loc53 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":69:26)
#loc54 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":50:5)
#loc55 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":50:9)
#loc56 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":52:12)
#loc57 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":52:5)
#loc58 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":53:5)
#loc59 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":57:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":53:8)
#loc61 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":53:20)
#loc62 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":54:5)
#loc63 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":56:9)
#loc64 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":56:16)
#loc65 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":56:23)
#loc66 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":58:5)
#loc67 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":76:5)
#loc68 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":58:8)
#loc69 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":58:20)
#loc70 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":59:5)
#loc71 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":62:5)
#loc72 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":64:5)
#loc73 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":61:9)
#loc74 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":66:9)
#loc75 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":75:9)
#loc76 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":66:13)
#loc77 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":66:20)
#loc78 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":67:9)
#loc79 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":71:9)
#loc80 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":73:9)
#loc81 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":68:13)
#loc82 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":68:15)
#loc83 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":70:26)
#loc84 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":70:13)
#loc85 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":74:13)
#loc86 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":80:1)
#loc87 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":104:1)
#loc88 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":96:13)
#loc89 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":96:26)
#loc90 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":82:5)
#loc91 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":82:9)
#loc92 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":84:12)
#loc93 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":84:5)
#loc94 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":85:5)
#loc95 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":89:5)
#loc96 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":85:8)
#loc97 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":85:20)
#loc98 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":86:5)
#loc99 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":88:9)
#loc100 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":88:16)
#loc101 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":88:23)
#loc102 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":90:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":103:5)
#loc104 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":90:8)
#loc105 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":90:20)
#loc106 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":91:5)
#loc107 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":93:9)
#loc108 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":102:9)
#loc109 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":93:13)
#loc110 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":93:20)
#loc111 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":94:9)
#loc112 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":98:9)
#loc113 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":100:9)
#loc114 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":95:13)
#loc115 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":95:15)
#loc116 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":97:26)
#loc117 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":97:13)
#loc118 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":101:23)
#loc119 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":101:13)
#loc120 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":107:1)
#loc121 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":131:1)
#loc122 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":127:13)
#loc123 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":127:26)
#loc124 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":109:5)
#loc125 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":109:9)
#loc126 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":111:12)
#loc127 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":111:5)
#loc128 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":112:5)
#loc129 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":121:5)
#loc130 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":112:8)
#loc131 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":112:20)
#loc132 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":113:5)
#loc133 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":116:5)
#loc134 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":118:5)
#loc135 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":115:19)
#loc136 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":115:9)
#loc137 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":120:16)
#loc138 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":120:9)
#loc139 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":122:5)
#loc140 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":130:5)
#loc141 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":122:8)
#loc142 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":122:20)
#loc143 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":123:5)
#loc144 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":124:9)
#loc145 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":129:9)
#loc146 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":126:13)
#loc147 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":126:15)
#loc148 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":128:26)
#loc149 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":128:13)
#loc150 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":134:1)
#loc151 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":153:1)
#loc152 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":149:13)
#loc153 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":149:26)
#loc154 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":136:5)
#loc155 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":136:9)
#loc156 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":138:12)
#loc157 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":138:5)
#loc158 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":139:5)
#loc159 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":143:5)
#loc160 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":139:8)
#loc161 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":139:20)
#loc162 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":140:5)
#loc163 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":142:16)
#loc164 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":142:9)
#loc165 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":144:5)
#loc166 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":152:5)
#loc167 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":144:8)
#loc168 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":144:20)
#loc169 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":145:5)
#loc170 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":146:9)
#loc171 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":151:9)
#loc172 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":148:13)
#loc173 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":148:15)
#loc174 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":150:26)
#loc175 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_14.c":150:13)
#loc176 = loc(fused[#loc1, #loc2])
#loc177 = loc(fused[#loc3, #loc4])
#loc178 = loc(fused[#loc5, #loc6])
#loc179 = loc(fused[#loc8, #loc9])
#loc180 = loc(fused[#loc10, #loc11])
#loc181 = loc(fused[#loc12, #loc13])
#loc182 = loc(fused[#loc14, #loc15])
#loc183 = loc(fused[#loc17, #loc16])
#loc184 = loc(fused[#loc18, #loc19])
#loc185 = loc(fused[#loc20, #loc21])
#loc186 = loc(fused[#loc22, #loc19])
#loc187 = loc(fused[#loc25, #loc26])
#loc188 = loc(fused[#loc27, #loc28])
#loc189 = loc(fused[#loc29, #loc26])
#loc190 = loc(fused[#loc30, #loc31])
#loc191 = loc(fused[#loc32, #loc33])
#loc192 = loc(fused[#loc36, #loc37])
#loc193 = loc(fused[#loc38, #loc39])
#loc194 = loc(fused[#loc40, #loc41])
#loc195 = loc(fused[#loc42, #loc43])
#loc196 = loc(fused[#loc44, #loc45])
#loc197 = loc(fused[#loc46, #loc47])
#loc198 = loc(fused[#loc50, #loc51])
#loc199 = loc(fused[#loc52, #loc53])
#loc200 = loc(fused[#loc54, #loc55])
#loc201 = loc(fused[#loc57, #loc56])
#loc202 = loc(fused[#loc58, #loc59])
#loc203 = loc(fused[#loc60, #loc61])
#loc204 = loc(fused[#loc62, #loc59])
#loc205 = loc(fused[#loc66, #loc67])
#loc206 = loc(fused[#loc68, #loc69])
#loc207 = loc(fused[#loc70, #loc71, #loc72, #loc67])
#loc208 = loc(fused[#loc74, #loc75])
#loc209 = loc(fused[#loc76, #loc77])
#loc210 = loc(fused[#loc78, #loc79, #loc80, #loc75])
#loc211 = loc(fused[#loc81, #loc82])
#loc212 = loc(fused[#loc86, #loc87])
#loc213 = loc(fused[#loc88, #loc89])
#loc214 = loc(fused[#loc90, #loc91])
#loc215 = loc(fused[#loc93, #loc92])
#loc216 = loc(fused[#loc94, #loc95])
#loc217 = loc(fused[#loc96, #loc97])
#loc218 = loc(fused[#loc98, #loc95])
#loc219 = loc(fused[#loc102, #loc103])
#loc220 = loc(fused[#loc104, #loc105])
#loc221 = loc(fused[#loc106, #loc103])
#loc222 = loc(fused[#loc107, #loc108])
#loc223 = loc(fused[#loc109, #loc110])
#loc224 = loc(fused[#loc111, #loc112, #loc113, #loc108])
#loc225 = loc(fused[#loc114, #loc115])
#loc226 = loc(fused[#loc120, #loc121])
#loc227 = loc(fused[#loc122, #loc123])
#loc228 = loc(fused[#loc124, #loc125])
#loc229 = loc(fused[#loc127, #loc126])
#loc230 = loc(fused[#loc128, #loc129])
#loc231 = loc(fused[#loc130, #loc131])
#loc232 = loc(fused[#loc132, #loc133, #loc134, #loc129])
#loc233 = loc(fused[#loc138, #loc137])
#loc234 = loc(fused[#loc139, #loc140])
#loc235 = loc(fused[#loc141, #loc142])
#loc236 = loc(fused[#loc143, #loc140])
#loc237 = loc(fused[#loc144, #loc145])
#loc238 = loc(fused[#loc146, #loc147])
#loc239 = loc(fused[#loc150, #loc151])
#loc240 = loc(fused[#loc152, #loc153])
#loc241 = loc(fused[#loc154, #loc155])
#loc242 = loc(fused[#loc157, #loc156])
#loc243 = loc(fused[#loc158, #loc159])
#loc244 = loc(fused[#loc160, #loc161])
#loc245 = loc(fused[#loc162, #loc159])
#loc246 = loc(fused[#loc164, #loc163])
#loc247 = loc(fused[#loc165, #loc166])
#loc248 = loc(fused[#loc167, #loc168])
#loc249 = loc(fused[#loc169, #loc166])
#loc250 = loc(fused[#loc170, #loc171])
#loc251 = loc(fused[#loc172, #loc173])
