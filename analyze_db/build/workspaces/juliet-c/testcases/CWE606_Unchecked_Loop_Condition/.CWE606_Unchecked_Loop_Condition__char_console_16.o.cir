!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc272)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc273)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc274)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc275)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printIntLine(!s32i) loc(#loc277)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc279)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc280)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc280)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc280)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc281)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc25)
        cir.condition(%5) loc(#loc25)
      } do {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc285)
            %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc31)
            %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
            %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc31)
            cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc285)
            cir.scope {
              %8 = cir.const #cir.int<100> : !s32i loc(#loc35)
              %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc35)
              %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc36)
              %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc287)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc37)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc37)
              %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc288)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
                  %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc42)
                  %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc43)
                  %18 = cir.const #cir.int<100> : !s32i loc(#loc44)
                  %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc44)
                  %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc45)
                  %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc291)
                  %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc291)
                  %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc274)
                  %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
                  %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc47)
                  %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
                  %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
                  %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc292)
                  cir.if %28 {
                    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc52)
                    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
                    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc52)
                    cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc294)
                    cir.scope {
                      %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc58)
                      %33 = cir.const #cir.int<0> : !s32i loc(#loc59)
                      %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc59)
                      %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc296)
                      %36 = cir.ternary(%35, true {
                        %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
                        %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc62)
                        %39 = cir.const #cir.int<1> : !s32i loc(#loc63)
                        %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc63)
                        %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc297)
                        %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc64)
                        %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc61)
                        %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc61)
                        %45 = cir.const #cir.int<10> : !s32i loc(#loc65)
                        %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc298)
                        %47 = cir.ternary(%46, true {
                          %48 = cir.const #true loc(#loc60)
                          cir.yield %48 : !cir.bool loc(#loc60)
                        }, false {
                          %48 = cir.const #false loc(#loc60)
                          cir.yield %48 : !cir.bool loc(#loc60)
                        }) : (!cir.bool) -> !cir.bool loc(#loc60)
                        cir.yield %47 : !cir.bool loc(#loc60)
                      }, false {
                        %37 = cir.const #false loc(#loc60)
                        cir.yield %37 : !cir.bool loc(#loc60)
                      }) : (!cir.bool) -> !cir.bool loc(#loc60)
                      cir.if %36 {
                        %37 = cir.const #cir.int<0> : !s32i loc(#loc67)
                        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc67)
                        %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
                        %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                        %41 = cir.const #cir.int<1> : !s32i loc(#loc70)
                        %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc70)
                        %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc300)
                        %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc71)
                        cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc301)
                      } loc(#loc299)
                    } loc(#loc295)
                  } else {
                    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc72)
                    %31 = cir.const #cir.int<0> : !s32i loc(#loc73)
                    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc73)
                    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
                    %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc75)
                    %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc76)
                    cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc302)
                  } loc(#loc293)
                } loc(#loc290)
              } loc(#loc289)
            } loc(#loc286)
          } loc(#loc284)
          cir.break loc(#loc77)
        } loc(#loc283)
        cir.yield loc(#loc24)
      } loc(#loc282)
    } loc(#loc282)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc80)
        cir.condition(%5) loc(#loc80)
      } do {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc306)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc307)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc308)
            cir.scope {
              %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc90)
              %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
              %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc90)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc92)
              %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc310)
              cir.if %13 {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc94)
                cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc312)
                cir.scope {
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
                  cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc314)
                  cir.for : cond {
                    %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc315)
                    cir.condition(%19) loc(#loc102)
                  } body {
                    cir.scope {
                      %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                      %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc105)
                      cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc317)
                    } loc(#loc316)
                    cir.yield loc(#loc97)
                  } step {
                    %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                    %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc107)
                    cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc318)
                    cir.yield loc(#loc313)
                  } loc(#loc313)
                } loc(#loc313)
                %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc109)
              } loc(#loc311)
            } loc(#loc309)
          } loc(#loc305)
          cir.break loc(#loc110)
        } loc(#loc304)
        cir.yield loc(#loc79)
      } loc(#loc303)
    } loc(#loc303)
    cir.return loc(#loc16)
  } loc(#loc278)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc320)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc113)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc321)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc115)
    cir.return loc(#loc112)
  } loc(#loc319)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc323)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc324)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc324)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc324)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc325)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc127)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc127)
        cir.condition(%5) loc(#loc127)
      } do {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc329)
            %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc133)
            %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
            %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc133)
            cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc329)
            cir.scope {
              %8 = cir.const #cir.int<100> : !s32i loc(#loc137)
              %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc137)
              %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc138)
              %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc331)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc139)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc139)
              %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc332)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
                  %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc144)
                  %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc145)
                  %18 = cir.const #cir.int<100> : !s32i loc(#loc146)
                  %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc146)
                  %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc147)
                  %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc335)
                  %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc335)
                  %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc274)
                  %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc148)
                  %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc149)
                  %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
                  %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
                  %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc336)
                  cir.if %28 {
                    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc154)
                    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc154)
                    cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc338)
                    cir.scope {
                      %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc160)
                      %33 = cir.const #cir.int<0> : !s32i loc(#loc161)
                      %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc161)
                      %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc340)
                      %36 = cir.ternary(%35, true {
                        %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                        %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc164)
                        %39 = cir.const #cir.int<1> : !s32i loc(#loc165)
                        %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc165)
                        %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc341)
                        %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc166)
                        %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc163)
                        %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc163)
                        %45 = cir.const #cir.int<10> : !s32i loc(#loc167)
                        %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc342)
                        %47 = cir.ternary(%46, true {
                          %48 = cir.const #true loc(#loc162)
                          cir.yield %48 : !cir.bool loc(#loc162)
                        }, false {
                          %48 = cir.const #false loc(#loc162)
                          cir.yield %48 : !cir.bool loc(#loc162)
                        }) : (!cir.bool) -> !cir.bool loc(#loc162)
                        cir.yield %47 : !cir.bool loc(#loc162)
                      }, false {
                        %37 = cir.const #false loc(#loc162)
                        cir.yield %37 : !cir.bool loc(#loc162)
                      }) : (!cir.bool) -> !cir.bool loc(#loc162)
                      cir.if %36 {
                        %37 = cir.const #cir.int<0> : !s32i loc(#loc169)
                        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc169)
                        %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
                        %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc171)
                        %41 = cir.const #cir.int<1> : !s32i loc(#loc172)
                        %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc172)
                        %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc344)
                        %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc173)
                        cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc345)
                      } loc(#loc343)
                    } loc(#loc339)
                  } else {
                    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc174)
                    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc174)
                    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc175)
                    %31 = cir.const #cir.int<0> : !s32i loc(#loc176)
                    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc176)
                    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                    %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc178)
                    %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc179)
                    cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc346)
                  } loc(#loc337)
                } loc(#loc334)
              } loc(#loc333)
            } loc(#loc330)
          } loc(#loc328)
          cir.break loc(#loc180)
        } loc(#loc327)
        cir.yield loc(#loc126)
      } loc(#loc326)
    } loc(#loc326)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc183)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc183)
        cir.condition(%5) loc(#loc183)
      } do {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc350)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc351)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc352)
            cir.scope {
              %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc193)
              %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc195)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc195)
              %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc193)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc196)
              %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc354)
              cir.if %13 {
                cir.scope {
                  %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc200)
                  %15 = cir.const #cir.int<10000> : !s32i loc(#loc201)
                  %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc357)
                  cir.if %16 {
                    %17 = cir.const #cir.int<0> : !s32i loc(#loc203)
                    cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc359)
                    cir.scope {
                      %19 = cir.const #cir.int<0> : !s32i loc(#loc207)
                      cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc361)
                      cir.for : cond {
                        %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc209)
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc210)
                        %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc362)
                        cir.condition(%22) loc(#loc211)
                      } body {
                        cir.scope {
                          %20 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc213)
                          %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc214)
                          cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc364)
                        } loc(#loc363)
                        cir.yield loc(#loc206)
                      } step {
                        %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc215)
                        %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc216)
                        cir.store %21, %4 : !s32i, !cir.ptr<!s32i> loc(#loc365)
                        cir.yield loc(#loc360)
                      } loc(#loc360)
                    } loc(#loc360)
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc217)
                    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc218)
                  } loc(#loc358)
                } loc(#loc356)
              } loc(#loc355)
            } loc(#loc353)
          } loc(#loc349)
          cir.break loc(#loc219)
        } loc(#loc348)
        cir.yield loc(#loc182)
      } loc(#loc347)
    } loc(#loc347)
    cir.return loc(#loc118)
  } loc(#loc322)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc366)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc222)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc368)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc369)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc369)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc369)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc229)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc370)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc233)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc233)
        cir.condition(%5) loc(#loc233)
      } do {
        cir.scope {
          %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc235)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
          %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc222)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc222)
          %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc235)
          cir.break loc(#loc237)
        } loc(#loc372)
        cir.yield loc(#loc232)
      } loc(#loc371)
    } loc(#loc371)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc240)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc240)
        cir.condition(%5) loc(#loc240)
      } do {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc376)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc377)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc378)
            cir.scope {
              %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc250)
              %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc251)
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc252)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc252)
              %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc250)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc253)
              %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc380)
              cir.if %13 {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc255)
                cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc382)
                cir.scope {
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc259)
                  cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc384)
                  cir.for : cond {
                    %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc385)
                    cir.condition(%19) loc(#loc263)
                  } body {
                    cir.scope {
                      %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc265)
                      %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc266)
                      cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc387)
                    } loc(#loc386)
                    cir.yield loc(#loc258)
                  } step {
                    %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc267)
                    %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc268)
                    cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc388)
                    cir.yield loc(#loc383)
                  } loc(#loc383)
                } loc(#loc383)
                %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc270)
              } loc(#loc381)
            } loc(#loc379)
          } loc(#loc375)
          cir.break loc(#loc271)
        } loc(#loc374)
        cir.yield loc(#loc239)
      } loc(#loc373)
    } loc(#loc373)
    cir.return loc(#loc224)
  } loc(#loc367)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":54:31)
#loc10 = loc("/usr/include/stdio.h":468:1)
#loc11 = loc("/usr/include/stdio.h":468:12)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":66:30)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":28:1)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":80:1)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":30:5)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":30:12)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":31:5)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":31:28)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":32:12)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":32:5)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":33:5)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":61:5)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":33:11)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":34:5)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":35:9)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":59:9)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":37:13)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":37:41)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":37:30)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":37:37)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":39:13)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":58:13)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":39:17)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":39:21)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":39:31)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":40:13)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:17)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":57:17)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:27)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:32)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:31)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:47)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:51)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:61)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:21)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:71)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":43:17)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":51:17)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":53:17)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":46:31)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":46:38)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":46:21)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":46:42)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:21)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":50:21)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:25)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:35)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:37)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:40)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:45)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:53)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:54)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:59)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":48:21)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":49:43)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":49:25)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":49:30)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":49:38)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":49:39)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":54:21)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":56:37)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":56:21)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":56:26)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":56:33)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":60:9)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":62:5)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":79:5)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":62:11)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":63:5)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":64:9)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":77:9)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":65:13)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":65:17)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":65:20)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":65:23)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":66:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":76:13)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":66:17)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":66:24)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":66:43)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":67:13)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":69:31)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":69:17)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:17)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":74:17)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:26)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:22)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:29)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:33)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:31)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":71:17)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":73:32)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":73:21)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:37)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:36)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":75:30)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":75:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":78:9)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":176:1)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":180:1)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":178:5)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":178:13)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":179:5)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":179:13)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":87:1)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":142:1)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":89:5)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":89:12)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":90:5)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":90:28)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":91:12)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":91:5)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":92:5)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":120:5)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":92:11)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":93:5)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":94:9)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":118:9)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":96:13)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":96:41)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":96:30)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":96:37)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":98:13)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":117:13)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":98:17)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":98:21)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":98:31)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":99:13)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:17)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":116:17)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:27)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:32)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:31)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:47)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:51)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:61)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:21)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:71)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":102:17)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":110:17)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":112:17)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":105:31)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":105:38)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":105:21)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":105:42)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:21)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":109:21)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:25)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:35)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:37)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:40)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:45)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:53)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:54)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:59)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":107:21)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":108:43)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":108:25)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":108:30)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":108:38)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":108:39)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":113:31)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":113:21)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":115:37)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":115:21)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":115:26)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":115:33)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":119:9)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":121:5)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":141:5)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":121:11)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":122:5)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":123:9)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":139:9)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":124:13)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":124:17)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":124:20)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":124:23)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":125:13)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":138:13)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":125:17)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":125:24)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":125:30)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":125:43)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":126:13)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":128:17)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":137:17)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":128:21)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":128:25)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":129:17)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":130:35)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":130:21)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:21)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":135:21)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:30)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:26)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:33)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:37)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:35)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":132:21)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":134:36)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":134:25)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:41)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:40)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":136:34)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":136:21)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":140:9)
#loc220 = loc("/usr/include/string.h":141:1)
#loc221 = loc("/usr/include/string.h":142:14)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":153:22)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":145:1)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":174:1)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":147:5)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":147:12)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":148:5)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":148:28)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":149:12)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":149:5)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":150:5)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":155:5)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":150:11)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":151:5)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":153:9)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":153:16)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":154:9)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":156:5)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":173:5)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":156:11)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":157:5)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":158:9)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":171:9)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":159:13)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":159:17)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":159:20)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":159:23)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":160:13)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":170:13)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":160:17)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":160:24)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":160:30)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":160:43)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":161:13)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":163:31)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":163:17)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:17)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":168:17)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:26)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:22)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:29)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:33)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:31)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":165:17)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":167:32)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":167:21)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:37)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:36)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":169:30)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":169:17)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":172:9)
#loc272 = loc(fused[#loc1, #loc2])
#loc273 = loc(fused[#loc3, #loc4])
#loc274 = loc(fused[#loc5, #loc6])
#loc275 = loc(fused[#loc7, #loc8])
#loc276 = loc(fused[#loc10, #loc11])
#loc277 = loc(fused[#loc13, #loc14])
#loc278 = loc(fused[#loc15, #loc16])
#loc279 = loc(fused[#loc17, #loc18])
#loc280 = loc(fused[#loc19, #loc20])
#loc281 = loc(fused[#loc22, #loc21])
#loc282 = loc(fused[#loc23, #loc24])
#loc283 = loc(fused[#loc26, #loc24])
#loc284 = loc(fused[#loc27, #loc28])
#loc285 = loc(fused[#loc29, #loc30])
#loc286 = loc(fused[#loc33, #loc34])
#loc287 = loc(fused[#loc35, #loc36])
#loc288 = loc(fused[#loc35, #loc37])
#loc289 = loc(fused[#loc38, #loc34])
#loc290 = loc(fused[#loc39, #loc40])
#loc291 = loc(fused[#loc44, #loc45])
#loc292 = loc(fused[#loc47, #loc48])
#loc293 = loc(fused[#loc49, #loc50, #loc51, #loc40])
#loc294 = loc(fused[#loc54, #loc55])
#loc295 = loc(fused[#loc56, #loc57])
#loc296 = loc(fused[#loc58, #loc59])
#loc297 = loc(fused[#loc62, #loc63])
#loc298 = loc(fused[#loc61, #loc65])
#loc299 = loc(fused[#loc66, #loc57])
#loc300 = loc(fused[#loc69, #loc70])
#loc301 = loc(fused[#loc68, #loc67])
#loc302 = loc(fused[#loc74, #loc73])
#loc303 = loc(fused[#loc78, #loc79])
#loc304 = loc(fused[#loc81, #loc79])
#loc305 = loc(fused[#loc82, #loc83])
#loc306 = loc(fused[#loc84, #loc85])
#loc307 = loc(fused[#loc84, #loc86])
#loc308 = loc(fused[#loc84, #loc87])
#loc309 = loc(fused[#loc88, #loc89])
#loc310 = loc(fused[#loc90, #loc92])
#loc311 = loc(fused[#loc93, #loc89])
#loc312 = loc(fused[#loc95, #loc94])
#loc313 = loc(fused[#loc96, #loc97])
#loc314 = loc(fused[#loc99, #loc98])
#loc315 = loc(fused[#loc100, #loc101])
#loc316 = loc(fused[#loc103, #loc97])
#loc317 = loc(fused[#loc105, #loc104])
#loc318 = loc(fused[#loc107, #loc106])
#loc319 = loc(fused[#loc111, #loc112])
#loc320 = loc(fused[#loc113, #loc114])
#loc321 = loc(fused[#loc115, #loc116])
#loc322 = loc(fused[#loc117, #loc118])
#loc323 = loc(fused[#loc119, #loc120])
#loc324 = loc(fused[#loc121, #loc122])
#loc325 = loc(fused[#loc124, #loc123])
#loc326 = loc(fused[#loc125, #loc126])
#loc327 = loc(fused[#loc128, #loc126])
#loc328 = loc(fused[#loc129, #loc130])
#loc329 = loc(fused[#loc131, #loc132])
#loc330 = loc(fused[#loc135, #loc136])
#loc331 = loc(fused[#loc137, #loc138])
#loc332 = loc(fused[#loc137, #loc139])
#loc333 = loc(fused[#loc140, #loc136])
#loc334 = loc(fused[#loc141, #loc142])
#loc335 = loc(fused[#loc146, #loc147])
#loc336 = loc(fused[#loc149, #loc150])
#loc337 = loc(fused[#loc151, #loc152, #loc153, #loc142])
#loc338 = loc(fused[#loc156, #loc157])
#loc339 = loc(fused[#loc158, #loc159])
#loc340 = loc(fused[#loc160, #loc161])
#loc341 = loc(fused[#loc164, #loc165])
#loc342 = loc(fused[#loc163, #loc167])
#loc343 = loc(fused[#loc168, #loc159])
#loc344 = loc(fused[#loc171, #loc172])
#loc345 = loc(fused[#loc170, #loc169])
#loc346 = loc(fused[#loc177, #loc176])
#loc347 = loc(fused[#loc181, #loc182])
#loc348 = loc(fused[#loc184, #loc182])
#loc349 = loc(fused[#loc185, #loc186])
#loc350 = loc(fused[#loc187, #loc188])
#loc351 = loc(fused[#loc187, #loc189])
#loc352 = loc(fused[#loc187, #loc190])
#loc353 = loc(fused[#loc191, #loc192])
#loc354 = loc(fused[#loc193, #loc196])
#loc355 = loc(fused[#loc197, #loc192])
#loc356 = loc(fused[#loc198, #loc199])
#loc357 = loc(fused[#loc200, #loc201])
#loc358 = loc(fused[#loc202, #loc199])
#loc359 = loc(fused[#loc204, #loc203])
#loc360 = loc(fused[#loc205, #loc206])
#loc361 = loc(fused[#loc208, #loc207])
#loc362 = loc(fused[#loc209, #loc210])
#loc363 = loc(fused[#loc212, #loc206])
#loc364 = loc(fused[#loc214, #loc213])
#loc365 = loc(fused[#loc216, #loc215])
#loc366 = loc(fused[#loc220, #loc221])
#loc367 = loc(fused[#loc223, #loc224])
#loc368 = loc(fused[#loc225, #loc226])
#loc369 = loc(fused[#loc227, #loc228])
#loc370 = loc(fused[#loc230, #loc229])
#loc371 = loc(fused[#loc231, #loc232])
#loc372 = loc(fused[#loc234, #loc232])
#loc373 = loc(fused[#loc238, #loc239])
#loc374 = loc(fused[#loc241, #loc239])
#loc375 = loc(fused[#loc242, #loc243])
#loc376 = loc(fused[#loc244, #loc245])
#loc377 = loc(fused[#loc244, #loc246])
#loc378 = loc(fused[#loc244, #loc247])
#loc379 = loc(fused[#loc248, #loc249])
#loc380 = loc(fused[#loc250, #loc253])
#loc381 = loc(fused[#loc254, #loc249])
#loc382 = loc(fused[#loc256, #loc255])
#loc383 = loc(fused[#loc257, #loc258])
#loc384 = loc(fused[#loc260, #loc259])
#loc385 = loc(fused[#loc261, #loc262])
#loc386 = loc(fused[#loc264, #loc258])
#loc387 = loc(fused[#loc266, #loc265])
#loc388 = loc(fused[#loc268, #loc267])
