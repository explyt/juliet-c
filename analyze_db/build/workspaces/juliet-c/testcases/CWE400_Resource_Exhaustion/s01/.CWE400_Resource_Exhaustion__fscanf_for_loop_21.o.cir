!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":25:21)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":25:25)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":61:26)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":61:30)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":96:26)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":96:30)
#loc162 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":126:25)
#loc163 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":126:29)
#true = #cir.bool<true> : !cir.bool
#loc203 = loc(fused[#loc13, #loc14])
#loc223 = loc(fused[#loc61, #loc62])
#loc243 = loc(fused[#loc113, #loc114])
#loc263 = loc(fused[#loc162, #loc163])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_for_loop_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc198)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc200)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc10)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc13, #loc14])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc203)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc15)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc200)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc18)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc207)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc23)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc23)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc207)
          cir.scope {
            %7 = cir.const #cir.int<0> : !s32i loc(#loc26)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc26)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc209)
            cir.for : cond {
              %9 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc28)
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc29)
              %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc210)
              cir.condition(%12) loc(#loc30)
            } body {
              cir.scope {
                %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc10)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc10)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc32)
              } loc(#loc211)
              cir.yield loc(#loc25)
            } step {
              %9 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc33)
              %10 = cir.unary(inc, %9) : !u64i, !u64i loc(#loc34)
              cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc212)
              cir.yield loc(#loc208)
            } loc(#loc208)
          } loc(#loc208)
        } loc(#loc206)
      } loc(#loc205)
    } loc(#loc204)
    cir.return loc(#loc12)
  } loc(#loc202)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_for_loop_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc40)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc42)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc199)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc42)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %10 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc200)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    cir.call @badSink(%11) : (!s32i) -> () loc(#loc47)
    cir.return loc(#loc36)
  } loc(#loc213)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_for_loop_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc218)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc219)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc220)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    cir.return loc(#loc49)
  } loc(#loc217)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc58)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc61, #loc62])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc223)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc221)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc66)
      cir.if %3 {
        %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc70)
      } else {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc227)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc74)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc74)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc227)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc78)
            %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc229)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
              %12 = cir.const #cir.int<20> : !s32i loc(#loc81)
              %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc230)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc79)
                cir.yield %15 : !cir.bool loc(#loc79)
              }, false {
                %15 = cir.const #false loc(#loc79)
                cir.yield %15 : !cir.bool loc(#loc79)
              }) : (!cir.bool) -> !cir.bool loc(#loc79)
              cir.yield %14 : !cir.bool loc(#loc79)
            }, false {
              %11 = cir.const #false loc(#loc79)
              cir.yield %11 : !cir.bool loc(#loc79)
            }) : (!cir.bool) -> !cir.bool loc(#loc79)
            cir.if %10 {
              cir.scope {
                %11 = cir.const #cir.int<0> : !s32i loc(#loc85)
                %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc85)
                cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc233)
                cir.for : cond {
                  %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc87)
                  %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                  %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc88)
                  %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc234)
                  cir.condition(%16) loc(#loc89)
                } body {
                  cir.scope {
                    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc91)
                    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc91)
                    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc92)
                  } loc(#loc235)
                  cir.yield loc(#loc84)
                } step {
                  %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc93)
                  %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc94)
                  cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc236)
                  cir.yield loc(#loc232)
                } loc(#loc232)
              } loc(#loc232)
            } loc(#loc231)
          } loc(#loc228)
        } loc(#loc226)
      } loc(#loc225)
    } loc(#loc224)
    cir.return loc(#loc60)
  } loc(#loc222)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc238)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc100)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc102)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc199)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc103)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc104)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc104)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc102)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %10 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc221)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    cir.call @goodB2G1Sink(%11) : (!s32i) -> () loc(#loc108)
    cir.return loc(#loc96)
  } loc(#loc237)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc241)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc113, #loc114])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc243)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc241)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc118)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc247)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc123)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc123)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc247)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc127)
            %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc249)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
              %12 = cir.const #cir.int<20> : !s32i loc(#loc130)
              %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc250)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc128)
                cir.yield %15 : !cir.bool loc(#loc128)
              }, false {
                %15 = cir.const #false loc(#loc128)
                cir.yield %15 : !cir.bool loc(#loc128)
              }) : (!cir.bool) -> !cir.bool loc(#loc128)
              cir.yield %14 : !cir.bool loc(#loc128)
            }, false {
              %11 = cir.const #false loc(#loc128)
              cir.yield %11 : !cir.bool loc(#loc128)
            }) : (!cir.bool) -> !cir.bool loc(#loc128)
            cir.if %10 {
              cir.scope {
                %11 = cir.const #cir.int<0> : !s32i loc(#loc134)
                %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc134)
                cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc253)
                cir.for : cond {
                  %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc136)
                  %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
                  %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc137)
                  %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc254)
                  cir.condition(%16) loc(#loc138)
                } body {
                  cir.scope {
                    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc140)
                    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc140)
                    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc141)
                  } loc(#loc255)
                  cir.yield loc(#loc133)
                } step {
                  %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc142)
                  %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc143)
                  cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc256)
                  cir.yield loc(#loc252)
                } loc(#loc252)
              } loc(#loc252)
            } loc(#loc251)
          } loc(#loc248)
        } loc(#loc246)
      } loc(#loc245)
    } loc(#loc244)
    cir.return loc(#loc112)
  } loc(#loc242)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc149)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc151)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc199)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc152)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc153)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc153)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc151)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %10 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc241)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.call @goodB2G2Sink(%11) : (!s32i) -> () loc(#loc157)
    cir.return loc(#loc145)
  } loc(#loc257)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc261)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc162, #loc163])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc263)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc261)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc167)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc167)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc267)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc172)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc172)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc267)
          cir.scope {
            %7 = cir.const #cir.int<0> : !s32i loc(#loc175)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc175)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc269)
            cir.for : cond {
              %9 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc177)
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc178)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc178)
              %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc270)
              cir.condition(%12) loc(#loc179)
            } body {
              cir.scope {
                %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc181)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc181)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc182)
              } loc(#loc271)
              cir.yield loc(#loc174)
            } step {
              %9 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc183)
              %10 = cir.unary(inc, %9) : !u64i, !u64i loc(#loc184)
              cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc272)
              cir.yield loc(#loc268)
            } loc(#loc268)
          } loc(#loc268)
        } loc(#loc266)
      } loc(#loc265)
    } loc(#loc264)
    cir.return loc(#loc161)
  } loc(#loc262)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc190)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc192)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc261)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc197)
    cir.return loc(#loc186)
  } loc(#loc273)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":46:19)
#loc6 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":23:1)
#loc7 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":23:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":34:27)
#loc11 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":25:1)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":38:1)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":26:1)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":27:5)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":37:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":27:8)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":28:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":29:9)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":36:9)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":30:13)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":30:24)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":32:13)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":35:13)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":32:22)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":32:18)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":32:25)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":32:37)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":32:27)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":33:13)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":34:17)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":32:45)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":32:44)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":40:1)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":49:1)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":42:5)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":42:9)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":44:14)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":44:13)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":44:5)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":46:5)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":46:12)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":47:17)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":47:5)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":48:13)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":48:5)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":152:1)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":157:1)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":154:5)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":154:14)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":155:5)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":155:14)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":156:5)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":156:13)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":56:1)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":56:29)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":66:19)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":61:1)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":82:1)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":62:1)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":63:5)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":81:5)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":63:8)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":64:5)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":67:5)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":69:5)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":66:9)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":70:9)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":80:9)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":71:13)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":71:24)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":73:13)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":79:13)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":73:17)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":73:25)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":73:27)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":73:30)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":73:39)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":74:13)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":75:17)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":78:17)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":75:26)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":75:22)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":75:29)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":75:41)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":75:31)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":76:17)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":77:31)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":77:21)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":75:49)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":75:48)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":84:1)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":93:1)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":86:5)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":86:9)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":88:14)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":88:13)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":88:5)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":90:5)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":90:12)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":90:19)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":91:22)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":91:5)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":92:18)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":92:5)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":57:1)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":57:29)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":96:1)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":112:1)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":97:1)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":98:5)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":111:5)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":98:8)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":99:5)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":100:9)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":110:9)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":101:13)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":101:24)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":103:13)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":109:13)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":103:17)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":103:25)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":103:27)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":103:30)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":103:39)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":104:13)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":105:17)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":108:17)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":105:26)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":105:22)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":105:29)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":105:41)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":105:31)
#loc139 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":106:17)
#loc140 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":107:31)
#loc141 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":107:21)
#loc142 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":105:49)
#loc143 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":105:48)
#loc144 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":114:1)
#loc145 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":123:1)
#loc146 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":116:5)
#loc147 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":116:9)
#loc148 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":118:14)
#loc149 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":118:13)
#loc150 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":118:5)
#loc151 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":120:5)
#loc152 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":120:12)
#loc153 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":120:19)
#loc154 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":121:22)
#loc155 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":121:5)
#loc156 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":122:18)
#loc157 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":122:5)
#loc158 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":58:1)
#loc159 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":58:28)
#loc160 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":126:1)
#loc161 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":139:1)
#loc164 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":127:1)
#loc165 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":128:5)
#loc166 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":138:5)
#loc167 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":128:8)
#loc168 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":129:5)
#loc169 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":130:9)
#loc170 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":137:9)
#loc171 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":131:13)
#loc172 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":131:24)
#loc173 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":133:13)
#loc174 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":136:13)
#loc175 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":133:22)
#loc176 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":133:18)
#loc177 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":133:25)
#loc178 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":133:37)
#loc179 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":133:27)
#loc180 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":134:13)
#loc181 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":135:27)
#loc182 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":135:17)
#loc183 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":133:45)
#loc184 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":133:44)
#loc185 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":141:1)
#loc186 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":150:1)
#loc187 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":143:5)
#loc188 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":143:9)
#loc189 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":145:14)
#loc190 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":145:13)
#loc191 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":145:5)
#loc192 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":147:13)
#loc193 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":147:5)
#loc194 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":148:21)
#loc195 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":148:5)
#loc196 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":149:17)
#loc197 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_21.c":149:5)
#loc198 = loc(fused[#loc1, #loc2])
#loc199 = loc(fused[#loc3, #loc4])
#loc200 = loc(fused[#loc6, #loc7])
#loc201 = loc(fused[#loc8, #loc9])
#loc202 = loc(fused[#loc11, #loc12])
#loc204 = loc(fused[#loc16, #loc17])
#loc205 = loc(fused[#loc19, #loc17])
#loc206 = loc(fused[#loc20, #loc21])
#loc207 = loc(fused[#loc22, #loc23])
#loc208 = loc(fused[#loc24, #loc25])
#loc209 = loc(fused[#loc27, #loc26])
#loc210 = loc(fused[#loc28, #loc29])
#loc211 = loc(fused[#loc31, #loc25])
#loc212 = loc(fused[#loc34, #loc33])
#loc213 = loc(fused[#loc35, #loc36])
#loc214 = loc(fused[#loc37, #loc38])
#loc215 = loc(fused[#loc41, #loc39])
#loc216 = loc(fused[#loc45, #loc44])
#loc217 = loc(fused[#loc48, #loc49])
#loc218 = loc(fused[#loc50, #loc51])
#loc219 = loc(fused[#loc52, #loc53])
#loc220 = loc(fused[#loc54, #loc55])
#loc221 = loc(fused[#loc56, #loc57])
#loc222 = loc(fused[#loc59, #loc60])
#loc224 = loc(fused[#loc64, #loc65])
#loc225 = loc(fused[#loc67, #loc68, #loc69, #loc65])
#loc226 = loc(fused[#loc71, #loc72])
#loc227 = loc(fused[#loc73, #loc74])
#loc228 = loc(fused[#loc75, #loc76])
#loc229 = loc(fused[#loc77, #loc78])
#loc230 = loc(fused[#loc80, #loc81])
#loc231 = loc(fused[#loc82, #loc76])
#loc232 = loc(fused[#loc83, #loc84])
#loc233 = loc(fused[#loc86, #loc85])
#loc234 = loc(fused[#loc87, #loc88])
#loc235 = loc(fused[#loc90, #loc84])
#loc236 = loc(fused[#loc94, #loc93])
#loc237 = loc(fused[#loc95, #loc96])
#loc238 = loc(fused[#loc97, #loc98])
#loc239 = loc(fused[#loc101, #loc99])
#loc240 = loc(fused[#loc106, #loc105])
#loc241 = loc(fused[#loc109, #loc110])
#loc242 = loc(fused[#loc111, #loc112])
#loc244 = loc(fused[#loc116, #loc117])
#loc245 = loc(fused[#loc119, #loc117])
#loc246 = loc(fused[#loc120, #loc121])
#loc247 = loc(fused[#loc122, #loc123])
#loc248 = loc(fused[#loc124, #loc125])
#loc249 = loc(fused[#loc126, #loc127])
#loc250 = loc(fused[#loc129, #loc130])
#loc251 = loc(fused[#loc131, #loc125])
#loc252 = loc(fused[#loc132, #loc133])
#loc253 = loc(fused[#loc135, #loc134])
#loc254 = loc(fused[#loc136, #loc137])
#loc255 = loc(fused[#loc139, #loc133])
#loc256 = loc(fused[#loc143, #loc142])
#loc257 = loc(fused[#loc144, #loc145])
#loc258 = loc(fused[#loc146, #loc147])
#loc259 = loc(fused[#loc150, #loc148])
#loc260 = loc(fused[#loc155, #loc154])
#loc261 = loc(fused[#loc158, #loc159])
#loc262 = loc(fused[#loc160, #loc161])
#loc264 = loc(fused[#loc165, #loc166])
#loc265 = loc(fused[#loc168, #loc166])
#loc266 = loc(fused[#loc169, #loc170])
#loc267 = loc(fused[#loc171, #loc172])
#loc268 = loc(fused[#loc173, #loc174])
#loc269 = loc(fused[#loc176, #loc175])
#loc270 = loc(fused[#loc177, #loc178])
#loc271 = loc(fused[#loc180, #loc174])
#loc272 = loc(fused[#loc184, #loc183])
#loc273 = loc(fused[#loc185, #loc186])
#loc274 = loc(fused[#loc187, #loc188])
#loc275 = loc(fused[#loc191, #loc189])
#loc276 = loc(fused[#loc193, #loc192])
#loc277 = loc(fused[#loc195, #loc194])
