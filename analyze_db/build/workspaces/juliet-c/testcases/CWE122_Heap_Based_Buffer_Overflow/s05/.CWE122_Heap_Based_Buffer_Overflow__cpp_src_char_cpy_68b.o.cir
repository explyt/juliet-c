!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68_badData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc37)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc38)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc39)
  cir.func @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_687badSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc41)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc42)
    %2 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc37)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    cir.br ^bb1 loc(#loc43)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc41)
    cir.store %4, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc41)
    %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc15)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc16)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %8 = cir.call @strcpy(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc15)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc19)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.delete.array %10 : <!s8i> loc(#loc20)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc8)
  } loc(#loc40)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68_goodG2BData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc44)
  cir.func @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_6811goodG2BSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc46)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc47)
    %2 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc44)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
    cir.br ^bb1 loc(#loc48)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc46)
    cir.store %4, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc46)
    %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc31)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc32)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %8 = cir.call @strcpy(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.delete.array %10 : <!s8i> loc(#loc36)
    cir.br ^bb2 loc(#loc30)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc24)
  } loc(#loc45)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":21:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":21:15)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":31:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":41:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":35:9)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":35:25)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":33:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":33:19)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":34:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":40:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":37:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":37:16)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":37:22)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":38:19)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":38:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":39:19)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":22:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":22:15)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":48:1)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":58:1)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":52:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":52:25)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":50:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":50:19)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":51:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":57:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":54:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":54:16)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":54:22)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":55:19)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":55:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_src_char_cpy_68b.cpp":56:19)
#loc37 = loc(fused[#loc1, #loc2])
#loc38 = loc(fused[#loc3, #loc4])
#loc39 = loc(fused[#loc5, #loc6])
#loc40 = loc(fused[#loc7, #loc8])
#loc41 = loc(fused[#loc9, #loc10])
#loc42 = loc(fused[#loc11, #loc12])
#loc43 = loc(fused[#loc13, #loc14])
#loc44 = loc(fused[#loc21, #loc22])
#loc45 = loc(fused[#loc23, #loc24])
#loc46 = loc(fused[#loc25, #loc26])
#loc47 = loc(fused[#loc27, #loc28])
#loc48 = loc(fused[#loc29, #loc30])
