!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":27:23)
#loc13 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":27:31)
#loc42 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":51:27)
#loc43 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":51:35)
#loc61 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":70:27)
#loc62 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":70:35)
#loc103 = loc(fused[#loc12, #loc13])
#loc115 = loc(fused[#loc42, #loc43])
#loc121 = loc(fused[#loc61, #loc62])
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc99)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc101)
  cir.func internal private @_ZN34CWE401_Memory_Leak__char_malloc_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc15)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc16)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc105)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc23)
      %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc24)
      %20 = cir.cmp(eq, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc109)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc26)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc28)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc110)
    } loc(#loc108)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc29)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc29)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    cir.return loc(#loc11)
  } loc(#loc102)
  cir.func @_ZN34CWE401_Memory_Leak__char_malloc_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.call @_ZN34CWE401_Memory_Leak__char_malloc_43L9badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc39)
    cir.return loc(#loc34)
  } loc(#loc111)
  cir.func internal private @_ZN34CWE401_Memory_Leak__char_malloc_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc42, #loc43])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc44)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc45)
    %3 = cir.const #cir.int<1> : !u64i loc(#loc45)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc45)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc45)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc45)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc47)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc48)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc49)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc49)
    %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc50)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.return loc(#loc41)
  } loc(#loc114)
  cir.func internal private @_ZN34CWE401_Memory_Leak__char_malloc_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc56)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.call @_ZN34CWE401_Memory_Leak__char_malloc_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc58)
    cir.return loc(#loc53)
  } loc(#loc117)
  cir.func internal private @_ZN34CWE401_Memory_Leak__char_malloc_43L13goodB2GSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc121)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc64)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc65)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc122)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc123)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc72)
      %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc73)
      %20 = cir.cmp(eq, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc127)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc75)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc77)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
      } loc(#loc128)
    } loc(#loc126)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc78)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc79)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc80)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc80)
    %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc78)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.return loc(#loc60)
  } loc(#loc120)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc129)
  cir.func internal private @_ZN34CWE401_Memory_Leak__char_malloc_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc89)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.call @_ZN34CWE401_Memory_Leak__char_malloc_43L13goodB2GSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc91)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc92)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc92)
    cir.return loc(#loc86)
  } loc(#loc130)
  cir.func @_ZN34CWE401_Memory_Leak__char_malloc_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN34CWE401_Memory_Leak__char_malloc_43L7goodG2BEv() : () -> () loc(#loc96)
    cir.call @_ZN34CWE401_Memory_Leak__char_malloc_43L7goodB2GEv() : () -> () loc(#loc97)
    cir.return loc(#loc95)
  } loc(#loc133)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":33:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":27:1)
#loc11 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":35:1)
#loc14 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":28:1)
#loc15 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":30:20)
#loc16 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":30:27)
#loc17 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":30:31)
#loc18 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":30:42)
#loc19 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":30:43)
#loc20 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":30:5)
#loc21 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":31:5)
#loc22 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":31:33)
#loc23 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":31:9)
#loc24 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":31:17)
#loc25 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":31:23)
#loc26 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":31:24)
#loc27 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":31:30)
#loc28 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":31:29)
#loc29 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":33:5)
#loc30 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":33:12)
#loc31 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":34:15)
#loc32 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":34:5)
#loc33 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":37:1)
#loc34 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":44:1)
#loc35 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":39:5)
#loc36 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":39:12)
#loc37 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":40:12)
#loc38 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":40:5)
#loc39 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":41:5)
#loc40 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":51:1)
#loc41 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":58:1)
#loc44 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":52:1)
#loc45 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":54:20)
#loc46 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":54:5)
#loc47 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":56:5)
#loc48 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":56:12)
#loc49 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":56:18)
#loc50 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":57:15)
#loc51 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":57:5)
#loc52 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":60:1)
#loc53 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":67:1)
#loc54 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":62:5)
#loc55 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":62:12)
#loc56 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":63:12)
#loc57 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":63:5)
#loc58 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":64:5)
#loc59 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":70:1)
#loc60 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":78:1)
#loc63 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":71:1)
#loc64 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":73:20)
#loc65 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":73:27)
#loc66 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":73:31)
#loc67 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":73:42)
#loc68 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":73:43)
#loc69 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":73:5)
#loc70 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":74:5)
#loc71 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":74:33)
#loc72 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":74:9)
#loc73 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":74:17)
#loc74 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":74:23)
#loc75 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":74:24)
#loc76 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":74:30)
#loc77 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":74:29)
#loc78 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":76:5)
#loc79 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":76:12)
#loc80 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":76:18)
#loc81 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":77:15)
#loc82 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":77:5)
#loc83 = loc("/usr/include/stdlib.h":687:1)
#loc84 = loc("/usr/include/stdlib.h":687:32)
#loc85 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":80:1)
#loc86 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":87:1)
#loc87 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":82:5)
#loc88 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":82:12)
#loc89 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":83:12)
#loc90 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":83:5)
#loc91 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":84:5)
#loc92 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":86:5)
#loc93 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":86:10)
#loc94 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":89:1)
#loc95 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":93:1)
#loc96 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":91:5)
#loc97 = loc("CWE401_Memory_Leak__char_malloc_43.cpp":92:5)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc8, #loc9])
#loc102 = loc(fused[#loc10, #loc11])
#loc104 = loc(fused[#loc17, #loc18])
#loc105 = loc(fused[#loc16, #loc18])
#loc106 = loc(fused[#loc15, #loc19])
#loc107 = loc(fused[#loc20, #loc19])
#loc108 = loc(fused[#loc21, #loc22])
#loc109 = loc(fused[#loc23, #loc24])
#loc110 = loc(fused[#loc25, #loc22])
#loc111 = loc(fused[#loc33, #loc34])
#loc112 = loc(fused[#loc35, #loc36])
#loc113 = loc(fused[#loc38, #loc37])
#loc114 = loc(fused[#loc40, #loc41])
#loc116 = loc(fused[#loc46, #loc45])
#loc117 = loc(fused[#loc52, #loc53])
#loc118 = loc(fused[#loc54, #loc55])
#loc119 = loc(fused[#loc57, #loc56])
#loc120 = loc(fused[#loc59, #loc60])
#loc122 = loc(fused[#loc66, #loc67])
#loc123 = loc(fused[#loc65, #loc67])
#loc124 = loc(fused[#loc64, #loc68])
#loc125 = loc(fused[#loc69, #loc68])
#loc126 = loc(fused[#loc70, #loc71])
#loc127 = loc(fused[#loc72, #loc73])
#loc128 = loc(fused[#loc74, #loc71])
#loc129 = loc(fused[#loc83, #loc84])
#loc130 = loc(fused[#loc85, #loc86])
#loc131 = loc(fused[#loc87, #loc88])
#loc132 = loc(fused[#loc90, #loc89])
#loc133 = loc(fused[#loc94, #loc95])
