!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc307)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc308)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc309)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc310)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc311)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc312)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc313)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc16)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc17)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc18)
  cir.func @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc315)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc23)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc316)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc27)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc318)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc321)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc321)
          cir.store %6, %5 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc321)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc38)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc39)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc39)
            %10 = cir.const #cir.int<8> : !u64i loc(#loc39)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc39)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc39)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc39)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc39)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc39)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc309)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc41)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc42)
            %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc323)
            cir.if %20 {
              %21 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc46)
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc47)
              %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc48)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc49)
              %25 = cir.call @__isoc23_strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc46)
              cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc325)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc52)
            } loc(#loc324)
          } loc(#loc322)
        } loc(#loc320)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc53)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc53)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc326)
      } loc(#loc319)
    } loc(#loc317)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc57)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc328)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc331)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc68)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc333)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc334)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc74)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc75)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc336)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc337)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc79)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc16)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc16)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc79)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc82)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
              cir.delete.array %18 : <!s8i> loc(#loc83)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc17)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc17)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
            } loc(#loc335)
          } loc(#loc332)
        } loc(#loc330)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc339)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc91)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc341)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc342)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc95)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc96)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc96)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc343)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc94)
                cir.yield %15 : !cir.bool loc(#loc94)
              }, false {
                %15 = cir.const #false loc(#loc94)
                cir.yield %15 : !cir.bool loc(#loc94)
              }) : (!cir.bool) -> !cir.bool loc(#loc94)
              cir.yield %14 : !cir.bool loc(#loc94)
            }, false {
              %10 = cir.const #false loc(#loc94)
              cir.yield %10 : !cir.bool loc(#loc94)
            }) : (!cir.bool) -> !cir.bool loc(#loc94)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc100)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc75)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc345)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc346)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc104)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc106)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc106)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc108)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
              cir.delete.array %19 : <!s8i> loc(#loc109)
            } else {
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc18)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc18)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc110)
            } loc(#loc344)
          } loc(#loc340)
        } loc(#loc338)
      } loc(#loc329)
    } loc(#loc327)
    cir.return loc(#loc20)
  } loc(#loc314)
  cir.func internal private @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc348)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc115)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc349)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc119)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc351)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc354)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc354)
          cir.store %6, %5 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc354)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc130)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc131)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc131)
            %10 = cir.const #cir.int<8> : !u64i loc(#loc131)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc131)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc131)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc131)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc131)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc131)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc309)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc132)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc133)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc134)
            %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc356)
            cir.if %20 {
              %21 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc138)
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc139)
              %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc141)
              %25 = cir.call @__isoc23_strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc138)
              cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc358)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc144)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc144)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc145)
            } loc(#loc357)
          } loc(#loc355)
        } loc(#loc353)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc360)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc360)
          cir.store %6, %5 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc360)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc152)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc153)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc153)
            %10 = cir.const #cir.int<8> : !u64i loc(#loc153)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc153)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc153)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc153)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc153)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc153)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc309)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc154)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc155)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc156)
            %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc362)
            cir.if %20 {
              %21 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc160)
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc161)
              %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc163)
              %25 = cir.call @__isoc23_strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc160)
              cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc364)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc166)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc166)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc167)
            } loc(#loc363)
          } loc(#loc361)
        } loc(#loc359)
      } loc(#loc352)
    } loc(#loc350)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc170)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc366)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc369)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc181)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc371)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc372)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc185)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc186)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc186)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc373)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc184)
                cir.yield %15 : !cir.bool loc(#loc184)
              }, false {
                %15 = cir.const #false loc(#loc184)
                cir.yield %15 : !cir.bool loc(#loc184)
              }) : (!cir.bool) -> !cir.bool loc(#loc184)
              cir.yield %14 : !cir.bool loc(#loc184)
            }, false {
              %10 = cir.const #false loc(#loc184)
              cir.yield %10 : !cir.bool loc(#loc184)
            }) : (!cir.bool) -> !cir.bool loc(#loc184)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc190)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc191)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc375)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc376)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc195)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc197)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc197)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc195)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc199)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
              cir.delete.array %19 : <!s8i> loc(#loc200)
            } else {
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc201)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc201)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc202)
            } loc(#loc374)
          } loc(#loc370)
        } loc(#loc368)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc378)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc209)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc380)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc381)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc213)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc214)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc214)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc382)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc212)
                cir.yield %15 : !cir.bool loc(#loc212)
              }, false {
                %15 = cir.const #false loc(#loc212)
                cir.yield %15 : !cir.bool loc(#loc212)
              }) : (!cir.bool) -> !cir.bool loc(#loc212)
              cir.yield %14 : !cir.bool loc(#loc212)
            }, false {
              %10 = cir.const #false loc(#loc212)
              cir.yield %10 : !cir.bool loc(#loc212)
            }) : (!cir.bool) -> !cir.bool loc(#loc212)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc218)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc191)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc384)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc385)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc222)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc223)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc224)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc224)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc222)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc226)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
              cir.delete.array %19 : <!s8i> loc(#loc227)
            } else {
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc228)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc228)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc229)
            } loc(#loc383)
          } loc(#loc379)
        } loc(#loc377)
      } loc(#loc367)
    } loc(#loc365)
    cir.return loc(#loc112)
  } loc(#loc347)
  cir.func internal private @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc387)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc234)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc234)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc388)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc238)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc390)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc243)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc243)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc392)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc245)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc245)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc393)
      } loc(#loc391)
    } loc(#loc389)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc249)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc395)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc398)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc260)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc400)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc401)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc266)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc267)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc403)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc404)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc271)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc272)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc273)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc273)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc271)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc274)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc275)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc276)
              cir.delete.array %18 : <!s8i> loc(#loc276)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc277)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc277)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc278)
            } loc(#loc402)
          } loc(#loc399)
        } loc(#loc397)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc406)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc285)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc408)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc409)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc291)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc267)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc411)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc412)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc295)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc296)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc297)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc297)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc295)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc298)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc299)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc300)
              cir.delete.array %18 : <!s8i> loc(#loc300)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc301)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc301)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc302)
            } loc(#loc410)
          } loc(#loc407)
        } loc(#loc405)
      } loc(#loc396)
    } loc(#loc394)
    cir.return loc(#loc231)
  } loc(#loc386)
  cir.func @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12L7goodB2GEv() : () -> () loc(#loc305)
    cir.call @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12L7goodG2BEv() : () -> () loc(#loc306)
    cir.return loc(#loc304)
  } loc(#loc413)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":219:1)
#loc8 = loc("/usr/include/stdlib.h":223:6)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":49:27)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc14 = loc("/usr/include/string.h":141:1)
#loc15 = loc("/usr/include/string.h":142:14)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":69:34)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":75:27)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":96:27)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":32:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":100:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":34:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":34:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":36:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":36:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":37:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":57:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":37:8)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":37:33)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":38:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":52:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":54:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":39:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":51:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":40:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":40:49)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":42:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":50:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":42:23)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":42:36)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":42:53)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":42:17)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":42:63)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":43:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":46:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":48:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":45:24)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":45:32)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":45:45)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":45:51)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":45:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":45:52)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":49:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":56:16)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":56:9)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":58:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":99:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":58:8)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":58:33)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":59:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":78:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":80:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":60:9)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":77:9)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":61:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":61:20)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":65:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":76:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":65:17)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":65:24)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":65:43)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":66:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":72:13)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":74:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":67:37)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":32:6)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":67:28)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":67:41)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":67:17)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":69:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":69:24)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":70:27)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":70:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":71:27)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":75:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":81:9)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":98:9)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":82:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":82:20)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":86:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":97:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":86:17)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":86:24)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":86:43)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":86:45)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":86:48)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":86:55)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":87:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":93:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":95:13)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":88:37)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":88:28)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":88:41)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":88:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":90:17)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":90:24)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":90:34)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":91:27)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":91:17)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":92:27)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":96:17)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":109:1)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":188:1)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":111:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":111:12)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":113:12)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":113:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":114:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":145:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":114:8)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":114:33)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":115:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":129:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":131:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":116:9)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":128:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":117:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":117:49)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":119:13)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":127:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":119:23)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":119:36)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":119:53)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":119:17)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":119:63)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":120:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":123:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":125:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":122:24)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":122:32)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":122:45)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":122:51)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":122:17)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":122:52)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":126:27)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":126:17)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":132:9)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":144:9)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":133:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":133:49)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":135:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":143:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":135:23)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":135:36)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":135:53)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":135:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":135:63)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":136:13)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":139:13)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":141:13)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":138:24)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":138:32)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":138:45)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":138:51)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":138:17)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":138:52)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":142:27)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":142:17)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":146:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":187:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":146:8)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":146:33)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":147:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":166:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":168:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":148:9)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":165:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":149:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":149:20)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":153:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":164:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":153:17)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":153:24)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":153:43)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":153:45)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":153:48)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":153:55)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":154:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":160:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":162:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":155:37)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":109:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":155:28)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":155:41)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":155:17)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":157:17)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":157:24)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":157:34)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":158:27)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":158:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":159:27)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":163:27)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":163:17)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":169:9)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":186:9)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":170:13)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":170:20)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":174:13)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":185:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":174:17)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":174:24)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":174:43)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":174:45)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":174:48)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":174:55)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":175:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":181:13)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":183:13)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":176:37)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":176:28)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":176:41)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":176:17)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":178:17)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":178:24)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":178:34)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":179:27)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":179:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":180:27)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":184:27)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":184:17)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":193:1)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":250:1)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":195:5)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":195:12)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":197:12)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":197:5)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":198:5)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":207:5)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":198:8)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":198:33)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":199:5)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":202:5)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":204:5)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":201:16)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":201:9)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":206:16)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":206:9)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":208:5)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":249:5)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":208:8)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":208:33)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":209:5)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":228:5)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":230:5)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":210:9)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":227:9)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":211:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":211:20)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":215:13)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":226:13)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":215:17)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":215:24)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":215:43)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":216:13)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":222:13)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":224:13)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":217:37)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":193:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":217:28)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":217:41)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":217:17)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":219:17)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":219:24)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":219:34)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":220:27)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":220:17)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":221:27)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":225:27)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":225:17)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":231:9)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":248:9)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":232:13)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":232:20)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":236:13)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":247:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":236:17)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":236:24)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":236:43)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":237:13)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":243:13)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":245:13)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":238:37)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":238:28)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":238:41)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":238:17)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":240:17)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":240:24)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":240:34)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":241:27)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":241:17)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":242:27)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":246:27)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":246:17)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":252:1)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":256:1)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":254:5)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_12.cpp":255:5)
#loc307 = loc(fused[#loc1, #loc2])
#loc308 = loc(fused[#loc3, #loc4])
#loc309 = loc(fused[#loc5, #loc6])
#loc310 = loc(fused[#loc7, #loc8])
#loc311 = loc(fused[#loc9, #loc10])
#loc312 = loc(fused[#loc12, #loc13])
#loc313 = loc(fused[#loc14, #loc15])
#loc314 = loc(fused[#loc19, #loc20])
#loc315 = loc(fused[#loc21, #loc22])
#loc316 = loc(fused[#loc24, #loc23])
#loc317 = loc(fused[#loc25, #loc26])
#loc318 = loc(fused[#loc27, #loc28])
#loc319 = loc(fused[#loc29, #loc30, #loc31, #loc26])
#loc320 = loc(fused[#loc32, #loc33])
#loc321 = loc(fused[#loc34, #loc35])
#loc322 = loc(fused[#loc36, #loc37])
#loc323 = loc(fused[#loc41, #loc42])
#loc324 = loc(fused[#loc43, #loc44, #loc45, #loc37])
#loc325 = loc(fused[#loc50, #loc51])
#loc326 = loc(fused[#loc54, #loc53])
#loc327 = loc(fused[#loc55, #loc56])
#loc328 = loc(fused[#loc57, #loc58])
#loc329 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc330 = loc(fused[#loc62, #loc63])
#loc331 = loc(fused[#loc64, #loc65])
#loc332 = loc(fused[#loc66, #loc67])
#loc333 = loc(fused[#loc69, #loc70])
#loc334 = loc(fused[#loc68, #loc70])
#loc335 = loc(fused[#loc71, #loc72, #loc73, #loc67])
#loc336 = loc(fused[#loc76, #loc77])
#loc337 = loc(fused[#loc78, #loc77])
#loc338 = loc(fused[#loc85, #loc86])
#loc339 = loc(fused[#loc87, #loc88])
#loc340 = loc(fused[#loc89, #loc90])
#loc341 = loc(fused[#loc92, #loc93])
#loc342 = loc(fused[#loc91, #loc93])
#loc343 = loc(fused[#loc95, #loc96])
#loc344 = loc(fused[#loc97, #loc98, #loc99, #loc90])
#loc345 = loc(fused[#loc101, #loc102])
#loc346 = loc(fused[#loc103, #loc102])
#loc347 = loc(fused[#loc111, #loc112])
#loc348 = loc(fused[#loc113, #loc114])
#loc349 = loc(fused[#loc116, #loc115])
#loc350 = loc(fused[#loc117, #loc118])
#loc351 = loc(fused[#loc119, #loc120])
#loc352 = loc(fused[#loc121, #loc122, #loc123, #loc118])
#loc353 = loc(fused[#loc124, #loc125])
#loc354 = loc(fused[#loc126, #loc127])
#loc355 = loc(fused[#loc128, #loc129])
#loc356 = loc(fused[#loc133, #loc134])
#loc357 = loc(fused[#loc135, #loc136, #loc137, #loc129])
#loc358 = loc(fused[#loc142, #loc143])
#loc359 = loc(fused[#loc146, #loc147])
#loc360 = loc(fused[#loc148, #loc149])
#loc361 = loc(fused[#loc150, #loc151])
#loc362 = loc(fused[#loc155, #loc156])
#loc363 = loc(fused[#loc157, #loc158, #loc159, #loc151])
#loc364 = loc(fused[#loc164, #loc165])
#loc365 = loc(fused[#loc168, #loc169])
#loc366 = loc(fused[#loc170, #loc171])
#loc367 = loc(fused[#loc172, #loc173, #loc174, #loc169])
#loc368 = loc(fused[#loc175, #loc176])
#loc369 = loc(fused[#loc177, #loc178])
#loc370 = loc(fused[#loc179, #loc180])
#loc371 = loc(fused[#loc182, #loc183])
#loc372 = loc(fused[#loc181, #loc183])
#loc373 = loc(fused[#loc185, #loc186])
#loc374 = loc(fused[#loc187, #loc188, #loc189, #loc180])
#loc375 = loc(fused[#loc192, #loc193])
#loc376 = loc(fused[#loc194, #loc193])
#loc377 = loc(fused[#loc203, #loc204])
#loc378 = loc(fused[#loc205, #loc206])
#loc379 = loc(fused[#loc207, #loc208])
#loc380 = loc(fused[#loc210, #loc211])
#loc381 = loc(fused[#loc209, #loc211])
#loc382 = loc(fused[#loc213, #loc214])
#loc383 = loc(fused[#loc215, #loc216, #loc217, #loc208])
#loc384 = loc(fused[#loc219, #loc220])
#loc385 = loc(fused[#loc221, #loc220])
#loc386 = loc(fused[#loc230, #loc231])
#loc387 = loc(fused[#loc232, #loc233])
#loc388 = loc(fused[#loc235, #loc234])
#loc389 = loc(fused[#loc236, #loc237])
#loc390 = loc(fused[#loc238, #loc239])
#loc391 = loc(fused[#loc240, #loc241, #loc242, #loc237])
#loc392 = loc(fused[#loc244, #loc243])
#loc393 = loc(fused[#loc246, #loc245])
#loc394 = loc(fused[#loc247, #loc248])
#loc395 = loc(fused[#loc249, #loc250])
#loc396 = loc(fused[#loc251, #loc252, #loc253, #loc248])
#loc397 = loc(fused[#loc254, #loc255])
#loc398 = loc(fused[#loc256, #loc257])
#loc399 = loc(fused[#loc258, #loc259])
#loc400 = loc(fused[#loc261, #loc262])
#loc401 = loc(fused[#loc260, #loc262])
#loc402 = loc(fused[#loc263, #loc264, #loc265, #loc259])
#loc403 = loc(fused[#loc268, #loc269])
#loc404 = loc(fused[#loc270, #loc269])
#loc405 = loc(fused[#loc279, #loc280])
#loc406 = loc(fused[#loc281, #loc282])
#loc407 = loc(fused[#loc283, #loc284])
#loc408 = loc(fused[#loc286, #loc287])
#loc409 = loc(fused[#loc285, #loc287])
#loc410 = loc(fused[#loc288, #loc289, #loc290, #loc284])
#loc411 = loc(fused[#loc292, #loc293])
#loc412 = loc(fused[#loc294, #loc293])
#loc413 = loc(fused[#loc303, #loc304])
