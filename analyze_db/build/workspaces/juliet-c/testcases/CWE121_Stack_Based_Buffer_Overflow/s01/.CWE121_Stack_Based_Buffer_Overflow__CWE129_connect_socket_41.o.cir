!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":44:21)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":44:25)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":171:25)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":171:29)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":136:25)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":136:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc352 = loc(fused[#loc23, #loc24])
#loc405 = loc(fused[#loc163, #loc164])
#loc456 = loc(fused[#loc297, #loc298])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc342)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc343)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc344)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc345)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc346)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc347)
  cir.func private @close(!s32i) -> !s32i loc(#loc348)
  cir.func private @printIntLine(!s32i) loc(#loc349)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc350)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc23, #loc24])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc352)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc25)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc354)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc355)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc355)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc355)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc357)
        cir.if %6 {
          %7 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
          %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc41)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc41)
          cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc359)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc44)
            cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc361)
            cir.for : cond {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc47)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc362)
              cir.condition(%14) loc(#loc48)
            } body {
              cir.scope {
                %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc50)
                %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc51)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc51)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc51)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc52)
              } loc(#loc363)
              cir.yield loc(#loc43)
            } step {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc53)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc54)
              cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc364)
              cir.yield loc(#loc360)
            } loc(#loc360)
          } loc(#loc360)
        } else {
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc55)
        } loc(#loc358)
      } loc(#loc356)
    } loc(#loc353)
    cir.return loc(#loc22)
  } loc(#loc351)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc366)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc61)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc369)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc370)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc371)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc372)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc70)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc70)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc371)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc77)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc79)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc80)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc375)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc85)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc86)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc86)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc377)
              cir.if %55 {
                cir.break loc(#loc88)
              } loc(#loc378)
            } loc(#loc376)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc379)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc91)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc380)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc381)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc96)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc96)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc382)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc99)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc100)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc101)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc383)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc104)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc104)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc105)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc106)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc384)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc386)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc387)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc387)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc116)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc117)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc117)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc388)
              cir.if %59 {
                cir.break loc(#loc119)
              } loc(#loc389)
            } loc(#loc385)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc122)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc122)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc122)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc122)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc122)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc122)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc122)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc123)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc123)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc390)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc124)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc125)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc125)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc391)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc131)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc131)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc393)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc132)
                cir.yield %57 : !cir.bool loc(#loc132)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc134)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc394)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc132)
                  cir.yield %61 : !cir.bool loc(#loc132)
                }, false {
                  %61 = cir.const #false loc(#loc132)
                  cir.yield %61 : !cir.bool loc(#loc132)
                }) : (!cir.bool) -> !cir.bool loc(#loc132)
                cir.yield %60 : !cir.bool loc(#loc132)
              }) : (!cir.bool) -> !cir.bool loc(#loc132)
              cir.if %56 {
                cir.break loc(#loc136)
              } loc(#loc395)
            } loc(#loc392)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc137)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc137)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc139)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc139)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc396)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc140)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc141)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc397)
          } loc(#loc374)
          cir.yield loc(#loc74)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc144)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc144)
          cir.condition(%11) loc(#loc144)
        } loc(#loc373)
      } loc(#loc373)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc147)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc148)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc148)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc399)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc150)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc151)
        } loc(#loc400)
      } loc(#loc398)
    } loc(#loc368)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.call @badSink(%3) : (!s32i) -> () loc(#loc153)
    cir.return loc(#loc57)
  } loc(#loc365)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc402)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc156)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc403)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc158)
    cir.return loc(#loc155)
  } loc(#loc401)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc160)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc163, #loc164])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc405)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc407)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc408)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc408)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc408)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc175)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc410)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
          %9 = cir.const #cir.int<10> : !s32i loc(#loc178)
          %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc411)
          %11 = cir.ternary(%10, true {
            %12 = cir.const #true loc(#loc176)
            cir.yield %12 : !cir.bool loc(#loc176)
          }, false {
            %12 = cir.const #false loc(#loc176)
            cir.yield %12 : !cir.bool loc(#loc176)
          }) : (!cir.bool) -> !cir.bool loc(#loc176)
          cir.yield %11 : !cir.bool loc(#loc176)
        }, false {
          %8 = cir.const #false loc(#loc176)
          cir.yield %8 : !cir.bool loc(#loc176)
        }) : (!cir.bool) -> !cir.bool loc(#loc176)
        cir.if %7 {
          %8 = cir.const #cir.int<1> : !s32i loc(#loc183)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
          %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc185)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc185)
          cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc413)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc188)
            cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc415)
            cir.for : cond {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc191)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc416)
              cir.condition(%15) loc(#loc192)
            } body {
              cir.scope {
                %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc194)
                %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc195)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc195)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc196)
              } loc(#loc417)
              cir.yield loc(#loc187)
            } step {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc197)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc198)
              cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc418)
              cir.yield loc(#loc414)
            } loc(#loc414)
          } loc(#loc414)
        } else {
          %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc160)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc160)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc199)
        } loc(#loc412)
      } loc(#loc409)
    } loc(#loc406)
    cir.return loc(#loc162)
  } loc(#loc404)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc420)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc205)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc421)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc423)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc424)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc425)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc426)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc214)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc214)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc425)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc221)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc222)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc223)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc224)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc429)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc229)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc230)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc230)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc431)
              cir.if %55 {
                cir.break loc(#loc232)
              } loc(#loc432)
            } loc(#loc430)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc433)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc235)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc434)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc435)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc240)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc240)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc436)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc242)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc242)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc243)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc100)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc101)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc437)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc246)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc246)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc247)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc106)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc438)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc252)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc440)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc441)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc441)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc257)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc258)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc258)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc442)
              cir.if %59 {
                cir.break loc(#loc260)
              } loc(#loc443)
            } loc(#loc439)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc261)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc262)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc262)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc263)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc263)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc263)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc263)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc263)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc263)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc263)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc264)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc264)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc444)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc265)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc266)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc266)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc445)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc271)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc272)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc272)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc447)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc273)
                cir.yield %57 : !cir.bool loc(#loc273)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc274)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc275)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc448)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc273)
                  cir.yield %61 : !cir.bool loc(#loc273)
                }, false {
                  %61 = cir.const #false loc(#loc273)
                  cir.yield %61 : !cir.bool loc(#loc273)
                }) : (!cir.bool) -> !cir.bool loc(#loc273)
                cir.yield %60 : !cir.bool loc(#loc273)
              }) : (!cir.bool) -> !cir.bool loc(#loc273)
              cir.if %56 {
                cir.break loc(#loc277)
              } loc(#loc449)
            } loc(#loc446)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc278)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc278)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc279)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc280)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc280)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc450)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc281)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc282)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc451)
          } loc(#loc428)
          cir.yield loc(#loc218)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc285)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc285)
          cir.condition(%11) loc(#loc285)
        } loc(#loc427)
      } loc(#loc427)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc288)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc289)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc289)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc453)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc291)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc292)
        } loc(#loc454)
      } loc(#loc452)
    } loc(#loc422)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    cir.call @goodB2GSink(%3) : (!s32i) -> () loc(#loc294)
    cir.return loc(#loc201)
  } loc(#loc419)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc297, #loc298])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc456)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc458)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc459)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc459)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc459)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc308)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc309)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc461)
        cir.if %6 {
          %7 = cir.const #cir.int<1> : !s32i loc(#loc313)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc314)
          %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc315)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc315)
          cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc463)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc318)
            cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc465)
            cir.for : cond {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc320)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc321)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc466)
              cir.condition(%14) loc(#loc322)
            } body {
              cir.scope {
                %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc325)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc325)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc325)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc326)
              } loc(#loc467)
              cir.yield loc(#loc317)
            } step {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc327)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc328)
              cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc468)
              cir.yield loc(#loc464)
            } loc(#loc464)
          } loc(#loc464)
        } else {
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc329)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc329)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc330)
        } loc(#loc462)
      } loc(#loc460)
    } loc(#loc457)
    cir.return loc(#loc296)
  } loc(#loc455)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc470)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc335)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc336)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc471)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc338)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc472)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc340)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc341)
    cir.return loc(#loc332)
  } loc(#loc469)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":98:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":62:23)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":44:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":65:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":45:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":46:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":64:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":47:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":47:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":48:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":48:30)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":51:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":63:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":51:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":51:21)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":52:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":59:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":61:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":53:28)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":53:20)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":53:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":58:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:21)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:24)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:28)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:26)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":56:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":57:37)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":57:30)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":57:17)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:33)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:32)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":62:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":67:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":129:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":69:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":69:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":71:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":71:12)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":71:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":72:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":127:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":77:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":77:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":78:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":78:28)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":79:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":79:32)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":80:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":80:41)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":81:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":116:17)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":82:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":115:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:36)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:45)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:58)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:29)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:69)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":92:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":95:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":92:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":92:34)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":93:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":94:17)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:20)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:21)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:30)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:33)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:47)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:48)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":97:34)
#loc97 = loc("/usr/include/netinet/in.h":249:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":97:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":98:39)
#loc100 = loc("/usr/include/netinet/in.h":251:20)
#loc101 = loc("/usr/include/netinet/in.h":33:15)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":98:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":98:59)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":99:38)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":99:32)
#loc106 = loc("/usr/include/netinet/in.h":250:15)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":99:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":99:46)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":103:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:25)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:58)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:59)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:68)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:82)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:17)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:88)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":101:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":102:17)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:31)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:46)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:59)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:77)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:80)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:26)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:13)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:81)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":110:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:17)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:31)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:44)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:47)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:61)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":108:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":109:17)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":112:39)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":112:25)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":112:13)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":114:25)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":114:20)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":114:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":114:36)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":116:16)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":117:9)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":120:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":117:13)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":117:30)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":118:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":119:26)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":119:13)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":128:13)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":128:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":257:1)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":261:1)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":259:5)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":259:13)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":260:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":260:13)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":188:23)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":171:1)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":191:1)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":172:1)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":173:5)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":190:5)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":174:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":174:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":175:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":175:30)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:9)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":189:9)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:13)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:21)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:23)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:26)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:34)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:36)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":178:9)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":185:9)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":187:9)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":179:28)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":179:20)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":179:13)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:13)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":184:13)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:21)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:17)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:24)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:28)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:26)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":182:13)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":183:37)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":183:30)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":183:17)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:33)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:32)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":188:13)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":193:1)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":255:1)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":195:5)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":195:9)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":197:13)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":197:12)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":197:5)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":198:5)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":253:5)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":203:9)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":203:13)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":204:9)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":204:28)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":205:9)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":205:32)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":206:9)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":206:41)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":207:9)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":242:17)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":208:9)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":241:9)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:36)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:45)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:58)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:29)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:13)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:69)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":218:13)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":221:13)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":218:17)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":218:34)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":219:13)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":220:17)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:20)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:21)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:30)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:33)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:47)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:13)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:48)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":223:34)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":223:13)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":224:49)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":224:39)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":224:13)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":224:59)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":225:38)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":225:32)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":225:13)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":225:46)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:13)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":229:13)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:25)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:58)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:59)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:68)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:82)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:17)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:88)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":227:13)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":228:17)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:31)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:46)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:59)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:77)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:80)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:26)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:13)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:81)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:13)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":236:13)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:17)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:31)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:44)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:47)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:61)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":234:13)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":235:17)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":238:39)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":238:25)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":238:13)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":240:25)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":240:20)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":240:13)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":240:36)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":242:16)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":243:9)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":246:9)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":243:13)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":243:30)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":244:9)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":245:26)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":245:13)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":254:17)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":254:5)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":136:1)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":157:1)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":137:1)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":138:5)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":156:5)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":139:9)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":139:13)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":140:9)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":140:30)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":143:9)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":155:9)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":143:13)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":143:21)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":144:9)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":151:9)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":153:9)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":145:28)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":145:20)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":145:13)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:13)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":150:13)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:21)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:17)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:24)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:28)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:26)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":148:13)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":149:37)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":149:30)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":149:17)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:33)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:32)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":154:23)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":154:13)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":159:1)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":168:1)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":161:5)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":161:9)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":163:13)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":163:12)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":163:5)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":166:12)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":166:5)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":167:17)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":167:5)
#loc342 = loc(fused[#loc1, #loc2])
#loc343 = loc(fused[#loc3, #loc4])
#loc344 = loc(fused[#loc6, #loc7])
#loc345 = loc(fused[#loc8, #loc9])
#loc346 = loc(fused[#loc10, #loc11])
#loc347 = loc(fused[#loc12, #loc13])
#loc348 = loc(fused[#loc14, #loc15])
#loc349 = loc(fused[#loc16, #loc17])
#loc350 = loc(fused[#loc18, #loc19])
#loc351 = loc(fused[#loc21, #loc22])
#loc353 = loc(fused[#loc26, #loc27])
#loc354 = loc(fused[#loc28, #loc29])
#loc355 = loc(fused[#loc30, #loc31])
#loc356 = loc(fused[#loc32, #loc33])
#loc357 = loc(fused[#loc34, #loc35])
#loc358 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc359 = loc(fused[#loc41, #loc39])
#loc360 = loc(fused[#loc42, #loc43])
#loc361 = loc(fused[#loc45, #loc44])
#loc362 = loc(fused[#loc46, #loc47])
#loc363 = loc(fused[#loc49, #loc43])
#loc364 = loc(fused[#loc54, #loc53])
#loc365 = loc(fused[#loc56, #loc57])
#loc366 = loc(fused[#loc58, #loc59])
#loc367 = loc(fused[#loc62, #loc60])
#loc368 = loc(fused[#loc63, #loc64])
#loc369 = loc(fused[#loc65, #loc66])
#loc370 = loc(fused[#loc67, #loc68])
#loc371 = loc(fused[#loc69, #loc70])
#loc372 = loc(fused[#loc71, #loc72])
#loc373 = loc(fused[#loc73, #loc74])
#loc374 = loc(fused[#loc75, #loc76])
#loc375 = loc(fused[#loc81, #loc82])
#loc376 = loc(fused[#loc83, #loc84])
#loc377 = loc(fused[#loc85, #loc86])
#loc378 = loc(fused[#loc87, #loc84])
#loc379 = loc(fused[#loc89, #loc90])
#loc380 = loc(fused[#loc92, #loc93])
#loc381 = loc(fused[#loc94, #loc95])
#loc382 = loc(fused[#loc98, #loc96])
#loc383 = loc(fused[#loc102, #loc103])
#loc384 = loc(fused[#loc107, #loc108])
#loc385 = loc(fused[#loc109, #loc110])
#loc386 = loc(fused[#loc112, #loc113])
#loc387 = loc(fused[#loc114, #loc115])
#loc388 = loc(fused[#loc116, #loc117])
#loc389 = loc(fused[#loc118, #loc110])
#loc390 = loc(fused[#loc122, #loc123])
#loc391 = loc(fused[#loc126, #loc127])
#loc392 = loc(fused[#loc128, #loc129])
#loc393 = loc(fused[#loc130, #loc131])
#loc394 = loc(fused[#loc133, #loc134])
#loc395 = loc(fused[#loc135, #loc129])
#loc396 = loc(fused[#loc139, #loc137])
#loc397 = loc(fused[#loc142, #loc143])
#loc398 = loc(fused[#loc145, #loc146])
#loc399 = loc(fused[#loc147, #loc148])
#loc400 = loc(fused[#loc149, #loc146])
#loc401 = loc(fused[#loc154, #loc155])
#loc402 = loc(fused[#loc156, #loc157])
#loc403 = loc(fused[#loc158, #loc159])
#loc404 = loc(fused[#loc161, #loc162])
#loc406 = loc(fused[#loc166, #loc167])
#loc407 = loc(fused[#loc168, #loc169])
#loc408 = loc(fused[#loc170, #loc171])
#loc409 = loc(fused[#loc172, #loc173])
#loc410 = loc(fused[#loc174, #loc175])
#loc411 = loc(fused[#loc177, #loc179])
#loc412 = loc(fused[#loc180, #loc181, #loc182, #loc173])
#loc413 = loc(fused[#loc185, #loc183])
#loc414 = loc(fused[#loc186, #loc187])
#loc415 = loc(fused[#loc189, #loc188])
#loc416 = loc(fused[#loc190, #loc191])
#loc417 = loc(fused[#loc193, #loc187])
#loc418 = loc(fused[#loc198, #loc197])
#loc419 = loc(fused[#loc200, #loc201])
#loc420 = loc(fused[#loc202, #loc203])
#loc421 = loc(fused[#loc206, #loc204])
#loc422 = loc(fused[#loc207, #loc208])
#loc423 = loc(fused[#loc209, #loc210])
#loc424 = loc(fused[#loc211, #loc212])
#loc425 = loc(fused[#loc213, #loc214])
#loc426 = loc(fused[#loc215, #loc216])
#loc427 = loc(fused[#loc217, #loc218])
#loc428 = loc(fused[#loc219, #loc220])
#loc429 = loc(fused[#loc225, #loc226])
#loc430 = loc(fused[#loc227, #loc228])
#loc431 = loc(fused[#loc229, #loc230])
#loc432 = loc(fused[#loc231, #loc228])
#loc433 = loc(fused[#loc233, #loc234])
#loc434 = loc(fused[#loc236, #loc237])
#loc435 = loc(fused[#loc238, #loc239])
#loc436 = loc(fused[#loc241, #loc240])
#loc437 = loc(fused[#loc244, #loc245])
#loc438 = loc(fused[#loc248, #loc249])
#loc439 = loc(fused[#loc250, #loc251])
#loc440 = loc(fused[#loc253, #loc254])
#loc441 = loc(fused[#loc255, #loc256])
#loc442 = loc(fused[#loc257, #loc258])
#loc443 = loc(fused[#loc259, #loc251])
#loc444 = loc(fused[#loc263, #loc264])
#loc445 = loc(fused[#loc267, #loc268])
#loc446 = loc(fused[#loc269, #loc270])
#loc447 = loc(fused[#loc271, #loc272])
#loc448 = loc(fused[#loc274, #loc275])
#loc449 = loc(fused[#loc276, #loc270])
#loc450 = loc(fused[#loc280, #loc278])
#loc451 = loc(fused[#loc283, #loc284])
#loc452 = loc(fused[#loc286, #loc287])
#loc453 = loc(fused[#loc288, #loc289])
#loc454 = loc(fused[#loc290, #loc287])
#loc455 = loc(fused[#loc295, #loc296])
#loc457 = loc(fused[#loc300, #loc301])
#loc458 = loc(fused[#loc302, #loc303])
#loc459 = loc(fused[#loc304, #loc305])
#loc460 = loc(fused[#loc306, #loc307])
#loc461 = loc(fused[#loc308, #loc309])
#loc462 = loc(fused[#loc310, #loc311, #loc312, #loc307])
#loc463 = loc(fused[#loc315, #loc313])
#loc464 = loc(fused[#loc316, #loc317])
#loc465 = loc(fused[#loc319, #loc318])
#loc466 = loc(fused[#loc320, #loc321])
#loc467 = loc(fused[#loc323, #loc317])
#loc468 = loc(fused[#loc328, #loc327])
#loc469 = loc(fused[#loc331, #loc332])
#loc470 = loc(fused[#loc333, #loc334])
#loc471 = loc(fused[#loc337, #loc335])
#loc472 = loc(fused[#loc339, #loc338])
