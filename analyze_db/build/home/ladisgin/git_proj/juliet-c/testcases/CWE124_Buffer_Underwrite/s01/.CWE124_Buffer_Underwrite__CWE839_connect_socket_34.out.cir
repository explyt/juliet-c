!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":277:10)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":277:14)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":277:20)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":277:32)
#true = #cir.bool<true> : !cir.bool
!ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType = !cir.struct<union "CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType" {!s32i, !s32i}>
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc437 = loc(fused[#loc171, #loc172])
#loc438 = loc(fused[#loc173, #loc174])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc371)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc372)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc373)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc374)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc375)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc376)
  cir.func private @close(!s32i) -> !s32i loc(#loc377)
  cir.func private @printIntLine(!s32i) loc(#loc378)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc379)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc381)
    %1 = cir.alloca !ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType, !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc382)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc28)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc385)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc386)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc387)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc388)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc37)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc387)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc42)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc44)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc390)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc50)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc51)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc51)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc392)
            cir.if %57 {
              cir.break loc(#loc53)
            } loc(#loc393)
          } loc(#loc391)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc394)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc56)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc395)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc396)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc61)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc61)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc397)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc64)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc398)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc69)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc69)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc70)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc399)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc76)
            %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc401)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc402)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc402)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc81)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc82)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc82)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc403)
            cir.if %61 {
              cir.break loc(#loc84)
            } loc(#loc404)
          } loc(#loc400)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc85)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc86)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
          %34 = cir.const #cir.int<3> : !s32i loc(#loc87)
          %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc87)
          %36 = cir.const #cir.int<4> : !u64i loc(#loc87)
          %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc87)
          %38 = cir.const #cir.int<2> : !s32i loc(#loc87)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc87)
          %40 = cir.binop(add, %37, %39) : !u64i loc(#loc87)
          %41 = cir.const #cir.int<1> : !s32i loc(#loc88)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc88)
          %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc405)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc89)
          %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc90)
          %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc90)
          cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc406)
          cir.scope {
            %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc96)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc408)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc97)
              cir.yield %59 : !cir.bool loc(#loc97)
            }, false {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc98)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc99)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc409)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc97)
                cir.yield %63 : !cir.bool loc(#loc97)
              }, false {
                %63 = cir.const #false loc(#loc97)
                cir.yield %63 : !cir.bool loc(#loc97)
              }) : (!cir.bool) -> !cir.bool loc(#loc97)
              cir.yield %62 : !cir.bool loc(#loc97)
            }) : (!cir.bool) -> !cir.bool loc(#loc97)
            cir.if %58 {
              cir.break loc(#loc101)
            } loc(#loc410)
          } loc(#loc407)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc102)
          %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc103)
          %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
          %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc104)
          cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc411)
          %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
          %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc106)
          cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc412)
          cir.yield loc(#loc41)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc109)
          cir.condition(%13) loc(#loc109)
        } loc(#loc389)
      } loc(#loc389)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc113)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc414)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc116)
        } loc(#loc415)
      } loc(#loc413)
    } loc(#loc384)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc118)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc416)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc418)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc124)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc418)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc420)
        %10 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc421)
        %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc421)
        cir.store %11, %10 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc421)
        cir.scope {
          %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc133)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc134)
          %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc423)
          cir.if %14 {
            %15 = cir.const #cir.int<1> : !s32i loc(#loc138)
            %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %17 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc140)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc140)
            cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc425)
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc143)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc427)
              cir.for : cond {
                %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                %21 = cir.const #cir.int<10> : !s32i loc(#loc146)
                %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc428)
                cir.condition(%22) loc(#loc147)
              } body {
                cir.scope {
                  %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                  %21 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc150)
                  %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc150)
                  %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                  cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc151)
                } loc(#loc429)
                cir.yield loc(#loc142)
              } step {
                %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc153)
                cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc430)
                cir.yield loc(#loc426)
              } loc(#loc426)
            } loc(#loc426)
          } else {
            %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc154)
          } loc(#loc424)
        } loc(#loc422)
      } loc(#loc419)
    } loc(#loc417)
    cir.return loc(#loc22)
  } loc(#loc380)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc432)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc157)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc433)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc159)
    cir.return loc(#loc156)
  } loc(#loc431)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc434)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc435)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc168)
  cir.func @main(%arg0: !s32i loc(fused[#loc171, #loc172]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc173, #loc174])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc437)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc438)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc170)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc175)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc176)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc177)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc177)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc178)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc165)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc179)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc439)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_34_good() : () -> () loc(#loc180)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc166)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc182)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc167)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc440)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_34_bad() : () -> () loc(#loc184)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc168)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc187)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc441)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc441)
    cir.return %17 : !s32i loc(#loc441)
  } loc(#loc436)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc443)
    %1 = cir.alloca !ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType, !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc444)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc195)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc196)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc198)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc446)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc118)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc449)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc124)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc205)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc449)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc451)
        %11 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc452)
        %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc452)
        cir.store %12, %11 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc452)
        cir.scope {
          %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc214)
          %14 = cir.const #cir.int<10> : !s32i loc(#loc215)
          %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc454)
          cir.if %15 {
            %16 = cir.const #cir.int<1> : !s32i loc(#loc219)
            %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc220)
            %18 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc221)
            %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc221)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc456)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc224)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc458)
              cir.for : cond {
                %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                %22 = cir.const #cir.int<10> : !s32i loc(#loc227)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc459)
                cir.condition(%23) loc(#loc228)
              } body {
                cir.scope {
                  %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                  %22 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc231)
                  %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc231)
                  %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                  cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc232)
                } loc(#loc460)
                cir.yield loc(#loc223)
              } step {
                %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc234)
                cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc461)
                cir.yield loc(#loc457)
              } loc(#loc457)
            } loc(#loc457)
          } else {
            %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc235)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc235)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc236)
          } loc(#loc455)
        } loc(#loc453)
      } loc(#loc450)
    } loc(#loc448)
    cir.return loc(#loc190)
  } loc(#loc442)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc237)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc463)
    %1 = cir.alloca !ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType, !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc464)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc245)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc465)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc467)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc468)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc469)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc470)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc254)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc254)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc469)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc259)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc260)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc261)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc262)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc472)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc267)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc268)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc268)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc474)
            cir.if %57 {
              cir.break loc(#loc270)
            } loc(#loc475)
          } loc(#loc473)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc476)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc273)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc477)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc478)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc278)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc278)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc479)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc280)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc280)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc281)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc480)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc284)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc284)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc285)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc481)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc290)
            %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc483)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc484)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc484)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc295)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc296)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc296)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc485)
            cir.if %61 {
              cir.break loc(#loc298)
            } loc(#loc486)
          } loc(#loc482)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc299)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc300)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc300)
          %34 = cir.const #cir.int<3> : !s32i loc(#loc301)
          %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc301)
          %36 = cir.const #cir.int<4> : !u64i loc(#loc301)
          %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc301)
          %38 = cir.const #cir.int<2> : !s32i loc(#loc301)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc301)
          %40 = cir.binop(add, %37, %39) : !u64i loc(#loc301)
          %41 = cir.const #cir.int<1> : !s32i loc(#loc302)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc302)
          %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc487)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc303)
          %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc304)
          %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc304)
          cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc488)
          cir.scope {
            %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc309)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc310)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc310)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc490)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc311)
              cir.yield %59 : !cir.bool loc(#loc311)
            }, false {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc312)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc313)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc491)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc311)
                cir.yield %63 : !cir.bool loc(#loc311)
              }, false {
                %63 = cir.const #false loc(#loc311)
                cir.yield %63 : !cir.bool loc(#loc311)
              }) : (!cir.bool) -> !cir.bool loc(#loc311)
              cir.yield %62 : !cir.bool loc(#loc311)
            }) : (!cir.bool) -> !cir.bool loc(#loc311)
            cir.if %58 {
              cir.break loc(#loc315)
            } loc(#loc492)
          } loc(#loc489)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc316)
          %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc316)
          %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc317)
          %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc318)
          %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc318)
          cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc493)
          %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc319)
          %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc320)
          cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc494)
          cir.yield loc(#loc258)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc323)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc323)
          cir.condition(%13) loc(#loc323)
        } loc(#loc471)
      } loc(#loc471)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc326)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc327)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc327)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc496)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc329)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc330)
        } loc(#loc497)
      } loc(#loc495)
    } loc(#loc466)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc331)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc118)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc498)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc500)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc124)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc336)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc500)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc502)
        %10 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc503)
        %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc503)
        cir.store %11, %10 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc503)
        cir.scope {
          %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc345)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc346)
          %14 = cir.cmp(ge, %12, %13) : !s32i, !cir.bool loc(#loc505)
          %15 = cir.ternary(%14, true {
            %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc348)
            %17 = cir.const #cir.int<10> : !s32i loc(#loc349)
            %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc506)
            %19 = cir.ternary(%18, true {
              %20 = cir.const #true loc(#loc347)
              cir.yield %20 : !cir.bool loc(#loc347)
            }, false {
              %20 = cir.const #false loc(#loc347)
              cir.yield %20 : !cir.bool loc(#loc347)
            }) : (!cir.bool) -> !cir.bool loc(#loc347)
            cir.yield %19 : !cir.bool loc(#loc347)
          }, false {
            %16 = cir.const #false loc(#loc347)
            cir.yield %16 : !cir.bool loc(#loc347)
          }) : (!cir.bool) -> !cir.bool loc(#loc347)
          cir.if %15 {
            %16 = cir.const #cir.int<1> : !s32i loc(#loc354)
            %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc355)
            %18 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc356)
            %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc356)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc508)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc359)
              cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc510)
              cir.for : cond {
                %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc361)
                %22 = cir.const #cir.int<10> : !s32i loc(#loc362)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc511)
                cir.condition(%23) loc(#loc363)
              } body {
                cir.scope {
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc365)
                  %22 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc366)
                  %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc366)
                  %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc366)
                  cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc367)
                } loc(#loc512)
                cir.yield loc(#loc358)
              } step {
                %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc368)
                %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc369)
                cir.store %22, %9 : !s32i, !cir.ptr<!s32i> loc(#loc513)
                cir.yield loc(#loc509)
              } loc(#loc509)
            } loc(#loc509)
          } else {
            %16 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc237)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc237)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc370)
          } loc(#loc507)
        } loc(#loc504)
      } loc(#loc501)
    } loc(#loc499)
    cir.return loc(#loc239)
  } loc(#loc462)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":82:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":131:27)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":50:1)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":135:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":52:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":52:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":53:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":53:66)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":55:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":55:12)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":55:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":56:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":111:5)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":61:9)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":61:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":62:9)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":62:28)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":63:9)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":63:32)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":64:9)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":64:41)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":65:9)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":100:17)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":75:36)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":75:45)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":75:58)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":75:29)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":75:13)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":75:69)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":76:13)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":79:13)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":76:17)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":76:34)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":77:13)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":78:17)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":80:20)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":80:21)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":80:30)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":80:33)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":80:47)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":80:13)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":80:48)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":81:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":81:13)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":82:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":82:13)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":82:59)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":83:38)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":83:32)
#loc71 = loc("/usr/include/netinet/in.h":250:15)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":83:13)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":83:46)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":84:13)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":87:13)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":84:25)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":84:58)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":84:59)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":84:68)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":84:82)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":84:17)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":84:88)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":85:13)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":86:17)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":90:31)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":90:46)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":90:59)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":90:77)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":90:80)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":90:26)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":90:13)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":90:81)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":91:13)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":94:13)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":91:17)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":91:31)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":91:44)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":91:47)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":91:61)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":92:13)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":93:17)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":96:39)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":96:25)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":96:13)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":98:25)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":98:20)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":98:13)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":98:36)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":100:16)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":101:9)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":104:9)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":101:13)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":101:30)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":102:9)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":103:26)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":103:13)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":112:26)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":44:9)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":112:5)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":113:5)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":134:5)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":114:9)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":114:28)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":45:9)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":115:9)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":133:9)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":116:13)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":116:17)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":117:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":117:34)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":120:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":132:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":120:17)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":120:24)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":121:13)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":128:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":130:13)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":122:32)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":122:24)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":122:17)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":124:17)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":127:17)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":124:25)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":124:21)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":124:28)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":124:32)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":124:30)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":125:17)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":126:41)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":126:34)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":126:21)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":124:37)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":124:36)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":131:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":263:1)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":267:1)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":265:5)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":265:13)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":266:5)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":266:13)
#loc161 = loc("/usr/include/stdlib.h":575:1)
#loc162 = loc("/usr/include/stdlib.h":575:41)
#loc163 = loc("/usr/include/time.h":76:1)
#loc164 = loc("/usr/include/time.h":76:38)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":282:15)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":284:15)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":287:15)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":289:15)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":277:1)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":292:1)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":278:1)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":280:27)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":280:22)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":280:5)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":282:5)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":283:5)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":283:61)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":284:5)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":287:5)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":288:5)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":288:60)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":289:5)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":291:12)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":291:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":142:1)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":174:1)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":144:5)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":144:9)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":145:5)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":145:66)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":147:13)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":147:12)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":147:5)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":150:12)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":150:5)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":151:26)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":151:5)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":152:5)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":173:5)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":153:9)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":153:28)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":154:9)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":172:9)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":155:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":155:17)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":156:13)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":156:34)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":159:13)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":171:13)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":159:17)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":159:24)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":160:13)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":167:13)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":169:13)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":161:32)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":161:24)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":161:17)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":163:17)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":166:17)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":163:25)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":163:21)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":163:28)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":163:32)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":163:30)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":164:17)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":165:41)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":165:34)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":165:21)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":163:37)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":163:36)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":170:27)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":170:17)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":257:27)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":177:1)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":261:1)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":179:5)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":179:9)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":180:5)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":180:66)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":182:13)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":182:12)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":182:5)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":183:5)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":238:5)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":188:9)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":188:13)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":189:9)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":189:28)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":190:9)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":190:32)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":191:9)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":191:41)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":192:9)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":227:17)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":202:36)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":202:45)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":202:58)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":202:29)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":202:13)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":202:69)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":203:13)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":206:13)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":203:17)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":203:34)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":204:13)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":205:17)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":207:20)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":207:21)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":207:30)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":207:33)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":207:47)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":207:13)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":207:48)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":208:34)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":208:13)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":209:49)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":209:39)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":209:13)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":209:59)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":210:38)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":210:32)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":210:13)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":210:46)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":211:13)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":214:13)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":211:25)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":211:58)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":211:59)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":211:68)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":211:82)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":211:17)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":211:88)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":212:13)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":213:17)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":217:31)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":217:46)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":217:59)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":217:77)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":217:80)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":217:26)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":217:13)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":217:81)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":218:13)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":221:13)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":218:17)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":218:31)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":218:44)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":218:47)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":218:61)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":219:13)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":220:17)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":223:39)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":223:25)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":223:13)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":225:25)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":225:20)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":225:13)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":225:36)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":227:16)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":228:9)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":231:9)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":228:13)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":228:30)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":229:9)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":230:26)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":230:13)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":239:26)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":239:5)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":240:5)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":260:5)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":241:9)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":241:28)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":242:9)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":259:9)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":243:13)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":243:17)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":244:13)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":244:34)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":246:13)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":258:13)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":246:17)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":246:25)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":246:27)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":246:30)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":246:38)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":246:40)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":247:13)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":254:13)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":256:13)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":248:32)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":248:24)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":248:17)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":250:17)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":253:17)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":250:25)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":250:21)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":250:28)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":250:32)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":250:30)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":251:17)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":252:41)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":252:34)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":252:21)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":250:37)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":250:36)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_34.c":257:17)
#loc371 = loc(fused[#loc1, #loc2])
#loc372 = loc(fused[#loc3, #loc4])
#loc373 = loc(fused[#loc6, #loc7])
#loc374 = loc(fused[#loc8, #loc9])
#loc375 = loc(fused[#loc10, #loc11])
#loc376 = loc(fused[#loc12, #loc13])
#loc377 = loc(fused[#loc14, #loc15])
#loc378 = loc(fused[#loc16, #loc17])
#loc379 = loc(fused[#loc18, #loc19])
#loc380 = loc(fused[#loc21, #loc22])
#loc381 = loc(fused[#loc23, #loc24])
#loc382 = loc(fused[#loc25, #loc26])
#loc383 = loc(fused[#loc29, #loc27])
#loc384 = loc(fused[#loc30, #loc31])
#loc385 = loc(fused[#loc32, #loc33])
#loc386 = loc(fused[#loc34, #loc35])
#loc387 = loc(fused[#loc36, #loc37])
#loc388 = loc(fused[#loc38, #loc39])
#loc389 = loc(fused[#loc40, #loc41])
#loc390 = loc(fused[#loc46, #loc47])
#loc391 = loc(fused[#loc48, #loc49])
#loc392 = loc(fused[#loc50, #loc51])
#loc393 = loc(fused[#loc52, #loc49])
#loc394 = loc(fused[#loc54, #loc55])
#loc395 = loc(fused[#loc57, #loc58])
#loc396 = loc(fused[#loc59, #loc60])
#loc397 = loc(fused[#loc63, #loc61])
#loc398 = loc(fused[#loc67, #loc68])
#loc399 = loc(fused[#loc72, #loc73])
#loc400 = loc(fused[#loc74, #loc75])
#loc401 = loc(fused[#loc77, #loc78])
#loc402 = loc(fused[#loc79, #loc80])
#loc403 = loc(fused[#loc81, #loc82])
#loc404 = loc(fused[#loc83, #loc75])
#loc405 = loc(fused[#loc87, #loc88])
#loc406 = loc(fused[#loc91, #loc92])
#loc407 = loc(fused[#loc93, #loc94])
#loc408 = loc(fused[#loc95, #loc96])
#loc409 = loc(fused[#loc98, #loc99])
#loc410 = loc(fused[#loc100, #loc94])
#loc411 = loc(fused[#loc104, #loc102])
#loc412 = loc(fused[#loc107, #loc108])
#loc413 = loc(fused[#loc110, #loc111])
#loc414 = loc(fused[#loc112, #loc113])
#loc415 = loc(fused[#loc114, #loc111])
#loc416 = loc(fused[#loc119, #loc117])
#loc417 = loc(fused[#loc120, #loc121])
#loc418 = loc(fused[#loc122, #loc123])
#loc419 = loc(fused[#loc125, #loc126])
#loc420 = loc(fused[#loc127, #loc128])
#loc421 = loc(fused[#loc129, #loc130])
#loc422 = loc(fused[#loc131, #loc132])
#loc423 = loc(fused[#loc133, #loc134])
#loc424 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc425 = loc(fused[#loc140, #loc138])
#loc426 = loc(fused[#loc141, #loc142])
#loc427 = loc(fused[#loc144, #loc143])
#loc428 = loc(fused[#loc145, #loc146])
#loc429 = loc(fused[#loc148, #loc142])
#loc430 = loc(fused[#loc153, #loc152])
#loc431 = loc(fused[#loc155, #loc156])
#loc432 = loc(fused[#loc157, #loc158])
#loc433 = loc(fused[#loc159, #loc160])
#loc434 = loc(fused[#loc161, #loc162])
#loc435 = loc(fused[#loc163, #loc164])
#loc436 = loc(fused[#loc169, #loc170])
#loc439 = loc(fused[#loc180, #loc181])
#loc440 = loc(fused[#loc184, #loc185])
#loc441 = loc(fused[#loc188, #loc187])
#loc442 = loc(fused[#loc189, #loc190])
#loc443 = loc(fused[#loc191, #loc192])
#loc444 = loc(fused[#loc193, #loc194])
#loc445 = loc(fused[#loc197, #loc195])
#loc446 = loc(fused[#loc199, #loc198])
#loc447 = loc(fused[#loc201, #loc200])
#loc448 = loc(fused[#loc202, #loc203])
#loc449 = loc(fused[#loc204, #loc205])
#loc450 = loc(fused[#loc206, #loc207])
#loc451 = loc(fused[#loc208, #loc209])
#loc452 = loc(fused[#loc210, #loc211])
#loc453 = loc(fused[#loc212, #loc213])
#loc454 = loc(fused[#loc214, #loc215])
#loc455 = loc(fused[#loc216, #loc217, #loc218, #loc213])
#loc456 = loc(fused[#loc221, #loc219])
#loc457 = loc(fused[#loc222, #loc223])
#loc458 = loc(fused[#loc225, #loc224])
#loc459 = loc(fused[#loc226, #loc227])
#loc460 = loc(fused[#loc229, #loc223])
#loc461 = loc(fused[#loc234, #loc233])
#loc462 = loc(fused[#loc238, #loc239])
#loc463 = loc(fused[#loc240, #loc241])
#loc464 = loc(fused[#loc242, #loc243])
#loc465 = loc(fused[#loc246, #loc244])
#loc466 = loc(fused[#loc247, #loc248])
#loc467 = loc(fused[#loc249, #loc250])
#loc468 = loc(fused[#loc251, #loc252])
#loc469 = loc(fused[#loc253, #loc254])
#loc470 = loc(fused[#loc255, #loc256])
#loc471 = loc(fused[#loc257, #loc258])
#loc472 = loc(fused[#loc263, #loc264])
#loc473 = loc(fused[#loc265, #loc266])
#loc474 = loc(fused[#loc267, #loc268])
#loc475 = loc(fused[#loc269, #loc266])
#loc476 = loc(fused[#loc271, #loc272])
#loc477 = loc(fused[#loc274, #loc275])
#loc478 = loc(fused[#loc276, #loc277])
#loc479 = loc(fused[#loc279, #loc278])
#loc480 = loc(fused[#loc282, #loc283])
#loc481 = loc(fused[#loc286, #loc287])
#loc482 = loc(fused[#loc288, #loc289])
#loc483 = loc(fused[#loc291, #loc292])
#loc484 = loc(fused[#loc293, #loc294])
#loc485 = loc(fused[#loc295, #loc296])
#loc486 = loc(fused[#loc297, #loc289])
#loc487 = loc(fused[#loc301, #loc302])
#loc488 = loc(fused[#loc305, #loc306])
#loc489 = loc(fused[#loc307, #loc308])
#loc490 = loc(fused[#loc309, #loc310])
#loc491 = loc(fused[#loc312, #loc313])
#loc492 = loc(fused[#loc314, #loc308])
#loc493 = loc(fused[#loc318, #loc316])
#loc494 = loc(fused[#loc321, #loc322])
#loc495 = loc(fused[#loc324, #loc325])
#loc496 = loc(fused[#loc326, #loc327])
#loc497 = loc(fused[#loc328, #loc325])
#loc498 = loc(fused[#loc332, #loc331])
#loc499 = loc(fused[#loc333, #loc334])
#loc500 = loc(fused[#loc335, #loc336])
#loc501 = loc(fused[#loc337, #loc338])
#loc502 = loc(fused[#loc339, #loc340])
#loc503 = loc(fused[#loc341, #loc342])
#loc504 = loc(fused[#loc343, #loc344])
#loc505 = loc(fused[#loc345, #loc346])
#loc506 = loc(fused[#loc348, #loc350])
#loc507 = loc(fused[#loc351, #loc352, #loc353, #loc344])
#loc508 = loc(fused[#loc356, #loc354])
#loc509 = loc(fused[#loc357, #loc358])
#loc510 = loc(fused[#loc360, #loc359])
#loc511 = loc(fused[#loc361, #loc362])
#loc512 = loc(fused[#loc364, #loc358])
#loc513 = loc(fused[#loc369, #loc368])
