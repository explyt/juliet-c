!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc92)
  cir.func private  @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
  cir.func private  @system(!cir.ptr<!s8i>) -> !s32i loc(#loc95)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc96)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc97)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_system_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc100)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc100)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc100)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc25)
        cir.condition(%5) loc(#loc25)
      } do {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc104)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc105)
          %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc32)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc32)
          cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc104)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
          %11 = cir.call @getenv(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
          cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
            %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
            %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !s32i loc(#loc107)
            %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc39)
            cir.if %16 {
              %17 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc41)
              %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
              %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc43)
              %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc44)
              %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
              %22 = cir.const #cir.int<100> : !s32i loc(#loc46)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc46)
              %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc47)
              %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc109)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc48)
              %28 = cir.binop(sub, %25, %27) : !u64i loc(#loc110)
              %29 = cir.call @strncat(%20, %21, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
            } loc(#loc108)
          } loc(#loc106)
        } loc(#loc103)
        cir.break loc(#loc49)
      } loc(#loc102)
    } loc(#loc102)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc53)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc54)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !s32i loc(#loc112)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc55)
      cir.if %8 {
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc12)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc58)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc59)
        cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
      } loc(#loc113)
    } loc(#loc111)
    cir.return loc(#loc16)
  } loc(#loc98)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_system_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc115)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc114)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc116)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc119)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc119)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc119)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc77)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc77)
        cir.condition(%5) loc(#loc77)
      } do {
        %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc78)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc66)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc66)
        %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc78)
        cir.break loc(#loc80)
      } loc(#loc121)
    } loc(#loc121)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc84)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc85)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !s32i loc(#loc123)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc86)
      cir.if %8 {
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc88)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc88)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc89)
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc91)
        cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
      } loc(#loc124)
    } loc(#loc122)
    cir.return loc(#loc68)
  } loc(#loc117)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdlib.h":773:1)
#loc4 = loc("/usr/include/stdlib.h":773:50)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":54:41)
#loc6 = loc("/usr/include/string.h":152:1)
#loc7 = loc("/usr/include/string.h":153:29)
#loc8 = loc("/usr/include/stdlib.h":923:1)
#loc9 = loc("/usr/include/stdlib.h":923:41)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":67:19)
#loc13 = loc("/usr/include/stdlib.h":756:1)
#loc14 = loc("/usr/include/stdlib.h":756:70)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":44:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":70:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":46:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":46:12)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":47:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":47:26)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":48:12)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":48:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":49:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":63:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":49:11)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":51:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":61:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":53:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":53:41)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":54:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":54:53)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":53:30)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":53:37)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":54:34)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":56:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":60:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":56:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":56:32)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":56:29)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":57:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":59:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":59:25)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":59:30)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":59:29)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":59:39)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":59:52)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":59:56)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":59:64)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":62:9)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":65:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":69:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":65:16)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":65:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":65:25)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":65:22)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":66:5)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":67:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":68:9)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":68:14)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":96:1)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":99:1)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":98:5)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":98:13)
#loc64 = loc("/usr/include/string.h":149:1)
#loc65 = loc("/usr/include/string.h":150:14)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":85:22)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":77:1)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":94:1)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":79:5)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":79:12)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":80:5)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":80:26)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":81:12)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":81:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":82:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":87:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":82:11)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":85:9)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":85:16)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":86:9)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":89:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":93:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":89:16)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":89:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":89:25)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":89:22)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":90:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":91:19)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":91:9)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":92:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_system_16.c":92:14)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc6, #loc7])
#loc95 = loc(fused[#loc8, #loc9])
#loc96 = loc(fused[#loc10, #loc11])
#loc97 = loc(fused[#loc13, #loc14])
#loc98 = loc(fused[#loc15, #loc16])
#loc99 = loc(fused[#loc17, #loc18])
#loc100 = loc(fused[#loc19, #loc20])
#loc101 = loc(fused[#loc22, #loc21])
#loc102 = loc(fused[#loc23, #loc24])
#loc103 = loc(fused[#loc26, #loc27])
#loc104 = loc(fused[#loc28, #loc29])
#loc105 = loc(fused[#loc30, #loc31])
#loc106 = loc(fused[#loc35, #loc36])
#loc107 = loc(fused[#loc37, #loc38])
#loc108 = loc(fused[#loc40, #loc36])
#loc109 = loc(fused[#loc46, #loc47])
#loc110 = loc(fused[#loc46, #loc48])
#loc111 = loc(fused[#loc50, #loc51])
#loc112 = loc(fused[#loc53, #loc54])
#loc113 = loc(fused[#loc56, #loc51])
#loc114 = loc(fused[#loc60, #loc61])
#loc115 = loc(fused[#loc62, #loc63])
#loc116 = loc(fused[#loc64, #loc65])
#loc117 = loc(fused[#loc67, #loc68])
#loc118 = loc(fused[#loc69, #loc70])
#loc119 = loc(fused[#loc71, #loc72])
#loc120 = loc(fused[#loc74, #loc73])
#loc121 = loc(fused[#loc75, #loc76])
#loc122 = loc(fused[#loc81, #loc82])
#loc123 = loc(fused[#loc84, #loc85])
#loc124 = loc(fused[#loc87, #loc82])
