!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @CWE369_Divide_by_Zero__int_listen_socket_modulo_61b_badSource(!s32i) -> !s32i loc(#loc69)
  cir.func private  @printIntLine(!s32i) loc(#loc70)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_listen_socket_modulo_61_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc72)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc10)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    %4 = cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_61b_badSource(%3) : (!s32i) -> !s32i loc(#loc13)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc75)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc18)
    cir.return loc(#loc6)
  } loc(#loc71)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_listen_socket_modulo_61_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc77)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc78)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc20)
  } loc(#loc76)
  cir.func private  @CWE369_Divide_by_Zero__int_listen_socket_modulo_61b_goodG2BSource(!s32i) -> !s32i loc(#loc79)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc81)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc32)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %4 = cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_61b_goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc35)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc84)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc40)
    cir.return loc(#loc28)
  } loc(#loc80)
  cir.func private  @CWE369_Divide_by_Zero__int_listen_socket_modulo_61b_goodB2GSource(!s32i) -> !s32i loc(#loc85)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc86)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc45)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc88)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc51)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %4 = cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_61b_goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc54)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.scope {
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc60)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !s32i loc(#loc92)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc61)
      cir.if %8 {
        %9 = cir.const #cir.int<100> : !s32i loc(#loc65)
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
        %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc94)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc67)
      } else {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc45)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc45)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
      } loc(#loc93)
    } loc(#loc91)
    cir.return loc(#loc47)
  } loc(#loc87)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":0:0)
#loc1 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":45:1)
#loc2 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":45:75)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":47:1)
#loc6 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":55:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":49:5)
#loc8 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":49:9)
#loc9 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":51:13)
#loc10 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":51:12)
#loc11 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":51:5)
#loc12 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":52:74)
#loc13 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":52:12)
#loc14 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":52:5)
#loc15 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":52:78)
#loc16 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":54:18)
#loc17 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":54:24)
#loc18 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":54:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":94:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":98:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":96:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":96:13)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":97:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":97:13)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":62:1)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":62:79)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":64:1)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":72:1)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":66:5)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":66:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":68:13)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":68:12)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":68:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":69:78)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":69:12)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":69:5)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":69:82)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":71:18)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":71:24)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":71:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":75:1)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":75:79)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":90:19)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":77:1)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":92:1)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":79:5)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":79:9)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":81:13)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":81:12)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":81:5)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":82:78)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":82:12)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":82:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":82:82)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":84:5)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":91:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":84:9)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":84:17)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":84:14)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":85:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":87:5)
#loc64 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":89:5)
#loc65 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":86:22)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":86:28)
#loc67 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":86:9)
#loc68 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_61a.c":90:9)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc3, #loc4])
#loc71 = loc(fused[#loc5, #loc6])
#loc72 = loc(fused[#loc7, #loc8])
#loc73 = loc(fused[#loc11, #loc9])
#loc74 = loc(fused[#loc14, #loc15])
#loc75 = loc(fused[#loc16, #loc17])
#loc76 = loc(fused[#loc19, #loc20])
#loc77 = loc(fused[#loc21, #loc22])
#loc78 = loc(fused[#loc23, #loc24])
#loc79 = loc(fused[#loc25, #loc26])
#loc80 = loc(fused[#loc27, #loc28])
#loc81 = loc(fused[#loc29, #loc30])
#loc82 = loc(fused[#loc33, #loc31])
#loc83 = loc(fused[#loc36, #loc37])
#loc84 = loc(fused[#loc38, #loc39])
#loc85 = loc(fused[#loc41, #loc42])
#loc86 = loc(fused[#loc43, #loc44])
#loc87 = loc(fused[#loc46, #loc47])
#loc88 = loc(fused[#loc48, #loc49])
#loc89 = loc(fused[#loc52, #loc50])
#loc90 = loc(fused[#loc55, #loc56])
#loc91 = loc(fused[#loc57, #loc58])
#loc92 = loc(fused[#loc59, #loc60])
#loc93 = loc(fused[#loc62, #loc63, #loc64, #loc58])
#loc94 = loc(fused[#loc65, #loc66])
