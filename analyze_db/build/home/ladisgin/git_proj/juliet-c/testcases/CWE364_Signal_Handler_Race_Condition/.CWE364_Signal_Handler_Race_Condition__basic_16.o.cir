!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":28:27)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":36:24)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":36:28)
!ty__structSigAtomic = !cir.struct<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc157 = loc(fused[#loc15, #loc16])
#loc185 = loc(fused[#loc83, #loc84])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc150)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc151)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc152)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc153)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc155)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc157)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc150)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc159)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc160)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
    %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc150)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
    %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc14)
  } loc(#loc156)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc32)
    cir.brcond %2 ^bb3, ^bb18 loc(#loc32)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc165)
  ^bb4:  // pred: ^bb3
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc29)
    cir.store %3, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc163)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc35)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
    %6 = cir.call @signal(%4, %5) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc37)
    cir.br ^bb5 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc150)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc40)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc41)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc167)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc168)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc43)
    %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc150)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc44)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc44)
    cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc45)
    %17 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc150)
    cir.store %16, %17 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc169)
    cir.br ^bb7 loc(#loc39)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc39)
  ^bb8:  // pred: ^bb7
    %18 = cir.const #cir.int<4> : !u64i loc(#loc170)
    %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc171)
    cir.store %20, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc172)
    cir.br ^bb9 loc(#loc173)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc54)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc55)
    %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc174)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc175)
  ^bb10:  // pred: ^bb9
    %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc57)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc59)
    cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc57)
    cir.br ^bb11 loc(#loc53)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc53)
  ^bb12:  // pred: ^bb11
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc60)
    %29 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc150)
    cir.store %28, %29 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc176)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc150)
    %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc63)
    %33 = cir.get_member %32[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %35 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
    %36 = cir.call @signal(%34, %35) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc66)
    cir.br ^bb13 loc(#loc178)
  ^bb13:  // pred: ^bb12
    %37 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc150)
    %38 = cir.load %37 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc69)
    %39 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc70)
    %41 = cir.cmp(ne, %38, %40) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc179)
    cir.brcond %41 ^bb14, ^bb15 loc(#loc180)
  ^bb14:  // pred: ^bb13
    %42 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc72)
    %43 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc150)
    %44 = cir.load %43 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc73)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc73)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
    %46 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc74)
    %47 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc150)
    cir.store %46, %47 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
    cir.br ^bb15 loc(#loc68)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc68)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc34)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc76)
  ^bb18:  // 2 preds: ^bb2, ^bb17
    cir.br ^bb19 loc(#loc31)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc27)
  } loc(#loc162)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    cir.return loc(#loc78)
  } loc(#loc182)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc83, #loc84])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc185)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc151)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc88)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc89)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc187)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc188)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc91)
    %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc151)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc92)
    %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb3 loc(#loc87)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc82)
  } loc(#loc184)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc192)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc99)
    cir.brcond %2 ^bb3, ^bb18 loc(#loc99)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc193)
  ^bb4:  // pred: ^bb3
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc96)
    cir.store %3, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc191)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc102)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc103)
    %6 = cir.call @signal(%4, %5) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc104)
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc151)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc107)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc108)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc195)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc196)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc110)
    %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc151)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc111)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc111)
    cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc110)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc112)
    %17 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc151)
    cir.store %16, %17 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc197)
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // pred: ^bb7
    %18 = cir.const #cir.int<4> : !u64i loc(#loc198)
    %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc199)
    cir.store %20, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc200)
    cir.br ^bb9 loc(#loc201)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc121)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc122)
    %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc202)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc203)
  ^bb10:  // pred: ^bb9
    %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc124)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc126)
    cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc124)
    cir.br ^bb11 loc(#loc120)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc120)
  ^bb12:  // pred: ^bb11
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc127)
    %29 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc151)
    cir.store %28, %29 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc204)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc151)
    %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc130)
    %33 = cir.get_member %32[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc131)
    %35 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc132)
    %36 = cir.call @signal(%34, %35) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc133)
    %37 = cir.const #cir.int<2> : !s32i loc(#loc134)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc135)
    %39 = cir.call @signal(%37, %38) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc136)
    cir.br ^bb13 loc(#loc206)
  ^bb13:  // pred: ^bb12
    %40 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc151)
    %41 = cir.load %40 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc139)
    %42 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc140)
    %44 = cir.cmp(ne, %41, %43) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc207)
    cir.brcond %44 ^bb14, ^bb15 loc(#loc208)
  ^bb14:  // pred: ^bb13
    %45 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc142)
    %46 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc151)
    %47 = cir.load %46 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc143)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc143)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc142)
    %49 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc144)
    %50 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc151)
    cir.store %49, %50 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc209)
    cir.br ^bb15 loc(#loc138)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc138)
  ^bb16:  // pred: ^bb15
    %51 = cir.const #cir.int<2> : !s32i loc(#loc146)
    %52 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
    %53 = cir.call @signal(%51, %52) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc148)
    cir.br ^bb17 loc(#loc101)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc149)
  ^bb18:  // 2 preds: ^bb2, ^bb17
    cir.br ^bb19 loc(#loc98)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc94)
  } loc(#loc190)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_16.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":22:18)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":46:1)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":87:1)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":51:13)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":51:49)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":48:5)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":86:5)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":48:11)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":50:9)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":84:9)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":52:20)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":52:28)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":52:13)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":53:13)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":57:13)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":53:17)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":53:85)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":54:13)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":55:17)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":55:22)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":56:84)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":56:17)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":58:57)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":58:79)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":58:50)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":58:80)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":58:13)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:13)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:53)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:17)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:37)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:43)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:44)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:50)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:49)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":60:80)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":60:13)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":61:85)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":61:13)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":69:20)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":69:28)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":69:13)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":79:13)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":83:13)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":79:17)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":79:85)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":80:13)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":81:17)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":81:22)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":82:84)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":82:17)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":85:9)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":135:1)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":138:1)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":137:5)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":137:11)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":36:1)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":42:1)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":37:1)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":38:5)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":41:5)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":38:9)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":38:78)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":39:5)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":40:82)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":40:9)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":94:1)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":133:1)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":99:13)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":99:49)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":96:5)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":132:5)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":96:11)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":98:9)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":130:9)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":100:20)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":100:28)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":100:13)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":101:13)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":105:13)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":101:17)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":101:86)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":102:13)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":103:17)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":103:22)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":104:85)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":104:17)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":106:57)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":106:79)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":106:50)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":106:80)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":106:13)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:13)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:53)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:17)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:37)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:43)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:44)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:50)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:49)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":108:81)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":108:13)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":109:86)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":109:13)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":117:20)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":117:28)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":117:13)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":123:20)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":123:28)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":123:13)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":124:13)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":128:13)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":124:17)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":124:86)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":125:13)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":126:17)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":126:22)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":127:85)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":127:17)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":129:20)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":129:28)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":129:13)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":131:9)
#loc150 = loc(fused[#loc1, #loc2])
#loc151 = loc(fused[#loc3, #loc4])
#loc152 = loc(fused[#loc5, #loc6])
#loc153 = loc(fused[#loc7, #loc8])
#loc154 = loc(fused[#loc9, #loc10])
#loc155 = loc(fused[#loc11, #loc12])
#loc156 = loc(fused[#loc13, #loc14])
#loc158 = loc(fused[#loc18, #loc19])
#loc159 = loc(fused[#loc20, #loc21])
#loc160 = loc(fused[#loc22, #loc19])
#loc161 = loc(fused[#loc24, #loc23])
#loc162 = loc(fused[#loc26, #loc27])
#loc163 = loc(fused[#loc28, #loc29])
#loc164 = loc(fused[#loc30, #loc31])
#loc165 = loc(fused[#loc33, #loc34])
#loc166 = loc(fused[#loc38, #loc39])
#loc167 = loc(fused[#loc40, #loc41])
#loc168 = loc(fused[#loc42, #loc39])
#loc169 = loc(fused[#loc46, #loc45])
#loc170 = loc(fused[#loc47, #loc48])
#loc171 = loc(fused[#loc49, #loc50])
#loc172 = loc(fused[#loc51, #loc50])
#loc173 = loc(fused[#loc52, #loc53])
#loc174 = loc(fused[#loc54, #loc55])
#loc175 = loc(fused[#loc56, #loc53])
#loc176 = loc(fused[#loc61, #loc60])
#loc177 = loc(fused[#loc63, #loc62])
#loc178 = loc(fused[#loc67, #loc68])
#loc179 = loc(fused[#loc69, #loc70])
#loc180 = loc(fused[#loc71, #loc68])
#loc181 = loc(fused[#loc75, #loc74])
#loc182 = loc(fused[#loc77, #loc78])
#loc183 = loc(fused[#loc79, #loc80])
#loc184 = loc(fused[#loc81, #loc82])
#loc186 = loc(fused[#loc86, #loc87])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc90, #loc87])
#loc189 = loc(fused[#loc92, #loc91])
#loc190 = loc(fused[#loc93, #loc94])
#loc191 = loc(fused[#loc95, #loc96])
#loc192 = loc(fused[#loc97, #loc98])
#loc193 = loc(fused[#loc100, #loc101])
#loc194 = loc(fused[#loc105, #loc106])
#loc195 = loc(fused[#loc107, #loc108])
#loc196 = loc(fused[#loc109, #loc106])
#loc197 = loc(fused[#loc113, #loc112])
#loc198 = loc(fused[#loc114, #loc115])
#loc199 = loc(fused[#loc116, #loc117])
#loc200 = loc(fused[#loc118, #loc117])
#loc201 = loc(fused[#loc119, #loc120])
#loc202 = loc(fused[#loc121, #loc122])
#loc203 = loc(fused[#loc123, #loc120])
#loc204 = loc(fused[#loc128, #loc127])
#loc205 = loc(fused[#loc130, #loc129])
#loc206 = loc(fused[#loc137, #loc138])
#loc207 = loc(fused[#loc139, #loc140])
#loc208 = loc(fused[#loc141, #loc138])
#loc209 = loc(fused[#loc145, #loc144])
