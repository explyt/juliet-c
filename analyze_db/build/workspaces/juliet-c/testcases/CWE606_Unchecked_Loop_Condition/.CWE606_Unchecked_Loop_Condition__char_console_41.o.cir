!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":28:21)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":28:28)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":113:25)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":113:32)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":84:25)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":84:32)
#true = #cir.bool<true> : !cir.bool
#loc270 = loc(fused[#loc17, #loc18])
#loc312 = loc(fused[#loc116, #loc117])
#loc355 = loc(fused[#loc219, #loc220])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc263)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc264)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc265)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printIntLine(!s32i) loc(#loc268)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc270)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc19)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc272)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc273)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc274)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc28)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc28)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc276)
        cir.if %10 {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc32)
          cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc278)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc36)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc280)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
              %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc281)
              cir.condition(%16) loc(#loc40)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc42)
                %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc43)
                cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc283)
              } loc(#loc282)
              cir.yield loc(#loc35)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
              %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc45)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc284)
              cir.yield loc(#loc279)
            } loc(#loc279)
          } loc(#loc279)
          %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc46)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc47)
        } loc(#loc277)
      } loc(#loc275)
    } loc(#loc271)
    cir.return loc(#loc16)
  } loc(#loc269)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc286)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc287)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc287)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc287)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc290)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc60)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc60)
      cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc290)
      cir.scope {
        %9 = cir.const #cir.int<100> : !s32i loc(#loc64)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc64)
        %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc65)
        %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc292)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc66)
        %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc293)
        cir.if %15 {
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
            %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc71)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc72)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc73)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc73)
            %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc296)
            %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc296)
            %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc265)
            %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
            %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc76)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
            %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc297)
            cir.if %29 {
              %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc81)
              %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
              %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc81)
              cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc299)
              cir.scope {
                %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc87)
                %34 = cir.const #cir.int<0> : !s32i loc(#loc88)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc88)
                %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc301)
                %37 = cir.ternary(%36, true {
                  %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
                  %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc91)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc92)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc92)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc302)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc93)
                  %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc90)
                  %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc90)
                  %46 = cir.const #cir.int<10> : !s32i loc(#loc94)
                  %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc303)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc89)
                    cir.yield %49 : !cir.bool loc(#loc89)
                  }, false {
                    %49 = cir.const #false loc(#loc89)
                    cir.yield %49 : !cir.bool loc(#loc89)
                  }) : (!cir.bool) -> !cir.bool loc(#loc89)
                  cir.yield %48 : !cir.bool loc(#loc89)
                }, false {
                  %38 = cir.const #false loc(#loc89)
                  cir.yield %38 : !cir.bool loc(#loc89)
                }) : (!cir.bool) -> !cir.bool loc(#loc89)
                cir.if %37 {
                  %38 = cir.const #cir.int<0> : !s32i loc(#loc96)
                  %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc96)
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
                  %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc98)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc99)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc99)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc305)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc100)
                  cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc306)
                } loc(#loc304)
              } loc(#loc300)
            } else {
              %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc101)
              %32 = cir.const #cir.int<0> : !s32i loc(#loc102)
              %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc102)
              %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
              %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc104)
              %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc105)
              cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc307)
            } loc(#loc298)
          } loc(#loc295)
        } loc(#loc294)
      } loc(#loc291)
    } loc(#loc289)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    cir.call @badSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.return loc(#loc49)
  } loc(#loc285)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc309)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc110)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc310)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc112)
    cir.return loc(#loc109)
  } loc(#loc308)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc116, #loc117])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc312)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc314)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc315)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc316)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc127)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc129)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc129)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc127)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc130)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc318)
        cir.if %10 {
          cir.scope {
            %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %12 = cir.const #cir.int<10000> : !s32i loc(#loc135)
            %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc321)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc137)
              cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc323)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc141)
                cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc325)
                cir.for : cond {
                  %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                  %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc326)
                  cir.condition(%19) loc(#loc145)
                } body {
                  cir.scope {
                    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                    %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc148)
                    cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc328)
                  } loc(#loc327)
                  cir.yield loc(#loc140)
                } step {
                  %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc150)
                  cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc329)
                  cir.yield loc(#loc324)
                } loc(#loc324)
              } loc(#loc324)
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc152)
            } loc(#loc322)
          } loc(#loc320)
        } loc(#loc319)
      } loc(#loc317)
    } loc(#loc313)
    cir.return loc(#loc115)
  } loc(#loc311)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc331)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc332)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc332)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc332)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc159)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc335)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc165)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc165)
      cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc335)
      cir.scope {
        %9 = cir.const #cir.int<100> : !s32i loc(#loc169)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc169)
        %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc170)
        %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc337)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc171)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc171)
        %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc338)
        cir.if %15 {
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
            %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc176)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc177)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc178)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc178)
            %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc179)
            %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc341)
            %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc341)
            %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc265)
            %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc180)
            %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc181)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc182)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
            %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc342)
            cir.if %29 {
              %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc186)
              %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
              %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc186)
              cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc344)
              cir.scope {
                %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc192)
                %34 = cir.const #cir.int<0> : !s32i loc(#loc193)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc193)
                %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc346)
                %37 = cir.ternary(%36, true {
                  %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
                  %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc196)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc197)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc197)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc347)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc198)
                  %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc195)
                  %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc195)
                  %46 = cir.const #cir.int<10> : !s32i loc(#loc199)
                  %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc348)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc194)
                    cir.yield %49 : !cir.bool loc(#loc194)
                  }, false {
                    %49 = cir.const #false loc(#loc194)
                    cir.yield %49 : !cir.bool loc(#loc194)
                  }) : (!cir.bool) -> !cir.bool loc(#loc194)
                  cir.yield %48 : !cir.bool loc(#loc194)
                }, false {
                  %38 = cir.const #false loc(#loc194)
                  cir.yield %38 : !cir.bool loc(#loc194)
                }) : (!cir.bool) -> !cir.bool loc(#loc194)
                cir.if %37 {
                  %38 = cir.const #cir.int<0> : !s32i loc(#loc201)
                  %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc201)
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
                  %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc203)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc204)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc204)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc350)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc205)
                  cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc351)
                } loc(#loc349)
              } loc(#loc345)
            } else {
              %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc206)
              %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc206)
              cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc207)
              %32 = cir.const #cir.int<0> : !s32i loc(#loc208)
              %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc208)
              %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
              %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc210)
              %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc211)
              cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc352)
            } loc(#loc343)
          } loc(#loc340)
        } loc(#loc339)
      } loc(#loc336)
    } loc(#loc334)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
    cir.call @goodB2GSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc213)
    cir.return loc(#loc154)
  } loc(#loc330)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc353)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc216)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc219, #loc220])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc355)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc357)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc358)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc359)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc230)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc232)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc232)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc230)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc233)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc361)
        cir.if %10 {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc235)
          cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc363)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc239)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc365)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc241)
              %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc242)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc366)
              cir.condition(%16) loc(#loc243)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc246)
                cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc368)
              } loc(#loc367)
              cir.yield loc(#loc238)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc247)
              %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc248)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc369)
              cir.yield loc(#loc364)
            } loc(#loc364)
          } loc(#loc364)
          %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc249)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc250)
        } loc(#loc362)
      } loc(#loc360)
    } loc(#loc356)
    cir.return loc(#loc218)
  } loc(#loc354)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc371)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc372)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc372)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc372)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc257)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc373)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc259)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc216)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc216)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc259)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc261)
    cir.call @goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc262)
    cir.return loc(#loc252)
  } loc(#loc370)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_41.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":70:27)
#loc10 = loc("/usr/include/stdio.h":468:1)
#loc11 = loc("/usr/include/stdio.h":468:12)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":32:26)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":28:1)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":44:1)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":29:1)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":30:5)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":43:5)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":31:9)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":31:13)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":31:16)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":31:19)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":32:9)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":42:9)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":32:13)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":32:20)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":32:39)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":33:9)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":35:27)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":35:13)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:13)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":40:13)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:22)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:18)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:25)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:29)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:27)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":37:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":39:28)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":39:17)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:33)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:32)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":41:26)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":41:13)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":46:1)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":77:1)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":48:5)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":48:12)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":49:5)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":49:28)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":50:12)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":50:5)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":51:5)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":75:5)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":53:9)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":53:37)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":53:26)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":53:33)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":55:9)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":74:9)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":55:13)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":55:17)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":55:27)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":56:9)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:13)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":73:13)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:23)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:28)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:27)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:43)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:47)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:57)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:17)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:67)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":59:13)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":67:13)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":69:13)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":62:27)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":62:34)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":62:17)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":62:38)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:17)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":66:17)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:21)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:31)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:33)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:36)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:41)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:49)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:50)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:55)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":64:17)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":65:39)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":65:21)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":65:26)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":65:34)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":65:35)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":70:17)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":72:33)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":72:17)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":72:22)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":72:29)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":76:13)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":76:5)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":167:1)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":171:1)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":169:5)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":169:13)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":170:5)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":170:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":113:1)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":132:1)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":114:1)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":115:5)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":131:5)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":116:9)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":116:13)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":116:16)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":116:19)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":117:9)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":130:9)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":117:13)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":117:20)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":117:26)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":117:39)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":118:9)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":120:13)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":129:13)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":120:17)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":120:21)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":121:13)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":122:31)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":122:17)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:17)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":127:17)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:26)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:22)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:29)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:33)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:31)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":124:17)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":126:32)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":126:21)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:37)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:36)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":128:30)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":128:17)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":134:1)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":165:1)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":136:5)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":136:12)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":137:5)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":137:28)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":138:12)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":138:5)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":139:5)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":163:5)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":141:9)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":141:37)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":141:26)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":141:33)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":143:9)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":162:9)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":143:13)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":143:17)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":143:27)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":144:9)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:13)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":161:13)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:23)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:28)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:27)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:43)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:47)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:57)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:17)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:67)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":147:13)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":155:13)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":157:13)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":150:27)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":150:34)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":150:17)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":150:38)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:17)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":154:17)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:21)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:31)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:33)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:36)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:41)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:49)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:50)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:55)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":152:17)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":153:39)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":153:21)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":153:26)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":153:34)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":153:35)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":158:27)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":158:17)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":160:33)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":160:17)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":160:22)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":160:29)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":164:17)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":164:5)
#loc214 = loc("/usr/include/string.h":141:1)
#loc215 = loc("/usr/include/string.h":142:14)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":108:18)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":84:1)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":100:1)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":85:1)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":86:5)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":99:5)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":87:9)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":87:13)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":87:16)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":87:19)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":88:9)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":98:9)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":88:13)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":88:20)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":88:26)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":88:39)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":89:9)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":91:27)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":91:13)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:13)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":96:13)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:22)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:18)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:25)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:29)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:27)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":93:13)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":95:28)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":95:17)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:33)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:32)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":97:26)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":97:13)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":102:1)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":110:1)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":104:5)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":104:12)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":105:5)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":105:28)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":106:12)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":106:5)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":108:5)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":108:12)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":109:17)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":109:5)
#loc263 = loc(fused[#loc1, #loc2])
#loc264 = loc(fused[#loc3, #loc4])
#loc265 = loc(fused[#loc5, #loc6])
#loc266 = loc(fused[#loc7, #loc8])
#loc267 = loc(fused[#loc10, #loc11])
#loc268 = loc(fused[#loc13, #loc14])
#loc269 = loc(fused[#loc15, #loc16])
#loc271 = loc(fused[#loc20, #loc21])
#loc272 = loc(fused[#loc22, #loc23])
#loc273 = loc(fused[#loc22, #loc24])
#loc274 = loc(fused[#loc22, #loc25])
#loc275 = loc(fused[#loc26, #loc27])
#loc276 = loc(fused[#loc28, #loc30])
#loc277 = loc(fused[#loc31, #loc27])
#loc278 = loc(fused[#loc33, #loc32])
#loc279 = loc(fused[#loc34, #loc35])
#loc280 = loc(fused[#loc37, #loc36])
#loc281 = loc(fused[#loc38, #loc39])
#loc282 = loc(fused[#loc41, #loc35])
#loc283 = loc(fused[#loc43, #loc42])
#loc284 = loc(fused[#loc45, #loc44])
#loc285 = loc(fused[#loc48, #loc49])
#loc286 = loc(fused[#loc50, #loc51])
#loc287 = loc(fused[#loc52, #loc53])
#loc288 = loc(fused[#loc55, #loc54])
#loc289 = loc(fused[#loc56, #loc57])
#loc290 = loc(fused[#loc58, #loc59])
#loc291 = loc(fused[#loc62, #loc63])
#loc292 = loc(fused[#loc64, #loc65])
#loc293 = loc(fused[#loc64, #loc66])
#loc294 = loc(fused[#loc67, #loc63])
#loc295 = loc(fused[#loc68, #loc69])
#loc296 = loc(fused[#loc73, #loc74])
#loc297 = loc(fused[#loc76, #loc77])
#loc298 = loc(fused[#loc78, #loc79, #loc80, #loc69])
#loc299 = loc(fused[#loc83, #loc84])
#loc300 = loc(fused[#loc85, #loc86])
#loc301 = loc(fused[#loc87, #loc88])
#loc302 = loc(fused[#loc91, #loc92])
#loc303 = loc(fused[#loc90, #loc94])
#loc304 = loc(fused[#loc95, #loc86])
#loc305 = loc(fused[#loc98, #loc99])
#loc306 = loc(fused[#loc97, #loc96])
#loc307 = loc(fused[#loc103, #loc102])
#loc308 = loc(fused[#loc108, #loc109])
#loc309 = loc(fused[#loc110, #loc111])
#loc310 = loc(fused[#loc112, #loc113])
#loc311 = loc(fused[#loc114, #loc115])
#loc313 = loc(fused[#loc119, #loc120])
#loc314 = loc(fused[#loc121, #loc122])
#loc315 = loc(fused[#loc121, #loc123])
#loc316 = loc(fused[#loc121, #loc124])
#loc317 = loc(fused[#loc125, #loc126])
#loc318 = loc(fused[#loc127, #loc130])
#loc319 = loc(fused[#loc131, #loc126])
#loc320 = loc(fused[#loc132, #loc133])
#loc321 = loc(fused[#loc134, #loc135])
#loc322 = loc(fused[#loc136, #loc133])
#loc323 = loc(fused[#loc138, #loc137])
#loc324 = loc(fused[#loc139, #loc140])
#loc325 = loc(fused[#loc142, #loc141])
#loc326 = loc(fused[#loc143, #loc144])
#loc327 = loc(fused[#loc146, #loc140])
#loc328 = loc(fused[#loc148, #loc147])
#loc329 = loc(fused[#loc150, #loc149])
#loc330 = loc(fused[#loc153, #loc154])
#loc331 = loc(fused[#loc155, #loc156])
#loc332 = loc(fused[#loc157, #loc158])
#loc333 = loc(fused[#loc160, #loc159])
#loc334 = loc(fused[#loc161, #loc162])
#loc335 = loc(fused[#loc163, #loc164])
#loc336 = loc(fused[#loc167, #loc168])
#loc337 = loc(fused[#loc169, #loc170])
#loc338 = loc(fused[#loc169, #loc171])
#loc339 = loc(fused[#loc172, #loc168])
#loc340 = loc(fused[#loc173, #loc174])
#loc341 = loc(fused[#loc178, #loc179])
#loc342 = loc(fused[#loc181, #loc182])
#loc343 = loc(fused[#loc183, #loc184, #loc185, #loc174])
#loc344 = loc(fused[#loc188, #loc189])
#loc345 = loc(fused[#loc190, #loc191])
#loc346 = loc(fused[#loc192, #loc193])
#loc347 = loc(fused[#loc196, #loc197])
#loc348 = loc(fused[#loc195, #loc199])
#loc349 = loc(fused[#loc200, #loc191])
#loc350 = loc(fused[#loc203, #loc204])
#loc351 = loc(fused[#loc202, #loc201])
#loc352 = loc(fused[#loc209, #loc208])
#loc353 = loc(fused[#loc214, #loc215])
#loc354 = loc(fused[#loc217, #loc218])
#loc356 = loc(fused[#loc222, #loc223])
#loc357 = loc(fused[#loc224, #loc225])
#loc358 = loc(fused[#loc224, #loc226])
#loc359 = loc(fused[#loc224, #loc227])
#loc360 = loc(fused[#loc228, #loc229])
#loc361 = loc(fused[#loc230, #loc233])
#loc362 = loc(fused[#loc234, #loc229])
#loc363 = loc(fused[#loc236, #loc235])
#loc364 = loc(fused[#loc237, #loc238])
#loc365 = loc(fused[#loc240, #loc239])
#loc366 = loc(fused[#loc241, #loc242])
#loc367 = loc(fused[#loc244, #loc238])
#loc368 = loc(fused[#loc246, #loc245])
#loc369 = loc(fused[#loc248, #loc247])
#loc370 = loc(fused[#loc251, #loc252])
#loc371 = loc(fused[#loc253, #loc254])
#loc372 = loc(fused[#loc255, #loc256])
#loc373 = loc(fused[#loc258, #loc257])
