!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":53:21)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":53:25)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":138:26)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":138:30)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":226:26)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":226:30)
#loc399 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":309:25)
#loc400 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":309:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc434 = loc(fused[#loc25, #loc26])
#loc480 = loc(fused[#loc150, #loc151])
#loc526 = loc(fused[#loc275, #loc276])
#loc572 = loc(fused[#loc399, #loc400])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc423)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc424)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc425)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc426)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc427)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc428)
  cir.func private @close(!s32i) -> !s32i loc(#loc429)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc430)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc431)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc22)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc25, #loc26])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc434)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc27)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc430)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc30)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc32)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc33)
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc22)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc22)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc34)
      } loc(#loc436)
    } loc(#loc435)
    cir.return loc(#loc24)
  } loc(#loc433)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc438)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc40)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc441)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc442)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc443)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc444)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc49)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc49)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc443)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc56)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc57)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc58)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc447)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc64)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc65)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc65)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc449)
              cir.if %57 {
                cir.break loc(#loc67)
              } loc(#loc450)
            } loc(#loc448)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc451)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc70)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc452)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc453)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc75)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc75)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc454)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc78)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc455)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc83)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc83)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc84)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc456)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc458)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc459)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc459)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc95)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc96)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc460)
              cir.if %61 {
                cir.break loc(#loc98)
              } loc(#loc461)
            } loc(#loc457)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc101)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc101)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc101)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc101)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc101)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc101)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc101)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc102)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc102)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc462)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc103)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc104)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc104)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc463)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc110)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc110)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc465)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc111)
                cir.yield %59 : !cir.bool loc(#loc111)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc113)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc466)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc111)
                  cir.yield %63 : !cir.bool loc(#loc111)
                }, false {
                  %63 = cir.const #false loc(#loc111)
                  cir.yield %63 : !cir.bool loc(#loc111)
                }) : (!cir.bool) -> !cir.bool loc(#loc111)
                cir.yield %62 : !cir.bool loc(#loc111)
              }) : (!cir.bool) -> !cir.bool loc(#loc111)
              cir.if %58 {
                cir.break loc(#loc115)
              } loc(#loc467)
            } loc(#loc464)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc116)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc116)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc118)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc468)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc120)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc469)
          } loc(#loc446)
          cir.yield loc(#loc53)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc123)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc123)
          cir.condition(%13) loc(#loc123)
        } loc(#loc445)
      } loc(#loc445)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc126)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc127)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc127)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc471)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc130)
        } loc(#loc472)
      } loc(#loc470)
    } loc(#loc440)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc430)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc473)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc134)
    cir.return loc(#loc36)
  } loc(#loc437)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc475)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc137)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc476)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc139)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc477)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc141)
    cir.return loc(#loc136)
  } loc(#loc474)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc478)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc147)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc150, #loc151])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc480)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc478)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc155)
      cir.if %3 {
        %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc145)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc145)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc159)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc163)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc484)
          %7 = cir.ternary(%6, true {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
            %9 = cir.const #cir.int<2000> : !s32i loc(#loc166)
            %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc485)
            %11 = cir.ternary(%10, true {
              %12 = cir.const #true loc(#loc164)
              cir.yield %12 : !cir.bool loc(#loc164)
            }, false {
              %12 = cir.const #false loc(#loc164)
              cir.yield %12 : !cir.bool loc(#loc164)
            }) : (!cir.bool) -> !cir.bool loc(#loc164)
            cir.yield %11 : !cir.bool loc(#loc164)
          }, false {
            %8 = cir.const #false loc(#loc164)
            cir.yield %8 : !cir.bool loc(#loc164)
          }) : (!cir.bool) -> !cir.bool loc(#loc164)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
            %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc170)
            %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc171)
            %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc146)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc146)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc172)
          } else {
            %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc147)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc147)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc173)
          } loc(#loc486)
        } loc(#loc483)
      } loc(#loc482)
    } loc(#loc481)
    cir.return loc(#loc149)
  } loc(#loc479)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc488)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc179)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc489)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc491)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc492)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc493)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc494)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc188)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc188)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc493)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc195)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc196)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc197)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc198)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc497)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc203)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc204)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc204)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc499)
              cir.if %57 {
                cir.break loc(#loc206)
              } loc(#loc500)
            } loc(#loc498)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc501)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc209)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc502)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc503)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc214)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc214)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc504)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc216)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc216)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc217)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc505)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc220)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc220)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc221)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc506)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc226)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc508)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc509)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc509)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc231)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc232)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc232)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc510)
              cir.if %61 {
                cir.break loc(#loc234)
              } loc(#loc511)
            } loc(#loc507)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc235)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc236)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc236)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc237)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc237)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc237)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc237)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc237)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc237)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc237)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc238)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc238)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc512)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc239)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc240)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc240)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc513)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc245)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc246)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc246)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc515)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc247)
                cir.yield %59 : !cir.bool loc(#loc247)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc248)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc249)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc516)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc247)
                  cir.yield %63 : !cir.bool loc(#loc247)
                }, false {
                  %63 = cir.const #false loc(#loc247)
                  cir.yield %63 : !cir.bool loc(#loc247)
                }) : (!cir.bool) -> !cir.bool loc(#loc247)
                cir.yield %62 : !cir.bool loc(#loc247)
              }) : (!cir.bool) -> !cir.bool loc(#loc247)
              cir.if %58 {
                cir.break loc(#loc251)
              } loc(#loc517)
            } loc(#loc514)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc252)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc252)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc253)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc254)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc254)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc518)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc255)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc256)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc519)
          } loc(#loc496)
          cir.yield loc(#loc192)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc259)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc259)
          cir.condition(%13) loc(#loc259)
        } loc(#loc495)
      } loc(#loc495)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc262)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc263)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc263)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc521)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc265)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc266)
        } loc(#loc522)
      } loc(#loc520)
    } loc(#loc490)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc267)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc478)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc523)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc270)
    cir.return loc(#loc175)
  } loc(#loc487)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc524)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc275, #loc276])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc526)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc524)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc280)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc280)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc284)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc285)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc530)
          %7 = cir.ternary(%6, true {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
            %9 = cir.const #cir.int<2000> : !s32i loc(#loc288)
            %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc531)
            %11 = cir.ternary(%10, true {
              %12 = cir.const #true loc(#loc286)
              cir.yield %12 : !cir.bool loc(#loc286)
            }, false {
              %12 = cir.const #false loc(#loc286)
              cir.yield %12 : !cir.bool loc(#loc286)
            }) : (!cir.bool) -> !cir.bool loc(#loc286)
            cir.yield %11 : !cir.bool loc(#loc286)
          }, false {
            %8 = cir.const #false loc(#loc286)
            cir.yield %8 : !cir.bool loc(#loc286)
          }) : (!cir.bool) -> !cir.bool loc(#loc286)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc292)
            %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc292)
            %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc293)
            %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc294)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc294)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc295)
          } else {
            %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc296)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc296)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc297)
          } loc(#loc532)
        } loc(#loc529)
      } loc(#loc528)
    } loc(#loc527)
    cir.return loc(#loc274)
  } loc(#loc525)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc534)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc302)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc303)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc535)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc537)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc538)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc539)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc540)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc312)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc312)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc539)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc319)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc320)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc321)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc322)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc543)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc327)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc328)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc328)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc545)
              cir.if %57 {
                cir.break loc(#loc330)
              } loc(#loc546)
            } loc(#loc544)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc547)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc333)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc548)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc549)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc338)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc338)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc550)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc340)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc340)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc341)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc551)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc344)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc344)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc345)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc552)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc350)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc554)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc555)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc555)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc355)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc356)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc356)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc556)
              cir.if %61 {
                cir.break loc(#loc358)
              } loc(#loc557)
            } loc(#loc553)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc359)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc360)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc360)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc361)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc361)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc361)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc361)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc361)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc361)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc361)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc362)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc362)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc558)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc363)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc364)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc364)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc559)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc369)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc370)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc370)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc561)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc371)
                cir.yield %59 : !cir.bool loc(#loc371)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc372)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc373)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc562)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc371)
                  cir.yield %63 : !cir.bool loc(#loc371)
                }, false {
                  %63 = cir.const #false loc(#loc371)
                  cir.yield %63 : !cir.bool loc(#loc371)
                }) : (!cir.bool) -> !cir.bool loc(#loc371)
                cir.yield %62 : !cir.bool loc(#loc371)
              }) : (!cir.bool) -> !cir.bool loc(#loc371)
              cir.if %58 {
                cir.break loc(#loc375)
              } loc(#loc563)
            } loc(#loc560)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc376)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc376)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc377)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc378)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc378)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc564)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc379)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc380)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc565)
          } loc(#loc542)
          cir.yield loc(#loc316)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc383)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc383)
          cir.condition(%13) loc(#loc383)
        } loc(#loc541)
      } loc(#loc541)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc386)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc387)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc387)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc567)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc389)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc390)
        } loc(#loc568)
      } loc(#loc566)
    } loc(#loc536)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc391)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc524)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc569)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc393)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc394)
    cir.return loc(#loc299)
  } loc(#loc533)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc570)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc399, #loc400])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc572)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc401)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc570)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc404)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc404)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc406)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc406)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc407)
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc408)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc408)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc409)
      } loc(#loc574)
    } loc(#loc573)
    cir.return loc(#loc398)
  } loc(#loc571)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc576)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc414)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc415)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc577)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc417)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc578)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc419)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc570)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc579)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc421)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc422)
    cir.return loc(#loc411)
  } loc(#loc575)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":94:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":51:1)
#loc17 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":51:24)
#loc18 = loc("/usr/include/unistd.h":480:1)
#loc19 = loc("/usr/include/unistd.h":480:43)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":59:19)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":53:1)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":61:1)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":54:1)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":55:5)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":60:5)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":55:8)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":56:5)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":58:15)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":58:9)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":59:9)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":63:1)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":126:1)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":65:5)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":65:9)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":67:14)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":67:13)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":67:5)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":68:5)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":123:5)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":73:9)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":73:13)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":74:9)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":74:28)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":75:9)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":75:32)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":76:9)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":76:41)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":77:9)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":112:17)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":78:9)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":111:9)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":87:36)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":87:45)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":87:58)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":87:29)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":87:13)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":87:69)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":88:13)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":91:13)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":88:17)
#loc65 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":88:34)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":89:13)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":90:17)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":92:20)
#loc69 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":92:21)
#loc70 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":92:30)
#loc71 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":92:33)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":92:47)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":92:13)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":92:48)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":93:34)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":93:13)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":94:39)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":94:13)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":94:59)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":95:38)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":95:32)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":95:13)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":95:46)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":96:13)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":99:13)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":96:25)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":96:58)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":96:59)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":96:68)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":96:82)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":96:17)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":96:88)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":97:13)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":98:17)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":102:31)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":102:46)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":102:59)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":102:77)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":102:80)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":102:26)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":102:13)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":102:81)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":103:13)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":106:13)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":103:17)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":103:31)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":103:44)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":103:47)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":103:61)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":104:13)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":105:17)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":108:39)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":108:25)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":108:13)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":110:26)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":110:21)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":110:13)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":110:37)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":112:16)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":113:9)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":116:9)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":113:13)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":113:30)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":114:9)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":115:26)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":115:13)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":124:17)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":124:5)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":125:13)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":125:5)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":330:1)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":335:1)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":332:5)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":332:14)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":333:5)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":333:14)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":334:5)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":334:13)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":133:1)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":133:29)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":143:19)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":151:23)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":155:23)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":138:1)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":158:1)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":139:1)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":140:5)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":157:5)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":140:8)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":141:5)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":144:5)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":146:5)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":143:9)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":148:9)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":156:9)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":148:13)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":148:21)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":148:23)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":148:26)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":148:35)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":149:9)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":152:9)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":154:9)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":150:19)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":150:13)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":151:13)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":155:13)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":160:1)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":223:1)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":162:5)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":162:9)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":164:14)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":164:13)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":164:5)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":165:5)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":220:5)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":170:9)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":170:13)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":171:9)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":171:28)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":172:9)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":172:32)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":173:9)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":173:41)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":174:9)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":209:17)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":175:9)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":208:9)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":184:36)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":184:45)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":184:58)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":184:29)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":184:13)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":184:69)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":185:13)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":188:13)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":185:17)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":185:34)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":186:13)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":187:17)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":189:20)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":189:21)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":189:30)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":189:33)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":189:47)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":189:13)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":189:48)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":190:34)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":190:13)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":191:49)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":191:39)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":191:13)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":191:59)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":192:38)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":192:32)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":192:13)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":192:46)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":193:13)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":196:13)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":193:25)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":193:58)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":193:59)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":193:68)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":193:82)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":193:17)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":193:88)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":194:13)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":195:17)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":199:31)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":199:46)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":199:59)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":199:77)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":199:80)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":199:26)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":199:13)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":199:81)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":200:13)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":203:13)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":200:17)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":200:31)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":200:44)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":200:47)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":200:61)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":201:13)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":202:17)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":205:39)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":205:25)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":205:13)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":207:26)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":207:21)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":207:13)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":207:37)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":209:16)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":210:9)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":213:9)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":210:13)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":210:30)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":211:9)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":212:26)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":212:13)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":221:22)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":221:5)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":222:18)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":222:5)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":134:1)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":134:29)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":226:1)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":241:1)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":227:1)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":228:5)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":240:5)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":228:8)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":229:5)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":231:9)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":239:9)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":231:13)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":231:21)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":231:23)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":231:26)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":231:35)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":232:9)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":235:9)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":237:9)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":233:19)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":233:13)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":234:23)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":234:13)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":238:23)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":238:13)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":243:1)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":306:1)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":245:5)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":245:9)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":247:14)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":247:13)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":247:5)
#loc305 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":248:5)
#loc306 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":303:5)
#loc307 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":253:9)
#loc308 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":253:13)
#loc309 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":254:9)
#loc310 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":254:28)
#loc311 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":255:9)
#loc312 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":255:32)
#loc313 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":256:9)
#loc314 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":256:41)
#loc315 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":257:9)
#loc316 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":292:17)
#loc317 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":258:9)
#loc318 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":291:9)
#loc319 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":267:36)
#loc320 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":267:45)
#loc321 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":267:58)
#loc322 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":267:29)
#loc323 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":267:13)
#loc324 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":267:69)
#loc325 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":268:13)
#loc326 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":271:13)
#loc327 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":268:17)
#loc328 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":268:34)
#loc329 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":269:13)
#loc330 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":270:17)
#loc331 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":272:20)
#loc332 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":272:21)
#loc333 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":272:30)
#loc334 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":272:33)
#loc335 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":272:47)
#loc336 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":272:13)
#loc337 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":272:48)
#loc338 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":273:34)
#loc339 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":273:13)
#loc340 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":274:49)
#loc341 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":274:39)
#loc342 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":274:13)
#loc343 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":274:59)
#loc344 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":275:38)
#loc345 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":275:32)
#loc346 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":275:13)
#loc347 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":275:46)
#loc348 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":276:13)
#loc349 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":279:13)
#loc350 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":276:25)
#loc351 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":276:58)
#loc352 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":276:59)
#loc353 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":276:68)
#loc354 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":276:82)
#loc355 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":276:17)
#loc356 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":276:88)
#loc357 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":277:13)
#loc358 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":278:17)
#loc359 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":282:31)
#loc360 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":282:46)
#loc361 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":282:59)
#loc362 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":282:77)
#loc363 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":282:80)
#loc364 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":282:26)
#loc365 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":282:13)
#loc366 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":282:81)
#loc367 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":283:13)
#loc368 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":286:13)
#loc369 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":283:17)
#loc370 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":283:31)
#loc371 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":283:44)
#loc372 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":283:47)
#loc373 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":283:61)
#loc374 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":284:13)
#loc375 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":285:17)
#loc376 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":288:39)
#loc377 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":288:25)
#loc378 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":288:13)
#loc379 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":290:26)
#loc380 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":290:21)
#loc381 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":290:13)
#loc382 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":290:37)
#loc383 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":292:16)
#loc384 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":293:9)
#loc385 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":296:9)
#loc386 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":293:13)
#loc387 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":293:30)
#loc388 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":294:9)
#loc389 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":295:26)
#loc390 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":295:13)
#loc391 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":304:22)
#loc392 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":304:5)
#loc393 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":305:18)
#loc394 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":305:5)
#loc395 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":135:1)
#loc396 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":135:28)
#loc397 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":309:1)
#loc398 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":317:1)
#loc401 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":310:1)
#loc402 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":311:5)
#loc403 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":316:5)
#loc404 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":311:8)
#loc405 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":312:5)
#loc406 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":314:15)
#loc407 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":314:9)
#loc408 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":315:19)
#loc409 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":315:9)
#loc410 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":319:1)
#loc411 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":328:1)
#loc412 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":321:5)
#loc413 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":321:9)
#loc414 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":323:14)
#loc415 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":323:13)
#loc416 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":323:5)
#loc417 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":325:13)
#loc418 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":325:5)
#loc419 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":326:21)
#loc420 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":326:5)
#loc421 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":327:17)
#loc422 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_21.c":327:5)
#loc423 = loc(fused[#loc1, #loc2])
#loc424 = loc(fused[#loc3, #loc4])
#loc425 = loc(fused[#loc6, #loc7])
#loc426 = loc(fused[#loc8, #loc9])
#loc427 = loc(fused[#loc10, #loc11])
#loc428 = loc(fused[#loc12, #loc13])
#loc429 = loc(fused[#loc14, #loc15])
#loc430 = loc(fused[#loc16, #loc17])
#loc431 = loc(fused[#loc18, #loc19])
#loc432 = loc(fused[#loc20, #loc21])
#loc433 = loc(fused[#loc23, #loc24])
#loc435 = loc(fused[#loc28, #loc29])
#loc436 = loc(fused[#loc31, #loc29])
#loc437 = loc(fused[#loc35, #loc36])
#loc438 = loc(fused[#loc37, #loc38])
#loc439 = loc(fused[#loc41, #loc39])
#loc440 = loc(fused[#loc42, #loc43])
#loc441 = loc(fused[#loc44, #loc45])
#loc442 = loc(fused[#loc46, #loc47])
#loc443 = loc(fused[#loc48, #loc49])
#loc444 = loc(fused[#loc50, #loc51])
#loc445 = loc(fused[#loc52, #loc53])
#loc446 = loc(fused[#loc54, #loc55])
#loc447 = loc(fused[#loc60, #loc61])
#loc448 = loc(fused[#loc62, #loc63])
#loc449 = loc(fused[#loc64, #loc65])
#loc450 = loc(fused[#loc66, #loc63])
#loc451 = loc(fused[#loc68, #loc69])
#loc452 = loc(fused[#loc71, #loc72])
#loc453 = loc(fused[#loc73, #loc74])
#loc454 = loc(fused[#loc77, #loc75])
#loc455 = loc(fused[#loc81, #loc82])
#loc456 = loc(fused[#loc86, #loc87])
#loc457 = loc(fused[#loc88, #loc89])
#loc458 = loc(fused[#loc91, #loc92])
#loc459 = loc(fused[#loc93, #loc94])
#loc460 = loc(fused[#loc95, #loc96])
#loc461 = loc(fused[#loc97, #loc89])
#loc462 = loc(fused[#loc101, #loc102])
#loc463 = loc(fused[#loc105, #loc106])
#loc464 = loc(fused[#loc107, #loc108])
#loc465 = loc(fused[#loc109, #loc110])
#loc466 = loc(fused[#loc112, #loc113])
#loc467 = loc(fused[#loc114, #loc108])
#loc468 = loc(fused[#loc118, #loc116])
#loc469 = loc(fused[#loc121, #loc122])
#loc470 = loc(fused[#loc124, #loc125])
#loc471 = loc(fused[#loc126, #loc127])
#loc472 = loc(fused[#loc128, #loc125])
#loc473 = loc(fused[#loc132, #loc131])
#loc474 = loc(fused[#loc135, #loc136])
#loc475 = loc(fused[#loc137, #loc138])
#loc476 = loc(fused[#loc139, #loc140])
#loc477 = loc(fused[#loc141, #loc142])
#loc478 = loc(fused[#loc143, #loc144])
#loc479 = loc(fused[#loc148, #loc149])
#loc481 = loc(fused[#loc153, #loc154])
#loc482 = loc(fused[#loc156, #loc157, #loc158, #loc154])
#loc483 = loc(fused[#loc160, #loc161])
#loc484 = loc(fused[#loc162, #loc163])
#loc485 = loc(fused[#loc165, #loc166])
#loc486 = loc(fused[#loc167, #loc168, #loc169, #loc161])
#loc487 = loc(fused[#loc174, #loc175])
#loc488 = loc(fused[#loc176, #loc177])
#loc489 = loc(fused[#loc180, #loc178])
#loc490 = loc(fused[#loc181, #loc182])
#loc491 = loc(fused[#loc183, #loc184])
#loc492 = loc(fused[#loc185, #loc186])
#loc493 = loc(fused[#loc187, #loc188])
#loc494 = loc(fused[#loc189, #loc190])
#loc495 = loc(fused[#loc191, #loc192])
#loc496 = loc(fused[#loc193, #loc194])
#loc497 = loc(fused[#loc199, #loc200])
#loc498 = loc(fused[#loc201, #loc202])
#loc499 = loc(fused[#loc203, #loc204])
#loc500 = loc(fused[#loc205, #loc202])
#loc501 = loc(fused[#loc207, #loc208])
#loc502 = loc(fused[#loc210, #loc211])
#loc503 = loc(fused[#loc212, #loc213])
#loc504 = loc(fused[#loc215, #loc214])
#loc505 = loc(fused[#loc218, #loc219])
#loc506 = loc(fused[#loc222, #loc223])
#loc507 = loc(fused[#loc224, #loc225])
#loc508 = loc(fused[#loc227, #loc228])
#loc509 = loc(fused[#loc229, #loc230])
#loc510 = loc(fused[#loc231, #loc232])
#loc511 = loc(fused[#loc233, #loc225])
#loc512 = loc(fused[#loc237, #loc238])
#loc513 = loc(fused[#loc241, #loc242])
#loc514 = loc(fused[#loc243, #loc244])
#loc515 = loc(fused[#loc245, #loc246])
#loc516 = loc(fused[#loc248, #loc249])
#loc517 = loc(fused[#loc250, #loc244])
#loc518 = loc(fused[#loc254, #loc252])
#loc519 = loc(fused[#loc257, #loc258])
#loc520 = loc(fused[#loc260, #loc261])
#loc521 = loc(fused[#loc262, #loc263])
#loc522 = loc(fused[#loc264, #loc261])
#loc523 = loc(fused[#loc268, #loc267])
#loc524 = loc(fused[#loc271, #loc272])
#loc525 = loc(fused[#loc273, #loc274])
#loc527 = loc(fused[#loc278, #loc279])
#loc528 = loc(fused[#loc281, #loc279])
#loc529 = loc(fused[#loc282, #loc283])
#loc530 = loc(fused[#loc284, #loc285])
#loc531 = loc(fused[#loc287, #loc288])
#loc532 = loc(fused[#loc289, #loc290, #loc291, #loc283])
#loc533 = loc(fused[#loc298, #loc299])
#loc534 = loc(fused[#loc300, #loc301])
#loc535 = loc(fused[#loc304, #loc302])
#loc536 = loc(fused[#loc305, #loc306])
#loc537 = loc(fused[#loc307, #loc308])
#loc538 = loc(fused[#loc309, #loc310])
#loc539 = loc(fused[#loc311, #loc312])
#loc540 = loc(fused[#loc313, #loc314])
#loc541 = loc(fused[#loc315, #loc316])
#loc542 = loc(fused[#loc317, #loc318])
#loc543 = loc(fused[#loc323, #loc324])
#loc544 = loc(fused[#loc325, #loc326])
#loc545 = loc(fused[#loc327, #loc328])
#loc546 = loc(fused[#loc329, #loc326])
#loc547 = loc(fused[#loc331, #loc332])
#loc548 = loc(fused[#loc334, #loc335])
#loc549 = loc(fused[#loc336, #loc337])
#loc550 = loc(fused[#loc339, #loc338])
#loc551 = loc(fused[#loc342, #loc343])
#loc552 = loc(fused[#loc346, #loc347])
#loc553 = loc(fused[#loc348, #loc349])
#loc554 = loc(fused[#loc351, #loc352])
#loc555 = loc(fused[#loc353, #loc354])
#loc556 = loc(fused[#loc355, #loc356])
#loc557 = loc(fused[#loc357, #loc349])
#loc558 = loc(fused[#loc361, #loc362])
#loc559 = loc(fused[#loc365, #loc366])
#loc560 = loc(fused[#loc367, #loc368])
#loc561 = loc(fused[#loc369, #loc370])
#loc562 = loc(fused[#loc372, #loc373])
#loc563 = loc(fused[#loc374, #loc368])
#loc564 = loc(fused[#loc378, #loc376])
#loc565 = loc(fused[#loc381, #loc382])
#loc566 = loc(fused[#loc384, #loc385])
#loc567 = loc(fused[#loc386, #loc387])
#loc568 = loc(fused[#loc388, #loc385])
#loc569 = loc(fused[#loc392, #loc391])
#loc570 = loc(fused[#loc395, #loc396])
#loc571 = loc(fused[#loc397, #loc398])
#loc573 = loc(fused[#loc402, #loc403])
#loc574 = loc(fused[#loc405, #loc403])
#loc575 = loc(fused[#loc410, #loc411])
#loc576 = loc(fused[#loc412, #loc413])
#loc577 = loc(fused[#loc416, #loc414])
#loc578 = loc(fused[#loc418, #loc417])
#loc579 = loc(fused[#loc420, #loc419])
