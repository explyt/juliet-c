!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":126:10)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":126:14)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":126:20)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":126:32)
#loc213 = loc(fused[#loc72, #loc73])
#loc214 = loc(fused[#loc74, #loc75])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc192)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc193)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_ncpy_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc196)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc12)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc13)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc197)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc17)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc19)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    cir.scope {
      %23 = cir.const #cir.int<1> : !s32i loc(#loc24)
      %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc24)
      cir.if %24 {
        %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
        %26 = cir.const #cir.int<8> : !s32i loc(#loc27)
        %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc27)
        %28 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc28)
        cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
      } loc(#loc200)
    } loc(#loc199)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc203)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc35)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc36)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc36)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc36)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc204)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc40)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc41)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc41)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc43)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc205)
      %38 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc44)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
      %41 = cir.const #cir.int<100> : !s32i loc(#loc47)
      %42 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc47)
      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc47)
      %45 = cir.call @strncpy(%39, %40, %44) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
      %46 = cir.const #cir.int<0> : !s32i loc(#loc49)
      %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc49)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc51)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc52)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc51)
      %52 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc53)
      cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc206)
      %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
      cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    } loc(#loc202)
    cir.return loc(#loc6)
  } loc(#loc194)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_ncpy_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc207)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc210)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc214)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc79)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_ncpy_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_ncpy_04_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_ncpy_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_ncpy_04_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.return %17 : !s32i loc(#loc217)
  } loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc90)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc220)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc96)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc96)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc96)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc96)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc98)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc99)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc99)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc221)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc103)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc105)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc222)
    cir.scope {
      %23 = cir.const #cir.int<0> : !s32i loc(#loc110)
      %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc110)
      cir.if %24 {
        %25 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc90)
        %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc90)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc114)
      } else {
        %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
        cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
      } loc(#loc224)
    } loc(#loc223)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc227)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc122)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc123)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc124)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc123)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc123)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc228)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc127)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc127)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc128)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc129)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc128)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc130)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc229)
      %38 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc131)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
      %41 = cir.const #cir.int<100> : !s32i loc(#loc134)
      %42 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc134)
      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc134)
      %45 = cir.call @strncpy(%39, %40, %44) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
      %46 = cir.const #cir.int<0> : !s32i loc(#loc136)
      %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc136)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc138)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc139)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc138)
      %52 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc140)
      cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc230)
      %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
      cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    } loc(#loc226)
    cir.return loc(#loc92)
  } loc(#loc218)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc232)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc233)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc148)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc148)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc148)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc148)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc148)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc148)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc149)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc150)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc151)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc151)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc151)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc234)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc155)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc157)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc157)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc159)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc235)
    cir.scope {
      %23 = cir.const #cir.int<1> : !s32i loc(#loc162)
      %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc162)
      cir.if %24 {
        %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
        cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
      } loc(#loc237)
    } loc(#loc236)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc240)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc171)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc172)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc173)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc172)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc172)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc241)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc176)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc176)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc177)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc178)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc177)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc179)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc179)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc242)
      %38 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc180)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc182)
      %41 = cir.const #cir.int<100> : !s32i loc(#loc183)
      %42 = cir.const #cir.int<1> : !s32i loc(#loc184)
      %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc183)
      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc183)
      %45 = cir.call @strncpy(%39, %40, %44) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc180)
      %46 = cir.const #cir.int<0> : !s32i loc(#loc185)
      %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc185)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc187)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc188)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc187)
      %52 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc189)
      cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc243)
      %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
      cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    } loc(#loc239)
    cir.return loc(#loc144)
  } loc(#loc231)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":30:1)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":51:1)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":32:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":32:12)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":33:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":33:33)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":34:12)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":34:24)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":34:29)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":34:33)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":34:5)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":34:34)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":35:25)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":35:5)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":35:16)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":35:20)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":35:21)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":36:5)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":40:5)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":36:8)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":37:5)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":39:16)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":39:29)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":39:27)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":39:9)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":41:5)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":50:5)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":42:9)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":42:24)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":43:16)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":43:24)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":43:29)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":43:33)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":43:9)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":43:34)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":44:25)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":44:16)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":44:20)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":44:9)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":46:9)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":46:17)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":46:23)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":46:31)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":46:35)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":48:23)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":48:9)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":48:14)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":48:18)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":48:19)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":49:19)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":49:9)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":110:1)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":114:1)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":112:5)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":112:14)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":113:5)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":113:14)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":131:15)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":133:15)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":136:15)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":138:15)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":126:1)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":141:1)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":127:1)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":129:27)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":129:22)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":129:5)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":131:5)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":132:5)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":132:56)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":133:5)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":136:5)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":137:5)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":137:55)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":138:5)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":140:12)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":140:5)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":67:19)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":58:1)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":84:1)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":60:5)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":60:12)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":61:5)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":61:33)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":62:12)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":62:24)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":62:29)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":62:33)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":62:5)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":62:34)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":63:25)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":63:5)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":63:16)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":63:20)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":63:21)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":64:5)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":73:5)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":64:8)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":65:5)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":68:5)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":70:5)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":67:9)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":72:16)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":72:9)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":74:5)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":83:5)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":75:9)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":75:24)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":76:16)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":76:24)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":76:29)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":76:33)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":76:9)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":76:34)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":77:25)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":77:16)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":77:20)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":77:9)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":79:9)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":79:17)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":79:23)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":79:31)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":79:35)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":81:23)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":81:9)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":81:14)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":81:18)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":81:19)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":82:19)
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":82:9)
#loc143 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":87:1)
#loc144 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":108:1)
#loc145 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":89:5)
#loc146 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":89:12)
#loc147 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":90:5)
#loc148 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":90:33)
#loc149 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":91:12)
#loc150 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":91:24)
#loc151 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":91:29)
#loc152 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":91:33)
#loc153 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":91:5)
#loc154 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":91:34)
#loc155 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":92:25)
#loc156 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":92:5)
#loc157 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":92:16)
#loc158 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":92:20)
#loc159 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":92:21)
#loc160 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":93:5)
#loc161 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":97:5)
#loc162 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":93:8)
#loc163 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":94:5)
#loc164 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":96:16)
#loc165 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":96:9)
#loc166 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":98:5)
#loc167 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":107:5)
#loc168 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":99:9)
#loc169 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":99:24)
#loc170 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":100:16)
#loc171 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":100:24)
#loc172 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":100:29)
#loc173 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":100:33)
#loc174 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":100:9)
#loc175 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":100:34)
#loc176 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":101:25)
#loc177 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":101:16)
#loc178 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":101:20)
#loc179 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":101:9)
#loc180 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":103:9)
#loc181 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":103:17)
#loc182 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":103:23)
#loc183 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":103:31)
#loc184 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":103:35)
#loc185 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":105:23)
#loc186 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":105:9)
#loc187 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":105:14)
#loc188 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":105:18)
#loc189 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":105:19)
#loc190 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":106:19)
#loc191 = loc("CWE124_Buffer_Underwrite__char_alloca_ncpy_04.c":106:9)
#loc192 = loc(fused[#loc1, #loc2])
#loc193 = loc(fused[#loc3, #loc4])
#loc194 = loc(fused[#loc5, #loc6])
#loc195 = loc(fused[#loc7, #loc8])
#loc196 = loc(fused[#loc9, #loc10])
#loc197 = loc(fused[#loc15, #loc16])
#loc198 = loc(fused[#loc18, #loc17])
#loc199 = loc(fused[#loc22, #loc23])
#loc200 = loc(fused[#loc25, #loc23])
#loc201 = loc(fused[#loc29, #loc27])
#loc202 = loc(fused[#loc30, #loc31])
#loc203 = loc(fused[#loc32, #loc33])
#loc204 = loc(fused[#loc38, #loc39])
#loc205 = loc(fused[#loc43, #loc40])
#loc206 = loc(fused[#loc50, #loc49])
#loc207 = loc(fused[#loc56, #loc57])
#loc208 = loc(fused[#loc58, #loc59])
#loc209 = loc(fused[#loc60, #loc61])
#loc210 = loc(fused[#loc62, #loc63])
#loc211 = loc(fused[#loc64, #loc65])
#loc212 = loc(fused[#loc70, #loc71])
#loc215 = loc(fused[#loc81, #loc82])
#loc216 = loc(fused[#loc85, #loc86])
#loc217 = loc(fused[#loc89, #loc88])
#loc218 = loc(fused[#loc91, #loc92])
#loc219 = loc(fused[#loc93, #loc94])
#loc220 = loc(fused[#loc95, #loc96])
#loc221 = loc(fused[#loc101, #loc102])
#loc222 = loc(fused[#loc104, #loc103])
#loc223 = loc(fused[#loc108, #loc109])
#loc224 = loc(fused[#loc111, #loc112, #loc113, #loc109])
#loc225 = loc(fused[#loc116, #loc115])
#loc226 = loc(fused[#loc117, #loc118])
#loc227 = loc(fused[#loc119, #loc120])
#loc228 = loc(fused[#loc125, #loc126])
#loc229 = loc(fused[#loc130, #loc127])
#loc230 = loc(fused[#loc137, #loc136])
#loc231 = loc(fused[#loc143, #loc144])
#loc232 = loc(fused[#loc145, #loc146])
#loc233 = loc(fused[#loc147, #loc148])
#loc234 = loc(fused[#loc153, #loc154])
#loc235 = loc(fused[#loc156, #loc155])
#loc236 = loc(fused[#loc160, #loc161])
#loc237 = loc(fused[#loc163, #loc161])
#loc238 = loc(fused[#loc165, #loc164])
#loc239 = loc(fused[#loc166, #loc167])
#loc240 = loc(fused[#loc168, #loc169])
#loc241 = loc(fused[#loc174, #loc175])
#loc242 = loc(fused[#loc179, #loc176])
#loc243 = loc(fused[#loc186, #loc185])
