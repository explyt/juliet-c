!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc93 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_10.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc161)
  cir.func private @printIntLine(!s32i) loc(#loc162)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc163)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_103badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc161)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
      cir.if %3 {
        %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc15)
        cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc168)
      } loc(#loc167)
    } loc(#loc166)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc161)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc19)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc21)
        %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc23)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc24)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc25)
        cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc170)
    } loc(#loc169)
    cir.return loc(#loc8)
  } loc(#loc164)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc171)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc32)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_10L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc161)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc39)
      cir.if %3 {
        %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc41)
        cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc177)
      } loc(#loc176)
    } loc(#loc175)
    cir.scope {
      %1 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc171)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc45)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc45)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc49)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc52)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc53)
          %6 = cir.cmp(ne, %4, %5) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc181)
          cir.if %6 {
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc57)
            %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
            %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc58)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc59)
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc60)
            cir.call @_ZdlPv(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
          } else {
            %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc32)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc32)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc62)
          } loc(#loc182)
        } loc(#loc180)
      } loc(#loc179)
    } loc(#loc178)
    cir.return loc(#loc34)
  } loc(#loc173)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_10L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc161)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc69)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc69)
      cir.if %3 {
        %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
        cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc187)
      } loc(#loc186)
    } loc(#loc185)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc161)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc75)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc79)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
          %6 = cir.cmp(ne, %4, %5) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc191)
          cir.if %6 {
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc84)
            %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
            %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc86)
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc87)
            cir.call @_ZdlPv(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
          } else {
            %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc89)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc89)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc90)
          } loc(#loc192)
        } loc(#loc190)
      } loc(#loc189)
    } loc(#loc188)
    cir.return loc(#loc64)
  } loc(#loc183)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc193)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc93)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc93)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc93)
    cir.return loc(#loc93)
  } loc(#loc93)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_10L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    cir.scope {
      %1 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc171)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc100)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc104)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc104)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc105)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc199)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc200)
          %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc199)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc200)
          cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc109)
          cir.store %7, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc199)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc112)
          %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc201)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc114)
          %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc115)
          cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc202)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc116)
          cir.store %14, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc203)
        } loc(#loc198)
      } loc(#loc197)
    } loc(#loc196)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc161)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc120)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc122)
        %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc124)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc125)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc125)
        cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc126)
      } loc(#loc205)
    } loc(#loc204)
    cir.return loc(#loc95)
  } loc(#loc194)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_10L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc161)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc133)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc133)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc211)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc212)
          %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc211)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc212)
          cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc138)
          cir.store %7, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc211)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc140)
          %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc141)
          %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc213)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc142)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc143)
          %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc115)
          cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc214)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc144)
          cir.store %14, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc215)
        } loc(#loc210)
      } loc(#loc209)
    } loc(#loc208)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc161)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc148)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc148)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc150)
        %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc151)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc152)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc153)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc153)
        cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc154)
      } loc(#loc217)
    } loc(#loc216)
    cir.return loc(#loc128)
  } loc(#loc206)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_104goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_10L8goodB2G1Ev() : () -> () loc(#loc157)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_10L8goodB2G2Ev() : () -> () loc(#loc158)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_10L8goodG2B1Ev() : () -> () loc(#loc159)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_10L8goodG2B2Ev() : () -> () loc(#loc160)
    cir.return loc(#loc156)
  } loc(#loc218)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_10.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":25:1)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":40:1)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":27:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":27:20)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":28:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":32:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":28:8)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":29:5)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":31:16)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":31:9)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":33:5)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":39:5)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":33:8)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":34:5)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":36:22)
#loc22 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":36:28)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":36:9)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":38:16)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":25:6)
#loc27 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc28 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":58:19)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":70:23)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":47:1)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":73:1)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":49:5)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":49:20)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":50:5)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":54:5)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":50:8)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":51:5)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":53:16)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":53:9)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":55:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":72:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":55:8)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":56:5)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":59:5)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":61:5)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":58:9)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":63:9)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":71:9)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":63:13)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":63:21)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":64:9)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":67:9)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":69:9)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":65:26)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":65:32)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":65:13)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":66:20)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":47:13)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":70:13)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":76:1)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":97:1)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":78:5)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":78:20)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":79:5)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":83:5)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":79:8)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":80:5)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":82:16)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":82:9)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":84:5)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":96:5)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":84:8)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":85:5)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":87:9)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":95:9)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":87:13)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":87:21)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":88:9)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":91:9)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":93:9)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":89:26)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":89:32)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":89:13)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":90:20)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":76:13)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":94:23)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":94:13)
#loc91 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc92 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":100:1)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":125:1)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":102:5)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":102:20)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":103:5)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":117:5)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":103:8)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":104:5)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":107:5)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":109:5)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":106:19)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":106:9)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":110:9)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":116:9)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":111:13)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":111:42)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":111:38)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":112:31)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":112:13)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":113:31)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":113:13)
#loc115 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":115:20)
#loc117 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":115:13)
#loc118 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":118:5)
#loc119 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":124:5)
#loc120 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":118:8)
#loc121 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":119:5)
#loc122 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":121:22)
#loc123 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":121:28)
#loc124 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":121:9)
#loc125 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":123:16)
#loc126 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":100:13)
#loc127 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":128:1)
#loc128 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":148:1)
#loc129 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":130:5)
#loc130 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":130:20)
#loc131 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":131:5)
#loc132 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":140:5)
#loc133 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":131:8)
#loc134 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":132:5)
#loc135 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":133:9)
#loc136 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":139:9)
#loc137 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":134:13)
#loc138 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":134:42)
#loc139 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":134:38)
#loc140 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":135:31)
#loc141 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":135:13)
#loc142 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":136:31)
#loc143 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":136:13)
#loc144 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":138:20)
#loc145 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":138:13)
#loc146 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":141:5)
#loc147 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":147:5)
#loc148 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":141:8)
#loc149 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":142:5)
#loc150 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":144:22)
#loc151 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":144:28)
#loc152 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":144:9)
#loc153 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":146:16)
#loc154 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":128:13)
#loc155 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":150:1)
#loc156 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":156:1)
#loc157 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":152:5)
#loc158 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":153:5)
#loc159 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":154:5)
#loc160 = loc("CWE476_NULL_Pointer_Dereference__class_10.cpp":155:5)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc9, #loc10])
#loc166 = loc(fused[#loc11, #loc12])
#loc167 = loc(fused[#loc14, #loc12])
#loc168 = loc(fused[#loc16, #loc15])
#loc169 = loc(fused[#loc17, #loc18])
#loc170 = loc(fused[#loc20, #loc18])
#loc171 = loc(fused[#loc27, #loc28])
#loc172 = loc(fused[#loc29, #loc30])
#loc173 = loc(fused[#loc33, #loc34])
#loc174 = loc(fused[#loc35, #loc36])
#loc175 = loc(fused[#loc37, #loc38])
#loc176 = loc(fused[#loc40, #loc38])
#loc177 = loc(fused[#loc42, #loc41])
#loc178 = loc(fused[#loc43, #loc44])
#loc179 = loc(fused[#loc46, #loc47, #loc48, #loc44])
#loc180 = loc(fused[#loc50, #loc51])
#loc181 = loc(fused[#loc52, #loc53])
#loc182 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc183 = loc(fused[#loc63, #loc64])
#loc184 = loc(fused[#loc65, #loc66])
#loc185 = loc(fused[#loc67, #loc68])
#loc186 = loc(fused[#loc70, #loc68])
#loc187 = loc(fused[#loc72, #loc71])
#loc188 = loc(fused[#loc73, #loc74])
#loc189 = loc(fused[#loc76, #loc74])
#loc190 = loc(fused[#loc77, #loc78])
#loc191 = loc(fused[#loc79, #loc80])
#loc192 = loc(fused[#loc81, #loc82, #loc83, #loc78])
#loc193 = loc(fused[#loc91, #loc92])
#loc194 = loc(fused[#loc94, #loc95])
#loc195 = loc(fused[#loc96, #loc97])
#loc196 = loc(fused[#loc98, #loc99])
#loc197 = loc(fused[#loc101, #loc102, #loc103, #loc99])
#loc198 = loc(fused[#loc106, #loc107])
#loc199 = loc(fused[#loc108, #loc109])
#loc200 = loc(fused[#loc110, #loc109])
#loc201 = loc(fused[#loc112, #loc111])
#loc202 = loc(fused[#loc114, #loc113])
#loc203 = loc(fused[#loc117, #loc116])
#loc204 = loc(fused[#loc118, #loc119])
#loc205 = loc(fused[#loc121, #loc119])
#loc206 = loc(fused[#loc127, #loc128])
#loc207 = loc(fused[#loc129, #loc130])
#loc208 = loc(fused[#loc131, #loc132])
#loc209 = loc(fused[#loc134, #loc132])
#loc210 = loc(fused[#loc135, #loc136])
#loc211 = loc(fused[#loc137, #loc138])
#loc212 = loc(fused[#loc139, #loc138])
#loc213 = loc(fused[#loc141, #loc140])
#loc214 = loc(fused[#loc143, #loc142])
#loc215 = loc(fused[#loc145, #loc144])
#loc216 = loc(fused[#loc146, #loc147])
#loc217 = loc(fused[#loc149, #loc147])
#loc218 = loc(fused[#loc155, #loc156])
