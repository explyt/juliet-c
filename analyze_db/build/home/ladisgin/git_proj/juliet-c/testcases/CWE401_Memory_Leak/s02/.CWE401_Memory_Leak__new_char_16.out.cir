!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc96 = loc("CWE401_Memory_Leak__new_char_16.cpp":117:10)
#loc97 = loc("CWE401_Memory_Leak__new_char_16.cpp":117:14)
#loc98 = loc("CWE401_Memory_Leak__new_char_16.cpp":117:20)
#loc99 = loc("CWE401_Memory_Leak__new_char_16.cpp":117:32)
#loc144 = loc(fused[#loc96, #loc97])
#loc145 = loc(fused[#loc98, #loc99])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc112)
  cir.func private @printHexCharLine(!s8i) loc(#loc113)
  cir.func @_ZN31CWE401_Memory_Leak__new_char_163badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
        cir.condition(%3) loc(#loc13)
      } do {
        %2 = cir.const #cir.int<1> : !u64i loc(#loc118)
        %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc16)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
        %5 = cir.const #cir.int<65> : !s8i loc(#loc18)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
        cir.store %5, %6 : !s8i, !cir.ptr<!s8i> loc(#loc120)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
        %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc22)
        cir.call @printHexCharLine(%8) : (!s8i) -> () loc(#loc23)
        cir.break loc(#loc24)
      } loc(#loc117)
    } loc(#loc117)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc27)
        cir.condition(%3) loc(#loc27)
      } do {
        cir.break loc(#loc28)
      } loc(#loc121)
    } loc(#loc121)
    cir.return loc(#loc6)
  } loc(#loc114)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc122)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_16L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc35)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc39)
        cir.condition(%3) loc(#loc39)
      } do {
        %2 = cir.const #cir.int<1> : !u64i loc(#loc127)
        %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc42)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
        %5 = cir.const #cir.int<65> : !s8i loc(#loc44)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        cir.store %5, %6 : !s8i, !cir.ptr<!s8i> loc(#loc129)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc48)
        cir.call @printHexCharLine(%8) : (!s8i) -> () loc(#loc49)
        cir.break loc(#loc50)
      } loc(#loc126)
    } loc(#loc126)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc53)
        cir.condition(%3) loc(#loc53)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
        %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
        cir.call @_ZdlPv(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc42)
        cir.break loc(#loc55)
      } loc(#loc130)
    } loc(#loc130)
    cir.return loc(#loc32)
  } loc(#loc123)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_16L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.scope {
      %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc135)
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc66)
        cir.condition(%4) loc(#loc66)
      } do {
        cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
        %3 = cir.const #cir.int<65> : !s8i loc(#loc69)
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
        cir.store %3, %4 : !s8i, !cir.ptr<!s8i> loc(#loc137)
        %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
        %6 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc73)
        cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc74)
        cir.break loc(#loc75)
      } loc(#loc134)
    } loc(#loc134)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc78)
        cir.condition(%3) loc(#loc78)
      } do {
        cir.break loc(#loc79)
      } loc(#loc138)
    } loc(#loc138)
    cir.return loc(#loc57)
  } loc(#loc131)
  cir.func @_ZN31CWE401_Memory_Leak__new_char_164goodEv() extra(#fn_attr) {
    cir.call @_ZN31CWE401_Memory_Leak__new_char_16L7goodB2GEv() : () -> () loc(#loc82)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_16L7goodG2BEv() : () -> () loc(#loc83)
    cir.return loc(#loc81)
  } loc(#loc139)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc140)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc93)
  cir.func @main(%arg0: !s32i loc(fused[#loc96, #loc97]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc98, #loc99])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc95)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc100)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc101)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc102)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc102)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc103)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc90)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_164goodEv() : () -> () loc(#loc105)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc91)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc92)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_163badEv() : () -> () loc(#loc108)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc93)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc110)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    cir.return %15 : !s32i loc(#loc146)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE401_Memory_Leak__new_char_16.cpp":28:1)
#loc6 = loc("CWE401_Memory_Leak__new_char_16.cpp":47:1)
#loc7 = loc("CWE401_Memory_Leak__new_char_16.cpp":30:5)
#loc8 = loc("CWE401_Memory_Leak__new_char_16.cpp":30:12)
#loc9 = loc("CWE401_Memory_Leak__new_char_16.cpp":31:12)
#loc10 = loc("CWE401_Memory_Leak__new_char_16.cpp":31:5)
#loc11 = loc("CWE401_Memory_Leak__new_char_16.cpp":32:5)
#loc12 = loc("CWE401_Memory_Leak__new_char_16.cpp":40:5)
#loc13 = loc("CWE401_Memory_Leak__new_char_16.cpp":32:11)
#loc14 = loc("CWE401_Memory_Leak__new_char_16.cpp":35:16)
#loc15 = loc("CWE401_Memory_Leak__new_char_16.cpp":35:20)
#loc16 = loc("CWE401_Memory_Leak__new_char_16.cpp":28:6)
#loc17 = loc("CWE401_Memory_Leak__new_char_16.cpp":35:9)
#loc18 = loc("CWE401_Memory_Leak__new_char_16.cpp":37:17)
#loc19 = loc("CWE401_Memory_Leak__new_char_16.cpp":37:10)
#loc20 = loc("CWE401_Memory_Leak__new_char_16.cpp":37:9)
#loc21 = loc("CWE401_Memory_Leak__new_char_16.cpp":38:27)
#loc22 = loc("CWE401_Memory_Leak__new_char_16.cpp":38:26)
#loc23 = loc("CWE401_Memory_Leak__new_char_16.cpp":38:9)
#loc24 = loc("CWE401_Memory_Leak__new_char_16.cpp":39:9)
#loc25 = loc("CWE401_Memory_Leak__new_char_16.cpp":41:5)
#loc26 = loc("CWE401_Memory_Leak__new_char_16.cpp":46:5)
#loc27 = loc("CWE401_Memory_Leak__new_char_16.cpp":41:11)
#loc28 = loc("CWE401_Memory_Leak__new_char_16.cpp":45:9)
#loc29 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc30 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc31 = loc("CWE401_Memory_Leak__new_char_16.cpp":54:1)
#loc32 = loc("CWE401_Memory_Leak__new_char_16.cpp":73:1)
#loc33 = loc("CWE401_Memory_Leak__new_char_16.cpp":56:5)
#loc34 = loc("CWE401_Memory_Leak__new_char_16.cpp":56:12)
#loc35 = loc("CWE401_Memory_Leak__new_char_16.cpp":57:12)
#loc36 = loc("CWE401_Memory_Leak__new_char_16.cpp":57:5)
#loc37 = loc("CWE401_Memory_Leak__new_char_16.cpp":58:5)
#loc38 = loc("CWE401_Memory_Leak__new_char_16.cpp":66:5)
#loc39 = loc("CWE401_Memory_Leak__new_char_16.cpp":58:11)
#loc40 = loc("CWE401_Memory_Leak__new_char_16.cpp":61:16)
#loc41 = loc("CWE401_Memory_Leak__new_char_16.cpp":61:20)
#loc42 = loc("CWE401_Memory_Leak__new_char_16.cpp":54:13)
#loc43 = loc("CWE401_Memory_Leak__new_char_16.cpp":61:9)
#loc44 = loc("CWE401_Memory_Leak__new_char_16.cpp":63:17)
#loc45 = loc("CWE401_Memory_Leak__new_char_16.cpp":63:10)
#loc46 = loc("CWE401_Memory_Leak__new_char_16.cpp":63:9)
#loc47 = loc("CWE401_Memory_Leak__new_char_16.cpp":64:27)
#loc48 = loc("CWE401_Memory_Leak__new_char_16.cpp":64:26)
#loc49 = loc("CWE401_Memory_Leak__new_char_16.cpp":64:9)
#loc50 = loc("CWE401_Memory_Leak__new_char_16.cpp":65:9)
#loc51 = loc("CWE401_Memory_Leak__new_char_16.cpp":67:5)
#loc52 = loc("CWE401_Memory_Leak__new_char_16.cpp":72:5)
#loc53 = loc("CWE401_Memory_Leak__new_char_16.cpp":67:11)
#loc54 = loc("CWE401_Memory_Leak__new_char_16.cpp":70:16)
#loc55 = loc("CWE401_Memory_Leak__new_char_16.cpp":71:9)
#loc56 = loc("CWE401_Memory_Leak__new_char_16.cpp":76:1)
#loc57 = loc("CWE401_Memory_Leak__new_char_16.cpp":96:1)
#loc58 = loc("CWE401_Memory_Leak__new_char_16.cpp":78:5)
#loc59 = loc("CWE401_Memory_Leak__new_char_16.cpp":78:12)
#loc60 = loc("CWE401_Memory_Leak__new_char_16.cpp":79:12)
#loc61 = loc("CWE401_Memory_Leak__new_char_16.cpp":79:5)
#loc62 = loc("CWE401_Memory_Leak__new_char_16.cpp":80:5)
#loc63 = loc("CWE401_Memory_Leak__new_char_16.cpp":89:5)
#loc64 = loc("CWE401_Memory_Leak__new_char_16.cpp":83:9)
#loc65 = loc("CWE401_Memory_Leak__new_char_16.cpp":83:14)
#loc66 = loc("CWE401_Memory_Leak__new_char_16.cpp":80:11)
#loc67 = loc("CWE401_Memory_Leak__new_char_16.cpp":84:9)
#loc68 = loc("CWE401_Memory_Leak__new_char_16.cpp":84:17)
#loc69 = loc("CWE401_Memory_Leak__new_char_16.cpp":86:17)
#loc70 = loc("CWE401_Memory_Leak__new_char_16.cpp":86:10)
#loc71 = loc("CWE401_Memory_Leak__new_char_16.cpp":86:9)
#loc72 = loc("CWE401_Memory_Leak__new_char_16.cpp":87:27)
#loc73 = loc("CWE401_Memory_Leak__new_char_16.cpp":87:26)
#loc74 = loc("CWE401_Memory_Leak__new_char_16.cpp":87:9)
#loc75 = loc("CWE401_Memory_Leak__new_char_16.cpp":88:9)
#loc76 = loc("CWE401_Memory_Leak__new_char_16.cpp":90:5)
#loc77 = loc("CWE401_Memory_Leak__new_char_16.cpp":95:5)
#loc78 = loc("CWE401_Memory_Leak__new_char_16.cpp":90:11)
#loc79 = loc("CWE401_Memory_Leak__new_char_16.cpp":94:9)
#loc80 = loc("CWE401_Memory_Leak__new_char_16.cpp":98:1)
#loc81 = loc("CWE401_Memory_Leak__new_char_16.cpp":102:1)
#loc82 = loc("CWE401_Memory_Leak__new_char_16.cpp":100:5)
#loc83 = loc("CWE401_Memory_Leak__new_char_16.cpp":101:5)
#loc84 = loc("/usr/include/stdlib.h":575:1)
#loc85 = loc("/usr/include/stdlib.h":575:41)
#loc86 = loc("/usr/include/time.h":76:1)
#loc87 = loc("/usr/include/time.h":76:38)
#loc88 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc89 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc90 = loc("CWE401_Memory_Leak__new_char_16.cpp":122:15)
#loc91 = loc("CWE401_Memory_Leak__new_char_16.cpp":124:15)
#loc92 = loc("CWE401_Memory_Leak__new_char_16.cpp":127:15)
#loc93 = loc("CWE401_Memory_Leak__new_char_16.cpp":129:15)
#loc94 = loc("CWE401_Memory_Leak__new_char_16.cpp":117:1)
#loc95 = loc("CWE401_Memory_Leak__new_char_16.cpp":132:1)
#loc100 = loc("CWE401_Memory_Leak__new_char_16.cpp":118:1)
#loc101 = loc("CWE401_Memory_Leak__new_char_16.cpp":120:27)
#loc102 = loc("CWE401_Memory_Leak__new_char_16.cpp":120:22)
#loc103 = loc("CWE401_Memory_Leak__new_char_16.cpp":120:5)
#loc104 = loc("CWE401_Memory_Leak__new_char_16.cpp":122:5)
#loc105 = loc("CWE401_Memory_Leak__new_char_16.cpp":123:5)
#loc106 = loc("CWE401_Memory_Leak__new_char_16.cpp":124:5)
#loc107 = loc("CWE401_Memory_Leak__new_char_16.cpp":127:5)
#loc108 = loc("CWE401_Memory_Leak__new_char_16.cpp":128:5)
#loc109 = loc("CWE401_Memory_Leak__new_char_16.cpp":129:5)
#loc110 = loc("CWE401_Memory_Leak__new_char_16.cpp":131:12)
#loc111 = loc("CWE401_Memory_Leak__new_char_16.cpp":131:5)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc3, #loc4])
#loc114 = loc(fused[#loc5, #loc6])
#loc115 = loc(fused[#loc7, #loc8])
#loc116 = loc(fused[#loc10, #loc9])
#loc117 = loc(fused[#loc11, #loc12])
#loc118 = loc(fused[#loc14, #loc15])
#loc119 = loc(fused[#loc17, #loc15])
#loc120 = loc(fused[#loc20, #loc18])
#loc121 = loc(fused[#loc25, #loc26])
#loc122 = loc(fused[#loc29, #loc30])
#loc123 = loc(fused[#loc31, #loc32])
#loc124 = loc(fused[#loc33, #loc34])
#loc125 = loc(fused[#loc36, #loc35])
#loc126 = loc(fused[#loc37, #loc38])
#loc127 = loc(fused[#loc40, #loc41])
#loc128 = loc(fused[#loc43, #loc41])
#loc129 = loc(fused[#loc46, #loc44])
#loc130 = loc(fused[#loc51, #loc52])
#loc131 = loc(fused[#loc56, #loc57])
#loc132 = loc(fused[#loc58, #loc59])
#loc133 = loc(fused[#loc61, #loc60])
#loc134 = loc(fused[#loc62, #loc63])
#loc135 = loc(fused[#loc64, #loc65])
#loc136 = loc(fused[#loc67, #loc68])
#loc137 = loc(fused[#loc71, #loc69])
#loc138 = loc(fused[#loc76, #loc77])
#loc139 = loc(fused[#loc80, #loc81])
#loc140 = loc(fused[#loc84, #loc85])
#loc141 = loc(fused[#loc86, #loc87])
#loc142 = loc(fused[#loc88, #loc89])
#loc143 = loc(fused[#loc94, #loc95])
#loc146 = loc(fused[#loc111, #loc110])
