!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc150)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc153)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
          %6 = cir.const #cir.int<65> : !s32i loc(#loc19)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc20)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc20)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc20)
          cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc156)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc24)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc24)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc26)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc27)
          %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc26)
          %17 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc28)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc157)
          cir.break loc(#loc29)
        } loc(#loc17)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc31)
          cir.break loc(#loc32)
        } loc(#loc30)
        cir.yield loc(#loc14)
      } loc(#loc14)
    } loc(#loc155)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc159)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc159)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc159)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc37)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc39)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc39)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc160)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc161)
      cir.libc.memmove %13 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc162)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc45)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc45)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc46)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc47)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc46)
      %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc48)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc48)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc163)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    } loc(#loc158)
    cir.return loc(#loc7)
  } loc(#loc151)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc165)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc166)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc164)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc169)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc67)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc70)
          cir.break loc(#loc71)
        } loc(#loc68)
        cir.case(default, []) {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
          %6 = cir.const #cir.int<65> : !s32i loc(#loc74)
          %7 = cir.const #cir.int<50> : !s32i loc(#loc75)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc76)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc75)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc75)
          cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc172)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc79)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc79)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
          %14 = cir.const #cir.int<50> : !s32i loc(#loc81)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc82)
          %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc81)
          %17 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc83)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc173)
          cir.break loc(#loc84)
        } loc(#loc72)
        cir.yield loc(#loc65)
      } loc(#loc65)
    } loc(#loc171)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc175)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc175)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc175)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc89)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc91)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc91)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc176)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc177)
      cir.libc.memmove %13 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc178)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc97)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc97)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc98)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc99)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc98)
      %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc100)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc100)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc179)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    } loc(#loc174)
    cir.return loc(#loc58)
  } loc(#loc167)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc182)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc113)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
          %6 = cir.const #cir.int<65> : !s32i loc(#loc116)
          %7 = cir.const #cir.int<50> : !s32i loc(#loc117)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc118)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc117)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc117)
          cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc185)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc121)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc121)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
          %14 = cir.const #cir.int<50> : !s32i loc(#loc123)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc124)
          %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc123)
          %17 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc125)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc186)
          cir.break loc(#loc126)
        } loc(#loc114)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc128)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc128)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc129)
          cir.break loc(#loc130)
        } loc(#loc127)
        cir.yield loc(#loc111)
      } loc(#loc111)
    } loc(#loc184)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc188)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc188)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc188)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc135)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc137)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc137)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc189)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc190)
      cir.libc.memmove %13 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc191)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc143)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc143)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc144)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc145)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc144)
      %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc146)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc146)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc192)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    } loc(#loc187)
    cir.return loc(#loc104)
  } loc(#loc180)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":37:19)
#loc4 = loc("/usr/include/string.h":407:1)
#loc5 = loc("/usr/include/string.h":408:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":23:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":47:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":25:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":25:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":26:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":26:24)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":27:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":28:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":39:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":28:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":32:16)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":32:22)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":32:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":32:31)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":32:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":32:32)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":33:23)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":33:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":33:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":33:18)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":33:19)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":34:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":35:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":37:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":38:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":40:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":46:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":41:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":41:25)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":43:17)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":43:23)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":43:29)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":43:36)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":43:42)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":43:53)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":43:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":43:54)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":44:22)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":44:14)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":44:17)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":44:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":45:19)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":45:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":107:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":111:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":109:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":109:14)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":110:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":110:14)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":54:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":78:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":56:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":56:12)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":57:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":57:24)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":58:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":58:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":59:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":70:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":59:12)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":61:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":63:19)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":63:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":64:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":65:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":67:16)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":67:22)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":67:27)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":67:30)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":67:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":67:31)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":68:22)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":68:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":68:14)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":68:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":68:18)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":69:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":71:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":77:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":72:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":72:25)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":74:17)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":74:23)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":74:29)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":74:36)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":74:42)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":74:53)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":74:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":74:54)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":75:22)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":75:14)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":75:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":75:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":76:19)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":76:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":81:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":105:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":83:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":83:12)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":84:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":84:24)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":85:12)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":85:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":86:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":97:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":86:12)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":88:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":90:16)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":90:22)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":90:27)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":90:30)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":90:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":90:31)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":91:22)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":91:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":91:14)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":91:17)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":91:18)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":92:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":93:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":95:19)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":95:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":96:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":98:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":104:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":99:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":99:25)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":101:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":101:23)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":101:29)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":101:36)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":101:42)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":101:53)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":101:9)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":101:54)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":102:22)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":102:14)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":102:17)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":102:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":103:19)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_15.c":103:9)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc4, #loc5])
#loc151 = loc(fused[#loc6, #loc7])
#loc152 = loc(fused[#loc8, #loc9])
#loc153 = loc(fused[#loc10, #loc11])
#loc154 = loc(fused[#loc13, #loc12])
#loc155 = loc(fused[#loc14, #loc15])
#loc156 = loc(fused[#loc22, #loc23])
#loc157 = loc(fused[#loc25, #loc24])
#loc158 = loc(fused[#loc33, #loc34])
#loc159 = loc(fused[#loc35, #loc36])
#loc160 = loc(fused[#loc41, #loc42])
#loc161 = loc(fused[#loc39, #loc42])
#loc162 = loc(fused[#loc43, #loc44])
#loc163 = loc(fused[#loc48, #loc45])
#loc164 = loc(fused[#loc51, #loc52])
#loc165 = loc(fused[#loc53, #loc54])
#loc166 = loc(fused[#loc55, #loc56])
#loc167 = loc(fused[#loc57, #loc58])
#loc168 = loc(fused[#loc59, #loc60])
#loc169 = loc(fused[#loc61, #loc62])
#loc170 = loc(fused[#loc64, #loc63])
#loc171 = loc(fused[#loc65, #loc66])
#loc172 = loc(fused[#loc77, #loc78])
#loc173 = loc(fused[#loc80, #loc79])
#loc174 = loc(fused[#loc85, #loc86])
#loc175 = loc(fused[#loc87, #loc88])
#loc176 = loc(fused[#loc93, #loc94])
#loc177 = loc(fused[#loc91, #loc94])
#loc178 = loc(fused[#loc95, #loc96])
#loc179 = loc(fused[#loc100, #loc97])
#loc180 = loc(fused[#loc103, #loc104])
#loc181 = loc(fused[#loc105, #loc106])
#loc182 = loc(fused[#loc107, #loc108])
#loc183 = loc(fused[#loc110, #loc109])
#loc184 = loc(fused[#loc111, #loc112])
#loc185 = loc(fused[#loc119, #loc120])
#loc186 = loc(fused[#loc122, #loc121])
#loc187 = loc(fused[#loc131, #loc132])
#loc188 = loc(fused[#loc133, #loc134])
#loc189 = loc(fused[#loc139, #loc140])
#loc190 = loc(fused[#loc137, #loc140])
#loc191 = loc(fused[#loc141, #loc142])
#loc192 = loc(fused[#loc146, #loc143])
