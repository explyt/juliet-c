!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:18)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:28)
#loc21 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":29:14)
#loc22 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":29:29)
#loc72 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":56:18)
#loc73 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":56:33)
#loc122 = loc(fused[#loc4, #loc5])
#loc127 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc72, #loc73])
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data = !cir.record<struct "std::_Vector_base<char *, std::allocator<char *>>::_Vector_impl_data" {!cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl = !cir.record<struct "std::_Vector_base<char *, std::allocator<char *>>::_Vector_impl" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E = !cir.record<struct "std::_Vector_base<char *, std::allocator<char *>>" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E = !cir.record<class "std::vector<char *, std::allocator<char *>>" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__new_char_loop_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZNSt6vectorIPcSaIS0_EEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>>, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!s8i>>, %9 : !u64i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc123)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    cir.return %11 : !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
  } loc(#loc121)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc124)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.func @_ZN40CWE126_Buffer_Overread__new_char_loop_727badSinkESt6vectorIPcSaIS1_EE(%arg0: !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E loc(fused[#loc21, #loc22])) extra(#fn_attr2) {
    %0 = cir.alloca !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc25)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc26)
    %4 = cir.call @_ZNSt6vectorIPcSaIS0_EEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr1) loc(#loc27)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    cir.scope {
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc130)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc131)
      %8 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc132)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
      %11 = cir.const #cir.int<67> : !s8i loc(#loc36)
      %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc36)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc37)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc37)
      cir.libc.memset %16 bytes from %10 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc133)
      %17 = cir.const #cir.int<0> : !s8i loc(#loc41)
      %18 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc42)
      %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
      %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc44)
      cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc134)
      %23 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc45)
      %24 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
      %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc45)
      cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc135)
      cir.scope {
        %34 = cir.const #cir.int<0> : !s32i loc(#loc51)
        %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc51)
        cir.store %35, %6 : !u64i, !cir.ptr<!u64i> loc(#loc137)
        cir.for : cond {
          %36 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc53)
          %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc54)
          %38 = cir.cmp(lt, %36, %37) : !u64i, !cir.bool loc(#loc138)
          cir.condition(%38) loc(#loc138)
        } body {
          cir.scope {
            %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
            %37 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc57)
            %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc58)
            %39 = cir.load %38 : !cir.ptr<!s8i>, !s8i loc(#loc56)
            %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc59)
            %41 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
            %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc60)
            cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc140)
          } loc(#loc139)
          cir.yield loc(#loc50)
        } step {
          %36 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc61)
          %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc62)
          cir.store %37, %6 : !u64i, !cir.ptr<!u64i> loc(#loc141)
          cir.yield loc(#loc136)
        } loc(#loc136)
      } loc(#loc136)
      %26 = cir.const #cir.int<0> : !s8i loc(#loc63)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc64)
      %30 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc142)
      %32 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
      cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc68)
      %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
      cir.delete.array %33 : <!s8i> loc(#loc69)
    } loc(#loc129)
    cir.return loc(#loc20)
  } loc(#loc126)
  cir.func @_ZN40CWE126_Buffer_Overread__new_char_loop_7211goodG2BSinkESt6vectorIPcSaIS1_EE(%arg0: !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E loc(fused[#loc72, #loc73])) extra(#fn_attr2) {
    %0 = cir.alloca !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc76)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc77)
    %4 = cir.call @_ZNSt6vectorIPcSaIS0_EEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr1) loc(#loc78)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.scope {
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc147)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc148)
      %8 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc149)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
      %11 = cir.const #cir.int<67> : !s8i loc(#loc87)
      %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc87)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc88)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc89)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc88)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc88)
      cir.libc.memset %16 bytes from %10 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
      %17 = cir.const #cir.int<0> : !s8i loc(#loc92)
      %18 = cir.const #cir.int<100> : !s32i loc(#loc93)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc94)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc93)
      %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
      %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc95)
      cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc151)
      %23 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc96)
      %24 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
      %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc96)
      cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc152)
      cir.scope {
        %34 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc102)
        cir.store %35, %6 : !u64i, !cir.ptr<!u64i> loc(#loc154)
        cir.for : cond {
          %36 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc104)
          %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc105)
          %38 = cir.cmp(lt, %36, %37) : !u64i, !cir.bool loc(#loc155)
          cir.condition(%38) loc(#loc155)
        } body {
          cir.scope {
            %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
            %37 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc108)
            %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc109)
            %39 = cir.load %38 : !cir.ptr<!s8i>, !s8i loc(#loc107)
            %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc110)
            %41 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
            %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc111)
            cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc157)
          } loc(#loc156)
          cir.yield loc(#loc101)
        } step {
          %36 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc112)
          %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc113)
          cir.store %37, %6 : !u64i, !cir.ptr<!u64i> loc(#loc158)
          cir.yield loc(#loc153)
        } loc(#loc153)
      } loc(#loc153)
      %26 = cir.const #cir.int<0> : !s8i loc(#loc114)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc115)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc116)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc115)
      %30 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
      %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc117)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc159)
      %32 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc118)
      cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc119)
      %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
      cir.delete.array %33 : <!s8i> loc(#loc120)
    } loc(#loc146)
    cir.return loc(#loc71)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__new_char_loop_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1125:7)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1130:7)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1127:7)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:11)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":374:20)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":94:10)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:25)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:36)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:34)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:2)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:39)
#loc15 = loc("/usr/include/string.h":407:1)
#loc16 = loc("/usr/include/string.h":408:33)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":29:1)
#loc20 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":49:1)
#loc23 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":32:5)
#loc24 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":32:31)
#loc25 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":30:1)
#loc26 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":32:30)
#loc27 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":32:19)
#loc28 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":33:5)
#loc29 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":48:5)
#loc30 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":34:9)
#loc31 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":34:16)
#loc32 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":34:19)
#loc33 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":35:9)
#loc34 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":35:22)
#loc35 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":36:16)
#loc36 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":36:22)
#loc37 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":36:27)
#loc38 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":36:31)
#loc39 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":36:9)
#loc40 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":36:32)
#loc41 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":37:23)
#loc42 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":37:14)
#loc43 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":37:18)
#loc44 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":37:9)
#loc45 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":38:19)
#loc46 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":38:26)
#loc47 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":38:9)
#loc48 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":38:30)
#loc49 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":41:9)
#loc50 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":44:9)
#loc51 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":41:18)
#loc52 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":41:14)
#loc53 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":41:21)
#loc54 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":41:25)
#loc55 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":42:9)
#loc56 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":43:23)
#loc57 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":43:28)
#loc58 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":43:29)
#loc59 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":43:18)
#loc60 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":43:13)
#loc61 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":41:35)
#loc62 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":41:34)
#loc63 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":45:23)
#loc64 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":45:14)
#loc65 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":45:18)
#loc66 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":45:9)
#loc67 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":46:19)
#loc68 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":46:9)
#loc69 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":47:19)
#loc70 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":56:1)
#loc71 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":75:1)
#loc74 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":58:5)
#loc75 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":58:31)
#loc76 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":57:1)
#loc77 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":58:30)
#loc78 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":58:19)
#loc79 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":59:5)
#loc80 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":74:5)
#loc81 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":60:9)
#loc82 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":60:16)
#loc83 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":60:19)
#loc84 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":61:9)
#loc85 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":61:22)
#loc86 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":62:16)
#loc87 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":62:22)
#loc88 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":62:27)
#loc89 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":62:31)
#loc90 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":62:9)
#loc91 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":62:32)
#loc92 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":63:23)
#loc93 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":63:14)
#loc94 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":63:18)
#loc95 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":63:9)
#loc96 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":64:19)
#loc97 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":64:26)
#loc98 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":64:9)
#loc99 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":64:30)
#loc100 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":67:9)
#loc101 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":70:9)
#loc102 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":67:18)
#loc103 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":67:14)
#loc104 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":67:21)
#loc105 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":67:25)
#loc106 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":68:9)
#loc107 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":69:23)
#loc108 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":69:28)
#loc109 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":69:29)
#loc110 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":69:18)
#loc111 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":69:13)
#loc112 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":67:35)
#loc113 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":67:34)
#loc114 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":71:23)
#loc115 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":71:14)
#loc116 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":71:18)
#loc117 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":71:9)
#loc118 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":72:19)
#loc119 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":72:9)
#loc120 = loc("CWE126_Buffer_Overread__new_char_loop_72b.cpp":73:19)
#loc121 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc15, #loc16])
#loc125 = loc(fused[#loc17, #loc18])
#loc126 = loc(fused[#loc19, #loc20])
#loc128 = loc(fused[#loc23, #loc24])
#loc129 = loc(fused[#loc28, #loc29])
#loc130 = loc(fused[#loc30, #loc31])
#loc131 = loc(fused[#loc30, #loc32])
#loc132 = loc(fused[#loc33, #loc34])
#loc133 = loc(fused[#loc39, #loc40])
#loc134 = loc(fused[#loc44, #loc41])
#loc135 = loc(fused[#loc47, #loc48])
#loc136 = loc(fused[#loc49, #loc50])
#loc137 = loc(fused[#loc52, #loc51])
#loc138 = loc(fused[#loc53, #loc54])
#loc139 = loc(fused[#loc55, #loc50])
#loc140 = loc(fused[#loc60, #loc58])
#loc141 = loc(fused[#loc62, #loc61])
#loc142 = loc(fused[#loc66, #loc63])
#loc143 = loc(fused[#loc70, #loc71])
#loc145 = loc(fused[#loc74, #loc75])
#loc146 = loc(fused[#loc79, #loc80])
#loc147 = loc(fused[#loc81, #loc82])
#loc148 = loc(fused[#loc81, #loc83])
#loc149 = loc(fused[#loc84, #loc85])
#loc150 = loc(fused[#loc90, #loc91])
#loc151 = loc(fused[#loc95, #loc92])
#loc152 = loc(fused[#loc98, #loc99])
#loc153 = loc(fused[#loc100, #loc101])
#loc154 = loc(fused[#loc103, #loc102])
#loc155 = loc(fused[#loc104, #loc105])
#loc156 = loc(fused[#loc106, #loc101])
#loc157 = loc(fused[#loc111, #loc109])
#loc158 = loc(fused[#loc113, #loc112])
#loc159 = loc(fused[#loc117, #loc114])
