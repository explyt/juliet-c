!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":25:23)
#loc4 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":25:28)
#loc23 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":46:27)
#loc24 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":46:32)
#loc41 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":63:27)
#loc42 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":63:32)
#loc73 = loc(fused[#loc3, #loc4])
#loc81 = loc(fused[#loc23, #loc24])
#loc88 = loc(fused[#loc41, #loc42])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_zero_modulo_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc73)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc5)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc7)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.return loc(#loc2)
  } loc(#loc72)
  cir.func private @printIntLine(!s32i) loc(#loc75)
  cir.func @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc77)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc15)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.call @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc17)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc79)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc20)
    cir.return loc(#loc11)
  } loc(#loc76)
  cir.func internal private @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc23, #loc24])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc81)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc25)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc26)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.return loc(#loc22)
  } loc(#loc80)
  cir.func internal private @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc84)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc33)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.call @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc35)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc86)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc38)
    cir.return loc(#loc29)
  } loc(#loc83)
  cir.func internal private @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc41, #loc42])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc88)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc43)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.return loc(#loc40)
  } loc(#loc87)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc48)
  cir.func internal private @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc92)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc54)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    cir.call @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc56)
    cir.br ^bb1 loc(#loc94)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc95)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc96)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc97)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc66)
    cir.br ^bb4 loc(#loc62)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc58)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc50)
  } loc(#loc91)
  cir.func @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_434goodEv() extra(#fn_attr) {
    cir.call @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_43L7goodG2BEv() : () -> () loc(#loc70)
    cir.call @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_43L7goodB2GEv() : () -> () loc(#loc71)
    cir.return loc(#loc69)
  } loc(#loc98)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":0:0)
#loc1 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":25:1)
#loc2 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":29:1)
#loc5 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":26:1)
#loc6 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":28:12)
#loc7 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":28:5)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":31:1)
#loc11 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":39:1)
#loc12 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":33:5)
#loc13 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":33:9)
#loc14 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":35:13)
#loc15 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":35:12)
#loc16 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":35:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":36:5)
#loc18 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":38:18)
#loc19 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":38:24)
#loc20 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":38:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":46:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":50:1)
#loc25 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":47:1)
#loc26 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":49:12)
#loc27 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":49:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":52:1)
#loc29 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":60:1)
#loc30 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":54:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":54:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":56:13)
#loc33 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":56:12)
#loc34 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":56:5)
#loc35 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":57:5)
#loc36 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":59:18)
#loc37 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":59:24)
#loc38 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":59:5)
#loc39 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":63:1)
#loc40 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":67:1)
#loc43 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":64:1)
#loc44 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":66:12)
#loc45 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":66:5)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":82:19)
#loc49 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":69:1)
#loc50 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":84:1)
#loc51 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":71:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":71:9)
#loc53 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":73:13)
#loc54 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":73:12)
#loc55 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":73:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":74:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":76:5)
#loc58 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":83:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":76:9)
#loc60 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":76:17)
#loc61 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":77:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":79:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":81:5)
#loc64 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":78:22)
#loc65 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":78:28)
#loc66 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":78:9)
#loc67 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":82:9)
#loc68 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":86:1)
#loc69 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":90:1)
#loc70 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":88:5)
#loc71 = loc("CWE369_Divide_by_Zero__int_zero_modulo_43.cpp":89:5)
#loc72 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc7, #loc6])
#loc75 = loc(fused[#loc8, #loc9])
#loc76 = loc(fused[#loc10, #loc11])
#loc77 = loc(fused[#loc12, #loc13])
#loc78 = loc(fused[#loc16, #loc14])
#loc79 = loc(fused[#loc18, #loc19])
#loc80 = loc(fused[#loc21, #loc22])
#loc82 = loc(fused[#loc27, #loc26])
#loc83 = loc(fused[#loc28, #loc29])
#loc84 = loc(fused[#loc30, #loc31])
#loc85 = loc(fused[#loc34, #loc32])
#loc86 = loc(fused[#loc36, #loc37])
#loc87 = loc(fused[#loc39, #loc40])
#loc89 = loc(fused[#loc45, #loc44])
#loc90 = loc(fused[#loc46, #loc47])
#loc91 = loc(fused[#loc49, #loc50])
#loc92 = loc(fused[#loc51, #loc52])
#loc93 = loc(fused[#loc55, #loc53])
#loc94 = loc(fused[#loc57, #loc58])
#loc95 = loc(fused[#loc59, #loc60])
#loc96 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc97 = loc(fused[#loc64, #loc65])
#loc98 = loc(fused[#loc68, #loc69])
