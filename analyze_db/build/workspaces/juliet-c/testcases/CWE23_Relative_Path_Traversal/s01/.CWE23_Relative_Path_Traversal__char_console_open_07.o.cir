!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_07.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_07L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc181)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_07L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc182)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_073badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc183)
  cir.global "private" internal dsolocal @_ZL10staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc184)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc185)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc186)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc187)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc17)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc189)
  cir.func private @close(!s32i) -> !s32i loc(#loc190)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_073badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc183)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_073badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc183)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc183)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.scope {
      %4 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc184)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc30)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc31)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc195)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc198)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc37)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc37)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc198)
          cir.scope {
            %12 = cir.const #cir.int<4096> : !s32i loc(#loc41)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc41)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc200)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc43)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc201)
            cir.if %18 {
              cir.scope {
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
                %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc49)
                %22 = cir.const #cir.int<4096> : !s32i loc(#loc50)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc50)
                %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc51)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc204)
                %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc204)
                %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc187)
                %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
                %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc53)
                %30 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc54)
                %31 = cir.cmp(ne, %29, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc205)
                cir.if %31 {
                  %32 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                  %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
                  cir.store %34, %8 : !u64i, !cir.ptr<!u64i> loc(#loc207)
                  cir.scope {
                    %35 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                    %36 = cir.const #cir.int<0> : !s32i loc(#loc65)
                    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc65)
                    %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc209)
                    %39 = cir.ternary(%38, true {
                      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                      %41 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                      %42 = cir.const #cir.int<1> : !s32i loc(#loc69)
                      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc69)
                      %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc210)
                      %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc70)
                      %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc67)
                      %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc67)
                      %48 = cir.const #cir.int<10> : !s8i loc(#loc71)
                      %49 = cir.cast(integral, %48 : !s8i), !s32i loc(#loc71)
                      %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc211)
                      %51 = cir.ternary(%50, true {
                        %52 = cir.const #true loc(#loc66)
                        cir.yield %52 : !cir.bool loc(#loc66)
                      }, false {
                        %52 = cir.const #false loc(#loc66)
                        cir.yield %52 : !cir.bool loc(#loc66)
                      }) : (!cir.bool) -> !cir.bool loc(#loc66)
                      cir.yield %51 : !cir.bool loc(#loc66)
                    }, false {
                      %40 = cir.const #false loc(#loc66)
                      cir.yield %40 : !cir.bool loc(#loc66)
                    }) : (!cir.bool) -> !cir.bool loc(#loc66)
                    cir.if %39 {
                      %40 = cir.const #cir.int<0> : !s8i loc(#loc73)
                      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
                      %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc75)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc76)
                      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc76)
                      %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc213)
                      %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                      cir.store %40, %46 : !s8i, !cir.ptr<!s8i> loc(#loc214)
                    } loc(#loc212)
                  } loc(#loc208)
                } else {
                  %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc17)
                  %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc17)
                  cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc78)
                  %34 = cir.const #cir.int<0> : !s8i loc(#loc79)
                  %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
                  %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc81)
                  %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc82)
                  cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc215)
                } loc(#loc206)
              } loc(#loc203)
            } loc(#loc202)
          } loc(#loc199)
        } loc(#loc197)
      } loc(#loc196)
    } loc(#loc194)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc217)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc88)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc89)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc218)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc90)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc91)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc219)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc92)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc220)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc97)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc98)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc99)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc222)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc102)
        } loc(#loc223)
      } loc(#loc221)
    } loc(#loc216)
    cir.return loc(#loc23)
  } loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc103)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc106)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_07L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc182)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_07L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc182)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc182)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc111)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
    cir.scope {
      %4 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc184)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc115)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc116)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc229)
      cir.if %7 {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc120)
      } else {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc121)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc106)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc106)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc121)
      } loc(#loc230)
    } loc(#loc228)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc232)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc128)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc129)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc233)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc130)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc131)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc234)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc132)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc235)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc139)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc237)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc141)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc142)
        } loc(#loc238)
      } loc(#loc236)
    } loc(#loc231)
    cir.return loc(#loc108)
  } loc(#loc225)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_07L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc240)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc181)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_07L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc181)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc181)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc147)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    cir.scope {
      %4 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc184)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc151)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc152)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc243)
      cir.if %7 {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc154)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc156)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc156)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc154)
      } loc(#loc244)
    } loc(#loc242)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc246)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc162)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc163)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc247)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc164)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc165)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc248)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc166)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc249)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc172)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc173)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc251)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc175)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc176)
        } loc(#loc252)
      } loc(#loc250)
    } loc(#loc245)
    cir.return loc(#loc144)
  } loc(#loc239)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_074goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_07L8goodG2B1Ev() : () -> () loc(#loc179)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_07L8goodG2B2Ev() : () -> () loc(#loc180)
    cir.return loc(#loc178)
  } loc(#loc253)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_07.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":124:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":124:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":97:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":97:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":48:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":48:37)
#loc7 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":38:1)
#loc8 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":38:25)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("/usr/include/stdio.h":149:1)
#loc14 = loc("/usr/include/stdio.h":149:14)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":71:31)
#loc18 = loc("/usr/include/fcntl.h":209:1)
#loc19 = loc("/usr/include/fcntl.h":209:56)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":45:1)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":87:1)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":47:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":47:12)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":49:12)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":49:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":50:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":77:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":50:8)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":50:20)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":51:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":52:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":76:9)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":54:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":54:41)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":54:30)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":54:37)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":56:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":75:13)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":56:17)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":56:30)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":56:40)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":57:13)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":59:17)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":74:17)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":59:27)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":59:32)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":59:31)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":59:47)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":59:60)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":59:70)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":59:21)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":59:80)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":60:17)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":68:17)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":70:17)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":63:31)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":63:38)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":63:21)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":63:42)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":64:21)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":67:21)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":64:25)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":64:35)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":64:37)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":64:40)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":64:45)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":64:53)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":64:54)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":64:59)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":65:21)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":66:43)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":66:25)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":66:30)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":66:38)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":66:39)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":71:21)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":73:37)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":73:21)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":73:26)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":73:33)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":78:5)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":86:5)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":79:9)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":79:13)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":81:25)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":81:31)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":81:38)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":81:47)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":81:55)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":81:20)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":81:9)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":81:63)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":82:9)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":85:9)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":82:13)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":82:26)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":82:25)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":83:9)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":84:19)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":84:13)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":102:19)
#loc104 = loc("/usr/include/string.h":149:1)
#loc105 = loc("/usr/include/string.h":150:14)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":107:22)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":94:1)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":118:1)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":96:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":96:12)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":98:12)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":98:5)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":99:5)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":108:5)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":99:8)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":99:20)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":100:5)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":103:5)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":105:5)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":102:9)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":107:9)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":107:16)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":109:5)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":117:5)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":110:9)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":110:13)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":112:25)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":112:31)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":112:38)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":112:47)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":112:55)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":112:20)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":112:9)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":112:63)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":113:9)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":116:9)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":113:13)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":113:26)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":113:25)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":114:9)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":115:19)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":115:13)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":121:1)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":140:1)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":123:5)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":123:12)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":125:12)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":125:5)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":126:5)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":130:5)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":126:8)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":126:20)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":127:5)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":129:9)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":129:16)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":129:22)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":131:5)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":139:5)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":132:9)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":132:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":134:25)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":134:31)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":134:38)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":134:47)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":134:55)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":134:20)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":134:9)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":134:63)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":135:9)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":138:9)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":135:13)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":135:26)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":135:25)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":136:9)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":137:19)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":137:13)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":142:1)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":146:1)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":144:5)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_console_open_07.cpp":145:5)
#loc181 = loc(fused[#loc1, #loc2])
#loc182 = loc(fused[#loc3, #loc4])
#loc183 = loc(fused[#loc5, #loc6])
#loc184 = loc(fused[#loc7, #loc8])
#loc185 = loc(fused[#loc9, #loc10])
#loc186 = loc(fused[#loc11, #loc12])
#loc187 = loc(fused[#loc13, #loc14])
#loc188 = loc(fused[#loc15, #loc16])
#loc189 = loc(fused[#loc18, #loc19])
#loc190 = loc(fused[#loc20, #loc21])
#loc191 = loc(fused[#loc22, #loc23])
#loc192 = loc(fused[#loc24, #loc25])
#loc193 = loc(fused[#loc27, #loc26])
#loc194 = loc(fused[#loc28, #loc29])
#loc195 = loc(fused[#loc30, #loc31])
#loc196 = loc(fused[#loc32, #loc29])
#loc197 = loc(fused[#loc33, #loc34])
#loc198 = loc(fused[#loc35, #loc36])
#loc199 = loc(fused[#loc39, #loc40])
#loc200 = loc(fused[#loc41, #loc42])
#loc201 = loc(fused[#loc41, #loc43])
#loc202 = loc(fused[#loc44, #loc40])
#loc203 = loc(fused[#loc45, #loc46])
#loc204 = loc(fused[#loc50, #loc51])
#loc205 = loc(fused[#loc53, #loc54])
#loc206 = loc(fused[#loc55, #loc56, #loc57, #loc46])
#loc207 = loc(fused[#loc60, #loc61])
#loc208 = loc(fused[#loc62, #loc63])
#loc209 = loc(fused[#loc64, #loc65])
#loc210 = loc(fused[#loc68, #loc69])
#loc211 = loc(fused[#loc67, #loc71])
#loc212 = loc(fused[#loc72, #loc63])
#loc213 = loc(fused[#loc75, #loc76])
#loc214 = loc(fused[#loc74, #loc73])
#loc215 = loc(fused[#loc80, #loc79])
#loc216 = loc(fused[#loc83, #loc84])
#loc217 = loc(fused[#loc85, #loc86])
#loc218 = loc(fused[#loc88, #loc89])
#loc219 = loc(fused[#loc90, #loc91])
#loc220 = loc(fused[#loc93, #loc94])
#loc221 = loc(fused[#loc95, #loc96])
#loc222 = loc(fused[#loc97, #loc98])
#loc223 = loc(fused[#loc100, #loc96])
#loc224 = loc(fused[#loc104, #loc105])
#loc225 = loc(fused[#loc107, #loc108])
#loc226 = loc(fused[#loc109, #loc110])
#loc227 = loc(fused[#loc112, #loc111])
#loc228 = loc(fused[#loc113, #loc114])
#loc229 = loc(fused[#loc115, #loc116])
#loc230 = loc(fused[#loc117, #loc118, #loc119, #loc114])
#loc231 = loc(fused[#loc123, #loc124])
#loc232 = loc(fused[#loc125, #loc126])
#loc233 = loc(fused[#loc128, #loc129])
#loc234 = loc(fused[#loc130, #loc131])
#loc235 = loc(fused[#loc133, #loc134])
#loc236 = loc(fused[#loc135, #loc136])
#loc237 = loc(fused[#loc137, #loc138])
#loc238 = loc(fused[#loc140, #loc136])
#loc239 = loc(fused[#loc143, #loc144])
#loc240 = loc(fused[#loc145, #loc146])
#loc241 = loc(fused[#loc148, #loc147])
#loc242 = loc(fused[#loc149, #loc150])
#loc243 = loc(fused[#loc151, #loc152])
#loc244 = loc(fused[#loc153, #loc150])
#loc245 = loc(fused[#loc157, #loc158])
#loc246 = loc(fused[#loc159, #loc160])
#loc247 = loc(fused[#loc162, #loc163])
#loc248 = loc(fused[#loc164, #loc165])
#loc249 = loc(fused[#loc167, #loc168])
#loc250 = loc(fused[#loc169, #loc170])
#loc251 = loc(fused[#loc171, #loc172])
#loc252 = loc(fused[#loc174, #loc170])
#loc253 = loc(fused[#loc177, #loc178])
