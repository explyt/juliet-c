!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc10 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":24:21)
#loc11 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":24:27)
#loc49 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":107:10)
#loc50 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":107:14)
#loc51 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":107:20)
#loc52 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":107:32)
#loc70 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":68:25)
#loc71 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":68:31)
#loc101 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":48:25)
#loc102 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":48:31)
#loc126 = loc(fused[#loc10, #loc11])
#loc140 = loc(fused[#loc49, #loc50])
#loc141 = loc(fused[#loc51, #loc52])
#loc146 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc101, #loc102])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc122)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%f\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc124)
  cir.func internal private @badSink(%arg0: !cir.float loc(fused[#loc10, #loc11])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc126)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc12)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc128)
      %2 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc17)
      %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc18)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc18)
      %5 = cir.binop(div, %2, %4) : !cir.double loc(#loc129)
      %6 = cir.cast(float_to_int, %5 : !cir.double), !s32i loc(#loc129)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc128)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc20)
    } loc(#loc127)
    cir.return loc(#loc9)
  } loc(#loc125)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fscanf_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc25)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc132)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc123)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc27)
    %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc29)
    cir.call @badSink(%8) : (!cir.float) -> () loc(#loc30)
    cir.return loc(#loc22)
  } loc(#loc130)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fscanf_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc133)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc136)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc46)
  cir.func @main(%arg0: !s32i loc(fused[#loc49, #loc50]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc51, #loc52])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc55)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc55)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc56)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fscanf_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call @CWE369_Divide_by_Zero__float_fscanf_41_good() : () -> () loc(#loc58)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc44)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fscanf_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE369_Divide_by_Zero__float_fscanf_41_bad() : () -> () loc(#loc62)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %17 : !s32i loc(#loc144)
  } loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc67)
  cir.func internal private @goodB2GSink(%arg0: !cir.float loc(fused[#loc70, #loc71])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc146)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc72)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc75)
      %2 = cir.cast(floating, %1 : !cir.float), !cir.double loc(#loc75)
      %3 = cir.fabs %2 : !cir.double loc(#loc75)
      %4 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc76)
      %5 = cir.cmp(gt, %3, %4) : !cir.double, !cir.bool loc(#loc148)
      cir.if %5 {
        %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc150)
        %7 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc83)
        %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc84)
        %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc84)
        %10 = cir.binop(div, %7, %9) : !cir.double loc(#loc151)
        %11 = cir.cast(float_to_int, %10 : !cir.double), !s32i loc(#loc151)
        cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc150)
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc85)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc86)
      } else {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc67)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc67)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
      } loc(#loc149)
    } loc(#loc147)
    cir.return loc(#loc69)
  } loc(#loc145)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc92)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc154)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc94)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc123)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc95)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc96)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc96)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc94)
    %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc97)
    cir.call @goodB2GSink(%8) : (!cir.float) -> () loc(#loc98)
    cir.return loc(#loc89)
  } loc(#loc152)
  cir.func internal private @goodG2BSink(%arg0: !cir.float loc(fused[#loc101, #loc102])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc156)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc103)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc158)
      %2 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc108)
      %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc109)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc109)
      %5 = cir.binop(div, %2, %4) : !cir.double loc(#loc159)
      %6 = cir.cast(float_to_int, %5 : !cir.double), !s32i loc(#loc159)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc158)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc111)
    } loc(#loc157)
    cir.return loc(#loc100)
  } loc(#loc155)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc116)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc162)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc118)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc163)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc120)
    cir.call @goodG2BSink(%3) : (!cir.float) -> () loc(#loc121)
    cir.return loc(#loc113)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":39:20)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":24:1)
#loc9 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":31:1)
#loc12 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":25:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":26:5)
#loc14 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":30:5)
#loc15 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":28:9)
#loc16 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":28:40)
#loc17 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":28:28)
#loc18 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":28:36)
#loc19 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":29:22)
#loc20 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":29:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":33:1)
#loc22 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":41:1)
#loc23 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":35:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":35:11)
#loc25 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":37:12)
#loc26 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":37:5)
#loc27 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":39:5)
#loc28 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":39:13)
#loc29 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":40:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":40:5)
#loc31 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":92:1)
#loc32 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":96:1)
#loc33 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":94:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":94:13)
#loc35 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":95:5)
#loc36 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":95:13)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":112:15)
#loc44 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":114:15)
#loc45 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":117:15)
#loc46 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":119:15)
#loc47 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":107:1)
#loc48 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":122:1)
#loc53 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":108:1)
#loc54 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":110:27)
#loc55 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":110:22)
#loc56 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":110:5)
#loc57 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":112:5)
#loc58 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":113:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":113:49)
#loc60 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":114:5)
#loc61 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":117:5)
#loc62 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":118:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":118:48)
#loc64 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":119:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":121:12)
#loc66 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":121:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":78:19)
#loc68 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":68:1)
#loc69 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":80:1)
#loc72 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":69:1)
#loc73 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":71:5)
#loc74 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":79:5)
#loc75 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":71:13)
#loc76 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":71:21)
#loc77 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":71:8)
#loc78 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":72:5)
#loc79 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":75:5)
#loc80 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":77:5)
#loc81 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":73:9)
#loc82 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":73:40)
#loc83 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":73:28)
#loc84 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":73:36)
#loc85 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":74:22)
#loc86 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":74:9)
#loc87 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":78:9)
#loc88 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":82:1)
#loc89 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":90:1)
#loc90 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":84:5)
#loc91 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":84:11)
#loc92 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":86:12)
#loc93 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":86:5)
#loc94 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":88:5)
#loc95 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":88:13)
#loc96 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":88:20)
#loc97 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":89:17)
#loc98 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":89:5)
#loc99 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":48:1)
#loc100 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":55:1)
#loc103 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":49:1)
#loc104 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":50:5)
#loc105 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":54:5)
#loc106 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":52:9)
#loc107 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":52:40)
#loc108 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":52:28)
#loc109 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":52:36)
#loc110 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":53:22)
#loc111 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":53:9)
#loc112 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":57:1)
#loc113 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":65:1)
#loc114 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":59:5)
#loc115 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":59:11)
#loc116 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":61:12)
#loc117 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":61:5)
#loc118 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":63:12)
#loc119 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":63:5)
#loc120 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":64:17)
#loc121 = loc("CWE369_Divide_by_Zero__float_fscanf_41.c":64:5)
#loc122 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc3, #loc4])
#loc124 = loc(fused[#loc6, #loc7])
#loc125 = loc(fused[#loc8, #loc9])
#loc127 = loc(fused[#loc13, #loc14])
#loc128 = loc(fused[#loc15, #loc16])
#loc129 = loc(fused[#loc17, #loc18])
#loc130 = loc(fused[#loc21, #loc22])
#loc131 = loc(fused[#loc23, #loc24])
#loc132 = loc(fused[#loc26, #loc25])
#loc133 = loc(fused[#loc31, #loc32])
#loc134 = loc(fused[#loc33, #loc34])
#loc135 = loc(fused[#loc35, #loc36])
#loc136 = loc(fused[#loc37, #loc38])
#loc137 = loc(fused[#loc39, #loc40])
#loc138 = loc(fused[#loc41, #loc42])
#loc139 = loc(fused[#loc47, #loc48])
#loc142 = loc(fused[#loc58, #loc59])
#loc143 = loc(fused[#loc62, #loc63])
#loc144 = loc(fused[#loc66, #loc65])
#loc145 = loc(fused[#loc68, #loc69])
#loc147 = loc(fused[#loc73, #loc74])
#loc148 = loc(fused[#loc77, #loc76])
#loc149 = loc(fused[#loc78, #loc79, #loc80, #loc74])
#loc150 = loc(fused[#loc81, #loc82])
#loc151 = loc(fused[#loc83, #loc84])
#loc152 = loc(fused[#loc88, #loc89])
#loc153 = loc(fused[#loc90, #loc91])
#loc154 = loc(fused[#loc93, #loc92])
#loc155 = loc(fused[#loc99, #loc100])
#loc157 = loc(fused[#loc104, #loc105])
#loc158 = loc(fused[#loc106, #loc107])
#loc159 = loc(fused[#loc108, #loc109])
#loc160 = loc(fused[#loc112, #loc113])
#loc161 = loc(fused[#loc114, #loc115])
#loc162 = loc(fused[#loc117, #loc116])
#loc163 = loc(fused[#loc119, #loc118])
