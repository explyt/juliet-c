!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":47:21)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":47:25)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":365:10)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":365:14)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":365:20)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":365:32)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":142:26)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":142:30)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":232:26)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":232:30)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":317:25)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":317:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc487 = loc(fused[#loc23, #loc24])
#loc539 = loc(fused[#loc163, #loc164])
#loc540 = loc(fused[#loc165, #loc166])
#loc546 = loc(fused[#loc187, #loc188])
#loc593 = loc(fused[#loc315, #loc316])
#loc640 = loc(fused[#loc441, #loc442])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc477)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc478)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc479)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc480)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc481)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc482)
  cir.func private @close(!s32i) -> !s32i loc(#loc483)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc484)
  cir.func private @printIntLine(!s32i) loc(#loc485)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc20)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc23, #loc24])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc487)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc25)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc484)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc28)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc491)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc491)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc491)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc37)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc493)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
              %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc42)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc42)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc42)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc43)
            } else {
              %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc20)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc44)
            } loc(#loc494)
          } loc(#loc492)
        } loc(#loc490)
      } loc(#loc489)
    } loc(#loc488)
    cir.return loc(#loc22)
  } loc(#loc486)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc496)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc50)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc499)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc500)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc501)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc502)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc59)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc59)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc501)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc64)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc65)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc66)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc67)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc504)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc72)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc73)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc73)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc506)
            cir.if %57 {
              cir.break loc(#loc75)
            } loc(#loc507)
          } loc(#loc505)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc508)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc78)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc509)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc510)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc83)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc83)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc511)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc86)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc512)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc91)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc91)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc92)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc513)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc515)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc516)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc516)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc103)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc104)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc517)
            cir.if %61 {
              cir.break loc(#loc106)
            } loc(#loc518)
          } loc(#loc514)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc107)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
          %34 = cir.const #cir.int<3> : !s32i loc(#loc109)
          %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc109)
          %36 = cir.const #cir.int<4> : !u64i loc(#loc109)
          %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc109)
          %38 = cir.const #cir.int<2> : !s32i loc(#loc109)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc109)
          %40 = cir.binop(add, %37, %39) : !u64i loc(#loc109)
          %41 = cir.const #cir.int<1> : !s32i loc(#loc110)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc110)
          %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc519)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
          %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc112)
          cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc520)
          cir.scope {
            %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc118)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc118)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc522)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc119)
              cir.yield %59 : !cir.bool loc(#loc119)
            }, false {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc121)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc523)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc119)
                cir.yield %63 : !cir.bool loc(#loc119)
              }, false {
                %63 = cir.const #false loc(#loc119)
                cir.yield %63 : !cir.bool loc(#loc119)
              }) : (!cir.bool) -> !cir.bool loc(#loc119)
              cir.yield %62 : !cir.bool loc(#loc119)
            }) : (!cir.bool) -> !cir.bool loc(#loc119)
            cir.if %58 {
              cir.break loc(#loc123)
            } loc(#loc524)
          } loc(#loc521)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc124)
          %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc124)
          %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc125)
          %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
          %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc126)
          cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc525)
          %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
          %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc128)
          cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc526)
          cir.yield loc(#loc63)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc131)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc131)
          cir.condition(%13) loc(#loc131)
        } loc(#loc503)
      } loc(#loc503)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc135)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc135)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc528)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc138)
        } loc(#loc529)
      } loc(#loc527)
    } loc(#loc498)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc484)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc530)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc142)
    cir.return loc(#loc46)
  } loc(#loc495)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc532)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc145)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc533)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc147)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc534)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc149)
    cir.return loc(#loc144)
  } loc(#loc531)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc535)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc536)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc537)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc160)
  cir.func @main(%arg0: !s32i loc(fused[#loc163, #loc164]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc165, #loc166])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc539)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc540)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc162)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc167)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc168)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc169)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc169)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc170)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc157)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc541)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_21_good() : () -> () loc(#loc172)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc158)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc159)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc542)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_21_bad() : () -> () loc(#loc176)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc160)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc179)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc543)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc543)
    cir.return %17 : !s32i loc(#loc543)
  } loc(#loc538)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc544)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc184)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc187, #loc188])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc546)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc544)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc192)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc192)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc183)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc183)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc196)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc550)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc550)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc550)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc204)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc552)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc207)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc553)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc205)
                cir.yield %14 : !cir.bool loc(#loc205)
              }, false {
                %14 = cir.const #false loc(#loc205)
                cir.yield %14 : !cir.bool loc(#loc205)
              }) : (!cir.bool) -> !cir.bool loc(#loc205)
              cir.yield %13 : !cir.bool loc(#loc205)
            }, false {
              %10 = cir.const #false loc(#loc205)
              cir.yield %10 : !cir.bool loc(#loc205)
            }) : (!cir.bool) -> !cir.bool loc(#loc205)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc212)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc213)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc213)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc213)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc214)
            } else {
              %10 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc184)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc184)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc215)
            } loc(#loc554)
          } loc(#loc551)
        } loc(#loc549)
      } loc(#loc548)
    } loc(#loc547)
    cir.return loc(#loc186)
  } loc(#loc545)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc556)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc220)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc221)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc557)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc559)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc560)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc561)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc562)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc230)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc230)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc561)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc235)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc236)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc237)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc238)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc564)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc243)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc244)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc244)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc566)
            cir.if %57 {
              cir.break loc(#loc246)
            } loc(#loc567)
          } loc(#loc565)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc568)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc249)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc569)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc570)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc254)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc254)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc571)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc256)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc256)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc257)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc572)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc260)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc260)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc261)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc573)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc266)
            %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc575)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc576)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc576)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc271)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc272)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc272)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc577)
            cir.if %61 {
              cir.break loc(#loc274)
            } loc(#loc578)
          } loc(#loc574)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc275)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc276)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc276)
          %34 = cir.const #cir.int<3> : !s32i loc(#loc277)
          %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc277)
          %36 = cir.const #cir.int<4> : !u64i loc(#loc277)
          %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc277)
          %38 = cir.const #cir.int<2> : !s32i loc(#loc277)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc277)
          %40 = cir.binop(add, %37, %39) : !u64i loc(#loc277)
          %41 = cir.const #cir.int<1> : !s32i loc(#loc278)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc278)
          %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc579)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc279)
          %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc280)
          %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc280)
          cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc580)
          cir.scope {
            %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc285)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc286)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc286)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc582)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc287)
              cir.yield %59 : !cir.bool loc(#loc287)
            }, false {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc288)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc289)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc583)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc287)
                cir.yield %63 : !cir.bool loc(#loc287)
              }, false {
                %63 = cir.const #false loc(#loc287)
                cir.yield %63 : !cir.bool loc(#loc287)
              }) : (!cir.bool) -> !cir.bool loc(#loc287)
              cir.yield %62 : !cir.bool loc(#loc287)
            }) : (!cir.bool) -> !cir.bool loc(#loc287)
            cir.if %58 {
              cir.break loc(#loc291)
            } loc(#loc584)
          } loc(#loc581)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc292)
          %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc292)
          %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc293)
          %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc294)
          %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc294)
          cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc585)
          %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc295)
          %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc296)
          cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc586)
          cir.yield loc(#loc234)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc299)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc299)
          cir.condition(%13) loc(#loc299)
        } loc(#loc563)
      } loc(#loc563)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc302)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc303)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc303)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc588)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc305)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc306)
        } loc(#loc589)
      } loc(#loc587)
    } loc(#loc558)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc307)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc544)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc590)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc310)
    cir.return loc(#loc217)
  } loc(#loc555)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc591)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc315, #loc316])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc593)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc591)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc320)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc320)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc597)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc597)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc597)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc328)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc329)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc599)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc331)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc332)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc600)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc330)
                cir.yield %14 : !cir.bool loc(#loc330)
              }, false {
                %14 = cir.const #false loc(#loc330)
                cir.yield %14 : !cir.bool loc(#loc330)
              }) : (!cir.bool) -> !cir.bool loc(#loc330)
              cir.yield %13 : !cir.bool loc(#loc330)
            }, false {
              %10 = cir.const #false loc(#loc330)
              cir.yield %10 : !cir.bool loc(#loc330)
            }) : (!cir.bool) -> !cir.bool loc(#loc330)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc337)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc338)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc338)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc338)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc339)
            } else {
              %10 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc340)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc340)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc341)
            } loc(#loc601)
          } loc(#loc598)
        } loc(#loc596)
      } loc(#loc595)
    } loc(#loc594)
    cir.return loc(#loc314)
  } loc(#loc592)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc603)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc346)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc347)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc604)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc606)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc607)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc608)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc609)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc356)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc356)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc608)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc361)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc362)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc363)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc364)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc611)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc369)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc370)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc370)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc613)
            cir.if %57 {
              cir.break loc(#loc372)
            } loc(#loc614)
          } loc(#loc612)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc615)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc375)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc616)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc617)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc380)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc380)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc618)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc382)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc382)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc383)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc619)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc386)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc386)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc387)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc620)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc392)
            %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc622)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc623)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc623)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc397)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc398)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc398)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc624)
            cir.if %61 {
              cir.break loc(#loc400)
            } loc(#loc625)
          } loc(#loc621)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc401)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc402)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc402)
          %34 = cir.const #cir.int<3> : !s32i loc(#loc403)
          %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc403)
          %36 = cir.const #cir.int<4> : !u64i loc(#loc403)
          %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc403)
          %38 = cir.const #cir.int<2> : !s32i loc(#loc403)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc403)
          %40 = cir.binop(add, %37, %39) : !u64i loc(#loc403)
          %41 = cir.const #cir.int<1> : !s32i loc(#loc404)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc404)
          %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc626)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc405)
          %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc406)
          %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc406)
          cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc627)
          cir.scope {
            %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc411)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc412)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc412)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc629)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc413)
              cir.yield %59 : !cir.bool loc(#loc413)
            }, false {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc414)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc415)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc630)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc413)
                cir.yield %63 : !cir.bool loc(#loc413)
              }, false {
                %63 = cir.const #false loc(#loc413)
                cir.yield %63 : !cir.bool loc(#loc413)
              }) : (!cir.bool) -> !cir.bool loc(#loc413)
              cir.yield %62 : !cir.bool loc(#loc413)
            }) : (!cir.bool) -> !cir.bool loc(#loc413)
            cir.if %58 {
              cir.break loc(#loc417)
            } loc(#loc631)
          } loc(#loc628)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc418)
          %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc418)
          %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc419)
          %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc420)
          %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc420)
          cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc632)
          %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc421)
          %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc422)
          cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc633)
          cir.yield loc(#loc360)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc425)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc425)
          cir.condition(%13) loc(#loc425)
        } loc(#loc610)
      } loc(#loc610)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc428)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc429)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc429)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc635)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc431)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc432)
        } loc(#loc636)
      } loc(#loc634)
    } loc(#loc605)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc433)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc591)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc637)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc435)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc436)
    cir.return loc(#loc343)
  } loc(#loc602)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc638)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc441, #loc442])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc640)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc443)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc638)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc446)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc446)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc644)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc644)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc644)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc454)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc455)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc646)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc459)
              %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc460)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc460)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc460)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc461)
            } else {
              %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc462)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc462)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc463)
            } loc(#loc647)
          } loc(#loc645)
        } loc(#loc643)
      } loc(#loc642)
    } loc(#loc641)
    cir.return loc(#loc440)
  } loc(#loc639)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc649)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc468)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc469)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc650)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc471)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc651)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc473)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc638)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc652)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc475)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc476)
    cir.return loc(#loc465)
  } loc(#loc648)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_21.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":98:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":45:1)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":45:24)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":61:27)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":47:1)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":65:1)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":48:1)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":49:5)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":64:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":49:8)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":50:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":51:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":63:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":52:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":52:34)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":55:13)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":62:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":55:17)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":55:25)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":56:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":58:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":60:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":57:37)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":57:30)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":57:17)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":61:17)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":67:1)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":130:1)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":69:5)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":69:9)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":71:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":71:12)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":71:5)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":72:5)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":127:5)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":77:9)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":77:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":78:9)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":78:28)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":79:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":79:32)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":80:9)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":80:41)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":81:9)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":116:17)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:36)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:45)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:58)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:29)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:69)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":92:13)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":95:13)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":92:17)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":92:34)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":93:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":94:17)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:20)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:21)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:30)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:33)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:47)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:13)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:48)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":97:34)
#loc84 = loc("/usr/include/netinet/in.h":249:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":97:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":98:39)
#loc87 = loc("/usr/include/netinet/in.h":251:20)
#loc88 = loc("/usr/include/netinet/in.h":33:15)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":98:13)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":98:59)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":99:38)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":99:32)
#loc93 = loc("/usr/include/netinet/in.h":250:15)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":99:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":99:46)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":103:13)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:25)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:58)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:59)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:68)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:82)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:17)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:88)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":101:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":102:17)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:31)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:46)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:59)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:77)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:80)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:26)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:81)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:13)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":110:13)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:17)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:31)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:44)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:47)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:61)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":108:13)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":109:17)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":112:39)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":112:25)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":112:13)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":114:25)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":114:20)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":114:13)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":114:36)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":116:16)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":117:9)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":120:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":117:13)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":117:30)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":118:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":119:26)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":119:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":128:17)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":128:5)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":129:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":129:5)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":349:1)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":354:1)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":351:5)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":351:14)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":352:5)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":352:14)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":353:5)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":353:13)
#loc151 = loc("/usr/include/stdlib.h":575:1)
#loc152 = loc("/usr/include/stdlib.h":575:41)
#loc153 = loc("/usr/include/time.h":76:1)
#loc154 = loc("/usr/include/time.h":76:38)
#loc155 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc156 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":370:15)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":372:15)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":375:15)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":377:15)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":365:1)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":380:1)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":366:1)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":368:27)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":368:22)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":368:5)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":370:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":371:5)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":371:59)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":372:5)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":375:5)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":376:5)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":376:58)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":377:5)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":379:12)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":379:5)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":137:1)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":137:29)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":147:19)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":160:27)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":142:1)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":164:1)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":143:1)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":144:5)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":163:5)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":144:8)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":145:5)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":148:5)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":150:5)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":147:9)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":151:9)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":162:9)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":152:13)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":152:34)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:13)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":161:13)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:17)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:25)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:27)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:30)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:38)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:40)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":155:13)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":157:13)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":159:13)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":156:37)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":156:30)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":156:17)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":160:17)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":166:1)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":229:1)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":168:5)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":168:9)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":170:13)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":170:12)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":170:5)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":171:5)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":226:5)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":176:9)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":176:13)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":177:9)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":177:28)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":178:9)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":178:32)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":179:9)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":179:41)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":180:9)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":215:17)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:36)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:45)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:58)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:29)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:13)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:69)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":191:13)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":194:13)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":191:17)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":191:34)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":192:13)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":193:17)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:20)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:21)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:30)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:33)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:47)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:13)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:48)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":196:34)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":196:13)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":197:49)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":197:39)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":197:13)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":197:59)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":198:38)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":198:32)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":198:13)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":198:46)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:13)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":202:13)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:25)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:58)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:59)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:68)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:82)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:17)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:88)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":200:13)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":201:17)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:31)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:46)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:59)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:77)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:80)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:26)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:13)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:81)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:13)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":209:13)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:17)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:31)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:44)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:47)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:61)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":207:13)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":208:17)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":211:39)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":211:25)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":211:13)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":213:25)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":213:20)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":213:13)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":213:36)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":215:16)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":216:9)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":219:9)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":216:13)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":216:30)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":217:9)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":218:26)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":218:13)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":227:22)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":227:5)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":228:18)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":228:5)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":138:1)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":138:29)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":232:1)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":249:1)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":233:1)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":234:5)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":248:5)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":234:8)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":235:5)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":236:9)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":247:9)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":237:13)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":237:34)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:13)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":246:13)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:17)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:25)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:27)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:30)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:38)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:40)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":240:13)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":242:13)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":244:13)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":241:37)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":241:30)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":241:17)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":245:27)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":245:17)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":251:1)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":314:1)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":253:5)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":253:9)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":255:13)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":255:12)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":255:5)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":256:5)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":311:5)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":261:9)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":261:13)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":262:9)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":262:28)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":263:9)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":263:32)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":264:9)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":264:41)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":265:9)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":300:17)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:36)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:45)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:58)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:29)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:13)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:69)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":276:13)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":279:13)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":276:17)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":276:34)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":277:13)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":278:17)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:20)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:21)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:30)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:33)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:47)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:13)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:48)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":281:34)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":281:13)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":282:49)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":282:39)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":282:13)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":282:59)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":283:38)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":283:32)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":283:13)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":283:46)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:13)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":287:13)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:25)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:58)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:59)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:68)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:82)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:17)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:88)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":285:13)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":286:17)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:31)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:46)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:59)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:77)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:80)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:26)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:13)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:81)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:13)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":294:13)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:17)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:31)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:44)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:47)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:61)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":292:13)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":293:17)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":296:39)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":296:25)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":296:13)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":298:25)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":298:20)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":298:13)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":298:36)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":300:16)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":301:9)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":304:9)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":301:13)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":301:30)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":302:9)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":303:26)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":303:13)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":312:22)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":312:5)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":313:18)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":313:5)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":139:1)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":139:28)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":317:1)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":335:1)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":318:1)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":319:5)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":334:5)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":319:8)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":320:5)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":321:9)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":333:9)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":322:13)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":322:34)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":325:13)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":332:13)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":325:17)
#loc455 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":325:25)
#loc456 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":326:13)
#loc457 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":328:13)
#loc458 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":330:13)
#loc459 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":327:37)
#loc460 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":327:30)
#loc461 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":327:17)
#loc462 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":331:27)
#loc463 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":331:17)
#loc464 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":337:1)
#loc465 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":347:1)
#loc466 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":339:5)
#loc467 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":339:9)
#loc468 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":341:13)
#loc469 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":341:12)
#loc470 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":341:5)
#loc471 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":344:12)
#loc472 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":344:5)
#loc473 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":345:21)
#loc474 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":345:5)
#loc475 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":346:17)
#loc476 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":346:5)
#loc477 = loc(fused[#loc1, #loc2])
#loc478 = loc(fused[#loc3, #loc4])
#loc479 = loc(fused[#loc6, #loc7])
#loc480 = loc(fused[#loc8, #loc9])
#loc481 = loc(fused[#loc10, #loc11])
#loc482 = loc(fused[#loc12, #loc13])
#loc483 = loc(fused[#loc14, #loc15])
#loc484 = loc(fused[#loc16, #loc17])
#loc485 = loc(fused[#loc18, #loc19])
#loc486 = loc(fused[#loc21, #loc22])
#loc488 = loc(fused[#loc26, #loc27])
#loc489 = loc(fused[#loc29, #loc27])
#loc490 = loc(fused[#loc30, #loc31])
#loc491 = loc(fused[#loc32, #loc33])
#loc492 = loc(fused[#loc34, #loc35])
#loc493 = loc(fused[#loc36, #loc37])
#loc494 = loc(fused[#loc38, #loc39, #loc40, #loc35])
#loc495 = loc(fused[#loc45, #loc46])
#loc496 = loc(fused[#loc47, #loc48])
#loc497 = loc(fused[#loc51, #loc49])
#loc498 = loc(fused[#loc52, #loc53])
#loc499 = loc(fused[#loc54, #loc55])
#loc500 = loc(fused[#loc56, #loc57])
#loc501 = loc(fused[#loc58, #loc59])
#loc502 = loc(fused[#loc60, #loc61])
#loc503 = loc(fused[#loc62, #loc63])
#loc504 = loc(fused[#loc68, #loc69])
#loc505 = loc(fused[#loc70, #loc71])
#loc506 = loc(fused[#loc72, #loc73])
#loc507 = loc(fused[#loc74, #loc71])
#loc508 = loc(fused[#loc76, #loc77])
#loc509 = loc(fused[#loc79, #loc80])
#loc510 = loc(fused[#loc81, #loc82])
#loc511 = loc(fused[#loc85, #loc83])
#loc512 = loc(fused[#loc89, #loc90])
#loc513 = loc(fused[#loc94, #loc95])
#loc514 = loc(fused[#loc96, #loc97])
#loc515 = loc(fused[#loc99, #loc100])
#loc516 = loc(fused[#loc101, #loc102])
#loc517 = loc(fused[#loc103, #loc104])
#loc518 = loc(fused[#loc105, #loc97])
#loc519 = loc(fused[#loc109, #loc110])
#loc520 = loc(fused[#loc113, #loc114])
#loc521 = loc(fused[#loc115, #loc116])
#loc522 = loc(fused[#loc117, #loc118])
#loc523 = loc(fused[#loc120, #loc121])
#loc524 = loc(fused[#loc122, #loc116])
#loc525 = loc(fused[#loc126, #loc124])
#loc526 = loc(fused[#loc129, #loc130])
#loc527 = loc(fused[#loc132, #loc133])
#loc528 = loc(fused[#loc134, #loc135])
#loc529 = loc(fused[#loc136, #loc133])
#loc530 = loc(fused[#loc140, #loc139])
#loc531 = loc(fused[#loc143, #loc144])
#loc532 = loc(fused[#loc145, #loc146])
#loc533 = loc(fused[#loc147, #loc148])
#loc534 = loc(fused[#loc149, #loc150])
#loc535 = loc(fused[#loc151, #loc152])
#loc536 = loc(fused[#loc153, #loc154])
#loc537 = loc(fused[#loc155, #loc156])
#loc538 = loc(fused[#loc161, #loc162])
#loc541 = loc(fused[#loc172, #loc173])
#loc542 = loc(fused[#loc176, #loc177])
#loc543 = loc(fused[#loc180, #loc179])
#loc544 = loc(fused[#loc181, #loc182])
#loc545 = loc(fused[#loc185, #loc186])
#loc547 = loc(fused[#loc190, #loc191])
#loc548 = loc(fused[#loc193, #loc194, #loc195, #loc191])
#loc549 = loc(fused[#loc197, #loc198])
#loc550 = loc(fused[#loc199, #loc200])
#loc551 = loc(fused[#loc201, #loc202])
#loc552 = loc(fused[#loc203, #loc204])
#loc553 = loc(fused[#loc206, #loc208])
#loc554 = loc(fused[#loc209, #loc210, #loc211, #loc202])
#loc555 = loc(fused[#loc216, #loc217])
#loc556 = loc(fused[#loc218, #loc219])
#loc557 = loc(fused[#loc222, #loc220])
#loc558 = loc(fused[#loc223, #loc224])
#loc559 = loc(fused[#loc225, #loc226])
#loc560 = loc(fused[#loc227, #loc228])
#loc561 = loc(fused[#loc229, #loc230])
#loc562 = loc(fused[#loc231, #loc232])
#loc563 = loc(fused[#loc233, #loc234])
#loc564 = loc(fused[#loc239, #loc240])
#loc565 = loc(fused[#loc241, #loc242])
#loc566 = loc(fused[#loc243, #loc244])
#loc567 = loc(fused[#loc245, #loc242])
#loc568 = loc(fused[#loc247, #loc248])
#loc569 = loc(fused[#loc250, #loc251])
#loc570 = loc(fused[#loc252, #loc253])
#loc571 = loc(fused[#loc255, #loc254])
#loc572 = loc(fused[#loc258, #loc259])
#loc573 = loc(fused[#loc262, #loc263])
#loc574 = loc(fused[#loc264, #loc265])
#loc575 = loc(fused[#loc267, #loc268])
#loc576 = loc(fused[#loc269, #loc270])
#loc577 = loc(fused[#loc271, #loc272])
#loc578 = loc(fused[#loc273, #loc265])
#loc579 = loc(fused[#loc277, #loc278])
#loc580 = loc(fused[#loc281, #loc282])
#loc581 = loc(fused[#loc283, #loc284])
#loc582 = loc(fused[#loc285, #loc286])
#loc583 = loc(fused[#loc288, #loc289])
#loc584 = loc(fused[#loc290, #loc284])
#loc585 = loc(fused[#loc294, #loc292])
#loc586 = loc(fused[#loc297, #loc298])
#loc587 = loc(fused[#loc300, #loc301])
#loc588 = loc(fused[#loc302, #loc303])
#loc589 = loc(fused[#loc304, #loc301])
#loc590 = loc(fused[#loc308, #loc307])
#loc591 = loc(fused[#loc311, #loc312])
#loc592 = loc(fused[#loc313, #loc314])
#loc594 = loc(fused[#loc318, #loc319])
#loc595 = loc(fused[#loc321, #loc319])
#loc596 = loc(fused[#loc322, #loc323])
#loc597 = loc(fused[#loc324, #loc325])
#loc598 = loc(fused[#loc326, #loc327])
#loc599 = loc(fused[#loc328, #loc329])
#loc600 = loc(fused[#loc331, #loc333])
#loc601 = loc(fused[#loc334, #loc335, #loc336, #loc327])
#loc602 = loc(fused[#loc342, #loc343])
#loc603 = loc(fused[#loc344, #loc345])
#loc604 = loc(fused[#loc348, #loc346])
#loc605 = loc(fused[#loc349, #loc350])
#loc606 = loc(fused[#loc351, #loc352])
#loc607 = loc(fused[#loc353, #loc354])
#loc608 = loc(fused[#loc355, #loc356])
#loc609 = loc(fused[#loc357, #loc358])
#loc610 = loc(fused[#loc359, #loc360])
#loc611 = loc(fused[#loc365, #loc366])
#loc612 = loc(fused[#loc367, #loc368])
#loc613 = loc(fused[#loc369, #loc370])
#loc614 = loc(fused[#loc371, #loc368])
#loc615 = loc(fused[#loc373, #loc374])
#loc616 = loc(fused[#loc376, #loc377])
#loc617 = loc(fused[#loc378, #loc379])
#loc618 = loc(fused[#loc381, #loc380])
#loc619 = loc(fused[#loc384, #loc385])
#loc620 = loc(fused[#loc388, #loc389])
#loc621 = loc(fused[#loc390, #loc391])
#loc622 = loc(fused[#loc393, #loc394])
#loc623 = loc(fused[#loc395, #loc396])
#loc624 = loc(fused[#loc397, #loc398])
#loc625 = loc(fused[#loc399, #loc391])
#loc626 = loc(fused[#loc403, #loc404])
#loc627 = loc(fused[#loc407, #loc408])
#loc628 = loc(fused[#loc409, #loc410])
#loc629 = loc(fused[#loc411, #loc412])
#loc630 = loc(fused[#loc414, #loc415])
#loc631 = loc(fused[#loc416, #loc410])
#loc632 = loc(fused[#loc420, #loc418])
#loc633 = loc(fused[#loc423, #loc424])
#loc634 = loc(fused[#loc426, #loc427])
#loc635 = loc(fused[#loc428, #loc429])
#loc636 = loc(fused[#loc430, #loc427])
#loc637 = loc(fused[#loc434, #loc433])
#loc638 = loc(fused[#loc437, #loc438])
#loc639 = loc(fused[#loc439, #loc440])
#loc641 = loc(fused[#loc444, #loc445])
#loc642 = loc(fused[#loc447, #loc445])
#loc643 = loc(fused[#loc448, #loc449])
#loc644 = loc(fused[#loc450, #loc451])
#loc645 = loc(fused[#loc452, #loc453])
#loc646 = loc(fused[#loc454, #loc455])
#loc647 = loc(fused[#loc456, #loc457, #loc458, #loc453])
#loc648 = loc(fused[#loc464, #loc465])
#loc649 = loc(fused[#loc466, #loc467])
#loc650 = loc(fused[#loc470, #loc468])
#loc651 = loc(fused[#loc472, #loc471])
#loc652 = loc(fused[#loc474, #loc473])
