!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_putchar_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @putchar(!s32i) -> !s32i loc(#loc33)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_putchar_16_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc35)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc35)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
    cir.brcond %1 ^bb3, ^bb6 loc(#loc7)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc36)
  ^bb4:  // pred: ^bb3
    %2 = cir.const #cir.int<65> : !s32i loc(#loc9)
    %3 = cir.call @putchar(%2) : (!s32i) -> !s32i loc(#loc10)
    cir.br ^bb6 loc(#loc11)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc6)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc6)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc4)
  } loc(#loc34)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_putchar_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc38)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc14)
    cir.return loc(#loc13)
  } loc(#loc37)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"putchar failed!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc18)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc41)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc41)
  ^bb2:  // 2 preds: ^bb1, ^bb9
    %0 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %1 ^bb3, ^bb10 loc(#loc23)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc42)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc43)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.int<65> : !s32i loc(#loc27)
    %3 = cir.call @putchar(%2) : (!s32i) -> !s32i loc(#loc28)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc29)
    %6 = cir.cmp(eq, %3, %5) : !s32i, !cir.bool loc(#loc44)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc45)
  ^bb6:  // pred: ^bb5
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc18)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc18)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10 loc(#loc32)
  ^bb9:  // no predecessors
    cir.br ^bb2 loc(#loc22)
  ^bb10:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb11 loc(#loc22)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc20)
  } loc(#loc40)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_putchar_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":618:1)
#loc2 = loc("/usr/include/stdio.h":618:28)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":24:1)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":32:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":26:5)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":31:5)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":26:11)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":27:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":29:22)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":29:9)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":30:9)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":52:1)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":55:1)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":54:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":54:11)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":46:23)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":39:1)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":50:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":41:5)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":49:5)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":41:11)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":42:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":44:9)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":47:9)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":44:26)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":44:13)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":44:34)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":45:9)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":46:13)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":48:9)
#loc33 = loc(fused[#loc1, #loc2])
#loc34 = loc(fused[#loc3, #loc4])
#loc35 = loc(fused[#loc5, #loc6])
#loc36 = loc(fused[#loc8, #loc6])
#loc37 = loc(fused[#loc12, #loc13])
#loc38 = loc(fused[#loc14, #loc15])
#loc39 = loc(fused[#loc16, #loc17])
#loc40 = loc(fused[#loc19, #loc20])
#loc41 = loc(fused[#loc21, #loc22])
#loc42 = loc(fused[#loc24, #loc22])
#loc43 = loc(fused[#loc25, #loc26])
#loc44 = loc(fused[#loc28, #loc29])
#loc45 = loc(fused[#loc30, #loc26])
