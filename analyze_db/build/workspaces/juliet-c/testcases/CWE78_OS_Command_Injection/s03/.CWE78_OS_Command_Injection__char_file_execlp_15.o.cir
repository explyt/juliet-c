!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc139)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc140)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_file_execlp_15_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc141)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc142)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc11)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc12)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc144)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc17)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc20)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc23)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc24)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execlp_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_file_execlp_15_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc141)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc141)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %13 = cir.const #cir.int<6> : !s32i loc(#loc33)
      cir.switch (%13 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %14 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc153)
            %15 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc154)
            %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc41)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
            %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc41)
            cir.store %18, %14 : !u64i, !cir.ptr<!u64i> loc(#loc153)
            cir.scope {
              %19 = cir.const #cir.int<100> : !s32i loc(#loc45)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc45)
              %21 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc46)
              %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc156)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc47)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc47)
              %25 = cir.cmp(gt, %22, %24) : !u64i, !cir.bool loc(#loc157)
              cir.if %25 {
                %26 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc49)
                %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc11)
                %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc11)
                %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc12)
                %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc12)
                %31 = cir.call @fopen(%28, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc49)
                cir.store %31, %15 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc159)
                cir.scope {
                  %32 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
                  %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
                  %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc55)
                  %35 = cir.cmp(ne, %32, %34) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc161)
                  cir.if %35 {
                    cir.scope {
                      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                      %39 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                      %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc61)
                      %41 = cir.const #cir.int<100> : !s32i loc(#loc62)
                      %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc62)
                      %43 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                      %44 = cir.binop(sub, %42, %43) : !u64i loc(#loc164)
                      %45 = cir.cast(integral, %44 : !u64i), !s32i loc(#loc164)
                      %46 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
                      %47 = cir.call @fgets(%40, %45, %46) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc65)
                      %48 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
                      %49 = cir.cast(bitcast, %48 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
                      %50 = cir.cmp(eq, %47, %49) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
                      cir.if %50 {
                        %51 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc17)
                        %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc17)
                        cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc68)
                        %53 = cir.const #cir.int<0> : !s32i loc(#loc69)
                        %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc69)
                        %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
                        %56 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc71)
                        %57 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %56 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                        cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc167)
                      } loc(#loc166)
                    } loc(#loc163)
                    %36 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
                    %37 = cir.call @fclose(%36) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc74)
                  } loc(#loc162)
                } loc(#loc160)
              } loc(#loc158)
            } loc(#loc155)
          } loc(#loc152)
          cir.break loc(#loc75)
        } loc(#loc34)
        cir.case(default, []) {
          %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc20)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc20)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
          cir.break loc(#loc78)
        } loc(#loc76)
        cir.yield loc(#loc31)
      } loc(#loc31)
    } loc(#loc151)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc23)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc23)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc79)
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc24)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc24)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc81)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc82)
    cir.return loc(#loc26)
  } loc(#loc148)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execlp_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc169)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc85)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc170)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    cir.return loc(#loc84)
  } loc(#loc168)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc91)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc140)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc140)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc140)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.scope {
      %13 = cir.const #cir.int<5> : !s32i loc(#loc100)
      cir.switch (%13 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc102)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc102)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc103)
          cir.break loc(#loc104)
        } loc(#loc101)
        cir.case(default, []) {
          %14 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc106)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
          %16 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc91)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc91)
          %18 = cir.call @strcat(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
          cir.break loc(#loc108)
        } loc(#loc105)
        cir.yield loc(#loc98)
      } loc(#loc98)
    } loc(#loc175)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc109)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc109)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc110)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc110)
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc111)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc111)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc114)
    cir.return loc(#loc93)
  } loc(#loc172)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc139)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc139)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc139)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc119)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.scope {
      %13 = cir.const #cir.int<6> : !s32i loc(#loc123)
      cir.switch (%13 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %14 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc125)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          %16 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc127)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc127)
          %18 = cir.call @strcat(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
          cir.break loc(#loc128)
        } loc(#loc124)
        cir.case(default, []) {
          %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc130)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc130)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc131)
          cir.break loc(#loc132)
        } loc(#loc129)
        cir.yield loc(#loc121)
      } loc(#loc121)
    } loc(#loc179)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc133)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc133)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc134)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc134)
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc135)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc135)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc138)
    cir.return loc(#loc116)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_15.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":123:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":123:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":100:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":100:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":54:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":54:28)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdio.h":264:1)
#loc10 = loc("/usr/include/stdio.h":266:3)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":66:27)
#loc12 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":66:37)
#loc13 = loc("/usr/include/stdio.h":654:1)
#loc14 = loc("/usr/include/stdio.h":655:59)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":72:31)
#loc18 = loc("/usr/include/stdio.h":184:1)
#loc19 = loc("/usr/include/stdio.h":184:36)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":83:19)
#loc21 = loc("/usr/include/unistd.h":605:1)
#loc22 = loc("/usr/include/unistd.h":606:14)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":89:12)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":89:38)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":51:1)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":90:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":53:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":53:12)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":55:12)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":55:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":56:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":85:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":56:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":58:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":59:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":79:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":61:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":61:37)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":62:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":62:16)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":61:26)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":61:33)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":64:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":78:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":64:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":64:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":64:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":65:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":66:21)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":66:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":66:40)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":67:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":77:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":67:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":67:26)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":68:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":70:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":75:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":70:27)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":70:32)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":70:31)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":70:47)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":70:51)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":70:61)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":70:21)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":70:71)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":71:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":72:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":74:37)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":74:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":74:26)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":74:33)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":76:24)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":76:17)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":80:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":81:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":83:9)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":84:9)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":89:25)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":89:52)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":89:66)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":89:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":142:1)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":146:1)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":144:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":144:14)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":145:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":145:14)
#loc89 = loc("/usr/include/string.h":149:1)
#loc90 = loc("/usr/include/string.h":150:14)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":110:22)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":97:1)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":117:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":99:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":99:12)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":101:12)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":101:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":102:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":112:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":102:12)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":104:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":106:19)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":106:9)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":107:9)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":108:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":110:9)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":110:16)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":111:9)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":116:12)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":116:25)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":116:38)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":116:52)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":116:66)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":116:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":120:1)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":140:1)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":122:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":122:12)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":124:12)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":124:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":125:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":135:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":125:12)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":127:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":129:9)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":129:16)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":129:22)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":130:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":131:5)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":133:19)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":133:9)
#loc132 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":134:9)
#loc133 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":139:12)
#loc134 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":139:25)
#loc135 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":139:38)
#loc136 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":139:52)
#loc137 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":139:66)
#loc138 = loc("CWE78_OS_Command_Injection__char_file_execlp_15.c":139:5)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc13, #loc14])
#loc145 = loc(fused[#loc15, #loc16])
#loc146 = loc(fused[#loc18, #loc19])
#loc147 = loc(fused[#loc21, #loc22])
#loc148 = loc(fused[#loc25, #loc26])
#loc149 = loc(fused[#loc27, #loc28])
#loc150 = loc(fused[#loc30, #loc29])
#loc151 = loc(fused[#loc31, #loc32])
#loc152 = loc(fused[#loc35, #loc36])
#loc153 = loc(fused[#loc37, #loc38])
#loc154 = loc(fused[#loc39, #loc40])
#loc155 = loc(fused[#loc43, #loc44])
#loc156 = loc(fused[#loc45, #loc46])
#loc157 = loc(fused[#loc45, #loc47])
#loc158 = loc(fused[#loc48, #loc44])
#loc159 = loc(fused[#loc50, #loc51])
#loc160 = loc(fused[#loc52, #loc53])
#loc161 = loc(fused[#loc54, #loc55])
#loc162 = loc(fused[#loc56, #loc53])
#loc163 = loc(fused[#loc57, #loc58])
#loc164 = loc(fused[#loc62, #loc63])
#loc165 = loc(fused[#loc65, #loc66])
#loc166 = loc(fused[#loc67, #loc58])
#loc167 = loc(fused[#loc70, #loc69])
#loc168 = loc(fused[#loc83, #loc84])
#loc169 = loc(fused[#loc85, #loc86])
#loc170 = loc(fused[#loc87, #loc88])
#loc171 = loc(fused[#loc89, #loc90])
#loc172 = loc(fused[#loc92, #loc93])
#loc173 = loc(fused[#loc94, #loc95])
#loc174 = loc(fused[#loc97, #loc96])
#loc175 = loc(fused[#loc98, #loc99])
#loc176 = loc(fused[#loc115, #loc116])
#loc177 = loc(fused[#loc117, #loc118])
#loc178 = loc(fused[#loc120, #loc119])
#loc179 = loc(fused[#loc121, #loc122])
