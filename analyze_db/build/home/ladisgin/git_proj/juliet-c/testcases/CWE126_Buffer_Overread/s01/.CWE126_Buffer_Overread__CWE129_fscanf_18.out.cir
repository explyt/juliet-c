!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":121:10)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":121:14)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":121:20)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":121:32)
#true = #cir.bool<true> : !cir.bool
#loc155 = loc(fused[#loc55, #loc56])
#loc156 = loc(fused[#loc57, #loc58])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc136)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc142)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc18)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.goto "source" loc(#loc144)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc22)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc23)
    cir.goto "sink" loc(#loc145)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc27)
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc142)
    cir.store %10, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc142)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc147)
      cir.if %13 {
        %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
        %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc36)
        %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc36)
        %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc36)
        cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc37)
      } else {
        %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc10)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc38)
      } loc(#loc148)
    } loc(#loc146)
    cir.return loc(#loc12)
  } loc(#loc140)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc40)
  } loc(#loc149)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc152)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc62)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_fscanf_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE126_Buffer_Overread__CWE129_fscanf_18_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_fscanf_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE126_Buffer_Overread__CWE129_fscanf_18_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %17 : !s32i loc(#loc159)
  } loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc73)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc162)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc81)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.goto "source" loc(#loc164)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc85)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc86)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc87)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc88)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc88)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc86)
    cir.goto "sink" loc(#loc165)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc91)
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc162)
    cir.store %10, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc162)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc95)
      %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc167)
      %14 = cir.ternary(%13, true {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
        %16 = cir.const #cir.int<10> : !s32i loc(#loc98)
        %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc168)
        %18 = cir.ternary(%17, true {
          %19 = cir.const #true loc(#loc96)
          cir.yield %19 : !cir.bool loc(#loc96)
        }, false {
          %19 = cir.const #false loc(#loc96)
          cir.yield %19 : !cir.bool loc(#loc96)
        }) : (!cir.bool) -> !cir.bool loc(#loc96)
        cir.yield %18 : !cir.bool loc(#loc96)
      }, false {
        %15 = cir.const #false loc(#loc96)
        cir.yield %15 : !cir.bool loc(#loc96)
      }) : (!cir.bool) -> !cir.bool loc(#loc96)
      cir.if %14 {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc104)
        %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc104)
        %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc104)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc105)
      } else {
        %15 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc73)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc73)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc106)
      } loc(#loc169)
    } loc(#loc166)
    cir.return loc(#loc75)
  } loc(#loc160)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc172)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc114)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.goto "source" loc(#loc174)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc118)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc119)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    cir.goto "sink" loc(#loc176)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc123)
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc172)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc172)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc127)
      %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc178)
      cir.if %8 {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
        %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc132)
        %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc132)
        %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc133)
      } else {
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc134)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc134)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc135)
      } loc(#loc179)
    } loc(#loc177)
    cir.return loc(#loc108)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":30:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":43:23)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":22:1)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":46:1)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":24:5)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":24:9)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":34:9)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":34:30)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":26:13)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":26:12)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":26:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":27:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":27:10)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":28:1)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":30:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":30:12)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":31:5)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":31:10)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":32:1)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":37:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":44:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":37:13)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":37:21)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":38:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":40:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":42:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":39:33)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":39:26)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":39:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":43:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":106:1)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":110:1)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":108:5)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":108:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":109:5)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":109:13)
#loc45 = loc("/usr/include/stdlib.h":575:1)
#loc46 = loc("/usr/include/stdlib.h":575:41)
#loc47 = loc("/usr/include/time.h":76:1)
#loc48 = loc("/usr/include/time.h":76:38)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":126:15)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":128:15)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":131:15)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":133:15)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":121:1)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":136:1)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":122:1)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":124:27)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":124:22)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":124:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":126:5)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":127:5)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":127:51)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":128:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":131:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":132:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":132:50)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":133:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":135:12)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":135:5)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":73:23)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":53:1)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":76:1)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":55:5)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":55:9)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":65:9)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":65:30)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":57:13)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":57:12)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":57:5)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":58:5)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":58:10)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":59:1)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":61:5)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":61:12)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":61:19)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":62:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":62:10)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":63:1)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:9)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":74:9)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:21)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:23)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:26)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:34)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:36)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":68:9)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":70:9)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":72:9)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":69:33)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":69:26)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":69:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":73:13)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":79:1)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":104:1)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":81:5)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":81:9)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":92:9)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":92:30)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":83:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":83:12)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":83:5)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":84:5)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":84:10)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":85:1)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":88:12)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":88:5)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":89:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":89:10)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":90:1)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":95:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":102:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":95:13)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":95:21)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":96:9)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":98:9)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":100:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":97:33)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":97:26)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":97:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":101:23)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":101:13)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc3, #loc4])
#loc138 = loc(fused[#loc6, #loc7])
#loc139 = loc(fused[#loc8, #loc9])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc13, #loc14])
#loc142 = loc(fused[#loc15, #loc16])
#loc143 = loc(fused[#loc19, #loc17])
#loc144 = loc(fused[#loc20, #loc21])
#loc145 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc28, #loc29])
#loc147 = loc(fused[#loc30, #loc31])
#loc148 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc149 = loc(fused[#loc39, #loc40])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc43, #loc44])
#loc152 = loc(fused[#loc45, #loc46])
#loc153 = loc(fused[#loc47, #loc48])
#loc154 = loc(fused[#loc53, #loc54])
#loc157 = loc(fused[#loc64, #loc65])
#loc158 = loc(fused[#loc68, #loc69])
#loc159 = loc(fused[#loc72, #loc71])
#loc160 = loc(fused[#loc74, #loc75])
#loc161 = loc(fused[#loc76, #loc77])
#loc162 = loc(fused[#loc78, #loc79])
#loc163 = loc(fused[#loc82, #loc80])
#loc164 = loc(fused[#loc83, #loc84])
#loc165 = loc(fused[#loc89, #loc90])
#loc166 = loc(fused[#loc92, #loc93])
#loc167 = loc(fused[#loc94, #loc95])
#loc168 = loc(fused[#loc97, #loc99])
#loc169 = loc(fused[#loc100, #loc101, #loc102, #loc93])
#loc170 = loc(fused[#loc107, #loc108])
#loc171 = loc(fused[#loc109, #loc110])
#loc172 = loc(fused[#loc111, #loc112])
#loc173 = loc(fused[#loc115, #loc113])
#loc174 = loc(fused[#loc116, #loc117])
#loc175 = loc(fused[#loc120, #loc119])
#loc176 = loc(fused[#loc121, #loc122])
#loc177 = loc(fused[#loc124, #loc125])
#loc178 = loc(fused[#loc126, #loc127])
#loc179 = loc(fused[#loc128, #loc129, #loc130, #loc125])
