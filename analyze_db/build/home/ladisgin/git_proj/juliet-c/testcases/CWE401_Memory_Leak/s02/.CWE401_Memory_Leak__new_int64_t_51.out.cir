!s64i = !cir.int<s, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":29:14)
#loc4 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":29:24)
#loc8 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":40:18)
#loc9 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":40:28)
#loc15 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":47:18)
#loc16 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":47:28)
#loc21 = loc(fused[#loc3, #loc4])
#loc23 = loc(fused[#loc8, #loc9])
#loc26 = loc(fused[#loc15, #loc16])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_51b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func @_ZN34CWE401_Memory_Leak__new_int64_t_517badSinkEPl(%arg0: !cir.ptr<!s64i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc21)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc5)
    cir.return loc(#loc2)
  } loc(#loc20)
  cir.func @_ZN34CWE401_Memory_Leak__new_int64_t_5111goodG2BSinkEPl(%arg0: !cir.ptr<!s64i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc23)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc10)
    cir.return loc(#loc7)
  } loc(#loc22)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc24)
  cir.func @_ZN34CWE401_Memory_Leak__new_int64_t_5111goodB2GSinkEPl(%arg0: !cir.ptr<!s64i> loc(fused[#loc15, #loc16])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc26)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc17)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc18)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc18)
    cir.call @_ZdlPv(%2) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc19)
    cir.return loc(#loc14)
  } loc(#loc25)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_51b.cpp":0:0)
#loc1 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":29:1)
#loc2 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":33:1)
#loc5 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":30:1)
#loc6 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":40:1)
#loc7 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":44:1)
#loc10 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":41:1)
#loc11 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc12 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc13 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":47:1)
#loc14 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":51:1)
#loc17 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":48:1)
#loc18 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":50:12)
#loc19 = loc("CWE401_Memory_Leak__new_int64_t_51b.cpp":47:6)
#loc20 = loc(fused[#loc1, #loc2])
#loc22 = loc(fused[#loc6, #loc7])
#loc24 = loc(fused[#loc11, #loc12])
#loc25 = loc(fused[#loc13, #loc14])
