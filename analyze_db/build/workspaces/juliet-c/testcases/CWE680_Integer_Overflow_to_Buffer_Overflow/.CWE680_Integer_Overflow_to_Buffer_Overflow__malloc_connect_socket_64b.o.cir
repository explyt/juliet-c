!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":43:84)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":43:91)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":70:88)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":70:95)
#loc116 = loc(fused[#loc11, #loc12])
#loc136 = loc(fused[#loc62, #loc63])
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc112)
  cir.func private @printIntLine(!s32i) loc(#loc113)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc114)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc117)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc17)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc14)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc117)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc18)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc120)
      %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc121)
      %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc26)
      %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc122)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc123)
      %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc124)
      cir.store %15, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc125)
      cir.scope {
        %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc35)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc127)
        cir.if %26 {
          %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc39)
          cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
        } loc(#loc128)
      } loc(#loc126)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc42)
        cir.store %24, %7 : !u64i, !cir.ptr<!u64i> loc(#loc130)
        cir.for : cond {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc44)
          %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc45)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc45)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc131)
          cir.condition(%28) loc(#loc46)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc48)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
            %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc50)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc51)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc133)
          } loc(#loc132)
          cir.yield loc(#loc41)
        } step {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc52)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc53)
          cir.store %26, %7 : !u64i, !cir.ptr<!u64i> loc(#loc134)
          cir.yield loc(#loc129)
        } loc(#loc129)
      } loc(#loc129)
      %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc55)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc56)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc54)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc57)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc58)
      %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc59)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc58)
    } loc(#loc119)
    cir.return loc(#loc10)
  } loc(#loc115)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc62, #loc63])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc138)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc68)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc65)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc65)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc137)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc140)
      %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc141)
      %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc77)
      %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc78)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc78)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc142)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc143)
      %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc144)
      cir.store %15, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
      cir.scope {
        %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc86)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc147)
        cir.if %26 {
          %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc88)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc89)
          %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc90)
          cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc88)
        } loc(#loc148)
      } loc(#loc146)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc93)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc93)
        cir.store %24, %7 : !u64i, !cir.ptr<!u64i> loc(#loc150)
        cir.for : cond {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc95)
          %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc96)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc151)
          cir.condition(%28) loc(#loc97)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc99)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
            %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc101)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc102)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc153)
          } loc(#loc152)
          cir.yield loc(#loc92)
        } step {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc103)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc104)
          cir.store %26, %7 : !u64i, !cir.ptr<!u64i> loc(#loc154)
          cir.yield loc(#loc149)
        } loc(#loc149)
      } loc(#loc149)
      %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc106)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc107)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc105)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc108)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc109)
      %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc110)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
    } loc(#loc139)
    cir.return loc(#loc61)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":43:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":63:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":46:5)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":46:28)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":48:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":48:25)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":44:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":48:18)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":48:17)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":49:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":62:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":50:9)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":50:16)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":51:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":51:14)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":54:28)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":54:35)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":54:42)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":54:52)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":54:53)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":54:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":55:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":55:43)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":55:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":55:27)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":55:33)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":55:34)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":55:40)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":55:39)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":56:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":59:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":56:18)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":56:14)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":56:21)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":56:33)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":56:23)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":57:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":58:29)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":58:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":58:24)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":58:25)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":56:40)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":56:39)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":60:22)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":60:33)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":60:34)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":60:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":61:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":61:14)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":70:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":90:1)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":73:5)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":73:28)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":75:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":75:25)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":71:1)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":75:18)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":75:17)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":76:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":89:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":77:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":77:16)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":78:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":78:14)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":81:28)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":81:35)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":81:42)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":81:52)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":81:53)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":81:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":82:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":82:43)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":82:13)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":82:27)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":82:33)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":82:34)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":82:40)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":82:39)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":83:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":86:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":83:18)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":83:14)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":83:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":83:33)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":83:23)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":84:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":85:29)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":85:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":85:24)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":85:25)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":83:40)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":83:39)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":87:22)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":87:33)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":87:34)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":87:9)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":88:9)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_64b.c":88:14)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc117 = loc(fused[#loc13, #loc14])
#loc118 = loc(fused[#loc15, #loc16])
#loc119 = loc(fused[#loc20, #loc21])
#loc120 = loc(fused[#loc22, #loc23])
#loc121 = loc(fused[#loc24, #loc25])
#loc122 = loc(fused[#loc28, #loc29])
#loc123 = loc(fused[#loc27, #loc29])
#loc124 = loc(fused[#loc26, #loc30])
#loc125 = loc(fused[#loc31, #loc30])
#loc126 = loc(fused[#loc32, #loc33])
#loc127 = loc(fused[#loc34, #loc35])
#loc128 = loc(fused[#loc36, #loc33])
#loc129 = loc(fused[#loc40, #loc41])
#loc130 = loc(fused[#loc43, #loc42])
#loc131 = loc(fused[#loc44, #loc45])
#loc132 = loc(fused[#loc47, #loc41])
#loc133 = loc(fused[#loc49, #loc48])
#loc134 = loc(fused[#loc53, #loc52])
#loc135 = loc(fused[#loc60, #loc61])
#loc137 = loc(fused[#loc64, #loc65])
#loc138 = loc(fused[#loc66, #loc67])
#loc139 = loc(fused[#loc71, #loc72])
#loc140 = loc(fused[#loc73, #loc74])
#loc141 = loc(fused[#loc75, #loc76])
#loc142 = loc(fused[#loc79, #loc80])
#loc143 = loc(fused[#loc78, #loc80])
#loc144 = loc(fused[#loc77, #loc81])
#loc145 = loc(fused[#loc82, #loc81])
#loc146 = loc(fused[#loc83, #loc84])
#loc147 = loc(fused[#loc85, #loc86])
#loc148 = loc(fused[#loc87, #loc84])
#loc149 = loc(fused[#loc91, #loc92])
#loc150 = loc(fused[#loc94, #loc93])
#loc151 = loc(fused[#loc95, #loc96])
#loc152 = loc(fused[#loc98, #loc92])
#loc153 = loc(fused[#loc100, #loc99])
#loc154 = loc(fused[#loc104, #loc103])
