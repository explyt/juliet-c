!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc185)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc186)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_char_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc18)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc192)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc193)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc194)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
        cir.scope {
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
          %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc197)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc27)
          cir.if %18 {
            %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc30)
            %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc31)
            cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
          } loc(#loc198)
        } loc(#loc196)
        %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc32)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
        cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
      } loc(#loc191)
    } loc(#loc190)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc36)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc38)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc38)
      } loc(#loc200)
    } loc(#loc199)
    cir.return loc(#loc8)
  } loc(#loc187)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_char_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc41)
  } loc(#loc201)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc206)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc57)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc61)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc63)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc64)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc64)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc212)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc213)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc63)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc214)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
        cir.scope {
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc72)
          %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc217)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc73)
          cir.if %18 {
            %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc75)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc76)
            %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc77)
            cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
          } loc(#loc218)
        } loc(#loc216)
        %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc78)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
        cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc78)
      } loc(#loc211)
    } loc(#loc210)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc82)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc82)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      } else {
      } loc(#loc220)
    } loc(#loc219)
    cir.return loc(#loc54)
  } loc(#loc207)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc91)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc95)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc95)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc97)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc98)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc98)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc226)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc227)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc228)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
        cir.scope {
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
          %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc231)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc107)
          cir.if %18 {
            %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc109)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc110)
            %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc111)
            cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
          } loc(#loc232)
        } loc(#loc230)
        %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc112)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
        cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
      } loc(#loc225)
    } loc(#loc224)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc116)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc116)
      cir.if %3 {
      } loc(#loc234)
    } loc(#loc233)
    cir.return loc(#loc88)
  } loc(#loc221)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc236)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc122)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc126)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc126)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc130)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc130)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc131)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc132)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc133)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc133)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc240)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc241)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc242)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
          %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !s32i loc(#loc245)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc142)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc144)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc145)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc146)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc144)
          } loc(#loc246)
        } loc(#loc244)
      } loc(#loc239)
    } loc(#loc238)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc149)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc149)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc151)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
      } loc(#loc248)
    } loc(#loc247)
    cir.return loc(#loc119)
  } loc(#loc235)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc250)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc157)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc161)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc161)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc163)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc164)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc164)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc254)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc255)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc163)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc256)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
          %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !s32i loc(#loc259)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc173)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc177)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
          } loc(#loc260)
        } loc(#loc258)
      } loc(#loc253)
    } loc(#loc252)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc180)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc180)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc182)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc182)
      } loc(#loc262)
    } loc(#loc261)
    cir.return loc(#loc154)
  } loc(#loc249)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_char_04.c":30:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_char_04.c":47:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_char_04.c":32:5)
#loc10 = loc("CWE415_Double_Free__malloc_free_char_04.c":32:12)
#loc11 = loc("CWE415_Double_Free__malloc_free_char_04.c":34:12)
#loc12 = loc("CWE415_Double_Free__malloc_free_char_04.c":34:5)
#loc13 = loc("CWE415_Double_Free__malloc_free_char_04.c":35:5)
#loc14 = loc("CWE415_Double_Free__malloc_free_char_04.c":41:5)
#loc15 = loc("CWE415_Double_Free__malloc_free_char_04.c":35:8)
#loc16 = loc("CWE415_Double_Free__malloc_free_char_04.c":36:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_char_04.c":37:24)
#loc18 = loc("CWE415_Double_Free__malloc_free_char_04.c":37:31)
#loc19 = loc("CWE415_Double_Free__malloc_free_char_04.c":37:35)
#loc20 = loc("CWE415_Double_Free__malloc_free_char_04.c":37:46)
#loc21 = loc("CWE415_Double_Free__malloc_free_char_04.c":37:47)
#loc22 = loc("CWE415_Double_Free__malloc_free_char_04.c":37:9)
#loc23 = loc("CWE415_Double_Free__malloc_free_char_04.c":38:9)
#loc24 = loc("CWE415_Double_Free__malloc_free_char_04.c":38:37)
#loc25 = loc("CWE415_Double_Free__malloc_free_char_04.c":38:13)
#loc26 = loc("CWE415_Double_Free__malloc_free_char_04.c":38:21)
#loc27 = loc("CWE415_Double_Free__malloc_free_char_04.c":38:18)
#loc28 = loc("CWE415_Double_Free__malloc_free_char_04.c":38:27)
#loc29 = loc("CWE415_Double_Free__malloc_free_char_04.c":38:28)
#loc30 = loc("CWE415_Double_Free__malloc_free_char_04.c":38:34)
#loc31 = loc("CWE415_Double_Free__malloc_free_char_04.c":38:33)
#loc32 = loc("CWE415_Double_Free__malloc_free_char_04.c":40:9)
#loc33 = loc("CWE415_Double_Free__malloc_free_char_04.c":40:14)
#loc34 = loc("CWE415_Double_Free__malloc_free_char_04.c":42:5)
#loc35 = loc("CWE415_Double_Free__malloc_free_char_04.c":46:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_char_04.c":42:8)
#loc37 = loc("CWE415_Double_Free__malloc_free_char_04.c":43:5)
#loc38 = loc("CWE415_Double_Free__malloc_free_char_04.c":45:9)
#loc39 = loc("CWE415_Double_Free__malloc_free_char_04.c":45:14)
#loc40 = loc("CWE415_Double_Free__malloc_free_char_04.c":143:1)
#loc41 = loc("CWE415_Double_Free__malloc_free_char_04.c":149:1)
#loc42 = loc("CWE415_Double_Free__malloc_free_char_04.c":145:5)
#loc43 = loc("CWE415_Double_Free__malloc_free_char_04.c":145:14)
#loc44 = loc("CWE415_Double_Free__malloc_free_char_04.c":146:5)
#loc45 = loc("CWE415_Double_Free__malloc_free_char_04.c":146:14)
#loc46 = loc("CWE415_Double_Free__malloc_free_char_04.c":147:5)
#loc47 = loc("CWE415_Double_Free__malloc_free_char_04.c":147:14)
#loc48 = loc("CWE415_Double_Free__malloc_free_char_04.c":148:5)
#loc49 = loc("CWE415_Double_Free__malloc_free_char_04.c":148:14)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE415_Double_Free__malloc_free_char_04.c":69:19)
#loc53 = loc("CWE415_Double_Free__malloc_free_char_04.c":54:1)
#loc54 = loc("CWE415_Double_Free__malloc_free_char_04.c":77:1)
#loc55 = loc("CWE415_Double_Free__malloc_free_char_04.c":56:5)
#loc56 = loc("CWE415_Double_Free__malloc_free_char_04.c":56:12)
#loc57 = loc("CWE415_Double_Free__malloc_free_char_04.c":58:12)
#loc58 = loc("CWE415_Double_Free__malloc_free_char_04.c":58:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_char_04.c":59:5)
#loc60 = loc("CWE415_Double_Free__malloc_free_char_04.c":65:5)
#loc61 = loc("CWE415_Double_Free__malloc_free_char_04.c":59:8)
#loc62 = loc("CWE415_Double_Free__malloc_free_char_04.c":60:5)
#loc63 = loc("CWE415_Double_Free__malloc_free_char_04.c":61:24)
#loc64 = loc("CWE415_Double_Free__malloc_free_char_04.c":61:31)
#loc65 = loc("CWE415_Double_Free__malloc_free_char_04.c":61:35)
#loc66 = loc("CWE415_Double_Free__malloc_free_char_04.c":61:46)
#loc67 = loc("CWE415_Double_Free__malloc_free_char_04.c":61:47)
#loc68 = loc("CWE415_Double_Free__malloc_free_char_04.c":61:9)
#loc69 = loc("CWE415_Double_Free__malloc_free_char_04.c":62:9)
#loc70 = loc("CWE415_Double_Free__malloc_free_char_04.c":62:37)
#loc71 = loc("CWE415_Double_Free__malloc_free_char_04.c":62:13)
#loc72 = loc("CWE415_Double_Free__malloc_free_char_04.c":62:21)
#loc73 = loc("CWE415_Double_Free__malloc_free_char_04.c":62:18)
#loc74 = loc("CWE415_Double_Free__malloc_free_char_04.c":62:27)
#loc75 = loc("CWE415_Double_Free__malloc_free_char_04.c":62:28)
#loc76 = loc("CWE415_Double_Free__malloc_free_char_04.c":62:34)
#loc77 = loc("CWE415_Double_Free__malloc_free_char_04.c":62:33)
#loc78 = loc("CWE415_Double_Free__malloc_free_char_04.c":64:9)
#loc79 = loc("CWE415_Double_Free__malloc_free_char_04.c":64:14)
#loc80 = loc("CWE415_Double_Free__malloc_free_char_04.c":66:5)
#loc81 = loc("CWE415_Double_Free__malloc_free_char_04.c":76:5)
#loc82 = loc("CWE415_Double_Free__malloc_free_char_04.c":66:8)
#loc83 = loc("CWE415_Double_Free__malloc_free_char_04.c":67:5)
#loc84 = loc("CWE415_Double_Free__malloc_free_char_04.c":70:5)
#loc85 = loc("CWE415_Double_Free__malloc_free_char_04.c":72:5)
#loc86 = loc("CWE415_Double_Free__malloc_free_char_04.c":69:9)
#loc87 = loc("CWE415_Double_Free__malloc_free_char_04.c":80:1)
#loc88 = loc("CWE415_Double_Free__malloc_free_char_04.c":98:1)
#loc89 = loc("CWE415_Double_Free__malloc_free_char_04.c":82:5)
#loc90 = loc("CWE415_Double_Free__malloc_free_char_04.c":82:12)
#loc91 = loc("CWE415_Double_Free__malloc_free_char_04.c":84:12)
#loc92 = loc("CWE415_Double_Free__malloc_free_char_04.c":84:5)
#loc93 = loc("CWE415_Double_Free__malloc_free_char_04.c":85:5)
#loc94 = loc("CWE415_Double_Free__malloc_free_char_04.c":91:5)
#loc95 = loc("CWE415_Double_Free__malloc_free_char_04.c":85:8)
#loc96 = loc("CWE415_Double_Free__malloc_free_char_04.c":86:5)
#loc97 = loc("CWE415_Double_Free__malloc_free_char_04.c":87:24)
#loc98 = loc("CWE415_Double_Free__malloc_free_char_04.c":87:31)
#loc99 = loc("CWE415_Double_Free__malloc_free_char_04.c":87:35)
#loc100 = loc("CWE415_Double_Free__malloc_free_char_04.c":87:46)
#loc101 = loc("CWE415_Double_Free__malloc_free_char_04.c":87:47)
#loc102 = loc("CWE415_Double_Free__malloc_free_char_04.c":87:9)
#loc103 = loc("CWE415_Double_Free__malloc_free_char_04.c":88:9)
#loc104 = loc("CWE415_Double_Free__malloc_free_char_04.c":88:37)
#loc105 = loc("CWE415_Double_Free__malloc_free_char_04.c":88:13)
#loc106 = loc("CWE415_Double_Free__malloc_free_char_04.c":88:21)
#loc107 = loc("CWE415_Double_Free__malloc_free_char_04.c":88:18)
#loc108 = loc("CWE415_Double_Free__malloc_free_char_04.c":88:27)
#loc109 = loc("CWE415_Double_Free__malloc_free_char_04.c":88:28)
#loc110 = loc("CWE415_Double_Free__malloc_free_char_04.c":88:34)
#loc111 = loc("CWE415_Double_Free__malloc_free_char_04.c":88:33)
#loc112 = loc("CWE415_Double_Free__malloc_free_char_04.c":90:9)
#loc113 = loc("CWE415_Double_Free__malloc_free_char_04.c":90:14)
#loc114 = loc("CWE415_Double_Free__malloc_free_char_04.c":92:5)
#loc115 = loc("CWE415_Double_Free__malloc_free_char_04.c":97:5)
#loc116 = loc("CWE415_Double_Free__malloc_free_char_04.c":92:8)
#loc117 = loc("CWE415_Double_Free__malloc_free_char_04.c":93:5)
#loc118 = loc("CWE415_Double_Free__malloc_free_char_04.c":101:1)
#loc119 = loc("CWE415_Double_Free__malloc_free_char_04.c":122:1)
#loc120 = loc("CWE415_Double_Free__malloc_free_char_04.c":103:5)
#loc121 = loc("CWE415_Double_Free__malloc_free_char_04.c":103:12)
#loc122 = loc("CWE415_Double_Free__malloc_free_char_04.c":105:12)
#loc123 = loc("CWE415_Double_Free__malloc_free_char_04.c":105:5)
#loc124 = loc("CWE415_Double_Free__malloc_free_char_04.c":106:5)
#loc125 = loc("CWE415_Double_Free__malloc_free_char_04.c":116:5)
#loc126 = loc("CWE415_Double_Free__malloc_free_char_04.c":106:8)
#loc127 = loc("CWE415_Double_Free__malloc_free_char_04.c":107:5)
#loc128 = loc("CWE415_Double_Free__malloc_free_char_04.c":110:5)
#loc129 = loc("CWE415_Double_Free__malloc_free_char_04.c":112:5)
#loc130 = loc("CWE415_Double_Free__malloc_free_char_04.c":109:19)
#loc131 = loc("CWE415_Double_Free__malloc_free_char_04.c":109:9)
#loc132 = loc("CWE415_Double_Free__malloc_free_char_04.c":113:24)
#loc133 = loc("CWE415_Double_Free__malloc_free_char_04.c":113:31)
#loc134 = loc("CWE415_Double_Free__malloc_free_char_04.c":113:35)
#loc135 = loc("CWE415_Double_Free__malloc_free_char_04.c":113:46)
#loc136 = loc("CWE415_Double_Free__malloc_free_char_04.c":113:47)
#loc137 = loc("CWE415_Double_Free__malloc_free_char_04.c":113:9)
#loc138 = loc("CWE415_Double_Free__malloc_free_char_04.c":114:9)
#loc139 = loc("CWE415_Double_Free__malloc_free_char_04.c":114:37)
#loc140 = loc("CWE415_Double_Free__malloc_free_char_04.c":114:13)
#loc141 = loc("CWE415_Double_Free__malloc_free_char_04.c":114:21)
#loc142 = loc("CWE415_Double_Free__malloc_free_char_04.c":114:18)
#loc143 = loc("CWE415_Double_Free__malloc_free_char_04.c":114:27)
#loc144 = loc("CWE415_Double_Free__malloc_free_char_04.c":114:28)
#loc145 = loc("CWE415_Double_Free__malloc_free_char_04.c":114:34)
#loc146 = loc("CWE415_Double_Free__malloc_free_char_04.c":114:33)
#loc147 = loc("CWE415_Double_Free__malloc_free_char_04.c":117:5)
#loc148 = loc("CWE415_Double_Free__malloc_free_char_04.c":121:5)
#loc149 = loc("CWE415_Double_Free__malloc_free_char_04.c":117:8)
#loc150 = loc("CWE415_Double_Free__malloc_free_char_04.c":118:5)
#loc151 = loc("CWE415_Double_Free__malloc_free_char_04.c":120:9)
#loc152 = loc("CWE415_Double_Free__malloc_free_char_04.c":120:14)
#loc153 = loc("CWE415_Double_Free__malloc_free_char_04.c":125:1)
#loc154 = loc("CWE415_Double_Free__malloc_free_char_04.c":141:1)
#loc155 = loc("CWE415_Double_Free__malloc_free_char_04.c":127:5)
#loc156 = loc("CWE415_Double_Free__malloc_free_char_04.c":127:12)
#loc157 = loc("CWE415_Double_Free__malloc_free_char_04.c":129:12)
#loc158 = loc("CWE415_Double_Free__malloc_free_char_04.c":129:5)
#loc159 = loc("CWE415_Double_Free__malloc_free_char_04.c":130:5)
#loc160 = loc("CWE415_Double_Free__malloc_free_char_04.c":135:5)
#loc161 = loc("CWE415_Double_Free__malloc_free_char_04.c":130:8)
#loc162 = loc("CWE415_Double_Free__malloc_free_char_04.c":131:5)
#loc163 = loc("CWE415_Double_Free__malloc_free_char_04.c":132:24)
#loc164 = loc("CWE415_Double_Free__malloc_free_char_04.c":132:31)
#loc165 = loc("CWE415_Double_Free__malloc_free_char_04.c":132:35)
#loc166 = loc("CWE415_Double_Free__malloc_free_char_04.c":132:46)
#loc167 = loc("CWE415_Double_Free__malloc_free_char_04.c":132:47)
#loc168 = loc("CWE415_Double_Free__malloc_free_char_04.c":132:9)
#loc169 = loc("CWE415_Double_Free__malloc_free_char_04.c":133:9)
#loc170 = loc("CWE415_Double_Free__malloc_free_char_04.c":133:37)
#loc171 = loc("CWE415_Double_Free__malloc_free_char_04.c":133:13)
#loc172 = loc("CWE415_Double_Free__malloc_free_char_04.c":133:21)
#loc173 = loc("CWE415_Double_Free__malloc_free_char_04.c":133:18)
#loc174 = loc("CWE415_Double_Free__malloc_free_char_04.c":133:27)
#loc175 = loc("CWE415_Double_Free__malloc_free_char_04.c":133:28)
#loc176 = loc("CWE415_Double_Free__malloc_free_char_04.c":133:34)
#loc177 = loc("CWE415_Double_Free__malloc_free_char_04.c":133:33)
#loc178 = loc("CWE415_Double_Free__malloc_free_char_04.c":136:5)
#loc179 = loc("CWE415_Double_Free__malloc_free_char_04.c":140:5)
#loc180 = loc("CWE415_Double_Free__malloc_free_char_04.c":136:8)
#loc181 = loc("CWE415_Double_Free__malloc_free_char_04.c":137:5)
#loc182 = loc("CWE415_Double_Free__malloc_free_char_04.c":139:9)
#loc183 = loc("CWE415_Double_Free__malloc_free_char_04.c":139:14)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc187 = loc(fused[#loc7, #loc8])
#loc188 = loc(fused[#loc9, #loc10])
#loc189 = loc(fused[#loc12, #loc11])
#loc190 = loc(fused[#loc13, #loc14])
#loc191 = loc(fused[#loc16, #loc14])
#loc192 = loc(fused[#loc19, #loc20])
#loc193 = loc(fused[#loc18, #loc20])
#loc194 = loc(fused[#loc17, #loc21])
#loc195 = loc(fused[#loc22, #loc21])
#loc196 = loc(fused[#loc23, #loc24])
#loc197 = loc(fused[#loc25, #loc26])
#loc198 = loc(fused[#loc28, #loc24])
#loc199 = loc(fused[#loc34, #loc35])
#loc200 = loc(fused[#loc37, #loc35])
#loc201 = loc(fused[#loc40, #loc41])
#loc202 = loc(fused[#loc42, #loc43])
#loc203 = loc(fused[#loc44, #loc45])
#loc204 = loc(fused[#loc46, #loc47])
#loc205 = loc(fused[#loc48, #loc49])
#loc206 = loc(fused[#loc50, #loc51])
#loc207 = loc(fused[#loc53, #loc54])
#loc208 = loc(fused[#loc55, #loc56])
#loc209 = loc(fused[#loc58, #loc57])
#loc210 = loc(fused[#loc59, #loc60])
#loc211 = loc(fused[#loc62, #loc60])
#loc212 = loc(fused[#loc65, #loc66])
#loc213 = loc(fused[#loc64, #loc66])
#loc214 = loc(fused[#loc63, #loc67])
#loc215 = loc(fused[#loc68, #loc67])
#loc216 = loc(fused[#loc69, #loc70])
#loc217 = loc(fused[#loc71, #loc72])
#loc218 = loc(fused[#loc74, #loc70])
#loc219 = loc(fused[#loc80, #loc81])
#loc220 = loc(fused[#loc83, #loc84, #loc85, #loc81])
#loc221 = loc(fused[#loc87, #loc88])
#loc222 = loc(fused[#loc89, #loc90])
#loc223 = loc(fused[#loc92, #loc91])
#loc224 = loc(fused[#loc93, #loc94])
#loc225 = loc(fused[#loc96, #loc94])
#loc226 = loc(fused[#loc99, #loc100])
#loc227 = loc(fused[#loc98, #loc100])
#loc228 = loc(fused[#loc97, #loc101])
#loc229 = loc(fused[#loc102, #loc101])
#loc230 = loc(fused[#loc103, #loc104])
#loc231 = loc(fused[#loc105, #loc106])
#loc232 = loc(fused[#loc108, #loc104])
#loc233 = loc(fused[#loc114, #loc115])
#loc234 = loc(fused[#loc117, #loc115])
#loc235 = loc(fused[#loc118, #loc119])
#loc236 = loc(fused[#loc120, #loc121])
#loc237 = loc(fused[#loc123, #loc122])
#loc238 = loc(fused[#loc124, #loc125])
#loc239 = loc(fused[#loc127, #loc128, #loc129, #loc125])
#loc240 = loc(fused[#loc134, #loc135])
#loc241 = loc(fused[#loc133, #loc135])
#loc242 = loc(fused[#loc132, #loc136])
#loc243 = loc(fused[#loc137, #loc136])
#loc244 = loc(fused[#loc138, #loc139])
#loc245 = loc(fused[#loc140, #loc141])
#loc246 = loc(fused[#loc143, #loc139])
#loc247 = loc(fused[#loc147, #loc148])
#loc248 = loc(fused[#loc150, #loc148])
#loc249 = loc(fused[#loc153, #loc154])
#loc250 = loc(fused[#loc155, #loc156])
#loc251 = loc(fused[#loc158, #loc157])
#loc252 = loc(fused[#loc159, #loc160])
#loc253 = loc(fused[#loc162, #loc160])
#loc254 = loc(fused[#loc165, #loc166])
#loc255 = loc(fused[#loc164, #loc166])
#loc256 = loc(fused[#loc163, #loc167])
#loc257 = loc(fused[#loc168, #loc167])
#loc258 = loc(fused[#loc169, #loc170])
#loc259 = loc(fused[#loc171, #loc172])
#loc260 = loc(fused[#loc174, #loc170])
#loc261 = loc(fused[#loc178, #loc179])
#loc262 = loc(fused[#loc181, #loc179])
