!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":21:84)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":21:104)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":38:88)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":38:108)
#loc53 = loc(fused[#loc5, #loc6])
#loc61 = loc(fused[#loc29, #loc30])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLongLongLine(!s64i) loc(#loc51)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!s64i>> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc53)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc54)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc9)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc10)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!s64i>>, %3 : !s32i), !cir.ptr<!cir.ptr<!s64i>> loc(#loc8)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc10)
    cir.store %5, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc54)
    cir.scope {
      %6 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc56)
      %7 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc56)
      cir.store %7, %6 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc56)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc16)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc16)
      %10 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc17)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc17)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc18)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc18)
      %14 = cir.const #cir.int<8> : !u64i loc(#loc57)
      %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc58)
      cir.libc.memcpy %15 bytes from %11 to %9 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc59)
      %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc24)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc25)
      %19 = cir.load %18 : !cir.ptr<!s64i>, !s64i loc(#loc23)
      cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc26)
    } loc(#loc55)
    cir.return loc(#loc4)
  } loc(#loc52)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s64i>> loc(fused[#loc29, #loc30])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc61)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc62)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc33)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc34)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc35)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!s64i>>, %3 : !s32i), !cir.ptr<!cir.ptr<!s64i>> loc(#loc32)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc34)
    cir.store %5, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc62)
    cir.scope {
      %6 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc64)
      %7 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc64)
      cir.store %7, %6 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc64)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc40)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc40)
      %10 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc41)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc41)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc42)
      %14 = cir.const #cir.int<8> : !u64i loc(#loc65)
      %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc66)
      cir.libc.memcpy %15 bytes from %11 to %9 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc67)
      %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc47)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc48)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc49)
      %19 = cir.load %18 : !cir.ptr<!s64i>, !s64i loc(#loc47)
      cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc50)
    } loc(#loc63)
    cir.return loc(#loc28)
  } loc(#loc60)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":31:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":24:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":22:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":24:22)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":24:32)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":26:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":26:33)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":28:16)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":28:22)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":28:30)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":28:34)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":28:48)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":28:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":28:49)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":29:27)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":29:32)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":29:33)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":29:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":38:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":47:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":40:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":40:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":39:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":40:22)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":40:32)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":41:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":46:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":42:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":42:33)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":44:16)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":44:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":44:30)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":44:34)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":44:48)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":44:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":44:49)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":45:27)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":45:32)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":45:33)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_66b.c":45:9)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc54 = loc(fused[#loc7, #loc8])
#loc55 = loc(fused[#loc12, #loc13])
#loc56 = loc(fused[#loc14, #loc15])
#loc57 = loc(fused[#loc19, #loc20])
#loc58 = loc(fused[#loc18, #loc20])
#loc59 = loc(fused[#loc21, #loc22])
#loc60 = loc(fused[#loc27, #loc28])
#loc62 = loc(fused[#loc31, #loc32])
#loc63 = loc(fused[#loc36, #loc37])
#loc64 = loc(fused[#loc38, #loc39])
#loc65 = loc(fused[#loc43, #loc44])
#loc66 = loc(fused[#loc42, #loc44])
#loc67 = loc(fused[#loc45, #loc46])
