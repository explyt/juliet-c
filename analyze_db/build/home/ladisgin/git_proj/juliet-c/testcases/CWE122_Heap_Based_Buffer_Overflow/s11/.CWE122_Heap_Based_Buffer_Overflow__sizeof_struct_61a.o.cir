!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61b_badSource(!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc42)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc43)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc45)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc46)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    %3 = cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61b_badSource(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc47)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc18)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc19)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc20)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc19)
    cir.return loc(#loc8)
  } loc(#loc44)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc49)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc22)
  } loc(#loc48)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61b_goodG2BSource(!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc52)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc53)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %3 = cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61b_goodG2BSource(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc54)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc38)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc39)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc40)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
    cir.return loc(#loc28)
  } loc(#loc51)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":22:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":22:100)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":24:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":33:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":26:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":26:21)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":28:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":28:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":29:75)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":29:12)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":29:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":29:79)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":31:21)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":31:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":32:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":32:10)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":53:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":56:1)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":55:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":55:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":40:1)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":40:104)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":42:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":51:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":44:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":44:21)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":46:12)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":46:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":47:79)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":47:12)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":47:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":47:83)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":49:21)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":49:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":50:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61a.c":50:10)
#loc41 = loc(fused[#loc1, #loc2])
#loc42 = loc(fused[#loc3, #loc4])
#loc43 = loc(fused[#loc5, #loc6])
#loc44 = loc(fused[#loc7, #loc8])
#loc45 = loc(fused[#loc9, #loc10])
#loc46 = loc(fused[#loc12, #loc11])
#loc47 = loc(fused[#loc15, #loc16])
#loc48 = loc(fused[#loc21, #loc22])
#loc49 = loc(fused[#loc23, #loc24])
#loc50 = loc(fused[#loc25, #loc26])
#loc51 = loc(fused[#loc27, #loc28])
#loc52 = loc(fused[#loc29, #loc30])
#loc53 = loc(fused[#loc32, #loc31])
#loc54 = loc(fused[#loc35, #loc36])
