!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_new_use_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc89)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc90)
  cir.func private @printIntLine(!s32i) loc(#loc91)
  cir.func @_ZN41CWE758_Undefined_Behavior__int_new_use_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %3 ^bb2, ^bb5 loc(#loc96)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc97)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<4> : !u64i loc(#loc98)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc93)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc98)
    cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc93)
    %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc12)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc21)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc22)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc24)
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc14)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc8)
  } loc(#loc92)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc27)
  cir.func internal private @_ZN41CWE758_Undefined_Behavior__int_new_use_02L5good1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc102)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc103)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc105)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb8 loc(#loc40)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc106)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<5> : !s32i loc(#loc45)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc108)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc102)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc108)
    cir.store %10, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc102)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.br ^bb5 loc(#loc110)
  ^bb5:  // pred: ^bb4
    %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc55)
    cir.br ^bb6 loc(#loc52)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc56)
    cir.call @_ZdlPv(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
    cir.br ^bb7 loc(#loc44)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc37)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc29)
  } loc(#loc100)
  cir.func internal private @_ZN41CWE758_Undefined_Behavior__int_new_use_02L5good2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc112)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc113)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc114)
    cir.br ^bb1 loc(#loc115)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc68)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc116)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc117)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<5> : !s32i loc(#loc72)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc119)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc113)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc119)
    cir.store %8, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // pred: ^bb3
    %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc82)
    cir.br ^bb5 loc(#loc79)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc83)
    cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc84)
    cir.br ^bb6 loc(#loc71)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc67)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc67)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc59)
  } loc(#loc111)
  cir.func @_ZN41CWE758_Undefined_Behavior__int_new_use_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE758_Undefined_Behavior__int_new_use_02L5good1Ev() : () -> () loc(#loc87)
    cir.call @_ZN41CWE758_Undefined_Behavior__int_new_use_02L5good2Ev() : () -> () loc(#loc88)
    cir.return loc(#loc86)
  } loc(#loc122)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_new_use_02.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":23:1)
#loc8 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":34:1)
#loc9 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":28:13)
#loc10 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":28:33)
#loc11 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":29:13)
#loc12 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":29:25)
#loc13 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":25:5)
#loc14 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":33:5)
#loc15 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":25:8)
#loc16 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":26:5)
#loc17 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":27:9)
#loc18 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":32:9)
#loc19 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":28:29)
#loc20 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":29:24)
#loc21 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":30:20)
#loc22 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":23:6)
#loc23 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":31:26)
#loc24 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":31:13)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":46:19)
#loc28 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":41:1)
#loc29 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":62:1)
#loc30 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":51:13)
#loc31 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":51:17)
#loc32 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":53:13)
#loc33 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":53:33)
#loc34 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":56:17)
#loc35 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":56:29)
#loc36 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":43:5)
#loc37 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":61:5)
#loc38 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":43:8)
#loc39 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":44:5)
#loc40 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":47:5)
#loc41 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":49:5)
#loc42 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":46:9)
#loc43 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":50:9)
#loc44 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":60:9)
#loc45 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":52:20)
#loc46 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":52:13)
#loc47 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":53:29)
#loc48 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":54:24)
#loc49 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":54:14)
#loc50 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":54:13)
#loc51 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":55:13)
#loc52 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":58:13)
#loc53 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":56:28)
#loc54 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":57:30)
#loc55 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":57:17)
#loc56 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":59:20)
#loc57 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":41:13)
#loc58 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":65:1)
#loc59 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":81:1)
#loc60 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":70:13)
#loc61 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":70:17)
#loc62 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":72:13)
#loc63 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":72:33)
#loc64 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":75:17)
#loc65 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":75:29)
#loc66 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":67:5)
#loc67 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":80:5)
#loc68 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":67:8)
#loc69 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":68:5)
#loc70 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":69:9)
#loc71 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":79:9)
#loc72 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":71:20)
#loc73 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":71:13)
#loc74 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":72:29)
#loc75 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":73:24)
#loc76 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":73:14)
#loc77 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":73:13)
#loc78 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":74:13)
#loc79 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":77:13)
#loc80 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":75:28)
#loc81 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":76:30)
#loc82 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":76:17)
#loc83 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":78:20)
#loc84 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":65:13)
#loc85 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":83:1)
#loc86 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":87:1)
#loc87 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":85:5)
#loc88 = loc("CWE758_Undefined_Behavior__int_new_use_02.cpp":86:5)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc5, #loc6])
#loc92 = loc(fused[#loc7, #loc8])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc11, #loc12])
#loc95 = loc(fused[#loc13, #loc14])
#loc96 = loc(fused[#loc16, #loc14])
#loc97 = loc(fused[#loc17, #loc18])
#loc98 = loc(fused[#loc19, #loc10])
#loc99 = loc(fused[#loc25, #loc26])
#loc100 = loc(fused[#loc28, #loc29])
#loc101 = loc(fused[#loc30, #loc31])
#loc102 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc34, #loc35])
#loc104 = loc(fused[#loc36, #loc37])
#loc105 = loc(fused[#loc39, #loc40, #loc41, #loc37])
#loc106 = loc(fused[#loc43, #loc44])
#loc107 = loc(fused[#loc46, #loc45])
#loc108 = loc(fused[#loc47, #loc33])
#loc109 = loc(fused[#loc50, #loc48])
#loc110 = loc(fused[#loc51, #loc52])
#loc111 = loc(fused[#loc58, #loc59])
#loc112 = loc(fused[#loc60, #loc61])
#loc113 = loc(fused[#loc62, #loc63])
#loc114 = loc(fused[#loc64, #loc65])
#loc115 = loc(fused[#loc66, #loc67])
#loc116 = loc(fused[#loc69, #loc67])
#loc117 = loc(fused[#loc70, #loc71])
#loc118 = loc(fused[#loc73, #loc72])
#loc119 = loc(fused[#loc74, #loc63])
#loc120 = loc(fused[#loc77, #loc75])
#loc121 = loc(fused[#loc78, #loc79])
#loc122 = loc(fused[#loc85, #loc86])
