!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc22 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":54:25)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":54:32)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":170:10)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":170:14)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":170:20)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":170:32)
#loc135 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":104:30)
#loc136 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":104:37)
#loc171 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":132:30)
#loc172 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":132:37)
#loc210 = loc(fused[#loc22, #loc23])
#loc243 = loc(fused[#loc109, #loc110])
#loc244 = loc(fused[#loc111, #loc112])
#loc251 = loc(fused[#loc135, #loc136])
#loc262 = loc(fused[#loc171, #loc172])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc201)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc202)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_file_execl_21_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc203)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc204)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc205)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc13)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc14)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc17)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc208)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc22, #loc23])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc21)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc24)
    cir.scope {
      %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc204)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc27)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc214)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc215)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc35)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc35)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc214)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc39)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc39)
            %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc40)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc217)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc41)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc218)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc43)
              %20 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc13)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc13)
              %22 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc14)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc14)
              %24 = cir.call @fopen(%21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc43)
              cir.store %24, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc220)
              cir.scope {
                %25 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc49)
                %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc222)
                cir.if %28 {
                  cir.scope {
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
                    %32 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc54)
                    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc55)
                    %34 = cir.const #cir.int<100> : !s32i loc(#loc56)
                    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc56)
                    %36 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                    %37 = cir.binop(sub, %35, %36) : !u64i loc(#loc225)
                    %38 = cir.cast(integral, %37 : !u64i), !s32i loc(#loc225)
                    %39 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
                    %40 = cir.call @fgets(%33, %38, %39) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc59)
                    %41 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
                    %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
                    %43 = cir.cmp(eq, %40, %42) : !cir.ptr<!s8i>, !cir.bool loc(#loc226)
                    cir.if %43 {
                      %44 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc17)
                      %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc17)
                      cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc62)
                      %46 = cir.const #cir.int<0> : !s32i loc(#loc63)
                      %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc63)
                      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
                      %49 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                      %50 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc66)
                      cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc228)
                    } loc(#loc227)
                  } loc(#loc224)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
                  %30 = cir.call @fclose(%29) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc68)
                } loc(#loc223)
              } loc(#loc221)
            } loc(#loc219)
          } loc(#loc216)
        } loc(#loc213)
      } loc(#loc212)
    } loc(#loc211)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc229)
  } loc(#loc209)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc230)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc74)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execl_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc232)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc203)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_file_execl_21_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc203)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc203)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %5 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc204)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %7 = cir.call @badSource(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc84)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc73)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc73)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc87)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc87)
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc74)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc74)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %16 = cir.call @execl(%9, %11, %13, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc90)
    cir.return loc(#loc76)
  } loc(#loc231)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execl_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    cir.return loc(#loc92)
  } loc(#loc236)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc239)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc240)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc106)
  cir.func @main(%arg0: !s32i loc(fused[#loc109, #loc110]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc111, #loc112])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc244)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc113)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc114)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc115)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc115)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc116)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc103)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call @CWE78_OS_Command_Injection__char_file_execl_21_good() : () -> () loc(#loc118)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc104)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc105)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call @CWE78_OS_Command_Injection__char_file_execl_21_bad() : () -> () loc(#loc122)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc106)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc125)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    cir.return %17 : !s32i loc(#loc247)
  } loc(#loc242)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.9" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc129)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str.10" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc132)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc135, #loc136])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc251)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc134)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.scope {
      %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc248)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc140)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc140)
      cir.if %6 {
        %7 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc129)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc129)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc144)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc145)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
        %9 = cir.get_global @".str.10" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc132)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc132)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
      } loc(#loc253)
    } loc(#loc252)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc254)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc254)
  } loc(#loc250)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc256)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc202)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc202)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc202)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %5 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc248)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %7 = cir.call @goodG2B1Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc158)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc161)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc161)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc162)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc162)
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc163)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc163)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
    %16 = cir.call @execl(%9, %11, %13, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc166)
    cir.return loc(#loc150)
  } loc(#loc255)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc260)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc171, #loc172])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc170)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc260)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc176)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc176)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc178)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
        %9 = cir.get_global @".str.10" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc180)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc180)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc178)
      } loc(#loc264)
    } loc(#loc263)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc265)
  } loc(#loc261)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc267)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc201)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc201)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc201)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc187)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %5 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc260)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    %7 = cir.call @goodG2B2Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc192)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc195)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc195)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc196)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc196)
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc197)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc197)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc199)
    %16 = cir.call @execl(%9, %11, %13, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc200)
    cir.return loc(#loc184)
  } loc(#loc266)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_21.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":145:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":145:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":122:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":122:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":86:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":86:28)
#loc7 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":52:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":52:24)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdio.h":264:1)
#loc12 = loc("/usr/include/stdio.h":266:3)
#loc13 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":65:31)
#loc14 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":65:41)
#loc15 = loc("/usr/include/stdio.h":654:1)
#loc16 = loc("/usr/include/stdio.h":655:59)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":71:35)
#loc18 = loc("/usr/include/stdio.h":184:1)
#loc19 = loc("/usr/include/stdio.h":184:36)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":54:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":81:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":55:1)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":56:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":79:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":56:8)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":57:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":58:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":78:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":60:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":60:41)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":61:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":61:20)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":60:30)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":60:37)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":63:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":77:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":63:17)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":63:21)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":63:31)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":64:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":65:25)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":65:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":65:44)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":66:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":76:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":66:21)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":66:30)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":67:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":69:21)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":74:21)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":69:31)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":69:36)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":69:35)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":69:51)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":69:55)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":69:65)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":69:25)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":69:75)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":70:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":71:25)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":73:41)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":73:25)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":73:30)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":73:37)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":75:28)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":75:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":80:12)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":80:5)
#loc71 = loc("/usr/include/unistd.h":594:1)
#loc72 = loc("/usr/include/unistd.h":595:14)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":92:11)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":92:47)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":83:1)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":93:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":85:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":85:12)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":87:12)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":87:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":88:17)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":88:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":89:22)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":89:12)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":89:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":89:26)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":92:29)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":92:61)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":92:75)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":92:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":154:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":158:1)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":156:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":156:14)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":157:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":157:14)
#loc97 = loc("/usr/include/stdlib.h":575:1)
#loc98 = loc("/usr/include/stdlib.h":575:41)
#loc99 = loc("/usr/include/time.h":76:1)
#loc100 = loc("/usr/include/time.h":76:38)
#loc101 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc102 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":175:15)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":177:15)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":180:15)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":182:15)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":170:1)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":185:1)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":171:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":173:27)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":173:22)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":173:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":175:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":176:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":176:57)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":177:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":180:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":181:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":181:56)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":182:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":184:12)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":184:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":100:1)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":100:29)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":109:19)
#loc130 = loc("/usr/include/string.h":149:1)
#loc131 = loc("/usr/include/string.h":150:14)
#loc132 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":114:22)
#loc133 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":104:1)
#loc134 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":117:1)
#loc137 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":105:1)
#loc138 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":106:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":115:5)
#loc140 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":106:8)
#loc141 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":107:5)
#loc142 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":110:5)
#loc143 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":112:5)
#loc144 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":109:9)
#loc145 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":114:9)
#loc146 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":114:16)
#loc147 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":116:12)
#loc148 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":116:5)
#loc149 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":119:1)
#loc150 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":129:1)
#loc151 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":121:5)
#loc152 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":121:12)
#loc153 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":123:12)
#loc154 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":123:5)
#loc155 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":124:22)
#loc156 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":124:5)
#loc157 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":125:27)
#loc158 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":125:12)
#loc159 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":125:5)
#loc160 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":125:31)
#loc161 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":128:11)
#loc162 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":128:29)
#loc163 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":128:47)
#loc164 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":128:61)
#loc165 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":128:75)
#loc166 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":128:5)
#loc167 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":101:1)
#loc168 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":101:29)
#loc169 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":132:1)
#loc170 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":140:1)
#loc173 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":133:1)
#loc174 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":134:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":138:5)
#loc176 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":134:8)
#loc177 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":135:5)
#loc178 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":137:9)
#loc179 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":137:16)
#loc180 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":137:22)
#loc181 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":139:12)
#loc182 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":139:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":142:1)
#loc184 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":152:1)
#loc185 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":144:5)
#loc186 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":144:12)
#loc187 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":146:12)
#loc188 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":146:5)
#loc189 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":147:22)
#loc190 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":147:5)
#loc191 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":148:27)
#loc192 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":148:12)
#loc193 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":148:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":148:31)
#loc195 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":151:11)
#loc196 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":151:29)
#loc197 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":151:47)
#loc198 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":151:61)
#loc199 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":151:75)
#loc200 = loc("CWE78_OS_Command_Injection__char_file_execl_21.c":151:5)
#loc201 = loc(fused[#loc1, #loc2])
#loc202 = loc(fused[#loc3, #loc4])
#loc203 = loc(fused[#loc5, #loc6])
#loc204 = loc(fused[#loc7, #loc8])
#loc205 = loc(fused[#loc9, #loc10])
#loc206 = loc(fused[#loc11, #loc12])
#loc207 = loc(fused[#loc15, #loc16])
#loc208 = loc(fused[#loc18, #loc19])
#loc209 = loc(fused[#loc20, #loc21])
#loc211 = loc(fused[#loc25, #loc26])
#loc212 = loc(fused[#loc28, #loc26])
#loc213 = loc(fused[#loc29, #loc30])
#loc214 = loc(fused[#loc31, #loc32])
#loc215 = loc(fused[#loc33, #loc34])
#loc216 = loc(fused[#loc37, #loc38])
#loc217 = loc(fused[#loc39, #loc40])
#loc218 = loc(fused[#loc39, #loc41])
#loc219 = loc(fused[#loc42, #loc38])
#loc220 = loc(fused[#loc44, #loc45])
#loc221 = loc(fused[#loc46, #loc47])
#loc222 = loc(fused[#loc48, #loc49])
#loc223 = loc(fused[#loc50, #loc47])
#loc224 = loc(fused[#loc51, #loc52])
#loc225 = loc(fused[#loc56, #loc57])
#loc226 = loc(fused[#loc59, #loc60])
#loc227 = loc(fused[#loc61, #loc52])
#loc228 = loc(fused[#loc64, #loc63])
#loc229 = loc(fused[#loc70, #loc69])
#loc230 = loc(fused[#loc71, #loc72])
#loc231 = loc(fused[#loc75, #loc76])
#loc232 = loc(fused[#loc77, #loc78])
#loc233 = loc(fused[#loc80, #loc79])
#loc234 = loc(fused[#loc82, #loc81])
#loc235 = loc(fused[#loc85, #loc86])
#loc236 = loc(fused[#loc91, #loc92])
#loc237 = loc(fused[#loc93, #loc94])
#loc238 = loc(fused[#loc95, #loc96])
#loc239 = loc(fused[#loc97, #loc98])
#loc240 = loc(fused[#loc99, #loc100])
#loc241 = loc(fused[#loc101, #loc102])
#loc242 = loc(fused[#loc107, #loc108])
#loc245 = loc(fused[#loc118, #loc119])
#loc246 = loc(fused[#loc122, #loc123])
#loc247 = loc(fused[#loc126, #loc125])
#loc248 = loc(fused[#loc127, #loc128])
#loc249 = loc(fused[#loc130, #loc131])
#loc250 = loc(fused[#loc133, #loc134])
#loc252 = loc(fused[#loc138, #loc139])
#loc253 = loc(fused[#loc141, #loc142, #loc143, #loc139])
#loc254 = loc(fused[#loc148, #loc147])
#loc255 = loc(fused[#loc149, #loc150])
#loc256 = loc(fused[#loc151, #loc152])
#loc257 = loc(fused[#loc154, #loc153])
#loc258 = loc(fused[#loc156, #loc155])
#loc259 = loc(fused[#loc159, #loc160])
#loc260 = loc(fused[#loc167, #loc168])
#loc261 = loc(fused[#loc169, #loc170])
#loc263 = loc(fused[#loc174, #loc175])
#loc264 = loc(fused[#loc177, #loc175])
#loc265 = loc(fused[#loc182, #loc181])
#loc266 = loc(fused[#loc183, #loc184])
#loc267 = loc(fused[#loc185, #loc186])
#loc268 = loc(fused[#loc188, #loc187])
#loc269 = loc(fused[#loc190, #loc189])
#loc270 = loc(fused[#loc193, #loc194])
