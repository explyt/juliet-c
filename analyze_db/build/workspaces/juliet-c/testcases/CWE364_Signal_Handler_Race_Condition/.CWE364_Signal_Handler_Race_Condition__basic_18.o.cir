!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":28:27)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":36:24)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":36:28)
!ty__structSigAtomic = !cir.record<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc149 = loc(fused[#loc15, #loc16])
#loc176 = loc(fused[#loc79, #loc80])
module @"/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc142)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc143)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc144)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc145)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc147)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc149)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.br ^bb1 loc(#loc150)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc151)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
    %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
    %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc14)
  } loc(#loc148)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc29)
    cir.store %1, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc155)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc33)
    %4 = cir.call @signal(%2, %3) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc34)
    cir.br ^bb2 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc37)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc38)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc158)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc159)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc40)
    %11 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc41)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc41)
    cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc42)
    %15 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
    cir.store %14, %15 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc160)
    cir.br ^bb4 loc(#loc36)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc36)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<4> : !u64i loc(#loc161)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc46)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc162)
    cir.store %18, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc163)
    cir.br ^bb6 loc(#loc164)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc51)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc52)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc165)
    cir.brcond %22 ^bb7, ^bb8 loc(#loc166)
  ^bb7:  // pred: ^bb6
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc54)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc56)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
    cir.br ^bb8 loc(#loc50)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc50)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc57)
    %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
    cir.store %26, %27 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %29 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
    %30 = cir.load %29 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc60)
    %31 = cir.get_member %30[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %33 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!s32i)>> loc(#loc62)
    %34 = cir.call @signal(%32, %33) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc63)
    cir.br ^bb10 loc(#loc169)
  ^bb10:  // pred: ^bb9
    %35 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
    %36 = cir.load %35 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc66)
    %37 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc67)
    %39 = cir.cmp(ne, %36, %38) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc170)
    cir.brcond %39 ^bb11, ^bb12 loc(#loc171)
  ^bb11:  // pred: ^bb10
    %40 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc69)
    %41 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
    %42 = cir.load %41 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc70)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc70)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
    %44 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc71)
    %45 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
    cir.store %44, %45 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc172)
    cir.br ^bb12 loc(#loc65)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc65)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc27)
  } loc(#loc154)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc75)
    cir.return loc(#loc74)
  } loc(#loc173)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc79, #loc80])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc176)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.br ^bb1 loc(#loc177)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc84)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc85)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc178)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc179)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc88)
    %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb3 loc(#loc83)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc78)
  } loc(#loc175)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc92)
    cir.store %1, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc182)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc95)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc96)
    %4 = cir.call @signal(%2, %3) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc97)
    cir.br ^bb2 loc(#loc184)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc100)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc101)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc185)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc186)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc103)
    %11 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc104)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc104)
    cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc105)
    %15 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
    cir.store %14, %15 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc187)
    cir.br ^bb4 loc(#loc99)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc99)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<4> : !u64i loc(#loc188)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc189)
    cir.store %18, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc190)
    cir.br ^bb6 loc(#loc191)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc114)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc115)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc192)
    cir.brcond %22 ^bb7, ^bb8 loc(#loc193)
  ^bb7:  // pred: ^bb6
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc117)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc119)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc117)
    cir.br ^bb8 loc(#loc113)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc113)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc120)
    %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
    cir.store %26, %27 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc194)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %29 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
    %30 = cir.load %29 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc123)
    %31 = cir.get_member %30[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc124)
    %33 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc125)
    %34 = cir.call @signal(%32, %33) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc126)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc127)
    %36 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc128)
    %37 = cir.call @signal(%35, %36) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc129)
    cir.br ^bb10 loc(#loc196)
  ^bb10:  // pred: ^bb9
    %38 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
    %39 = cir.load %38 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc132)
    %40 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc133)
    %42 = cir.cmp(ne, %39, %41) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc197)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc198)
  ^bb11:  // pred: ^bb10
    %43 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc135)
    %44 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
    %45 = cir.load %44 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc136)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc136)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
    %47 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc137)
    %48 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
    cir.store %47, %48 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc199)
    cir.br ^bb12 loc(#loc131)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc131)
  ^bb13:  // pred: ^bb12
    %49 = cir.const #cir.int<2> : !s32i loc(#loc139)
    %50 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc140)
    %51 = cir.call @signal(%49, %50) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc141)
    cir.return loc(#loc90)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_18.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":22:18)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":46:1)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":85:1)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":51:9)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":51:45)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":48:5)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":48:10)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":52:16)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":52:24)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":52:9)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":53:9)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":57:9)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":53:13)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":53:81)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":54:9)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":55:13)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":55:18)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":56:80)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":56:13)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":58:53)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":58:75)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":58:46)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":58:76)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":58:9)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:9)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:49)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:13)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:33)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:39)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:40)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:46)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:45)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":60:76)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":60:9)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":61:81)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":61:9)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":69:16)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":69:24)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":69:9)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":79:9)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":83:9)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":79:13)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":79:81)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":80:9)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":81:13)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":81:18)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":82:80)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":82:13)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":131:1)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":134:1)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":133:5)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":133:11)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":36:1)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":42:1)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":37:1)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":38:5)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":41:5)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":38:9)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":38:78)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":39:5)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":40:82)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":40:9)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":92:1)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":129:1)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":97:9)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":97:45)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":94:5)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":94:10)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":98:16)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":98:24)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":98:9)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":99:9)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":103:9)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":99:13)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":99:82)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":100:9)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":101:13)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":101:18)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":102:81)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":102:13)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":104:53)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":104:75)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":104:46)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":104:76)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":104:9)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:9)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:49)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:13)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:33)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:39)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:40)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:46)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:45)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":106:77)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":106:9)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":107:82)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":107:9)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":115:16)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":115:24)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":115:9)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":121:16)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":121:24)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":121:9)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":122:9)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":126:9)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":122:13)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":122:82)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":123:9)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":124:13)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":124:18)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":125:81)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":125:13)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":127:16)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":127:24)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":127:9)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc9, #loc10])
#loc147 = loc(fused[#loc11, #loc12])
#loc148 = loc(fused[#loc13, #loc14])
#loc150 = loc(fused[#loc18, #loc19])
#loc151 = loc(fused[#loc20, #loc21])
#loc152 = loc(fused[#loc22, #loc19])
#loc153 = loc(fused[#loc24, #loc23])
#loc154 = loc(fused[#loc26, #loc27])
#loc155 = loc(fused[#loc28, #loc29])
#loc156 = loc(fused[#loc30, #loc31])
#loc157 = loc(fused[#loc35, #loc36])
#loc158 = loc(fused[#loc37, #loc38])
#loc159 = loc(fused[#loc39, #loc36])
#loc160 = loc(fused[#loc43, #loc42])
#loc161 = loc(fused[#loc44, #loc45])
#loc162 = loc(fused[#loc46, #loc47])
#loc163 = loc(fused[#loc48, #loc47])
#loc164 = loc(fused[#loc49, #loc50])
#loc165 = loc(fused[#loc51, #loc52])
#loc166 = loc(fused[#loc53, #loc50])
#loc167 = loc(fused[#loc58, #loc57])
#loc168 = loc(fused[#loc60, #loc59])
#loc169 = loc(fused[#loc64, #loc65])
#loc170 = loc(fused[#loc66, #loc67])
#loc171 = loc(fused[#loc68, #loc65])
#loc172 = loc(fused[#loc72, #loc71])
#loc173 = loc(fused[#loc73, #loc74])
#loc174 = loc(fused[#loc75, #loc76])
#loc175 = loc(fused[#loc77, #loc78])
#loc177 = loc(fused[#loc82, #loc83])
#loc178 = loc(fused[#loc84, #loc85])
#loc179 = loc(fused[#loc86, #loc83])
#loc180 = loc(fused[#loc88, #loc87])
#loc181 = loc(fused[#loc89, #loc90])
#loc182 = loc(fused[#loc91, #loc92])
#loc183 = loc(fused[#loc93, #loc94])
#loc184 = loc(fused[#loc98, #loc99])
#loc185 = loc(fused[#loc100, #loc101])
#loc186 = loc(fused[#loc102, #loc99])
#loc187 = loc(fused[#loc106, #loc105])
#loc188 = loc(fused[#loc107, #loc108])
#loc189 = loc(fused[#loc109, #loc110])
#loc190 = loc(fused[#loc111, #loc110])
#loc191 = loc(fused[#loc112, #loc113])
#loc192 = loc(fused[#loc114, #loc115])
#loc193 = loc(fused[#loc116, #loc113])
#loc194 = loc(fused[#loc121, #loc120])
#loc195 = loc(fused[#loc123, #loc122])
#loc196 = loc(fused[#loc130, #loc131])
#loc197 = loc(fused[#loc132, #loc133])
#loc198 = loc(fused[#loc134, #loc131])
#loc199 = loc(fused[#loc138, #loc137])
