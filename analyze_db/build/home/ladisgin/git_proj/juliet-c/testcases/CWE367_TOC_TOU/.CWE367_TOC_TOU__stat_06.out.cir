!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc117 = loc("CWE367_TOC_TOU__stat_06.c":178:10)
#loc118 = loc("CWE367_TOC_TOU__stat_06.c":178:14)
#loc119 = loc("CWE367_TOC_TOU__stat_06.c":178:20)
#loc120 = loc("CWE367_TOC_TOU__stat_06.c":178:32)
!ty_timespec = !cir.struct<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
#loc327 = loc(fused[#loc117, #loc118])
#loc328 = loc(fused[#loc119, #loc120])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.struct<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc281)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc282)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc283)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc284)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc286)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc287)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc288)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc289)
  cir.func no_proto @CWE367_TOC_TOU__stat_06_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc26)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc292)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc295)
          %4 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc296)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc297)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc295)
          cir.store %6, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc295)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc35)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc36)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc297)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc40)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc282)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc299)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc45)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc46)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc46)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc47)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc48)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc301)
            } loc(#loc300)
          } loc(#loc298)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
            %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc51)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc53)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc303)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc55)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc55)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
              %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc58)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc305)
              %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc59)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc306)
            } loc(#loc304)
          } loc(#loc302)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
            %13 = cir.call @stat(%12, %4) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc63)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc64)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc65)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc308)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc68)
              cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
            } loc(#loc309)
          } loc(#loc307)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc70)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc71)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc310)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc76)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc77)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc78)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc312)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc80)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc81)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
            } loc(#loc313)
          } loc(#loc311)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
            %16 = cir.const #cir.int<11> : !u64i loc(#loc315)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc87)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc89)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc89)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc316)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc92)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
            } loc(#loc317)
          } loc(#loc314)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc97)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc319)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc100)
            } loc(#loc320)
          } loc(#loc318)
        } loc(#loc294)
      } loc(#loc293)
    } loc(#loc291)
    cir.return loc(#loc22)
  } loc(#loc290)
  cir.func no_proto @CWE367_TOC_TOU__stat_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc322)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc103)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc323)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc105)
    cir.return loc(#loc102)
  } loc(#loc321)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc324)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc325)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc114)
  cir.func @main(%arg0: !s32i loc(fused[#loc117, #loc118]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc119, #loc120])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc327)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc328)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc116)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc121)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc122)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc123)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc123)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc124)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc111)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %8 = cir.get_global @CWE367_TOC_TOU__stat_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc329)
    cir.call @CWE367_TOC_TOU__stat_06_good() : () -> () loc(#loc126)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc112)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc113)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %13 = cir.get_global @CWE367_TOC_TOU__stat_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc330)
    cir.call @CWE367_TOC_TOU__stat_06_bad() : () -> () loc(#loc130)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc114)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc331)
    cir.return %17 : !s32i loc(#loc331)
  } loc(#loc326)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc136)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc141)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc142)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc334)
      cir.if %2 {
        %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc135)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc135)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc146)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc337)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc338)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc337)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc337)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc152)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc153)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc338)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc157)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc282)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc158)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc159)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc160)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc340)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc162)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc162)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc163)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc164)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc164)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc165)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc166)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc342)
            } loc(#loc341)
          } loc(#loc339)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc169)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc169)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc171)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc171)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc344)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc173)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc173)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc174)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc174)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc176)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc176)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc346)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc177)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc347)
            } loc(#loc345)
          } loc(#loc343)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc178)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc179)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc180)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc348)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc185)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc186)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc187)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc350)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc189)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc190)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc189)
            } loc(#loc351)
          } loc(#loc349)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc193)
            %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc136)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc136)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
            %15 = cir.const #cir.int<12> : !u64i loc(#loc353)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc196)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc197)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc198)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc198)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc354)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc200)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc201)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc200)
            } loc(#loc355)
          } loc(#loc352)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc204)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc205)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc206)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc357)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc208)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc209)
            } loc(#loc358)
          } loc(#loc356)
        } loc(#loc336)
      } loc(#loc335)
    } loc(#loc333)
    cir.return loc(#loc138)
  } loc(#loc332)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc214)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc215)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc361)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc364)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc365)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc364)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc364)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc222)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc223)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc365)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc226)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc227)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc282)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc228)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc229)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc230)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc230)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc367)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc232)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc232)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc233)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc234)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc234)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc235)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc236)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc236)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc369)
            } loc(#loc368)
          } loc(#loc366)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc239)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc240)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc239)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc241)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc241)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc371)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc243)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc243)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc244)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc245)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc244)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc246)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc246)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc373)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc247)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc247)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc374)
            } loc(#loc372)
          } loc(#loc370)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc248)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc249)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc250)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc375)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc255)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc256)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc257)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc377)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc259)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc260)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc259)
            } loc(#loc378)
          } loc(#loc376)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc263)
            %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc264)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc264)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc264)
            %15 = cir.const #cir.int<12> : !u64i loc(#loc380)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc267)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc268)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc269)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc269)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc381)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc271)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc272)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc271)
            } loc(#loc382)
          } loc(#loc379)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc275)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc276)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc277)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc384)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc279)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc280)
            } loc(#loc385)
          } loc(#loc383)
        } loc(#loc363)
      } loc(#loc362)
    } loc(#loc360)
    cir.return loc(#loc211)
  } loc(#loc359)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__stat_06.c":52:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/sys/stat.h":205:1)
#loc11 = loc("/usr/include/sys/stat.h":206:43)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__stat_06.c":70:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__stat_06.c":42:1)
#loc22 = loc("CWE367_TOC_TOU__stat_06.c":80:1)
#loc23 = loc("CWE367_TOC_TOU__stat_06.c":44:5)
#loc24 = loc("CWE367_TOC_TOU__stat_06.c":79:5)
#loc25 = loc("CWE367_TOC_TOU__stat_06.c":44:8)
#loc26 = loc("CWE367_TOC_TOU__stat_06.c":44:27)
#loc27 = loc("CWE367_TOC_TOU__stat_06.c":45:5)
#loc28 = loc("CWE367_TOC_TOU__stat_06.c":46:9)
#loc29 = loc("CWE367_TOC_TOU__stat_06.c":78:9)
#loc30 = loc("CWE367_TOC_TOU__stat_06.c":47:13)
#loc31 = loc("CWE367_TOC_TOU__stat_06.c":47:34)
#loc32 = loc("CWE367_TOC_TOU__stat_06.c":48:13)
#loc33 = loc("CWE367_TOC_TOU__stat_06.c":48:25)
#loc34 = loc("CWE367_TOC_TOU__stat_06.c":49:13)
#loc35 = loc("CWE367_TOC_TOU__stat_06.c":49:29)
#loc36 = loc("CWE367_TOC_TOU__stat_06.c":49:28)
#loc37 = loc("CWE367_TOC_TOU__stat_06.c":50:13)
#loc38 = loc("CWE367_TOC_TOU__stat_06.c":55:13)
#loc39 = loc("CWE367_TOC_TOU__stat_06.c":50:23)
#loc40 = loc("CWE367_TOC_TOU__stat_06.c":50:33)
#loc41 = loc("CWE367_TOC_TOU__stat_06.c":50:38)
#loc42 = loc("CWE367_TOC_TOU__stat_06.c":50:17)
#loc43 = loc("CWE367_TOC_TOU__stat_06.c":50:48)
#loc44 = loc("CWE367_TOC_TOU__stat_06.c":51:13)
#loc45 = loc("CWE367_TOC_TOU__stat_06.c":52:17)
#loc46 = loc("CWE367_TOC_TOU__stat_06.c":54:31)
#loc47 = loc("CWE367_TOC_TOU__stat_06.c":54:26)
#loc48 = loc("CWE367_TOC_TOU__stat_06.c":54:17)
#loc49 = loc("CWE367_TOC_TOU__stat_06.c":56:13)
#loc50 = loc("CWE367_TOC_TOU__stat_06.c":59:13)
#loc51 = loc("CWE367_TOC_TOU__stat_06.c":56:17)
#loc52 = loc("CWE367_TOC_TOU__stat_06.c":56:24)
#loc53 = loc("CWE367_TOC_TOU__stat_06.c":56:36)
#loc54 = loc("CWE367_TOC_TOU__stat_06.c":57:13)
#loc55 = loc("CWE367_TOC_TOU__stat_06.c":58:48)
#loc56 = loc("CWE367_TOC_TOU__stat_06.c":58:26)
#loc57 = loc("CWE367_TOC_TOU__stat_06.c":58:33)
#loc58 = loc("CWE367_TOC_TOU__stat_06.c":58:43)
#loc59 = loc("CWE367_TOC_TOU__stat_06.c":58:17)
#loc60 = loc("CWE367_TOC_TOU__stat_06.c":61:13)
#loc61 = loc("CWE367_TOC_TOU__stat_06.c":64:13)
#loc62 = loc("CWE367_TOC_TOU__stat_06.c":61:22)
#loc63 = loc("CWE367_TOC_TOU__stat_06.c":61:17)
#loc64 = loc("CWE367_TOC_TOU__stat_06.c":61:49)
#loc65 = loc("CWE367_TOC_TOU__stat_06.c":61:48)
#loc66 = loc("CWE367_TOC_TOU__stat_06.c":62:13)
#loc67 = loc("CWE367_TOC_TOU__stat_06.c":63:17)
#loc68 = loc("CWE367_TOC_TOU__stat_06.c":63:22)
#loc69 = loc("CWE367_TOC_TOU__stat_06.c":65:30)
#loc70 = loc("CWE367_TOC_TOU__stat_06.c":65:40)
#loc71 = loc("CWE367_TOC_TOU__stat_06.c":65:25)
#loc72 = loc("CWE367_TOC_TOU__stat_06.c":65:13)
#loc73 = loc("CWE367_TOC_TOU__stat_06.c":65:46)
#loc74 = loc("CWE367_TOC_TOU__stat_06.c":66:13)
#loc75 = loc("CWE367_TOC_TOU__stat_06.c":69:13)
#loc76 = loc("CWE367_TOC_TOU__stat_06.c":66:17)
#loc77 = loc("CWE367_TOC_TOU__stat_06.c":66:30)
#loc78 = loc("CWE367_TOC_TOU__stat_06.c":66:29)
#loc79 = loc("CWE367_TOC_TOU__stat_06.c":67:13)
#loc80 = loc("CWE367_TOC_TOU__stat_06.c":68:17)
#loc81 = loc("CWE367_TOC_TOU__stat_06.c":68:22)
#loc82 = loc("CWE367_TOC_TOU__stat_06.c":70:13)
#loc83 = loc("CWE367_TOC_TOU__stat_06.c":73:13)
#loc84 = loc("CWE367_TOC_TOU__stat_06.c":70:23)
#loc85 = loc("CWE367_TOC_TOU__stat_06.c":70:50)
#loc86 = loc("CWE367_TOC_TOU__stat_06.c":70:72)
#loc87 = loc("CWE367_TOC_TOU__stat_06.c":70:17)
#loc88 = loc("CWE367_TOC_TOU__stat_06.c":70:79)
#loc89 = loc("CWE367_TOC_TOU__stat_06.c":70:78)
#loc90 = loc("CWE367_TOC_TOU__stat_06.c":71:13)
#loc91 = loc("CWE367_TOC_TOU__stat_06.c":72:17)
#loc92 = loc("CWE367_TOC_TOU__stat_06.c":72:22)
#loc93 = loc("CWE367_TOC_TOU__stat_06.c":74:13)
#loc94 = loc("CWE367_TOC_TOU__stat_06.c":77:13)
#loc95 = loc("CWE367_TOC_TOU__stat_06.c":74:17)
#loc96 = loc("CWE367_TOC_TOU__stat_06.c":74:30)
#loc97 = loc("CWE367_TOC_TOU__stat_06.c":74:29)
#loc98 = loc("CWE367_TOC_TOU__stat_06.c":75:13)
#loc99 = loc("CWE367_TOC_TOU__stat_06.c":76:23)
#loc100 = loc("CWE367_TOC_TOU__stat_06.c":76:17)
#loc101 = loc("CWE367_TOC_TOU__stat_06.c":163:1)
#loc102 = loc("CWE367_TOC_TOU__stat_06.c":167:1)
#loc103 = loc("CWE367_TOC_TOU__stat_06.c":165:5)
#loc104 = loc("CWE367_TOC_TOU__stat_06.c":165:11)
#loc105 = loc("CWE367_TOC_TOU__stat_06.c":166:5)
#loc106 = loc("CWE367_TOC_TOU__stat_06.c":166:11)
#loc107 = loc("/usr/include/stdlib.h":575:1)
#loc108 = loc("/usr/include/stdlib.h":575:41)
#loc109 = loc("/usr/include/time.h":76:1)
#loc110 = loc("/usr/include/time.h":76:38)
#loc111 = loc("CWE367_TOC_TOU__stat_06.c":183:15)
#loc112 = loc("CWE367_TOC_TOU__stat_06.c":185:15)
#loc113 = loc("CWE367_TOC_TOU__stat_06.c":188:15)
#loc114 = loc("CWE367_TOC_TOU__stat_06.c":190:15)
#loc115 = loc("CWE367_TOC_TOU__stat_06.c":178:1)
#loc116 = loc("CWE367_TOC_TOU__stat_06.c":193:1)
#loc121 = loc("CWE367_TOC_TOU__stat_06.c":179:1)
#loc122 = loc("CWE367_TOC_TOU__stat_06.c":181:27)
#loc123 = loc("CWE367_TOC_TOU__stat_06.c":181:22)
#loc124 = loc("CWE367_TOC_TOU__stat_06.c":181:5)
#loc125 = loc("CWE367_TOC_TOU__stat_06.c":183:5)
#loc126 = loc("CWE367_TOC_TOU__stat_06.c":184:5)
#loc127 = loc("CWE367_TOC_TOU__stat_06.c":184:34)
#loc128 = loc("CWE367_TOC_TOU__stat_06.c":185:5)
#loc129 = loc("CWE367_TOC_TOU__stat_06.c":188:5)
#loc130 = loc("CWE367_TOC_TOU__stat_06.c":189:5)
#loc131 = loc("CWE367_TOC_TOU__stat_06.c":189:33)
#loc132 = loc("CWE367_TOC_TOU__stat_06.c":190:5)
#loc133 = loc("CWE367_TOC_TOU__stat_06.c":192:12)
#loc134 = loc("CWE367_TOC_TOU__stat_06.c":192:5)
#loc135 = loc("CWE367_TOC_TOU__stat_06.c":92:19)
#loc136 = loc("CWE367_TOC_TOU__stat_06.c":115:33)
#loc137 = loc("CWE367_TOC_TOU__stat_06.c":87:1)
#loc138 = loc("CWE367_TOC_TOU__stat_06.c":125:1)
#loc139 = loc("CWE367_TOC_TOU__stat_06.c":89:5)
#loc140 = loc("CWE367_TOC_TOU__stat_06.c":124:5)
#loc141 = loc("CWE367_TOC_TOU__stat_06.c":89:8)
#loc142 = loc("CWE367_TOC_TOU__stat_06.c":89:27)
#loc143 = loc("CWE367_TOC_TOU__stat_06.c":90:5)
#loc144 = loc("CWE367_TOC_TOU__stat_06.c":93:5)
#loc145 = loc("CWE367_TOC_TOU__stat_06.c":95:5)
#loc146 = loc("CWE367_TOC_TOU__stat_06.c":92:9)
#loc147 = loc("CWE367_TOC_TOU__stat_06.c":96:9)
#loc148 = loc("CWE367_TOC_TOU__stat_06.c":123:9)
#loc149 = loc("CWE367_TOC_TOU__stat_06.c":97:13)
#loc150 = loc("CWE367_TOC_TOU__stat_06.c":97:34)
#loc151 = loc("CWE367_TOC_TOU__stat_06.c":98:13)
#loc152 = loc("CWE367_TOC_TOU__stat_06.c":98:29)
#loc153 = loc("CWE367_TOC_TOU__stat_06.c":98:28)
#loc154 = loc("CWE367_TOC_TOU__stat_06.c":99:13)
#loc155 = loc("CWE367_TOC_TOU__stat_06.c":104:13)
#loc156 = loc("CWE367_TOC_TOU__stat_06.c":99:23)
#loc157 = loc("CWE367_TOC_TOU__stat_06.c":99:33)
#loc158 = loc("CWE367_TOC_TOU__stat_06.c":99:38)
#loc159 = loc("CWE367_TOC_TOU__stat_06.c":99:17)
#loc160 = loc("CWE367_TOC_TOU__stat_06.c":99:48)
#loc161 = loc("CWE367_TOC_TOU__stat_06.c":100:13)
#loc162 = loc("CWE367_TOC_TOU__stat_06.c":101:27)
#loc163 = loc("CWE367_TOC_TOU__stat_06.c":101:17)
#loc164 = loc("CWE367_TOC_TOU__stat_06.c":103:31)
#loc165 = loc("CWE367_TOC_TOU__stat_06.c":103:26)
#loc166 = loc("CWE367_TOC_TOU__stat_06.c":103:17)
#loc167 = loc("CWE367_TOC_TOU__stat_06.c":105:13)
#loc168 = loc("CWE367_TOC_TOU__stat_06.c":108:13)
#loc169 = loc("CWE367_TOC_TOU__stat_06.c":105:17)
#loc170 = loc("CWE367_TOC_TOU__stat_06.c":105:24)
#loc171 = loc("CWE367_TOC_TOU__stat_06.c":105:36)
#loc172 = loc("CWE367_TOC_TOU__stat_06.c":106:13)
#loc173 = loc("CWE367_TOC_TOU__stat_06.c":107:48)
#loc174 = loc("CWE367_TOC_TOU__stat_06.c":107:26)
#loc175 = loc("CWE367_TOC_TOU__stat_06.c":107:33)
#loc176 = loc("CWE367_TOC_TOU__stat_06.c":107:43)
#loc177 = loc("CWE367_TOC_TOU__stat_06.c":107:17)
#loc178 = loc("CWE367_TOC_TOU__stat_06.c":110:30)
#loc179 = loc("CWE367_TOC_TOU__stat_06.c":110:40)
#loc180 = loc("CWE367_TOC_TOU__stat_06.c":110:25)
#loc181 = loc("CWE367_TOC_TOU__stat_06.c":110:13)
#loc182 = loc("CWE367_TOC_TOU__stat_06.c":110:46)
#loc183 = loc("CWE367_TOC_TOU__stat_06.c":111:13)
#loc184 = loc("CWE367_TOC_TOU__stat_06.c":114:13)
#loc185 = loc("CWE367_TOC_TOU__stat_06.c":111:17)
#loc186 = loc("CWE367_TOC_TOU__stat_06.c":111:30)
#loc187 = loc("CWE367_TOC_TOU__stat_06.c":111:29)
#loc188 = loc("CWE367_TOC_TOU__stat_06.c":112:13)
#loc189 = loc("CWE367_TOC_TOU__stat_06.c":113:17)
#loc190 = loc("CWE367_TOC_TOU__stat_06.c":113:22)
#loc191 = loc("CWE367_TOC_TOU__stat_06.c":115:13)
#loc192 = loc("CWE367_TOC_TOU__stat_06.c":118:13)
#loc193 = loc("CWE367_TOC_TOU__stat_06.c":115:23)
#loc194 = loc("CWE367_TOC_TOU__stat_06.c":115:51)
#loc195 = loc("CWE367_TOC_TOU__stat_06.c":115:74)
#loc196 = loc("CWE367_TOC_TOU__stat_06.c":115:17)
#loc197 = loc("CWE367_TOC_TOU__stat_06.c":115:81)
#loc198 = loc("CWE367_TOC_TOU__stat_06.c":115:80)
#loc199 = loc("CWE367_TOC_TOU__stat_06.c":116:13)
#loc200 = loc("CWE367_TOC_TOU__stat_06.c":117:17)
#loc201 = loc("CWE367_TOC_TOU__stat_06.c":117:22)
#loc202 = loc("CWE367_TOC_TOU__stat_06.c":119:13)
#loc203 = loc("CWE367_TOC_TOU__stat_06.c":122:13)
#loc204 = loc("CWE367_TOC_TOU__stat_06.c":119:17)
#loc205 = loc("CWE367_TOC_TOU__stat_06.c":119:30)
#loc206 = loc("CWE367_TOC_TOU__stat_06.c":119:29)
#loc207 = loc("CWE367_TOC_TOU__stat_06.c":120:13)
#loc208 = loc("CWE367_TOC_TOU__stat_06.c":121:23)
#loc209 = loc("CWE367_TOC_TOU__stat_06.c":121:17)
#loc210 = loc("CWE367_TOC_TOU__stat_06.c":128:1)
#loc211 = loc("CWE367_TOC_TOU__stat_06.c":161:1)
#loc212 = loc("CWE367_TOC_TOU__stat_06.c":130:5)
#loc213 = loc("CWE367_TOC_TOU__stat_06.c":160:5)
#loc214 = loc("CWE367_TOC_TOU__stat_06.c":130:8)
#loc215 = loc("CWE367_TOC_TOU__stat_06.c":130:27)
#loc216 = loc("CWE367_TOC_TOU__stat_06.c":131:5)
#loc217 = loc("CWE367_TOC_TOU__stat_06.c":132:9)
#loc218 = loc("CWE367_TOC_TOU__stat_06.c":159:9)
#loc219 = loc("CWE367_TOC_TOU__stat_06.c":133:13)
#loc220 = loc("CWE367_TOC_TOU__stat_06.c":133:34)
#loc221 = loc("CWE367_TOC_TOU__stat_06.c":134:13)
#loc222 = loc("CWE367_TOC_TOU__stat_06.c":134:29)
#loc223 = loc("CWE367_TOC_TOU__stat_06.c":134:28)
#loc224 = loc("CWE367_TOC_TOU__stat_06.c":135:13)
#loc225 = loc("CWE367_TOC_TOU__stat_06.c":140:13)
#loc226 = loc("CWE367_TOC_TOU__stat_06.c":135:23)
#loc227 = loc("CWE367_TOC_TOU__stat_06.c":135:33)
#loc228 = loc("CWE367_TOC_TOU__stat_06.c":135:38)
#loc229 = loc("CWE367_TOC_TOU__stat_06.c":135:17)
#loc230 = loc("CWE367_TOC_TOU__stat_06.c":135:48)
#loc231 = loc("CWE367_TOC_TOU__stat_06.c":136:13)
#loc232 = loc("CWE367_TOC_TOU__stat_06.c":137:27)
#loc233 = loc("CWE367_TOC_TOU__stat_06.c":137:17)
#loc234 = loc("CWE367_TOC_TOU__stat_06.c":139:31)
#loc235 = loc("CWE367_TOC_TOU__stat_06.c":139:26)
#loc236 = loc("CWE367_TOC_TOU__stat_06.c":139:17)
#loc237 = loc("CWE367_TOC_TOU__stat_06.c":141:13)
#loc238 = loc("CWE367_TOC_TOU__stat_06.c":144:13)
#loc239 = loc("CWE367_TOC_TOU__stat_06.c":141:17)
#loc240 = loc("CWE367_TOC_TOU__stat_06.c":141:24)
#loc241 = loc("CWE367_TOC_TOU__stat_06.c":141:36)
#loc242 = loc("CWE367_TOC_TOU__stat_06.c":142:13)
#loc243 = loc("CWE367_TOC_TOU__stat_06.c":143:48)
#loc244 = loc("CWE367_TOC_TOU__stat_06.c":143:26)
#loc245 = loc("CWE367_TOC_TOU__stat_06.c":143:33)
#loc246 = loc("CWE367_TOC_TOU__stat_06.c":143:43)
#loc247 = loc("CWE367_TOC_TOU__stat_06.c":143:17)
#loc248 = loc("CWE367_TOC_TOU__stat_06.c":146:30)
#loc249 = loc("CWE367_TOC_TOU__stat_06.c":146:40)
#loc250 = loc("CWE367_TOC_TOU__stat_06.c":146:25)
#loc251 = loc("CWE367_TOC_TOU__stat_06.c":146:13)
#loc252 = loc("CWE367_TOC_TOU__stat_06.c":146:46)
#loc253 = loc("CWE367_TOC_TOU__stat_06.c":147:13)
#loc254 = loc("CWE367_TOC_TOU__stat_06.c":150:13)
#loc255 = loc("CWE367_TOC_TOU__stat_06.c":147:17)
#loc256 = loc("CWE367_TOC_TOU__stat_06.c":147:30)
#loc257 = loc("CWE367_TOC_TOU__stat_06.c":147:29)
#loc258 = loc("CWE367_TOC_TOU__stat_06.c":148:13)
#loc259 = loc("CWE367_TOC_TOU__stat_06.c":149:17)
#loc260 = loc("CWE367_TOC_TOU__stat_06.c":149:22)
#loc261 = loc("CWE367_TOC_TOU__stat_06.c":151:13)
#loc262 = loc("CWE367_TOC_TOU__stat_06.c":154:13)
#loc263 = loc("CWE367_TOC_TOU__stat_06.c":151:23)
#loc264 = loc("CWE367_TOC_TOU__stat_06.c":151:33)
#loc265 = loc("CWE367_TOC_TOU__stat_06.c":151:51)
#loc266 = loc("CWE367_TOC_TOU__stat_06.c":151:74)
#loc267 = loc("CWE367_TOC_TOU__stat_06.c":151:17)
#loc268 = loc("CWE367_TOC_TOU__stat_06.c":151:81)
#loc269 = loc("CWE367_TOC_TOU__stat_06.c":151:80)
#loc270 = loc("CWE367_TOC_TOU__stat_06.c":152:13)
#loc271 = loc("CWE367_TOC_TOU__stat_06.c":153:17)
#loc272 = loc("CWE367_TOC_TOU__stat_06.c":153:22)
#loc273 = loc("CWE367_TOC_TOU__stat_06.c":155:13)
#loc274 = loc("CWE367_TOC_TOU__stat_06.c":158:13)
#loc275 = loc("CWE367_TOC_TOU__stat_06.c":155:17)
#loc276 = loc("CWE367_TOC_TOU__stat_06.c":155:30)
#loc277 = loc("CWE367_TOC_TOU__stat_06.c":155:29)
#loc278 = loc("CWE367_TOC_TOU__stat_06.c":156:13)
#loc279 = loc("CWE367_TOC_TOU__stat_06.c":157:23)
#loc280 = loc("CWE367_TOC_TOU__stat_06.c":157:17)
#loc281 = loc(fused[#loc1, #loc2])
#loc282 = loc(fused[#loc3, #loc4])
#loc283 = loc(fused[#loc5, #loc6])
#loc284 = loc(fused[#loc8, #loc9])
#loc285 = loc(fused[#loc10, #loc11])
#loc286 = loc(fused[#loc12, #loc13])
#loc287 = loc(fused[#loc14, #loc15])
#loc288 = loc(fused[#loc16, #loc17])
#loc289 = loc(fused[#loc19, #loc20])
#loc290 = loc(fused[#loc21, #loc22])
#loc291 = loc(fused[#loc23, #loc24])
#loc292 = loc(fused[#loc25, #loc26])
#loc293 = loc(fused[#loc27, #loc24])
#loc294 = loc(fused[#loc28, #loc29])
#loc295 = loc(fused[#loc30, #loc31])
#loc296 = loc(fused[#loc32, #loc33])
#loc297 = loc(fused[#loc34, #loc35])
#loc298 = loc(fused[#loc37, #loc38])
#loc299 = loc(fused[#loc42, #loc43])
#loc300 = loc(fused[#loc44, #loc38])
#loc301 = loc(fused[#loc48, #loc46])
#loc302 = loc(fused[#loc49, #loc50])
#loc303 = loc(fused[#loc51, #loc53])
#loc304 = loc(fused[#loc54, #loc50])
#loc305 = loc(fused[#loc56, #loc58])
#loc306 = loc(fused[#loc59, #loc55])
#loc307 = loc(fused[#loc60, #loc61])
#loc308 = loc(fused[#loc63, #loc64])
#loc309 = loc(fused[#loc66, #loc61])
#loc310 = loc(fused[#loc72, #loc73])
#loc311 = loc(fused[#loc74, #loc75])
#loc312 = loc(fused[#loc76, #loc77])
#loc313 = loc(fused[#loc79, #loc75])
#loc314 = loc(fused[#loc82, #loc83])
#loc315 = loc(fused[#loc85, #loc86])
#loc316 = loc(fused[#loc87, #loc88])
#loc317 = loc(fused[#loc90, #loc83])
#loc318 = loc(fused[#loc93, #loc94])
#loc319 = loc(fused[#loc95, #loc96])
#loc320 = loc(fused[#loc98, #loc94])
#loc321 = loc(fused[#loc101, #loc102])
#loc322 = loc(fused[#loc103, #loc104])
#loc323 = loc(fused[#loc105, #loc106])
#loc324 = loc(fused[#loc107, #loc108])
#loc325 = loc(fused[#loc109, #loc110])
#loc326 = loc(fused[#loc115, #loc116])
#loc329 = loc(fused[#loc126, #loc127])
#loc330 = loc(fused[#loc130, #loc131])
#loc331 = loc(fused[#loc134, #loc133])
#loc332 = loc(fused[#loc137, #loc138])
#loc333 = loc(fused[#loc139, #loc140])
#loc334 = loc(fused[#loc141, #loc142])
#loc335 = loc(fused[#loc143, #loc144, #loc145, #loc140])
#loc336 = loc(fused[#loc147, #loc148])
#loc337 = loc(fused[#loc149, #loc150])
#loc338 = loc(fused[#loc151, #loc152])
#loc339 = loc(fused[#loc154, #loc155])
#loc340 = loc(fused[#loc159, #loc160])
#loc341 = loc(fused[#loc161, #loc155])
#loc342 = loc(fused[#loc166, #loc164])
#loc343 = loc(fused[#loc167, #loc168])
#loc344 = loc(fused[#loc169, #loc171])
#loc345 = loc(fused[#loc172, #loc168])
#loc346 = loc(fused[#loc174, #loc176])
#loc347 = loc(fused[#loc177, #loc173])
#loc348 = loc(fused[#loc181, #loc182])
#loc349 = loc(fused[#loc183, #loc184])
#loc350 = loc(fused[#loc185, #loc186])
#loc351 = loc(fused[#loc188, #loc184])
#loc352 = loc(fused[#loc191, #loc192])
#loc353 = loc(fused[#loc194, #loc195])
#loc354 = loc(fused[#loc196, #loc197])
#loc355 = loc(fused[#loc199, #loc192])
#loc356 = loc(fused[#loc202, #loc203])
#loc357 = loc(fused[#loc204, #loc205])
#loc358 = loc(fused[#loc207, #loc203])
#loc359 = loc(fused[#loc210, #loc211])
#loc360 = loc(fused[#loc212, #loc213])
#loc361 = loc(fused[#loc214, #loc215])
#loc362 = loc(fused[#loc216, #loc213])
#loc363 = loc(fused[#loc217, #loc218])
#loc364 = loc(fused[#loc219, #loc220])
#loc365 = loc(fused[#loc221, #loc222])
#loc366 = loc(fused[#loc224, #loc225])
#loc367 = loc(fused[#loc229, #loc230])
#loc368 = loc(fused[#loc231, #loc225])
#loc369 = loc(fused[#loc236, #loc234])
#loc370 = loc(fused[#loc237, #loc238])
#loc371 = loc(fused[#loc239, #loc241])
#loc372 = loc(fused[#loc242, #loc238])
#loc373 = loc(fused[#loc244, #loc246])
#loc374 = loc(fused[#loc247, #loc243])
#loc375 = loc(fused[#loc251, #loc252])
#loc376 = loc(fused[#loc253, #loc254])
#loc377 = loc(fused[#loc255, #loc256])
#loc378 = loc(fused[#loc258, #loc254])
#loc379 = loc(fused[#loc261, #loc262])
#loc380 = loc(fused[#loc265, #loc266])
#loc381 = loc(fused[#loc267, #loc268])
#loc382 = loc(fused[#loc270, #loc262])
#loc383 = loc(fused[#loc273, #loc274])
#loc384 = loc(fused[#loc275, #loc276])
#loc385 = loc(fused[#loc278, #loc274])
