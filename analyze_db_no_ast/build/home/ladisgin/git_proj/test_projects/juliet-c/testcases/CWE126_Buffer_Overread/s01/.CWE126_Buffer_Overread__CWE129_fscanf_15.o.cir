!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc232)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc233)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc234)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func private  @printIntLine(!s32i) loc(#loc235)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fscanf_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc237)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc17)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc21)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc22)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc233)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc22)
        cir.break loc(#loc24)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc25)
        cir.break loc(#loc26)
      }
      ] loc(#loc19)
    } loc(#loc239)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc29)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc242)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc242)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc242)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc37)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc244)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc38)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc43)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc43)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc44)
            } else {
              %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc11)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc45)
            } loc(#loc245)
          } loc(#loc243)
        } loc(#loc241)
        cir.break loc(#loc46)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc48)
        cir.break loc(#loc49)
      }
      ] loc(#loc27)
    } loc(#loc240)
    cir.return loc(#loc13)
  } loc(#loc236)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fscanf_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc51)
  } loc(#loc246)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc60)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc252)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc66)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc70)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc71)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc233)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc72)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc73)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc73)
        %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc71)
        cir.break loc(#loc74)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc76)
        cir.break loc(#loc77)
      }
      ] loc(#loc68)
    } loc(#loc254)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc80)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc81)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc81)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc82)
        cir.break loc(#loc83)
      },
      case (default) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc257)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc257)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc257)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc91)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc259)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc92)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc95)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc260)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc97)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc93)
                cir.yield %16 : !cir.bool loc(#loc93)
              }, false {
                %16 = cir.const #false loc(#loc93)
                cir.yield %16 : !cir.bool loc(#loc93)
              }) : (!cir.bool) -> !cir.bool loc(#loc93)
              cir.yield %15 : !cir.bool loc(#loc93)
            }, false {
              %11 = cir.const #false loc(#loc93)
              cir.yield %11 : !cir.bool loc(#loc93)
            }) : (!cir.bool) -> !cir.bool loc(#loc93)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
              %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc102)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc102)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc103)
            } else {
              %11 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc60)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc60)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc104)
            } loc(#loc261)
          } loc(#loc258)
        } loc(#loc256)
        cir.break loc(#loc105)
      }
      ] loc(#loc78)
    } loc(#loc255)
    cir.return loc(#loc62)
  } loc(#loc251)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc263)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc111)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc115)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc116)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc233)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc117)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc118)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc118)
        %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc116)
        cir.break loc(#loc119)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc120)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc120)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc121)
        cir.break loc(#loc122)
      }
      ] loc(#loc113)
    } loc(#loc265)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc125)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc268)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc268)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc268)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc133)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc270)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc134)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc137)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc271)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc139)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc135)
                cir.yield %16 : !cir.bool loc(#loc135)
              }, false {
                %16 = cir.const #false loc(#loc135)
                cir.yield %16 : !cir.bool loc(#loc135)
              }) : (!cir.bool) -> !cir.bool loc(#loc135)
              cir.yield %15 : !cir.bool loc(#loc135)
            }, false {
              %11 = cir.const #false loc(#loc135)
              cir.yield %11 : !cir.bool loc(#loc135)
            }) : (!cir.bool) -> !cir.bool loc(#loc135)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc144)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc144)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc145)
            } else {
              %11 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc146)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc146)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc147)
            } loc(#loc272)
          } loc(#loc269)
        } loc(#loc267)
        cir.break loc(#loc148)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc149)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc149)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc150)
        cir.break loc(#loc151)
      }
      ] loc(#loc123)
    } loc(#loc266)
    cir.return loc(#loc107)
  } loc(#loc262)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc157)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc161)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc162)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc162)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc163)
        cir.break loc(#loc164)
      },
      case (default) {
        %4 = cir.const #cir.int<7> : !s32i loc(#loc165)
        cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
        cir.break loc(#loc167)
      }
      ] loc(#loc159)
    } loc(#loc276)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc170)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc280)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc280)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc280)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc178)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc282)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc179)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc183)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc184)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc184)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc184)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc185)
            } else {
              %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc186)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc186)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc187)
            } loc(#loc283)
          } loc(#loc281)
        } loc(#loc279)
        cir.break loc(#loc188)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc189)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc189)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc190)
        cir.break loc(#loc191)
      }
      ] loc(#loc168)
    } loc(#loc278)
    cir.return loc(#loc153)
  } loc(#loc273)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc285)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc196)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc197)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc201)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.const #cir.int<7> : !s32i loc(#loc202)
        cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
        cir.break loc(#loc204)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc205)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc205)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc206)
        cir.break loc(#loc207)
      }
      ] loc(#loc199)
    } loc(#loc287)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc210)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc291)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc291)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc291)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc217)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc218)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc293)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc219)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc224)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc224)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc224)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc225)
            } else {
              %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc226)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc226)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc227)
            } loc(#loc294)
          } loc(#loc292)
        } loc(#loc290)
        cir.break loc(#loc228)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc229)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc229)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc230)
        cir.break loc(#loc231)
      }
      ] loc(#loc208)
    } loc(#loc289)
    cir.return loc(#loc193)
  } loc(#loc284)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":31:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":35:19)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":51:23)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":22:1)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":60:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":24:5)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":24:9)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":26:13)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":26:12)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":26:5)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":27:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":37:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":27:12)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":31:9)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":31:16)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":32:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":35:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":36:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":38:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":59:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":38:12)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":41:5)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":53:5)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":42:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":42:30)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":45:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":52:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":45:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":45:21)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":45:18)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":46:9)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":48:9)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":50:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":47:33)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":47:26)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":47:13)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":51:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":54:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":57:19)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":57:9)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":58:9)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":230:1)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":236:1)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":232:5)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":232:14)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":233:5)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":233:14)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":234:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":234:14)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":235:5)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":235:14)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":99:23)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":67:1)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":104:1)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":69:5)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":69:9)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":71:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":71:12)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":71:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":72:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":82:5)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":72:12)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":76:9)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":76:16)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":76:23)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":77:9)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":80:19)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":80:9)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":81:9)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":83:5)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":103:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":83:12)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":87:19)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":87:9)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":88:9)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":90:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":101:5)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":91:9)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":91:30)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:9)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":100:9)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:13)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:21)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:18)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:23)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:26)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:34)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:36)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:31)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":94:9)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":96:9)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":98:9)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":95:33)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":95:26)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":95:13)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":99:13)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":102:5)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":107:1)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":144:1)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":109:5)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":109:9)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":111:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":111:12)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":111:5)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":112:5)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":122:5)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":112:12)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":116:9)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":116:16)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":116:23)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":117:9)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":120:19)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":120:9)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":121:9)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":123:5)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":143:5)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":123:12)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":126:5)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":137:5)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":127:9)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":127:30)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":136:9)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:21)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:18)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:23)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:26)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:34)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:36)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:31)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":130:9)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":132:9)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":134:9)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":131:33)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":131:26)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":131:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":135:23)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":135:13)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":138:5)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":141:19)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":141:9)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":142:9)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":147:1)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":186:1)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":149:5)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":149:9)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":151:13)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":151:12)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":151:5)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":152:5)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":163:5)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":152:12)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":156:19)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":156:9)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":157:9)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":161:16)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":161:9)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":162:9)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":164:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":185:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":164:12)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":167:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":179:5)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":168:9)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":168:30)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":171:9)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":178:9)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":171:13)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":171:21)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":171:18)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":172:9)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":174:9)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":176:9)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":173:33)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":173:26)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":173:13)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":177:23)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":177:13)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":180:5)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":183:19)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":183:9)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":184:9)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":189:1)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":228:1)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":191:5)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":191:9)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":193:13)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":193:12)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":193:5)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":194:5)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":205:5)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":194:12)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":199:16)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":199:9)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":200:9)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":203:19)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":203:9)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":204:9)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":206:5)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":227:5)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":206:12)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":209:5)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":221:5)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":210:9)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":210:30)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":213:9)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":220:9)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":213:13)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":213:21)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":213:18)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":214:9)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":216:9)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":218:9)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":215:33)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":215:26)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":215:13)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":219:23)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":219:13)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":222:5)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":225:19)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":225:9)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":226:9)
#loc232 = loc(fused[#loc1, #loc2])
#loc233 = loc(fused[#loc3, #loc4])
#loc234 = loc(fused[#loc6, #loc7])
#loc235 = loc(fused[#loc9, #loc10])
#loc236 = loc(fused[#loc12, #loc13])
#loc237 = loc(fused[#loc14, #loc15])
#loc238 = loc(fused[#loc18, #loc16])
#loc239 = loc(fused[#loc19, #loc20])
#loc240 = loc(fused[#loc27, #loc28])
#loc241 = loc(fused[#loc30, #loc31])
#loc242 = loc(fused[#loc32, #loc33])
#loc243 = loc(fused[#loc34, #loc35])
#loc244 = loc(fused[#loc36, #loc37])
#loc245 = loc(fused[#loc39, #loc40, #loc41, #loc35])
#loc246 = loc(fused[#loc50, #loc51])
#loc247 = loc(fused[#loc52, #loc53])
#loc248 = loc(fused[#loc54, #loc55])
#loc249 = loc(fused[#loc56, #loc57])
#loc250 = loc(fused[#loc58, #loc59])
#loc251 = loc(fused[#loc61, #loc62])
#loc252 = loc(fused[#loc63, #loc64])
#loc253 = loc(fused[#loc67, #loc65])
#loc254 = loc(fused[#loc68, #loc69])
#loc255 = loc(fused[#loc78, #loc79])
#loc256 = loc(fused[#loc84, #loc85])
#loc257 = loc(fused[#loc86, #loc87])
#loc258 = loc(fused[#loc88, #loc89])
#loc259 = loc(fused[#loc90, #loc91])
#loc260 = loc(fused[#loc94, #loc96])
#loc261 = loc(fused[#loc98, #loc99, #loc100, #loc89])
#loc262 = loc(fused[#loc106, #loc107])
#loc263 = loc(fused[#loc108, #loc109])
#loc264 = loc(fused[#loc112, #loc110])
#loc265 = loc(fused[#loc113, #loc114])
#loc266 = loc(fused[#loc123, #loc124])
#loc267 = loc(fused[#loc126, #loc127])
#loc268 = loc(fused[#loc128, #loc129])
#loc269 = loc(fused[#loc130, #loc131])
#loc270 = loc(fused[#loc132, #loc133])
#loc271 = loc(fused[#loc136, #loc138])
#loc272 = loc(fused[#loc140, #loc141, #loc142, #loc131])
#loc273 = loc(fused[#loc152, #loc153])
#loc274 = loc(fused[#loc154, #loc155])
#loc275 = loc(fused[#loc158, #loc156])
#loc276 = loc(fused[#loc159, #loc160])
#loc277 = loc(fused[#loc166, #loc165])
#loc278 = loc(fused[#loc168, #loc169])
#loc279 = loc(fused[#loc171, #loc172])
#loc280 = loc(fused[#loc173, #loc174])
#loc281 = loc(fused[#loc175, #loc176])
#loc282 = loc(fused[#loc177, #loc178])
#loc283 = loc(fused[#loc180, #loc181, #loc182, #loc176])
#loc284 = loc(fused[#loc192, #loc193])
#loc285 = loc(fused[#loc194, #loc195])
#loc286 = loc(fused[#loc198, #loc196])
#loc287 = loc(fused[#loc199, #loc200])
#loc288 = loc(fused[#loc203, #loc202])
#loc289 = loc(fused[#loc208, #loc209])
#loc290 = loc(fused[#loc211, #loc212])
#loc291 = loc(fused[#loc213, #loc214])
#loc292 = loc(fused[#loc215, #loc216])
#loc293 = loc(fused[#loc217, #loc218])
#loc294 = loc(fused[#loc220, #loc221, #loc222, #loc216])
