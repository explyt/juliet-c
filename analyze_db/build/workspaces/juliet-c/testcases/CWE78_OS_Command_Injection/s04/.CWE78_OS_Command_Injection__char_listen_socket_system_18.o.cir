!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc227)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_system_18_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc228)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc229)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc230)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc231)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc232)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc233)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc234)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc235)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc236)
  cir.func private @close(!s32i) -> !s32i loc(#loc237)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc238)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc239)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc27)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc240)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc228)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc243)
    %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc244)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc245)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc246)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc247)
    %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc248)
    %8 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_system_18_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc228)
    cir.copy %8 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc228)
    %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
    cir.goto "source" loc(#loc250)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc50)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc41)
    cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc43)
    cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc51)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc51)
    cir.store %16, %7 : !u64i, !cir.ptr<!u64i> loc(#loc248)
    cir.scope {
      cir.do {
        cir.scope {
          %17 = cir.const #cir.int<2> : !s32i loc(#loc57)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc58)
          %19 = cir.const #cir.int<6> : !s32i loc(#loc59)
          %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
          cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc253)
          cir.scope {
            %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc65)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc66)
            %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc66)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc255)
            cir.if %77 {
              cir.break loc(#loc68)
            } loc(#loc256)
          } loc(#loc254)
          %21 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc257)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc71)
          %23 = cir.const #cir.int<16> : !u64i loc(#loc258)
          cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc259)
          %24 = cir.const #cir.int<2> : !s32i loc(#loc76)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc76)
          %26 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
          cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc260)
          %27 = cir.const #cir.int<0> : !s32i loc(#loc79)
          %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc79)
          %29 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
          %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
          cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc261)
          %31 = cir.const #cir.int<27015> : !s32i loc(#loc83)
          %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc83)
          %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc84)
          %34 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
          cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc262)
          cir.scope {
            %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %75 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc264)
            %76 = cir.const #cir.int<16> : !u64i loc(#loc265)
            %77 = cir.cast(integral, %76 : !u64i), !u32i loc(#loc265)
            %78 = cir.call @bind(%74, %75, %77) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc95)
            %79 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc96)
            %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc266)
            cir.if %81 {
              cir.break loc(#loc98)
            } loc(#loc267)
          } loc(#loc263)
          cir.scope {
            %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            %75 = cir.const #cir.int<5> : !s32i loc(#loc102)
            %76 = cir.call @listen(%74, %75) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc103)
            %77 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc104)
            %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc269)
            cir.if %79 {
              cir.break loc(#loc106)
            } loc(#loc270)
          } loc(#loc268)
          %35 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc107)
          %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc108)
          %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc109)
          %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc110)
          cir.store %38, %6 : !s32i, !cir.ptr<!s32i> loc(#loc271)
          cir.scope {
            %74 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc116)
            %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc116)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc273)
            cir.if %77 {
              cir.break loc(#loc118)
            } loc(#loc274)
          } loc(#loc272)
          %39 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc119)
          %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
          %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc121)
          %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc122)
          %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc275)
          %44 = cir.const #cir.int<1> : !u64i loc(#loc276)
          %45 = cir.const #cir.int<100> : !s32i loc(#loc127)
          %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc127)
          %47 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc128)
          %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc277)
          %49 = cir.const #cir.int<1> : !s32i loc(#loc129)
          %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc129)
          %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc278)
          %52 = cir.binop(mul, %44, %51) : !u64i loc(#loc279)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc131)
          %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc132)
          %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc132)
          cir.store %55, %2 : !s32i, !cir.ptr<!s32i> loc(#loc280)
          cir.scope {
            %74 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc138)
            %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc138)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc282)
            %78 = cir.ternary(%77, true {
              %79 = cir.const #true loc(#loc139)
              cir.yield %79 : !cir.bool loc(#loc139)
            }, false {
              %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              %80 = cir.const #cir.int<0> : !s32i loc(#loc141)
              %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc283)
              %82 = cir.ternary(%81, true {
                %83 = cir.const #true loc(#loc139)
                cir.yield %83 : !cir.bool loc(#loc139)
              }, false {
                %83 = cir.const #false loc(#loc139)
                cir.yield %83 : !cir.bool loc(#loc139)
              }) : (!cir.bool) -> !cir.bool loc(#loc139)
              cir.yield %82 : !cir.bool loc(#loc139)
            }) : (!cir.bool) -> !cir.bool loc(#loc139)
            cir.if %78 {
              cir.break loc(#loc143)
            } loc(#loc284)
          } loc(#loc281)
          %56 = cir.const #cir.int<0> : !s32i loc(#loc144)
          %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc144)
          %58 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
          %59 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc146)
          %60 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc147)
          %62 = cir.const #cir.int<1> : !u64i loc(#loc285)
          %63 = cir.binop(div, %61, %62) : !u64i loc(#loc286)
          %64 = cir.binop(add, %59, %63) : !u64i loc(#loc287)
          %65 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc150)
          cir.store %57, %65 : !s8i, !cir.ptr<!s8i> loc(#loc288)
          %66 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc151)
          %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
          %68 = cir.const #cir.int<13> : !s32i loc(#loc153)
          %69 = cir.call @strchr(%67, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc151)
          cir.store %69, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc289)
          cir.scope {
            %74 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
            %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc158)
            cir.if %75 {
              %76 = cir.const #cir.int<0> : !s32i loc(#loc160)
              %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc160)
              %78 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
              cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc292)
            } loc(#loc291)
          } loc(#loc290)
          %70 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc163)
          %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
          %72 = cir.const #cir.int<10> : !s32i loc(#loc165)
          %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc163)
          cir.store %73, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
          cir.scope {
            %74 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
            %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc170)
            cir.if %75 {
              %76 = cir.const #cir.int<0> : !s32i loc(#loc172)
              %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc172)
              %78 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
              cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc296)
            } loc(#loc295)
          } loc(#loc294)
        } loc(#loc252)
        cir.yield loc(#loc54)
      } while {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc175)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc175)
        cir.condition(%18) loc(#loc175)
      } loc(#loc251)
    } loc(#loc251)
    cir.scope {
      %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc178)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc179)
      %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc179)
      %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc298)
      cir.if %20 {
        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc181)
        %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc182)
      } loc(#loc299)
    } loc(#loc297)
    cir.scope {
      %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc186)
      %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc186)
      %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc301)
      cir.if %20 {
        %21 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc188)
        %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc189)
      } loc(#loc302)
    } loc(#loc300)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
      %18 = cir.call @system(%17) : (!cir.ptr<!s8i>) -> !s32i loc(#loc193)
      %19 = cir.const #cir.int<0> : !s32i loc(#loc194)
      %20 = cir.cmp(ne, %18, %19) : !s32i, !cir.bool loc(#loc304)
      cir.if %20 {
        %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc27)
        %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc27)
        cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc196)
        %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc197)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc198)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc197)
      } loc(#loc305)
    } loc(#loc303)
    cir.return loc(#loc31)
  } loc(#loc241)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc307)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc201)
    cir.return loc(#loc200)
  } loc(#loc306)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc308)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc205)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc310)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc227)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc227)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc227)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc210)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc311)
    cir.goto "source" loc(#loc312)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc214)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc215)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc216)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc205)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc205)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc215)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
      %10 = cir.call @system(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc220)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc221)
      %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc314)
      cir.if %12 {
        %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc223)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc223)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc224)
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc225)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc226)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc225)
      } loc(#loc315)
    } loc(#loc313)
    cir.return loc(#loc207)
  } loc(#loc309)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_18.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":158:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":158:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":59:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":59:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":402:1)
#loc10 = loc("/usr/include/netinet/in.h":403:40)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/stdlib.h":923:1)
#loc24 = loc("/usr/include/stdlib.h":923:41)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":145:19)
#loc28 = loc("/usr/include/stdlib.h":756:1)
#loc29 = loc("/usr/include/stdlib.h":756:70)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":56:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":148:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":58:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":58:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":68:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":68:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":69:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":69:28)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":70:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":70:15)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":71:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":71:31)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":72:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":72:31)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":73:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":73:37)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":60:12)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":60:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":61:5)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":61:10)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":62:1)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":73:26)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":73:33)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":74:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":126:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":75:9)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":125:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":84:35)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":84:44)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":84:57)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":84:28)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":84:13)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":84:68)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":85:13)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":88:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":85:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":85:33)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":86:13)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":87:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":89:20)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":89:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":89:30)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":89:33)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":89:47)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":89:13)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":89:48)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":90:34)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":90:13)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":91:39)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":91:13)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":92:38)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":92:32)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":92:13)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":92:46)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":93:13)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":96:13)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":93:22)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":93:54)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":93:55)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":93:64)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":93:78)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":93:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":93:84)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":94:13)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":95:17)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":97:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":100:13)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":97:24)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":97:38)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":97:17)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":97:57)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":98:13)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":99:17)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":101:35)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":101:49)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":101:55)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":101:28)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":101:13)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":101:59)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":102:13)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":105:13)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":102:17)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":102:33)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":103:13)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":104:17)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:31)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:54)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:61)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:59)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:45)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:68)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:71)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:82)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:87)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:93)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:103)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:104)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:107)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:26)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:13)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":107:108)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":108:13)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":111:13)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":108:17)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":108:31)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":108:44)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":108:47)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":108:61)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":109:13)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":110:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":113:57)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":113:13)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":113:18)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":113:28)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":113:41)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":113:52)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":113:53)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":115:23)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":115:30)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":115:36)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":115:13)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":115:40)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":116:13)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":119:13)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":116:17)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":117:13)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":118:28)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":118:18)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":118:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":120:23)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":120:30)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":120:36)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":120:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":120:40)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":121:13)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":124:13)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":121:17)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":122:13)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":123:28)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":123:18)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":123:17)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":126:16)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":127:9)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":130:9)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":127:13)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":127:29)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":128:9)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":129:26)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":129:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":131:9)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":134:9)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":131:13)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":131:29)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":132:9)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":133:26)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":133:13)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":143:5)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":147:5)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":143:16)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":143:9)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":143:25)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":144:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":145:9)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":146:9)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":146:14)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":172:1)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":175:1)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":174:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":174:13)
#loc203 = loc("/usr/include/string.h":149:1)
#loc204 = loc("/usr/include/string.h":150:14)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":163:18)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":155:1)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":170:1)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":157:5)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":157:12)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":159:12)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":159:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":160:5)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":160:10)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":161:1)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":163:5)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":163:12)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":165:5)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":169:5)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":165:16)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":165:9)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":165:25)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":166:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":167:19)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":167:9)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":168:9)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_18.c":168:14)
#loc227 = loc(fused[#loc1, #loc2])
#loc228 = loc(fused[#loc3, #loc4])
#loc229 = loc(fused[#loc5, #loc6])
#loc230 = loc(fused[#loc7, #loc8])
#loc231 = loc(fused[#loc9, #loc10])
#loc232 = loc(fused[#loc11, #loc12])
#loc233 = loc(fused[#loc13, #loc14])
#loc234 = loc(fused[#loc15, #loc16])
#loc235 = loc(fused[#loc17, #loc18])
#loc236 = loc(fused[#loc19, #loc20])
#loc237 = loc(fused[#loc21, #loc22])
#loc238 = loc(fused[#loc23, #loc24])
#loc239 = loc(fused[#loc25, #loc26])
#loc240 = loc(fused[#loc28, #loc29])
#loc241 = loc(fused[#loc30, #loc31])
#loc242 = loc(fused[#loc32, #loc33])
#loc243 = loc(fused[#loc34, #loc35])
#loc244 = loc(fused[#loc36, #loc37])
#loc245 = loc(fused[#loc38, #loc39])
#loc246 = loc(fused[#loc40, #loc41])
#loc247 = loc(fused[#loc42, #loc43])
#loc248 = loc(fused[#loc44, #loc45])
#loc249 = loc(fused[#loc47, #loc46])
#loc250 = loc(fused[#loc48, #loc49])
#loc251 = loc(fused[#loc53, #loc54])
#loc252 = loc(fused[#loc55, #loc56])
#loc253 = loc(fused[#loc61, #loc62])
#loc254 = loc(fused[#loc63, #loc64])
#loc255 = loc(fused[#loc65, #loc66])
#loc256 = loc(fused[#loc67, #loc64])
#loc257 = loc(fused[#loc69, #loc70])
#loc258 = loc(fused[#loc72, #loc73])
#loc259 = loc(fused[#loc74, #loc75])
#loc260 = loc(fused[#loc78, #loc76])
#loc261 = loc(fused[#loc82, #loc79])
#loc262 = loc(fused[#loc86, #loc87])
#loc263 = loc(fused[#loc88, #loc89])
#loc264 = loc(fused[#loc91, #loc92])
#loc265 = loc(fused[#loc93, #loc94])
#loc266 = loc(fused[#loc95, #loc96])
#loc267 = loc(fused[#loc97, #loc89])
#loc268 = loc(fused[#loc99, #loc100])
#loc269 = loc(fused[#loc103, #loc104])
#loc270 = loc(fused[#loc105, #loc100])
#loc271 = loc(fused[#loc111, #loc112])
#loc272 = loc(fused[#loc113, #loc114])
#loc273 = loc(fused[#loc115, #loc116])
#loc274 = loc(fused[#loc117, #loc114])
#loc275 = loc(fused[#loc123, #loc124])
#loc276 = loc(fused[#loc125, #loc126])
#loc277 = loc(fused[#loc127, #loc128])
#loc278 = loc(fused[#loc127, #loc129])
#loc279 = loc(fused[#loc125, #loc130])
#loc280 = loc(fused[#loc133, #loc134])
#loc281 = loc(fused[#loc135, #loc136])
#loc282 = loc(fused[#loc137, #loc138])
#loc283 = loc(fused[#loc140, #loc141])
#loc284 = loc(fused[#loc142, #loc136])
#loc285 = loc(fused[#loc148, #loc149])
#loc286 = loc(fused[#loc147, #loc149])
#loc287 = loc(fused[#loc146, #loc149])
#loc288 = loc(fused[#loc145, #loc144])
#loc289 = loc(fused[#loc154, #loc155])
#loc290 = loc(fused[#loc156, #loc157])
#loc291 = loc(fused[#loc159, #loc157])
#loc292 = loc(fused[#loc162, #loc160])
#loc293 = loc(fused[#loc166, #loc167])
#loc294 = loc(fused[#loc168, #loc169])
#loc295 = loc(fused[#loc171, #loc169])
#loc296 = loc(fused[#loc174, #loc172])
#loc297 = loc(fused[#loc176, #loc177])
#loc298 = loc(fused[#loc178, #loc179])
#loc299 = loc(fused[#loc180, #loc177])
#loc300 = loc(fused[#loc183, #loc184])
#loc301 = loc(fused[#loc185, #loc186])
#loc302 = loc(fused[#loc187, #loc184])
#loc303 = loc(fused[#loc190, #loc191])
#loc304 = loc(fused[#loc193, #loc194])
#loc305 = loc(fused[#loc195, #loc191])
#loc306 = loc(fused[#loc199, #loc200])
#loc307 = loc(fused[#loc201, #loc202])
#loc308 = loc(fused[#loc203, #loc204])
#loc309 = loc(fused[#loc206, #loc207])
#loc310 = loc(fused[#loc208, #loc209])
#loc311 = loc(fused[#loc211, #loc210])
#loc312 = loc(fused[#loc212, #loc213])
#loc313 = loc(fused[#loc217, #loc218])
#loc314 = loc(fused[#loc220, #loc221])
#loc315 = loc(fused[#loc222, #loc218])
