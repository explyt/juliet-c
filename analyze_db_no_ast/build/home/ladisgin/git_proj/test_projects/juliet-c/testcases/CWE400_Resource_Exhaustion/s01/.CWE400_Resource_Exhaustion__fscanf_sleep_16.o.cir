!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc94)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc95)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc96)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc97)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc99)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc20)
        cir.condition(%4) loc(#loc20)
      } do {
        %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc21)
        %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc95)
        %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc21)
        cir.break loc(#loc23)
      } loc(#loc101)
    } loc(#loc101)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc26)
        cir.condition(%4) loc(#loc26)
      } do {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc27)
        %5 = cir.call @usleep(%4) : (!u32i) -> !s32i loc(#loc28)
        %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc10)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc29)
        cir.break loc(#loc30)
      } loc(#loc102)
    } loc(#loc102)
    cir.return loc(#loc12)
  } loc(#loc98)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc104)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc105)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc103)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc37)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc107)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc44)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc48)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc48)
        cir.condition(%4) loc(#loc48)
      } do {
        %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc49)
        %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc95)
        %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc51)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc51)
        %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc49)
        cir.break loc(#loc52)
      } loc(#loc109)
    } loc(#loc109)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc55)
        cir.condition(%4) loc(#loc55)
      } do {
        cir.scope {
          %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
          %4 = cir.const #cir.int<0> : !s32i loc(#loc59)
          %5 = cir.cmp(gt, %3, %4) : !s32i, !s32i loc(#loc112)
          %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc60)
          %7 = cir.ternary(%6, true {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
            %9 = cir.const #cir.int<2000> : !s32i loc(#loc63)
            %10 = cir.cmp(le, %8, %9) : !s32i, !s32i loc(#loc113)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc64)
            %12 = cir.ternary(%11, true {
              %13 = cir.const #true loc(#loc61)
              cir.yield %13 : !cir.bool loc(#loc61)
            }, false {
              %13 = cir.const #false loc(#loc61)
              cir.yield %13 : !cir.bool loc(#loc61)
            }) : (!cir.bool) -> !cir.bool loc(#loc61)
            cir.yield %12 : !cir.bool loc(#loc61)
          }, false {
            %8 = cir.const #false loc(#loc61)
            cir.yield %8 : !cir.bool loc(#loc61)
          }) : (!cir.bool) -> !cir.bool loc(#loc61)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
            %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc68)
            %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc69)
            %11 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc37)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
          } else {
            %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc38)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc38)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc71)
          } loc(#loc114)
        } loc(#loc111)
        cir.break loc(#loc72)
      } loc(#loc110)
    } loc(#loc110)
    cir.return loc(#loc40)
  } loc(#loc106)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc116)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc78)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc82)
        cir.condition(%4) loc(#loc82)
      } do {
        %3 = cir.const #cir.int<20> : !s32i loc(#loc83)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
        cir.break loc(#loc85)
      } loc(#loc118)
    } loc(#loc118)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc88)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc88)
        cir.condition(%4) loc(#loc88)
      } do {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
        %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc89)
        %5 = cir.call @usleep(%4) : (!u32i) -> !s32i loc(#loc90)
        %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc91)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        cir.break loc(#loc93)
      } loc(#loc120)
    } loc(#loc120)
    cir.return loc(#loc74)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":38:23)
#loc6 = loc("/usr/include/unistd.h":480:1)
#loc7 = loc("/usr/include/unistd.h":480:43)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":45:19)
#loc11 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":30:1)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":48:1)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":32:5)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":32:9)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":34:14)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":34:13)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":34:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":35:5)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":40:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":35:11)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":38:9)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":38:16)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":39:9)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":41:5)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":47:5)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":41:11)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":44:15)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":44:9)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":45:9)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":46:9)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":103:1)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":107:1)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":105:5)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":105:13)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":106:5)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":106:13)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":72:23)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":76:23)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":55:1)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":80:1)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":57:5)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":57:9)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":59:14)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":59:13)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":59:5)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":60:5)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":65:5)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":60:11)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":63:9)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":63:16)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":63:23)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":64:9)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":66:5)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":79:5)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":66:11)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":69:9)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":77:9)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":69:13)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":69:21)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":69:19)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":69:23)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":69:26)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":69:35)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":69:32)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":70:9)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":73:9)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":75:9)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":71:19)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":71:13)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":72:13)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":76:13)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":78:9)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":83:1)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":101:1)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":85:5)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":85:9)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":87:14)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":87:13)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":87:5)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":88:5)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":93:5)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":88:11)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":91:17)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":91:9)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":92:9)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":94:5)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":100:5)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":94:11)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":97:15)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":97:9)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":98:19)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":98:9)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_16.c":99:9)
#loc94 = loc(fused[#loc1, #loc2])
#loc95 = loc(fused[#loc3, #loc4])
#loc96 = loc(fused[#loc6, #loc7])
#loc97 = loc(fused[#loc8, #loc9])
#loc98 = loc(fused[#loc11, #loc12])
#loc99 = loc(fused[#loc13, #loc14])
#loc100 = loc(fused[#loc17, #loc15])
#loc101 = loc(fused[#loc18, #loc19])
#loc102 = loc(fused[#loc24, #loc25])
#loc103 = loc(fused[#loc31, #loc32])
#loc104 = loc(fused[#loc33, #loc34])
#loc105 = loc(fused[#loc35, #loc36])
#loc106 = loc(fused[#loc39, #loc40])
#loc107 = loc(fused[#loc41, #loc42])
#loc108 = loc(fused[#loc45, #loc43])
#loc109 = loc(fused[#loc46, #loc47])
#loc110 = loc(fused[#loc53, #loc54])
#loc111 = loc(fused[#loc56, #loc57])
#loc112 = loc(fused[#loc58, #loc59])
#loc113 = loc(fused[#loc62, #loc63])
#loc114 = loc(fused[#loc65, #loc66, #loc67, #loc57])
#loc115 = loc(fused[#loc73, #loc74])
#loc116 = loc(fused[#loc75, #loc76])
#loc117 = loc(fused[#loc79, #loc77])
#loc118 = loc(fused[#loc80, #loc81])
#loc119 = loc(fused[#loc84, #loc83])
#loc120 = loc(fused[#loc86, #loc87])
