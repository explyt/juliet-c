!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc51 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":86:10)
#loc52 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":86:14)
#loc53 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":86:20)
#loc54 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":86:32)
#loc116 = loc(fused[#loc51, #loc52])
#loc117 = loc(fused[#loc53, #loc54])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc100)
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s %s\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAA\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc104)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc105)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc107)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc107)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc108)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc109)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc24)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc6)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc6)
    %12 = cir.call @sprintf(%7, %9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc24)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // pred: ^bb3
    cir.br ^bb8 loc(#loc20)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc110)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc30)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc32)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc32)
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc33)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc33)
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc34)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc34)
    %22 = cir.call @sprintf(%15, %17, %19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc30)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc16)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc16)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc10)
  } loc(#loc103)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc112)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc38)
  } loc(#loc111)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc113)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc48)
  cir.func @main(%arg0: !s32i loc(fused[#loc51, #loc52]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc53, #loc54])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc117)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc50)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc55)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc56)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc57)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc57)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc58)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc45)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %8 = cir.get_global @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc118)
    cir.call @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12_good() : () -> () loc(#loc60)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc46)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc47)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %13 = cir.get_global @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12_bad() : () -> () loc(#loc64)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc48)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    cir.return %17 : !s32i loc(#loc120)
  } loc(#loc115)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc122)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc125)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc125)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc77)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc77)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc126)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc127)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc84)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc86)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc86)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc87)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc87)
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc88)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc88)
    %14 = cir.call @sprintf(%7, %9, %11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc84)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // pred: ^bb3
    cir.br ^bb8 loc(#loc80)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc128)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc93)
    %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc95)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc95)
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc96)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc96)
    %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc97)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc97)
    %24 = cir.call @sprintf(%17, %19, %21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc93)
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.br ^bb7 loc(#loc92)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc76)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc76)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc70)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":365:1)
#loc4 = loc("/usr/include/stdio.h":366:45)
#loc5 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":30:27)
#loc6 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":30:36)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":23:1)
#loc10 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":43:1)
#loc11 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":28:13)
#loc12 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":28:32)
#loc13 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":37:13)
#loc14 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":37:32)
#loc15 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":25:5)
#loc16 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":42:5)
#loc17 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":25:8)
#loc18 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":25:33)
#loc19 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":26:5)
#loc20 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":33:5)
#loc21 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":35:5)
#loc22 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":27:9)
#loc23 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":32:9)
#loc24 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":30:13)
#loc25 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":30:21)
#loc26 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":31:23)
#loc27 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":31:13)
#loc28 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":36:9)
#loc29 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":41:9)
#loc30 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":39:13)
#loc31 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":39:21)
#loc32 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":39:27)
#loc33 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":39:36)
#loc34 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":39:51)
#loc35 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":40:23)
#loc36 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":40:13)
#loc37 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":72:1)
#loc38 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":75:1)
#loc39 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":74:5)
#loc40 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":74:11)
#loc41 = loc("/usr/include/stdlib.h":575:1)
#loc42 = loc("/usr/include/stdlib.h":575:41)
#loc43 = loc("/usr/include/time.h":76:1)
#loc44 = loc("/usr/include/time.h":76:38)
#loc45 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":91:15)
#loc46 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":93:15)
#loc47 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":96:15)
#loc48 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":98:15)
#loc49 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":86:1)
#loc50 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":101:1)
#loc55 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":87:1)
#loc56 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":89:27)
#loc57 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":89:22)
#loc58 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":89:5)
#loc59 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":91:5)
#loc60 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":92:5)
#loc61 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":92:76)
#loc62 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":93:5)
#loc63 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":96:5)
#loc64 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":97:5)
#loc65 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":97:75)
#loc66 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":98:5)
#loc67 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":100:12)
#loc68 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":100:5)
#loc69 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":50:1)
#loc70 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":70:1)
#loc71 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":55:13)
#loc72 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":55:32)
#loc73 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":64:13)
#loc74 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":64:32)
#loc75 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":52:5)
#loc76 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":69:5)
#loc77 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":52:8)
#loc78 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":52:33)
#loc79 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":53:5)
#loc80 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":60:5)
#loc81 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":62:5)
#loc82 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":54:9)
#loc83 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":59:9)
#loc84 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":57:13)
#loc85 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":57:21)
#loc86 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":57:27)
#loc87 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":57:36)
#loc88 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":57:51)
#loc89 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":58:23)
#loc90 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":58:13)
#loc91 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":63:9)
#loc92 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":68:9)
#loc93 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":66:13)
#loc94 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":66:21)
#loc95 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":66:27)
#loc96 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":66:36)
#loc97 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":66:51)
#loc98 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":67:23)
#loc99 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_12.c":67:13)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc11, #loc12])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc17, #loc18])
#loc108 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc109 = loc(fused[#loc22, #loc23])
#loc110 = loc(fused[#loc28, #loc29])
#loc111 = loc(fused[#loc37, #loc38])
#loc112 = loc(fused[#loc39, #loc40])
#loc113 = loc(fused[#loc41, #loc42])
#loc114 = loc(fused[#loc43, #loc44])
#loc115 = loc(fused[#loc49, #loc50])
#loc118 = loc(fused[#loc60, #loc61])
#loc119 = loc(fused[#loc64, #loc65])
#loc120 = loc(fused[#loc68, #loc67])
#loc121 = loc(fused[#loc69, #loc70])
#loc122 = loc(fused[#loc71, #loc72])
#loc123 = loc(fused[#loc73, #loc74])
#loc124 = loc(fused[#loc75, #loc76])
#loc125 = loc(fused[#loc77, #loc78])
#loc126 = loc(fused[#loc79, #loc80, #loc81, #loc76])
#loc127 = loc(fused[#loc82, #loc83])
#loc128 = loc(fused[#loc91, #loc92])
