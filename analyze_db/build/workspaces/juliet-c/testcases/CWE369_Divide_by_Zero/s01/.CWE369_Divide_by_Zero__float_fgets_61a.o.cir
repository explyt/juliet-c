!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE369_Divide_by_Zero__float_fgets_61b_badSource(!cir.float) -> !cir.float loc(#loc79)
  cir.func private @printIntLine(!s32i) loc(#loc80)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_61_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc82)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc9)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc83)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc11)
    %3 = cir.call @CWE369_Divide_by_Zero__float_fgets_61b_badSource(%2) : (!cir.float) -> !cir.float loc(#loc12)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc84)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc86)
      %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc19)
      %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc20)
      %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc20)
      %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc87)
      %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc87)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc86)
      %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc22)
    } loc(#loc85)
    cir.return loc(#loc6)
  } loc(#loc81)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_61_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc89)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc90)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc88)
  cir.func private @CWE369_Divide_by_Zero__float_fgets_61b_goodG2BSource(!cir.float) -> !cir.float loc(#loc91)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc93)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc35)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc94)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc37)
    %3 = cir.call @CWE369_Divide_by_Zero__float_fgets_61b_goodG2BSource(%2) : (!cir.float) -> !cir.float loc(#loc38)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc95)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc97)
      %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc45)
      %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc46)
      %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc46)
      %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc98)
      %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc98)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc97)
      %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc47)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc48)
    } loc(#loc96)
    cir.return loc(#loc32)
  } loc(#loc92)
  cir.func private @CWE369_Divide_by_Zero__float_fgets_61b_goodB2GSource(!cir.float) -> !cir.float loc(#loc99)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc102)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc58)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc103)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc60)
    %3 = cir.call @CWE369_Divide_by_Zero__float_fgets_61b_goodB2GSource(%2) : (!cir.float) -> !cir.float loc(#loc61)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc104)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc66)
      %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc66)
      %6 = cir.fabs %5 : !cir.double loc(#loc66)
      %7 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc67)
      %8 = cir.cmp(gt, %6, %7) : !cir.double, !cir.bool loc(#loc106)
      cir.if %8 {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc108)
        %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc74)
        %11 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc75)
        %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc75)
        %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc109)
        %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc109)
        cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc108)
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc76)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc77)
      } else {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc53)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc53)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
      } loc(#loc107)
    } loc(#loc105)
    cir.return loc(#loc55)
  } loc(#loc101)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_61a.c":0:0)
#loc1 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":27:1)
#loc2 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":27:66)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":29:1)
#loc6 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":40:1)
#loc7 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":31:5)
#loc8 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":31:11)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":33:12)
#loc10 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":33:5)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":34:61)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":34:12)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":34:5)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":34:65)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":35:5)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":39:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":37:9)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":37:40)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":37:28)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":37:36)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":38:22)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":38:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":83:1)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":87:1)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":85:5)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":85:13)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":86:5)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":86:13)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":47:1)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":47:70)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":49:1)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":60:1)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":51:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":51:11)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":53:12)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":53:5)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":54:65)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":54:12)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":54:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":54:69)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":55:5)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":59:5)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":57:9)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":57:40)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":57:28)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":57:36)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":58:22)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":58:9)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":63:1)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":63:70)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":79:19)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":65:1)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":81:1)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":67:5)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":67:11)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":69:12)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":69:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":70:65)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":70:12)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":70:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":70:69)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":72:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":80:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":72:13)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":72:21)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":72:8)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":73:5)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":76:5)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":78:5)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":74:9)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":74:40)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":74:28)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":74:36)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":75:22)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":75:9)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_61a.c":79:9)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc3, #loc4])
#loc81 = loc(fused[#loc5, #loc6])
#loc82 = loc(fused[#loc7, #loc8])
#loc83 = loc(fused[#loc10, #loc9])
#loc84 = loc(fused[#loc13, #loc14])
#loc85 = loc(fused[#loc15, #loc16])
#loc86 = loc(fused[#loc17, #loc18])
#loc87 = loc(fused[#loc19, #loc20])
#loc88 = loc(fused[#loc23, #loc24])
#loc89 = loc(fused[#loc25, #loc26])
#loc90 = loc(fused[#loc27, #loc28])
#loc91 = loc(fused[#loc29, #loc30])
#loc92 = loc(fused[#loc31, #loc32])
#loc93 = loc(fused[#loc33, #loc34])
#loc94 = loc(fused[#loc36, #loc35])
#loc95 = loc(fused[#loc39, #loc40])
#loc96 = loc(fused[#loc41, #loc42])
#loc97 = loc(fused[#loc43, #loc44])
#loc98 = loc(fused[#loc45, #loc46])
#loc99 = loc(fused[#loc49, #loc50])
#loc100 = loc(fused[#loc51, #loc52])
#loc101 = loc(fused[#loc54, #loc55])
#loc102 = loc(fused[#loc56, #loc57])
#loc103 = loc(fused[#loc59, #loc58])
#loc104 = loc(fused[#loc62, #loc63])
#loc105 = loc(fused[#loc64, #loc65])
#loc106 = loc(fused[#loc68, #loc67])
#loc107 = loc(fused[#loc69, #loc70, #loc71, #loc65])
#loc108 = loc(fused[#loc72, #loc73])
#loc109 = loc(fused[#loc74, #loc75])
