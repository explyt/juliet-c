!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":182:10)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":182:14)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":182:20)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":182:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc312 = loc(fused[#loc213, #loc214])
#loc313 = loc(fused[#loc215, #loc216])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc229)
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_013badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc230)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc231)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc232)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc234)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc235)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc236)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc237)
  cir.func private @close(!s32i) -> !s32i loc(#loc238)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc239)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc24)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc240)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_013badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc230)
    %2 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_013badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc230)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc230)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc245)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc246)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc247)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc248)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc249)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc42)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc248)
      %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc45)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc45)
      cir.store %13, %8 : !u64i, !cir.ptr<!u64i> loc(#loc249)
      cir.scope {
        cir.do {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc49)
          %15 = cir.const #cir.int<1> : !u32i loc(#loc50)
          %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc50)
          %17 = cir.const #cir.int<6> : !u32i loc(#loc51)
          %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc51)
          %19 = cir.call @socket(%14, %16, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
          cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc251)
          cir.scope {
            %69 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc57)
            %70 = cir.const #cir.int<1> : !s32i loc(#loc58)
            %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc58)
            %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc253)
            cir.if %72 {
              cir.break loc(#loc60)
            } loc(#loc254)
          } loc(#loc252)
          %20 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc255)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc63)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc256)
          cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc257)
          %23 = cir.const #cir.int<2> : !s32i loc(#loc68)
          %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc68)
          %25 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc258)
          %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
          %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
          %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
          %29 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
          %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
          cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc259)
          %31 = cir.const #cir.int<27015> : !s32i loc(#loc76)
          %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc76)
          %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc77)
          %34 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
          cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc260)
          cir.scope {
            %69 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            %70 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc262)
            %71 = cir.const #cir.int<16> : !u64i loc(#loc263)
            %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc263)
            %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
            %74 = cir.const #cir.int<1> : !s32i loc(#loc89)
            %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc89)
            %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc264)
            cir.if %76 {
              cir.break loc(#loc91)
            } loc(#loc265)
          } loc(#loc261)
          %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc92)
          %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
          %37 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc94)
          %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc95)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc266)
          %40 = cir.const #cir.int<1> : !u64i loc(#loc267)
          %41 = cir.const #cir.int<4096> : !s32i loc(#loc100)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc100)
          %43 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc101)
          %44 = cir.binop(sub, %42, %43) : !u64i loc(#loc268)
          %45 = cir.const #cir.int<1> : !s32i loc(#loc102)
          %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc102)
          %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc269)
          %48 = cir.binop(mul, %40, %47) : !u64i loc(#loc270)
          %49 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %50 = cir.call @recv(%35, %39, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc105)
          %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc105)
          cir.store %51, %4 : !s32i, !cir.ptr<!s32i> loc(#loc271)
          cir.scope {
            %69 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %70 = cir.const #cir.int<1> : !s32i loc(#loc111)
            %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc111)
            %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc273)
            %73 = cir.ternary(%72, true {
              %74 = cir.const #true loc(#loc112)
              cir.yield %74 : !cir.bool loc(#loc112)
            }, false {
              %74 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              %75 = cir.const #cir.int<0> : !s32i loc(#loc114)
              %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc274)
              %77 = cir.ternary(%76, true {
                %78 = cir.const #true loc(#loc112)
                cir.yield %78 : !cir.bool loc(#loc112)
              }, false {
                %78 = cir.const #false loc(#loc112)
                cir.yield %78 : !cir.bool loc(#loc112)
              }) : (!cir.bool) -> !cir.bool loc(#loc112)
              cir.yield %77 : !cir.bool loc(#loc112)
            }) : (!cir.bool) -> !cir.bool loc(#loc112)
            cir.if %73 {
              cir.break loc(#loc116)
            } loc(#loc275)
          } loc(#loc272)
          %52 = cir.const #cir.int<0> : !s8i loc(#loc117)
          %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
          %54 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc119)
          %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc120)
          %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc120)
          %57 = cir.const #cir.int<1> : !u64i loc(#loc276)
          %58 = cir.binop(div, %56, %57) : !u64i loc(#loc277)
          %59 = cir.binop(add, %54, %58) : !u64i loc(#loc278)
          %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc123)
          cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc279)
          %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
          %62 = cir.const #cir.int<13> : !s8i loc(#loc125)
          %63 = cir.cast(integral, %62 : !s8i), !s32i loc(#loc125)
          %64 = cir.call @strchr(%61, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
          cir.store %64, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
          cir.scope {
            %69 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
            %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc131)
            cir.if %70 {
              %71 = cir.const #cir.int<0> : !s8i loc(#loc133)
              %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc283)
            } loc(#loc282)
          } loc(#loc281)
          %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
          %66 = cir.const #cir.int<10> : !s8i loc(#loc137)
          %67 = cir.cast(integral, %66 : !s8i), !s32i loc(#loc137)
          %68 = cir.call @strchr(%65, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
          cir.store %68, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
          cir.scope {
            %69 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
            %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc143)
            cir.if %70 {
              %71 = cir.const #cir.int<0> : !s8i loc(#loc145)
              %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc287)
            } loc(#loc286)
          } loc(#loc285)
          cir.yield loc(#loc48)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc148)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc148)
          cir.condition(%15) loc(#loc148)
        } loc(#loc250)
      } loc(#loc250)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc151)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc152)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc152)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc289)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc155)
        } loc(#loc290)
      } loc(#loc288)
    } loc(#loc244)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc292)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc159)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc292)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc160)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc24)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc24)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc160)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc293)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc166)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc167)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc295)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc169)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc170)
        } loc(#loc296)
      } loc(#loc294)
    } loc(#loc291)
    cir.return loc(#loc28)
  } loc(#loc241)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc173)
  cir.func internal private @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc229)
    %2 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc229)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc229)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc178)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc180)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc173)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc173)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc180)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc302)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc185)
      cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc302)
      %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc186)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
      %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc188)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc188)
      %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc186)
      cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc303)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc193)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc194)
        %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc305)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc196)
          %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc197)
        } loc(#loc306)
      } loc(#loc304)
    } loc(#loc301)
    cir.return loc(#loc175)
  } loc(#loc298)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_014goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01L7goodG2BEv() : () -> () loc(#loc200)
    cir.return loc(#loc199)
  } loc(#loc307)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc308)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc309)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc210)
  cir.func @main(%arg0: !s32i loc(fused[#loc213, #loc214]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc215, #loc216])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc312)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc313)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc212)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc217)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc218)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc219)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc219)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc220)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc207)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc207)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_014goodEv() : () -> () loc(#loc222)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc208)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc223)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc209)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_013badEv() : () -> () loc(#loc225)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc210)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc227)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc314)
    cir.return %15 : !s32i loc(#loc314)
  } loc(#loc311)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":149:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":149:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":61:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":61:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":90:49)
#loc12 = loc("/usr/include/netinet/in.h":404:1)
#loc13 = loc("/usr/include/netinet/in.h":405:40)
#loc14 = loc("/usr/include/sys/socket.h":126:1)
#loc15 = loc("/usr/include/sys/socket.h":126:75)
#loc16 = loc("/usr/include/sys/socket.h":145:1)
#loc17 = loc("/usr/include/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":226:1)
#loc19 = loc("/usr/include/string.h":227:50)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/stdio.h":264:1)
#loc23 = loc("/usr/include/stdio.h":266:3)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":133:29)
#loc25 = loc("/usr/include/stdio.h":184:1)
#loc26 = loc("/usr/include/stdio.h":184:36)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":58:1)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":139:1)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":60:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":60:12)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":62:12)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":62:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":63:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":129:5)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":68:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":68:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":69:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":69:28)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":70:9)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":70:15)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":71:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":71:32)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":72:9)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":72:37)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":72:26)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":72:33)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":73:9)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":118:17)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":83:36)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":83:45)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":83:58)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":83:29)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":83:13)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":83:69)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":84:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":87:13)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":84:17)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":84:34)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":85:13)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":86:17)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":88:20)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":88:21)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":88:30)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":88:33)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":88:47)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":88:13)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":88:48)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":89:34)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":89:13)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":90:39)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":90:13)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":90:59)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":91:38)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":91:32)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":91:13)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":91:46)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":92:13)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":95:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":92:25)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":92:58)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":92:59)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":92:68)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":92:82)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":92:17)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":92:88)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":93:13)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":94:17)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:31)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:55)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:62)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:60)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:46)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:69)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:72)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:83)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:88)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:103)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:113)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:114)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:117)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:26)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:13)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":99:118)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":100:13)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":103:13)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":100:17)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":100:31)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":100:44)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":100:47)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":100:61)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":101:13)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":102:17)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":105:57)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":105:13)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":105:18)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":105:28)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":105:41)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":105:52)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":105:53)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":107:30)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":107:36)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":107:23)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":107:13)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":107:40)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":108:13)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":111:13)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":108:17)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":109:13)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":110:28)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":110:18)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":110:17)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":112:30)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":112:36)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":112:23)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":112:13)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":112:40)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":113:13)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":116:13)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":113:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":114:13)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":115:28)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":115:18)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":115:17)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":118:16)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":119:9)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":122:9)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":119:13)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":119:30)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":120:9)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":121:26)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":121:13)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":130:5)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":138:5)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":131:9)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":131:23)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":133:17)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":133:23)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":133:9)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":133:34)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":134:9)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":137:9)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":134:13)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":134:22)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":135:9)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":136:20)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":136:13)
#loc171 = loc("/usr/include/string.h":149:1)
#loc172 = loc("/usr/include/string.h":150:14)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":152:18)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":146:1)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":162:1)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":148:5)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":148:12)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":150:12)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":150:5)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":152:5)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":152:12)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":153:5)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":161:5)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":154:9)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":154:23)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":156:17)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":156:23)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":156:29)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":156:9)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":156:34)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":157:9)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":160:9)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":157:13)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":157:22)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":158:9)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":159:20)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":159:13)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":164:1)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":167:1)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":166:5)
#loc201 = loc("/usr/include/stdlib.h":575:1)
#loc202 = loc("/usr/include/stdlib.h":575:41)
#loc203 = loc("/usr/include/time.h":76:1)
#loc204 = loc("/usr/include/time.h":76:38)
#loc205 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc206 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":187:15)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":189:15)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":192:15)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":194:15)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":182:1)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":197:1)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":183:1)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":185:27)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":185:22)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":185:5)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":187:5)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":188:5)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":189:5)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":192:5)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":193:5)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":194:5)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":196:12)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_01.cpp":196:5)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc5, #loc6])
#loc232 = loc(fused[#loc7, #loc8])
#loc233 = loc(fused[#loc9, #loc10])
#loc234 = loc(fused[#loc12, #loc13])
#loc235 = loc(fused[#loc14, #loc15])
#loc236 = loc(fused[#loc16, #loc17])
#loc237 = loc(fused[#loc18, #loc19])
#loc238 = loc(fused[#loc20, #loc21])
#loc239 = loc(fused[#loc22, #loc23])
#loc240 = loc(fused[#loc25, #loc26])
#loc241 = loc(fused[#loc27, #loc28])
#loc242 = loc(fused[#loc29, #loc30])
#loc243 = loc(fused[#loc32, #loc31])
#loc244 = loc(fused[#loc33, #loc34])
#loc245 = loc(fused[#loc35, #loc36])
#loc246 = loc(fused[#loc37, #loc38])
#loc247 = loc(fused[#loc39, #loc40])
#loc248 = loc(fused[#loc41, #loc42])
#loc249 = loc(fused[#loc43, #loc44])
#loc250 = loc(fused[#loc47, #loc48])
#loc251 = loc(fused[#loc53, #loc54])
#loc252 = loc(fused[#loc55, #loc56])
#loc253 = loc(fused[#loc57, #loc58])
#loc254 = loc(fused[#loc59, #loc56])
#loc255 = loc(fused[#loc61, #loc62])
#loc256 = loc(fused[#loc64, #loc65])
#loc257 = loc(fused[#loc66, #loc67])
#loc258 = loc(fused[#loc70, #loc68])
#loc259 = loc(fused[#loc74, #loc75])
#loc260 = loc(fused[#loc79, #loc80])
#loc261 = loc(fused[#loc81, #loc82])
#loc262 = loc(fused[#loc84, #loc85])
#loc263 = loc(fused[#loc86, #loc87])
#loc264 = loc(fused[#loc88, #loc89])
#loc265 = loc(fused[#loc90, #loc82])
#loc266 = loc(fused[#loc96, #loc97])
#loc267 = loc(fused[#loc98, #loc99])
#loc268 = loc(fused[#loc100, #loc101])
#loc269 = loc(fused[#loc100, #loc102])
#loc270 = loc(fused[#loc98, #loc103])
#loc271 = loc(fused[#loc106, #loc107])
#loc272 = loc(fused[#loc108, #loc109])
#loc273 = loc(fused[#loc110, #loc111])
#loc274 = loc(fused[#loc113, #loc114])
#loc275 = loc(fused[#loc115, #loc109])
#loc276 = loc(fused[#loc121, #loc122])
#loc277 = loc(fused[#loc120, #loc122])
#loc278 = loc(fused[#loc119, #loc122])
#loc279 = loc(fused[#loc118, #loc117])
#loc280 = loc(fused[#loc127, #loc128])
#loc281 = loc(fused[#loc129, #loc130])
#loc282 = loc(fused[#loc132, #loc130])
#loc283 = loc(fused[#loc135, #loc133])
#loc284 = loc(fused[#loc139, #loc140])
#loc285 = loc(fused[#loc141, #loc142])
#loc286 = loc(fused[#loc144, #loc142])
#loc287 = loc(fused[#loc147, #loc145])
#loc288 = loc(fused[#loc149, #loc150])
#loc289 = loc(fused[#loc151, #loc152])
#loc290 = loc(fused[#loc153, #loc150])
#loc291 = loc(fused[#loc156, #loc157])
#loc292 = loc(fused[#loc158, #loc159])
#loc293 = loc(fused[#loc162, #loc163])
#loc294 = loc(fused[#loc164, #loc165])
#loc295 = loc(fused[#loc166, #loc167])
#loc296 = loc(fused[#loc168, #loc165])
#loc297 = loc(fused[#loc171, #loc172])
#loc298 = loc(fused[#loc174, #loc175])
#loc299 = loc(fused[#loc176, #loc177])
#loc300 = loc(fused[#loc179, #loc178])
#loc301 = loc(fused[#loc182, #loc183])
#loc302 = loc(fused[#loc184, #loc185])
#loc303 = loc(fused[#loc189, #loc190])
#loc304 = loc(fused[#loc191, #loc192])
#loc305 = loc(fused[#loc193, #loc194])
#loc306 = loc(fused[#loc195, #loc192])
#loc307 = loc(fused[#loc198, #loc199])
#loc308 = loc(fused[#loc201, #loc202])
#loc309 = loc(fused[#loc203, #loc204])
#loc310 = loc(fused[#loc205, #loc206])
#loc311 = loc(fused[#loc211, #loc212])
#loc314 = loc(fused[#loc228, #loc227])
