!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":27:23)
#loc8 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":27:31)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":53:27)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":53:35)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":73:27)
#loc51 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":73:35)
#loc81 = loc(fused[#loc7, #loc8])
#loc90 = loc(fused[#loc32, #loc33])
#loc96 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc78)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__strdup_char_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc81)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc83)
      %2 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc83)
      cir.store %2, %1 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc83)
      %3 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc14)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc15)
      %5 = cir.call @strdup(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc14)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
      cir.store %5, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc19)
    } loc(#loc82)
    cir.return loc(#loc6)
  } loc(#loc80)
  cir.func  @_ZN34CWE401_Memory_Leak__strdup_char_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc86)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc24)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
    cir.call @_ZN34CWE401_Memory_Leak__strdup_char_43L9badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc26)
    cir.return loc(#loc21)
  } loc(#loc85)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc88)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc29)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__strdup_char_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc32, #loc33])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc90)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc34)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc35)
    %3 = cir.const #cir.int<1> : !u64i loc(#loc35)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc35)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc35)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc35)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc36)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc37)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc29)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc29)
    %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.return loc(#loc31)
  } loc(#loc89)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__strdup_char_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc45)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    cir.call @_ZN34CWE401_Memory_Leak__strdup_char_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc47)
    cir.return loc(#loc42)
  } loc(#loc92)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__strdup_char_43L13goodB2GSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc50, #loc51])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc96)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc98)
      %2 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc98)
      cir.store %2, %1 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc98)
      %3 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc57)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc58)
      %5 = cir.call @strdup(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc57)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
      cir.store %5, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc61)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    } loc(#loc97)
    cir.return loc(#loc49)
  } loc(#loc95)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc100)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__strdup_char_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc69)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.call @_ZN34CWE401_Memory_Leak__strdup_char_43L13goodB2GSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc71)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc72)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
    cir.return loc(#loc66)
  } loc(#loc101)
  cir.func  @_ZN34CWE401_Memory_Leak__strdup_char_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN34CWE401_Memory_Leak__strdup_char_43L7goodG2BEv() : () -> () loc(#loc76)
    cir.call @_ZN34CWE401_Memory_Leak__strdup_char_43L7goodB2GEv() : () -> () loc(#loc77)
    cir.return loc(#loc75)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_43.cpp":0:0)
#loc1 = loc("/usr/include/string.h":187:1)
#loc2 = loc("/usr/include/string.h":188:35)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":27:1)
#loc6 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":36:1)
#loc9 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":28:1)
#loc10 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":29:5)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":35:5)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":30:9)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":30:27)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":32:16)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":32:23)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":32:9)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":32:31)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":34:19)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":34:9)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":38:1)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":46:1)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":40:5)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":40:12)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":41:12)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":41:5)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":42:5)
#loc27 = loc("/usr/include/string.h":141:1)
#loc28 = loc("/usr/include/string.h":142:14)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":58:18)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":53:1)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":60:1)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":54:1)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":56:20)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":56:5)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":58:5)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":58:12)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":59:15)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":59:5)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":62:1)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":70:1)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":64:5)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":64:12)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":65:12)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":65:5)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":66:5)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":73:1)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":82:1)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":74:1)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":75:5)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":81:5)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":76:9)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":76:27)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":78:16)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":78:23)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":78:9)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":78:31)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":80:19)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":80:9)
#loc63 = loc("/usr/include/stdlib.h":687:1)
#loc64 = loc("/usr/include/stdlib.h":687:32)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":84:1)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":91:1)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":86:5)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":86:12)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":87:12)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":87:5)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":88:5)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":90:5)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":90:10)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":93:1)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":97:1)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":95:5)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_43.cpp":96:5)
#loc78 = loc(fused[#loc1, #loc2])
#loc79 = loc(fused[#loc3, #loc4])
#loc80 = loc(fused[#loc5, #loc6])
#loc82 = loc(fused[#loc10, #loc11])
#loc83 = loc(fused[#loc12, #loc13])
#loc84 = loc(fused[#loc16, #loc17])
#loc85 = loc(fused[#loc20, #loc21])
#loc86 = loc(fused[#loc22, #loc23])
#loc87 = loc(fused[#loc25, #loc24])
#loc88 = loc(fused[#loc27, #loc28])
#loc89 = loc(fused[#loc30, #loc31])
#loc91 = loc(fused[#loc36, #loc35])
#loc92 = loc(fused[#loc41, #loc42])
#loc93 = loc(fused[#loc43, #loc44])
#loc94 = loc(fused[#loc46, #loc45])
#loc95 = loc(fused[#loc48, #loc49])
#loc97 = loc(fused[#loc53, #loc54])
#loc98 = loc(fused[#loc55, #loc56])
#loc99 = loc(fused[#loc59, #loc60])
#loc100 = loc(fused[#loc63, #loc64])
#loc101 = loc(fused[#loc65, #loc66])
#loc102 = loc(fused[#loc67, #loc68])
#loc103 = loc(fused[#loc70, #loc69])
#loc104 = loc(fused[#loc74, #loc75])
