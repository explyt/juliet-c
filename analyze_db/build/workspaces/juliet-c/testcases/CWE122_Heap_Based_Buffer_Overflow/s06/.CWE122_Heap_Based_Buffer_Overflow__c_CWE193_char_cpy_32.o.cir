!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc113)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc114)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc116)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc119)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc114)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc124)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc125)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc124)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc125)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc27)
    cir.store %6, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    cir.br ^bb1 loc(#loc127)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc32)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc33)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc33)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc128)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc129)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc32)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
    cir.store %15, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.br ^bb2 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc133)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc134)
  ^bb3:  // pred: ^bb2
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc43)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc45)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb4 loc(#loc39)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %24 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc136)
  ^bb7:  // pred: ^bb6
    %25 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
    %26 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.store %26, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.br ^bb8 loc(#loc137)
  ^bb8:  // pred: ^bb7
    %27 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc114)
    cir.copy %27 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc114)
    %28 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc54)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %30 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc56)
    %31 = cir.call @strcpy(%29, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc54)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc59)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
    cir.br ^bb9 loc(#loc53)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc50)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc16)
  } loc(#loc120)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc139)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc138)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc113)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc144)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc145)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc144)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc145)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc77)
    cir.store %6, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc82)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc83)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc83)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc83)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc148)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc149)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc153)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc95)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc97)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc91)
  ^bb5:  // pred: ^bb4
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %26 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    cir.store %25, %26 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.br ^bb6 loc(#loc80)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc156)
  ^bb7:  // pred: ^bb6
    %27 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
    %28 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.store %28, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb8 loc(#loc157)
  ^bb8:  // pred: ^bb7
    %29 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc113)
    cir.copy %29 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc113)
    %30 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc106)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc108)
    %33 = cir.call @strcpy(%31, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %35 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc111)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
    cir.br ^bb9 loc(#loc105)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc102)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc66)
  } loc(#loc140)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":74:13)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":74:33)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":44:13)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":44:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":141:1)
#loc10 = loc("/usr/include/string.h":142:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":28:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":51:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":35:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":35:24)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":42:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":42:24)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":30:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":30:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":31:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":31:25)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":32:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":32:25)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":33:12)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":33:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":34:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":40:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":35:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":37:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":37:31)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":37:34)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":37:45)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":37:46)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":37:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":38:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":38:37)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":38:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":38:21)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":38:27)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":38:28)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":38:34)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":38:33)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":39:21)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":39:10)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":39:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":41:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":50:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":42:23)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":43:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":49:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":46:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":46:20)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":46:26)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":47:23)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":47:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":48:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":48:18)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":83:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":86:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":85:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":85:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":58:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":81:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":65:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":65:24)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":72:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":72:24)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":60:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":60:12)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":61:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":61:25)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":62:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":62:25)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":63:12)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":63:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":64:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":70:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":65:23)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":67:24)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":67:32)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":67:35)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":67:38)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":67:49)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":67:31)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":67:50)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":67:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":68:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":68:37)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":68:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":68:21)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":68:27)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":68:28)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":68:34)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":68:33)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":69:21)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":69:10)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":69:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":71:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":80:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":72:23)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":73:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":79:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":76:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":76:20)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":76:26)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":77:23)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":77:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":78:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_32.c":78:18)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc17, #loc18])
#loc122 = loc(fused[#loc19, #loc20])
#loc123 = loc(fused[#loc21, #loc22])
#loc124 = loc(fused[#loc23, #loc24])
#loc125 = loc(fused[#loc25, #loc26])
#loc126 = loc(fused[#loc28, #loc27])
#loc127 = loc(fused[#loc29, #loc30])
#loc128 = loc(fused[#loc34, #loc35])
#loc129 = loc(fused[#loc33, #loc35])
#loc130 = loc(fused[#loc32, #loc36])
#loc131 = loc(fused[#loc37, #loc36])
#loc132 = loc(fused[#loc38, #loc39])
#loc133 = loc(fused[#loc40, #loc41])
#loc134 = loc(fused[#loc42, #loc39])
#loc135 = loc(fused[#loc48, #loc46])
#loc136 = loc(fused[#loc49, #loc50])
#loc137 = loc(fused[#loc52, #loc53])
#loc138 = loc(fused[#loc61, #loc62])
#loc139 = loc(fused[#loc63, #loc64])
#loc140 = loc(fused[#loc65, #loc66])
#loc141 = loc(fused[#loc67, #loc68])
#loc142 = loc(fused[#loc69, #loc70])
#loc143 = loc(fused[#loc71, #loc72])
#loc144 = loc(fused[#loc73, #loc74])
#loc145 = loc(fused[#loc75, #loc76])
#loc146 = loc(fused[#loc78, #loc77])
#loc147 = loc(fused[#loc79, #loc80])
#loc148 = loc(fused[#loc85, #loc86])
#loc149 = loc(fused[#loc87, #loc86])
#loc150 = loc(fused[#loc82, #loc88])
#loc151 = loc(fused[#loc89, #loc88])
#loc152 = loc(fused[#loc90, #loc91])
#loc153 = loc(fused[#loc92, #loc93])
#loc154 = loc(fused[#loc94, #loc91])
#loc155 = loc(fused[#loc100, #loc98])
#loc156 = loc(fused[#loc101, #loc102])
#loc157 = loc(fused[#loc104, #loc105])
