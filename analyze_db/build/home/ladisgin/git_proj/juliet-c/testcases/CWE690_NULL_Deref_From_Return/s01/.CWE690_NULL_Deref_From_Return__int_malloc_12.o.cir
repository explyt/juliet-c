!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_malloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc106)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc107)
  cir.func private @printIntLine(!s32i) loc(#loc108)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc109)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_malloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc112)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc113)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc114)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc115)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc116)
    cir.br ^bb1 loc(#loc117)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc118)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc118)
    %11 = cir.call %10() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc119)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.int<5> : !s32i loc(#loc28)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc31)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc34)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc35)
    %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc36)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc37)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
    cir.br ^bb8 loc(#loc26)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // pred: ^bb3
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc41)
    %27 = cir.cmp(ne, %24, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc122)
    cir.brcond %27 ^bb5, ^bb6 loc(#loc123)
  ^bb5:  // pred: ^bb4
    %28 = cir.const #cir.int<5> : !s32i loc(#loc43)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc46)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc49)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc50)
    %36 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc51)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc52)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc51)
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc39)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc22)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc10)
  } loc(#loc110)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_malloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc125)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc61)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc63)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc64)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc130)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc131)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc63)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc132)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc135)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc135)
    %11 = cir.call %10() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc71)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc71)
    cir.brcond %12 ^bb2, ^bb7 loc(#loc136)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc137)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc79)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc79)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc138)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc139)
  ^bb4:  // pred: ^bb3
    %17 = cir.const #cir.int<5> : !s32i loc(#loc81)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc84)
    cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc87)
    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc88)
    %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc89)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc90)
    cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    cir.br ^bb5 loc(#loc77)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc77)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc74)
  ^bb7:  // pred: ^bb1
    cir.br ^bb8 loc(#loc141)
  ^bb8:  // pred: ^bb7
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc94)
    %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s32i>, !cir.bool loc(#loc142)
    cir.brcond %31 ^bb9, ^bb10 loc(#loc143)
  ^bb9:  // pred: ^bb8
    %32 = cir.const #cir.int<5> : !s32i loc(#loc96)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc99)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc102)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc103)
    %40 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc104)
    %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc105)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc104)
    cir.br ^bb10 loc(#loc92)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc92)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc70)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc70)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc58)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_malloc_12.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":23:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":46:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":25:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":25:11)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":26:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":26:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":28:19)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":28:26)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":28:28)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":28:38)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":28:39)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":28:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":29:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":45:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":29:8)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":29:33)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":30:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":35:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":37:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":32:19)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":32:9)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":32:14)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":32:15)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":33:22)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":33:27)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":33:28)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":33:9)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":34:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":34:14)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":39:9)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":44:9)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":39:13)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":39:21)
#loc42 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":40:9)
#loc43 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":41:23)
#loc44 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":41:13)
#loc45 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":41:18)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":41:19)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":42:26)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":42:31)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":42:32)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":42:13)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":43:13)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":43:18)
#loc53 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":82:1)
#loc54 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":85:1)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":84:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":84:13)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":54:1)
#loc58 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":80:1)
#loc59 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":56:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":56:11)
#loc61 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":57:12)
#loc62 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":57:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":59:19)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":59:26)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":59:28)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":59:38)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":59:39)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":59:5)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":60:5)
#loc70 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":79:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":60:8)
#loc72 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":60:33)
#loc73 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":61:5)
#loc74 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":69:5)
#loc75 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":71:5)
#loc76 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":63:9)
#loc77 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":68:9)
#loc78 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":63:13)
#loc79 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":63:21)
#loc80 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":64:9)
#loc81 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":65:23)
#loc82 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":65:13)
#loc83 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":65:18)
#loc84 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":65:19)
#loc85 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":66:26)
#loc86 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":66:31)
#loc87 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":66:32)
#loc88 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":66:13)
#loc89 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":67:13)
#loc90 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":67:18)
#loc91 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":73:9)
#loc92 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":78:9)
#loc93 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":73:13)
#loc94 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":73:21)
#loc95 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":74:9)
#loc96 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":75:23)
#loc97 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":75:13)
#loc98 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":75:18)
#loc99 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":75:19)
#loc100 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":76:26)
#loc101 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":76:31)
#loc102 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":76:32)
#loc103 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":76:13)
#loc104 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":77:13)
#loc105 = loc("CWE690_NULL_Deref_From_Return__int_malloc_12.c":77:18)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc5, #loc6])
#loc109 = loc(fused[#loc7, #loc8])
#loc110 = loc(fused[#loc9, #loc10])
#loc111 = loc(fused[#loc11, #loc12])
#loc112 = loc(fused[#loc14, #loc13])
#loc113 = loc(fused[#loc17, #loc18])
#loc114 = loc(fused[#loc16, #loc18])
#loc115 = loc(fused[#loc15, #loc19])
#loc116 = loc(fused[#loc20, #loc19])
#loc117 = loc(fused[#loc21, #loc22])
#loc118 = loc(fused[#loc23, #loc24])
#loc119 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc120 = loc(fused[#loc29, #loc28])
#loc121 = loc(fused[#loc38, #loc39])
#loc122 = loc(fused[#loc40, #loc41])
#loc123 = loc(fused[#loc42, #loc39])
#loc124 = loc(fused[#loc44, #loc43])
#loc125 = loc(fused[#loc53, #loc54])
#loc126 = loc(fused[#loc55, #loc56])
#loc127 = loc(fused[#loc57, #loc58])
#loc128 = loc(fused[#loc59, #loc60])
#loc129 = loc(fused[#loc62, #loc61])
#loc130 = loc(fused[#loc65, #loc66])
#loc131 = loc(fused[#loc64, #loc66])
#loc132 = loc(fused[#loc63, #loc67])
#loc133 = loc(fused[#loc68, #loc67])
#loc134 = loc(fused[#loc69, #loc70])
#loc135 = loc(fused[#loc71, #loc72])
#loc136 = loc(fused[#loc73, #loc74, #loc75, #loc70])
#loc137 = loc(fused[#loc76, #loc77])
#loc138 = loc(fused[#loc78, #loc79])
#loc139 = loc(fused[#loc80, #loc77])
#loc140 = loc(fused[#loc82, #loc81])
#loc141 = loc(fused[#loc91, #loc92])
#loc142 = loc(fused[#loc93, #loc94])
#loc143 = loc(fused[#loc95, #loc92])
#loc144 = loc(fused[#loc97, #loc96])
