!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":28:72)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":28:140)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":51:76)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":51:144)
#loc94 = loc(fused[#loc9, #loc10])
#loc109 = loc(fused[#loc51, #loc52])
!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType = !cir.struct<struct "_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType" {!cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc90)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc91)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc92)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b_badSink(%arg0: !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc95)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc96)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc97)
    %3 = cir.alloca !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc94)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
    cir.store %arg0, %3 : !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType> loc(#loc18)
    %5 = cir.get_member %3[0] {name = "structFirst"} : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc19)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc95)
    cir.store %7, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc95)
    %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc22)
    %9 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc22)
    cir.store %10, %2 : !u64i, !cir.ptr<!u64i> loc(#loc100)
    cir.br ^bb2 loc(#loc101)
  ^bb2:  // pred: ^bb1
    %11 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc28)
    cir.store %12, %1 : !u64i, !cir.ptr<!u64i> loc(#loc102)
    cir.br ^bb3 loc(#loc101)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %15 = cir.cmp(lt, %13, %14) : !u64i, !cir.bool loc(#loc103)
    cir.brcond %15 ^bb4, ^bb8 loc(#loc32)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc104)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc36)
    %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc34)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc38)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc38)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc105)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc40)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc106)
    cir.br ^bb3 loc(#loc101)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc41)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc42)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc42)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc44)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc107)
    %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %33 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc48)
    cir.br ^bb10 loc(#loc21)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc8)
  } loc(#loc93)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b_goodG2BSink(%arg0: !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType loc(fused[#loc51, #loc52])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc110)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc111)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc112)
    %3 = cir.alloca !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc109)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc113)
    cir.store %arg0, %3 : !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType> loc(#loc60)
    %5 = cir.get_member %3[0] {name = "structFirst"} : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc19)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc110)
    cir.store %7, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc110)
    %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc63)
    %9 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc63)
    cir.store %10, %2 : !u64i, !cir.ptr<!u64i> loc(#loc115)
    cir.br ^bb2 loc(#loc116)
  ^bb2:  // pred: ^bb1
    %11 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc69)
    cir.store %12, %1 : !u64i, !cir.ptr<!u64i> loc(#loc117)
    cir.br ^bb3 loc(#loc116)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc71)
    %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %15 = cir.cmp(lt, %13, %14) : !u64i, !cir.bool loc(#loc118)
    cir.brcond %15 ^bb4, ^bb8 loc(#loc73)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc119)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc77)
    %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc75)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc79)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc79)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc120)
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc68)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc81)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc121)
    cir.br ^bb3 loc(#loc116)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc68)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc82)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc83)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc83)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc85)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc85)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc122)
    %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %33 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    cir.br ^bb10 loc(#loc62)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc50)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":28:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":44:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":32:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":32:25)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":33:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":33:16)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":33:19)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":30:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":30:28)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":29:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":23:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":31:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":43:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":34:19)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":34:26)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":34:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":34:30)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":36:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":39:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":36:18)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":36:14)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":36:21)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":36:25)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":36:23)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":37:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":38:23)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":38:28)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":38:29)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":38:18)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":38:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":36:35)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":36:34)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":40:22)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":40:14)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":40:17)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":40:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":41:19)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":41:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":42:14)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":42:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":51:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":67:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":55:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":55:25)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":56:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":56:16)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":56:19)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":53:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":53:28)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":52:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":54:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":66:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":57:19)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":57:26)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":57:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":57:30)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":59:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":62:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":59:18)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":59:14)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":59:21)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":59:25)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":59:23)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":60:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":61:23)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":61:28)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":61:29)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":61:18)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":61:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":59:35)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":59:34)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":63:22)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":63:14)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":63:17)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":63:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":64:19)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":64:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":65:14)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67b.c":65:9)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc11, #loc12])
#loc96 = loc(fused[#loc13, #loc14])
#loc97 = loc(fused[#loc13, #loc15])
#loc98 = loc(fused[#loc16, #loc17])
#loc99 = loc(fused[#loc20, #loc21])
#loc100 = loc(fused[#loc24, #loc25])
#loc101 = loc(fused[#loc26, #loc27])
#loc102 = loc(fused[#loc29, #loc28])
#loc103 = loc(fused[#loc30, #loc31])
#loc104 = loc(fused[#loc33, #loc27])
#loc105 = loc(fused[#loc38, #loc36])
#loc106 = loc(fused[#loc40, #loc39])
#loc107 = loc(fused[#loc44, #loc41])
#loc108 = loc(fused[#loc49, #loc50])
#loc110 = loc(fused[#loc53, #loc54])
#loc111 = loc(fused[#loc55, #loc56])
#loc112 = loc(fused[#loc55, #loc57])
#loc113 = loc(fused[#loc58, #loc59])
#loc114 = loc(fused[#loc61, #loc62])
#loc115 = loc(fused[#loc65, #loc66])
#loc116 = loc(fused[#loc67, #loc68])
#loc117 = loc(fused[#loc70, #loc69])
#loc118 = loc(fused[#loc71, #loc72])
#loc119 = loc(fused[#loc74, #loc68])
#loc120 = loc(fused[#loc79, #loc77])
#loc121 = loc(fused[#loc81, #loc80])
#loc122 = loc(fused[#loc85, #loc82])
