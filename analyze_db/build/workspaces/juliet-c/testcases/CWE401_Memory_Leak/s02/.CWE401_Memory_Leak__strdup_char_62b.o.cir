!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":27:16)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":27:24)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":43:20)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":43:28)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":53:20)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":53:28)
#loc54 = loc(fused[#loc11, #loc12])
#loc59 = loc(fused[#loc27, #loc28])
#loc62 = loc(fused[#loc38, #loc39])
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN34CWE401_Memory_Leak__strdup_char_6213goodB2GSourceERPc.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc49)
  cir.global "private" constant cir_private @__const._ZN34CWE401_Memory_Leak__strdup_char_629badSourceERPc.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc50)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc51)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc52)
  cir.func @_ZN34CWE401_Memory_Leak__strdup_char_629badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc54)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc50)
      %2 = cir.get_global @__const._ZN34CWE401_Memory_Leak__strdup_char_629badSourceERPc.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc50)
      cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc50)
      %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc16)
      %4 = cir.call @strdup(%3) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc17)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
      cir.store %4, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc21)
    } loc(#loc55)
    cir.return loc(#loc10)
  } loc(#loc53)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc24)
  cir.func @_ZN34CWE401_Memory_Leak__strdup_char_6213goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc27, #loc28])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc59)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc29)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc30)
    %3 = cir.const #cir.int<1> : !u64i loc(#loc30)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc30)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc30)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc30)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc60)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc32)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc33)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc24)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc24)
    %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc34)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.return loc(#loc26)
  } loc(#loc58)
  cir.func @_ZN34CWE401_Memory_Leak__strdup_char_6213goodB2GSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc38, #loc39])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc62)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc40)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc49)
      %2 = cir.get_global @__const._ZN34CWE401_Memory_Leak__strdup_char_6213goodB2GSourceERPc.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc49)
      cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc49)
      %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc43)
      %4 = cir.call @strdup(%3) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
      cir.store %4, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    } loc(#loc63)
    cir.return loc(#loc37)
  } loc(#loc61)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_62b.cpp":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":56:9)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":56:27)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":30:9)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":30:27)
#loc5 = loc("/usr/include/string.h":187:1)
#loc6 = loc("/usr/include/string.h":188:35)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":27:1)
#loc10 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":36:1)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":28:1)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":29:5)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":35:5)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":32:23)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":32:16)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":32:9)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":32:31)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":34:19)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":34:9)
#loc22 = loc("/usr/include/string.h":141:1)
#loc23 = loc("/usr/include/string.h":142:14)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":48:18)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":43:1)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":50:1)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":44:1)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":46:20)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":46:5)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":48:5)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":48:12)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":49:15)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":49:5)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":53:1)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":62:1)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":54:1)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":55:5)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":61:5)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":58:23)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":58:16)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":58:9)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":58:31)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":60:19)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_62b.cpp":60:9)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc3, #loc4])
#loc51 = loc(fused[#loc5, #loc6])
#loc52 = loc(fused[#loc7, #loc8])
#loc53 = loc(fused[#loc9, #loc10])
#loc55 = loc(fused[#loc14, #loc15])
#loc56 = loc(fused[#loc18, #loc19])
#loc57 = loc(fused[#loc22, #loc23])
#loc58 = loc(fused[#loc25, #loc26])
#loc60 = loc(fused[#loc31, #loc30])
#loc61 = loc(fused[#loc36, #loc37])
#loc63 = loc(fused[#loc41, #loc42])
#loc64 = loc(fused[#loc45, #loc46])
