!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":107:10)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":107:14)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":107:20)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":107:32)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:44)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:44)
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc131 = loc(fused[#loc47, #loc48])
#loc132 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc117)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc11)
    cir.br ^bb2 loc(#loc9)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc9)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc119)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc117)
    cir.br ^bb6 loc(#loc120)
  ^bb6:  // pred: ^bb5
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc18)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    %6 = cir.cmp(ne, %3, %5) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc121)
    %7 = cir.cast(bool_to_int, %6 : !cir.bool), !s32i loc(#loc121)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc122)
    %13 = cir.cast(bool_to_int, %12 : !cir.bool), !s32i loc(#loc122)
    %14 = cir.binop(and, %7, %13) : !s32i loc(#loc123)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %15 ^bb7, ^bb8 loc(#loc124)
  ^bb7:  // pred: ^bb6
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc3)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb8 loc(#loc16)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc16)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc14)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc28)
  ^bb11:  // pred: ^bb2
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc4)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc4)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb12 loc(#loc30)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc10)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc6)
  } loc(#loc116)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc125)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc128)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc54)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE476_NULL_Pointer_Dereference__binary_if_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call @CWE476_NULL_Pointer_Dereference__binary_if_15_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE476_NULL_Pointer_Dereference__binary_if_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call @CWE476_NULL_Pointer_Dereference__binary_if_15_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.return %17 : !s32i loc(#loc135)
  } loc(#loc130)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc71)
    cir.br ^bb2 loc(#loc69)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc69)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb20 loc(#loc75)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc139)
  ^bb6:  // pred: ^bb5
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc137)
    cir.br ^bb7 loc(#loc140)
  ^bb7:  // pred: ^bb6
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc81)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
    %8 = cir.cmp(ne, %5, %7) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc141)
    cir.brcond %8 ^bb8, ^bb13 loc(#loc82)
  ^bb8:  // pred: ^bb7
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc85)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc142)
    cir.brcond %13 ^bb9, ^bb10 loc(#loc82)
  ^bb9:  // pred: ^bb8
    %14 = cir.const #true loc(#loc82)
    cir.br ^bb11(%14 : !cir.bool) loc(#loc82)
  ^bb10:  // pred: ^bb8
    %15 = cir.const #false loc(#loc82)
    cir.br ^bb11(%15 : !cir.bool) loc(#loc82)
  ^bb11(%16: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:44)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc82)
  ^bb12:  // pred: ^bb11
    cir.br ^bb14(%16 : !cir.bool) loc(#loc82)
  ^bb13:  // pred: ^bb7
    %17 = cir.const #false loc(#loc82)
    cir.br ^bb14(%17 : !cir.bool) loc(#loc82)
  ^bb14(%18: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:44)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc82)
  ^bb15:  // pred: ^bb14
    cir.brcond %18 ^bb16, ^bb17 loc(#loc143)
  ^bb16:  // pred: ^bb15
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc87)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb17 loc(#loc79)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc79)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc77)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc89)
  ^bb20:  // 2 preds: ^bb4, ^bb19
    cir.br ^bb21 loc(#loc70)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc66)
  } loc(#loc136)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc96)
    cir.br ^bb2 loc(#loc94)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb19 [
      6: ^bb4
    ] loc(#loc94)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc147)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc145)
    cir.br ^bb6 loc(#loc148)
  ^bb6:  // pred: ^bb5
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
    %6 = cir.cmp(ne, %3, %5) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc149)
    cir.brcond %6 ^bb7, ^bb12 loc(#loc104)
  ^bb7:  // pred: ^bb6
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc107)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc150)
    cir.brcond %11 ^bb8, ^bb9 loc(#loc104)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #true loc(#loc104)
    cir.br ^bb10(%12 : !cir.bool) loc(#loc104)
  ^bb9:  // pred: ^bb7
    %13 = cir.const #false loc(#loc104)
    cir.br ^bb10(%13 : !cir.bool) loc(#loc104)
  ^bb10(%14: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:44)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc104)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%14 : !cir.bool) loc(#loc104)
  ^bb12:  // pred: ^bb6
    %15 = cir.const #false loc(#loc104)
    cir.br ^bb13(%15 : !cir.bool) loc(#loc104)
  ^bb13(%16: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:44)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc104)
  ^bb14:  // pred: ^bb13
    cir.brcond %16 ^bb15, ^bb16 loc(#loc151)
  ^bb15:  // pred: ^bb14
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc109)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb16 loc(#loc101)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc101)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc99)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc111)
  ^bb19:  // pred: ^bb2
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc112)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb20 loc(#loc114)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc95)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc91)
  } loc(#loc144)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":31:23)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":37:19)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":20:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":40:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":26:9)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":26:47)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":22:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":39:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":22:12)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":24:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":25:5)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":33:5)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:9)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":32:9)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:14)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:38)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:47)
#loc20 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:69)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:79)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:13)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:80)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:44)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":30:9)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":31:13)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":34:5)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":37:9)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":38:9)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":92:1)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":96:1)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":94:5)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":94:11)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":95:5)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":95:11)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":112:15)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":114:15)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":117:15)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":119:15)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":107:1)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":122:1)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":108:1)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":110:27)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":110:22)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":110:5)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":112:5)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":113:5)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":113:56)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":114:5)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":117:5)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":118:5)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":118:55)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":119:5)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":121:12)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":121:5)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":47:1)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":67:1)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":57:9)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":57:47)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":49:5)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":66:5)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":49:12)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":51:5)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":53:19)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":53:9)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":54:9)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":56:5)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":64:5)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:9)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":63:9)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:14)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:38)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:48)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:70)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:80)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":61:9)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":62:23)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":62:13)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":65:5)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":70:1)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":90:1)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":76:9)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":76:47)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":72:5)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":89:5)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":72:12)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":74:5)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":75:5)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":83:5)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:9)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":82:9)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:14)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:38)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:48)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:70)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:80)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":80:9)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":81:23)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":81:13)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":84:5)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":87:19)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":87:9)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":88:9)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc9, #loc10])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc17, #loc18])
#loc122 = loc(fused[#loc19, #loc22])
#loc123 = loc(fused[#loc23, #loc24])
#loc124 = loc(fused[#loc26, #loc16])
#loc125 = loc(fused[#loc31, #loc32])
#loc126 = loc(fused[#loc33, #loc34])
#loc127 = loc(fused[#loc35, #loc36])
#loc128 = loc(fused[#loc37, #loc38])
#loc129 = loc(fused[#loc39, #loc40])
#loc130 = loc(fused[#loc45, #loc46])
#loc133 = loc(fused[#loc56, #loc57])
#loc134 = loc(fused[#loc60, #loc61])
#loc135 = loc(fused[#loc64, #loc63])
#loc136 = loc(fused[#loc65, #loc66])
#loc137 = loc(fused[#loc67, #loc68])
#loc138 = loc(fused[#loc69, #loc70])
#loc139 = loc(fused[#loc76, #loc77])
#loc140 = loc(fused[#loc78, #loc79])
#loc141 = loc(fused[#loc80, #loc81])
#loc142 = loc(fused[#loc83, #loc85])
#loc143 = loc(fused[#loc86, #loc79])
#loc144 = loc(fused[#loc90, #loc91])
#loc145 = loc(fused[#loc92, #loc93])
#loc146 = loc(fused[#loc94, #loc95])
#loc147 = loc(fused[#loc98, #loc99])
#loc148 = loc(fused[#loc100, #loc101])
#loc149 = loc(fused[#loc102, #loc103])
#loc150 = loc(fused[#loc105, #loc107])
#loc151 = loc(fused[#loc108, #loc101])
