!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_popen_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc171)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc172)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc173)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc175)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc14)
  cir.func private  @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc176)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc17)
  cir.func private  @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc177)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_popen_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc180)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc180)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc180)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc30)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc184)
          %6 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc185)
          %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
          cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc184)
          cir.scope {
            %10 = cir.const #cir.int<100> : !s32i loc(#loc41)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc41)
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc187)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc43)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !s32i loc(#loc188)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc44)
            cir.if %17 {
              %18 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc46)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc5)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc5)
              %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc46)
              cir.store %23, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc190)
              cir.scope {
                %24 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc52)
                %27 = cir.cmp(ne, %24, %26) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc192)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc53)
                cir.if %28 {
                  cir.scope {
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
                    %32 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc58)
                    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc59)
                    %34 = cir.const #cir.int<100> : !s32i loc(#loc60)
                    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc60)
                    %36 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc61)
                    %37 = cir.binop(sub, %35, %36) : !u64i loc(#loc195)
                    %38 = cir.cast(integral, %37 : !u64i), !s32i loc(#loc195)
                    %39 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc62)
                    %40 = cir.call @fgets(%33, %38, %39) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc63)
                    %41 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc64)
                    %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc64)
                    %43 = cir.cmp(eq, %40, %42) : !cir.ptr<!s8i>, !s32i loc(#loc196)
                    %44 = cir.cast(int_to_bool, %43 : !s32i), !cir.bool loc(#loc65)
                    cir.if %44 {
                      %45 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                      %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                      cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc67)
                      %47 = cir.const #cir.int<0> : !s32i loc(#loc68)
                      %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc68)
                      %49 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                      %50 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                      %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc71)
                      cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc198)
                    } loc(#loc197)
                  } loc(#loc194)
                  %29 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc72)
                  %30 = cir.call @fclose(%29) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc73)
                } loc(#loc193)
              } loc(#loc191)
            } loc(#loc189)
          } loc(#loc186)
        } loc(#loc183)
        cir.break loc(#loc74)
      },
      case (default) {
        %5 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc14)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc14)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc75)
        cir.break loc(#loc76)
      }
      ] loc(#loc28)
    } loc(#loc182)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc200)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
      %6 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc17)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc17)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc82)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc201)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc87)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc88)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc203)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc89)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc91)
          %15 = cir.call @pclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc92)
        } loc(#loc204)
      } loc(#loc202)
    } loc(#loc199)
    cir.return loc(#loc21)
  } loc(#loc178)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_popen_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc97)
    cir.return loc(#loc94)
  } loc(#loc205)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
  cir.global "private"  constant internal dsolocal @".str5" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc101)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc211)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc211)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc211)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc112)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        %5 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc113)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        cir.break loc(#loc115)
      },
      case (default) {
        %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc116)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
        %7 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc101)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc101)
        %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc116)
        cir.break loc(#loc118)
      }
      ] loc(#loc110)
    } loc(#loc213)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc215)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      %6 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc124)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc124)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc125)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc216)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc130)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc131)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc218)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc132)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc134)
          %15 = cir.call @pclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc135)
        } loc(#loc219)
      } loc(#loc217)
    } loc(#loc214)
    cir.return loc(#loc103)
  } loc(#loc209)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc222)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc222)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc222)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc146)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc147)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
        %7 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc149)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc149)
        %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
        cir.break loc(#loc150)
      },
      case (default) {
        %5 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc151)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc151)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc152)
        cir.break loc(#loc153)
      }
      ] loc(#loc144)
    } loc(#loc224)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc226)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
      %6 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc159)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc159)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc160)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc227)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc165)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc166)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc229)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc167)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc169)
          %15 = cir.call @pclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc170)
        } loc(#loc230)
      } loc(#loc228)
    } loc(#loc225)
    cir.return loc(#loc137)
  } loc(#loc220)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_popen_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":264:1)
#loc4 = loc("/usr/include/stdio.h":266:3)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":60:27)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":60:37)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":66:31)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":77:19)
#loc15 = loc("/usr/include/stdio.h":903:1)
#loc16 = loc("/usr/include/stdio.h":904:3)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":83:28)
#loc18 = loc("/usr/include/stdio.h":897:1)
#loc19 = loc("/usr/include/stdio.h":897:36)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":45:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":89:1)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":47:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":47:12)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":48:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":48:26)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":49:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":49:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":50:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":79:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":50:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":53:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":73:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":55:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":55:37)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":56:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":56:16)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":55:26)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":55:33)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":58:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":72:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":58:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":58:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":58:27)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":58:25)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":59:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":60:21)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":60:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":60:40)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":61:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":71:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":61:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":61:26)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":61:23)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":62:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":64:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":69:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":64:27)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":64:32)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":64:31)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":64:47)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":64:51)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":64:61)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":64:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":64:71)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":64:68)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":65:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":66:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":68:37)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":68:21)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":68:26)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":68:33)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":70:24)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":70:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":74:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":77:9)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":78:9)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":80:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":88:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":81:9)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":81:15)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":83:22)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":83:16)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":83:9)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":83:31)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":84:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":87:9)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":84:13)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":84:21)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":84:18)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":85:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":86:20)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":86:13)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":151:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":155:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":153:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":153:14)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":154:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":154:14)
#loc99 = loc("/usr/include/string.h":149:1)
#loc100 = loc("/usr/include/string.h":150:14)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":109:22)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":96:1)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":121:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":98:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":98:12)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":99:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":99:26)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":100:12)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":100:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":101:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":111:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":101:12)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":105:19)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":105:9)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":106:9)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":109:9)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":109:16)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":110:9)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":112:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":120:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":113:9)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":113:15)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":115:22)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":115:28)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":115:16)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":115:9)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":115:31)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":116:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":119:9)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":116:13)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":116:21)
#loc132 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":116:18)
#loc133 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":117:9)
#loc134 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":118:20)
#loc135 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":118:13)
#loc136 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":124:1)
#loc137 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":149:1)
#loc138 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":126:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":126:12)
#loc140 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":127:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":127:26)
#loc142 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":128:12)
#loc143 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":128:5)
#loc144 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":129:5)
#loc145 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":139:5)
#loc146 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":129:12)
#loc147 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":133:9)
#loc148 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":133:16)
#loc149 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":133:22)
#loc150 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":134:9)
#loc151 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":137:19)
#loc152 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":137:9)
#loc153 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":138:9)
#loc154 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":140:5)
#loc155 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":148:5)
#loc156 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":141:9)
#loc157 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":141:15)
#loc158 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":143:22)
#loc159 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":143:28)
#loc160 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":143:16)
#loc161 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":143:9)
#loc162 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":143:31)
#loc163 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":144:9)
#loc164 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":147:9)
#loc165 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":144:13)
#loc166 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":144:21)
#loc167 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":144:18)
#loc168 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":145:9)
#loc169 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":146:20)
#loc170 = loc("CWE78_OS_Command_Injection__char_file_popen_15.c":146:13)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc7, #loc8])
#loc174 = loc(fused[#loc9, #loc10])
#loc175 = loc(fused[#loc12, #loc13])
#loc176 = loc(fused[#loc15, #loc16])
#loc177 = loc(fused[#loc18, #loc19])
#loc178 = loc(fused[#loc20, #loc21])
#loc179 = loc(fused[#loc22, #loc23])
#loc180 = loc(fused[#loc24, #loc25])
#loc181 = loc(fused[#loc27, #loc26])
#loc182 = loc(fused[#loc28, #loc29])
#loc183 = loc(fused[#loc31, #loc32])
#loc184 = loc(fused[#loc33, #loc34])
#loc185 = loc(fused[#loc35, #loc36])
#loc186 = loc(fused[#loc39, #loc40])
#loc187 = loc(fused[#loc41, #loc42])
#loc188 = loc(fused[#loc41, #loc43])
#loc189 = loc(fused[#loc45, #loc40])
#loc190 = loc(fused[#loc47, #loc48])
#loc191 = loc(fused[#loc49, #loc50])
#loc192 = loc(fused[#loc51, #loc52])
#loc193 = loc(fused[#loc54, #loc50])
#loc194 = loc(fused[#loc55, #loc56])
#loc195 = loc(fused[#loc60, #loc61])
#loc196 = loc(fused[#loc63, #loc64])
#loc197 = loc(fused[#loc66, #loc56])
#loc198 = loc(fused[#loc69, #loc68])
#loc199 = loc(fused[#loc77, #loc78])
#loc200 = loc(fused[#loc79, #loc80])
#loc201 = loc(fused[#loc83, #loc84])
#loc202 = loc(fused[#loc85, #loc86])
#loc203 = loc(fused[#loc87, #loc88])
#loc204 = loc(fused[#loc90, #loc86])
#loc205 = loc(fused[#loc93, #loc94])
#loc206 = loc(fused[#loc95, #loc96])
#loc207 = loc(fused[#loc97, #loc98])
#loc208 = loc(fused[#loc99, #loc100])
#loc209 = loc(fused[#loc102, #loc103])
#loc210 = loc(fused[#loc104, #loc105])
#loc211 = loc(fused[#loc106, #loc107])
#loc212 = loc(fused[#loc109, #loc108])
#loc213 = loc(fused[#loc110, #loc111])
#loc214 = loc(fused[#loc119, #loc120])
#loc215 = loc(fused[#loc121, #loc122])
#loc216 = loc(fused[#loc126, #loc127])
#loc217 = loc(fused[#loc128, #loc129])
#loc218 = loc(fused[#loc130, #loc131])
#loc219 = loc(fused[#loc133, #loc129])
#loc220 = loc(fused[#loc136, #loc137])
#loc221 = loc(fused[#loc138, #loc139])
#loc222 = loc(fused[#loc140, #loc141])
#loc223 = loc(fused[#loc143, #loc142])
#loc224 = loc(fused[#loc144, #loc145])
#loc225 = loc(fused[#loc154, #loc155])
#loc226 = loc(fused[#loc156, #loc157])
#loc227 = loc(fused[#loc161, #loc162])
#loc228 = loc(fused[#loc163, #loc164])
#loc229 = loc(fused[#loc165, #loc166])
#loc230 = loc(fused[#loc168, #loc164])
