!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":86:10)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":86:14)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":86:20)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":86:32)
#loc146 = loc(fused[#loc62, #loc63])
#loc147 = loc(fused[#loc64, #loc65])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc129)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc10)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc10)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.goto "source" loc(#loc130)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc13)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc16)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc19)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc132)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc134)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc25)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc26)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc26)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc26)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc135)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc30)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc30)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc31)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc33)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc136)
      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
      %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
      %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc36)
      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc36)
      %44 = cir.const #cir.int<1> : !u64i loc(#loc137)
      %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc138)
      cir.libc.memcpy %45 bytes from %41 to %39 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc139)
      %46 = cir.const #cir.int<0> : !s32i loc(#loc41)
      %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc41)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc43)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc44)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc43)
      %52 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc45)
      cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc140)
      %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    } loc(#loc133)
    cir.return loc(#loc4)
  } loc(#loc126)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc141)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc143)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc59)
  cir.func @main(%arg0: !s32i loc(fused[#loc62, #loc63]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc64, #loc65])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc66)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc67)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc68)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc68)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc69)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc56)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18_good() : () -> () loc(#loc71)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc57)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc58)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18_bad() : () -> () loc(#loc75)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc59)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.return %17 : !s32i loc(#loc150)
  } loc(#loc145)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc85)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc85)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc85)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc85)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc85)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc154)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc85)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc87)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc87)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc87)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.goto "source" loc(#loc155)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc90)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc93)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc159)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc102)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc103)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc104)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc103)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc103)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc160)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc107)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc107)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc108)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc109)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc108)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc110)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc161)
      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
      %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
      %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc113)
      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc113)
      %44 = cir.const #cir.int<1> : !u64i loc(#loc162)
      %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc163)
      cir.libc.memcpy %45 bytes from %41 to %39 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc164)
      %46 = cir.const #cir.int<0> : !s32i loc(#loc118)
      %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc118)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc120)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc121)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc120)
      %52 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc122)
      cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc165)
      %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    } loc(#loc158)
    cir.return loc(#loc81)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":43:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":25:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":25:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":26:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":26:36)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":27:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":27:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":28:10)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":29:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":32:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":33:15)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":33:10)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":33:11)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":42:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":35:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":35:24)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":36:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":36:24)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":36:29)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":36:33)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":36:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":36:34)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":37:25)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":37:16)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":37:20)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":37:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":39:16)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":39:22)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":39:30)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":39:34)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":39:45)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":39:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":39:46)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":40:23)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":40:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":40:14)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":40:18)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":40:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":41:19)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":41:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":71:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":74:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":73:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":73:13)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":91:15)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":93:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":96:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":98:15)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":86:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":101:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":87:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":89:27)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":89:22)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":89:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":91:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":92:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":92:75)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":93:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":96:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":97:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":97:74)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":98:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":100:12)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":100:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":50:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":69:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":52:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":52:12)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":53:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":53:36)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":54:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":54:37)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":55:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":55:10)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":56:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":58:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":58:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":59:15)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":59:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":59:10)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":59:11)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":60:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":68:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":61:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":61:24)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":62:16)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":62:24)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":62:29)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":62:33)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":62:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":62:34)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":63:25)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":63:16)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":63:20)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":63:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":65:16)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":65:22)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":65:30)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":65:34)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":65:45)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":65:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":65:46)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":66:23)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":66:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":66:14)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":66:18)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":66:19)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":67:19)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_18.c":67:9)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc15, #loc14])
#loc132 = loc(fused[#loc17, #loc16])
#loc133 = loc(fused[#loc20, #loc21])
#loc134 = loc(fused[#loc22, #loc23])
#loc135 = loc(fused[#loc28, #loc29])
#loc136 = loc(fused[#loc33, #loc30])
#loc137 = loc(fused[#loc37, #loc38])
#loc138 = loc(fused[#loc36, #loc38])
#loc139 = loc(fused[#loc39, #loc40])
#loc140 = loc(fused[#loc42, #loc41])
#loc141 = loc(fused[#loc48, #loc49])
#loc142 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc52, #loc53])
#loc144 = loc(fused[#loc54, #loc55])
#loc145 = loc(fused[#loc60, #loc61])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc75, #loc76])
#loc150 = loc(fused[#loc79, #loc78])
#loc151 = loc(fused[#loc80, #loc81])
#loc152 = loc(fused[#loc82, #loc83])
#loc153 = loc(fused[#loc84, #loc85])
#loc154 = loc(fused[#loc86, #loc87])
#loc155 = loc(fused[#loc88, #loc89])
#loc156 = loc(fused[#loc92, #loc91])
#loc157 = loc(fused[#loc94, #loc93])
#loc158 = loc(fused[#loc97, #loc98])
#loc159 = loc(fused[#loc99, #loc100])
#loc160 = loc(fused[#loc105, #loc106])
#loc161 = loc(fused[#loc110, #loc107])
#loc162 = loc(fused[#loc114, #loc115])
#loc163 = loc(fused[#loc113, #loc115])
#loc164 = loc(fused[#loc116, #loc117])
#loc165 = loc(fused[#loc119, #loc118])
