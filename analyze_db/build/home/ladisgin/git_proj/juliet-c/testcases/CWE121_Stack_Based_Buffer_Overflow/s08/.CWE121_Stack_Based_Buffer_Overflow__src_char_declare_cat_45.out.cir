!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":91:10)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":91:14)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":91:20)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":91:32)
#loc128 = loc(fused[#loc42, #loc43])
#loc129 = loc(fused[#loc44, #loc45])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc113)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc116)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc9)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc12)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc13)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc118)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc17)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc19)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc119)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %18 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.store %17, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %19 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call %19() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    cir.return loc(#loc4)
  } loc(#loc114)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc122)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc124)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc125)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc39)
  cir.func @main(%arg0: !s32i loc(fused[#loc42, #loc43]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc44, #loc45])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc46)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc47)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc48)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc48)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc49)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc36)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_good() : () -> () loc(#loc51)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc37)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc38)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_bad() : () -> () loc(#loc55)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.return %17 : !s32i loc(#loc132)
  } loc(#loc127)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc133)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc135)
    cir.store %4, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc135)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc70)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc71)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %8 = cir.call @strcat(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc70)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb2 loc(#loc69)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc63)
  } loc(#loc134)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc138)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc86)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc87)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc87)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc87)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc143)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc91)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc93)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc93)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc95)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc144)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %18 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.store %17, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %19 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %19() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc98)
    cir.return loc(#loc78)
  } loc(#loc139)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.br ^bb1 loc(#loc150)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc148)
    cir.store %4, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc148)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc108)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc109)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %8 = cir.call @strcat(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc108)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.br ^bb2 loc(#loc107)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc101)
  } loc(#loc147)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":21:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":21:15)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":37:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":47:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":39:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":39:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":40:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":40:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":41:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":41:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":43:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":43:18)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":43:23)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":43:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":43:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":43:28)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":44:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":44:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":44:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":44:14)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":44:15)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":45:75)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":45:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":46:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":46:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":77:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":80:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":79:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":79:13)
#loc30 = loc("/usr/include/stdlib.h":575:1)
#loc31 = loc("/usr/include/stdlib.h":575:41)
#loc32 = loc("/usr/include/time.h":76:1)
#loc33 = loc("/usr/include/time.h":76:38)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":96:15)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":98:15)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":101:15)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":103:15)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":91:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":106:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":92:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":94:27)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":94:22)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":94:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":96:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":97:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":97:70)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":98:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":101:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":102:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":102:69)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":103:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":105:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":105:5)
#loc60 = loc("/usr/include/string.h":149:1)
#loc61 = loc("/usr/include/string.h":150:14)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":26:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":35:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":30:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":30:25)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":28:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":28:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":29:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":34:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":32:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":32:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":32:22)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":33:19)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":33:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":22:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":22:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":65:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":75:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":67:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":67:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":68:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":68:24)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":69:12)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":69:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":71:12)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":71:18)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":71:23)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":71:26)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":71:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":71:27)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":72:18)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":72:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":72:10)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":72:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":72:14)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":73:79)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":73:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":74:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":74:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":54:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":63:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":58:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":58:25)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":56:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":56:19)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":57:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":62:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":60:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":60:16)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":60:22)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":61:19)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_45.c":61:9)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc10, #loc9])
#loc118 = loc(fused[#loc15, #loc16])
#loc119 = loc(fused[#loc18, #loc17])
#loc120 = loc(fused[#loc23, #loc22])
#loc121 = loc(fused[#loc24, #loc25])
#loc122 = loc(fused[#loc26, #loc27])
#loc123 = loc(fused[#loc28, #loc29])
#loc124 = loc(fused[#loc30, #loc31])
#loc125 = loc(fused[#loc32, #loc33])
#loc126 = loc(fused[#loc34, #loc35])
#loc127 = loc(fused[#loc40, #loc41])
#loc130 = loc(fused[#loc51, #loc52])
#loc131 = loc(fused[#loc55, #loc56])
#loc132 = loc(fused[#loc59, #loc58])
#loc133 = loc(fused[#loc60, #loc61])
#loc134 = loc(fused[#loc62, #loc63])
#loc135 = loc(fused[#loc64, #loc65])
#loc136 = loc(fused[#loc66, #loc67])
#loc137 = loc(fused[#loc68, #loc69])
#loc138 = loc(fused[#loc75, #loc76])
#loc139 = loc(fused[#loc77, #loc78])
#loc140 = loc(fused[#loc79, #loc80])
#loc141 = loc(fused[#loc81, #loc82])
#loc142 = loc(fused[#loc84, #loc83])
#loc143 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc92, #loc91])
#loc145 = loc(fused[#loc97, #loc96])
#loc146 = loc(fused[#loc98, #loc99])
#loc147 = loc(fused[#loc100, #loc101])
#loc148 = loc(fused[#loc102, #loc103])
#loc149 = loc(fused[#loc104, #loc105])
#loc150 = loc(fused[#loc106, #loc107])
