!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc331)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc332)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc333)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc334)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc335)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc337)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc22)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc342)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc342)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc342)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc31)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc31)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc31)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc31)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc31)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc31)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc332)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc344)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc39)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc346)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc42)
            } loc(#loc345)
          } loc(#loc343)
        } loc(#loc341)
      } loc(#loc340)
    } loc(#loc339)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc45)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc350)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc351)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc351)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc351)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc56)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc353)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc60)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc62)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc62)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc355)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc65)
                cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc357)
                cir.for : cond {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc68)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc358)
                  cir.condition(%18) loc(#loc69)
                } body {
                  cir.scope {
                    %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                    %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc72)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc72)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc72)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc73)
                  } loc(#loc359)
                  cir.yield loc(#loc64)
                } step {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc74)
                  %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc75)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc360)
                  cir.yield loc(#loc356)
                } loc(#loc356)
              } loc(#loc356)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
            } loc(#loc354)
          } loc(#loc352)
        } loc(#loc349)
      } loc(#loc348)
    } loc(#loc347)
    cir.return loc(#loc14)
  } loc(#loc336)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc362)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc363)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc81)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc364)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc83)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc365)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc85)
    cir.return loc(#loc78)
  } loc(#loc361)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc367)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc94)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc98)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc98)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc372)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc372)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc372)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc107)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc107)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc107)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc107)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc107)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc107)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc107)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc107)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc332)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc108)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc109)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc374)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc115)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc376)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc118)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc118)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc119)
            } loc(#loc375)
          } loc(#loc373)
        } loc(#loc371)
      } loc(#loc370)
    } loc(#loc369)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc122)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc122)
      cir.if %4 {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc126)
      } else {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc380)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc381)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc381)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc381)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc136)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc383)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc139)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc384)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc137)
                cir.yield %16 : !cir.bool loc(#loc137)
              }, false {
                %16 = cir.const #false loc(#loc137)
                cir.yield %16 : !cir.bool loc(#loc137)
              }) : (!cir.bool) -> !cir.bool loc(#loc137)
              cir.yield %15 : !cir.bool loc(#loc137)
            }, false {
              %12 = cir.const #false loc(#loc137)
              cir.yield %12 : !cir.bool loc(#loc137)
            }) : (!cir.bool) -> !cir.bool loc(#loc137)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc144)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc146)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc146)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc386)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc149)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc388)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc152)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc389)
                  cir.condition(%19) loc(#loc153)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc156)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc156)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc156)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc157)
                  } loc(#loc390)
                  cir.yield loc(#loc148)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc158)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc159)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc391)
                  cir.yield loc(#loc387)
                } loc(#loc387)
              } loc(#loc387)
            } else {
              %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc88)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc88)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc160)
            } loc(#loc385)
          } loc(#loc382)
        } loc(#loc379)
      } loc(#loc378)
    } loc(#loc377)
    cir.return loc(#loc90)
  } loc(#loc366)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc393)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc166)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc394)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc170)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc170)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc398)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc398)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc398)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc178)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc179)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc179)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc179)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc179)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc179)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc179)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc179)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc179)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc332)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc180)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc181)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc182)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc400)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc186)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc187)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc402)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc190)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc190)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc191)
            } loc(#loc401)
          } loc(#loc399)
        } loc(#loc397)
      } loc(#loc396)
    } loc(#loc395)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc194)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc194)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc406)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc407)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc407)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc407)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc205)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc409)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc207)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc208)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc410)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc206)
                cir.yield %16 : !cir.bool loc(#loc206)
              }, false {
                %16 = cir.const #false loc(#loc206)
                cir.yield %16 : !cir.bool loc(#loc206)
              }) : (!cir.bool) -> !cir.bool loc(#loc206)
              cir.yield %15 : !cir.bool loc(#loc206)
            }, false {
              %12 = cir.const #false loc(#loc206)
              cir.yield %12 : !cir.bool loc(#loc206)
            }) : (!cir.bool) -> !cir.bool loc(#loc206)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc213)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc214)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc215)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc215)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc412)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc218)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc414)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc221)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc415)
                  cir.condition(%19) loc(#loc222)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc225)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc225)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc225)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc226)
                  } loc(#loc416)
                  cir.yield loc(#loc217)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc228)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc417)
                  cir.yield loc(#loc413)
                } loc(#loc413)
              } loc(#loc413)
            } else {
              %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc229)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc229)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc230)
            } loc(#loc411)
          } loc(#loc408)
        } loc(#loc405)
      } loc(#loc404)
    } loc(#loc403)
    cir.return loc(#loc162)
  } loc(#loc392)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc419)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc236)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc420)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc240)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc240)
      cir.if %4 {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc244)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc244)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc245)
      } else {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc246)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc423)
      } loc(#loc422)
    } loc(#loc421)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc250)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc250)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc427)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc428)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc428)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc428)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc261)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc430)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc265)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc267)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc267)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc432)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc270)
                cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc434)
                cir.for : cond {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc272)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc273)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc435)
                  cir.condition(%18) loc(#loc274)
                } body {
                  cir.scope {
                    %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc276)
                    %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc277)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc277)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc277)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc278)
                  } loc(#loc436)
                  cir.yield loc(#loc269)
                } step {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                  %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc280)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc437)
                  cir.yield loc(#loc433)
                } loc(#loc433)
              } loc(#loc433)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc281)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc281)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc282)
            } loc(#loc431)
          } loc(#loc429)
        } loc(#loc426)
      } loc(#loc425)
    } loc(#loc424)
    cir.return loc(#loc232)
  } loc(#loc418)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc439)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc288)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc440)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc292)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc292)
      cir.if %4 {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc294)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc443)
      } loc(#loc442)
    } loc(#loc441)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc298)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc298)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc447)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc448)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc448)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc448)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc308)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc309)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc450)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc313)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc314)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc315)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc315)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc452)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc318)
                cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc454)
                cir.for : cond {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc320)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc321)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc455)
                  cir.condition(%18) loc(#loc322)
                } body {
                  cir.scope {
                    %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                    %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc325)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc325)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc325)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc326)
                  } loc(#loc456)
                  cir.yield loc(#loc317)
                } step {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                  %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc328)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc457)
                  cir.yield loc(#loc453)
                } loc(#loc453)
              } loc(#loc453)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc329)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc329)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc330)
            } loc(#loc451)
          } loc(#loc449)
        } loc(#loc446)
      } loc(#loc445)
    } loc(#loc444)
    cir.return loc(#loc284)
  } loc(#loc438)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":41:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":63:27)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":24:1)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":67:1)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":26:5)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":26:9)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":28:13)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":28:12)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":28:5)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":29:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":44:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":29:8)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":30:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":31:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":43:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":32:13)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":32:49)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":42:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:23)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:36)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:53)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:17)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:63)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":35:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":38:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":40:13)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":37:29)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":37:24)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":37:17)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":37:40)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":41:17)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":45:5)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":66:5)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":45:8)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":46:5)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":47:9)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":65:9)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":48:13)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":48:17)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":49:13)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":49:34)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":52:13)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":64:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":52:17)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":52:24)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":53:13)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":60:13)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":62:13)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":54:32)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":54:24)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":54:17)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:17)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":59:17)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:25)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:21)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:28)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:32)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:30)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":57:17)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":58:41)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":58:34)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":58:21)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:37)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:36)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":63:17)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":245:1)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":251:1)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":247:5)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":247:14)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":248:5)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":248:14)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":249:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":249:14)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":250:5)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":250:14)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":98:19)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":117:27)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":74:1)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":121:1)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":76:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":76:9)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":78:13)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":78:12)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":78:5)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":79:5)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":94:5)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":79:8)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":80:5)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":81:9)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":93:9)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":82:13)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":82:49)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:13)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":92:13)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:23)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:36)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:53)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:17)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:63)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":85:13)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":88:13)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":90:13)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":87:29)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":87:24)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":87:17)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":87:40)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":91:27)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":91:17)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":95:5)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":120:5)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":95:8)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":96:5)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":99:5)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":101:5)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":98:9)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":102:9)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":119:9)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":103:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":103:17)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":104:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":104:34)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:13)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":118:13)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:17)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:25)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:27)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:30)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:38)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:40)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":107:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":114:13)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":116:13)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":108:32)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":108:24)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":108:17)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:17)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":113:17)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:25)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:21)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:28)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:32)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:30)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":111:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":112:41)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":112:34)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":112:21)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:37)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:36)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":117:17)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":124:1)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":166:1)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":126:5)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":126:9)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":128:13)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":128:12)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":128:5)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":129:5)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":144:5)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":129:8)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":130:5)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":131:9)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":143:9)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":132:13)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":132:49)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:13)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":142:13)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:23)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:36)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:53)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:17)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:63)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":135:13)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":138:13)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":140:13)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":137:29)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":137:24)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":137:17)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":137:40)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":141:27)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":141:17)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":145:5)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":165:5)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":145:8)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":146:5)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":147:9)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":164:9)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":148:13)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":148:17)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":149:13)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":149:34)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:13)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":163:13)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:17)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:25)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:27)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:30)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:38)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:40)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":152:13)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":159:13)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":161:13)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":153:32)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":153:24)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":153:17)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:17)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":158:17)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:25)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:21)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:28)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:32)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:30)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":156:17)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":157:41)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":157:34)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":157:21)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:37)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:36)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":162:27)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":162:17)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":169:1)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":207:1)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":171:5)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":171:9)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":173:13)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":173:12)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":173:5)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":174:5)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":184:5)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":174:8)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":175:5)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":178:5)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":180:5)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":177:19)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":177:9)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":183:16)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":183:9)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":185:5)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":206:5)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":185:8)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":186:5)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":187:9)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":205:9)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":188:13)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":188:17)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":189:13)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":189:34)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":192:13)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":204:13)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":192:17)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":192:24)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":193:13)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":200:13)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":202:13)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":194:32)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":194:24)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":194:17)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:17)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":199:17)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:25)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:21)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:28)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:32)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:30)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":197:17)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":198:41)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":198:34)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":198:21)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:37)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:36)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":203:27)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":203:17)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":210:1)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":243:1)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":212:5)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":212:9)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":214:13)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":214:12)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":214:5)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":215:5)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":220:5)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":215:8)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":216:5)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":219:16)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":219:9)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":221:5)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":242:5)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":221:8)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":222:5)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":223:9)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":241:9)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":224:13)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":224:17)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":225:13)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":225:34)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":228:13)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":240:13)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":228:17)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":228:24)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":229:13)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":236:13)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":238:13)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":230:32)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":230:24)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":230:17)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:17)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":235:17)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:25)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:21)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:28)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:32)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:30)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":233:17)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":234:41)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":234:34)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":234:21)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:37)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:36)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":239:27)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":239:17)
#loc331 = loc(fused[#loc1, #loc2])
#loc332 = loc(fused[#loc3, #loc4])
#loc333 = loc(fused[#loc5, #loc6])
#loc334 = loc(fused[#loc7, #loc8])
#loc335 = loc(fused[#loc10, #loc11])
#loc336 = loc(fused[#loc13, #loc14])
#loc337 = loc(fused[#loc15, #loc16])
#loc338 = loc(fused[#loc19, #loc17])
#loc339 = loc(fused[#loc20, #loc21])
#loc340 = loc(fused[#loc23, #loc21])
#loc341 = loc(fused[#loc24, #loc25])
#loc342 = loc(fused[#loc26, #loc27])
#loc343 = loc(fused[#loc28, #loc29])
#loc344 = loc(fused[#loc33, #loc34])
#loc345 = loc(fused[#loc35, #loc36, #loc37, #loc29])
#loc346 = loc(fused[#loc40, #loc41])
#loc347 = loc(fused[#loc43, #loc44])
#loc348 = loc(fused[#loc46, #loc44])
#loc349 = loc(fused[#loc47, #loc48])
#loc350 = loc(fused[#loc49, #loc50])
#loc351 = loc(fused[#loc51, #loc52])
#loc352 = loc(fused[#loc53, #loc54])
#loc353 = loc(fused[#loc55, #loc56])
#loc354 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc355 = loc(fused[#loc62, #loc60])
#loc356 = loc(fused[#loc63, #loc64])
#loc357 = loc(fused[#loc66, #loc65])
#loc358 = loc(fused[#loc67, #loc68])
#loc359 = loc(fused[#loc70, #loc64])
#loc360 = loc(fused[#loc75, #loc74])
#loc361 = loc(fused[#loc77, #loc78])
#loc362 = loc(fused[#loc79, #loc80])
#loc363 = loc(fused[#loc81, #loc82])
#loc364 = loc(fused[#loc83, #loc84])
#loc365 = loc(fused[#loc85, #loc86])
#loc366 = loc(fused[#loc89, #loc90])
#loc367 = loc(fused[#loc91, #loc92])
#loc368 = loc(fused[#loc95, #loc93])
#loc369 = loc(fused[#loc96, #loc97])
#loc370 = loc(fused[#loc99, #loc97])
#loc371 = loc(fused[#loc100, #loc101])
#loc372 = loc(fused[#loc102, #loc103])
#loc373 = loc(fused[#loc104, #loc105])
#loc374 = loc(fused[#loc109, #loc110])
#loc375 = loc(fused[#loc111, #loc112, #loc113, #loc105])
#loc376 = loc(fused[#loc116, #loc117])
#loc377 = loc(fused[#loc120, #loc121])
#loc378 = loc(fused[#loc123, #loc124, #loc125, #loc121])
#loc379 = loc(fused[#loc127, #loc128])
#loc380 = loc(fused[#loc129, #loc130])
#loc381 = loc(fused[#loc131, #loc132])
#loc382 = loc(fused[#loc133, #loc134])
#loc383 = loc(fused[#loc135, #loc136])
#loc384 = loc(fused[#loc138, #loc140])
#loc385 = loc(fused[#loc141, #loc142, #loc143, #loc134])
#loc386 = loc(fused[#loc146, #loc144])
#loc387 = loc(fused[#loc147, #loc148])
#loc388 = loc(fused[#loc150, #loc149])
#loc389 = loc(fused[#loc151, #loc152])
#loc390 = loc(fused[#loc154, #loc148])
#loc391 = loc(fused[#loc159, #loc158])
#loc392 = loc(fused[#loc161, #loc162])
#loc393 = loc(fused[#loc163, #loc164])
#loc394 = loc(fused[#loc167, #loc165])
#loc395 = loc(fused[#loc168, #loc169])
#loc396 = loc(fused[#loc171, #loc169])
#loc397 = loc(fused[#loc172, #loc173])
#loc398 = loc(fused[#loc174, #loc175])
#loc399 = loc(fused[#loc176, #loc177])
#loc400 = loc(fused[#loc181, #loc182])
#loc401 = loc(fused[#loc183, #loc184, #loc185, #loc177])
#loc402 = loc(fused[#loc188, #loc189])
#loc403 = loc(fused[#loc192, #loc193])
#loc404 = loc(fused[#loc195, #loc193])
#loc405 = loc(fused[#loc196, #loc197])
#loc406 = loc(fused[#loc198, #loc199])
#loc407 = loc(fused[#loc200, #loc201])
#loc408 = loc(fused[#loc202, #loc203])
#loc409 = loc(fused[#loc204, #loc205])
#loc410 = loc(fused[#loc207, #loc209])
#loc411 = loc(fused[#loc210, #loc211, #loc212, #loc203])
#loc412 = loc(fused[#loc215, #loc213])
#loc413 = loc(fused[#loc216, #loc217])
#loc414 = loc(fused[#loc219, #loc218])
#loc415 = loc(fused[#loc220, #loc221])
#loc416 = loc(fused[#loc223, #loc217])
#loc417 = loc(fused[#loc228, #loc227])
#loc418 = loc(fused[#loc231, #loc232])
#loc419 = loc(fused[#loc233, #loc234])
#loc420 = loc(fused[#loc237, #loc235])
#loc421 = loc(fused[#loc238, #loc239])
#loc422 = loc(fused[#loc241, #loc242, #loc243, #loc239])
#loc423 = loc(fused[#loc247, #loc246])
#loc424 = loc(fused[#loc248, #loc249])
#loc425 = loc(fused[#loc251, #loc249])
#loc426 = loc(fused[#loc252, #loc253])
#loc427 = loc(fused[#loc254, #loc255])
#loc428 = loc(fused[#loc256, #loc257])
#loc429 = loc(fused[#loc258, #loc259])
#loc430 = loc(fused[#loc260, #loc261])
#loc431 = loc(fused[#loc262, #loc263, #loc264, #loc259])
#loc432 = loc(fused[#loc267, #loc265])
#loc433 = loc(fused[#loc268, #loc269])
#loc434 = loc(fused[#loc271, #loc270])
#loc435 = loc(fused[#loc272, #loc273])
#loc436 = loc(fused[#loc275, #loc269])
#loc437 = loc(fused[#loc280, #loc279])
#loc438 = loc(fused[#loc283, #loc284])
#loc439 = loc(fused[#loc285, #loc286])
#loc440 = loc(fused[#loc289, #loc287])
#loc441 = loc(fused[#loc290, #loc291])
#loc442 = loc(fused[#loc293, #loc291])
#loc443 = loc(fused[#loc295, #loc294])
#loc444 = loc(fused[#loc296, #loc297])
#loc445 = loc(fused[#loc299, #loc297])
#loc446 = loc(fused[#loc300, #loc301])
#loc447 = loc(fused[#loc302, #loc303])
#loc448 = loc(fused[#loc304, #loc305])
#loc449 = loc(fused[#loc306, #loc307])
#loc450 = loc(fused[#loc308, #loc309])
#loc451 = loc(fused[#loc310, #loc311, #loc312, #loc307])
#loc452 = loc(fused[#loc315, #loc313])
#loc453 = loc(fused[#loc316, #loc317])
#loc454 = loc(fused[#loc319, #loc318])
#loc455 = loc(fused[#loc320, #loc321])
#loc456 = loc(fused[#loc323, #loc317])
#loc457 = loc(fused[#loc328, #loc327])
