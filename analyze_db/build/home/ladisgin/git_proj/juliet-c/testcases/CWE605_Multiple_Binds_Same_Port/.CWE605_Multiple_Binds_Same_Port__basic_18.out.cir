!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc204 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":248:10)
#loc205 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":248:14)
#loc206 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":248:20)
#loc207 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":248:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc446 = loc(fused[#loc204, #loc205])
#loc447 = loc(fused[#loc206, #loc207])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc367)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc368)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc369)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc370)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc371)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc372)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc373)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc374)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc375)
  cir.func private @close(!s32i) -> !s32i loc(#loc376)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc377)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc379)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc380)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc381)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc382)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc383)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc384)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc385)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc386)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc387)
    cir.goto "sink" loc(#loc388)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc45)
    %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc379)
    cir.store %9, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc379)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc34)
    cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc36)
    cir.store %13, %5 : !s32i, !cir.ptr<!s32i> loc(#loc384)
    %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc46)
    cir.store %16, %6 : !u64i, !cir.ptr<!u64i> loc(#loc385)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc40)
    cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    %18 = cir.const #cir.int<4> : !u64i loc(#loc389)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc389)
    cir.store %19, %8 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    cir.scope {
      cir.do {
        %21 = cir.const #cir.int<2> : !s32i loc(#loc51)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %23 = cir.const #cir.int<6> : !s32i loc(#loc53)
        %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
        cir.store %24, %4 : !s32i, !cir.ptr<!s32i> loc(#loc391)
        cir.scope {
          %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc59)
          %74 = cir.const #cir.int<1> : !s32i loc(#loc60)
          %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc60)
          %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc393)
          cir.if %76 {
            cir.break loc(#loc62)
          } loc(#loc394)
        } loc(#loc392)
        cir.scope {
          %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          %74 = cir.const #cir.int<1> : !s32i loc(#loc66)
          %75 = cir.const #cir.int<2> : !s32i loc(#loc67)
          %76 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc396)
          %77 = cir.cast(bitcast, %76 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc397)
          %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc71)
          %79 = cir.cast(integral, %78 : !s32i), !u32i loc(#loc71)
          %80 = cir.call @setsockopt(%73, %74, %75, %77, %79) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc72)
          %81 = cir.const #cir.int<0> : !s32i loc(#loc73)
          %82 = cir.cmp(ne, %80, %81) : !s32i, !cir.bool loc(#loc398)
          cir.if %82 {
            cir.break loc(#loc75)
          } loc(#loc399)
        } loc(#loc395)
        %25 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc400)
        %26 = cir.const #cir.int<0> : !s32i loc(#loc78)
        %27 = cir.const #cir.int<16> : !u64i loc(#loc401)
        cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc402)
        %28 = cir.const #cir.int<2> : !s32i loc(#loc83)
        %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc83)
        %30 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
        cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc403)
        %31 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc86)
        %33 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
        %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
        cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc404)
        %35 = cir.const #cir.int<27015> : !s32i loc(#loc90)
        %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc90)
        %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc91)
        %38 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
        cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc405)
        cir.scope {
          %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          %74 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc407)
          %75 = cir.const #cir.int<16> : !u64i loc(#loc408)
          %76 = cir.cast(integral, %75 : !u64i), !u32i loc(#loc408)
          %77 = cir.call @bind(%73, %74, %76) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc102)
          %78 = cir.const #cir.int<1> : !s32i loc(#loc103)
          %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc103)
          %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc409)
          cir.if %80 {
            cir.break loc(#loc105)
          } loc(#loc410)
        } loc(#loc406)
        cir.scope {
          %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
          %74 = cir.const #cir.int<5> : !s32i loc(#loc109)
          %75 = cir.call @listen(%73, %74) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc110)
          %76 = cir.const #cir.int<1> : !s32i loc(#loc111)
          %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc111)
          %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc412)
          cir.if %78 {
            cir.break loc(#loc113)
          } loc(#loc413)
        } loc(#loc411)
        %39 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc115)
        %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc116)
        %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc117)
        cir.store %42, %5 : !s32i, !cir.ptr<!s32i> loc(#loc414)
        cir.scope {
          %73 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc122)
          %74 = cir.const #cir.int<1> : !s32i loc(#loc123)
          %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc123)
          %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc416)
          cir.if %76 {
            cir.break loc(#loc125)
          } loc(#loc417)
        } loc(#loc415)
        %43 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc126)
        %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
        %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc128)
        %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc129)
        %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc418)
        %48 = cir.const #cir.int<100> : !s32i loc(#loc130)
        %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc130)
        %50 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc131)
        %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc419)
        %52 = cir.const #cir.int<1> : !s32i loc(#loc132)
        %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc132)
        %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc420)
        %55 = cir.cast(integral, %54 : !u64i), !s32i loc(#loc420)
        %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc420)
        %57 = cir.const #cir.int<0> : !s32i loc(#loc133)
        %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc134)
        %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc134)
        cir.store %59, %1 : !s32i, !cir.ptr<!s32i> loc(#loc421)
        cir.scope {
          %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc139)
          %74 = cir.const #cir.int<1> : !s32i loc(#loc140)
          %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc140)
          %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc423)
          %77 = cir.ternary(%76, true {
            %78 = cir.const #true loc(#loc141)
            cir.yield %78 : !cir.bool loc(#loc141)
          }, false {
            %78 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %79 = cir.const #cir.int<0> : !s32i loc(#loc143)
            %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc424)
            %81 = cir.ternary(%80, true {
              %82 = cir.const #true loc(#loc141)
              cir.yield %82 : !cir.bool loc(#loc141)
            }, false {
              %82 = cir.const #false loc(#loc141)
              cir.yield %82 : !cir.bool loc(#loc141)
            }) : (!cir.bool) -> !cir.bool loc(#loc141)
            cir.yield %81 : !cir.bool loc(#loc141)
          }) : (!cir.bool) -> !cir.bool loc(#loc141)
          cir.if %77 {
            cir.break loc(#loc145)
          } loc(#loc425)
        } loc(#loc422)
        %60 = cir.const #cir.int<0> : !s32i loc(#loc146)
        %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc146)
        %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc147)
        %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
        %64 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc148)
        cir.store %61, %64 : !s8i, !cir.ptr<!s8i> loc(#loc426)
        %65 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc149)
        %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
        %67 = cir.const #cir.int<13> : !s32i loc(#loc151)
        %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc149)
        cir.store %68, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc427)
        cir.scope {
          %73 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
          %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc156)
          cir.if %74 {
            %75 = cir.const #cir.int<0> : !s32i loc(#loc158)
            %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc158)
            %77 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
            cir.store %76, %77 : !s8i, !cir.ptr<!s8i> loc(#loc430)
          } loc(#loc429)
        } loc(#loc428)
        %69 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc161)
        %70 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc162)
        %71 = cir.const #cir.int<10> : !s32i loc(#loc163)
        %72 = cir.call @strchr(%70, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc161)
        cir.store %72, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc431)
        cir.scope {
          %73 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
          %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc168)
          cir.if %74 {
            %75 = cir.const #cir.int<0> : !s32i loc(#loc170)
            %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc170)
            %77 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
            cir.store %76, %77 : !s8i, !cir.ptr<!s8i> loc(#loc434)
          } loc(#loc433)
        } loc(#loc432)
        cir.yield loc(#loc50)
      } while {
        %21 = cir.const #cir.int<0> : !s32i loc(#loc173)
        %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc173)
        cir.condition(%22) loc(#loc173)
      } loc(#loc390)
    } loc(#loc390)
    cir.scope {
      %21 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc176)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc177)
      %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc177)
      %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc436)
      cir.if %24 {
        %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc179)
        %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc180)
      } loc(#loc437)
    } loc(#loc435)
    cir.scope {
      %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc183)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc184)
      %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc184)
      %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc439)
      cir.if %24 {
        %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc186)
        %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc187)
      } loc(#loc440)
    } loc(#loc438)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    cir.return loc(#loc24)
  } loc(#loc378)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc442)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc192)
    cir.return loc(#loc191)
  } loc(#loc441)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc443)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc444)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc201)
  cir.func @main(%arg0: !s32i loc(fused[#loc204, #loc205]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc206, #loc207])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc446)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc447)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc203)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc208)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc209)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc210)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc210)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc211)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc198)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc198)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    %8 = cir.get_global @CWE605_Multiple_Binds_Same_Port__basic_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc448)
    cir.call @CWE605_Multiple_Binds_Same_Port__basic_18_good() : () -> () loc(#loc213)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc199)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc199)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc215)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc200)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc200)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    %13 = cir.get_global @CWE605_Multiple_Binds_Same_Port__basic_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc449)
    cir.call @CWE605_Multiple_Binds_Same_Port__basic_18_bad() : () -> () loc(#loc217)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc201)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc220)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc450)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc450)
    cir.return %17 : !s32i loc(#loc450)
  } loc(#loc445)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc452)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc453)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc454)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc455)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc456)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc457)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc458)
    cir.goto "sink" loc(#loc459)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc240)
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc452)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc452)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc233)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc233)
    cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc456)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc235)
    cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc457)
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc241)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc242)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc241)
    cir.store %14, %6 : !u64i, !cir.ptr<!u64i> loc(#loc458)
    cir.scope {
      cir.do {
        %16 = cir.const #cir.int<2> : !s32i loc(#loc245)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc246)
        %18 = cir.const #cir.int<6> : !s32i loc(#loc247)
        %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc248)
        cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc461)
        cir.scope {
          %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc253)
          %69 = cir.const #cir.int<1> : !s32i loc(#loc254)
          %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc254)
          %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc463)
          cir.if %71 {
            cir.break loc(#loc256)
          } loc(#loc464)
        } loc(#loc462)
        %20 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc465)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc259)
        %22 = cir.const #cir.int<16> : !u64i loc(#loc466)
        cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc467)
        %23 = cir.const #cir.int<2> : !s32i loc(#loc264)
        %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc264)
        %25 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
        cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc468)
        %26 = cir.const #cir.int<0> : !s32i loc(#loc266)
        %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc266)
        %28 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
        %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
        cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc469)
        %30 = cir.const #cir.int<27015> : !s32i loc(#loc268)
        %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc268)
        %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc269)
        %33 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
        cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc470)
        cir.scope {
          %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc274)
          %69 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc472)
          %70 = cir.const #cir.int<16> : !u64i loc(#loc473)
          %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc473)
          %72 = cir.call @bind(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc279)
          %73 = cir.const #cir.int<1> : !s32i loc(#loc280)
          %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc280)
          %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc474)
          cir.if %75 {
            cir.break loc(#loc282)
          } loc(#loc475)
        } loc(#loc471)
        cir.scope {
          %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc285)
          %69 = cir.const #cir.int<5> : !s32i loc(#loc286)
          %70 = cir.call @listen(%68, %69) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc287)
          %71 = cir.const #cir.int<1> : !s32i loc(#loc288)
          %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc288)
          %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc477)
          cir.if %73 {
            cir.break loc(#loc290)
          } loc(#loc478)
        } loc(#loc476)
        %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc291)
        %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc292)
        %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc293)
        %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc294)
        cir.store %37, %5 : !s32i, !cir.ptr<!s32i> loc(#loc479)
        cir.scope {
          %68 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc299)
          %69 = cir.const #cir.int<1> : !s32i loc(#loc300)
          %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc300)
          %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc481)
          cir.if %71 {
            cir.break loc(#loc302)
          } loc(#loc482)
        } loc(#loc480)
        %38 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc303)
        %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc304)
        %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc305)
        %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc306)
        %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc483)
        %43 = cir.const #cir.int<100> : !s32i loc(#loc307)
        %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc307)
        %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc308)
        %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc484)
        %47 = cir.const #cir.int<1> : !s32i loc(#loc309)
        %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc309)
        %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc485)
        %50 = cir.cast(integral, %49 : !u64i), !s32i loc(#loc485)
        %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc485)
        %52 = cir.const #cir.int<0> : !s32i loc(#loc310)
        %53 = cir.call @recv(%38, %42, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc311)
        %54 = cir.cast(integral, %53 : !s64i), !s32i loc(#loc311)
        cir.store %54, %1 : !s32i, !cir.ptr<!s32i> loc(#loc486)
        cir.scope {
          %68 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc316)
          %69 = cir.const #cir.int<1> : !s32i loc(#loc317)
          %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc317)
          %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc488)
          %72 = cir.ternary(%71, true {
            %73 = cir.const #true loc(#loc318)
            cir.yield %73 : !cir.bool loc(#loc318)
          }, false {
            %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc319)
            %74 = cir.const #cir.int<0> : !s32i loc(#loc320)
            %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc489)
            %76 = cir.ternary(%75, true {
              %77 = cir.const #true loc(#loc318)
              cir.yield %77 : !cir.bool loc(#loc318)
            }, false {
              %77 = cir.const #false loc(#loc318)
              cir.yield %77 : !cir.bool loc(#loc318)
            }) : (!cir.bool) -> !cir.bool loc(#loc318)
            cir.yield %76 : !cir.bool loc(#loc318)
          }) : (!cir.bool) -> !cir.bool loc(#loc318)
          cir.if %72 {
            cir.break loc(#loc322)
          } loc(#loc490)
        } loc(#loc487)
        %55 = cir.const #cir.int<0> : !s32i loc(#loc323)
        %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc323)
        %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc324)
        %58 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc325)
        %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc325)
        cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc491)
        %60 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc326)
        %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc327)
        %62 = cir.const #cir.int<13> : !s32i loc(#loc328)
        %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc326)
        cir.store %63, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc492)
        cir.scope {
          %68 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc333)
          %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc333)
          cir.if %69 {
            %70 = cir.const #cir.int<0> : !s32i loc(#loc335)
            %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc335)
            %72 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc336)
            cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc495)
          } loc(#loc494)
        } loc(#loc493)
        %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc338)
        %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc339)
        %66 = cir.const #cir.int<10> : !s32i loc(#loc340)
        %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc338)
        cir.store %67, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc496)
        cir.scope {
          %68 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc345)
          %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc345)
          cir.if %69 {
            %70 = cir.const #cir.int<0> : !s32i loc(#loc347)
            %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc347)
            %72 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc348)
            cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc499)
          } loc(#loc498)
        } loc(#loc497)
        cir.yield loc(#loc244)
      } while {
        %16 = cir.const #cir.int<0> : !s32i loc(#loc350)
        %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc350)
        cir.condition(%17) loc(#loc350)
      } loc(#loc460)
    } loc(#loc460)
    cir.scope {
      %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc353)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc354)
      %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc354)
      %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc501)
      cir.if %19 {
        %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc356)
        %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc357)
      } loc(#loc502)
    } loc(#loc500)
    cir.scope {
      %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc360)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc361)
      %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc361)
      %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc504)
      cir.if %19 {
        %20 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc363)
        %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc364)
      } loc(#loc505)
    } loc(#loc503)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc365)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc366)
    cir.return loc(#loc223)
  } loc(#loc451)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_18.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/sys/socket.h":277:1)
#loc6 = loc("/usr/include/sys/socket.h":278:52)
#loc7 = loc("/usr/include/netinet/in.h":404:1)
#loc8 = loc("/usr/include/netinet/in.h":405:40)
#loc9 = loc("/usr/include/sys/socket.h":112:1)
#loc10 = loc("/usr/include/sys/socket.h":113:6)
#loc11 = loc("/usr/include/sys/socket.h":296:1)
#loc12 = loc("/usr/include/sys/socket.h":296:39)
#loc13 = loc("/usr/include/sys/socket.h":306:1)
#loc14 = loc("/usr/include/sys/socket.h":307:38)
#loc15 = loc("/usr/include/sys/socket.h":145:1)
#loc16 = loc("/usr/include/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":246:1)
#loc18 = loc("/usr/include/string.h":247:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":44:1)
#loc24 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":140:1)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":49:9)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":49:26)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":54:9)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":54:13)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":55:9)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":55:28)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":56:9)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":56:15)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":57:9)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":57:31)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":58:9)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":58:31)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":59:9)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":59:37)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":64:9)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":64:23)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":65:9)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":65:33)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":46:5)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":46:10)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":47:1)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":59:26)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":59:33)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":65:23)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":67:9)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":123:17)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:35)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:44)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:57)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:28)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:13)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:68)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":77:13)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":80:13)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":77:17)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":77:33)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":78:13)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":79:17)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:13)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":85:13)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:28)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:42)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:54)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:75)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:76)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:68)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:85)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:17)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:97)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":83:13)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":84:17)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:20)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:21)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:30)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:33)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:47)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:13)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:48)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":87:34)
#loc84 = loc("/usr/include/netinet/in.h":249:5)
#loc85 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":87:13)
#loc86 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":88:39)
#loc87 = loc("/usr/include/netinet/in.h":251:20)
#loc88 = loc("/usr/include/netinet/in.h":33:15)
#loc89 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":88:13)
#loc90 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":89:38)
#loc91 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":89:32)
#loc92 = loc("/usr/include/netinet/in.h":250:15)
#loc93 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":89:13)
#loc94 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":89:46)
#loc95 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:13)
#loc96 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":93:13)
#loc97 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:22)
#loc98 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:54)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:55)
#loc100 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:64)
#loc101 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:78)
#loc102 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:17)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:84)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":91:13)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":92:17)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":94:13)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":97:13)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":94:24)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":94:38)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":94:17)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":94:57)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":95:13)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":96:17)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:35)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:49)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:55)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:28)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:13)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:59)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":99:13)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":102:13)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":99:17)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":99:33)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":100:13)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":101:17)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:31)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:45)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:50)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:49)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:65)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:69)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:77)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:81)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:26)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:13)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:82)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:13)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":108:13)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:17)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:31)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:44)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:47)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:61)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":106:13)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":107:17)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":110:32)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":110:18)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":110:13)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":112:23)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":112:30)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":112:36)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":112:13)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":112:40)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":113:13)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":116:13)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":113:17)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":114:13)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":115:28)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":115:18)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":115:17)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":117:23)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":117:30)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":117:36)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":117:13)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":117:40)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":118:13)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":121:13)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":118:17)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":119:13)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":120:28)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":120:18)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":120:17)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":123:16)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":124:9)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":127:9)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":124:13)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":124:29)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":125:9)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":126:26)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":126:13)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":128:9)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":131:9)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":128:13)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":128:29)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":129:9)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":130:26)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":130:13)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":138:19)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":138:9)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":234:1)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":237:1)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":236:5)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":236:11)
#loc194 = loc("/usr/include/stdlib.h":575:1)
#loc195 = loc("/usr/include/stdlib.h":575:41)
#loc196 = loc("/usr/include/time.h":76:1)
#loc197 = loc("/usr/include/time.h":76:38)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":253:15)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":255:15)
#loc200 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":258:15)
#loc201 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":260:15)
#loc202 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":248:1)
#loc203 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":263:1)
#loc208 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":249:1)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":251:27)
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":251:22)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":251:5)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":253:5)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":254:5)
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":254:52)
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":255:5)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":258:5)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":259:5)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":259:51)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":260:5)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":262:12)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":262:5)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":147:1)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":232:1)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":152:9)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":152:26)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":157:9)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":157:13)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":158:9)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":158:28)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":159:9)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":159:15)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":160:9)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":160:31)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":161:9)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":161:31)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":162:9)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":162:37)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":149:5)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":149:10)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":150:1)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":162:26)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":162:33)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":163:9)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":215:17)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:35)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:44)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:57)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:28)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:13)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:68)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":173:13)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":176:13)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":173:17)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":173:33)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":174:13)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":175:17)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:20)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:21)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:30)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:33)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:47)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:13)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:48)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":179:34)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":179:13)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":180:39)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":180:13)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":181:38)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":181:32)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":181:13)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":181:46)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:13)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":185:13)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:22)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:54)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:55)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:64)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:78)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:17)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:84)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":183:13)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":184:17)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":186:13)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":189:13)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":186:24)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":186:38)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":186:17)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":186:57)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":187:13)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":188:17)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:35)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:49)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:55)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:28)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:13)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:59)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":191:13)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":194:13)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":191:17)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":191:33)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":192:13)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":193:17)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:31)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:45)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:50)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:49)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:65)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:69)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:77)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:81)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:26)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:13)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:82)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:13)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":200:13)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:17)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:31)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:44)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:47)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:61)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":198:13)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":199:17)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":202:32)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":202:18)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":202:13)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":204:23)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":204:30)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":204:36)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":204:13)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":204:40)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":205:13)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":208:13)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":205:17)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":206:13)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":207:28)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":207:18)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":207:17)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":209:23)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":209:30)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":209:36)
#loc341 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":209:13)
#loc342 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":209:40)
#loc343 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":210:13)
#loc344 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":213:13)
#loc345 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":210:17)
#loc346 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":211:13)
#loc347 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":212:28)
#loc348 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":212:18)
#loc349 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":212:17)
#loc350 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":215:16)
#loc351 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":216:9)
#loc352 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":219:9)
#loc353 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":216:13)
#loc354 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":216:29)
#loc355 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":217:9)
#loc356 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":218:26)
#loc357 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":218:13)
#loc358 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":220:9)
#loc359 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":223:9)
#loc360 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":220:13)
#loc361 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":220:29)
#loc362 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":221:9)
#loc363 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":222:26)
#loc364 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":222:13)
#loc365 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":230:19)
#loc366 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":230:9)
#loc367 = loc(fused[#loc1, #loc2])
#loc368 = loc(fused[#loc3, #loc4])
#loc369 = loc(fused[#loc5, #loc6])
#loc370 = loc(fused[#loc7, #loc8])
#loc371 = loc(fused[#loc9, #loc10])
#loc372 = loc(fused[#loc11, #loc12])
#loc373 = loc(fused[#loc13, #loc14])
#loc374 = loc(fused[#loc15, #loc16])
#loc375 = loc(fused[#loc17, #loc18])
#loc376 = loc(fused[#loc19, #loc20])
#loc377 = loc(fused[#loc21, #loc22])
#loc378 = loc(fused[#loc23, #loc24])
#loc379 = loc(fused[#loc25, #loc26])
#loc380 = loc(fused[#loc27, #loc28])
#loc381 = loc(fused[#loc29, #loc30])
#loc382 = loc(fused[#loc31, #loc32])
#loc383 = loc(fused[#loc33, #loc34])
#loc384 = loc(fused[#loc35, #loc36])
#loc385 = loc(fused[#loc37, #loc38])
#loc386 = loc(fused[#loc39, #loc40])
#loc387 = loc(fused[#loc41, #loc42])
#loc388 = loc(fused[#loc43, #loc44])
#loc389 = loc(fused[#loc48, #loc42])
#loc390 = loc(fused[#loc49, #loc50])
#loc391 = loc(fused[#loc55, #loc56])
#loc392 = loc(fused[#loc57, #loc58])
#loc393 = loc(fused[#loc59, #loc60])
#loc394 = loc(fused[#loc61, #loc58])
#loc395 = loc(fused[#loc63, #loc64])
#loc396 = loc(fused[#loc68, #loc69])
#loc397 = loc(fused[#loc70, #loc69])
#loc398 = loc(fused[#loc72, #loc73])
#loc399 = loc(fused[#loc74, #loc64])
#loc400 = loc(fused[#loc76, #loc77])
#loc401 = loc(fused[#loc79, #loc80])
#loc402 = loc(fused[#loc81, #loc82])
#loc403 = loc(fused[#loc85, #loc83])
#loc404 = loc(fused[#loc89, #loc86])
#loc405 = loc(fused[#loc93, #loc94])
#loc406 = loc(fused[#loc95, #loc96])
#loc407 = loc(fused[#loc98, #loc99])
#loc408 = loc(fused[#loc100, #loc101])
#loc409 = loc(fused[#loc102, #loc103])
#loc410 = loc(fused[#loc104, #loc96])
#loc411 = loc(fused[#loc106, #loc107])
#loc412 = loc(fused[#loc110, #loc111])
#loc413 = loc(fused[#loc112, #loc107])
#loc414 = loc(fused[#loc118, #loc119])
#loc415 = loc(fused[#loc120, #loc121])
#loc416 = loc(fused[#loc122, #loc123])
#loc417 = loc(fused[#loc124, #loc121])
#loc418 = loc(fused[#loc127, #loc128])
#loc419 = loc(fused[#loc130, #loc131])
#loc420 = loc(fused[#loc130, #loc132])
#loc421 = loc(fused[#loc135, #loc136])
#loc422 = loc(fused[#loc137, #loc138])
#loc423 = loc(fused[#loc139, #loc140])
#loc424 = loc(fused[#loc142, #loc143])
#loc425 = loc(fused[#loc144, #loc138])
#loc426 = loc(fused[#loc148, #loc146])
#loc427 = loc(fused[#loc152, #loc153])
#loc428 = loc(fused[#loc154, #loc155])
#loc429 = loc(fused[#loc157, #loc155])
#loc430 = loc(fused[#loc160, #loc158])
#loc431 = loc(fused[#loc164, #loc165])
#loc432 = loc(fused[#loc166, #loc167])
#loc433 = loc(fused[#loc169, #loc167])
#loc434 = loc(fused[#loc172, #loc170])
#loc435 = loc(fused[#loc174, #loc175])
#loc436 = loc(fused[#loc176, #loc177])
#loc437 = loc(fused[#loc178, #loc175])
#loc438 = loc(fused[#loc181, #loc182])
#loc439 = loc(fused[#loc183, #loc184])
#loc440 = loc(fused[#loc185, #loc182])
#loc441 = loc(fused[#loc190, #loc191])
#loc442 = loc(fused[#loc192, #loc193])
#loc443 = loc(fused[#loc194, #loc195])
#loc444 = loc(fused[#loc196, #loc197])
#loc445 = loc(fused[#loc202, #loc203])
#loc448 = loc(fused[#loc213, #loc214])
#loc449 = loc(fused[#loc217, #loc218])
#loc450 = loc(fused[#loc221, #loc220])
#loc451 = loc(fused[#loc222, #loc223])
#loc452 = loc(fused[#loc224, #loc225])
#loc453 = loc(fused[#loc226, #loc227])
#loc454 = loc(fused[#loc228, #loc229])
#loc455 = loc(fused[#loc230, #loc231])
#loc456 = loc(fused[#loc232, #loc233])
#loc457 = loc(fused[#loc234, #loc235])
#loc458 = loc(fused[#loc236, #loc237])
#loc459 = loc(fused[#loc238, #loc239])
#loc460 = loc(fused[#loc243, #loc244])
#loc461 = loc(fused[#loc249, #loc250])
#loc462 = loc(fused[#loc251, #loc252])
#loc463 = loc(fused[#loc253, #loc254])
#loc464 = loc(fused[#loc255, #loc252])
#loc465 = loc(fused[#loc257, #loc258])
#loc466 = loc(fused[#loc260, #loc261])
#loc467 = loc(fused[#loc262, #loc263])
#loc468 = loc(fused[#loc265, #loc264])
#loc469 = loc(fused[#loc267, #loc266])
#loc470 = loc(fused[#loc270, #loc271])
#loc471 = loc(fused[#loc272, #loc273])
#loc472 = loc(fused[#loc275, #loc276])
#loc473 = loc(fused[#loc277, #loc278])
#loc474 = loc(fused[#loc279, #loc280])
#loc475 = loc(fused[#loc281, #loc273])
#loc476 = loc(fused[#loc283, #loc284])
#loc477 = loc(fused[#loc287, #loc288])
#loc478 = loc(fused[#loc289, #loc284])
#loc479 = loc(fused[#loc295, #loc296])
#loc480 = loc(fused[#loc297, #loc298])
#loc481 = loc(fused[#loc299, #loc300])
#loc482 = loc(fused[#loc301, #loc298])
#loc483 = loc(fused[#loc304, #loc305])
#loc484 = loc(fused[#loc307, #loc308])
#loc485 = loc(fused[#loc307, #loc309])
#loc486 = loc(fused[#loc312, #loc313])
#loc487 = loc(fused[#loc314, #loc315])
#loc488 = loc(fused[#loc316, #loc317])
#loc489 = loc(fused[#loc319, #loc320])
#loc490 = loc(fused[#loc321, #loc315])
#loc491 = loc(fused[#loc325, #loc323])
#loc492 = loc(fused[#loc329, #loc330])
#loc493 = loc(fused[#loc331, #loc332])
#loc494 = loc(fused[#loc334, #loc332])
#loc495 = loc(fused[#loc337, #loc335])
#loc496 = loc(fused[#loc341, #loc342])
#loc497 = loc(fused[#loc343, #loc344])
#loc498 = loc(fused[#loc346, #loc344])
#loc499 = loc(fused[#loc349, #loc347])
#loc500 = loc(fused[#loc351, #loc352])
#loc501 = loc(fused[#loc353, #loc354])
#loc502 = loc(fused[#loc355, #loc352])
#loc503 = loc(fused[#loc358, #loc359])
#loc504 = loc(fused[#loc360, #loc361])
#loc505 = loc(fused[#loc362, #loc359])
