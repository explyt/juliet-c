!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":103:10)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":103:14)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":103:20)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":103:32)
#loc162 = loc(fused[#loc40, #loc41])
#loc163 = loc(fused[#loc42, #loc43])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc146)
  cir.func private @printIntLine(!s32i) loc(#loc147)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_07_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc146)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc9)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc10)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc150)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc153)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc15)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
          %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
          %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc15)
          cir.store %9, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc153)
          %10 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc17)
          %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc18)
          cir.store %11, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
          %12 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc20)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc21)
        } loc(#loc152)
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc6)
  } loc(#loc148)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_07_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc155)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc158)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc37)
  cir.func @main(%arg0: !s32i loc(fused[#loc40, #loc41]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc42, #loc43])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc39)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc44)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc44)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc45)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc46)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc46)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc47)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc34)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_07_good() : () -> () loc(#loc49)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc36)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_07_bad() : () -> () loc(#loc53)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc37)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %17 : !s32i loc(#loc166)
  } loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc58)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc167)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc168)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc146)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc68)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc171)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc175)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc78)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc78)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc78)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc78)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc175)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc79)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc176)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc79)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc177)
          cir.store %13, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc178)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc87)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc180)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc89)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc90)
              %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc91)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr1) loc(#loc89)
            } loc(#loc181)
          } loc(#loc179)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc92)
          %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc182)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
          %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc96)
          cir.store %16, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc183)
          cir.scope {
            %18 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc185)
            %19 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
            cir.store %20, %18 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc185)
            %21 = cir.load deref %18 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
            %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc104)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc105)
          } loc(#loc184)
        } loc(#loc173)
      } loc(#loc172)
    } loc(#loc170)
    cir.return loc(#loc64)
  } loc(#loc169)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc146)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc111)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc188)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc191)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc192)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc118)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc118)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc118)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc118)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc192)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc119)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc193)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc119)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc194)
          cir.store %13, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc195)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc127)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc197)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc129)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc130)
              %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc131)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr1) loc(#loc129)
            } loc(#loc198)
          } loc(#loc196)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc132)
          %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc199)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
          %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc136)
          cir.store %16, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc200)
          cir.scope {
            %18 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc202)
            %19 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc142)
            cir.store %20, %18 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc202)
            %21 = cir.load deref %18 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc143)
            %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc144)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc145)
          } loc(#loc201)
        } loc(#loc190)
      } loc(#loc189)
    } loc(#loc187)
    cir.return loc(#loc107)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":0:0)
#loc1 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":21:1)
#loc2 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":21:25)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":25:1)
#loc6 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":35:1)
#loc7 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":27:5)
#loc8 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":34:5)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":27:8)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":27:20)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":28:5)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":29:9)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":33:9)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":30:13)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":30:40)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":31:13)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":31:27)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":31:26)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":32:27)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":32:26)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":32:13)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":88:1)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":92:1)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":90:5)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":90:11)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":91:5)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":91:11)
#loc28 = loc("/usr/include/stdlib.h":575:1)
#loc29 = loc("/usr/include/stdlib.h":575:41)
#loc30 = loc("/usr/include/time.h":76:1)
#loc31 = loc("/usr/include/time.h":76:38)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":108:15)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":110:15)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":113:15)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":115:15)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":103:1)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":118:1)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":104:1)
#loc45 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":106:27)
#loc46 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":106:22)
#loc47 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":106:5)
#loc48 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":108:5)
#loc49 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":109:5)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":109:63)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":110:5)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":113:5)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":114:5)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":114:62)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":115:5)
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":117:12)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":117:5)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":47:19)
#loc59 = loc("/usr/include/stdlib.h":672:1)
#loc60 = loc("/usr/include/stdlib.h":672:45)
#loc61 = loc("/usr/include/stdlib.h":756:1)
#loc62 = loc("/usr/include/stdlib.h":756:70)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":42:1)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":65:1)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":44:5)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":64:5)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":44:8)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":44:20)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":45:5)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":48:5)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":50:5)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":47:9)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":51:9)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":63:9)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":52:13)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":52:19)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":53:13)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":53:40)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":55:27)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":55:34)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":55:44)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":55:45)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":55:13)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":56:13)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":56:41)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":56:17)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":56:25)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":56:31)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":56:32)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":56:38)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":56:37)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":57:21)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":57:14)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":57:13)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":58:24)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":58:14)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":58:13)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":59:13)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":62:13)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":60:17)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":60:31)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":60:30)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":61:31)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":61:30)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":61:17)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":68:1)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":86:1)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":70:5)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":85:5)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":70:8)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":70:20)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":71:5)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":72:9)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":84:9)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":73:13)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":73:19)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":74:13)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":74:40)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":76:27)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":76:34)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":76:44)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":76:45)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":76:13)
#loc124 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":77:13)
#loc125 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":77:41)
#loc126 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":77:17)
#loc127 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":77:25)
#loc128 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":77:31)
#loc129 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":77:32)
#loc130 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":77:38)
#loc131 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":77:37)
#loc132 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":78:21)
#loc133 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":78:14)
#loc134 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":78:13)
#loc135 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":79:24)
#loc136 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":79:14)
#loc137 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":79:13)
#loc138 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":80:13)
#loc139 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":83:13)
#loc140 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":81:17)
#loc141 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":81:31)
#loc142 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":81:30)
#loc143 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":82:31)
#loc144 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":82:30)
#loc145 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_07.c":82:17)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc9, #loc10])
#loc151 = loc(fused[#loc11, #loc8])
#loc152 = loc(fused[#loc12, #loc13])
#loc153 = loc(fused[#loc14, #loc15])
#loc154 = loc(fused[#loc16, #loc17])
#loc155 = loc(fused[#loc22, #loc23])
#loc156 = loc(fused[#loc24, #loc25])
#loc157 = loc(fused[#loc26, #loc27])
#loc158 = loc(fused[#loc28, #loc29])
#loc159 = loc(fused[#loc30, #loc31])
#loc160 = loc(fused[#loc32, #loc33])
#loc161 = loc(fused[#loc38, #loc39])
#loc164 = loc(fused[#loc49, #loc50])
#loc165 = loc(fused[#loc53, #loc54])
#loc166 = loc(fused[#loc57, #loc56])
#loc167 = loc(fused[#loc59, #loc60])
#loc168 = loc(fused[#loc61, #loc62])
#loc169 = loc(fused[#loc63, #loc64])
#loc170 = loc(fused[#loc65, #loc66])
#loc171 = loc(fused[#loc67, #loc68])
#loc172 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc173 = loc(fused[#loc73, #loc74])
#loc174 = loc(fused[#loc75, #loc76])
#loc175 = loc(fused[#loc77, #loc78])
#loc176 = loc(fused[#loc80, #loc81])
#loc177 = loc(fused[#loc79, #loc82])
#loc178 = loc(fused[#loc83, #loc82])
#loc179 = loc(fused[#loc84, #loc85])
#loc180 = loc(fused[#loc86, #loc87])
#loc181 = loc(fused[#loc88, #loc85])
#loc182 = loc(fused[#loc94, #loc92])
#loc183 = loc(fused[#loc97, #loc95])
#loc184 = loc(fused[#loc98, #loc99])
#loc185 = loc(fused[#loc100, #loc101])
#loc186 = loc(fused[#loc106, #loc107])
#loc187 = loc(fused[#loc108, #loc109])
#loc188 = loc(fused[#loc110, #loc111])
#loc189 = loc(fused[#loc112, #loc109])
#loc190 = loc(fused[#loc113, #loc114])
#loc191 = loc(fused[#loc115, #loc116])
#loc192 = loc(fused[#loc117, #loc118])
#loc193 = loc(fused[#loc120, #loc121])
#loc194 = loc(fused[#loc119, #loc122])
#loc195 = loc(fused[#loc123, #loc122])
#loc196 = loc(fused[#loc124, #loc125])
#loc197 = loc(fused[#loc126, #loc127])
#loc198 = loc(fused[#loc128, #loc125])
#loc199 = loc(fused[#loc134, #loc132])
#loc200 = loc(fused[#loc137, #loc135])
#loc201 = loc(fused[#loc138, #loc139])
#loc202 = loc(fused[#loc140, #loc141])
