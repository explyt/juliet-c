!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":38:17)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":61:17)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":71:23)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":92:17)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":97:23)
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc166)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc167)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc168)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc15)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc166)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc20)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc174)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc175)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc22)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc22)
  ^bb3:  // pred: ^bb2
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc22)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc22)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc22)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc22)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc22)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc22)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc22)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc22)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc22)
    cir.br ^bb5(%22 : !u32i) loc(#loc22)
  ^bb4:  // pred: ^bb2
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc22)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc22)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc22)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc22)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc22)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc22)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc22)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc22)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc22)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc22)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc22)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc22)
    cir.br ^bb5(%38 : !u32i) loc(#loc22)
  ^bb5(%39: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":38:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc22)
    cir.store %40, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc18)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc177)
  ^bb9:  // pred: ^bb8
    %41 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc166)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %43 = cir.const #cir.int<5> : !s32i loc(#loc27)
    %44 = cir.cmp(eq, %42, %43) : !s32i, !cir.bool loc(#loc178)
    cir.brcond %44 ^bb10, ^bb11 loc(#loc179)
  ^bb10:  // pred: ^bb9
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %46 = cir.cast(integral, %45 : !s32i), !u32i loc(#loc29)
    %47 = cir.call @usleep(%46) : (!u32i) -> !s32i loc(#loc30)
    %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc9)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb11 loc(#loc25)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc25)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc11)
  } loc(#loc170)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc33)
  } loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc44)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc50)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb1 loc(#loc188)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc166)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc55)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc190)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc57)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc57)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc57)
  ^bb3:  // pred: ^bb2
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc57)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc57)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc57)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc57)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc57)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc57)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc57)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc57)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc57)
    cir.br ^bb5(%22 : !u32i) loc(#loc57)
  ^bb4:  // pred: ^bb2
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc57)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc57)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc57)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc57)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc57)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc57)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc57)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc57)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc57)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc57)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc57)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc57)
    cir.br ^bb5(%38 : !u32i) loc(#loc57)
  ^bb5(%39: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":61:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc57)
  ^bb6:  // pred: ^bb5
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc57)
    cir.store %40, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.br ^bb7 loc(#loc53)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc53)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc192)
  ^bb9:  // pred: ^bb8
    %41 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc166)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %43 = cir.const #cir.int<5> : !s32i loc(#loc62)
    %44 = cir.cmp(ne, %42, %43) : !s32i, !cir.bool loc(#loc193)
    cir.brcond %44 ^bb10, ^bb11 loc(#loc194)
  ^bb10:  // pred: ^bb9
    %45 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.br ^bb25 loc(#loc64)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc195)
  ^bb12:  // pred: ^bb11
    %47 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %49 = cir.cmp(gt, %47, %48) : !s32i, !cir.bool loc(#loc196)
    cir.brcond %49 ^bb13, ^bb18 loc(#loc71)
  ^bb13:  // pred: ^bb12
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %51 = cir.const #cir.int<2000> : !s32i loc(#loc73)
    %52 = cir.cmp(le, %50, %51) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %52 ^bb14, ^bb15 loc(#loc71)
  ^bb14:  // pred: ^bb13
    %53 = cir.const #true loc(#loc71)
    cir.br ^bb16(%53 : !cir.bool) loc(#loc71)
  ^bb15:  // pred: ^bb13
    %54 = cir.const #false loc(#loc71)
    cir.br ^bb16(%54 : !cir.bool) loc(#loc71)
  ^bb16(%55: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":71:23)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc71)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%55 : !cir.bool) loc(#loc71)
  ^bb18:  // pred: ^bb12
    %56 = cir.const #false loc(#loc71)
    cir.br ^bb19(%56 : !cir.bool) loc(#loc71)
  ^bb19(%57: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":71:23)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc71)
  ^bb20:  // pred: ^bb19
    cir.brcond %57 ^bb21, ^bb22 loc(#loc198)
  ^bb21:  // pred: ^bb20
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %59 = cir.cast(integral, %58 : !s32i), !u32i loc(#loc77)
    %60 = cir.call @usleep(%59) : (!u32i) -> !s32i loc(#loc78)
    %61 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc43)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb23 loc(#loc75)
  ^bb22:  // pred: ^bb20
    %63 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc44)
    %64 = cir.cast(array_to_ptrdecay, %63 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%64) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb23 loc(#loc68)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc68)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc60)
  ^bb25:  // 2 preds: ^bb10, ^bb24
    cir.br ^bb26 loc(#loc60)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc46)
  } loc(#loc185)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc200)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc86)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc166)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc91)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc204)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc93)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc93)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc93)
  ^bb3:  // pred: ^bb2
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc93)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc93)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc93)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc93)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc93)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc93)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc93)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc93)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc93)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc93)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc93)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc93)
    cir.br ^bb5(%22 : !u32i) loc(#loc93)
  ^bb4:  // pred: ^bb2
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc93)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc93)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc93)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc93)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc93)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc93)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc93)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc93)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc93)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc93)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc93)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc93)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc93)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc93)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc93)
    cir.br ^bb5(%38 : !u32i) loc(#loc93)
  ^bb5(%39: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":92:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc93)
  ^bb6:  // pred: ^bb5
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc93)
    cir.store %40, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb7 loc(#loc89)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc89)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc206)
  ^bb9:  // pred: ^bb8
    %41 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc166)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %43 = cir.const #cir.int<5> : !s32i loc(#loc98)
    %44 = cir.cmp(eq, %42, %43) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %44 ^bb10, ^bb24 loc(#loc208)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc209)
  ^bb11:  // pred: ^bb10
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %46 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %47 = cir.cmp(gt, %45, %46) : !s32i, !cir.bool loc(#loc210)
    cir.brcond %47 ^bb12, ^bb17 loc(#loc104)
  ^bb12:  // pred: ^bb11
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %49 = cir.const #cir.int<2000> : !s32i loc(#loc106)
    %50 = cir.cmp(le, %48, %49) : !s32i, !cir.bool loc(#loc211)
    cir.brcond %50 ^bb13, ^bb14 loc(#loc104)
  ^bb13:  // pred: ^bb12
    %51 = cir.const #true loc(#loc104)
    cir.br ^bb15(%51 : !cir.bool) loc(#loc104)
  ^bb14:  // pred: ^bb12
    %52 = cir.const #false loc(#loc104)
    cir.br ^bb15(%52 : !cir.bool) loc(#loc104)
  ^bb15(%53: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":97:23)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc104)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18(%53 : !cir.bool) loc(#loc104)
  ^bb17:  // pred: ^bb11
    %54 = cir.const #false loc(#loc104)
    cir.br ^bb18(%54 : !cir.bool) loc(#loc104)
  ^bb18(%55: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":97:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc104)
  ^bb19:  // pred: ^bb18
    cir.brcond %55 ^bb20, ^bb21 loc(#loc212)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %57 = cir.cast(integral, %56 : !s32i), !u32i loc(#loc110)
    %58 = cir.call @usleep(%57) : (!u32i) -> !s32i loc(#loc111)
    %59 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc112)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb22 loc(#loc108)
  ^bb21:  // pred: ^bb19
    %61 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc114)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb22 loc(#loc101)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc101)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc96)
  ^bb24:  // 2 preds: ^bb9, ^bb23
    cir.br ^bb25 loc(#loc96)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc82)
  } loc(#loc199)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc121)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc166)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc126)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc130)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    cir.br ^bb4 loc(#loc128)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc132)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb4 loc(#loc124)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc124)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc220)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc166)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc137)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc221)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc222)
  ^bb7:  // pred: ^bb6
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc139)
    %16 = cir.call @usleep(%15) : (!u32i) -> !s32i loc(#loc140)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc141)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb8 loc(#loc135)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc135)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc117)
  } loc(#loc213)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc224)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc148)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb1 loc(#loc226)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc166)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc153)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc227)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc228)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<20> : !s32i loc(#loc155)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb3 loc(#loc151)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc151)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc230)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc166)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc160)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc231)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc232)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc162)
    %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc163)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc164)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc164)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    cir.br ^bb7 loc(#loc158)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc158)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc144)
  } loc(#loc223)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_13.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/include/unistd.h":480:1)
#loc6 = loc("/usr/include/unistd.h":480:43)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":44:19)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":30:1)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":46:1)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":32:5)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":32:9)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":34:14)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":34:13)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":34:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":35:5)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":39:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":35:8)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":35:27)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":36:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":38:9)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":40:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":45:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":40:8)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":40:27)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":41:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":43:15)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":43:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":44:9)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":152:1)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":158:1)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":154:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":154:14)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":155:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":155:14)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":156:5)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":156:14)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":157:5)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":157:14)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":66:19)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":74:23)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":78:23)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":53:1)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":81:1)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":55:5)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":55:9)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":57:14)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":57:13)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":57:5)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":58:5)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":62:5)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":58:8)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":58:27)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":59:5)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":61:9)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":63:5)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":80:5)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":63:8)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":63:27)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":64:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":67:5)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":69:5)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":66:9)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":71:9)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":79:9)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":71:13)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":71:21)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":71:26)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":71:35)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":72:9)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":75:9)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":77:9)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":73:19)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":73:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":74:13)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":78:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":84:1)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":107:1)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":86:5)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":86:9)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":88:14)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":88:13)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":88:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":89:5)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":93:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":89:8)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":89:27)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":90:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":92:9)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":94:5)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":106:5)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":94:8)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":94:27)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":95:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":97:9)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":105:9)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":97:13)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":97:21)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":97:26)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":97:35)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":98:9)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":101:9)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":103:9)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":99:19)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":99:13)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":100:23)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":100:13)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":104:23)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":104:13)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":110:1)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":131:1)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":112:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":112:9)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":114:14)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":114:13)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":114:5)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":115:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":124:5)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":115:8)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":115:27)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":116:5)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":119:5)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":121:5)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":118:19)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":118:9)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":123:17)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":123:9)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":125:5)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":130:5)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":125:8)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":125:27)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":126:5)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":128:15)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":128:9)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":129:19)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":129:9)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":134:1)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":150:1)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":136:5)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":136:9)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":138:14)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":138:13)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":138:5)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":139:5)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":143:5)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":139:8)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":139:27)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":140:5)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":142:17)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":142:9)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":144:5)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":149:5)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":144:8)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":144:27)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":145:5)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":147:15)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":147:9)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":148:19)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_sleep_13.c":148:9)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc7, #loc8])
#loc170 = loc(fused[#loc10, #loc11])
#loc171 = loc(fused[#loc12, #loc13])
#loc172 = loc(fused[#loc16, #loc14])
#loc173 = loc(fused[#loc17, #loc18])
#loc174 = loc(fused[#loc19, #loc20])
#loc175 = loc(fused[#loc21, #loc18])
#loc176 = loc(fused[#loc23, #loc22])
#loc177 = loc(fused[#loc24, #loc25])
#loc178 = loc(fused[#loc26, #loc27])
#loc179 = loc(fused[#loc28, #loc25])
#loc180 = loc(fused[#loc32, #loc33])
#loc181 = loc(fused[#loc34, #loc35])
#loc182 = loc(fused[#loc36, #loc37])
#loc183 = loc(fused[#loc38, #loc39])
#loc184 = loc(fused[#loc40, #loc41])
#loc185 = loc(fused[#loc45, #loc46])
#loc186 = loc(fused[#loc47, #loc48])
#loc187 = loc(fused[#loc51, #loc49])
#loc188 = loc(fused[#loc52, #loc53])
#loc189 = loc(fused[#loc54, #loc55])
#loc190 = loc(fused[#loc56, #loc53])
#loc191 = loc(fused[#loc58, #loc57])
#loc192 = loc(fused[#loc59, #loc60])
#loc193 = loc(fused[#loc61, #loc62])
#loc194 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc195 = loc(fused[#loc67, #loc68])
#loc196 = loc(fused[#loc69, #loc70])
#loc197 = loc(fused[#loc72, #loc73])
#loc198 = loc(fused[#loc74, #loc75, #loc76, #loc68])
#loc199 = loc(fused[#loc81, #loc82])
#loc200 = loc(fused[#loc83, #loc84])
#loc201 = loc(fused[#loc87, #loc85])
#loc202 = loc(fused[#loc88, #loc89])
#loc203 = loc(fused[#loc90, #loc91])
#loc204 = loc(fused[#loc92, #loc89])
#loc205 = loc(fused[#loc94, #loc93])
#loc206 = loc(fused[#loc95, #loc96])
#loc207 = loc(fused[#loc97, #loc98])
#loc208 = loc(fused[#loc99, #loc96])
#loc209 = loc(fused[#loc100, #loc101])
#loc210 = loc(fused[#loc102, #loc103])
#loc211 = loc(fused[#loc105, #loc106])
#loc212 = loc(fused[#loc107, #loc108, #loc109, #loc101])
#loc213 = loc(fused[#loc116, #loc117])
#loc214 = loc(fused[#loc118, #loc119])
#loc215 = loc(fused[#loc122, #loc120])
#loc216 = loc(fused[#loc123, #loc124])
#loc217 = loc(fused[#loc125, #loc126])
#loc218 = loc(fused[#loc127, #loc128, #loc129, #loc124])
#loc219 = loc(fused[#loc133, #loc132])
#loc220 = loc(fused[#loc134, #loc135])
#loc221 = loc(fused[#loc136, #loc137])
#loc222 = loc(fused[#loc138, #loc135])
#loc223 = loc(fused[#loc143, #loc144])
#loc224 = loc(fused[#loc145, #loc146])
#loc225 = loc(fused[#loc149, #loc147])
#loc226 = loc(fused[#loc150, #loc151])
#loc227 = loc(fused[#loc152, #loc153])
#loc228 = loc(fused[#loc154, #loc151])
#loc229 = loc(fused[#loc156, #loc155])
#loc230 = loc(fused[#loc157, #loc158])
#loc231 = loc(fused[#loc159, #loc160])
#loc232 = loc(fused[#loc161, #loc158])
