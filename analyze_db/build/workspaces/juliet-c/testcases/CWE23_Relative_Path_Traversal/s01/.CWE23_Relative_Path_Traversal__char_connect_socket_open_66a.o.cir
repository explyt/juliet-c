!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":106:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_66L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc185)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_663badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc186)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc187)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc188)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc190)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc191)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc192)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc193)
  cir.func private @close(!s32i) -> !s32i loc(#loc194)
  cir.func private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_667badSinkEPPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc195)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_663badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc198)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc199)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc200)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc201)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %6 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc203)
    %7 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc186)
    %8 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_663badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc186)
    cir.copy %8 to %7 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc186)
    %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc40)
    cir.store %9, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    cir.br ^bb1 loc(#loc205)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc33)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc44)
    %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc44)
    cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc201)
    cir.br ^bb2 loc(#loc206)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc206)
  ^bb3:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc48)
    cir.brcond %16 ^bb4, ^bb35 loc(#loc48)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc207)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.int<2> : !s32i loc(#loc51)
    %18 = cir.const #cir.int<1> : !u32i loc(#loc52)
    %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc52)
    %20 = cir.const #cir.int<6> : !u32i loc(#loc53)
    %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc53)
    %22 = cir.call @socket(%17, %19, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.br ^bb6 loc(#loc209)
  ^bb6:  // pred: ^bb5
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc60)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc210)
    cir.brcond %26 ^bb7, ^bb8 loc(#loc211)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc62)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc58)
  ^bb9:  // pred: ^bb8
    %27 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc212)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc213)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc214)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc70)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc70)
    %32 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc215)
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
    %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
    %36 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc216)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc78)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc78)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
    %41 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc217)
    cir.br ^bb10 loc(#loc218)
  ^bb10:  // pred: ^bb9
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %43 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc219)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc220)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc220)
    %46 = cir.call @connect(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %48 = cir.unary(minus, %47) nsw : !s32i, !s32i loc(#loc91)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc221)
    cir.brcond %49 ^bb11, ^bb12 loc(#loc222)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc93)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc84)
  ^bb13:  // pred: ^bb12
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %51 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %52 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc96)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %52 : !u64i), !cir.ptr<!s8i> loc(#loc97)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc223)
    %55 = cir.const #cir.int<1> : !u64i loc(#loc224)
    %56 = cir.const #cir.int<4096> : !s32i loc(#loc102)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc102)
    %58 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %59 = cir.binop(sub, %57, %58) : !u64i loc(#loc225)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc104)
    %62 = cir.binop(sub, %59, %61) : !u64i loc(#loc226)
    %63 = cir.binop(mul, %55, %62) : !u64i loc(#loc227)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %65 = cir.call @recv(%50, %54, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc107)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc107)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb14 loc(#loc229)
  ^bb14:  // pred: ^bb13
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc113)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc230)
    cir.brcond %70 ^bb15, ^bb16 loc(#loc114)
  ^bb15:  // pred: ^bb14
    %71 = cir.const #true loc(#loc114)
    cir.br ^bb21(%71 : !cir.bool) loc(#loc114)
  ^bb16:  // pred: ^bb14
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc231)
    cir.brcond %74 ^bb17, ^bb18 loc(#loc114)
  ^bb17:  // pred: ^bb16
    %75 = cir.const #true loc(#loc114)
    cir.br ^bb19(%75 : !cir.bool) loc(#loc114)
  ^bb18:  // pred: ^bb16
    %76 = cir.const #false loc(#loc114)
    cir.br ^bb19(%76 : !cir.bool) loc(#loc114)
  ^bb19(%77: !cir.bool loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":106:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc114)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%77 : !cir.bool) loc(#loc114)
  ^bb21(%78: !cir.bool loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":106:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc114)
  ^bb22:  // pred: ^bb21
    cir.brcond %78 ^bb23, ^bb24 loc(#loc232)
  ^bb23:  // pred: ^bb22
    cir.br ^bb35 loc(#loc118)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc111)
  ^bb25:  // pred: ^bb24
    %79 = cir.const #cir.int<0> : !s8i loc(#loc119)
    %80 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %81 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %83 = cir.cast(integral, %82 : !s32i), !u64i loc(#loc122)
    %84 = cir.const #cir.int<1> : !u64i loc(#loc233)
    %85 = cir.binop(div, %83, %84) : !u64i loc(#loc234)
    %86 = cir.binop(add, %81, %85) : !u64i loc(#loc235)
    %87 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %86 : !u64i), !cir.ptr<!s8i> loc(#loc125)
    cir.store %79, %87 : !s8i, !cir.ptr<!s8i> loc(#loc236)
    %88 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %89 = cir.const #cir.int<13> : !s8i loc(#loc127)
    %90 = cir.cast(integral, %89 : !s8i), !s32i loc(#loc127)
    %91 = cir.call @strchr(%88, %90) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc128)
    cir.store %91, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    cir.br ^bb26 loc(#loc238)
  ^bb26:  // pred: ^bb25
    %92 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %93 = cir.cast(ptr_to_bool, %92 : !cir.ptr<!s8i>), !cir.bool loc(#loc133)
    cir.brcond %93 ^bb27, ^bb28 loc(#loc239)
  ^bb27:  // pred: ^bb26
    %94 = cir.const #cir.int<0> : !s8i loc(#loc135)
    %95 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    cir.store %94, %95 : !s8i, !cir.ptr<!s8i> loc(#loc240)
    cir.br ^bb28 loc(#loc132)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc132)
  ^bb29:  // pred: ^bb28
    %96 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %97 = cir.const #cir.int<10> : !s8i loc(#loc139)
    %98 = cir.cast(integral, %97 : !s8i), !s32i loc(#loc139)
    %99 = cir.call @strchr(%96, %98) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc140)
    cir.store %99, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    cir.br ^bb30 loc(#loc242)
  ^bb30:  // pred: ^bb29
    %100 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %101 = cir.cast(ptr_to_bool, %100 : !cir.ptr<!s8i>), !cir.bool loc(#loc145)
    cir.brcond %101 ^bb31, ^bb32 loc(#loc243)
  ^bb31:  // pred: ^bb30
    %102 = cir.const #cir.int<0> : !s8i loc(#loc147)
    %103 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    cir.store %102, %103 : !s8i, !cir.ptr<!s8i> loc(#loc244)
    cir.br ^bb32 loc(#loc144)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc144)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc50)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc47)
  ^bb35:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb36 loc(#loc47)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc245)
  ^bb37:  // pred: ^bb36
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %106 = cir.unary(minus, %105) nsw : !s32i, !s32i loc(#loc153)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc246)
    cir.brcond %107 ^bb38, ^bb39 loc(#loc247)
  ^bb38:  // pred: ^bb37
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc156)
    cir.br ^bb39 loc(#loc151)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc151)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc43)
  ^bb41:  // pred: ^bb40
    %110 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %111 = cir.const #cir.int<2> : !s32i loc(#loc158)
    %112 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    %113 = cir.ptr_stride(%112 : !cir.ptr<!cir.ptr<!s8i>>, %111 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.store %110, %113 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    %114 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_667badSinkEPPc(%114) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc161)
    cir.return loc(#loc25)
  } loc(#loc196)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc164)
  cir.func private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_6611goodG2BSinkEPPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc250)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_66L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc253)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc185)
    %3 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_66L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc185)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc185)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc173)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc175)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc164)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc164)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc175)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc178)
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!cir.ptr<!s8i>>, %11 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.store %10, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_6611goodG2BSinkEPPc(%14) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc181)
    cir.return loc(#loc168)
  } loc(#loc251)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_664goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_66L7goodG2BEv() : () -> () loc(#loc184)
    cir.return loc(#loc183)
  } loc(#loc256)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":154:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":154:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":67:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":67:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":96:49)
#loc12 = loc("/usr/include/netinet/in.h":402:1)
#loc13 = loc("/usr/include/netinet/in.h":403:40)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":226:1)
#loc19 = loc("/usr/include/string.h":227:50)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":61:1)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":61:32)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":63:1)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":139:1)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":74:9)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":74:13)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":75:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":75:28)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":76:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":76:15)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":77:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":77:32)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":78:9)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":78:37)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":65:5)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":65:12)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":66:5)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":66:23)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":68:12)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":68:5)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":69:5)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":135:5)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":78:26)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":78:33)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":79:9)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":124:17)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":124:16)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":80:9)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":123:9)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":89:36)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":89:45)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":89:58)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":89:29)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":89:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":89:69)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":90:13)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":93:13)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":90:17)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":90:34)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":91:13)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":92:17)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":94:20)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":94:21)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":94:30)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":94:33)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":94:47)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":94:13)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":94:48)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":95:34)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":95:13)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":96:39)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":96:13)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":96:59)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":97:38)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":97:32)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":97:13)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":97:46)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":98:13)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":101:13)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":98:25)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":98:58)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":98:59)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":98:68)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":98:82)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":98:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":98:88)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":99:13)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":100:17)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:31)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:55)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:62)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:60)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:46)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:69)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:72)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:83)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:88)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:103)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:113)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:114)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:117)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:26)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:13)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":105:118)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":106:13)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":109:13)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":106:17)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":106:31)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":106:47)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":106:61)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":107:13)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":108:17)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":111:57)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":111:13)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":111:18)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":111:28)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":111:41)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":111:52)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":111:53)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":113:30)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":113:36)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":113:23)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":113:13)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":113:40)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":114:13)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":117:13)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":114:17)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":115:13)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":116:28)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":116:18)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":116:17)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":118:30)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":118:36)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":118:23)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":118:13)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":118:40)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":119:13)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":122:13)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":119:17)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":120:13)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":121:28)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":121:18)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":121:17)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":125:9)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":128:9)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":125:13)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":125:30)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":126:9)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":127:26)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":127:13)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":137:20)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":137:15)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":137:5)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":138:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":138:5)
#loc162 = loc("/usr/include/string.h":149:1)
#loc163 = loc("/usr/include/string.h":150:14)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":157:18)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":148:1)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":148:36)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":150:1)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":160:1)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":152:5)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":152:12)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":153:5)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":153:23)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":155:12)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":155:5)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":157:5)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":157:12)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":158:20)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":158:15)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":158:5)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":159:17)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":159:5)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":162:1)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":165:1)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_66a.cpp":164:5)
#loc185 = loc(fused[#loc1, #loc2])
#loc186 = loc(fused[#loc3, #loc4])
#loc187 = loc(fused[#loc5, #loc6])
#loc188 = loc(fused[#loc7, #loc8])
#loc189 = loc(fused[#loc9, #loc10])
#loc190 = loc(fused[#loc12, #loc13])
#loc191 = loc(fused[#loc14, #loc15])
#loc192 = loc(fused[#loc16, #loc17])
#loc193 = loc(fused[#loc18, #loc19])
#loc194 = loc(fused[#loc20, #loc21])
#loc195 = loc(fused[#loc22, #loc23])
#loc196 = loc(fused[#loc24, #loc25])
#loc197 = loc(fused[#loc26, #loc27])
#loc198 = loc(fused[#loc28, #loc29])
#loc199 = loc(fused[#loc30, #loc31])
#loc200 = loc(fused[#loc32, #loc33])
#loc201 = loc(fused[#loc34, #loc35])
#loc202 = loc(fused[#loc36, #loc37])
#loc203 = loc(fused[#loc38, #loc39])
#loc204 = loc(fused[#loc41, #loc40])
#loc205 = loc(fused[#loc42, #loc43])
#loc206 = loc(fused[#loc46, #loc47])
#loc207 = loc(fused[#loc49, #loc50])
#loc208 = loc(fused[#loc55, #loc56])
#loc209 = loc(fused[#loc57, #loc58])
#loc210 = loc(fused[#loc59, #loc60])
#loc211 = loc(fused[#loc61, #loc58])
#loc212 = loc(fused[#loc63, #loc64])
#loc213 = loc(fused[#loc66, #loc67])
#loc214 = loc(fused[#loc68, #loc69])
#loc215 = loc(fused[#loc72, #loc70])
#loc216 = loc(fused[#loc76, #loc77])
#loc217 = loc(fused[#loc81, #loc82])
#loc218 = loc(fused[#loc83, #loc84])
#loc219 = loc(fused[#loc86, #loc87])
#loc220 = loc(fused[#loc88, #loc89])
#loc221 = loc(fused[#loc90, #loc91])
#loc222 = loc(fused[#loc92, #loc84])
#loc223 = loc(fused[#loc98, #loc99])
#loc224 = loc(fused[#loc100, #loc101])
#loc225 = loc(fused[#loc102, #loc103])
#loc226 = loc(fused[#loc102, #loc104])
#loc227 = loc(fused[#loc100, #loc105])
#loc228 = loc(fused[#loc108, #loc109])
#loc229 = loc(fused[#loc110, #loc111])
#loc230 = loc(fused[#loc112, #loc113])
#loc231 = loc(fused[#loc115, #loc116])
#loc232 = loc(fused[#loc117, #loc111])
#loc233 = loc(fused[#loc123, #loc124])
#loc234 = loc(fused[#loc122, #loc124])
#loc235 = loc(fused[#loc121, #loc124])
#loc236 = loc(fused[#loc120, #loc119])
#loc237 = loc(fused[#loc129, #loc130])
#loc238 = loc(fused[#loc131, #loc132])
#loc239 = loc(fused[#loc134, #loc132])
#loc240 = loc(fused[#loc137, #loc135])
#loc241 = loc(fused[#loc141, #loc142])
#loc242 = loc(fused[#loc143, #loc144])
#loc243 = loc(fused[#loc146, #loc144])
#loc244 = loc(fused[#loc149, #loc147])
#loc245 = loc(fused[#loc150, #loc151])
#loc246 = loc(fused[#loc152, #loc153])
#loc247 = loc(fused[#loc154, #loc151])
#loc248 = loc(fused[#loc159, #loc157])
#loc249 = loc(fused[#loc162, #loc163])
#loc250 = loc(fused[#loc165, #loc166])
#loc251 = loc(fused[#loc167, #loc168])
#loc252 = loc(fused[#loc169, #loc170])
#loc253 = loc(fused[#loc171, #loc172])
#loc254 = loc(fused[#loc174, #loc173])
#loc255 = loc(fused[#loc179, #loc177])
#loc256 = loc(fused[#loc182, #loc183])
