!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc65)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc66)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__fopen_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc68)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc69)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc13)
    cir.store %2, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc70)
    %3 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc15)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %8 = cir.call @fopen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc15)
    cir.store %8, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc71)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc20)
      cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
      cir.for : cond {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc22)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc74)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc24)
        cir.condition(%13) loc(#loc24)
      } body {
        cir.scope {
          %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
          %11 = cir.call @fclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc27)
        } loc(#loc75)
        cir.yield loc(#loc19)
      } step {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc29)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
        cir.yield loc(#loc72)
      } loc(#loc72)
    } loc(#loc72)
    cir.return loc(#loc8)
  } loc(#loc67)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__fopen_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc78)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc31)
  } loc(#loc77)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc80)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc40)
    cir.store %2, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc82)
    %3 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc43)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc43)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc44)
    %8 = cir.call @fopen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc42)
    cir.store %8, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc83)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc49)
      cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
      cir.for : cond {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc86)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc53)
        cir.condition(%13) loc(#loc53)
      } body {
        cir.scope {
          cir.scope {
            %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc58)
            %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc89)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc59)
            cir.if %14 {
              %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
              %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc62)
            } loc(#loc90)
          } loc(#loc88)
        } loc(#loc87)
        cir.yield loc(#loc48)
      } step {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
        %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc64)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
        cir.yield loc(#loc84)
      } loc(#loc84)
    } loc(#loc84)
    cir.return loc(#loc35)
  } loc(#loc79)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":28:18)
#loc4 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":28:30)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":21:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":34:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":23:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":23:9)
#loc11 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":24:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":24:12)
#loc13 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":26:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":26:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":28:12)
#loc16 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":28:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":28:34)
#loc18 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":29:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":33:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":29:13)
#loc21 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":29:9)
#loc22 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":29:16)
#loc23 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":29:20)
#loc24 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":29:18)
#loc25 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":30:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":32:16)
#loc27 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":32:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":29:24)
#loc29 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":29:23)
#loc30 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":59:1)
#loc31 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":62:1)
#loc32 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":61:5)
#loc33 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":61:13)
#loc34 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":41:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":57:1)
#loc36 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":43:5)
#loc37 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":43:9)
#loc38 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":44:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":44:12)
#loc40 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":46:12)
#loc41 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":46:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":48:12)
#loc43 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":48:18)
#loc44 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":48:30)
#loc45 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":48:5)
#loc46 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":48:34)
#loc47 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":49:5)
#loc48 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":56:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":49:13)
#loc50 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":49:9)
#loc51 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":49:16)
#loc52 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":49:20)
#loc53 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":49:18)
#loc54 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":50:5)
#loc55 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":52:9)
#loc56 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":55:9)
#loc57 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":52:13)
#loc58 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":52:21)
#loc59 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":52:18)
#loc60 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":53:9)
#loc61 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":54:20)
#loc62 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":54:13)
#loc63 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":49:24)
#loc64 = loc("CWE690_NULL_Deref_From_Return__fopen_17.c":49:23)
#loc65 = loc(fused[#loc1, #loc2])
#loc66 = loc(fused[#loc5, #loc6])
#loc67 = loc(fused[#loc7, #loc8])
#loc68 = loc(fused[#loc9, #loc10])
#loc69 = loc(fused[#loc11, #loc12])
#loc70 = loc(fused[#loc14, #loc13])
#loc71 = loc(fused[#loc16, #loc17])
#loc72 = loc(fused[#loc18, #loc19])
#loc73 = loc(fused[#loc21, #loc20])
#loc74 = loc(fused[#loc22, #loc23])
#loc75 = loc(fused[#loc25, #loc19])
#loc76 = loc(fused[#loc29, #loc28])
#loc77 = loc(fused[#loc30, #loc31])
#loc78 = loc(fused[#loc32, #loc33])
#loc79 = loc(fused[#loc34, #loc35])
#loc80 = loc(fused[#loc36, #loc37])
#loc81 = loc(fused[#loc38, #loc39])
#loc82 = loc(fused[#loc41, #loc40])
#loc83 = loc(fused[#loc45, #loc46])
#loc84 = loc(fused[#loc47, #loc48])
#loc85 = loc(fused[#loc50, #loc49])
#loc86 = loc(fused[#loc51, #loc52])
#loc87 = loc(fused[#loc54, #loc48])
#loc88 = loc(fused[#loc55, #loc56])
#loc89 = loc(fused[#loc57, #loc58])
#loc90 = loc(fused[#loc60, #loc56])
#loc91 = loc(fused[#loc64, #loc63])
