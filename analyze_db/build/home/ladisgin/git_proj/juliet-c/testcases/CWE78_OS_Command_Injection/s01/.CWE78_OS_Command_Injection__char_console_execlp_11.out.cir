!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc66 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:37)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":143:10)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":143:14)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":143:20)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":143:32)
#true = #cir.bool<true> : !cir.bool
#loc209 = loc(fused[#loc103, #loc104])
#loc210 = loc(fused[#loc105, #loc106])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execlp_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc169)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc170)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_execlp_11_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc171)
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc172)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc173)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc174)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc175)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc17)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc20)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execlp_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc171)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_execlp_11_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc171)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc171)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc183)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc183)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc32)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc32)
    cir.brcond %8 ^bb2, ^bb26 loc(#loc184)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc185)
  ^bb3:  // pred: ^bb2
    %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
    cir.store %11, %0 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    cir.br ^bb4 loc(#loc186)
  ^bb4:  // pred: ^bb3
    %12 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc41)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc187)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc43)
    %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc188)
    cir.brcond %18 ^bb5, ^bb23 loc(#loc189)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc190)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc49)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc50)
    %24 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc191)
    %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc191)
    %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc175)
    %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
    %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc53)
    %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc54)
    %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc192)
    cir.brcond %32 ^bb7, ^bb20 loc(#loc193)
  ^bb7:  // pred: ^bb6
    %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
    cir.store %35, %0 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb8 loc(#loc195)
  ^bb8:  // pred: ^bb7
    %36 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc65)
    %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc196)
    cir.brcond %39 ^bb9, ^bb14 loc(#loc66)
  ^bb9:  // pred: ^bb8
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %41 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc69)
    %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc197)
    %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc70)
    %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc67)
    %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc67)
    %48 = cir.const #cir.int<10> : !s32i loc(#loc71)
    %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc198)
    cir.brcond %49 ^bb10, ^bb11 loc(#loc66)
  ^bb10:  // pred: ^bb9
    %50 = cir.const #true loc(#loc66)
    cir.br ^bb12(%50 : !cir.bool) loc(#loc66)
  ^bb11:  // pred: ^bb9
    %51 = cir.const #false loc(#loc66)
    cir.br ^bb12(%51 : !cir.bool) loc(#loc66)
  ^bb12(%52: !cir.bool loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:37)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc66)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15(%52 : !cir.bool) loc(#loc66)
  ^bb14:  // pred: ^bb8
    %53 = cir.const #false loc(#loc66)
    cir.br ^bb15(%53 : !cir.bool) loc(#loc66)
  ^bb15(%54: !cir.bool loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:37)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc66)
  ^bb16:  // pred: ^bb15
    cir.brcond %54 ^bb17, ^bb18 loc(#loc199)
  ^bb17:  // pred: ^bb16
    %55 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc73)
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %58 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc76)
    %61 = cir.binop(sub, %58, %60) : !u64i loc(#loc200)
    %62 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc77)
    cir.store %56, %62 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb18 loc(#loc63)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc63)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc56)
  ^bb20:  // pred: ^bb6
    %63 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc17)
    %64 = cir.cast(array_to_ptrdecay, %63 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc17)
    cir.call @printLine(%64) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc79)
    %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %68 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc81)
    %69 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %66, %69 : !s8i, !cir.ptr<!s8i> loc(#loc202)
    cir.br ^bb21 loc(#loc46)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc46)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc40)
  ^bb23:  // 2 preds: ^bb4, ^bb22
    cir.br ^bb24 loc(#loc40)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc36)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc31)
  ^bb26:  // 2 preds: ^bb1, ^bb25
    cir.br ^bb27 loc(#loc31)
  ^bb27:  // pred: ^bb26
    %70 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc20)
    %71 = cir.cast(array_to_ptrdecay, %70 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc20)
    %72 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc83)
    %73 = cir.cast(array_to_ptrdecay, %72 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc83)
    %74 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc21)
    %75 = cir.cast(array_to_ptrdecay, %74 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc21)
    %76 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %77 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
    %78 = cir.call @execlp(%71, %73, %75, %76, %77) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc86)
    cir.return loc(#loc23)
  } loc(#loc178)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execlp_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    cir.return loc(#loc88)
  } loc(#loc203)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc206)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc100)
  cir.func @main(%arg0: !s32i loc(fused[#loc103, #loc104]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc105, #loc106])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc108)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc109)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc109)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc110)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_execlp_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call @CWE78_OS_Command_Injection__char_console_execlp_11_good() : () -> () loc(#loc112)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc99)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_execlp_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call @CWE78_OS_Command_Injection__char_console_execlp_11_bad() : () -> () loc(#loc116)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc100)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    cir.return %17 : !s32i loc(#loc213)
  } loc(#loc208)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc123)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc126)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc170)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc170)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc170)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    cir.br ^bb1 loc(#loc219)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc220)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc220)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc135)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc135)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc221)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    cir.br ^bb4 loc(#loc138)
  ^bb3:  // pred: ^bb1
    %10 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc141)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %12 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc126)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc126)
    %14 = cir.call @strcat(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc134)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc143)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc143)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc144)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc144)
    %19 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc145)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc145)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc147)
    %23 = cir.call @execlp(%16, %18, %20, %21, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc148)
    cir.return loc(#loc128)
  } loc(#loc216)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc169)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc169)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc169)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc226)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc226)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc157)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc157)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc227)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc160)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    %10 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc162)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc162)
    %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc160)
    cir.br ^bb3 loc(#loc156)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc156)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc163)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc163)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc164)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc164)
    %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc165)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc165)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
    %21 = cir.call @execlp(%14, %16, %18, %19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc168)
    cir.return loc(#loc150)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execlp_11.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":114:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":114:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":92:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":92:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":48:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":48:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("/usr/include/stdio.h":149:1)
#loc14 = loc("/usr/include/stdio.h":149:14)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":71:31)
#loc18 = loc("/usr/include/unistd.h":605:1)
#loc19 = loc("/usr/include/unistd.h":606:14)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":81:12)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":81:38)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":45:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":82:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":54:13)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":54:41)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":47:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":47:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":49:12)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":49:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":50:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":77:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":50:8)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":50:26)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":51:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":52:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":76:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":54:30)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":54:37)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":56:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":75:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":56:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":56:21)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":56:31)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":57:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":59:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":74:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":59:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":59:32)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":59:31)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":59:47)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":59:51)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":59:61)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":59:21)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":59:71)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":60:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":68:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":70:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":63:31)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":63:38)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":63:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":63:42)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":67:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:25)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:35)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:40)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:45)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:53)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:54)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":64:59)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":65:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":66:43)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":66:25)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":66:30)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":66:38)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":66:39)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":71:21)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":73:37)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":73:21)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":73:26)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":73:33)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":81:25)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":81:52)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":81:66)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":81:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":127:1)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":131:1)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":129:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":129:14)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":130:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":130:14)
#loc93 = loc("/usr/include/stdlib.h":575:1)
#loc94 = loc("/usr/include/stdlib.h":575:41)
#loc95 = loc("/usr/include/time.h":76:1)
#loc96 = loc("/usr/include/time.h":76:38)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":148:15)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":150:15)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":153:15)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":155:15)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":143:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":158:1)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":144:1)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":146:27)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":146:22)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":146:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":148:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":149:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":149:61)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":150:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":153:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":154:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":154:60)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":155:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":157:12)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":157:5)
#loc121 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc122 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":97:19)
#loc124 = loc("/usr/include/string.h":149:1)
#loc125 = loc("/usr/include/string.h":150:14)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":102:22)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":89:1)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":108:1)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":91:5)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":91:12)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":93:12)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":93:5)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":94:5)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":103:5)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":94:8)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":94:27)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":95:5)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":98:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":100:5)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":97:9)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":102:9)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":102:16)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":107:12)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":107:25)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":107:38)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":107:52)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":107:66)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":107:5)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":111:1)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":125:1)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":113:5)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":113:12)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":115:12)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":115:5)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":116:5)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":120:5)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":116:8)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":116:26)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":117:5)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":119:9)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":119:16)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":119:22)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":124:12)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":124:25)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":124:38)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":124:52)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":124:66)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_execlp_11.c":124:5)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc5, #loc6])
#loc172 = loc(fused[#loc7, #loc8])
#loc173 = loc(fused[#loc9, #loc10])
#loc174 = loc(fused[#loc11, #loc12])
#loc175 = loc(fused[#loc13, #loc14])
#loc176 = loc(fused[#loc15, #loc16])
#loc177 = loc(fused[#loc18, #loc19])
#loc178 = loc(fused[#loc22, #loc23])
#loc179 = loc(fused[#loc24, #loc25])
#loc180 = loc(fused[#loc26, #loc27])
#loc181 = loc(fused[#loc29, #loc28])
#loc182 = loc(fused[#loc30, #loc31])
#loc183 = loc(fused[#loc32, #loc33])
#loc184 = loc(fused[#loc34, #loc31])
#loc185 = loc(fused[#loc35, #loc36])
#loc186 = loc(fused[#loc39, #loc40])
#loc187 = loc(fused[#loc41, #loc42])
#loc188 = loc(fused[#loc41, #loc43])
#loc189 = loc(fused[#loc44, #loc40])
#loc190 = loc(fused[#loc45, #loc46])
#loc191 = loc(fused[#loc50, #loc51])
#loc192 = loc(fused[#loc53, #loc54])
#loc193 = loc(fused[#loc55, #loc56, #loc57, #loc46])
#loc194 = loc(fused[#loc60, #loc61])
#loc195 = loc(fused[#loc62, #loc63])
#loc196 = loc(fused[#loc64, #loc65])
#loc197 = loc(fused[#loc68, #loc69])
#loc198 = loc(fused[#loc67, #loc71])
#loc199 = loc(fused[#loc72, #loc63])
#loc200 = loc(fused[#loc75, #loc76])
#loc201 = loc(fused[#loc74, #loc73])
#loc202 = loc(fused[#loc80, #loc79])
#loc203 = loc(fused[#loc87, #loc88])
#loc204 = loc(fused[#loc89, #loc90])
#loc205 = loc(fused[#loc91, #loc92])
#loc206 = loc(fused[#loc93, #loc94])
#loc207 = loc(fused[#loc95, #loc96])
#loc208 = loc(fused[#loc101, #loc102])
#loc211 = loc(fused[#loc112, #loc113])
#loc212 = loc(fused[#loc116, #loc117])
#loc213 = loc(fused[#loc120, #loc119])
#loc214 = loc(fused[#loc121, #loc122])
#loc215 = loc(fused[#loc124, #loc125])
#loc216 = loc(fused[#loc127, #loc128])
#loc217 = loc(fused[#loc129, #loc130])
#loc218 = loc(fused[#loc132, #loc131])
#loc219 = loc(fused[#loc133, #loc134])
#loc220 = loc(fused[#loc135, #loc136])
#loc221 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc222 = loc(fused[#loc149, #loc150])
#loc223 = loc(fused[#loc151, #loc152])
#loc224 = loc(fused[#loc154, #loc153])
#loc225 = loc(fused[#loc155, #loc156])
#loc226 = loc(fused[#loc157, #loc158])
#loc227 = loc(fused[#loc159, #loc156])
