!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc42 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":78:10)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":78:14)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":78:20)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":78:32)
#loc106 = loc(fused[#loc42, #loc43])
#loc107 = loc(fused[#loc44, #loc45])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc91)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc92)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc93)
    cir.br ^bb1 loc(#loc94)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.br ^bb2 loc(#loc94)
  ^bb2:  // 2 preds: ^bb1, ^bb8
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc96)
    cir.brcond %6 ^bb3, ^bb9 loc(#loc18)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc98)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc91)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc91)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc9)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    %9 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc22)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %13 = cir.call @__isoc99_scanf(%11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc22)
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc25)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.br ^bb2 loc(#loc94)
  ^bb9:  // pred: ^bb2
    cir.br ^bb10 loc(#loc13)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc5)
  } loc(#loc90)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc101)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc100)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc102)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc103)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc39)
  cir.func @main(%arg0: !s32i loc(fused[#loc42, #loc43]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc44, #loc45])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc46)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc47)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc48)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc48)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc49)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc36)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_scanf_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call @CWE252_Unchecked_Return_Value__char_scanf_17_good() : () -> () loc(#loc51)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc37)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc38)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_scanf_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call @CWE252_Unchecked_Return_Value__char_scanf_17_bad() : () -> () loc(#loc55)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.return %17 : !s32i loc(#loc110)
  } loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc60)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc112)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc113)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc114)
    cir.br ^bb1 loc(#loc115)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.br ^bb2 loc(#loc115)
  ^bb2:  // 2 preds: ^bb1, ^bb12
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc117)
    cir.brcond %6 ^bb3, ^bb13 loc(#loc75)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc118)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc119)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc112)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc112)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.br ^bb6 loc(#loc120)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc81)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc82)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc82)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %13 = cir.call @__isoc99_scanf(%11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc81)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc84)
    %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc121)
    cir.brcond %16 ^bb7, ^bb8 loc(#loc122)
  ^bb7:  // pred: ^bb6
    %17 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc60)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb8 loc(#loc80)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc80)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc78)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc70)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc70)
  ^bb12:  // pred: ^bb11
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc88)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.br ^bb2 loc(#loc115)
  ^bb13:  // pred: ^bb2
    cir.br ^bb14 loc(#loc70)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc62)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":35:19)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":24:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":38:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":32:13)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":32:36)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":33:13)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":33:27)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":26:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":26:9)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":37:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:13)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:9)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:16)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:20)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:18)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":28:5)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":29:9)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":36:9)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":35:13)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":35:29)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:24)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":27:23)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":64:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":67:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":66:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":66:11)
#loc30 = loc("/usr/include/stdlib.h":575:1)
#loc31 = loc("/usr/include/stdlib.h":575:41)
#loc32 = loc("/usr/include/time.h":76:1)
#loc33 = loc("/usr/include/time.h":76:38)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":83:15)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":85:15)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":88:15)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":90:15)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":78:1)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":93:1)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":79:1)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":81:27)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":81:22)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":81:5)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":83:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":84:5)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":84:55)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":85:5)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":88:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":89:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":89:54)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":90:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":92:12)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":92:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":58:27)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":45:1)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":62:1)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":53:13)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":53:36)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":54:13)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":54:27)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":47:5)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":47:9)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:5)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":61:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:13)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:9)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:16)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:20)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:18)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":49:5)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":50:9)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":60:9)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":56:13)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":59:13)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":56:17)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":56:23)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":56:33)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":56:42)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":57:13)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":58:17)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:24)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_scanf_17.c":48:23)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc4, #loc5])
#loc91 = loc(fused[#loc6, #loc7])
#loc92 = loc(fused[#loc8, #loc9])
#loc93 = loc(fused[#loc10, #loc11])
#loc94 = loc(fused[#loc12, #loc13])
#loc95 = loc(fused[#loc15, #loc14])
#loc96 = loc(fused[#loc16, #loc17])
#loc97 = loc(fused[#loc19, #loc13])
#loc98 = loc(fused[#loc20, #loc21])
#loc99 = loc(fused[#loc25, #loc24])
#loc100 = loc(fused[#loc26, #loc27])
#loc101 = loc(fused[#loc28, #loc29])
#loc102 = loc(fused[#loc30, #loc31])
#loc103 = loc(fused[#loc32, #loc33])
#loc104 = loc(fused[#loc34, #loc35])
#loc105 = loc(fused[#loc40, #loc41])
#loc108 = loc(fused[#loc51, #loc52])
#loc109 = loc(fused[#loc55, #loc56])
#loc110 = loc(fused[#loc59, #loc58])
#loc111 = loc(fused[#loc61, #loc62])
#loc112 = loc(fused[#loc63, #loc64])
#loc113 = loc(fused[#loc65, #loc66])
#loc114 = loc(fused[#loc67, #loc68])
#loc115 = loc(fused[#loc69, #loc70])
#loc116 = loc(fused[#loc72, #loc71])
#loc117 = loc(fused[#loc73, #loc74])
#loc118 = loc(fused[#loc76, #loc70])
#loc119 = loc(fused[#loc77, #loc78])
#loc120 = loc(fused[#loc79, #loc80])
#loc121 = loc(fused[#loc81, #loc84])
#loc122 = loc(fused[#loc85, #loc80])
#loc123 = loc(fused[#loc88, #loc87])
