!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc167)
  cir.func private  @printHexCharLine(!s8i) loc(#loc168)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func  @_ZN31CWE401_Memory_Leak__new_char_153badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<1> : !u64i loc(#loc174)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc19)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
        %6 = cir.const #cir.int<65> : !s8i loc(#loc21)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
        cir.store %6, %7 : !s8i, !cir.ptr<!s8i> loc(#loc176)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
        %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc25)
        cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc26)
        cir.break loc(#loc27)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc28)
        cir.break loc(#loc29)
      }
      ] loc(#loc14)
    } loc(#loc173)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc32)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        cir.break loc(#loc33)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc35)
        cir.break loc(#loc36)
      }
      ] loc(#loc30)
    } loc(#loc177)
    cir.return loc(#loc9)
  } loc(#loc170)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr1) loc(#loc178)
  cir.func internal private  @_ZN31CWE401_Memory_Leak__new_char_15L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc47)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<1> : !u64i loc(#loc183)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc50)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
        %6 = cir.const #cir.int<65> : !s8i loc(#loc52)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        cir.store %6, %7 : !s8i, !cir.ptr<!s8i> loc(#loc185)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc56)
        cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc57)
        cir.break loc(#loc58)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc60)
        cir.break loc(#loc61)
      }
      ] loc(#loc45)
    } loc(#loc182)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc64)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc66)
        cir.break loc(#loc67)
      },
      case (default) {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
        %5 = cir.const #cir.int<1> : !u64i loc(#loc50)
        cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc50)
        cir.break loc(#loc69)
      }
      ] loc(#loc62)
    } loc(#loc186)
    cir.return loc(#loc40)
  } loc(#loc179)
  cir.func internal private  @_ZN31CWE401_Memory_Leak__new_char_15L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc74)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc78)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<1> : !u64i loc(#loc191)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc81)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc191)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
        %6 = cir.const #cir.int<65> : !s8i loc(#loc83)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
        cir.store %6, %7 : !s8i, !cir.ptr<!s8i> loc(#loc193)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
        %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc87)
        cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc88)
        cir.break loc(#loc89)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc90)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc90)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc91)
        cir.break loc(#loc92)
      }
      ] loc(#loc76)
    } loc(#loc190)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc95)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
        %5 = cir.const #cir.int<1> : !u64i loc(#loc81)
        cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc81)
        cir.break loc(#loc97)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc98)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc98)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc99)
        cir.break loc(#loc100)
      }
      ] loc(#loc93)
    } loc(#loc194)
    cir.return loc(#loc71)
  } loc(#loc187)
  cir.func internal private  @_ZN31CWE401_Memory_Leak__new_char_15L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc105)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.scope {
      %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc199)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc111)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc112)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc112)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc113)
        cir.break loc(#loc114)
      },
      case (default) {
        cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
        %4 = cir.const #cir.int<65> : !s8i loc(#loc117)
        %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
        cir.store %4, %5 : !s8i, !cir.ptr<!s8i> loc(#loc201)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
        %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc121)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc122)
        cir.break loc(#loc123)
      }
      ] loc(#loc107)
    } loc(#loc198)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc126)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        cir.break loc(#loc127)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc128)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc128)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc129)
        cir.break loc(#loc130)
      }
      ] loc(#loc124)
    } loc(#loc202)
    cir.return loc(#loc102)
  } loc(#loc195)
  cir.func internal private  @_ZN31CWE401_Memory_Leak__new_char_15L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc135)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    cir.scope {
      %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc207)
      %3 = cir.const #cir.int<6> : !s32i loc(#loc141)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
        %4 = cir.const #cir.int<65> : !s8i loc(#loc144)
        %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
        cir.store %4, %5 : !s8i, !cir.ptr<!s8i> loc(#loc209)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
        %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc148)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc149)
        cir.break loc(#loc150)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc151)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc151)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc152)
        cir.break loc(#loc153)
      }
      ] loc(#loc137)
    } loc(#loc206)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc156)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        cir.break loc(#loc157)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc158)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc158)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc159)
        cir.break loc(#loc160)
      }
      ] loc(#loc154)
    } loc(#loc210)
    cir.return loc(#loc132)
  } loc(#loc203)
  cir.func  @_ZN31CWE401_Memory_Leak__new_char_154goodEv() extra(#fn_attr) {
    cir.call @_ZN31CWE401_Memory_Leak__new_char_15L8goodB2G1Ev() : () -> () loc(#loc163)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_15L8goodB2G2Ev() : () -> () loc(#loc164)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_15L8goodG2B1Ev() : () -> () loc(#loc165)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_15L8goodG2B2Ev() : () -> () loc(#loc166)
    cir.return loc(#loc162)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_15.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE401_Memory_Leak__new_char_15.cpp":43:19)
#loc8 = loc("CWE401_Memory_Leak__new_char_15.cpp":28:1)
#loc9 = loc("CWE401_Memory_Leak__new_char_15.cpp":57:1)
#loc10 = loc("CWE401_Memory_Leak__new_char_15.cpp":30:5)
#loc11 = loc("CWE401_Memory_Leak__new_char_15.cpp":30:12)
#loc12 = loc("CWE401_Memory_Leak__new_char_15.cpp":31:12)
#loc13 = loc("CWE401_Memory_Leak__new_char_15.cpp":31:5)
#loc14 = loc("CWE401_Memory_Leak__new_char_15.cpp":32:5)
#loc15 = loc("CWE401_Memory_Leak__new_char_15.cpp":45:5)
#loc16 = loc("CWE401_Memory_Leak__new_char_15.cpp":32:12)
#loc17 = loc("CWE401_Memory_Leak__new_char_15.cpp":36:16)
#loc18 = loc("CWE401_Memory_Leak__new_char_15.cpp":36:20)
#loc19 = loc("CWE401_Memory_Leak__new_char_15.cpp":28:6)
#loc20 = loc("CWE401_Memory_Leak__new_char_15.cpp":36:9)
#loc21 = loc("CWE401_Memory_Leak__new_char_15.cpp":38:17)
#loc22 = loc("CWE401_Memory_Leak__new_char_15.cpp":38:10)
#loc23 = loc("CWE401_Memory_Leak__new_char_15.cpp":38:9)
#loc24 = loc("CWE401_Memory_Leak__new_char_15.cpp":39:27)
#loc25 = loc("CWE401_Memory_Leak__new_char_15.cpp":39:26)
#loc26 = loc("CWE401_Memory_Leak__new_char_15.cpp":39:9)
#loc27 = loc("CWE401_Memory_Leak__new_char_15.cpp":40:9)
#loc28 = loc("CWE401_Memory_Leak__new_char_15.cpp":43:9)
#loc29 = loc("CWE401_Memory_Leak__new_char_15.cpp":44:9)
#loc30 = loc("CWE401_Memory_Leak__new_char_15.cpp":46:5)
#loc31 = loc("CWE401_Memory_Leak__new_char_15.cpp":56:5)
#loc32 = loc("CWE401_Memory_Leak__new_char_15.cpp":46:12)
#loc33 = loc("CWE401_Memory_Leak__new_char_15.cpp":51:9)
#loc34 = loc("CWE401_Memory_Leak__new_char_15.cpp":54:19)
#loc35 = loc("CWE401_Memory_Leak__new_char_15.cpp":54:9)
#loc36 = loc("CWE401_Memory_Leak__new_char_15.cpp":55:9)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc39 = loc("CWE401_Memory_Leak__new_char_15.cpp":64:1)
#loc40 = loc("CWE401_Memory_Leak__new_char_15.cpp":93:1)
#loc41 = loc("CWE401_Memory_Leak__new_char_15.cpp":66:5)
#loc42 = loc("CWE401_Memory_Leak__new_char_15.cpp":66:12)
#loc43 = loc("CWE401_Memory_Leak__new_char_15.cpp":67:12)
#loc44 = loc("CWE401_Memory_Leak__new_char_15.cpp":67:5)
#loc45 = loc("CWE401_Memory_Leak__new_char_15.cpp":68:5)
#loc46 = loc("CWE401_Memory_Leak__new_char_15.cpp":81:5)
#loc47 = loc("CWE401_Memory_Leak__new_char_15.cpp":68:12)
#loc48 = loc("CWE401_Memory_Leak__new_char_15.cpp":72:16)
#loc49 = loc("CWE401_Memory_Leak__new_char_15.cpp":72:20)
#loc50 = loc("CWE401_Memory_Leak__new_char_15.cpp":64:13)
#loc51 = loc("CWE401_Memory_Leak__new_char_15.cpp":72:9)
#loc52 = loc("CWE401_Memory_Leak__new_char_15.cpp":74:17)
#loc53 = loc("CWE401_Memory_Leak__new_char_15.cpp":74:10)
#loc54 = loc("CWE401_Memory_Leak__new_char_15.cpp":74:9)
#loc55 = loc("CWE401_Memory_Leak__new_char_15.cpp":75:27)
#loc56 = loc("CWE401_Memory_Leak__new_char_15.cpp":75:26)
#loc57 = loc("CWE401_Memory_Leak__new_char_15.cpp":75:9)
#loc58 = loc("CWE401_Memory_Leak__new_char_15.cpp":76:9)
#loc59 = loc("CWE401_Memory_Leak__new_char_15.cpp":79:19)
#loc60 = loc("CWE401_Memory_Leak__new_char_15.cpp":79:9)
#loc61 = loc("CWE401_Memory_Leak__new_char_15.cpp":80:9)
#loc62 = loc("CWE401_Memory_Leak__new_char_15.cpp":82:5)
#loc63 = loc("CWE401_Memory_Leak__new_char_15.cpp":92:5)
#loc64 = loc("CWE401_Memory_Leak__new_char_15.cpp":82:12)
#loc65 = loc("CWE401_Memory_Leak__new_char_15.cpp":86:19)
#loc66 = loc("CWE401_Memory_Leak__new_char_15.cpp":86:9)
#loc67 = loc("CWE401_Memory_Leak__new_char_15.cpp":87:9)
#loc68 = loc("CWE401_Memory_Leak__new_char_15.cpp":90:16)
#loc69 = loc("CWE401_Memory_Leak__new_char_15.cpp":91:9)
#loc70 = loc("CWE401_Memory_Leak__new_char_15.cpp":96:1)
#loc71 = loc("CWE401_Memory_Leak__new_char_15.cpp":125:1)
#loc72 = loc("CWE401_Memory_Leak__new_char_15.cpp":98:5)
#loc73 = loc("CWE401_Memory_Leak__new_char_15.cpp":98:12)
#loc74 = loc("CWE401_Memory_Leak__new_char_15.cpp":99:12)
#loc75 = loc("CWE401_Memory_Leak__new_char_15.cpp":99:5)
#loc76 = loc("CWE401_Memory_Leak__new_char_15.cpp":100:5)
#loc77 = loc("CWE401_Memory_Leak__new_char_15.cpp":113:5)
#loc78 = loc("CWE401_Memory_Leak__new_char_15.cpp":100:12)
#loc79 = loc("CWE401_Memory_Leak__new_char_15.cpp":104:16)
#loc80 = loc("CWE401_Memory_Leak__new_char_15.cpp":104:20)
#loc81 = loc("CWE401_Memory_Leak__new_char_15.cpp":96:13)
#loc82 = loc("CWE401_Memory_Leak__new_char_15.cpp":104:9)
#loc83 = loc("CWE401_Memory_Leak__new_char_15.cpp":106:17)
#loc84 = loc("CWE401_Memory_Leak__new_char_15.cpp":106:10)
#loc85 = loc("CWE401_Memory_Leak__new_char_15.cpp":106:9)
#loc86 = loc("CWE401_Memory_Leak__new_char_15.cpp":107:27)
#loc87 = loc("CWE401_Memory_Leak__new_char_15.cpp":107:26)
#loc88 = loc("CWE401_Memory_Leak__new_char_15.cpp":107:9)
#loc89 = loc("CWE401_Memory_Leak__new_char_15.cpp":108:9)
#loc90 = loc("CWE401_Memory_Leak__new_char_15.cpp":111:19)
#loc91 = loc("CWE401_Memory_Leak__new_char_15.cpp":111:9)
#loc92 = loc("CWE401_Memory_Leak__new_char_15.cpp":112:9)
#loc93 = loc("CWE401_Memory_Leak__new_char_15.cpp":114:5)
#loc94 = loc("CWE401_Memory_Leak__new_char_15.cpp":124:5)
#loc95 = loc("CWE401_Memory_Leak__new_char_15.cpp":114:12)
#loc96 = loc("CWE401_Memory_Leak__new_char_15.cpp":118:16)
#loc97 = loc("CWE401_Memory_Leak__new_char_15.cpp":119:9)
#loc98 = loc("CWE401_Memory_Leak__new_char_15.cpp":122:19)
#loc99 = loc("CWE401_Memory_Leak__new_char_15.cpp":122:9)
#loc100 = loc("CWE401_Memory_Leak__new_char_15.cpp":123:9)
#loc101 = loc("CWE401_Memory_Leak__new_char_15.cpp":128:1)
#loc102 = loc("CWE401_Memory_Leak__new_char_15.cpp":158:1)
#loc103 = loc("CWE401_Memory_Leak__new_char_15.cpp":130:5)
#loc104 = loc("CWE401_Memory_Leak__new_char_15.cpp":130:12)
#loc105 = loc("CWE401_Memory_Leak__new_char_15.cpp":131:12)
#loc106 = loc("CWE401_Memory_Leak__new_char_15.cpp":131:5)
#loc107 = loc("CWE401_Memory_Leak__new_char_15.cpp":132:5)
#loc108 = loc("CWE401_Memory_Leak__new_char_15.cpp":146:5)
#loc109 = loc("CWE401_Memory_Leak__new_char_15.cpp":140:9)
#loc110 = loc("CWE401_Memory_Leak__new_char_15.cpp":140:14)
#loc111 = loc("CWE401_Memory_Leak__new_char_15.cpp":132:12)
#loc112 = loc("CWE401_Memory_Leak__new_char_15.cpp":136:19)
#loc113 = loc("CWE401_Memory_Leak__new_char_15.cpp":136:9)
#loc114 = loc("CWE401_Memory_Leak__new_char_15.cpp":137:9)
#loc115 = loc("CWE401_Memory_Leak__new_char_15.cpp":141:9)
#loc116 = loc("CWE401_Memory_Leak__new_char_15.cpp":141:17)
#loc117 = loc("CWE401_Memory_Leak__new_char_15.cpp":143:17)
#loc118 = loc("CWE401_Memory_Leak__new_char_15.cpp":143:10)
#loc119 = loc("CWE401_Memory_Leak__new_char_15.cpp":143:9)
#loc120 = loc("CWE401_Memory_Leak__new_char_15.cpp":144:27)
#loc121 = loc("CWE401_Memory_Leak__new_char_15.cpp":144:26)
#loc122 = loc("CWE401_Memory_Leak__new_char_15.cpp":144:9)
#loc123 = loc("CWE401_Memory_Leak__new_char_15.cpp":145:9)
#loc124 = loc("CWE401_Memory_Leak__new_char_15.cpp":147:5)
#loc125 = loc("CWE401_Memory_Leak__new_char_15.cpp":157:5)
#loc126 = loc("CWE401_Memory_Leak__new_char_15.cpp":147:12)
#loc127 = loc("CWE401_Memory_Leak__new_char_15.cpp":152:9)
#loc128 = loc("CWE401_Memory_Leak__new_char_15.cpp":155:19)
#loc129 = loc("CWE401_Memory_Leak__new_char_15.cpp":155:9)
#loc130 = loc("CWE401_Memory_Leak__new_char_15.cpp":156:9)
#loc131 = loc("CWE401_Memory_Leak__new_char_15.cpp":161:1)
#loc132 = loc("CWE401_Memory_Leak__new_char_15.cpp":191:1)
#loc133 = loc("CWE401_Memory_Leak__new_char_15.cpp":163:5)
#loc134 = loc("CWE401_Memory_Leak__new_char_15.cpp":163:12)
#loc135 = loc("CWE401_Memory_Leak__new_char_15.cpp":164:12)
#loc136 = loc("CWE401_Memory_Leak__new_char_15.cpp":164:5)
#loc137 = loc("CWE401_Memory_Leak__new_char_15.cpp":165:5)
#loc138 = loc("CWE401_Memory_Leak__new_char_15.cpp":179:5)
#loc139 = loc("CWE401_Memory_Leak__new_char_15.cpp":169:9)
#loc140 = loc("CWE401_Memory_Leak__new_char_15.cpp":169:14)
#loc141 = loc("CWE401_Memory_Leak__new_char_15.cpp":165:12)
#loc142 = loc("CWE401_Memory_Leak__new_char_15.cpp":170:9)
#loc143 = loc("CWE401_Memory_Leak__new_char_15.cpp":170:17)
#loc144 = loc("CWE401_Memory_Leak__new_char_15.cpp":172:17)
#loc145 = loc("CWE401_Memory_Leak__new_char_15.cpp":172:10)
#loc146 = loc("CWE401_Memory_Leak__new_char_15.cpp":172:9)
#loc147 = loc("CWE401_Memory_Leak__new_char_15.cpp":173:27)
#loc148 = loc("CWE401_Memory_Leak__new_char_15.cpp":173:26)
#loc149 = loc("CWE401_Memory_Leak__new_char_15.cpp":173:9)
#loc150 = loc("CWE401_Memory_Leak__new_char_15.cpp":174:9)
#loc151 = loc("CWE401_Memory_Leak__new_char_15.cpp":177:19)
#loc152 = loc("CWE401_Memory_Leak__new_char_15.cpp":177:9)
#loc153 = loc("CWE401_Memory_Leak__new_char_15.cpp":178:9)
#loc154 = loc("CWE401_Memory_Leak__new_char_15.cpp":180:5)
#loc155 = loc("CWE401_Memory_Leak__new_char_15.cpp":190:5)
#loc156 = loc("CWE401_Memory_Leak__new_char_15.cpp":180:12)
#loc157 = loc("CWE401_Memory_Leak__new_char_15.cpp":185:9)
#loc158 = loc("CWE401_Memory_Leak__new_char_15.cpp":188:19)
#loc159 = loc("CWE401_Memory_Leak__new_char_15.cpp":188:9)
#loc160 = loc("CWE401_Memory_Leak__new_char_15.cpp":189:9)
#loc161 = loc("CWE401_Memory_Leak__new_char_15.cpp":193:1)
#loc162 = loc("CWE401_Memory_Leak__new_char_15.cpp":199:1)
#loc163 = loc("CWE401_Memory_Leak__new_char_15.cpp":195:5)
#loc164 = loc("CWE401_Memory_Leak__new_char_15.cpp":196:5)
#loc165 = loc("CWE401_Memory_Leak__new_char_15.cpp":197:5)
#loc166 = loc("CWE401_Memory_Leak__new_char_15.cpp":198:5)
#loc167 = loc(fused[#loc1, #loc2])
#loc168 = loc(fused[#loc3, #loc4])
#loc169 = loc(fused[#loc5, #loc6])
#loc170 = loc(fused[#loc8, #loc9])
#loc171 = loc(fused[#loc10, #loc11])
#loc172 = loc(fused[#loc13, #loc12])
#loc173 = loc(fused[#loc14, #loc15])
#loc174 = loc(fused[#loc17, #loc18])
#loc175 = loc(fused[#loc20, #loc18])
#loc176 = loc(fused[#loc23, #loc21])
#loc177 = loc(fused[#loc30, #loc31])
#loc178 = loc(fused[#loc37, #loc38])
#loc179 = loc(fused[#loc39, #loc40])
#loc180 = loc(fused[#loc41, #loc42])
#loc181 = loc(fused[#loc44, #loc43])
#loc182 = loc(fused[#loc45, #loc46])
#loc183 = loc(fused[#loc48, #loc49])
#loc184 = loc(fused[#loc51, #loc49])
#loc185 = loc(fused[#loc54, #loc52])
#loc186 = loc(fused[#loc62, #loc63])
#loc187 = loc(fused[#loc70, #loc71])
#loc188 = loc(fused[#loc72, #loc73])
#loc189 = loc(fused[#loc75, #loc74])
#loc190 = loc(fused[#loc76, #loc77])
#loc191 = loc(fused[#loc79, #loc80])
#loc192 = loc(fused[#loc82, #loc80])
#loc193 = loc(fused[#loc85, #loc83])
#loc194 = loc(fused[#loc93, #loc94])
#loc195 = loc(fused[#loc101, #loc102])
#loc196 = loc(fused[#loc103, #loc104])
#loc197 = loc(fused[#loc106, #loc105])
#loc198 = loc(fused[#loc107, #loc108])
#loc199 = loc(fused[#loc109, #loc110])
#loc200 = loc(fused[#loc115, #loc116])
#loc201 = loc(fused[#loc119, #loc117])
#loc202 = loc(fused[#loc124, #loc125])
#loc203 = loc(fused[#loc131, #loc132])
#loc204 = loc(fused[#loc133, #loc134])
#loc205 = loc(fused[#loc136, #loc135])
#loc206 = loc(fused[#loc137, #loc138])
#loc207 = loc(fused[#loc139, #loc140])
#loc208 = loc(fused[#loc142, #loc143])
#loc209 = loc(fused[#loc146, #loc144])
#loc210 = loc(fused[#loc154, #loc155])
#loc211 = loc(fused[#loc161, #loc162])
