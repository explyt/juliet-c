!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc191)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc192)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc194)
  cir.func private @printLongLongLine(!s64i) loc(#loc195)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc18)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc199)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc201)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc201)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc27)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc193)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc194)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc194)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc27)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc30)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc30)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc203)
      } loc(#loc202)
    } loc(#loc200)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc205)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc205)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc34)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc34)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc41)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc42)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc42)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc208)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc210)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc46)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc45)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc45)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc46)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc210)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc47)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc48)
          } loc(#loc209)
        } loc(#loc207)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc51)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc52)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc52)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc212)
          cir.if %9 {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc56)
              %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc57)
              %12 = cir.unary(minus, %11) nsw : !s64i, !s64i loc(#loc57)
              %13 = cir.const #cir.int<1> : !s64i loc(#loc57)
              %14 = cir.binop(sub, %12, %13) nsw : !s64i loc(#loc57)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc58)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc58)
              %17 = cir.binop(div, %14, %16) : !s64i loc(#loc215)
              %18 = cir.cmp(gt, %10, %17) : !s64i, !cir.bool loc(#loc216)
              cir.if %18 {
                %19 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc218)
                %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc65)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc64)
                %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc64)
                %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc65)
                cir.store %23, %19 : !s64i, !cir.ptr<!s64i> loc(#loc218)
                %24 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc66)
                cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc67)
              } else {
                %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc13)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc13)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc68)
              } loc(#loc217)
            } loc(#loc214)
          } loc(#loc213)
        } loc(#loc211)
      } loc(#loc206)
    } loc(#loc204)
    cir.return loc(#loc15)
  } loc(#loc197)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc220)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc221)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc219)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc79)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc224)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc226)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc226)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc83)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc83)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc88)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc193)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc228)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc228)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc88)
      } else {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc92)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc193)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc229)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc229)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc92)
      } loc(#loc227)
    } loc(#loc225)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc231)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc231)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc98)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc98)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc105)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc106)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc234)
          cir.if %9 {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc110)
              %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc111)
              %12 = cir.unary(minus, %11) nsw : !s64i, !s64i loc(#loc111)
              %13 = cir.const #cir.int<1> : !s64i loc(#loc111)
              %14 = cir.binop(sub, %12, %13) nsw : !s64i loc(#loc111)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc112)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc112)
              %17 = cir.binop(div, %14, %16) : !s64i loc(#loc237)
              %18 = cir.cmp(gt, %10, %17) : !s64i, !cir.bool loc(#loc238)
              cir.if %18 {
                %19 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc240)
                %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc119)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc118)
                %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc118)
                %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc119)
                cir.store %23, %19 : !s64i, !cir.ptr<!s64i> loc(#loc240)
                %24 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc120)
                cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc121)
              } else {
                %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc122)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc122)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc123)
              } loc(#loc239)
            } loc(#loc236)
          } loc(#loc235)
        } loc(#loc233)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc126)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc127)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc242)
          cir.if %9 {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc131)
              %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc132)
              %12 = cir.unary(minus, %11) nsw : !s64i, !s64i loc(#loc132)
              %13 = cir.const #cir.int<1> : !s64i loc(#loc132)
              %14 = cir.binop(sub, %12, %13) nsw : !s64i loc(#loc132)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc133)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc133)
              %17 = cir.binop(div, %14, %16) : !s64i loc(#loc245)
              %18 = cir.cmp(gt, %10, %17) : !s64i, !cir.bool loc(#loc246)
              cir.if %18 {
                %19 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc248)
                %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc140)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc139)
                %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc139)
                %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc140)
                cir.store %23, %19 : !s64i, !cir.ptr<!s64i> loc(#loc248)
                %24 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc141)
                cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc142)
              } else {
                %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc143)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc143)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc144)
              } loc(#loc247)
            } loc(#loc244)
          } loc(#loc243)
        } loc(#loc241)
      } loc(#loc232)
    } loc(#loc230)
    cir.return loc(#loc76)
  } loc(#loc222)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc250)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc149)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc251)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc253)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc253)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc153)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc153)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc158)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc159)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc159)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc255)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc161)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc162)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc162)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc256)
      } loc(#loc254)
    } loc(#loc252)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc258)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc258)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc166)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc166)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc173)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc174)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc174)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc261)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc263)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc178)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc177)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc177)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc178)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc263)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc179)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc180)
          } loc(#loc262)
        } loc(#loc260)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc183)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc184)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc184)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc265)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc267)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc188)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc187)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc187)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc188)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc267)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc189)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc190)
          } loc(#loc266)
        } loc(#loc264)
      } loc(#loc259)
    } loc(#loc257)
    cir.return loc(#loc146)
  } loc(#loc249)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:24)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":58:27)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":23:1)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":62:1)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":25:5)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":25:13)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":26:12)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":26:5)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":27:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":36:5)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":27:8)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":27:33)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":28:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":31:5)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":33:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:9)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:17)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":35:17)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":35:16)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":35:9)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":37:5)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":61:5)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":37:8)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":37:33)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":38:5)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":45:5)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":47:5)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":39:9)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":44:9)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":39:12)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":39:19)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":40:9)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":42:13)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":42:37)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":42:30)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":43:31)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":43:13)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":48:9)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":60:9)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":48:12)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":48:19)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":49:9)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:13)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":59:13)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:17)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:25)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:35)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:36)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":52:13)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":55:13)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":57:13)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":53:17)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":53:41)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":53:34)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":54:35)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":54:17)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":58:17)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":156:1)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":160:1)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":158:5)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":158:13)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":159:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":159:13)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":71:1)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":117:1)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":73:5)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":73:13)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":74:12)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":74:5)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":75:5)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":84:5)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":75:8)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":75:33)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":76:5)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":79:5)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":81:5)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:9)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:17)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:24)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:28)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:9)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:17)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:24)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:28)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":85:5)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":116:5)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":85:8)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":85:33)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":86:5)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":100:5)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":102:5)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":87:9)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":99:9)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":87:12)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":87:19)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":88:9)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:13)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":98:13)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:17)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:25)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:35)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:36)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":91:13)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":94:13)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":96:13)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":92:17)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":92:41)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":92:34)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":93:35)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":93:17)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":97:27)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":97:17)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":103:9)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":115:9)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":103:12)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":103:19)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":104:9)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:13)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":114:13)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:17)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:25)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:35)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:36)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":107:13)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":110:13)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":112:13)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":108:17)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":108:41)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":108:34)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":109:35)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":109:17)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":113:27)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":113:17)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":122:1)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":154:1)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":124:5)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":124:13)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":125:12)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":125:5)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":126:5)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":135:5)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":126:8)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":126:33)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":127:5)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":130:5)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":132:5)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":129:17)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":129:16)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":129:9)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":134:17)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":134:16)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":134:9)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":136:5)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":153:5)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":136:8)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":136:33)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":137:5)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":144:5)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":146:5)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":138:9)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":143:9)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":138:12)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":138:19)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":139:9)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":141:13)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":141:37)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":141:30)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":142:31)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":142:13)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":147:9)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":152:9)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":147:12)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":147:19)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":148:9)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":150:13)
#loc187 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":150:37)
#loc188 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":150:30)
#loc189 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":151:31)
#loc190 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":151:13)
#loc191 = loc(fused[#loc1, #loc2])
#loc192 = loc(fused[#loc3, #loc4])
#loc193 = loc(fused[#loc5, #loc6])
#loc194 = loc(fused[#loc7, #loc8])
#loc195 = loc(fused[#loc9, #loc10])
#loc196 = loc(fused[#loc11, #loc12])
#loc197 = loc(fused[#loc14, #loc15])
#loc198 = loc(fused[#loc16, #loc17])
#loc199 = loc(fused[#loc19, #loc18])
#loc200 = loc(fused[#loc20, #loc21])
#loc201 = loc(fused[#loc22, #loc23])
#loc202 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc203 = loc(fused[#loc31, #loc29])
#loc204 = loc(fused[#loc32, #loc33])
#loc205 = loc(fused[#loc34, #loc35])
#loc206 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc207 = loc(fused[#loc39, #loc40])
#loc208 = loc(fused[#loc41, #loc42])
#loc209 = loc(fused[#loc43, #loc40])
#loc210 = loc(fused[#loc44, #loc45])
#loc211 = loc(fused[#loc49, #loc50])
#loc212 = loc(fused[#loc51, #loc52])
#loc213 = loc(fused[#loc53, #loc50])
#loc214 = loc(fused[#loc54, #loc55])
#loc215 = loc(fused[#loc57, #loc58])
#loc216 = loc(fused[#loc56, #loc59])
#loc217 = loc(fused[#loc60, #loc61, #loc62, #loc55])
#loc218 = loc(fused[#loc63, #loc64])
#loc219 = loc(fused[#loc69, #loc70])
#loc220 = loc(fused[#loc71, #loc72])
#loc221 = loc(fused[#loc73, #loc74])
#loc222 = loc(fused[#loc75, #loc76])
#loc223 = loc(fused[#loc77, #loc78])
#loc224 = loc(fused[#loc80, #loc79])
#loc225 = loc(fused[#loc81, #loc82])
#loc226 = loc(fused[#loc83, #loc84])
#loc227 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc228 = loc(fused[#loc90, #loc91])
#loc229 = loc(fused[#loc94, #loc95])
#loc230 = loc(fused[#loc96, #loc97])
#loc231 = loc(fused[#loc98, #loc99])
#loc232 = loc(fused[#loc100, #loc101, #loc102, #loc97])
#loc233 = loc(fused[#loc103, #loc104])
#loc234 = loc(fused[#loc105, #loc106])
#loc235 = loc(fused[#loc107, #loc104])
#loc236 = loc(fused[#loc108, #loc109])
#loc237 = loc(fused[#loc111, #loc112])
#loc238 = loc(fused[#loc110, #loc113])
#loc239 = loc(fused[#loc114, #loc115, #loc116, #loc109])
#loc240 = loc(fused[#loc117, #loc118])
#loc241 = loc(fused[#loc124, #loc125])
#loc242 = loc(fused[#loc126, #loc127])
#loc243 = loc(fused[#loc128, #loc125])
#loc244 = loc(fused[#loc129, #loc130])
#loc245 = loc(fused[#loc132, #loc133])
#loc246 = loc(fused[#loc131, #loc134])
#loc247 = loc(fused[#loc135, #loc136, #loc137, #loc130])
#loc248 = loc(fused[#loc138, #loc139])
#loc249 = loc(fused[#loc145, #loc146])
#loc250 = loc(fused[#loc147, #loc148])
#loc251 = loc(fused[#loc150, #loc149])
#loc252 = loc(fused[#loc151, #loc152])
#loc253 = loc(fused[#loc153, #loc154])
#loc254 = loc(fused[#loc155, #loc156, #loc157, #loc152])
#loc255 = loc(fused[#loc160, #loc158])
#loc256 = loc(fused[#loc163, #loc161])
#loc257 = loc(fused[#loc164, #loc165])
#loc258 = loc(fused[#loc166, #loc167])
#loc259 = loc(fused[#loc168, #loc169, #loc170, #loc165])
#loc260 = loc(fused[#loc171, #loc172])
#loc261 = loc(fused[#loc173, #loc174])
#loc262 = loc(fused[#loc175, #loc172])
#loc263 = loc(fused[#loc176, #loc177])
#loc264 = loc(fused[#loc181, #loc182])
#loc265 = loc(fused[#loc183, #loc184])
#loc266 = loc(fused[#loc185, #loc182])
#loc267 = loc(fused[#loc186, #loc187])
