!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":43:21)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":43:25)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":103:44)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":133:25)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":133:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc234 = loc(fused[#loc11, #loc12])
#loc297 = loc(fused[#loc173, #loc174])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc229)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc230)
  cir.func private @printIntLine(!s32i) loc(#loc231)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc232)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc235)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc234)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.br ^bb1 loc(#loc237)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc238)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc239)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc240)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc241)
    cir.br ^bb2 loc(#loc242)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc243)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc244)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc33)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc245)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc246)
    cir.br ^bb7 loc(#loc245)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc247)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc40)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc248)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc45)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb10 loc(#loc35)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc47)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc250)
    cir.br ^bb7 loc(#loc245)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc35)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc50)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc51)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc52)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb14 loc(#loc19)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc10)
  } loc(#loc233)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc251)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc252)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc58)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc253)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc254)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc255)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc256)
  cir.func private @close(!s32i) -> !s32i loc(#loc257)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc260)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc261)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc262)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc263)
    %5 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc264)
    %6 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc82)
    cir.store %6, %5 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc264)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc84)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.br ^bb1 loc(#loc266)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc76)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.br ^bb2 loc(#loc267)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc267)
  ^bb3:  // pred: ^bb24
    %11 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc90)
    cir.brcond %12 ^bb4, ^bb25 loc(#loc90)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc91)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc93)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    cir.br ^bb5 loc(#loc269)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc100)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc270)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc271)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc102)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc272)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc273)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc274)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc110)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc110)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc111)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc275)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc58)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc58)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc113)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc114)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc115)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc276)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc118)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc118)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc119)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc120)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc277)
    cir.br ^bb9 loc(#loc278)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc279)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc280)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc280)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc130)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc131)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc281)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc282)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc133)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc124)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc136)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc136)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc136)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc136)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc136)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc136)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc136)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc137)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc283)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc139)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc139)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.br ^bb13 loc(#loc285)
  ^bb13:  // pred: ^bb12
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc145)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %63 ^bb14, ^bb15 loc(#loc146)
  ^bb14:  // pred: ^bb13
    %64 = cir.const #true loc(#loc146)
    cir.br ^bb20(%64 : !cir.bool) loc(#loc146)
  ^bb15:  // pred: ^bb13
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc287)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc146)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc146)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc146)
  ^bb17:  // pred: ^bb15
    %69 = cir.const #false loc(#loc146)
    cir.br ^bb18(%69 : !cir.bool) loc(#loc146)
  ^bb18(%70: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":103:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc146)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%70 : !cir.bool) loc(#loc146)
  ^bb20(%71: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":103:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc146)
  ^bb21:  // pred: ^bb20
    cir.brcond %71 ^bb22, ^bb23 loc(#loc288)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc150)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc143)
  ^bb24:  // pred: ^bb23
    %72 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc151)
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc153)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc153)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc289)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc154)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc155)
    cir.store %78, %4 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    cir.br ^bb3 loc(#loc89)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc89)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc291)
  ^bb27:  // pred: ^bb26
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc161)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc292)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc293)
  ^bb28:  // pred: ^bb27
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc164)
    cir.br ^bb29 loc(#loc159)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc159)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc87)
  ^bb31:  // pred: ^bb30
    %85 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc165)
    %86 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.call %85(%86) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc165)
    cir.return loc(#loc70)
  } loc(#loc258)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc295)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc169)
    cir.return loc(#loc168)
  } loc(#loc294)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc173, #loc174])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc298)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc299)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc297)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.br ^bb1 loc(#loc300)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc182)
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc183)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc301)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc302)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc303)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc304)
    cir.br ^bb2 loc(#loc305)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc191)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc191)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc306)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc307)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc193)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc195)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc193)
    cir.br ^bb4 loc(#loc189)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc189)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc308)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc198)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc309)
    cir.br ^bb7 loc(#loc308)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc200)
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc201)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc310)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc202)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc311)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc205)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc206)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc207)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.br ^bb10 loc(#loc197)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc197)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc208)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc209)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc313)
    cir.br ^bb7 loc(#loc308)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc197)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc210)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc212)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc213)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc214)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc214)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc215)
    cir.br ^bb14 loc(#loc181)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc172)
  } loc(#loc296)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc315)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc316)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc221)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc316)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc222)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc223)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc225)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc227)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc227)
    cir.return loc(#loc217)
  } loc(#loc314)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":43:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":59:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":46:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":46:16)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":47:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":47:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":44:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":45:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":58:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":50:28)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":50:35)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":50:42)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":50:52)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":50:53)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":50:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":51:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":51:43)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":51:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":51:27)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":51:33)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":51:34)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":51:40)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":51:39)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":52:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":55:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":52:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":52:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":52:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":52:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":52:23)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":53:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":54:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":54:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":54:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":54:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":52:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":52:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":56:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":56:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":56:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":56:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":57:14)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":57:9)
#loc54 = loc("/usr/include/sys/socket.h":102:1)
#loc55 = loc("/usr/include/sys/socket.h":102:62)
#loc56 = loc("/usr/include/arpa/inet.h":34:1)
#loc57 = loc("/usr/include/arpa/inet.h":34:47)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":94:49)
#loc59 = loc("/usr/include/netinet/in.h":404:1)
#loc60 = loc("/usr/include/netinet/in.h":405:40)
#loc61 = loc("/usr/include/sys/socket.h":126:1)
#loc62 = loc("/usr/include/sys/socket.h":126:75)
#loc63 = loc("/usr/include/sys/socket.h":145:1)
#loc64 = loc("/usr/include/sys/socket.h":145:68)
#loc65 = loc("/usr/include/stdlib.h":105:1)
#loc66 = loc("/usr/include/stdlib.h":106:33)
#loc67 = loc("/usr/include/unistd.h":358:1)
#loc68 = loc("/usr/include/unistd.h":358:27)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":61:1)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":126:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":73:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":73:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":74:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":74:28)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":75:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":75:32)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":76:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":76:41)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":63:5)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":63:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":65:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":65:29)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":67:13)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":67:12)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":67:5)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":68:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":123:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":77:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":112:17)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":112:16)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":87:36)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":87:45)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":87:58)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":87:29)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":87:13)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":87:69)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":88:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":91:13)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":88:17)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":88:34)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":89:13)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":90:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":92:20)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":92:21)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":92:30)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":92:33)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":92:47)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":92:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":92:48)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":93:34)
#loc111 = loc("/usr/include/netinet/in.h":249:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":93:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":94:39)
#loc114 = loc("/usr/include/netinet/in.h":251:20)
#loc115 = loc("/usr/include/netinet/in.h":33:15)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":94:13)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":94:59)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":95:38)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":95:32)
#loc120 = loc("/usr/include/netinet/in.h":250:15)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":95:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":95:46)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":96:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":99:13)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":96:25)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":96:58)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":96:59)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":96:68)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":96:82)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":96:17)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":96:88)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":97:13)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":98:17)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":102:31)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":102:46)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":102:59)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":102:77)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":102:80)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":102:26)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":102:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":102:81)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":103:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":106:13)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":103:17)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":103:31)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":103:47)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":103:61)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":104:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":105:17)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":108:39)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":108:25)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":108:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":110:25)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":110:20)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":110:13)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":110:36)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":113:9)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":116:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":113:13)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":113:30)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":114:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":115:26)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":115:13)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":125:5)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":125:13)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":162:1)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":165:1)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":164:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":164:13)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":133:1)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":149:1)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":136:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":136:16)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":137:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":137:14)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":134:1)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":135:5)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":148:5)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":140:28)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":140:35)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":140:42)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":140:52)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":140:53)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":140:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":141:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":141:43)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":141:13)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":141:27)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":141:33)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":141:34)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":141:40)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":141:39)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":142:9)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":145:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":142:18)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":142:14)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":142:21)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":142:33)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":142:23)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":143:9)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":144:29)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":144:13)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":144:24)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":144:25)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":142:40)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":142:39)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":146:22)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":146:33)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":146:34)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":146:9)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":147:14)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":147:9)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":151:1)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":160:1)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":153:5)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":153:9)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":154:5)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":154:29)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":156:13)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":156:12)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":156:5)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":158:12)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":158:5)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":159:5)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_44.c":159:13)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc5, #loc6])
#loc232 = loc(fused[#loc7, #loc8])
#loc233 = loc(fused[#loc9, #loc10])
#loc235 = loc(fused[#loc13, #loc14])
#loc236 = loc(fused[#loc15, #loc16])
#loc237 = loc(fused[#loc18, #loc19])
#loc238 = loc(fused[#loc22, #loc23])
#loc239 = loc(fused[#loc21, #loc23])
#loc240 = loc(fused[#loc20, #loc24])
#loc241 = loc(fused[#loc25, #loc24])
#loc242 = loc(fused[#loc26, #loc27])
#loc243 = loc(fused[#loc28, #loc29])
#loc244 = loc(fused[#loc30, #loc27])
#loc245 = loc(fused[#loc34, #loc35])
#loc246 = loc(fused[#loc37, #loc36])
#loc247 = loc(fused[#loc38, #loc39])
#loc248 = loc(fused[#loc41, #loc35])
#loc249 = loc(fused[#loc43, #loc42])
#loc250 = loc(fused[#loc47, #loc46])
#loc251 = loc(fused[#loc54, #loc55])
#loc252 = loc(fused[#loc56, #loc57])
#loc253 = loc(fused[#loc59, #loc60])
#loc254 = loc(fused[#loc61, #loc62])
#loc255 = loc(fused[#loc63, #loc64])
#loc256 = loc(fused[#loc65, #loc66])
#loc257 = loc(fused[#loc67, #loc68])
#loc258 = loc(fused[#loc69, #loc70])
#loc259 = loc(fused[#loc71, #loc72])
#loc260 = loc(fused[#loc73, #loc74])
#loc261 = loc(fused[#loc75, #loc76])
#loc262 = loc(fused[#loc77, #loc78])
#loc263 = loc(fused[#loc79, #loc80])
#loc264 = loc(fused[#loc81, #loc82])
#loc265 = loc(fused[#loc85, #loc83])
#loc266 = loc(fused[#loc86, #loc87])
#loc267 = loc(fused[#loc88, #loc89])
#loc268 = loc(fused[#loc95, #loc96])
#loc269 = loc(fused[#loc97, #loc98])
#loc270 = loc(fused[#loc99, #loc100])
#loc271 = loc(fused[#loc101, #loc98])
#loc272 = loc(fused[#loc103, #loc104])
#loc273 = loc(fused[#loc106, #loc107])
#loc274 = loc(fused[#loc108, #loc109])
#loc275 = loc(fused[#loc112, #loc110])
#loc276 = loc(fused[#loc116, #loc117])
#loc277 = loc(fused[#loc121, #loc122])
#loc278 = loc(fused[#loc123, #loc124])
#loc279 = loc(fused[#loc126, #loc127])
#loc280 = loc(fused[#loc128, #loc129])
#loc281 = loc(fused[#loc130, #loc131])
#loc282 = loc(fused[#loc132, #loc124])
#loc283 = loc(fused[#loc136, #loc137])
#loc284 = loc(fused[#loc140, #loc141])
#loc285 = loc(fused[#loc142, #loc143])
#loc286 = loc(fused[#loc144, #loc145])
#loc287 = loc(fused[#loc147, #loc148])
#loc288 = loc(fused[#loc149, #loc143])
#loc289 = loc(fused[#loc153, #loc151])
#loc290 = loc(fused[#loc156, #loc157])
#loc291 = loc(fused[#loc158, #loc159])
#loc292 = loc(fused[#loc160, #loc161])
#loc293 = loc(fused[#loc162, #loc159])
#loc294 = loc(fused[#loc167, #loc168])
#loc295 = loc(fused[#loc169, #loc170])
#loc296 = loc(fused[#loc171, #loc172])
#loc298 = loc(fused[#loc175, #loc176])
#loc299 = loc(fused[#loc177, #loc178])
#loc300 = loc(fused[#loc180, #loc181])
#loc301 = loc(fused[#loc184, #loc185])
#loc302 = loc(fused[#loc183, #loc185])
#loc303 = loc(fused[#loc182, #loc186])
#loc304 = loc(fused[#loc187, #loc186])
#loc305 = loc(fused[#loc188, #loc189])
#loc306 = loc(fused[#loc190, #loc191])
#loc307 = loc(fused[#loc192, #loc189])
#loc308 = loc(fused[#loc196, #loc197])
#loc309 = loc(fused[#loc199, #loc198])
#loc310 = loc(fused[#loc200, #loc201])
#loc311 = loc(fused[#loc203, #loc197])
#loc312 = loc(fused[#loc205, #loc204])
#loc313 = loc(fused[#loc209, #loc208])
#loc314 = loc(fused[#loc216, #loc217])
#loc315 = loc(fused[#loc218, #loc219])
#loc316 = loc(fused[#loc220, #loc221])
#loc317 = loc(fused[#loc224, #loc222])
#loc318 = loc(fused[#loc226, #loc225])
