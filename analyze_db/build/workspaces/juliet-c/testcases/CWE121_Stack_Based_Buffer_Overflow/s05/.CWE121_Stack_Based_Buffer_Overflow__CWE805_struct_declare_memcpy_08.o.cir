!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc175)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc177)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc180)
    %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc183)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc17)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc184)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
    cir.store %8, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc185)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc187)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc188)
  ^bb7:  // pred: ^bb6
    %9 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc28)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb8 loc(#loc188)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
    %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc190)
    cir.brcond %14 ^bb9, ^bb13 loc(#loc32)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc191)
  ^bb10:  // pred: ^bb9
    %15 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc27)
  ^bb12:  // pred: ^bb11
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc43)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb8 loc(#loc188)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc27)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc25)
  ^bb15:  // pred: ^bb14
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc44)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc45)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc46)
    %33 = cir.const #cir.int<8> : !u64i loc(#loc195)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc196)
    cir.libc.memcpy %34 bytes from %30 to %28 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc197)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!ty__twoIntsStruct>, %36 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    cir.call @printStructLine(%37) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc54)
    cir.br ^bb16 loc(#loc23)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc4)
  } loc(#loc176)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc200)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc198)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc63)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.return %2 : !s32i loc(#loc202)
  } loc(#loc201)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc205)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc208)
    %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc209)
    cir.br ^bb1 loc(#loc210)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc211)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc82)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc82)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc212)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb4 loc(#loc85)
  ^bb3:  // pred: ^bb1
    %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    cir.store %10, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc213)
    cir.br ^bb4 loc(#loc81)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc81)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc214)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc215)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc216)
  ^bb8:  // pred: ^bb7
    %11 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc96)
    cir.store %12, %1 : !u64i, !cir.ptr<!u64i> loc(#loc217)
    cir.br ^bb9 loc(#loc216)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc99)
    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc218)
    cir.brcond %16 ^bb10, ^bb14 loc(#loc100)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc219)
  ^bb11:  // pred: ^bb10
    %17 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %18 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
    cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb12 loc(#loc95)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc95)
  ^bb13:  // pred: ^bb12
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc109)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    cir.br ^bb9 loc(#loc216)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc95)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc93)
  ^bb16:  // pred: ^bb15
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc110)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc111)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc112)
    %35 = cir.const #cir.int<8> : !u64i loc(#loc223)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc224)
    cir.libc.memcpy %36 bytes from %32 to %30 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc225)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!ty__twoIntsStruct>, %38 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    cir.call @printStructLine(%39) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc120)
    cir.br ^bb17 loc(#loc91)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc69)
  } loc(#loc204)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.return %2 : !s32i loc(#loc227)
  } loc(#loc226)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc229)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc232)
    %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc233)
    cir.br ^bb1 loc(#loc234)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc235)
    %6 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc139)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc139)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc236)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
    cir.store %8, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc237)
    cir.br ^bb3 loc(#loc138)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc138)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc238)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc239)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc240)
  ^bb7:  // pred: ^bb6
    %9 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc150)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc241)
    cir.br ^bb8 loc(#loc240)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc153)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc153)
    %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc242)
    cir.brcond %14 ^bb9, ^bb13 loc(#loc154)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc243)
  ^bb10:  // pred: ^bb9
    %15 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc157)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc160)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
    %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.br ^bb11 loc(#loc149)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc149)
  ^bb12:  // pred: ^bb11
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc162)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc163)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc246)
    cir.br ^bb8 loc(#loc240)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc149)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc147)
  ^bb15:  // pred: ^bb14
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc164)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc165)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc165)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc166)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc166)
    %33 = cir.const #cir.int<8> : !u64i loc(#loc247)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc248)
    cir.libc.memcpy %34 bytes from %30 to %28 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc249)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!ty__twoIntsStruct>, %36 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc173)
    cir.call @printStructLine(%37) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc174)
    cir.br ^bb16 loc(#loc145)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc126)
  } loc(#loc228)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":35:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":61:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":47:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":47:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":49:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":49:20)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":37:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":37:21)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":38:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":38:35)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":39:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":39:37)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":40:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":45:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":40:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":40:26)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":41:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":44:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":44:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":46:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":60:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":48:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":56:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":51:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":55:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":51:22)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":51:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":51:25)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":51:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":51:27)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":52:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":53:36)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":53:24)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":53:17)
#loc37 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":54:36)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":54:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":54:17)
#loc41 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":51:35)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":51:34)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":58:16)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":58:22)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":58:30)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":58:34)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":58:54)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":58:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":58:55)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":59:26)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":59:31)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":59:32)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":59:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":128:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":132:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":130:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":130:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":131:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":131:14)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":23:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":26:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":25:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":25:5)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":76:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":68:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":98:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":84:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":84:33)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":86:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":86:20)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":70:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":70:21)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":71:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":71:35)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":72:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":72:37)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":73:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":82:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":73:8)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":73:27)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":74:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":77:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":79:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":76:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":81:16)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":81:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":83:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":97:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":85:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":93:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":88:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":92:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":88:22)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":88:18)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":88:25)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":88:29)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":88:27)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":89:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":90:36)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":90:24)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":90:17)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":91:36)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":91:24)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":91:17)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":88:35)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":88:34)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":95:16)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":95:22)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":95:30)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":95:34)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":95:54)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":95:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":95:55)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":96:26)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":96:31)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":96:32)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":96:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":28:1)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":31:1)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":30:12)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":30:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":101:1)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":126:1)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":112:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":112:33)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":114:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":114:20)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":103:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":103:21)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":104:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":104:35)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":105:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":105:37)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":106:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":110:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":106:8)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":106:26)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":107:5)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":109:16)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":109:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":111:5)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":125:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":113:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":121:9)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":116:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":120:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":116:22)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":116:18)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":116:25)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":116:29)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":116:27)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":117:13)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":118:36)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":118:24)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":118:17)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":119:36)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":119:24)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":119:17)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":116:35)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":116:34)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":123:16)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":123:22)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":123:30)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":123:34)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":123:54)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":123:9)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":123:55)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":124:26)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":124:31)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":124:32)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_08.c":124:9)
#loc175 = loc(fused[#loc1, #loc2])
#loc176 = loc(fused[#loc3, #loc4])
#loc177 = loc(fused[#loc5, #loc6])
#loc178 = loc(fused[#loc7, #loc8])
#loc179 = loc(fused[#loc9, #loc10])
#loc180 = loc(fused[#loc11, #loc12])
#loc181 = loc(fused[#loc13, #loc14])
#loc182 = loc(fused[#loc15, #loc16])
#loc183 = loc(fused[#loc17, #loc18])
#loc184 = loc(fused[#loc19, #loc16])
#loc185 = loc(fused[#loc21, #loc20])
#loc186 = loc(fused[#loc22, #loc23])
#loc187 = loc(fused[#loc24, #loc25])
#loc188 = loc(fused[#loc26, #loc27])
#loc189 = loc(fused[#loc29, #loc28])
#loc190 = loc(fused[#loc30, #loc31])
#loc191 = loc(fused[#loc33, #loc27])
#loc192 = loc(fused[#loc36, #loc34])
#loc193 = loc(fused[#loc40, #loc38])
#loc194 = loc(fused[#loc43, #loc42])
#loc195 = loc(fused[#loc47, #loc48])
#loc196 = loc(fused[#loc46, #loc48])
#loc197 = loc(fused[#loc49, #loc50])
#loc198 = loc(fused[#loc55, #loc56])
#loc199 = loc(fused[#loc57, #loc58])
#loc200 = loc(fused[#loc59, #loc60])
#loc201 = loc(fused[#loc61, #loc62])
#loc202 = loc(fused[#loc64, #loc63])
#loc203 = loc(fused[#loc65, #loc66])
#loc204 = loc(fused[#loc68, #loc69])
#loc205 = loc(fused[#loc70, #loc71])
#loc206 = loc(fused[#loc72, #loc73])
#loc207 = loc(fused[#loc74, #loc75])
#loc208 = loc(fused[#loc76, #loc77])
#loc209 = loc(fused[#loc78, #loc79])
#loc210 = loc(fused[#loc80, #loc81])
#loc211 = loc(fused[#loc82, #loc83])
#loc212 = loc(fused[#loc84, #loc85, #loc86, #loc81])
#loc213 = loc(fused[#loc89, #loc88])
#loc214 = loc(fused[#loc90, #loc91])
#loc215 = loc(fused[#loc92, #loc93])
#loc216 = loc(fused[#loc94, #loc95])
#loc217 = loc(fused[#loc97, #loc96])
#loc218 = loc(fused[#loc98, #loc99])
#loc219 = loc(fused[#loc101, #loc95])
#loc220 = loc(fused[#loc104, #loc102])
#loc221 = loc(fused[#loc107, #loc105])
#loc222 = loc(fused[#loc109, #loc108])
#loc223 = loc(fused[#loc113, #loc114])
#loc224 = loc(fused[#loc112, #loc114])
#loc225 = loc(fused[#loc115, #loc116])
#loc226 = loc(fused[#loc121, #loc122])
#loc227 = loc(fused[#loc124, #loc123])
#loc228 = loc(fused[#loc125, #loc126])
#loc229 = loc(fused[#loc127, #loc128])
#loc230 = loc(fused[#loc129, #loc130])
#loc231 = loc(fused[#loc131, #loc132])
#loc232 = loc(fused[#loc133, #loc134])
#loc233 = loc(fused[#loc135, #loc136])
#loc234 = loc(fused[#loc137, #loc138])
#loc235 = loc(fused[#loc139, #loc140])
#loc236 = loc(fused[#loc141, #loc138])
#loc237 = loc(fused[#loc143, #loc142])
#loc238 = loc(fused[#loc144, #loc145])
#loc239 = loc(fused[#loc146, #loc147])
#loc240 = loc(fused[#loc148, #loc149])
#loc241 = loc(fused[#loc151, #loc150])
#loc242 = loc(fused[#loc152, #loc153])
#loc243 = loc(fused[#loc155, #loc149])
#loc244 = loc(fused[#loc158, #loc156])
#loc245 = loc(fused[#loc161, #loc159])
#loc246 = loc(fused[#loc163, #loc162])
#loc247 = loc(fused[#loc167, #loc168])
#loc248 = loc(fused[#loc166, #loc168])
#loc249 = loc(fused[#loc169, #loc170])
