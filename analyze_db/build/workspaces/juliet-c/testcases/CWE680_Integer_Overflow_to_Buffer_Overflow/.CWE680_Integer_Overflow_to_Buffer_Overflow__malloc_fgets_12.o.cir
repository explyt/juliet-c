!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc157)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc158)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc159)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc162)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc163)
  cir.func private @printIntLine(!s32i) loc(#loc164)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc165)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc167)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc169)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc31)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc173)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc173)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc35)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc35)
    cir.brcond %9 ^bb2, ^bb10 loc(#loc174)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc175)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc167)
    cir.store %10, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc167)
    cir.br ^bb4 loc(#loc176)
  ^bb4:  // pred: ^bb3
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
    %12 = cir.const #cir.int<3> : !s32i loc(#loc45)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc45)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc45)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc45)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc45)
    %18 = cir.binop(add, %15, %17) : !u64i loc(#loc45)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc45)
    %20 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc159)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
    %22 = cir.call @fgets(%11, %19, %21) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc47)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
    %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
    cir.brcond %25 ^bb5, ^bb6 loc(#loc178)
  ^bb5:  // pred: ^bb4
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc52)
    %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc53)
    cir.store %27, %3 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.br ^bb7 loc(#loc50)
  ^bb6:  // pred: ^bb4
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb7 loc(#loc43)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc41)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11 loc(#loc38)
  ^bb10:  // pred: ^bb1
    %30 = cir.const #cir.int<20> : !s32i loc(#loc57)
    cir.store %30, %3 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb11 loc(#loc34)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc34)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc181)
  ^bb13:  // pred: ^bb12
    %31 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc61)
    %32 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc62)
    %34 = cir.const #cir.int<4> : !u64i loc(#loc182)
    %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc183)
    %36 = cir.call @malloc(%35) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc61)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc184)
    cir.store %37, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc185)
    cir.br ^bb14 loc(#loc186)
  ^bb14:  // pred: ^bb13
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %39 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc70)
    %41 = cir.cmp(eq, %38, %40) : !cir.ptr<!s32i>, !cir.bool loc(#loc187)
    cir.brcond %41 ^bb15, ^bb16 loc(#loc188)
  ^bb15:  // pred: ^bb14
    %42 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc72)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc74)
    cir.call @exit(%44) : (!s32i) -> () extra(#fn_attr) loc(#loc72)
    cir.br ^bb16 loc(#loc68)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc68)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc189)
  ^bb18:  // pred: ^bb17
    %45 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc77)
    cir.store %46, %1 : !u64i, !cir.ptr<!u64i> loc(#loc190)
    cir.br ^bb19 loc(#loc189)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %47 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc79)
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc80)
    %50 = cir.cmp(lt, %47, %49) : !u64i, !cir.bool loc(#loc191)
    cir.brcond %50 ^bb20, ^bb24 loc(#loc81)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc192)
  ^bb21:  // pred: ^bb20
    %51 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %53 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc85)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s32i>, %53 : !u64i), !cir.ptr<!s32i> loc(#loc86)
    cir.store %51, %54 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb22 loc(#loc76)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc76)
  ^bb23:  // pred: ^bb22
    %55 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %56 = cir.unary(inc, %55) : !u64i, !u64i loc(#loc88)
    cir.store %56, %1 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb19 loc(#loc189)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc76)
  ^bb25:  // pred: ^bb24
    %57 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %59 = cir.ptr_stride(%57 : !cir.ptr<!s32i>, %58 : !s32i), !cir.ptr<!s32i> loc(#loc91)
    %60 = cir.load %59 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.call @printIntLine(%60) : (!s32i) -> () loc(#loc92)
    %61 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc93)
    cir.call @free(%62) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
    cir.br ^bb26 loc(#loc60)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc21)
  } loc(#loc166)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc196)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc195)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc199)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc200)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc108)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc203)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc203)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc112)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc112)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc204)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc117)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb4 loc(#loc115)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc119)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc111)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc207)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc123)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc124)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc208)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc209)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc123)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc210)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc211)
    cir.br ^bb7 loc(#loc212)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc132)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc213)
    cir.brcond %21 ^bb8, ^bb9 loc(#loc214)
  ^bb8:  // pred: ^bb7
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc134)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc136)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
    cir.br ^bb9 loc(#loc130)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc130)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc215)
  ^bb11:  // pred: ^bb10
    %25 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc139)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    cir.br ^bb12 loc(#loc215)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc141)
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc142)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc217)
    cir.brcond %30 ^bb13, ^bb17 loc(#loc143)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc218)
  ^bb14:  // pred: ^bb13
    %31 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc148)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb15 loc(#loc138)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc138)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc150)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc220)
    cir.br ^bb12 loc(#loc215)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc138)
  ^bb18:  // pred: ^bb17
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc153)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc154)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc155)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc156)
    cir.br ^bb19 loc(#loc122)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc100)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":40:27)
#loc12 = loc("/usr/include/stdlib.h":672:1)
#loc13 = loc("/usr/include/stdlib.h":672:45)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("/usr/include/stdlib.h":687:1)
#loc19 = loc("/usr/include/stdlib.h":687:32)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":23:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":63:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":31:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":31:49)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":50:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":50:16)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":51:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":51:14)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":25:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":25:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":27:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":27:12)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":27:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":28:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":48:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":28:8)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":28:33)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":29:5)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":43:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":45:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":30:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":42:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":33:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":41:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":33:23)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":33:36)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":33:53)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":33:17)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":33:63)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":34:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":37:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":39:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":36:29)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":36:24)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":36:17)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":36:40)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":40:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":47:16)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":47:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":49:5)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":62:5)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":54:28)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":54:35)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":54:42)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":54:52)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":54:53)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":54:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":55:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":55:43)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":55:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":55:27)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":55:33)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":55:34)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":55:40)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":55:39)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":56:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":59:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":56:18)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":56:14)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":56:21)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":56:33)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":56:23)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":57:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":58:29)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":58:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":58:24)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":58:25)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":56:40)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":56:39)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":60:22)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":60:33)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":60:34)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":60:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":61:14)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":61:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":102:1)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":105:1)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":104:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":104:13)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":71:1)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":100:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":87:9)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":87:16)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":88:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":88:14)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":73:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":73:9)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":75:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":75:12)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":75:5)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":76:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":85:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":76:8)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":76:33)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":77:5)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":80:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":82:5)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":79:16)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":79:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":84:16)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":84:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":86:5)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":99:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":91:28)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":91:35)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":91:42)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":91:52)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":91:53)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":91:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":92:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":92:43)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":92:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":92:27)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":92:33)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":92:34)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":92:40)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":92:39)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":93:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":96:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":93:18)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":93:14)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":93:21)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":93:33)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":93:23)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":94:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":95:29)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":95:13)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":95:24)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":95:25)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":93:40)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":93:39)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":97:22)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":97:33)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":97:34)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":97:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":98:14)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_12.c":98:9)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc12, #loc13])
#loc163 = loc(fused[#loc14, #loc15])
#loc164 = loc(fused[#loc16, #loc17])
#loc165 = loc(fused[#loc18, #loc19])
#loc166 = loc(fused[#loc20, #loc21])
#loc167 = loc(fused[#loc22, #loc23])
#loc168 = loc(fused[#loc24, #loc25])
#loc169 = loc(fused[#loc26, #loc27])
#loc170 = loc(fused[#loc28, #loc29])
#loc171 = loc(fused[#loc32, #loc30])
#loc172 = loc(fused[#loc33, #loc34])
#loc173 = loc(fused[#loc35, #loc36])
#loc174 = loc(fused[#loc37, #loc38, #loc39, #loc34])
#loc175 = loc(fused[#loc40, #loc41])
#loc176 = loc(fused[#loc42, #loc43])
#loc177 = loc(fused[#loc47, #loc48])
#loc178 = loc(fused[#loc49, #loc50, #loc51, #loc43])
#loc179 = loc(fused[#loc54, #loc55])
#loc180 = loc(fused[#loc58, #loc57])
#loc181 = loc(fused[#loc59, #loc60])
#loc182 = loc(fused[#loc63, #loc64])
#loc183 = loc(fused[#loc62, #loc64])
#loc184 = loc(fused[#loc61, #loc65])
#loc185 = loc(fused[#loc66, #loc65])
#loc186 = loc(fused[#loc67, #loc68])
#loc187 = loc(fused[#loc69, #loc70])
#loc188 = loc(fused[#loc71, #loc68])
#loc189 = loc(fused[#loc75, #loc76])
#loc190 = loc(fused[#loc78, #loc77])
#loc191 = loc(fused[#loc79, #loc80])
#loc192 = loc(fused[#loc82, #loc76])
#loc193 = loc(fused[#loc84, #loc83])
#loc194 = loc(fused[#loc88, #loc87])
#loc195 = loc(fused[#loc95, #loc96])
#loc196 = loc(fused[#loc97, #loc98])
#loc197 = loc(fused[#loc99, #loc100])
#loc198 = loc(fused[#loc101, #loc102])
#loc199 = loc(fused[#loc103, #loc104])
#loc200 = loc(fused[#loc105, #loc106])
#loc201 = loc(fused[#loc109, #loc107])
#loc202 = loc(fused[#loc110, #loc111])
#loc203 = loc(fused[#loc112, #loc113])
#loc204 = loc(fused[#loc114, #loc115, #loc116, #loc111])
#loc205 = loc(fused[#loc118, #loc117])
#loc206 = loc(fused[#loc120, #loc119])
#loc207 = loc(fused[#loc121, #loc122])
#loc208 = loc(fused[#loc125, #loc126])
#loc209 = loc(fused[#loc124, #loc126])
#loc210 = loc(fused[#loc123, #loc127])
#loc211 = loc(fused[#loc128, #loc127])
#loc212 = loc(fused[#loc129, #loc130])
#loc213 = loc(fused[#loc131, #loc132])
#loc214 = loc(fused[#loc133, #loc130])
#loc215 = loc(fused[#loc137, #loc138])
#loc216 = loc(fused[#loc140, #loc139])
#loc217 = loc(fused[#loc141, #loc142])
#loc218 = loc(fused[#loc144, #loc138])
#loc219 = loc(fused[#loc146, #loc145])
#loc220 = loc(fused[#loc150, #loc149])
