!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc188)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc191)
  cir.func private @printIntLine(!s32i) loc(#loc192)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc193)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc195)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc24)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc198)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc26)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc26)
      } loc(#loc199)
    } loc(#loc197)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc201)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc202)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc34)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc35)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc203)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc204)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc205)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc206)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc43)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc208)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc45)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc47)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
        } loc(#loc209)
      } loc(#loc207)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc50)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc50)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc211)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc52)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc53)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc212)
          cir.condition(%24) loc(#loc54)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc56)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc58)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc59)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc214)
          } loc(#loc213)
          cir.yield loc(#loc49)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc60)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc61)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc215)
          cir.yield loc(#loc210)
        } loc(#loc210)
      } loc(#loc210)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc64)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc65)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc66)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc67)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
    } loc(#loc200)
    cir.return loc(#loc15)
  } loc(#loc194)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc217)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc70)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc218)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    cir.return loc(#loc69)
  } loc(#loc216)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc76)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc221)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc82)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc86)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc87)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc224)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc92)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
      } loc(#loc225)
    } loc(#loc223)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc228)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc229)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc100)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc101)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc230)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc231)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc100)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc232)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc233)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc109)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc235)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc111)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc112)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc113)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc111)
        } loc(#loc236)
      } loc(#loc234)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc116)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc116)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc238)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc118)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc119)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc239)
          cir.condition(%24) loc(#loc120)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc124)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc125)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc241)
          } loc(#loc240)
          cir.yield loc(#loc115)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc126)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc127)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc242)
          cir.yield loc(#loc237)
        } loc(#loc237)
      } loc(#loc237)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc129)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc130)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc128)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc131)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc132)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc133)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc132)
    } loc(#loc227)
    cir.return loc(#loc78)
  } loc(#loc220)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc244)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc139)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc143)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc144)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc247)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc146)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
      } loc(#loc248)
    } loc(#loc246)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc251)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc252)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc154)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc155)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc253)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc254)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc255)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc256)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc163)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc258)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc165)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc166)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc167)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc165)
        } loc(#loc259)
      } loc(#loc257)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc170)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc170)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc261)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc172)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc173)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc262)
          cir.condition(%24) loc(#loc174)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc176)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc177)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc178)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc179)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc264)
          } loc(#loc263)
          cir.yield loc(#loc169)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc180)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc181)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc265)
          cir.yield loc(#loc260)
        } loc(#loc260)
      } loc(#loc260)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc183)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc184)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc182)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc185)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc186)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc187)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc186)
    } loc(#loc250)
    cir.return loc(#loc135)
  } loc(#loc243)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":29:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":21:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":45:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":23:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":23:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":25:13)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":25:12)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":25:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":26:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":30:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":26:8)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":26:11)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":27:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":29:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":29:16)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":31:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":44:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":32:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":32:16)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":33:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":33:14)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":36:28)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":36:35)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":36:42)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":36:52)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":36:53)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":36:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":37:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":37:43)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":37:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":37:27)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":37:33)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":37:34)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":37:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":37:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":38:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":41:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":38:18)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":38:14)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":38:21)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":38:33)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":38:23)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":39:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":40:29)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":40:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":40:24)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":40:25)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":38:40)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":38:39)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":42:22)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":42:33)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":42:34)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":42:9)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":43:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":43:14)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":110:1)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":114:1)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":112:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":112:14)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":113:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":113:14)
#loc74 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc75 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":60:19)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":52:1)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":81:1)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":54:5)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":54:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":56:13)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":56:12)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":56:5)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":57:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":66:5)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":57:8)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":57:11)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":58:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":61:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":63:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":60:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":65:16)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":65:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":67:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":80:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":68:9)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":68:16)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":69:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":69:14)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":72:28)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":72:35)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":72:42)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":72:52)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":72:53)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":72:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":73:9)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":73:43)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":73:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":73:27)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":73:33)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":73:34)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":73:40)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":73:39)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":74:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":77:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":74:18)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":74:14)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":74:21)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":74:33)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":74:23)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":75:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":76:29)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":76:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":76:24)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":76:25)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":74:40)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":74:39)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":78:22)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":78:33)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":78:34)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":78:9)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":79:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":79:14)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":84:1)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":108:1)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":86:5)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":86:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":88:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":88:12)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":88:5)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":89:5)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":93:5)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":89:8)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":89:11)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":90:5)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":92:16)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":92:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":94:5)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":107:5)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":95:9)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":95:16)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":96:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":96:14)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":99:28)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":99:35)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":99:42)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":99:52)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":99:53)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":99:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":100:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":100:43)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":100:13)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":100:27)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":100:33)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":100:34)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":100:40)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":100:39)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":101:9)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":104:9)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":101:18)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":101:14)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":101:21)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":101:33)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":101:23)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":102:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":103:29)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":103:13)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":103:24)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":103:25)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":101:40)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":101:39)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":105:22)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":105:33)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":105:34)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":105:9)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":106:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_03.c":106:14)
#loc188 = loc(fused[#loc1, #loc2])
#loc189 = loc(fused[#loc3, #loc4])
#loc190 = loc(fused[#loc6, #loc7])
#loc191 = loc(fused[#loc8, #loc9])
#loc192 = loc(fused[#loc10, #loc11])
#loc193 = loc(fused[#loc12, #loc13])
#loc194 = loc(fused[#loc14, #loc15])
#loc195 = loc(fused[#loc16, #loc17])
#loc196 = loc(fused[#loc20, #loc18])
#loc197 = loc(fused[#loc21, #loc22])
#loc198 = loc(fused[#loc23, #loc24])
#loc199 = loc(fused[#loc25, #loc22])
#loc200 = loc(fused[#loc28, #loc29])
#loc201 = loc(fused[#loc30, #loc31])
#loc202 = loc(fused[#loc32, #loc33])
#loc203 = loc(fused[#loc36, #loc37])
#loc204 = loc(fused[#loc35, #loc37])
#loc205 = loc(fused[#loc34, #loc38])
#loc206 = loc(fused[#loc39, #loc38])
#loc207 = loc(fused[#loc40, #loc41])
#loc208 = loc(fused[#loc42, #loc43])
#loc209 = loc(fused[#loc44, #loc41])
#loc210 = loc(fused[#loc48, #loc49])
#loc211 = loc(fused[#loc51, #loc50])
#loc212 = loc(fused[#loc52, #loc53])
#loc213 = loc(fused[#loc55, #loc49])
#loc214 = loc(fused[#loc57, #loc56])
#loc215 = loc(fused[#loc61, #loc60])
#loc216 = loc(fused[#loc68, #loc69])
#loc217 = loc(fused[#loc70, #loc71])
#loc218 = loc(fused[#loc72, #loc73])
#loc219 = loc(fused[#loc74, #loc75])
#loc220 = loc(fused[#loc77, #loc78])
#loc221 = loc(fused[#loc79, #loc80])
#loc222 = loc(fused[#loc83, #loc81])
#loc223 = loc(fused[#loc84, #loc85])
#loc224 = loc(fused[#loc86, #loc87])
#loc225 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc226 = loc(fused[#loc93, #loc92])
#loc227 = loc(fused[#loc94, #loc95])
#loc228 = loc(fused[#loc96, #loc97])
#loc229 = loc(fused[#loc98, #loc99])
#loc230 = loc(fused[#loc102, #loc103])
#loc231 = loc(fused[#loc101, #loc103])
#loc232 = loc(fused[#loc100, #loc104])
#loc233 = loc(fused[#loc105, #loc104])
#loc234 = loc(fused[#loc106, #loc107])
#loc235 = loc(fused[#loc108, #loc109])
#loc236 = loc(fused[#loc110, #loc107])
#loc237 = loc(fused[#loc114, #loc115])
#loc238 = loc(fused[#loc117, #loc116])
#loc239 = loc(fused[#loc118, #loc119])
#loc240 = loc(fused[#loc121, #loc115])
#loc241 = loc(fused[#loc123, #loc122])
#loc242 = loc(fused[#loc127, #loc126])
#loc243 = loc(fused[#loc134, #loc135])
#loc244 = loc(fused[#loc136, #loc137])
#loc245 = loc(fused[#loc140, #loc138])
#loc246 = loc(fused[#loc141, #loc142])
#loc247 = loc(fused[#loc143, #loc144])
#loc248 = loc(fused[#loc145, #loc142])
#loc249 = loc(fused[#loc147, #loc146])
#loc250 = loc(fused[#loc148, #loc149])
#loc251 = loc(fused[#loc150, #loc151])
#loc252 = loc(fused[#loc152, #loc153])
#loc253 = loc(fused[#loc156, #loc157])
#loc254 = loc(fused[#loc155, #loc157])
#loc255 = loc(fused[#loc154, #loc158])
#loc256 = loc(fused[#loc159, #loc158])
#loc257 = loc(fused[#loc160, #loc161])
#loc258 = loc(fused[#loc162, #loc163])
#loc259 = loc(fused[#loc164, #loc161])
#loc260 = loc(fused[#loc168, #loc169])
#loc261 = loc(fused[#loc171, #loc170])
#loc262 = loc(fused[#loc172, #loc173])
#loc263 = loc(fused[#loc175, #loc169])
#loc264 = loc(fused[#loc177, #loc176])
#loc265 = loc(fused[#loc181, #loc180])
