!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE401_Memory_Leak__strdup_char_21.c":27:21)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_21.c":27:28)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_21.c":62:26)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_21.c":62:33)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_21.c":92:26)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_21.c":92:33)
#loc123 = loc("CWE401_Memory_Leak__strdup_char_21.c":117:25)
#loc124 = loc("CWE401_Memory_Leak__strdup_char_21.c":117:32)
#loc153 = loc(fused[#loc15, #loc16])
#loc169 = loc(fused[#loc55, #loc56])
#loc180 = loc(fused[#loc89, #loc90])
#loc192 = loc(fused[#loc123, #loc124])
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodB2G2.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc146)
  cir.global "private" constant cir_private @__const.goodB2G1.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc147)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_21_bad.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc148)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc151)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc151)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc155)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc14)
  } loc(#loc152)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_21_bad.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc148)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc148)
    %4 = cir.get_global @strdup : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc30)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc31)
    %6 = cir.call @strdup(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc30)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb2 loc(#loc29)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %9 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc151)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    cir.call @badSink(%10) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.return loc(#loc23)
  } loc(#loc156)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc165)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    cir.return loc(#loc41)
  } loc(#loc162)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc50)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc167)
  cir.func internal private @goodB2G1Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc55, #loc56])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc169)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc166)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc60)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc171)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc50)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    cir.br ^bb4 loc(#loc62)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc65)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc59)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc54)
  } loc(#loc168)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc71)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.goodB2G1.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc147)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc147)
    %4 = cir.get_global @strdup : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc75)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc76)
    %6 = cir.call @strdup(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc75)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb2 loc(#loc74)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %9 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc166)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    cir.call @goodB2G1Sink(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.return loc(#loc68)
  } loc(#loc172)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc178)
  cir.func internal private @goodB2G2Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc89, #loc90])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc180)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc178)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc94)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc96)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc96)
    cir.br ^bb3 loc(#loc93)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc88)
  } loc(#loc179)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc102)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.goodB2G2.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc146)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc146)
    %4 = cir.get_global @strdup : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc106)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc107)
    %6 = cir.call @strdup(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.br ^bb2 loc(#loc105)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %9 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc178)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    cir.call @goodB2G2Sink(%10) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.return loc(#loc99)
  } loc(#loc183)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc190)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc123, #loc124])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc192)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc190)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc128)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc194)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc127)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc127)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc122)
  } loc(#loc191)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc134)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc136)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc136)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc136)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc136)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc138)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc118)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc118)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %16 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc190)
    cir.store %15, %16 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    cir.call @goodG2BSink(%17) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.return loc(#loc131)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_21.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_21.c":106:9)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_21.c":106:27)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_21.c":81:9)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_21.c":81:27)
#loc5 = loc("CWE401_Memory_Leak__strdup_char_21.c":42:9)
#loc6 = loc("CWE401_Memory_Leak__strdup_char_21.c":42:27)
#loc7 = loc("/usr/include/string.h":187:1)
#loc8 = loc("/usr/include/string.h":188:35)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_21.c":25:1)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_21.c":25:24)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_21.c":27:1)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_21.c":35:1)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_21.c":28:1)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_21.c":29:5)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_21.c":34:5)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_21.c":29:8)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_21.c":30:5)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_21.c":37:1)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_21.c":50:1)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_21.c":39:5)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_21.c":39:12)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_21.c":40:12)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_21.c":40:5)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_21.c":41:5)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_21.c":47:5)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_21.c":44:16)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_21.c":44:23)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_21.c":44:9)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_21.c":44:31)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_21.c":46:19)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_21.c":46:9)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_21.c":48:17)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_21.c":48:5)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_21.c":49:13)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_21.c":49:5)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_21.c":140:1)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_21.c":145:1)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_21.c":142:5)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_21.c":142:14)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_21.c":143:5)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_21.c":143:14)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_21.c":144:5)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_21.c":144:13)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_21.c":57:1)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_21.c":57:29)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_21.c":67:19)
#loc51 = loc("/usr/include/stdlib.h":687:1)
#loc52 = loc("/usr/include/stdlib.h":687:32)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_21.c":62:1)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_21.c":74:1)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_21.c":63:1)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_21.c":64:5)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_21.c":73:5)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_21.c":64:8)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_21.c":65:5)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_21.c":68:5)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_21.c":70:5)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_21.c":67:9)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_21.c":72:9)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_21.c":72:14)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_21.c":76:1)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_21.c":89:1)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_21.c":78:5)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_21.c":78:12)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_21.c":79:12)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_21.c":79:5)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_21.c":80:5)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_21.c":86:5)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_21.c":83:16)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_21.c":83:23)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_21.c":83:9)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_21.c":83:31)
#loc79 = loc("CWE401_Memory_Leak__strdup_char_21.c":85:19)
#loc80 = loc("CWE401_Memory_Leak__strdup_char_21.c":85:9)
#loc81 = loc("CWE401_Memory_Leak__strdup_char_21.c":87:22)
#loc82 = loc("CWE401_Memory_Leak__strdup_char_21.c":87:5)
#loc83 = loc("CWE401_Memory_Leak__strdup_char_21.c":88:18)
#loc84 = loc("CWE401_Memory_Leak__strdup_char_21.c":88:5)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_21.c":58:1)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_21.c":58:29)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_21.c":92:1)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_21.c":99:1)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_21.c":93:1)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_21.c":94:5)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_21.c":98:5)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_21.c":94:8)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_21.c":95:5)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_21.c":97:9)
#loc97 = loc("CWE401_Memory_Leak__strdup_char_21.c":97:14)
#loc98 = loc("CWE401_Memory_Leak__strdup_char_21.c":101:1)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_21.c":114:1)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_21.c":103:5)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_21.c":103:12)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_21.c":104:12)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_21.c":104:5)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_21.c":105:5)
#loc105 = loc("CWE401_Memory_Leak__strdup_char_21.c":111:5)
#loc106 = loc("CWE401_Memory_Leak__strdup_char_21.c":108:16)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_21.c":108:23)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_21.c":108:9)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_21.c":108:31)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_21.c":110:19)
#loc111 = loc("CWE401_Memory_Leak__strdup_char_21.c":110:9)
#loc112 = loc("CWE401_Memory_Leak__strdup_char_21.c":112:22)
#loc113 = loc("CWE401_Memory_Leak__strdup_char_21.c":112:5)
#loc114 = loc("CWE401_Memory_Leak__strdup_char_21.c":113:18)
#loc115 = loc("CWE401_Memory_Leak__strdup_char_21.c":113:5)
#loc116 = loc("/usr/include/string.h":141:1)
#loc117 = loc("/usr/include/string.h":142:14)
#loc118 = loc("CWE401_Memory_Leak__strdup_char_21.c":134:18)
#loc119 = loc("CWE401_Memory_Leak__strdup_char_21.c":59:1)
#loc120 = loc("CWE401_Memory_Leak__strdup_char_21.c":59:28)
#loc121 = loc("CWE401_Memory_Leak__strdup_char_21.c":117:1)
#loc122 = loc("CWE401_Memory_Leak__strdup_char_21.c":125:1)
#loc125 = loc("CWE401_Memory_Leak__strdup_char_21.c":118:1)
#loc126 = loc("CWE401_Memory_Leak__strdup_char_21.c":119:5)
#loc127 = loc("CWE401_Memory_Leak__strdup_char_21.c":124:5)
#loc128 = loc("CWE401_Memory_Leak__strdup_char_21.c":119:8)
#loc129 = loc("CWE401_Memory_Leak__strdup_char_21.c":120:5)
#loc130 = loc("CWE401_Memory_Leak__strdup_char_21.c":127:1)
#loc131 = loc("CWE401_Memory_Leak__strdup_char_21.c":138:1)
#loc132 = loc("CWE401_Memory_Leak__strdup_char_21.c":129:5)
#loc133 = loc("CWE401_Memory_Leak__strdup_char_21.c":129:12)
#loc134 = loc("CWE401_Memory_Leak__strdup_char_21.c":130:12)
#loc135 = loc("CWE401_Memory_Leak__strdup_char_21.c":130:5)
#loc136 = loc("CWE401_Memory_Leak__strdup_char_21.c":132:20)
#loc137 = loc("CWE401_Memory_Leak__strdup_char_21.c":132:5)
#loc138 = loc("CWE401_Memory_Leak__strdup_char_21.c":134:5)
#loc139 = loc("CWE401_Memory_Leak__strdup_char_21.c":134:12)
#loc140 = loc("CWE401_Memory_Leak__strdup_char_21.c":135:15)
#loc141 = loc("CWE401_Memory_Leak__strdup_char_21.c":135:5)
#loc142 = loc("CWE401_Memory_Leak__strdup_char_21.c":136:21)
#loc143 = loc("CWE401_Memory_Leak__strdup_char_21.c":136:5)
#loc144 = loc("CWE401_Memory_Leak__strdup_char_21.c":137:17)
#loc145 = loc("CWE401_Memory_Leak__strdup_char_21.c":137:5)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc9, #loc10])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc13, #loc14])
#loc154 = loc(fused[#loc18, #loc19])
#loc155 = loc(fused[#loc21, #loc19])
#loc156 = loc(fused[#loc22, #loc23])
#loc157 = loc(fused[#loc24, #loc25])
#loc158 = loc(fused[#loc27, #loc26])
#loc159 = loc(fused[#loc28, #loc29])
#loc160 = loc(fused[#loc32, #loc33])
#loc161 = loc(fused[#loc37, #loc36])
#loc162 = loc(fused[#loc40, #loc41])
#loc163 = loc(fused[#loc42, #loc43])
#loc164 = loc(fused[#loc44, #loc45])
#loc165 = loc(fused[#loc46, #loc47])
#loc166 = loc(fused[#loc48, #loc49])
#loc167 = loc(fused[#loc51, #loc52])
#loc168 = loc(fused[#loc53, #loc54])
#loc170 = loc(fused[#loc58, #loc59])
#loc171 = loc(fused[#loc61, #loc62, #loc63, #loc59])
#loc172 = loc(fused[#loc67, #loc68])
#loc173 = loc(fused[#loc69, #loc70])
#loc174 = loc(fused[#loc72, #loc71])
#loc175 = loc(fused[#loc73, #loc74])
#loc176 = loc(fused[#loc77, #loc78])
#loc177 = loc(fused[#loc82, #loc81])
#loc178 = loc(fused[#loc85, #loc86])
#loc179 = loc(fused[#loc87, #loc88])
#loc181 = loc(fused[#loc92, #loc93])
#loc182 = loc(fused[#loc95, #loc93])
#loc183 = loc(fused[#loc98, #loc99])
#loc184 = loc(fused[#loc100, #loc101])
#loc185 = loc(fused[#loc103, #loc102])
#loc186 = loc(fused[#loc104, #loc105])
#loc187 = loc(fused[#loc108, #loc109])
#loc188 = loc(fused[#loc113, #loc112])
#loc189 = loc(fused[#loc116, #loc117])
#loc190 = loc(fused[#loc119, #loc120])
#loc191 = loc(fused[#loc121, #loc122])
#loc193 = loc(fused[#loc126, #loc127])
#loc194 = loc(fused[#loc129, #loc127])
#loc195 = loc(fused[#loc130, #loc131])
#loc196 = loc(fused[#loc132, #loc133])
#loc197 = loc(fused[#loc135, #loc134])
#loc198 = loc(fused[#loc137, #loc136])
#loc199 = loc(fused[#loc143, #loc142])
