!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc286)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc287)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc288)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc289)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc290)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc291)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc292)
  cir.func private @close(!s32i) -> !s32i loc(#loc293)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc294)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc295)
  cir.func private @printIntLine(!s32i) loc(#loc296)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc297)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc299)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc31)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc286)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc35)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc304)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc305)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc306)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc307)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc44)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc306)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc51)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc52)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc53)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc310)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc59)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc60)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc312)
                  cir.if %57 {
                    cir.break loc(#loc62)
                  } loc(#loc313)
                } loc(#loc311)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc314)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc65)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc315)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc316)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc70)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc70)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc317)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc318)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc78)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc78)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc319)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc321)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc322)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc322)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc91)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc91)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc323)
                  cir.if %61 {
                    cir.break loc(#loc93)
                  } loc(#loc324)
                } loc(#loc320)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc96)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc96)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc96)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc96)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc96)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc96)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc96)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc97)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc325)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc98)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc99)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc326)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc105)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc105)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc328)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc106)
                    cir.yield %59 : !cir.bool loc(#loc106)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc108)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc329)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc106)
                      cir.yield %63 : !cir.bool loc(#loc106)
                    }, false {
                      %63 = cir.const #false loc(#loc106)
                      cir.yield %63 : !cir.bool loc(#loc106)
                    }) : (!cir.bool) -> !cir.bool loc(#loc106)
                    cir.yield %62 : !cir.bool loc(#loc106)
                  }) : (!cir.bool) -> !cir.bool loc(#loc106)
                  cir.if %58 {
                    cir.break loc(#loc110)
                  } loc(#loc330)
                } loc(#loc327)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc111)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc111)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc113)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc331)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc115)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc332)
              } loc(#loc309)
              cir.yield loc(#loc48)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc118)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc118)
              cir.condition(%13) loc(#loc118)
            } loc(#loc308)
          } loc(#loc308)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc121)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc122)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc334)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc125)
            } loc(#loc335)
          } loc(#loc333)
        } loc(#loc303)
      } loc(#loc302)
    } loc(#loc301)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc337)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc338)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc132)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc133)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc339)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc340)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc341)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc342)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc141)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc344)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc143)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc144)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc145)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc143)
        } loc(#loc345)
      } loc(#loc343)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc148)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc148)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc347)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc150)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc151)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc348)
          cir.condition(%24) loc(#loc152)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc154)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc156)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc157)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc350)
          } loc(#loc349)
          cir.yield loc(#loc147)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc158)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc159)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc351)
          cir.yield loc(#loc346)
        } loc(#loc346)
      } loc(#loc346)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc161)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc162)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc160)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc163)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc164)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc165)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc164)
    } loc(#loc336)
    cir.return loc(#loc27)
  } loc(#loc298)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc353)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc168)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc354)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc170)
    cir.return loc(#loc167)
  } loc(#loc352)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc355)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc356)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc176)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc358)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc182)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc355)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc186)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc186)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc176)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc176)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc190)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc191)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc362)
      } loc(#loc361)
    } loc(#loc360)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc364)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc365)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc199)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc200)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc366)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc367)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc199)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc368)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc369)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc207)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc208)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc208)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc371)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc210)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc211)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc212)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc210)
        } loc(#loc372)
      } loc(#loc370)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc215)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc215)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc374)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc217)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc218)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc375)
          cir.condition(%24) loc(#loc219)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc221)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc222)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc223)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc224)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc377)
          } loc(#loc376)
          cir.yield loc(#loc214)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc225)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc226)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc378)
          cir.yield loc(#loc373)
        } loc(#loc373)
      } loc(#loc373)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc227)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc228)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc229)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc227)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc230)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc231)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc232)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc232)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc231)
    } loc(#loc363)
    cir.return loc(#loc178)
  } loc(#loc357)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc238)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc286)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc242)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc242)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc244)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc384)
      } loc(#loc383)
    } loc(#loc382)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc386)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc387)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc252)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc253)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc253)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc388)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc389)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc252)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc390)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc391)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc260)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc261)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc261)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc393)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc263)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc264)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc265)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc263)
        } loc(#loc394)
      } loc(#loc392)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc268)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc268)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc396)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc270)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc271)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc397)
          cir.condition(%24) loc(#loc272)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc274)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc275)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc276)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc277)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc399)
          } loc(#loc398)
          cir.yield loc(#loc267)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc278)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc279)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc400)
          cir.yield loc(#loc395)
        } loc(#loc395)
      } loc(#loc395)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc280)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc281)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc282)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc280)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc283)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc284)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc285)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc285)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc284)
    } loc(#loc385)
    cir.return loc(#loc234)
  } loc(#loc379)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":76:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdlib.h":672:1)
#loc19 = loc("/usr/include/stdlib.h":672:45)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc24 = loc("/usr/include/stdlib.h":687:1)
#loc25 = loc("/usr/include/stdlib.h":687:32)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":43:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":121:1)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":45:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":45:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":47:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":47:12)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":47:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":48:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":106:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":48:8)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":49:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":50:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":105:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":55:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":55:17)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":56:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":56:32)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":57:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":57:36)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":58:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":58:45)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":59:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":94:21)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":60:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":93:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":69:40)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":69:49)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":69:62)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":69:33)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":69:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":69:73)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":70:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":73:17)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":70:21)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":70:38)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":71:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":72:21)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":74:24)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":74:25)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":74:34)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":74:37)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":74:51)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":74:17)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":74:52)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":75:38)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":75:17)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":76:43)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":76:17)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":76:63)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":77:42)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":77:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":77:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":77:50)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":78:17)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":81:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":78:29)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":78:62)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":78:63)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":78:72)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":78:86)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":78:21)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":78:92)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":79:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":80:21)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":84:35)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":84:50)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":84:63)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":84:81)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":84:84)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":84:30)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":84:17)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":84:85)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":85:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":88:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":85:21)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":85:35)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":85:48)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":85:51)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":85:65)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":86:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":87:21)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":90:43)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":90:29)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":90:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":92:29)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":92:24)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":92:17)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":92:40)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":94:20)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":95:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":98:13)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":95:17)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":95:34)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":96:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":97:30)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":97:17)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":107:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":120:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":108:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":108:16)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":109:9)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":109:14)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":112:28)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":112:35)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":112:42)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":112:52)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":112:53)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":112:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":113:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":113:43)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":113:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":113:27)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":113:33)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":113:34)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":113:40)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":113:39)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":114:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":117:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":114:18)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":114:14)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":114:21)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":114:33)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":114:23)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":115:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":116:29)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":116:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":116:24)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":116:25)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":114:40)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":114:39)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":118:22)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":118:33)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":118:34)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":118:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":119:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":119:14)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":186:1)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":190:1)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":188:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":188:14)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":189:5)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":189:14)
#loc172 = loc("../../testcasesupport/std_testcase.h":110:1)
#loc173 = loc("../../testcasesupport/std_testcase.h":110:18)
#loc174 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc175 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":136:19)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":128:1)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":157:1)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":130:5)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":130:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":132:13)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":132:12)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":132:5)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":133:5)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":142:5)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":133:8)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":134:5)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":137:5)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":139:5)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":136:9)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":141:16)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":141:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":143:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":156:5)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":144:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":144:16)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":145:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":145:14)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":148:28)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":148:35)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":148:42)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":148:52)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":148:53)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":148:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":149:9)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":149:43)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":149:13)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":149:27)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":149:33)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":149:34)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":149:40)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":149:39)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":150:9)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":153:9)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":150:18)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":150:14)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":150:21)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":150:33)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":150:23)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":151:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":152:29)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":152:13)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":152:24)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":152:25)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":150:40)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":150:39)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":154:22)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":154:33)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":154:34)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":154:9)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":155:9)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":155:14)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":160:1)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":184:1)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":162:5)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":162:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":164:13)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":164:12)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":164:5)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":165:5)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":169:5)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":165:8)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":166:5)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":168:16)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":168:9)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":170:5)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":183:5)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":171:9)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":171:16)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":172:9)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":172:14)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":175:28)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":175:35)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":175:42)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":175:52)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":175:53)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":175:9)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":176:9)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":176:43)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":176:13)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":176:27)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":176:33)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":176:34)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":176:40)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":176:39)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":177:9)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":180:9)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":177:18)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":177:14)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":177:21)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":177:33)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":177:23)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":178:9)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":179:29)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":179:13)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":179:24)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":179:25)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":177:40)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":177:39)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":181:22)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":181:33)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":181:34)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":181:9)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":182:9)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_09.c":182:14)
#loc286 = loc(fused[#loc1, #loc2])
#loc287 = loc(fused[#loc3, #loc4])
#loc288 = loc(fused[#loc5, #loc6])
#loc289 = loc(fused[#loc8, #loc9])
#loc290 = loc(fused[#loc10, #loc11])
#loc291 = loc(fused[#loc12, #loc13])
#loc292 = loc(fused[#loc14, #loc15])
#loc293 = loc(fused[#loc16, #loc17])
#loc294 = loc(fused[#loc18, #loc19])
#loc295 = loc(fused[#loc20, #loc21])
#loc296 = loc(fused[#loc22, #loc23])
#loc297 = loc(fused[#loc24, #loc25])
#loc298 = loc(fused[#loc26, #loc27])
#loc299 = loc(fused[#loc28, #loc29])
#loc300 = loc(fused[#loc32, #loc30])
#loc301 = loc(fused[#loc33, #loc34])
#loc302 = loc(fused[#loc36, #loc34])
#loc303 = loc(fused[#loc37, #loc38])
#loc304 = loc(fused[#loc39, #loc40])
#loc305 = loc(fused[#loc41, #loc42])
#loc306 = loc(fused[#loc43, #loc44])
#loc307 = loc(fused[#loc45, #loc46])
#loc308 = loc(fused[#loc47, #loc48])
#loc309 = loc(fused[#loc49, #loc50])
#loc310 = loc(fused[#loc55, #loc56])
#loc311 = loc(fused[#loc57, #loc58])
#loc312 = loc(fused[#loc59, #loc60])
#loc313 = loc(fused[#loc61, #loc58])
#loc314 = loc(fused[#loc63, #loc64])
#loc315 = loc(fused[#loc66, #loc67])
#loc316 = loc(fused[#loc68, #loc69])
#loc317 = loc(fused[#loc72, #loc70])
#loc318 = loc(fused[#loc76, #loc77])
#loc319 = loc(fused[#loc81, #loc82])
#loc320 = loc(fused[#loc83, #loc84])
#loc321 = loc(fused[#loc86, #loc87])
#loc322 = loc(fused[#loc88, #loc89])
#loc323 = loc(fused[#loc90, #loc91])
#loc324 = loc(fused[#loc92, #loc84])
#loc325 = loc(fused[#loc96, #loc97])
#loc326 = loc(fused[#loc100, #loc101])
#loc327 = loc(fused[#loc102, #loc103])
#loc328 = loc(fused[#loc104, #loc105])
#loc329 = loc(fused[#loc107, #loc108])
#loc330 = loc(fused[#loc109, #loc103])
#loc331 = loc(fused[#loc113, #loc111])
#loc332 = loc(fused[#loc116, #loc117])
#loc333 = loc(fused[#loc119, #loc120])
#loc334 = loc(fused[#loc121, #loc122])
#loc335 = loc(fused[#loc123, #loc120])
#loc336 = loc(fused[#loc126, #loc127])
#loc337 = loc(fused[#loc128, #loc129])
#loc338 = loc(fused[#loc130, #loc131])
#loc339 = loc(fused[#loc134, #loc135])
#loc340 = loc(fused[#loc133, #loc135])
#loc341 = loc(fused[#loc132, #loc136])
#loc342 = loc(fused[#loc137, #loc136])
#loc343 = loc(fused[#loc138, #loc139])
#loc344 = loc(fused[#loc140, #loc141])
#loc345 = loc(fused[#loc142, #loc139])
#loc346 = loc(fused[#loc146, #loc147])
#loc347 = loc(fused[#loc149, #loc148])
#loc348 = loc(fused[#loc150, #loc151])
#loc349 = loc(fused[#loc153, #loc147])
#loc350 = loc(fused[#loc155, #loc154])
#loc351 = loc(fused[#loc159, #loc158])
#loc352 = loc(fused[#loc166, #loc167])
#loc353 = loc(fused[#loc168, #loc169])
#loc354 = loc(fused[#loc170, #loc171])
#loc355 = loc(fused[#loc172, #loc173])
#loc356 = loc(fused[#loc174, #loc175])
#loc357 = loc(fused[#loc177, #loc178])
#loc358 = loc(fused[#loc179, #loc180])
#loc359 = loc(fused[#loc183, #loc181])
#loc360 = loc(fused[#loc184, #loc185])
#loc361 = loc(fused[#loc187, #loc188, #loc189, #loc185])
#loc362 = loc(fused[#loc192, #loc191])
#loc363 = loc(fused[#loc193, #loc194])
#loc364 = loc(fused[#loc195, #loc196])
#loc365 = loc(fused[#loc197, #loc198])
#loc366 = loc(fused[#loc201, #loc202])
#loc367 = loc(fused[#loc200, #loc202])
#loc368 = loc(fused[#loc199, #loc203])
#loc369 = loc(fused[#loc204, #loc203])
#loc370 = loc(fused[#loc205, #loc206])
#loc371 = loc(fused[#loc207, #loc208])
#loc372 = loc(fused[#loc209, #loc206])
#loc373 = loc(fused[#loc213, #loc214])
#loc374 = loc(fused[#loc216, #loc215])
#loc375 = loc(fused[#loc217, #loc218])
#loc376 = loc(fused[#loc220, #loc214])
#loc377 = loc(fused[#loc222, #loc221])
#loc378 = loc(fused[#loc226, #loc225])
#loc379 = loc(fused[#loc233, #loc234])
#loc380 = loc(fused[#loc235, #loc236])
#loc381 = loc(fused[#loc239, #loc237])
#loc382 = loc(fused[#loc240, #loc241])
#loc383 = loc(fused[#loc243, #loc241])
#loc384 = loc(fused[#loc245, #loc244])
#loc385 = loc(fused[#loc246, #loc247])
#loc386 = loc(fused[#loc248, #loc249])
#loc387 = loc(fused[#loc250, #loc251])
#loc388 = loc(fused[#loc254, #loc255])
#loc389 = loc(fused[#loc253, #loc255])
#loc390 = loc(fused[#loc252, #loc256])
#loc391 = loc(fused[#loc257, #loc256])
#loc392 = loc(fused[#loc258, #loc259])
#loc393 = loc(fused[#loc260, #loc261])
#loc394 = loc(fused[#loc262, #loc259])
#loc395 = loc(fused[#loc266, #loc267])
#loc396 = loc(fused[#loc269, #loc268])
#loc397 = loc(fused[#loc270, #loc271])
#loc398 = loc(fused[#loc273, #loc267])
#loc399 = loc(fused[#loc275, #loc274])
#loc400 = loc(fused[#loc279, #loc278])
