!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":87:10)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":87:14)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":87:20)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":87:32)
#loc137 = loc(fused[#loc58, #loc59])
#loc138 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc119)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc120)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc121)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc12)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc15)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc120)
    cir.store %7, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc120)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
    %10 = cir.const #cir.int<65> : !s32i loc(#loc20)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc21)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc21)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc125)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc25)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc26)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc28)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc126)
    cir.br ^bb2 loc(#loc127)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc128)
    cir.brcond %24 ^bb3, ^bb4 loc(#loc129)
  ^bb3:  // pred: ^bb2
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc36)
    cir.libc.memmove %30 bytes from %28 to %26 : !cir.ptr<!void>, !u64i loc(#loc130)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc39)
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc131)
    cir.br ^bb4 loc(#loc30)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc30)
  ^bb5:  // pred: ^bb4
    %36 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc118)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc45)
  } loc(#loc132)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc134)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    cir.return %17 : !s32i loc(#loc141)
  } loc(#loc136)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc144)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc145)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc85)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc87)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc144)
    cir.store %8, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc144)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc93)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc94)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc94)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc94)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc149)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc98)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc99)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc101)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc150)
    cir.br ^bb2 loc(#loc151)
  ^bb2:  // pred: ^bb1
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc152)
    cir.brcond %25 ^bb3, ^bb4 loc(#loc153)
  ^bb3:  // pred: ^bb2
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc109)
    cir.libc.memmove %31 bytes from %29 to %27 : !cir.ptr<!void>, !u64i loc(#loc154)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc112)
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %35 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc114)
    cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc103)
  ^bb5:  // pred: ^bb4
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb6 loc(#loc91)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc77)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":21:1)
#loc4 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":42:1)
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":29:9)
#loc6 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":29:24)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":30:9)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":30:26)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":23:5)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":23:9)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":25:13)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":25:12)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":25:5)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":27:13)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":27:12)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":27:5)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":28:5)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":41:5)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":31:16)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":31:24)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":31:29)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":31:33)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":31:9)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":31:34)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":32:25)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":32:16)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":32:20)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":32:9)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":33:9)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":39:9)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":33:13)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":33:20)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":34:9)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":37:21)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":37:27)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":37:35)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":37:13)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":37:39)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":38:26)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":38:18)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":38:13)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":40:19)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":40:9)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":72:1)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":75:1)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":74:5)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":74:13)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":92:15)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":94:15)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":97:15)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":99:15)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":87:1)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":102:1)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":88:1)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":90:27)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":90:22)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":90:5)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":92:5)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":93:5)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":93:74)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":94:5)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":97:5)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":98:5)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":98:73)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":99:5)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":101:12)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":101:5)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":49:1)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":70:1)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":57:9)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":57:24)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":58:9)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":58:26)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":51:5)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":51:9)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":53:13)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":53:12)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":53:5)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":55:12)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":55:16)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":55:5)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":56:5)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":69:5)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":59:16)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":59:24)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":59:29)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":59:33)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":59:9)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":59:34)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":60:25)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":60:16)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":60:20)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":60:9)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":61:9)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":67:9)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":61:13)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":61:20)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":62:9)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":65:21)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":65:27)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":65:35)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":65:13)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":65:39)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":66:26)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":66:18)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":66:13)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":68:19)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_01.c":68:9)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc13, #loc11])
#loc123 = loc(fused[#loc16, #loc14])
#loc124 = loc(fused[#loc17, #loc18])
#loc125 = loc(fused[#loc23, #loc24])
#loc126 = loc(fused[#loc28, #loc25])
#loc127 = loc(fused[#loc29, #loc30])
#loc128 = loc(fused[#loc31, #loc32])
#loc129 = loc(fused[#loc33, #loc30])
#loc130 = loc(fused[#loc37, #loc38])
#loc131 = loc(fused[#loc41, #loc39])
#loc132 = loc(fused[#loc44, #loc45])
#loc133 = loc(fused[#loc46, #loc47])
#loc134 = loc(fused[#loc48, #loc49])
#loc135 = loc(fused[#loc50, #loc51])
#loc136 = loc(fused[#loc56, #loc57])
#loc139 = loc(fused[#loc67, #loc68])
#loc140 = loc(fused[#loc71, #loc72])
#loc141 = loc(fused[#loc75, #loc74])
#loc142 = loc(fused[#loc76, #loc77])
#loc143 = loc(fused[#loc78, #loc79])
#loc144 = loc(fused[#loc80, #loc81])
#loc145 = loc(fused[#loc82, #loc83])
#loc146 = loc(fused[#loc86, #loc84])
#loc147 = loc(fused[#loc89, #loc88])
#loc148 = loc(fused[#loc90, #loc91])
#loc149 = loc(fused[#loc96, #loc97])
#loc150 = loc(fused[#loc101, #loc98])
#loc151 = loc(fused[#loc102, #loc103])
#loc152 = loc(fused[#loc104, #loc105])
#loc153 = loc(fused[#loc106, #loc103])
#loc154 = loc(fused[#loc110, #loc111])
#loc155 = loc(fused[#loc114, #loc112])
