!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execlp_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" external @CWE78_OS_Command_Injection__char_console_execlp_68_badData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc27)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc28)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execlp_68b_badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc30)
    %1 = cir.get_global @CWE78_OS_Command_Injection__char_console_execlp_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc27)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc11)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc11)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc13)
    %11 = cir.call @execlp(%4, %6, %8, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc14)
    cir.return loc(#loc8)
  } loc(#loc29)
  cir.global "private" external @CWE78_OS_Command_Injection__char_console_execlp_68_goodG2BData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc31)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execlp_68b_goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc33)
    %1 = cir.get_global @CWE78_OS_Command_Injection__char_console_execlp_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc33)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc21)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc21)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc22)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc22)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc23)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc23)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %11 = cir.call @execlp(%4, %6, %8, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc26)
    cir.return loc(#loc18)
  } loc(#loc32)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execlp_68b.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":43:1)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":43:15)
#loc3 = loc("/usr/include/unistd.h":605:1)
#loc4 = loc("/usr/include/unistd.h":606:14)
#loc5 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":56:12)
#loc6 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":56:38)
#loc7 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":50:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":57:1)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":52:5)
#loc10 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":52:19)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":56:25)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":56:52)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":56:66)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":56:5)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":44:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":44:15)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":64:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":71:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":66:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":66:19)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":70:12)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":70:25)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":70:38)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":70:52)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":70:66)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_execlp_68b.c":70:5)
#loc27 = loc(fused[#loc1, #loc2])
#loc28 = loc(fused[#loc3, #loc4])
#loc29 = loc(fused[#loc7, #loc8])
#loc30 = loc(fused[#loc9, #loc10])
#loc31 = loc(fused[#loc15, #loc16])
#loc32 = loc(fused[#loc17, #loc18])
#loc33 = loc(fused[#loc19, #loc20])
