!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__stdThread = !cir.struct<struct "_stdThread" incomplete>
!ty__stdThreadLock = !cir.struct<struct "_stdThreadLock" incomplete>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":26:23)
#loc8 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":26:29)
#loc65 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":80:25)
#loc74 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":84:25)
#loc100 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":185:10)
#loc101 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":185:14)
#loc102 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":185:20)
#loc103 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":185:32)
#loc129 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":44:24)
#loc130 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":44:30)
#loc195 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":122:25)
#loc204 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":126:25)
#loc251 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":156:25)
#loc260 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":160:25)
#true = #cir.bool<true> : !cir.bool
#loc273 = loc(fused[#loc7, #loc8])
#loc309 = loc(fused[#loc100, #loc101])
#loc310 = loc(fused[#loc102, #loc103])
#loc319 = loc(fused[#loc129, #loc130])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__global_int_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @gBadInt = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc270)
  cir.func private @stdThreadCreate(!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc271)
  cir.func internal private @helperBad(%arg0: !cir.ptr<!void> loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc273)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc274)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    cir.br ^bb1 loc(#loc275)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb2 loc(#loc275)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.const #cir.int<1000000> : !s32i loc(#loc17)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc277)
    cir.brcond %5 ^bb3, ^bb7 loc(#loc18)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc278)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc270)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc20)
    %10 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc270)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc24)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    cir.br ^bb2 loc(#loc275)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc6)
  } loc(#loc272)
  cir.func private @stdThreadJoin(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc281)
  cir.func private @stdThreadDestroy(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc282)
  cir.func private @printIntLine(!s32i) loc(#loc283)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__global_int_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc285)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc286)
    cir.br ^bb1 loc(#loc287)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc39)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc40)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc288)
    cir.brcond %4 ^bb2, ^bb37 loc(#loc289)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc290)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc34)
    cir.store %5, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc285)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc36)
    cir.store %6, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc286)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %8 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc270)
    cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb4 loc(#loc292)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc48)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
    %11 = cir.call @stdThreadCreate(%9, %10, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc50)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc50)
    %13 = cir.unary(not, %12) : !cir.bool, !cir.bool loc(#loc50)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc293)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc52)
    cir.store %14, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc294)
    cir.br ^bb6 loc(#loc47)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc47)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc295)
  ^bb8:  // pred: ^bb7
    %15 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
    %17 = cir.call @stdThreadCreate(%15, %16, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc58)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc58)
    %19 = cir.unary(not, %18) : !cir.bool, !cir.bool loc(#loc58)
    cir.brcond %19 ^bb9, ^bb10 loc(#loc296)
  ^bb9:  // pred: ^bb8
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc60)
    cir.store %20, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc297)
    cir.br ^bb10 loc(#loc55)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc55)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc298)
  ^bb12:  // pred: ^bb11
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc64)
    %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc64)
    cir.brcond %22 ^bb13, ^bb18 loc(#loc65)
  ^bb13:  // pred: ^bb12
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc66)
    %24 = cir.call @stdThreadJoin(%23) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc67)
    %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc67)
    cir.brcond %25 ^bb14, ^bb15 loc(#loc65)
  ^bb14:  // pred: ^bb13
    %26 = cir.const #true loc(#loc65)
    cir.br ^bb16(%26 : !cir.bool) loc(#loc65)
  ^bb15:  // pred: ^bb13
    %27 = cir.const #false loc(#loc65)
    cir.br ^bb16(%27 : !cir.bool) loc(#loc65)
  ^bb16(%28: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":80:25)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc65)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%28 : !cir.bool) loc(#loc65)
  ^bb18:  // pred: ^bb12
    %29 = cir.const #false loc(#loc65)
    cir.br ^bb19(%29 : !cir.bool) loc(#loc65)
  ^bb19(%30: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":80:25)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc65)
  ^bb20:  // pred: ^bb19
    cir.brcond %30 ^bb21, ^bb22 loc(#loc299)
  ^bb21:  // pred: ^bb20
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc69)
    %32 = cir.call @stdThreadDestroy(%31) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc70)
    cir.br ^bb22 loc(#loc63)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc63)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc300)
  ^bb24:  // pred: ^bb23
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc73)
    %34 = cir.cast(ptr_to_bool, %33 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc73)
    cir.brcond %34 ^bb25, ^bb30 loc(#loc74)
  ^bb25:  // pred: ^bb24
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc75)
    %36 = cir.call @stdThreadJoin(%35) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc76)
    %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %37 ^bb26, ^bb27 loc(#loc74)
  ^bb26:  // pred: ^bb25
    %38 = cir.const #true loc(#loc74)
    cir.br ^bb28(%38 : !cir.bool) loc(#loc74)
  ^bb27:  // pred: ^bb25
    %39 = cir.const #false loc(#loc74)
    cir.br ^bb28(%39 : !cir.bool) loc(#loc74)
  ^bb28(%40: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":84:25)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc74)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31(%40 : !cir.bool) loc(#loc74)
  ^bb30:  // pred: ^bb24
    %41 = cir.const #false loc(#loc74)
    cir.br ^bb31(%41 : !cir.bool) loc(#loc74)
  ^bb31(%42: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":84:25)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc74)
  ^bb32:  // pred: ^bb31
    cir.brcond %42 ^bb33, ^bb34 loc(#loc301)
  ^bb33:  // pred: ^bb32
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc78)
    %44 = cir.call @stdThreadDestroy(%43) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc79)
    cir.br ^bb34 loc(#loc72)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc72)
  ^bb35:  // pred: ^bb34
    %45 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc270)
    %46 = cir.load %45 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    cir.call @printIntLine(%46) : (!s32i) -> () loc(#loc81)
    cir.br ^bb36 loc(#loc43)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc38)
  ^bb37:  // 2 preds: ^bb1, ^bb36
    cir.br ^bb38 loc(#loc38)
  ^bb38:  // pred: ^bb37
    cir.return loc(#loc32)
  } loc(#loc284)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__global_int_06_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc303)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc304)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    cir.return loc(#loc83)
  } loc(#loc302)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc305)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc306)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc307)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc97)
  cir.func @main(%arg0: !s32i loc(fused[#loc100, #loc101]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc102, #loc103])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc309)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc310)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc99)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc104)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc105)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc106)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc106)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc107)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc94)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %8 = cir.get_global @CWE366_Race_Condition_Within_Thread__global_int_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc311)
    cir.call @CWE366_Race_Condition_Within_Thread__global_int_06_good() : () -> () loc(#loc109)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc95)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc96)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %13 = cir.get_global @CWE366_Race_Condition_Within_Thread__global_int_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc312)
    cir.call @CWE366_Race_Condition_Within_Thread__global_int_06_bad() : () -> () loc(#loc113)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc97)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc116)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    cir.return %17 : !s32i loc(#loc313)
  } loc(#loc308)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc118)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc314)
  cir.global "private" internal dsolocal @gGoodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc315)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc316)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc317)
  cir.func internal private @helperGood(%arg0: !cir.ptr<!void> loc(fused[#loc129, #loc130])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc319)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc320)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc133)
    %2 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc315)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc134)
    cir.call @stdThreadLockAcquire(%3) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc135)
    cir.br ^bb1 loc(#loc321)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc138)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    cir.br ^bb2 loc(#loc321)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %6 = cir.const #cir.int<1000000> : !s32i loc(#loc141)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc323)
    cir.brcond %7 ^bb3, ^bb7 loc(#loc142)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc324)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc325)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc146)
    %12 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc325)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.br ^bb5 loc(#loc137)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc137)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc150)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb2 loc(#loc321)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc137)
  ^bb8:  // pred: ^bb7
    %15 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc315)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc151)
    cir.call @stdThreadLockRelease(%16) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc152)
    cir.return loc(#loc128)
  } loc(#loc318)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc328)
  cir.global "private" internal dsolocal @gGoodInt = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc325)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc330)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc331)
    cir.br ^bb1 loc(#loc332)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc163)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc164)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc333)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc334)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc118)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    cir.br ^bb42 loc(#loc166)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc335)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc158)
    cir.store %7, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc330)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc160)
    cir.store %8, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc331)
    cir.br ^bb5 loc(#loc336)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc315)
    %10 = cir.call @stdThreadLockCreate(%9) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc173)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc173)
    %12 = cir.unary(not, %11) : !cir.bool, !cir.bool loc(#loc173)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc337)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc175)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc172)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc338)
  ^bb9:  // pred: ^bb8
    %13 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc178)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc179)
    %15 = cir.call @stdThreadCreate(%13, %14, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc180)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc180)
    %17 = cir.unary(not, %16) : !cir.bool, !cir.bool loc(#loc180)
    cir.brcond %17 ^bb10, ^bb11 loc(#loc339)
  ^bb10:  // pred: ^bb9
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc182)
    cir.store %18, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc340)
    cir.br ^bb11 loc(#loc177)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc177)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc341)
  ^bb13:  // pred: ^bb12
    %19 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc186)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc187)
    %21 = cir.call @stdThreadCreate(%19, %20, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc188)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc188)
    %23 = cir.unary(not, %22) : !cir.bool, !cir.bool loc(#loc188)
    cir.brcond %23 ^bb14, ^bb15 loc(#loc342)
  ^bb14:  // pred: ^bb13
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc190)
    cir.store %24, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc343)
    cir.br ^bb15 loc(#loc185)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc185)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc344)
  ^bb17:  // pred: ^bb16
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc194)
    %26 = cir.cast(ptr_to_bool, %25 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc194)
    cir.brcond %26 ^bb18, ^bb23 loc(#loc195)
  ^bb18:  // pred: ^bb17
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc196)
    %28 = cir.call @stdThreadJoin(%27) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc197)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc197)
    cir.brcond %29 ^bb19, ^bb20 loc(#loc195)
  ^bb19:  // pred: ^bb18
    %30 = cir.const #true loc(#loc195)
    cir.br ^bb21(%30 : !cir.bool) loc(#loc195)
  ^bb20:  // pred: ^bb18
    %31 = cir.const #false loc(#loc195)
    cir.br ^bb21(%31 : !cir.bool) loc(#loc195)
  ^bb21(%32: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":122:25)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc195)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%32 : !cir.bool) loc(#loc195)
  ^bb23:  // pred: ^bb17
    %33 = cir.const #false loc(#loc195)
    cir.br ^bb24(%33 : !cir.bool) loc(#loc195)
  ^bb24(%34: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":122:25)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc195)
  ^bb25:  // pred: ^bb24
    cir.brcond %34 ^bb26, ^bb27 loc(#loc345)
  ^bb26:  // pred: ^bb25
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc199)
    %36 = cir.call @stdThreadDestroy(%35) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc200)
    cir.br ^bb27 loc(#loc193)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc193)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc346)
  ^bb29:  // pred: ^bb28
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc203)
    %38 = cir.cast(ptr_to_bool, %37 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc203)
    cir.brcond %38 ^bb30, ^bb35 loc(#loc204)
  ^bb30:  // pred: ^bb29
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc205)
    %40 = cir.call @stdThreadJoin(%39) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc206)
    %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc206)
    cir.brcond %41 ^bb31, ^bb32 loc(#loc204)
  ^bb31:  // pred: ^bb30
    %42 = cir.const #true loc(#loc204)
    cir.br ^bb33(%42 : !cir.bool) loc(#loc204)
  ^bb32:  // pred: ^bb30
    %43 = cir.const #false loc(#loc204)
    cir.br ^bb33(%43 : !cir.bool) loc(#loc204)
  ^bb33(%44: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":126:25)):  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc204)
  ^bb34:  // pred: ^bb33
    cir.br ^bb36(%44 : !cir.bool) loc(#loc204)
  ^bb35:  // pred: ^bb29
    %45 = cir.const #false loc(#loc204)
    cir.br ^bb36(%45 : !cir.bool) loc(#loc204)
  ^bb36(%46: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":126:25)):  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc204)
  ^bb37:  // pred: ^bb36
    cir.brcond %46 ^bb38, ^bb39 loc(#loc347)
  ^bb38:  // pred: ^bb37
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc208)
    %48 = cir.call @stdThreadDestroy(%47) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc209)
    cir.br ^bb39 loc(#loc202)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc202)
  ^bb40:  // pred: ^bb39
    %49 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc315)
    %50 = cir.load %49 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc210)
    cir.call @stdThreadLockDestroy(%50) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc211)
    %51 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc325)
    %52 = cir.load %51 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.call @printIntLine(%52) : (!s32i) -> () loc(#loc213)
    cir.br ^bb41 loc(#loc170)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc162)
  ^bb42:  // 2 preds: ^bb2, ^bb41
    cir.br ^bb43 loc(#loc162)
  ^bb43:  // pred: ^bb42
    cir.return loc(#loc156)
  } loc(#loc329)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc349)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc350)
    cir.br ^bb1 loc(#loc351)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc222)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc223)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %4 ^bb2, ^bb41 loc(#loc353)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc354)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc217)
    cir.store %5, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc349)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc219)
    cir.store %6, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc350)
    cir.br ^bb4 loc(#loc355)
  ^bb4:  // pred: ^bb3
    %7 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc315)
    %8 = cir.call @stdThreadLockCreate(%7) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc229)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc229)
    %10 = cir.unary(not, %9) : !cir.bool, !cir.bool loc(#loc229)
    cir.brcond %10 ^bb5, ^bb6 loc(#loc356)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc231)
  ^bb6:  // pred: ^bb4
    cir.br ^bb7 loc(#loc228)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc357)
  ^bb8:  // pred: ^bb7
    %11 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc234)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc235)
    %13 = cir.call @stdThreadCreate(%11, %12, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc236)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc236)
    %15 = cir.unary(not, %14) : !cir.bool, !cir.bool loc(#loc236)
    cir.brcond %15 ^bb9, ^bb10 loc(#loc358)
  ^bb9:  // pred: ^bb8
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc238)
    cir.store %16, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc359)
    cir.br ^bb10 loc(#loc233)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc233)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc360)
  ^bb12:  // pred: ^bb11
    %17 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc242)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc243)
    %19 = cir.call @stdThreadCreate(%17, %18, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc244)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc244)
    %21 = cir.unary(not, %20) : !cir.bool, !cir.bool loc(#loc244)
    cir.brcond %21 ^bb13, ^bb14 loc(#loc361)
  ^bb13:  // pred: ^bb12
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc246)
    cir.store %22, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc362)
    cir.br ^bb14 loc(#loc241)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc241)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc363)
  ^bb16:  // pred: ^bb15
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc250)
    %24 = cir.cast(ptr_to_bool, %23 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc250)
    cir.brcond %24 ^bb17, ^bb22 loc(#loc251)
  ^bb17:  // pred: ^bb16
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc252)
    %26 = cir.call @stdThreadJoin(%25) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc253)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc253)
    cir.brcond %27 ^bb18, ^bb19 loc(#loc251)
  ^bb18:  // pred: ^bb17
    %28 = cir.const #true loc(#loc251)
    cir.br ^bb20(%28 : !cir.bool) loc(#loc251)
  ^bb19:  // pred: ^bb17
    %29 = cir.const #false loc(#loc251)
    cir.br ^bb20(%29 : !cir.bool) loc(#loc251)
  ^bb20(%30: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":156:25)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc251)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23(%30 : !cir.bool) loc(#loc251)
  ^bb22:  // pred: ^bb16
    %31 = cir.const #false loc(#loc251)
    cir.br ^bb23(%31 : !cir.bool) loc(#loc251)
  ^bb23(%32: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":156:25)):  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc251)
  ^bb24:  // pred: ^bb23
    cir.brcond %32 ^bb25, ^bb26 loc(#loc364)
  ^bb25:  // pred: ^bb24
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc255)
    %34 = cir.call @stdThreadDestroy(%33) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc256)
    cir.br ^bb26 loc(#loc249)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc249)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc365)
  ^bb28:  // pred: ^bb27
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc259)
    %36 = cir.cast(ptr_to_bool, %35 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc259)
    cir.brcond %36 ^bb29, ^bb34 loc(#loc260)
  ^bb29:  // pred: ^bb28
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc261)
    %38 = cir.call @stdThreadJoin(%37) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc262)
    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc262)
    cir.brcond %39 ^bb30, ^bb31 loc(#loc260)
  ^bb30:  // pred: ^bb29
    %40 = cir.const #true loc(#loc260)
    cir.br ^bb32(%40 : !cir.bool) loc(#loc260)
  ^bb31:  // pred: ^bb29
    %41 = cir.const #false loc(#loc260)
    cir.br ^bb32(%41 : !cir.bool) loc(#loc260)
  ^bb32(%42: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":160:25)):  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc260)
  ^bb33:  // pred: ^bb32
    cir.br ^bb35(%42 : !cir.bool) loc(#loc260)
  ^bb34:  // pred: ^bb28
    %43 = cir.const #false loc(#loc260)
    cir.br ^bb35(%43 : !cir.bool) loc(#loc260)
  ^bb35(%44: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":160:25)):  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc260)
  ^bb36:  // pred: ^bb35
    cir.brcond %44 ^bb37, ^bb38 loc(#loc366)
  ^bb37:  // pred: ^bb36
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc264)
    %46 = cir.call @stdThreadDestroy(%45) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc265)
    cir.br ^bb38 loc(#loc258)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc258)
  ^bb39:  // pred: ^bb38
    %47 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc315)
    %48 = cir.load %47 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc266)
    cir.call @stdThreadLockDestroy(%48) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc267)
    %49 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc325)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc269)
    cir.br ^bb40 loc(#loc226)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc221)
  ^bb41:  // 2 preds: ^bb1, ^bb40
    cir.br ^bb42 loc(#loc221)
  ^bb42:  // pred: ^bb41
    cir.return loc(#loc215)
  } loc(#loc348)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__global_int_06.c":0:0)
#loc1 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":22:1)
#loc2 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":22:22)
#loc3 = loc("../../testcasesupport/std_thread.h":14:1)
#loc4 = loc("../../testcasesupport/std_thread.h":14:74)
#loc5 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":26:1)
#loc6 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":42:1)
#loc9 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":28:5)
#loc10 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":28:9)
#loc11 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":27:1)
#loc12 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":38:5)
#loc13 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":41:5)
#loc14 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":38:14)
#loc15 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":38:10)
#loc16 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":38:17)
#loc17 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":38:21)
#loc18 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":38:19)
#loc19 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":39:5)
#loc20 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":40:19)
#loc21 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":40:29)
#loc22 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":40:9)
#loc23 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":38:31)
#loc24 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":38:30)
#loc25 = loc("../../testcasesupport/std_thread.h":15:1)
#loc26 = loc("../../testcasesupport/std_thread.h":15:35)
#loc27 = loc("../../testcasesupport/std_thread.h":16:1)
#loc28 = loc("../../testcasesupport/std_thread.h":16:38)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc31 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":64:1)
#loc32 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":91:1)
#loc33 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":69:13)
#loc34 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":69:33)
#loc35 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":70:13)
#loc36 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":70:33)
#loc37 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":66:5)
#loc38 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":90:5)
#loc39 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":66:8)
#loc40 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":66:27)
#loc41 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":67:5)
#loc42 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":68:9)
#loc43 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":89:9)
#loc44 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":71:23)
#loc45 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":71:13)
#loc46 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":72:13)
#loc47 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":75:13)
#loc48 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":72:34)
#loc49 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":72:45)
#loc50 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":72:18)
#loc51 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":73:13)
#loc52 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":74:27)
#loc53 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":74:17)
#loc54 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":76:13)
#loc55 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":79:13)
#loc56 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":76:34)
#loc57 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":76:45)
#loc58 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":76:18)
#loc59 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":77:13)
#loc60 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":78:27)
#loc61 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":78:17)
#loc62 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":80:13)
#loc63 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":83:13)
#loc64 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":80:17)
#loc66 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":80:42)
#loc67 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":80:28)
#loc68 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":81:13)
#loc69 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":82:34)
#loc70 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":82:17)
#loc71 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":84:13)
#loc72 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":87:13)
#loc73 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":84:17)
#loc75 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":84:42)
#loc76 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":84:28)
#loc77 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":85:13)
#loc78 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":86:34)
#loc79 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":86:17)
#loc80 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":88:26)
#loc81 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":88:13)
#loc82 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":170:1)
#loc83 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":174:1)
#loc84 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":172:5)
#loc85 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":172:11)
#loc86 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":173:5)
#loc87 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":173:11)
#loc88 = loc("/usr/include/stdlib.h":575:1)
#loc89 = loc("/usr/include/stdlib.h":575:41)
#loc90 = loc("/usr/include/time.h":76:1)
#loc91 = loc("/usr/include/time.h":76:38)
#loc92 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc93 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc94 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":190:15)
#loc95 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":192:15)
#loc96 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":195:15)
#loc97 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":197:15)
#loc98 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":185:1)
#loc99 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":200:1)
#loc104 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":186:1)
#loc105 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":188:27)
#loc106 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":188:22)
#loc107 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":188:5)
#loc108 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":190:5)
#loc109 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":191:5)
#loc110 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":191:61)
#loc111 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":192:5)
#loc112 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":195:5)
#loc113 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":196:5)
#loc114 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":196:60)
#loc115 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":197:5)
#loc116 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":199:12)
#loc117 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":199:5)
#loc118 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":103:19)
#loc119 = loc("../../testcasesupport/std_thread.h":18:1)
#loc120 = loc("../../testcasesupport/std_thread.h":18:44)
#loc121 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":24:1)
#loc122 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":24:34)
#loc123 = loc("../../testcasesupport/std_thread.h":19:1)
#loc124 = loc("../../testcasesupport/std_thread.h":19:45)
#loc125 = loc("../../testcasesupport/std_thread.h":20:1)
#loc126 = loc("../../testcasesupport/std_thread.h":20:45)
#loc127 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":44:1)
#loc128 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":55:1)
#loc131 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":46:5)
#loc132 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":46:9)
#loc133 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":45:1)
#loc134 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":49:26)
#loc135 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":49:5)
#loc136 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":50:5)
#loc137 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":53:5)
#loc138 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":50:14)
#loc139 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":50:10)
#loc140 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":50:17)
#loc141 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":50:21)
#loc142 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":50:19)
#loc143 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":51:5)
#loc144 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":23:1)
#loc145 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":23:23)
#loc146 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":52:20)
#loc147 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":52:31)
#loc148 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":52:9)
#loc149 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":50:31)
#loc150 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":50:30)
#loc151 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":54:26)
#loc152 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":54:5)
#loc153 = loc("../../testcasesupport/std_thread.h":21:1)
#loc154 = loc("../../testcasesupport/std_thread.h":21:45)
#loc155 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":98:1)
#loc156 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":134:1)
#loc157 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":108:13)
#loc158 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":108:33)
#loc159 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":109:13)
#loc160 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":109:33)
#loc161 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":100:5)
#loc162 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":133:5)
#loc163 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":100:8)
#loc164 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":100:27)
#loc165 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":101:5)
#loc166 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":104:5)
#loc167 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":106:5)
#loc168 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":103:9)
#loc169 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":107:9)
#loc170 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":132:9)
#loc171 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":110:13)
#loc172 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":113:13)
#loc173 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":110:18)
#loc174 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":111:13)
#loc175 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":112:17)
#loc176 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":114:13)
#loc177 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":117:13)
#loc178 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":114:34)
#loc179 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":114:46)
#loc180 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":114:18)
#loc181 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":115:13)
#loc182 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":116:27)
#loc183 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":116:17)
#loc184 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":118:13)
#loc185 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":121:13)
#loc186 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":118:34)
#loc187 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":118:46)
#loc188 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":118:18)
#loc189 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":119:13)
#loc190 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":120:27)
#loc191 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":120:17)
#loc192 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":122:13)
#loc193 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":125:13)
#loc194 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":122:17)
#loc196 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":122:42)
#loc197 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":122:28)
#loc198 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":123:13)
#loc199 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":124:34)
#loc200 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":124:17)
#loc201 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":126:13)
#loc202 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":129:13)
#loc203 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":126:17)
#loc205 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":126:42)
#loc206 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":126:28)
#loc207 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":127:13)
#loc208 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":128:34)
#loc209 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":128:17)
#loc210 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":130:34)
#loc211 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":130:13)
#loc212 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":131:26)
#loc213 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":131:13)
#loc214 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":137:1)
#loc215 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":168:1)
#loc216 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":142:13)
#loc217 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":142:33)
#loc218 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":143:13)
#loc219 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":143:33)
#loc220 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":139:5)
#loc221 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":167:5)
#loc222 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":139:8)
#loc223 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":139:27)
#loc224 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":140:5)
#loc225 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":141:9)
#loc226 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":166:9)
#loc227 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":144:13)
#loc228 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":147:13)
#loc229 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":144:18)
#loc230 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":145:13)
#loc231 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":146:17)
#loc232 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":148:13)
#loc233 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":151:13)
#loc234 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":148:34)
#loc235 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":148:46)
#loc236 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":148:18)
#loc237 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":149:13)
#loc238 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":150:27)
#loc239 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":150:17)
#loc240 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":152:13)
#loc241 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":155:13)
#loc242 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":152:34)
#loc243 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":152:46)
#loc244 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":152:18)
#loc245 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":153:13)
#loc246 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":154:27)
#loc247 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":154:17)
#loc248 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":156:13)
#loc249 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":159:13)
#loc250 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":156:17)
#loc252 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":156:42)
#loc253 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":156:28)
#loc254 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":157:13)
#loc255 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":158:34)
#loc256 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":158:17)
#loc257 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":160:13)
#loc258 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":163:13)
#loc259 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":160:17)
#loc261 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":160:42)
#loc262 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":160:28)
#loc263 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":161:13)
#loc264 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":162:34)
#loc265 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":162:17)
#loc266 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":164:34)
#loc267 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":164:13)
#loc268 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":165:26)
#loc269 = loc("CWE366_Race_Condition_Within_Thread__global_int_06.c":165:13)
#loc270 = loc(fused[#loc1, #loc2])
#loc271 = loc(fused[#loc3, #loc4])
#loc272 = loc(fused[#loc5, #loc6])
#loc274 = loc(fused[#loc9, #loc10])
#loc275 = loc(fused[#loc12, #loc13])
#loc276 = loc(fused[#loc15, #loc14])
#loc277 = loc(fused[#loc16, #loc17])
#loc278 = loc(fused[#loc19, #loc13])
#loc279 = loc(fused[#loc22, #loc21])
#loc280 = loc(fused[#loc24, #loc23])
#loc281 = loc(fused[#loc25, #loc26])
#loc282 = loc(fused[#loc27, #loc28])
#loc283 = loc(fused[#loc29, #loc30])
#loc284 = loc(fused[#loc31, #loc32])
#loc285 = loc(fused[#loc33, #loc34])
#loc286 = loc(fused[#loc35, #loc36])
#loc287 = loc(fused[#loc37, #loc38])
#loc288 = loc(fused[#loc39, #loc40])
#loc289 = loc(fused[#loc41, #loc38])
#loc290 = loc(fused[#loc42, #loc43])
#loc291 = loc(fused[#loc45, #loc44])
#loc292 = loc(fused[#loc46, #loc47])
#loc293 = loc(fused[#loc51, #loc47])
#loc294 = loc(fused[#loc53, #loc52])
#loc295 = loc(fused[#loc54, #loc55])
#loc296 = loc(fused[#loc59, #loc55])
#loc297 = loc(fused[#loc61, #loc60])
#loc298 = loc(fused[#loc62, #loc63])
#loc299 = loc(fused[#loc68, #loc63])
#loc300 = loc(fused[#loc71, #loc72])
#loc301 = loc(fused[#loc77, #loc72])
#loc302 = loc(fused[#loc82, #loc83])
#loc303 = loc(fused[#loc84, #loc85])
#loc304 = loc(fused[#loc86, #loc87])
#loc305 = loc(fused[#loc88, #loc89])
#loc306 = loc(fused[#loc90, #loc91])
#loc307 = loc(fused[#loc92, #loc93])
#loc308 = loc(fused[#loc98, #loc99])
#loc311 = loc(fused[#loc109, #loc110])
#loc312 = loc(fused[#loc113, #loc114])
#loc313 = loc(fused[#loc117, #loc116])
#loc314 = loc(fused[#loc119, #loc120])
#loc315 = loc(fused[#loc121, #loc122])
#loc316 = loc(fused[#loc123, #loc124])
#loc317 = loc(fused[#loc125, #loc126])
#loc318 = loc(fused[#loc127, #loc128])
#loc320 = loc(fused[#loc131, #loc132])
#loc321 = loc(fused[#loc136, #loc137])
#loc322 = loc(fused[#loc139, #loc138])
#loc323 = loc(fused[#loc140, #loc141])
#loc324 = loc(fused[#loc143, #loc137])
#loc325 = loc(fused[#loc144, #loc145])
#loc326 = loc(fused[#loc148, #loc147])
#loc327 = loc(fused[#loc150, #loc149])
#loc328 = loc(fused[#loc153, #loc154])
#loc329 = loc(fused[#loc155, #loc156])
#loc330 = loc(fused[#loc157, #loc158])
#loc331 = loc(fused[#loc159, #loc160])
#loc332 = loc(fused[#loc161, #loc162])
#loc333 = loc(fused[#loc163, #loc164])
#loc334 = loc(fused[#loc165, #loc166, #loc167, #loc162])
#loc335 = loc(fused[#loc169, #loc170])
#loc336 = loc(fused[#loc171, #loc172])
#loc337 = loc(fused[#loc174, #loc172])
#loc338 = loc(fused[#loc176, #loc177])
#loc339 = loc(fused[#loc181, #loc177])
#loc340 = loc(fused[#loc183, #loc182])
#loc341 = loc(fused[#loc184, #loc185])
#loc342 = loc(fused[#loc189, #loc185])
#loc343 = loc(fused[#loc191, #loc190])
#loc344 = loc(fused[#loc192, #loc193])
#loc345 = loc(fused[#loc198, #loc193])
#loc346 = loc(fused[#loc201, #loc202])
#loc347 = loc(fused[#loc207, #loc202])
#loc348 = loc(fused[#loc214, #loc215])
#loc349 = loc(fused[#loc216, #loc217])
#loc350 = loc(fused[#loc218, #loc219])
#loc351 = loc(fused[#loc220, #loc221])
#loc352 = loc(fused[#loc222, #loc223])
#loc353 = loc(fused[#loc224, #loc221])
#loc354 = loc(fused[#loc225, #loc226])
#loc355 = loc(fused[#loc227, #loc228])
#loc356 = loc(fused[#loc230, #loc228])
#loc357 = loc(fused[#loc232, #loc233])
#loc358 = loc(fused[#loc237, #loc233])
#loc359 = loc(fused[#loc239, #loc238])
#loc360 = loc(fused[#loc240, #loc241])
#loc361 = loc(fused[#loc245, #loc241])
#loc362 = loc(fused[#loc247, #loc246])
#loc363 = loc(fused[#loc248, #loc249])
#loc364 = loc(fused[#loc254, #loc249])
#loc365 = loc(fused[#loc257, #loc258])
#loc366 = loc(fused[#loc263, #loc258])
