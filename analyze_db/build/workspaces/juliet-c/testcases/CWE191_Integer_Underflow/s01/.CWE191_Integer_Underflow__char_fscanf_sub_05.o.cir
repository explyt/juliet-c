!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_sub_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc165)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc166)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printHexCharLine(!s8i) loc(#loc168)
  cir.func no_proto @CWE191_Integer_Underflow__char_fscanf_sub_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc170)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc14)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc14)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc171)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc165)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc18)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc20)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc20)
      } loc(#loc173)
    } loc(#loc172)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc165)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc24)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc177)
          %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc30)
          %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc30)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc29)
          %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc30)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc30)
          cir.store %11, %6 : !s8i, !cir.ptr<!s8i> loc(#loc177)
          %12 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc31)
          cir.call @printHexCharLine(%12) : (!s8i) -> () loc(#loc32)
        } loc(#loc176)
      } loc(#loc175)
    } loc(#loc174)
    cir.return loc(#loc11)
  } loc(#loc169)
  cir.func no_proto @CWE191_Integer_Underflow__char_fscanf_sub_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc179)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc180)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc181)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc182)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc34)
  } loc(#loc178)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc183)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc186)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc53)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc53)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc187)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc165)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc57)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc57)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc59)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc60)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc61)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc61)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc59)
      } loc(#loc189)
    } loc(#loc188)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc183)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc64)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc64)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc71)
          %7 = cir.cast(integral, %6 : !s8i), !s32i loc(#loc71)
          %8 = cir.const #cir.int<127> : !s32i loc(#loc72)
          %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc72)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc72)
          %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc72)
          %12 = cir.cmp(gt, %7, %11) : !s32i, !cir.bool loc(#loc193)
          cir.if %12 {
            %13 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc195)
            %14 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc78)
            %15 = cir.cast(integral, %14 : !s8i), !s32i loc(#loc78)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc77)
            %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc78)
            %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc78)
            cir.store %18, %13 : !s8i, !cir.ptr<!s8i> loc(#loc195)
            %19 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc79)
            cir.call @printHexCharLine(%19) : (!s8i) -> () loc(#loc80)
          } else {
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc48)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc48)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc81)
          } loc(#loc194)
        } loc(#loc192)
      } loc(#loc191)
    } loc(#loc190)
    cir.return loc(#loc50)
  } loc(#loc185)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc197)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc86)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc86)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc165)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc90)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc92)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc94)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc94)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc92)
      } loc(#loc200)
    } loc(#loc199)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc165)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc97)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc101)
          %7 = cir.cast(integral, %6 : !s8i), !s32i loc(#loc101)
          %8 = cir.const #cir.int<127> : !s32i loc(#loc102)
          %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc102)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc102)
          %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc102)
          %12 = cir.cmp(gt, %7, %11) : !s32i, !cir.bool loc(#loc204)
          cir.if %12 {
            %13 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc206)
            %14 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc108)
            %15 = cir.cast(integral, %14 : !s8i), !s32i loc(#loc108)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc107)
            %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc108)
            %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc108)
            cir.store %18, %13 : !s8i, !cir.ptr<!s8i> loc(#loc206)
            %19 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc109)
            cir.call @printHexCharLine(%19) : (!s8i) -> () loc(#loc110)
          } else {
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc111)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc111)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc112)
          } loc(#loc205)
        } loc(#loc203)
      } loc(#loc202)
    } loc(#loc201)
    cir.return loc(#loc83)
  } loc(#loc196)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc208)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc117)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc117)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc209)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc183)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc121)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc125)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc125)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc126)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc127)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc128)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc128)
        cir.store %8, %0 : !s8i, !cir.ptr<!s8i> loc(#loc212)
      } loc(#loc211)
    } loc(#loc210)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc165)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc132)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc132)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc216)
          %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc138)
          %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc138)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc137)
          %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc138)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc138)
          cir.store %11, %6 : !s8i, !cir.ptr<!s8i> loc(#loc216)
          %12 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc139)
          cir.call @printHexCharLine(%12) : (!s8i) -> () loc(#loc140)
        } loc(#loc215)
      } loc(#loc214)
    } loc(#loc213)
    cir.return loc(#loc114)
  } loc(#loc207)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc218)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc145)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc145)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc219)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc165)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc149)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc149)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc151)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc152)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc152)
        cir.store %8, %0 : !s8i, !cir.ptr<!s8i> loc(#loc222)
      } loc(#loc221)
    } loc(#loc220)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc165)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc156)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc156)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc226)
          %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc162)
          %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc162)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc161)
          %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc162)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc162)
          cir.store %11, %6 : !s8i, !cir.ptr<!s8i> loc(#loc226)
          %12 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc163)
          cir.call @printHexCharLine(%12) : (!s8i) -> () loc(#loc164)
        } loc(#loc225)
      } loc(#loc224)
    } loc(#loc223)
    cir.return loc(#loc142)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_sub_05.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":23:1)
#loc2 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":23:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":35:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc10 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":28:1)
#loc11 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":45:1)
#loc12 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":30:5)
#loc13 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":30:10)
#loc14 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":31:12)
#loc15 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":31:5)
#loc16 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":32:5)
#loc17 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":36:5)
#loc18 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":32:8)
#loc19 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":33:5)
#loc20 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":35:9)
#loc21 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":35:17)
#loc22 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":37:5)
#loc23 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":44:5)
#loc24 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":37:8)
#loc25 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":38:5)
#loc26 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":39:9)
#loc27 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":43:9)
#loc28 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":41:13)
#loc29 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":41:34)
#loc30 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":41:27)
#loc31 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":42:30)
#loc32 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":42:13)
#loc33 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":151:1)
#loc34 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":157:1)
#loc35 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":153:5)
#loc36 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":153:14)
#loc37 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":154:5)
#loc38 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":154:14)
#loc39 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":155:5)
#loc40 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":155:14)
#loc41 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":156:5)
#loc42 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":156:14)
#loc43 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":24:1)
#loc44 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":24:26)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":64:19)
#loc48 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":76:23)
#loc49 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":52:1)
#loc50 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":79:1)
#loc51 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":54:5)
#loc52 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":54:10)
#loc53 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":55:12)
#loc54 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":55:5)
#loc55 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":56:5)
#loc56 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":60:5)
#loc57 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":56:8)
#loc58 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":57:5)
#loc59 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":59:9)
#loc60 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":59:17)
#loc61 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":59:24)
#loc62 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":61:5)
#loc63 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":78:5)
#loc64 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":61:8)
#loc65 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":62:5)
#loc66 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":65:5)
#loc67 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":67:5)
#loc68 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":64:9)
#loc69 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":69:9)
#loc70 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":77:9)
#loc71 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":69:13)
#loc72 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":69:20)
#loc73 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":70:9)
#loc74 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":73:9)
#loc75 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":75:9)
#loc76 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":71:13)
#loc77 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":71:34)
#loc78 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":71:27)
#loc79 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":72:30)
#loc80 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":72:13)
#loc81 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":76:13)
#loc82 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":82:1)
#loc83 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":104:1)
#loc84 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":84:5)
#loc85 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":84:10)
#loc86 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":85:12)
#loc87 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":85:5)
#loc88 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":86:5)
#loc89 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":90:5)
#loc90 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":86:8)
#loc91 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":87:5)
#loc92 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":89:9)
#loc93 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":89:17)
#loc94 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":89:24)
#loc95 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":91:5)
#loc96 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":103:5)
#loc97 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":91:8)
#loc98 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":92:5)
#loc99 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":94:9)
#loc100 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":102:9)
#loc101 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":94:13)
#loc102 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":94:20)
#loc103 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":95:9)
#loc104 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":98:9)
#loc105 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":100:9)
#loc106 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":96:13)
#loc107 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":96:34)
#loc108 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":96:27)
#loc109 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":97:30)
#loc110 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":97:13)
#loc111 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":101:23)
#loc112 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":101:13)
#loc113 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":107:1)
#loc114 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":129:1)
#loc115 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":109:5)
#loc116 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":109:10)
#loc117 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":110:12)
#loc118 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":110:5)
#loc119 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":111:5)
#loc120 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":120:5)
#loc121 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":111:8)
#loc122 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":112:5)
#loc123 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":115:5)
#loc124 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":117:5)
#loc125 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":114:19)
#loc126 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":114:9)
#loc127 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":119:17)
#loc128 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":119:16)
#loc129 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":119:9)
#loc130 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":121:5)
#loc131 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":128:5)
#loc132 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":121:8)
#loc133 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":122:5)
#loc134 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":123:9)
#loc135 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":127:9)
#loc136 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":125:13)
#loc137 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":125:34)
#loc138 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":125:27)
#loc139 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":126:30)
#loc140 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":126:13)
#loc141 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":132:1)
#loc142 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":149:1)
#loc143 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":134:5)
#loc144 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":134:10)
#loc145 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":135:12)
#loc146 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":135:5)
#loc147 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":136:5)
#loc148 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":140:5)
#loc149 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":136:8)
#loc150 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":137:5)
#loc151 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":139:17)
#loc152 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":139:16)
#loc153 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":139:9)
#loc154 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":141:5)
#loc155 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":148:5)
#loc156 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":141:8)
#loc157 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":142:5)
#loc158 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":143:9)
#loc159 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":147:9)
#loc160 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":145:13)
#loc161 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":145:34)
#loc162 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":145:27)
#loc163 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":146:30)
#loc164 = loc("CWE191_Integer_Underflow__char_fscanf_sub_05.c":146:13)
#loc165 = loc(fused[#loc1, #loc2])
#loc166 = loc(fused[#loc3, #loc4])
#loc167 = loc(fused[#loc5, #loc6])
#loc168 = loc(fused[#loc8, #loc9])
#loc169 = loc(fused[#loc10, #loc11])
#loc170 = loc(fused[#loc12, #loc13])
#loc171 = loc(fused[#loc15, #loc14])
#loc172 = loc(fused[#loc16, #loc17])
#loc173 = loc(fused[#loc19, #loc17])
#loc174 = loc(fused[#loc22, #loc23])
#loc175 = loc(fused[#loc25, #loc23])
#loc176 = loc(fused[#loc26, #loc27])
#loc177 = loc(fused[#loc28, #loc29])
#loc178 = loc(fused[#loc33, #loc34])
#loc179 = loc(fused[#loc35, #loc36])
#loc180 = loc(fused[#loc37, #loc38])
#loc181 = loc(fused[#loc39, #loc40])
#loc182 = loc(fused[#loc41, #loc42])
#loc183 = loc(fused[#loc43, #loc44])
#loc184 = loc(fused[#loc45, #loc46])
#loc185 = loc(fused[#loc49, #loc50])
#loc186 = loc(fused[#loc51, #loc52])
#loc187 = loc(fused[#loc54, #loc53])
#loc188 = loc(fused[#loc55, #loc56])
#loc189 = loc(fused[#loc58, #loc56])
#loc190 = loc(fused[#loc62, #loc63])
#loc191 = loc(fused[#loc65, #loc66, #loc67, #loc63])
#loc192 = loc(fused[#loc69, #loc70])
#loc193 = loc(fused[#loc71, #loc72])
#loc194 = loc(fused[#loc73, #loc74, #loc75, #loc70])
#loc195 = loc(fused[#loc76, #loc77])
#loc196 = loc(fused[#loc82, #loc83])
#loc197 = loc(fused[#loc84, #loc85])
#loc198 = loc(fused[#loc87, #loc86])
#loc199 = loc(fused[#loc88, #loc89])
#loc200 = loc(fused[#loc91, #loc89])
#loc201 = loc(fused[#loc95, #loc96])
#loc202 = loc(fused[#loc98, #loc96])
#loc203 = loc(fused[#loc99, #loc100])
#loc204 = loc(fused[#loc101, #loc102])
#loc205 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc206 = loc(fused[#loc106, #loc107])
#loc207 = loc(fused[#loc113, #loc114])
#loc208 = loc(fused[#loc115, #loc116])
#loc209 = loc(fused[#loc118, #loc117])
#loc210 = loc(fused[#loc119, #loc120])
#loc211 = loc(fused[#loc122, #loc123, #loc124, #loc120])
#loc212 = loc(fused[#loc129, #loc127])
#loc213 = loc(fused[#loc130, #loc131])
#loc214 = loc(fused[#loc133, #loc131])
#loc215 = loc(fused[#loc134, #loc135])
#loc216 = loc(fused[#loc136, #loc137])
#loc217 = loc(fused[#loc141, #loc142])
#loc218 = loc(fused[#loc143, #loc144])
#loc219 = loc(fused[#loc146, #loc145])
#loc220 = loc(fused[#loc147, #loc148])
#loc221 = loc(fused[#loc150, #loc148])
#loc222 = loc(fused[#loc153, #loc151])
#loc223 = loc(fused[#loc154, #loc155])
#loc224 = loc(fused[#loc157, #loc155])
#loc225 = loc(fused[#loc158, #loc159])
#loc226 = loc(fused[#loc160, #loc161])
