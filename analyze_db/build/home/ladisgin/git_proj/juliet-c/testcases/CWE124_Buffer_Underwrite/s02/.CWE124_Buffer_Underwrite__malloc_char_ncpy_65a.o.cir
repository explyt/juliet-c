!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE124_Buffer_Underwrite__malloc_char_ncpy_65b_badSink(!cir.ptr<!s8i>) loc(#loc93)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc95)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_ncpy_65_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc98)
    %2 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc99)
    %3 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_ncpy_65b_badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc14)
    cir.store %3, %2 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc99)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc20)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc102)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc103)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    cir.br ^bb2 loc(#loc105)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc106)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc107)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc30)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc32)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc33)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc33)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc108)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc37)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc39)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc109)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %34 = cir.const #cir.int<8> : !s32i loc(#loc43)
    %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc43)
    %36 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %36, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc46)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    cir.call %37(%38) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc46)
    cir.return loc(#loc8)
  } loc(#loc96)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_ncpy_65_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc112)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc111)
  cir.func private @CWE124_Buffer_Underwrite__malloc_char_ncpy_65b_goodG2BSink(!cir.ptr<!s8i>) loc(#loc113)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc117)
    %3 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_ncpy_65b_goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc61)
    cir.store %3, %2 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc117)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc62)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    cir.br ^bb1 loc(#loc119)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc66)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc67)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc120)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc121)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.br ^bb2 loc(#loc123)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc73)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc73)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc124)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc125)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc75)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc77)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
    cir.br ^bb4 loc(#loc71)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc71)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc79)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc80)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc80)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc126)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc84)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc86)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc88)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc127)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    cir.store %33, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    cir.br ^bb6 loc(#loc65)
  ^bb6:  // pred: ^bb5
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc91)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.call %34(%35) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc91)
    cir.return loc(#loc55)
  } loc(#loc114)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":24:1)
#loc2 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":24:72)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":26:1)
#loc8 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":42:1)
#loc9 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":33:9)
#loc10 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":33:60)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":28:5)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":28:12)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":30:5)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":30:32)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":31:12)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":31:5)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":32:5)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":39:5)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":33:37)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":33:44)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":33:48)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":33:59)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":34:9)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":34:43)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":34:13)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":34:27)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":34:33)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":34:34)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":34:40)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":34:39)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":35:16)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":35:28)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":35:33)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":35:37)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":35:9)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":35:38)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":36:29)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":36:9)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":36:20)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":36:24)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":36:25)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":38:16)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":38:29)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":38:27)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":38:9)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":41:5)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":41:13)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":67:1)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":70:1)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":69:5)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":69:13)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":49:1)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":49:76)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":51:1)
#loc55 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":65:1)
#loc56 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":57:9)
#loc57 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":57:60)
#loc58 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":53:5)
#loc59 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":53:12)
#loc60 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":54:5)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":54:32)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":55:12)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":55:5)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":56:5)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":63:5)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":57:37)
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":57:44)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":57:48)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":57:59)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":58:9)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":58:43)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":58:13)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":58:27)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":58:33)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":58:34)
#loc76 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":58:40)
#loc77 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":58:39)
#loc78 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":59:16)
#loc79 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":59:28)
#loc80 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":59:33)
#loc81 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":59:37)
#loc82 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":59:9)
#loc83 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":59:38)
#loc84 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":60:29)
#loc85 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":60:9)
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":60:20)
#loc87 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":60:24)
#loc88 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":60:25)
#loc89 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":62:16)
#loc90 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":62:9)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":64:5)
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_65a.c":64:13)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc5, #loc6])
#loc96 = loc(fused[#loc7, #loc8])
#loc97 = loc(fused[#loc9, #loc10])
#loc98 = loc(fused[#loc11, #loc12])
#loc99 = loc(fused[#loc13, #loc14])
#loc100 = loc(fused[#loc16, #loc15])
#loc101 = loc(fused[#loc17, #loc18])
#loc102 = loc(fused[#loc21, #loc22])
#loc103 = loc(fused[#loc20, #loc22])
#loc104 = loc(fused[#loc19, #loc10])
#loc105 = loc(fused[#loc23, #loc24])
#loc106 = loc(fused[#loc25, #loc26])
#loc107 = loc(fused[#loc27, #loc24])
#loc108 = loc(fused[#loc35, #loc36])
#loc109 = loc(fused[#loc38, #loc37])
#loc110 = loc(fused[#loc45, #loc43])
#loc111 = loc(fused[#loc48, #loc49])
#loc112 = loc(fused[#loc50, #loc51])
#loc113 = loc(fused[#loc52, #loc53])
#loc114 = loc(fused[#loc54, #loc55])
#loc115 = loc(fused[#loc56, #loc57])
#loc116 = loc(fused[#loc58, #loc59])
#loc117 = loc(fused[#loc60, #loc61])
#loc118 = loc(fused[#loc63, #loc62])
#loc119 = loc(fused[#loc64, #loc65])
#loc120 = loc(fused[#loc68, #loc69])
#loc121 = loc(fused[#loc67, #loc69])
#loc122 = loc(fused[#loc66, #loc57])
#loc123 = loc(fused[#loc70, #loc71])
#loc124 = loc(fused[#loc72, #loc73])
#loc125 = loc(fused[#loc74, #loc71])
#loc126 = loc(fused[#loc82, #loc83])
#loc127 = loc(fused[#loc85, #loc84])
#loc128 = loc(fused[#loc90, #loc89])
