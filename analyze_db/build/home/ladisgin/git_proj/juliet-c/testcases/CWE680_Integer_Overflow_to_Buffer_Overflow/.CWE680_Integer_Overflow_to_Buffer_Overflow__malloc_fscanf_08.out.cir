!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":140:10)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":140:14)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":140:20)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":140:32)
#loc259 = loc(fused[#loc86, #loc87])
#loc260 = loc(fused[#loc88, #loc89])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc224)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc226)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc227)
  cir.func private @printIntLine(!s32i) loc(#loc228)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc229)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc234)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc23)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc26)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc225)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc26)
      } loc(#loc235)
    } loc(#loc233)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc237)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc238)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc34)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc35)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc239)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc240)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc241)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc242)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc43)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc244)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc45)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc47)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
        } loc(#loc245)
      } loc(#loc243)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc50)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc50)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc247)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc52)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc53)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc248)
          cir.condition(%24) loc(#loc54)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc56)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc58)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc59)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc250)
          } loc(#loc249)
          cir.yield loc(#loc49)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc60)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc61)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc251)
          cir.yield loc(#loc246)
        } loc(#loc246)
      } loc(#loc246)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc64)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc65)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc66)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc67)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
    } loc(#loc236)
    cir.return loc(#loc15)
  } loc(#loc230)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    cir.return loc(#loc69)
  } loc(#loc252)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc255)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc256)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc83)
  cir.func @main(%arg0: !s32i loc(fused[#loc86, #loc87]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc88, #loc89])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc260)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc90)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc91)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc92)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc92)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc93)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08_good() : () -> () loc(#loc95)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc81)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc82)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08_bad() : () -> () loc(#loc99)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc83)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc102)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    cir.return %17 : !s32i loc(#loc263)
  } loc(#loc258)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc106)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    cir.return %2 : !s32i loc(#loc265)
  } loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc108)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc114)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc270)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc118)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc118)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc108)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc108)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc123)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc124)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
      } loc(#loc271)
    } loc(#loc269)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc274)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc275)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc132)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc133)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc276)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc277)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc278)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc279)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc141)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc281)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc144)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc145)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc143)
        } loc(#loc282)
      } loc(#loc280)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc148)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc148)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc284)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc150)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc151)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc285)
          cir.condition(%24) loc(#loc152)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc154)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc156)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc157)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc287)
          } loc(#loc286)
          cir.yield loc(#loc147)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc158)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc159)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc288)
          cir.yield loc(#loc283)
        } loc(#loc283)
      } loc(#loc283)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc161)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc162)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc160)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc163)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc164)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc165)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc164)
    } loc(#loc273)
    cir.return loc(#loc110)
  } loc(#loc266)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc168)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    cir.return %2 : !s32i loc(#loc290)
  } loc(#loc289)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc292)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc175)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc295)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc179)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc179)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc182)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc297)
      } loc(#loc296)
    } loc(#loc294)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc299)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc300)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc190)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc191)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc301)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc302)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc303)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc304)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc198)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc199)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc199)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc306)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc201)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc202)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc203)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc201)
        } loc(#loc307)
      } loc(#loc305)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc206)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc206)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc309)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc208)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc209)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc310)
          cir.condition(%24) loc(#loc210)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc212)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc214)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc215)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc312)
          } loc(#loc311)
          cir.yield loc(#loc205)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc216)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc217)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc313)
          cir.yield loc(#loc308)
        } loc(#loc308)
      } loc(#loc308)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc219)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc220)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc218)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc221)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc222)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc223)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc222)
    } loc(#loc298)
    cir.return loc(#loc171)
  } loc(#loc291)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":43:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":35:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":59:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":37:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":37:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":39:13)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":39:12)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":39:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":40:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":44:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":40:8)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":40:26)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":41:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":43:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":43:16)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":45:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":58:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":46:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":46:16)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":47:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":47:14)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":50:28)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":50:35)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":50:42)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":50:52)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":50:53)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":50:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":51:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":51:43)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":51:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":51:27)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":51:33)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":51:34)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":51:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":51:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":52:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":55:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":52:18)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":52:14)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":52:21)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":52:33)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":52:23)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":53:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":54:29)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":54:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":54:24)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":54:25)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":52:40)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":52:39)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":56:22)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":56:33)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":56:34)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":56:9)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":57:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":57:14)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":124:1)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":128:1)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":126:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":126:14)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":127:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":127:14)
#loc74 = loc("/usr/include/stdlib.h":575:1)
#loc75 = loc("/usr/include/stdlib.h":575:41)
#loc76 = loc("/usr/include/time.h":76:1)
#loc77 = loc("/usr/include/time.h":76:38)
#loc78 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc79 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":145:15)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":147:15)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":150:15)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":152:15)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":140:1)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":155:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":141:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":143:27)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":143:22)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":143:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":145:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":146:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":146:71)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":147:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":150:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":151:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":151:70)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":152:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":154:12)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":154:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":23:1)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":26:1)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":25:12)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":25:5)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":74:19)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":66:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":95:1)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":68:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":68:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":70:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":70:12)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":70:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":71:5)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":80:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":71:8)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":71:27)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":72:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":75:5)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":77:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":74:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":79:16)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":79:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":81:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":94:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":82:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":82:16)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":83:9)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":83:14)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":86:28)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":86:35)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":86:42)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":86:52)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":86:53)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":86:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":87:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":87:43)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":87:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":87:27)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":87:33)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":87:34)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":87:40)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":87:39)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":88:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":91:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":88:18)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":88:14)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":88:21)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":88:33)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":88:23)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":89:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":90:29)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":90:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":90:24)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":90:25)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":88:40)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":88:39)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":92:22)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":92:33)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":92:34)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":92:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":93:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":93:14)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":28:1)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":31:1)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":30:12)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":30:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":98:1)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":122:1)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":100:5)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":100:9)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":102:13)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":102:12)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":102:5)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":103:5)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":107:5)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":103:8)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":103:26)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":104:5)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":106:16)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":106:9)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":108:5)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":121:5)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":109:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":109:16)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":110:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":110:14)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":113:28)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":113:35)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":113:42)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":113:52)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":113:53)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":113:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":114:9)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":114:43)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":114:13)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":114:27)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":114:33)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":114:34)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":114:40)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":114:39)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":115:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":118:9)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":115:18)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":115:14)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":115:21)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":115:33)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":115:23)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":116:9)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":117:29)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":117:13)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":117:24)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":117:25)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":115:40)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":115:39)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":119:22)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":119:33)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":119:34)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":119:9)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":120:9)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_08.c":120:14)
#loc224 = loc(fused[#loc1, #loc2])
#loc225 = loc(fused[#loc3, #loc4])
#loc226 = loc(fused[#loc6, #loc7])
#loc227 = loc(fused[#loc8, #loc9])
#loc228 = loc(fused[#loc10, #loc11])
#loc229 = loc(fused[#loc12, #loc13])
#loc230 = loc(fused[#loc14, #loc15])
#loc231 = loc(fused[#loc16, #loc17])
#loc232 = loc(fused[#loc20, #loc18])
#loc233 = loc(fused[#loc21, #loc22])
#loc234 = loc(fused[#loc23, #loc24])
#loc235 = loc(fused[#loc25, #loc22])
#loc236 = loc(fused[#loc28, #loc29])
#loc237 = loc(fused[#loc30, #loc31])
#loc238 = loc(fused[#loc32, #loc33])
#loc239 = loc(fused[#loc36, #loc37])
#loc240 = loc(fused[#loc35, #loc37])
#loc241 = loc(fused[#loc34, #loc38])
#loc242 = loc(fused[#loc39, #loc38])
#loc243 = loc(fused[#loc40, #loc41])
#loc244 = loc(fused[#loc42, #loc43])
#loc245 = loc(fused[#loc44, #loc41])
#loc246 = loc(fused[#loc48, #loc49])
#loc247 = loc(fused[#loc51, #loc50])
#loc248 = loc(fused[#loc52, #loc53])
#loc249 = loc(fused[#loc55, #loc49])
#loc250 = loc(fused[#loc57, #loc56])
#loc251 = loc(fused[#loc61, #loc60])
#loc252 = loc(fused[#loc68, #loc69])
#loc253 = loc(fused[#loc70, #loc71])
#loc254 = loc(fused[#loc72, #loc73])
#loc255 = loc(fused[#loc74, #loc75])
#loc256 = loc(fused[#loc76, #loc77])
#loc257 = loc(fused[#loc78, #loc79])
#loc258 = loc(fused[#loc84, #loc85])
#loc261 = loc(fused[#loc95, #loc96])
#loc262 = loc(fused[#loc99, #loc100])
#loc263 = loc(fused[#loc103, #loc102])
#loc264 = loc(fused[#loc104, #loc105])
#loc265 = loc(fused[#loc107, #loc106])
#loc266 = loc(fused[#loc109, #loc110])
#loc267 = loc(fused[#loc111, #loc112])
#loc268 = loc(fused[#loc115, #loc113])
#loc269 = loc(fused[#loc116, #loc117])
#loc270 = loc(fused[#loc118, #loc119])
#loc271 = loc(fused[#loc120, #loc121, #loc122, #loc117])
#loc272 = loc(fused[#loc125, #loc124])
#loc273 = loc(fused[#loc126, #loc127])
#loc274 = loc(fused[#loc128, #loc129])
#loc275 = loc(fused[#loc130, #loc131])
#loc276 = loc(fused[#loc134, #loc135])
#loc277 = loc(fused[#loc133, #loc135])
#loc278 = loc(fused[#loc132, #loc136])
#loc279 = loc(fused[#loc137, #loc136])
#loc280 = loc(fused[#loc138, #loc139])
#loc281 = loc(fused[#loc140, #loc141])
#loc282 = loc(fused[#loc142, #loc139])
#loc283 = loc(fused[#loc146, #loc147])
#loc284 = loc(fused[#loc149, #loc148])
#loc285 = loc(fused[#loc150, #loc151])
#loc286 = loc(fused[#loc153, #loc147])
#loc287 = loc(fused[#loc155, #loc154])
#loc288 = loc(fused[#loc159, #loc158])
#loc289 = loc(fused[#loc166, #loc167])
#loc290 = loc(fused[#loc169, #loc168])
#loc291 = loc(fused[#loc170, #loc171])
#loc292 = loc(fused[#loc172, #loc173])
#loc293 = loc(fused[#loc176, #loc174])
#loc294 = loc(fused[#loc177, #loc178])
#loc295 = loc(fused[#loc179, #loc180])
#loc296 = loc(fused[#loc181, #loc178])
#loc297 = loc(fused[#loc183, #loc182])
#loc298 = loc(fused[#loc184, #loc185])
#loc299 = loc(fused[#loc186, #loc187])
#loc300 = loc(fused[#loc188, #loc189])
#loc301 = loc(fused[#loc192, #loc193])
#loc302 = loc(fused[#loc191, #loc193])
#loc303 = loc(fused[#loc190, #loc194])
#loc304 = loc(fused[#loc195, #loc194])
#loc305 = loc(fused[#loc196, #loc197])
#loc306 = loc(fused[#loc198, #loc199])
#loc307 = loc(fused[#loc200, #loc197])
#loc308 = loc(fused[#loc204, #loc205])
#loc309 = loc(fused[#loc207, #loc206])
#loc310 = loc(fused[#loc208, #loc209])
#loc311 = loc(fused[#loc211, #loc205])
#loc312 = loc(fused[#loc213, #loc212])
#loc313 = loc(fused[#loc217, #loc216])
