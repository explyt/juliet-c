!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":29:16)
module @"/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc152)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc153)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc154)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc14)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc20)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc20)
  ^bb3:  // pred: ^bb2
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc20)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc20)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc20)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc20)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc20)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc20)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc20)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc20)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc20)
    cir.br ^bb5(%22 : !u32i) loc(#loc20)
  ^bb4:  // pred: ^bb2
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc20)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc20)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc20)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc20)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc20)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc20)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc20)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc20)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc20)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc20)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc20)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc20)
    cir.br ^bb5(%38 : !u32i) loc(#loc20)
  ^bb5(%39: !u32i loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":29:16)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc20)
    cir.store %40, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc17)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc159)
  ^bb9:  // pred: ^bb8
    %41 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc153)
    cir.store %41, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc153)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %44 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc26)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %48 bytes from %43 set to %44 : !cir.ptr<!void>, !s32i, !u64i loc(#loc160)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %50 = cir.cast(integral, %49 : !s32i), !s8i loc(#loc30)
    %51 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc31)
    %54 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %50, %55 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    cir.br ^bb10 loc(#loc162)
  ^bb10:  // pred: ^bb9
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %57 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %58 = cir.cmp(lt, %56, %57) : !s32i, !cir.bool loc(#loc163)
    cir.brcond %58 ^bb11, ^bb12 loc(#loc164)
  ^bb11:  // pred: ^bb10
    %59 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
    %63 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc41)
    cir.libc.memmove %64 bytes from %62 to %60 : !cir.ptr<!void>, !u64i loc(#loc165)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc44)
    %67 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %68 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %69 = cir.ptr_stride(%68 : !cir.ptr<!s8i>, %67 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %66, %69 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    cir.br ^bb12 loc(#loc35)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc35)
  ^bb13:  // pred: ^bb12
    %70 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb14 loc(#loc23)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc6)
  } loc(#loc151)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc168)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc169)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc171)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc172)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc173)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc65)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    cir.br ^bb4 loc(#loc71)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc74)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb4 loc(#loc68)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc68)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc178)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc172)
    cir.store %12, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc172)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    %15 = cir.const #cir.int<65> : !s32i loc(#loc80)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc81)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc81)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc85)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc86)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc88)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc180)
    cir.br ^bb7 loc(#loc181)
  ^bb7:  // pred: ^bb6
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc182)
    cir.brcond %29 ^bb8, ^bb9 loc(#loc183)
  ^bb8:  // pred: ^bb7
    %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc96)
    cir.libc.memmove %35 bytes from %33 to %31 : !cir.ptr<!void>, !u64i loc(#loc184)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc99)
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %39 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc101)
    cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc185)
    cir.br ^bb9 loc(#loc90)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc90)
  ^bb10:  // pred: ^bb9
    %41 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    cir.br ^bb11 loc(#loc78)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc57)
  } loc(#loc170)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc187)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc188)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc113)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    cir.br ^bb1 loc(#loc191)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc117)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc192)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<100> : !s32i loc(#loc119)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc119)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb3 loc(#loc116)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc116)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc188)
    cir.store %10, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc188)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc125)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc126)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc126)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc126)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc195)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc130)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc131)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    cir.br ^bb6 loc(#loc197)
  ^bb6:  // pred: ^bb5
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc137)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc198)
    cir.brcond %27 ^bb7, ^bb8 loc(#loc199)
  ^bb7:  // pred: ^bb6
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc141)
    cir.libc.memmove %33 bytes from %31 to %29 : !cir.ptr<!void>, !u64i loc(#loc200)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc144)
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc146)
    cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb8 loc(#loc135)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc135)
  ^bb9:  // pred: ^bb8
    %39 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb10 loc(#loc123)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc105)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":21:1)
#loc6 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":45:1)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":32:9)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":32:24)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":33:9)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":33:26)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":23:5)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":23:9)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":25:13)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":25:12)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":25:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":26:5)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":30:5)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":26:8)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":27:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":29:9)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":31:5)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":44:5)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":34:16)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":34:24)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":34:29)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":34:33)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":34:9)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":34:34)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":35:25)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":35:16)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":35:20)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":35:9)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":36:9)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":42:9)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":36:13)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":36:20)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":37:9)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":40:21)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":40:27)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":40:35)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":40:13)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":40:39)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":41:26)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":41:18)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":41:13)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":43:19)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":43:9)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":110:1)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":114:1)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":112:5)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":112:14)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":113:5)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":113:14)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":60:19)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":52:1)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":81:1)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":68:9)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":68:24)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":69:9)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":69:26)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":54:5)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":54:9)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":56:13)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":56:12)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":56:5)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":57:5)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":66:5)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":57:8)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":58:5)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":61:5)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":63:5)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":60:9)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":65:16)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":65:20)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":65:9)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":67:5)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":80:5)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":70:16)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":70:24)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":70:29)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":70:33)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":70:9)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":70:34)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":71:25)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":71:16)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":71:20)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":71:9)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":72:9)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":78:9)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":72:13)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":72:20)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":73:9)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":76:21)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":76:27)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":76:35)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":76:13)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":76:39)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":77:26)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":77:18)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":77:13)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":79:19)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":79:9)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":84:1)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":108:1)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":95:9)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":95:24)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":96:9)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":96:26)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":86:5)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":86:9)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":88:13)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":88:12)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":88:5)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":89:5)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":93:5)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":89:8)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":90:5)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":92:16)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":92:20)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":92:9)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":94:5)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":107:5)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":97:16)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":97:24)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":97:29)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":97:33)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":97:9)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":97:34)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":98:25)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":98:16)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":98:20)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":98:9)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":99:9)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":105:9)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":99:13)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":99:20)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":100:9)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":103:21)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":103:27)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":103:35)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":103:13)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":103:39)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":104:26)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":104:18)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":104:13)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":106:19)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_02.c":106:9)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc11, #loc12])
#loc155 = loc(fused[#loc15, #loc13])
#loc156 = loc(fused[#loc16, #loc17])
#loc157 = loc(fused[#loc19, #loc17])
#loc158 = loc(fused[#loc21, #loc20])
#loc159 = loc(fused[#loc22, #loc23])
#loc160 = loc(fused[#loc28, #loc29])
#loc161 = loc(fused[#loc33, #loc30])
#loc162 = loc(fused[#loc34, #loc35])
#loc163 = loc(fused[#loc36, #loc37])
#loc164 = loc(fused[#loc38, #loc35])
#loc165 = loc(fused[#loc42, #loc43])
#loc166 = loc(fused[#loc46, #loc44])
#loc167 = loc(fused[#loc49, #loc50])
#loc168 = loc(fused[#loc51, #loc52])
#loc169 = loc(fused[#loc53, #loc54])
#loc170 = loc(fused[#loc56, #loc57])
#loc171 = loc(fused[#loc58, #loc59])
#loc172 = loc(fused[#loc60, #loc61])
#loc173 = loc(fused[#loc62, #loc63])
#loc174 = loc(fused[#loc66, #loc64])
#loc175 = loc(fused[#loc67, #loc68])
#loc176 = loc(fused[#loc70, #loc71, #loc72, #loc68])
#loc177 = loc(fused[#loc76, #loc75])
#loc178 = loc(fused[#loc77, #loc78])
#loc179 = loc(fused[#loc83, #loc84])
#loc180 = loc(fused[#loc88, #loc85])
#loc181 = loc(fused[#loc89, #loc90])
#loc182 = loc(fused[#loc91, #loc92])
#loc183 = loc(fused[#loc93, #loc90])
#loc184 = loc(fused[#loc97, #loc98])
#loc185 = loc(fused[#loc101, #loc99])
#loc186 = loc(fused[#loc104, #loc105])
#loc187 = loc(fused[#loc106, #loc107])
#loc188 = loc(fused[#loc108, #loc109])
#loc189 = loc(fused[#loc110, #loc111])
#loc190 = loc(fused[#loc114, #loc112])
#loc191 = loc(fused[#loc115, #loc116])
#loc192 = loc(fused[#loc118, #loc116])
#loc193 = loc(fused[#loc121, #loc120])
#loc194 = loc(fused[#loc122, #loc123])
#loc195 = loc(fused[#loc128, #loc129])
#loc196 = loc(fused[#loc133, #loc130])
#loc197 = loc(fused[#loc134, #loc135])
#loc198 = loc(fused[#loc136, #loc137])
#loc199 = loc(fused[#loc138, #loc135])
#loc200 = loc(fused[#loc142, #loc143])
#loc201 = loc(fused[#loc146, #loc144])
