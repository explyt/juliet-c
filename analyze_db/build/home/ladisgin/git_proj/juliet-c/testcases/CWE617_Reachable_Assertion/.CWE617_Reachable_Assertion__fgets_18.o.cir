!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fgets_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc56)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc57)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc58)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @__assert_fail(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) extra(#fn_attr) loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data > ASSERT_VALUE\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc12)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"CWE617_Reachable_Assertion__fgets_18.c\00" : !cir.array<!s8i x 39>> : !cir.array<!s8i x 39> {alignment = 1 : i64} loc(#loc12)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"void CWE617_Reachable_Assertion__fgets_18_bad()\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE617_Reachable_Assertion__fgets_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc62)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc63)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc20)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.br ^bb1 loc(#loc65)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc63)
    cir.store %4, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc63)
    cir.br ^bb2 loc(#loc66)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc26)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc27)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc27)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc27)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc27)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc27)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc27)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc57)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc67)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc68)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc35)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    cir.br ^bb5 loc(#loc32)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc12)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc12)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    %25 = cir.const #cir.int<5> : !s32i loc(#loc12)
    %26 = cir.cmp(gt, %24, %25) : !s32i, !cir.bool loc(#loc12)
    cir.brcond %26 ^bb9, ^bb10 loc(#loc12)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11 loc(#loc12)
  ^bb10:  // pred: ^bb8
    %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc12)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc12)
    %29 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 39>> loc(#loc12)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 39>>), !cir.ptr<!s8i> loc(#loc12)
    %31 = cir.const #cir.int<48> : !s32i loc(#loc12)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc12)
    %33 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc12)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @__assert_fail(%28, %30, %32, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc12)
    cir.br ^bb11 loc(#loc12)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc12)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc12)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc14)
  } loc(#loc61)
  cir.func no_proto @CWE617_Reachable_Assertion__fgets_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc71)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"void goodG2B()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc43)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc73)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc49)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.br ^bb1 loc(#loc75)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc53)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc53)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc43)
    cir.br ^bb2 loc(#loc43)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc43)
  ^bb3:  // pred: ^bb2
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc43)
    %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc43)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc43)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc43)
  ^bb5:  // pred: ^bb3
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc43)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc43)
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 39>> loc(#loc43)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 39>>), !cir.ptr<!s8i> loc(#loc43)
    %14 = cir.const #cir.int<66> : !s32i loc(#loc43)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc43)
    %16 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc43)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @__assert_fail(%11, %13, %15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb6 loc(#loc43)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc43)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc45)
  } loc(#loc72)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fgets_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE617_Reachable_Assertion__fgets_18.c":44:23)
#loc10 = loc("/usr/include/assert.h":67:1)
#loc11 = loc("/usr/include/assert.h":69:43)
#loc12 = loc("CWE617_Reachable_Assertion__fgets_18.c":48:5)
#loc13 = loc("CWE617_Reachable_Assertion__fgets_18.c":27:1)
#loc14 = loc("CWE617_Reachable_Assertion__fgets_18.c":49:1)
#loc15 = loc("CWE617_Reachable_Assertion__fgets_18.c":29:5)
#loc16 = loc("CWE617_Reachable_Assertion__fgets_18.c":29:9)
#loc17 = loc("CWE617_Reachable_Assertion__fgets_18.c":35:9)
#loc18 = loc("CWE617_Reachable_Assertion__fgets_18.c":35:45)
#loc19 = loc("CWE617_Reachable_Assertion__fgets_18.c":31:13)
#loc20 = loc("CWE617_Reachable_Assertion__fgets_18.c":31:12)
#loc21 = loc("CWE617_Reachable_Assertion__fgets_18.c":31:5)
#loc22 = loc("CWE617_Reachable_Assertion__fgets_18.c":32:5)
#loc23 = loc("CWE617_Reachable_Assertion__fgets_18.c":32:10)
#loc24 = loc("CWE617_Reachable_Assertion__fgets_18.c":37:9)
#loc25 = loc("CWE617_Reachable_Assertion__fgets_18.c":45:9)
#loc26 = loc("CWE617_Reachable_Assertion__fgets_18.c":37:19)
#loc27 = loc("CWE617_Reachable_Assertion__fgets_18.c":37:32)
#loc28 = loc("CWE617_Reachable_Assertion__fgets_18.c":37:49)
#loc29 = loc("CWE617_Reachable_Assertion__fgets_18.c":37:13)
#loc30 = loc("CWE617_Reachable_Assertion__fgets_18.c":37:59)
#loc31 = loc("CWE617_Reachable_Assertion__fgets_18.c":38:9)
#loc32 = loc("CWE617_Reachable_Assertion__fgets_18.c":41:9)
#loc33 = loc("CWE617_Reachable_Assertion__fgets_18.c":43:9)
#loc34 = loc("CWE617_Reachable_Assertion__fgets_18.c":40:25)
#loc35 = loc("CWE617_Reachable_Assertion__fgets_18.c":40:20)
#loc36 = loc("CWE617_Reachable_Assertion__fgets_18.c":40:13)
#loc37 = loc("CWE617_Reachable_Assertion__fgets_18.c":40:36)
#loc38 = loc("CWE617_Reachable_Assertion__fgets_18.c":44:13)
#loc39 = loc("CWE617_Reachable_Assertion__fgets_18.c":69:1)
#loc40 = loc("CWE617_Reachable_Assertion__fgets_18.c":72:1)
#loc41 = loc("CWE617_Reachable_Assertion__fgets_18.c":71:5)
#loc42 = loc("CWE617_Reachable_Assertion__fgets_18.c":71:13)
#loc43 = loc("CWE617_Reachable_Assertion__fgets_18.c":66:5)
#loc44 = loc("CWE617_Reachable_Assertion__fgets_18.c":56:1)
#loc45 = loc("CWE617_Reachable_Assertion__fgets_18.c":67:1)
#loc46 = loc("CWE617_Reachable_Assertion__fgets_18.c":58:5)
#loc47 = loc("CWE617_Reachable_Assertion__fgets_18.c":58:9)
#loc48 = loc("CWE617_Reachable_Assertion__fgets_18.c":60:13)
#loc49 = loc("CWE617_Reachable_Assertion__fgets_18.c":60:12)
#loc50 = loc("CWE617_Reachable_Assertion__fgets_18.c":60:5)
#loc51 = loc("CWE617_Reachable_Assertion__fgets_18.c":61:5)
#loc52 = loc("CWE617_Reachable_Assertion__fgets_18.c":61:10)
#loc53 = loc("CWE617_Reachable_Assertion__fgets_18.c":64:12)
#loc54 = loc("CWE617_Reachable_Assertion__fgets_18.c":64:25)
#loc55 = loc("CWE617_Reachable_Assertion__fgets_18.c":64:5)
#loc56 = loc(fused[#loc1, #loc2])
#loc57 = loc(fused[#loc3, #loc4])
#loc58 = loc(fused[#loc5, #loc6])
#loc59 = loc(fused[#loc7, #loc8])
#loc60 = loc(fused[#loc10, #loc11])
#loc61 = loc(fused[#loc13, #loc14])
#loc62 = loc(fused[#loc15, #loc16])
#loc63 = loc(fused[#loc17, #loc18])
#loc64 = loc(fused[#loc21, #loc19])
#loc65 = loc(fused[#loc22, #loc23])
#loc66 = loc(fused[#loc24, #loc25])
#loc67 = loc(fused[#loc29, #loc30])
#loc68 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc69 = loc(fused[#loc36, #loc37])
#loc70 = loc(fused[#loc39, #loc40])
#loc71 = loc(fused[#loc41, #loc42])
#loc72 = loc(fused[#loc44, #loc45])
#loc73 = loc(fused[#loc46, #loc47])
#loc74 = loc(fused[#loc50, #loc48])
#loc75 = loc(fused[#loc51, #loc52])
#loc76 = loc(fused[#loc55, #loc54])
