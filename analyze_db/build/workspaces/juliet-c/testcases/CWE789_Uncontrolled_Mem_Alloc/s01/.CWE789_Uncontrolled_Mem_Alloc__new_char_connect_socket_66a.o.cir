!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc246)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc248)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc249)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc250)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc251)
  cir.func private @close(!s32i) -> !s32i loc(#loc252)
  cir.func private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_667badSinkEPm(!cir.ptr<!u64i>) loc(#loc253)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_663badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc255)
    %1 = cir.alloca !cir.array<!u64i x 5>, !cir.ptr<!cir.array<!u64i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc256)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc24)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc257)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc259)
      %10 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc260)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc261)
      %12 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc262)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc33)
      cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc261)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc40)
            %16 = cir.const #cir.int<1> : !u32i loc(#loc41)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc41)
            %18 = cir.const #cir.int<6> : !u32i loc(#loc42)
            %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc42)
            %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
            cir.store %20, %11 : !s32i, !cir.ptr<!s32i> loc(#loc265)
            cir.scope {
              %61 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc48)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc49)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc49)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc267)
              cir.if %64 {
                cir.break loc(#loc51)
              } loc(#loc268)
            } loc(#loc266)
            %21 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc269)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc54)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc270)
            cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc271)
            %24 = cir.const #cir.int<2> : !s32i loc(#loc59)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc59)
            %26 = cir.get_member %10[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
            cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc272)
            %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc62)
            %30 = cir.get_member %10[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
            %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
            cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc273)
            %32 = cir.const #cir.int<27015> : !s32i loc(#loc67)
            %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc67)
            %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc68)
            %35 = cir.get_member %10[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc274)
            cir.scope {
              %61 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc74)
              %62 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc276)
              %63 = cir.const #cir.int<16> : !u64i loc(#loc277)
              %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc277)
              %65 = cir.call @connect(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc79)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc80)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc80)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc278)
              cir.if %68 {
                cir.break loc(#loc82)
              } loc(#loc279)
            } loc(#loc275)
            %36 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            %37 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc84)
            %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
            %39 = cir.const #cir.int<3> : !s32i loc(#loc85)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc85)
            %41 = cir.const #cir.int<8> : !u64i loc(#loc85)
            %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc85)
            %43 = cir.const #cir.int<2> : !s32i loc(#loc85)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc85)
            %45 = cir.binop(add, %42, %44) : !u64i loc(#loc85)
            %46 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc86)
            %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc280)
            %49 = cir.const #cir.int<0> : !s32i loc(#loc87)
            %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc88)
            %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc88)
            cir.store %51, %9 : !s32i, !cir.ptr<!s32i> loc(#loc281)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc93)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc94)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc94)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc283)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc95)
                cir.yield %66 : !cir.bool loc(#loc95)
              }, false {
                %66 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %67 = cir.const #cir.int<0> : !s32i loc(#loc97)
                %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc284)
                %69 = cir.ternary(%68, true {
                  %70 = cir.const #true loc(#loc95)
                  cir.yield %70 : !cir.bool loc(#loc95)
                }, false {
                  %70 = cir.const #false loc(#loc95)
                  cir.yield %70 : !cir.bool loc(#loc95)
                }) : (!cir.bool) -> !cir.bool loc(#loc95)
                cir.yield %69 : !cir.bool loc(#loc95)
              }) : (!cir.bool) -> !cir.bool loc(#loc95)
              cir.if %65 {
                cir.break loc(#loc99)
              } loc(#loc285)
            } loc(#loc282)
            %52 = cir.const #cir.int<0> : !s8i loc(#loc100)
            %53 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            %54 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc102)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc102)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc286)
            %56 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc103)
            %57 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc104)
            %58 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
            %59 = cir.const #cir.int<0> : !s32i loc(#loc106)
            %60 = cir.call @__isoc23_strtoul(%57, %58, %59) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc103)
            cir.store %60, %0 : !u64i, !cir.ptr<!u64i> loc(#loc287)
          } loc(#loc264)
          cir.yield loc(#loc37)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc109)
          cir.condition(%16) loc(#loc109)
        } loc(#loc263)
      } loc(#loc263)
      cir.scope {
        %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc113)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc289)
        cir.if %18 {
          %19 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc116)
        } loc(#loc290)
      } loc(#loc288)
    } loc(#loc258)
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc118)
    %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!u64i x 5>>), !cir.ptr<!u64i> loc(#loc119)
    %7 = cir.ptr_stride(%6 : !cir.ptr<!u64i>, %5 : !s32i), !cir.ptr<!u64i> loc(#loc119)
    cir.store %4, %7 : !u64i, !cir.ptr<!u64i> loc(#loc291)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!u64i x 5>>), !cir.ptr<!u64i> loc(#loc120)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_667badSinkEPm(%8) : (!cir.ptr<!u64i>) -> () loc(#loc121)
    cir.return loc(#loc19)
  } loc(#loc254)
  cir.func private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_6611goodG2BSinkEPm(!cir.ptr<!u64i>) loc(#loc292)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc294)
    %1 = cir.alloca !cir.array<!u64i x 5>, !cir.ptr<!cir.array<!u64i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc295)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc130)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc296)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc132)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc132)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc297)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc135)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!u64i x 5>>), !cir.ptr<!u64i> loc(#loc136)
    %9 = cir.ptr_stride(%8 : !cir.ptr<!u64i>, %7 : !s32i), !cir.ptr<!u64i> loc(#loc136)
    cir.store %6, %9 : !u64i, !cir.ptr<!u64i> loc(#loc298)
    %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!u64i x 5>>), !cir.ptr<!u64i> loc(#loc137)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_6611goodG2BSinkEPm(%10) : (!cir.ptr<!u64i>) -> () loc(#loc138)
    cir.return loc(#loc125)
  } loc(#loc293)
  cir.func private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_6611goodB2GSinkEPm(!cir.ptr<!u64i>) loc(#loc299)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc301)
    %1 = cir.alloca !cir.array<!u64i x 5>, !cir.ptr<!cir.array<!u64i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc302)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc147)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc303)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc305)
      %10 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc306)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc307)
      %12 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc308)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc156)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc156)
      cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc307)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc163)
            %16 = cir.const #cir.int<1> : !u32i loc(#loc164)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc164)
            %18 = cir.const #cir.int<6> : !u32i loc(#loc165)
            %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc165)
            %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc166)
            cir.store %20, %11 : !s32i, !cir.ptr<!s32i> loc(#loc311)
            cir.scope {
              %61 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc171)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc172)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc172)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc313)
              cir.if %64 {
                cir.break loc(#loc174)
              } loc(#loc314)
            } loc(#loc312)
            %21 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc315)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc177)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc316)
            cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc317)
            %24 = cir.const #cir.int<2> : !s32i loc(#loc182)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc182)
            %26 = cir.get_member %10[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
            cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc318)
            %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc184)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc184)
            %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc185)
            %30 = cir.get_member %10[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
            %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
            cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc319)
            %32 = cir.const #cir.int<27015> : !s32i loc(#loc188)
            %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc188)
            %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc189)
            %35 = cir.get_member %10[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc320)
            cir.scope {
              %61 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc194)
              %62 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc322)
              %63 = cir.const #cir.int<16> : !u64i loc(#loc323)
              %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc323)
              %65 = cir.call @connect(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc199)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc200)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc200)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc324)
              cir.if %68 {
                cir.break loc(#loc202)
              } loc(#loc325)
            } loc(#loc321)
            %36 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc203)
            %37 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc204)
            %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc204)
            %39 = cir.const #cir.int<3> : !s32i loc(#loc205)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc205)
            %41 = cir.const #cir.int<8> : !u64i loc(#loc205)
            %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc205)
            %43 = cir.const #cir.int<2> : !s32i loc(#loc205)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc205)
            %45 = cir.binop(add, %42, %44) : !u64i loc(#loc205)
            %46 = cir.const #cir.int<1> : !s32i loc(#loc206)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc206)
            %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc326)
            %49 = cir.const #cir.int<0> : !s32i loc(#loc207)
            %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc208)
            %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc208)
            cir.store %51, %9 : !s32i, !cir.ptr<!s32i> loc(#loc327)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc213)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc214)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc214)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc329)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc215)
                cir.yield %66 : !cir.bool loc(#loc215)
              }, false {
                %66 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc216)
                %67 = cir.const #cir.int<0> : !s32i loc(#loc217)
                %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc330)
                %69 = cir.ternary(%68, true {
                  %70 = cir.const #true loc(#loc215)
                  cir.yield %70 : !cir.bool loc(#loc215)
                }, false {
                  %70 = cir.const #false loc(#loc215)
                  cir.yield %70 : !cir.bool loc(#loc215)
                }) : (!cir.bool) -> !cir.bool loc(#loc215)
                cir.yield %69 : !cir.bool loc(#loc215)
              }) : (!cir.bool) -> !cir.bool loc(#loc215)
              cir.if %65 {
                cir.break loc(#loc219)
              } loc(#loc331)
            } loc(#loc328)
            %52 = cir.const #cir.int<0> : !s8i loc(#loc220)
            %53 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc221)
            %54 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc222)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc222)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc332)
            %56 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc223)
            %57 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc224)
            %58 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
            %59 = cir.const #cir.int<0> : !s32i loc(#loc226)
            %60 = cir.call @__isoc23_strtoul(%57, %58, %59) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc223)
            cir.store %60, %0 : !u64i, !cir.ptr<!u64i> loc(#loc333)
          } loc(#loc310)
          cir.yield loc(#loc160)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc229)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc229)
          cir.condition(%16) loc(#loc229)
        } loc(#loc309)
      } loc(#loc309)
      cir.scope {
        %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc232)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc233)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc233)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc335)
        cir.if %18 {
          %19 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc235)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc236)
        } loc(#loc336)
      } loc(#loc334)
    } loc(#loc304)
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc237)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc238)
    %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!u64i x 5>>), !cir.ptr<!u64i> loc(#loc239)
    %7 = cir.ptr_stride(%6 : !cir.ptr<!u64i>, %5 : !s32i), !cir.ptr<!u64i> loc(#loc239)
    cir.store %4, %7 : !u64i, !cir.ptr<!u64i> loc(#loc337)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!u64i x 5>>), !cir.ptr<!u64i> loc(#loc240)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_6611goodB2GSinkEPm(%8) : (!cir.ptr<!u64i>) -> () loc(#loc241)
    cir.return loc(#loc142)
  } loc(#loc300)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_664goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66L7goodG2BEv() : () -> () loc(#loc244)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66L7goodB2GEv() : () -> () loc(#loc245)
    cir.return loc(#loc243)
  } loc(#loc338)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":88:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":219:1)
#loc13 = loc("/usr/include/stdlib.h":223:6)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":54:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":54:32)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":56:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":121:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":58:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":58:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":59:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":59:23)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":61:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":61:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":62:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":117:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":67:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":67:13)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":68:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":68:28)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":69:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":69:32)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":70:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":70:41)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":71:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":106:17)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":72:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":105:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":81:36)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":81:45)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":81:58)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":81:29)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":81:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":81:69)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":82:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":85:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":82:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":82:34)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":83:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":84:17)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":86:20)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":86:21)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":86:30)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":86:33)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":86:47)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":86:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":86:48)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":87:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":87:13)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":88:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":88:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":88:59)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":89:38)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":89:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":89:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":89:46)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":90:13)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":93:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":90:25)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":90:58)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":90:59)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":90:68)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":90:82)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":90:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":90:88)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":91:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":92:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":96:31)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":96:46)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":96:59)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":96:77)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":96:80)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":96:26)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":96:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":96:81)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":97:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":100:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":97:17)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":97:31)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":97:44)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":97:47)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":97:61)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":98:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":99:17)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":102:39)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":102:25)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":102:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":104:20)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":104:28)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":104:41)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":104:47)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":104:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":104:48)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":106:16)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":107:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":110:9)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":107:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":107:30)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":108:9)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":109:26)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":109:13)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":119:20)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":119:15)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":119:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":120:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":120:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":128:1)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":128:36)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":130:1)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":140:1)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":132:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":132:12)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":133:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":133:23)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":135:12)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":135:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":137:12)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":137:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":138:20)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":138:15)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":138:5)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":139:17)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":139:5)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":143:1)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":143:36)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":145:1)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":209:1)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":147:5)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":147:12)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":148:5)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":148:23)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":150:12)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":150:5)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":151:5)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":206:5)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":156:9)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":156:13)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":157:9)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":157:28)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":158:9)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":158:32)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":159:9)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":159:41)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":160:9)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":195:17)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":161:9)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":194:9)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":170:36)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":170:45)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":170:58)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":170:29)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":170:13)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":170:69)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":171:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":174:13)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":171:17)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":171:34)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":172:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":173:17)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":175:20)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":175:21)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":175:30)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":175:33)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":175:47)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":175:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":175:48)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":176:34)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":176:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":177:49)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":177:39)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":177:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":177:59)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":178:38)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":178:32)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":178:13)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":178:46)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":179:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":182:13)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":179:25)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":179:58)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":179:59)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":179:68)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":179:82)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":179:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":179:88)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":180:13)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":181:17)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":185:31)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":185:46)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":185:59)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":185:77)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":185:80)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":185:26)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":185:13)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":185:81)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":186:13)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":189:13)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":186:17)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":186:31)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":186:44)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":186:47)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":186:61)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":187:13)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":188:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":191:39)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":191:25)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":191:13)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":193:20)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":193:28)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":193:41)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":193:47)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":193:13)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":193:48)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":195:16)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":196:9)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":199:9)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":196:13)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":196:30)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":197:9)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":198:26)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":198:13)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":207:20)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":207:15)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":207:5)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":208:17)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":208:5)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":211:1)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":215:1)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":213:5)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_66a.cpp":214:5)
#loc246 = loc(fused[#loc1, #loc2])
#loc247 = loc(fused[#loc3, #loc4])
#loc248 = loc(fused[#loc6, #loc7])
#loc249 = loc(fused[#loc8, #loc9])
#loc250 = loc(fused[#loc10, #loc11])
#loc251 = loc(fused[#loc12, #loc13])
#loc252 = loc(fused[#loc14, #loc15])
#loc253 = loc(fused[#loc16, #loc17])
#loc254 = loc(fused[#loc18, #loc19])
#loc255 = loc(fused[#loc20, #loc21])
#loc256 = loc(fused[#loc22, #loc23])
#loc257 = loc(fused[#loc25, #loc24])
#loc258 = loc(fused[#loc26, #loc27])
#loc259 = loc(fused[#loc28, #loc29])
#loc260 = loc(fused[#loc30, #loc31])
#loc261 = loc(fused[#loc32, #loc33])
#loc262 = loc(fused[#loc34, #loc35])
#loc263 = loc(fused[#loc36, #loc37])
#loc264 = loc(fused[#loc38, #loc39])
#loc265 = loc(fused[#loc44, #loc45])
#loc266 = loc(fused[#loc46, #loc47])
#loc267 = loc(fused[#loc48, #loc49])
#loc268 = loc(fused[#loc50, #loc47])
#loc269 = loc(fused[#loc52, #loc53])
#loc270 = loc(fused[#loc55, #loc56])
#loc271 = loc(fused[#loc57, #loc58])
#loc272 = loc(fused[#loc61, #loc59])
#loc273 = loc(fused[#loc65, #loc66])
#loc274 = loc(fused[#loc70, #loc71])
#loc275 = loc(fused[#loc72, #loc73])
#loc276 = loc(fused[#loc75, #loc76])
#loc277 = loc(fused[#loc77, #loc78])
#loc278 = loc(fused[#loc79, #loc80])
#loc279 = loc(fused[#loc81, #loc73])
#loc280 = loc(fused[#loc85, #loc86])
#loc281 = loc(fused[#loc89, #loc90])
#loc282 = loc(fused[#loc91, #loc92])
#loc283 = loc(fused[#loc93, #loc94])
#loc284 = loc(fused[#loc96, #loc97])
#loc285 = loc(fused[#loc98, #loc92])
#loc286 = loc(fused[#loc102, #loc100])
#loc287 = loc(fused[#loc107, #loc108])
#loc288 = loc(fused[#loc110, #loc111])
#loc289 = loc(fused[#loc112, #loc113])
#loc290 = loc(fused[#loc114, #loc111])
#loc291 = loc(fused[#loc119, #loc117])
#loc292 = loc(fused[#loc122, #loc123])
#loc293 = loc(fused[#loc124, #loc125])
#loc294 = loc(fused[#loc126, #loc127])
#loc295 = loc(fused[#loc128, #loc129])
#loc296 = loc(fused[#loc131, #loc130])
#loc297 = loc(fused[#loc133, #loc132])
#loc298 = loc(fused[#loc136, #loc134])
#loc299 = loc(fused[#loc139, #loc140])
#loc300 = loc(fused[#loc141, #loc142])
#loc301 = loc(fused[#loc143, #loc144])
#loc302 = loc(fused[#loc145, #loc146])
#loc303 = loc(fused[#loc148, #loc147])
#loc304 = loc(fused[#loc149, #loc150])
#loc305 = loc(fused[#loc151, #loc152])
#loc306 = loc(fused[#loc153, #loc154])
#loc307 = loc(fused[#loc155, #loc156])
#loc308 = loc(fused[#loc157, #loc158])
#loc309 = loc(fused[#loc159, #loc160])
#loc310 = loc(fused[#loc161, #loc162])
#loc311 = loc(fused[#loc167, #loc168])
#loc312 = loc(fused[#loc169, #loc170])
#loc313 = loc(fused[#loc171, #loc172])
#loc314 = loc(fused[#loc173, #loc170])
#loc315 = loc(fused[#loc175, #loc176])
#loc316 = loc(fused[#loc178, #loc179])
#loc317 = loc(fused[#loc180, #loc181])
#loc318 = loc(fused[#loc183, #loc182])
#loc319 = loc(fused[#loc186, #loc187])
#loc320 = loc(fused[#loc190, #loc191])
#loc321 = loc(fused[#loc192, #loc193])
#loc322 = loc(fused[#loc195, #loc196])
#loc323 = loc(fused[#loc197, #loc198])
#loc324 = loc(fused[#loc199, #loc200])
#loc325 = loc(fused[#loc201, #loc193])
#loc326 = loc(fused[#loc205, #loc206])
#loc327 = loc(fused[#loc209, #loc210])
#loc328 = loc(fused[#loc211, #loc212])
#loc329 = loc(fused[#loc213, #loc214])
#loc330 = loc(fused[#loc216, #loc217])
#loc331 = loc(fused[#loc218, #loc212])
#loc332 = loc(fused[#loc222, #loc220])
#loc333 = loc(fused[#loc227, #loc228])
#loc334 = loc(fused[#loc230, #loc231])
#loc335 = loc(fused[#loc232, #loc233])
#loc336 = loc(fused[#loc234, #loc231])
#loc337 = loc(fused[#loc239, #loc237])
#loc338 = loc(fused[#loc242, #loc243])
