!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc167)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc168)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc169)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc170)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc171)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_09_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc167)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc24)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc24)
      } loc(#loc176)
    } loc(#loc175)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc167)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc28)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc30)
        %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc31)
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc12)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc32)
      } loc(#loc178)
    } loc(#loc177)
    cir.return loc(#loc14)
  } loc(#loc172)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_09_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc34)
  } loc(#loc179)
  cir.global "private"  constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc184)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc45)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc46)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc53)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc167)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc57)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc57)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc59)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc60)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc61)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc61)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc59)
      } loc(#loc189)
    } loc(#loc188)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc184)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc64)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc64)
      cir.if %5 {
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc45)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc45)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc72)
          %8 = cir.cmp(gt, %6, %7) : !s32i, !s32i loc(#loc193)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc73)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc76)
            %13 = cir.cmp(le, %11, %12) : !s32i, !s32i loc(#loc194)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc77)
            %15 = cir.ternary(%14, true {
              %16 = cir.const #true loc(#loc74)
              cir.yield %16 : !cir.bool loc(#loc74)
            }, false {
              %16 = cir.const #false loc(#loc74)
              cir.yield %16 : !cir.bool loc(#loc74)
            }) : (!cir.bool) -> !cir.bool loc(#loc74)
            cir.yield %15 : !cir.bool loc(#loc74)
          }, false {
            %11 = cir.const #false loc(#loc74)
            cir.yield %11 : !cir.bool loc(#loc74)
          }) : (!cir.bool) -> !cir.bool loc(#loc74)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc81)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc82)
            %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc46)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc46)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
          } else {
            %11 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc47)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc47)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
          } loc(#loc195)
        } loc(#loc192)
      } loc(#loc191)
    } loc(#loc190)
    cir.return loc(#loc49)
  } loc(#loc185)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc90)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc167)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc94)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc96)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc98)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc98)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc96)
      } loc(#loc200)
    } loc(#loc199)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc167)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc101)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %8 = cir.cmp(gt, %6, %7) : !s32i, !s32i loc(#loc204)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc107)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc110)
            %13 = cir.cmp(le, %11, %12) : !s32i, !s32i loc(#loc205)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc111)
            %15 = cir.ternary(%14, true {
              %16 = cir.const #true loc(#loc108)
              cir.yield %16 : !cir.bool loc(#loc108)
            }, false {
              %16 = cir.const #false loc(#loc108)
              cir.yield %16 : !cir.bool loc(#loc108)
            }) : (!cir.bool) -> !cir.bool loc(#loc108)
            cir.yield %15 : !cir.bool loc(#loc108)
          }, false {
            %11 = cir.const #false loc(#loc108)
            cir.yield %11 : !cir.bool loc(#loc108)
          }) : (!cir.bool) -> !cir.bool loc(#loc108)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc115)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc116)
            %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc117)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          } else {
            %11 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc119)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc119)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc120)
          } loc(#loc206)
        } loc(#loc203)
      } loc(#loc202)
    } loc(#loc201)
    cir.return loc(#loc86)
  } loc(#loc196)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc126)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc184)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc130)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc130)
      cir.if %5 {
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc134)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc134)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc135)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc136)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
      } loc(#loc211)
    } loc(#loc210)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc167)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc140)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc140)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc142)
        %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc143)
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc144)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc144)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc145)
      } loc(#loc214)
    } loc(#loc213)
    cir.return loc(#loc122)
  } loc(#loc207)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc151)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc167)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc155)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc157)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
      } loc(#loc219)
    } loc(#loc218)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc167)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc161)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc161)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc163)
        %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc164)
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc165)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc165)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc166)
      } loc(#loc222)
    } loc(#loc221)
    cir.return loc(#loc147)
  } loc(#loc215)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":38:23)
#loc8 = loc("/usr/include/unistd.h":480:1)
#loc9 = loc("/usr/include/unistd.h":480:43)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":44:19)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":30:1)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":46:1)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":32:5)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":32:9)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":34:14)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":34:13)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":34:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":35:5)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":39:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":35:8)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":36:5)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":38:9)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":38:16)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":40:5)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":45:5)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":40:8)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":41:5)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":43:15)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":43:9)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":44:9)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":152:1)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":158:1)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":154:5)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":154:14)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":155:5)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":155:14)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":156:5)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":156:14)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":157:5)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":157:14)
#loc43 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc44 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":66:19)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":74:23)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":78:23)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":53:1)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":81:1)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":55:5)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":55:9)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":57:14)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":57:13)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":57:5)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":58:5)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":62:5)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":58:8)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":59:5)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":61:9)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":61:16)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":61:23)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":63:5)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":80:5)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":63:8)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":64:5)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":67:5)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":69:5)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":66:9)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":71:9)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":79:9)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":71:13)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":71:21)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":71:19)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":71:23)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":71:26)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":71:35)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":71:32)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":72:9)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":75:9)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":77:9)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":73:19)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":73:13)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":74:13)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":78:13)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":84:1)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":107:1)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":86:5)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":86:9)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":88:14)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":88:13)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":88:5)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":89:5)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":93:5)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":89:8)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":90:5)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":92:9)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":92:16)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":92:23)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":94:5)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":106:5)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":94:8)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":95:5)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":97:9)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":105:9)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":97:13)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":97:21)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":97:19)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":97:23)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":97:26)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":97:35)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":97:32)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":98:9)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":101:9)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":103:9)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":99:19)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":99:13)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":100:23)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":100:13)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":104:23)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":104:13)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":110:1)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":131:1)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":112:5)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":112:9)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":114:14)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":114:13)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":114:5)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":115:5)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":124:5)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":115:8)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":116:5)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":119:5)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":121:5)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":118:19)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":118:9)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":123:17)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":123:9)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":125:5)
#loc139 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":130:5)
#loc140 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":125:8)
#loc141 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":126:5)
#loc142 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":128:15)
#loc143 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":128:9)
#loc144 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":129:19)
#loc145 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":129:9)
#loc146 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":134:1)
#loc147 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":150:1)
#loc148 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":136:5)
#loc149 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":136:9)
#loc150 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":138:14)
#loc151 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":138:13)
#loc152 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":138:5)
#loc153 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":139:5)
#loc154 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":143:5)
#loc155 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":139:8)
#loc156 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":140:5)
#loc157 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":142:17)
#loc158 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":142:9)
#loc159 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":144:5)
#loc160 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":149:5)
#loc161 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":144:8)
#loc162 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":145:5)
#loc163 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":147:15)
#loc164 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":147:9)
#loc165 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":148:19)
#loc166 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_09.c":148:9)
#loc167 = loc(fused[#loc1, #loc2])
#loc168 = loc(fused[#loc3, #loc4])
#loc169 = loc(fused[#loc5, #loc6])
#loc170 = loc(fused[#loc8, #loc9])
#loc171 = loc(fused[#loc10, #loc11])
#loc172 = loc(fused[#loc13, #loc14])
#loc173 = loc(fused[#loc15, #loc16])
#loc174 = loc(fused[#loc19, #loc17])
#loc175 = loc(fused[#loc20, #loc21])
#loc176 = loc(fused[#loc23, #loc21])
#loc177 = loc(fused[#loc26, #loc27])
#loc178 = loc(fused[#loc29, #loc27])
#loc179 = loc(fused[#loc33, #loc34])
#loc180 = loc(fused[#loc35, #loc36])
#loc181 = loc(fused[#loc37, #loc38])
#loc182 = loc(fused[#loc39, #loc40])
#loc183 = loc(fused[#loc41, #loc42])
#loc184 = loc(fused[#loc43, #loc44])
#loc185 = loc(fused[#loc48, #loc49])
#loc186 = loc(fused[#loc50, #loc51])
#loc187 = loc(fused[#loc54, #loc52])
#loc188 = loc(fused[#loc55, #loc56])
#loc189 = loc(fused[#loc58, #loc56])
#loc190 = loc(fused[#loc62, #loc63])
#loc191 = loc(fused[#loc65, #loc66, #loc67, #loc63])
#loc192 = loc(fused[#loc69, #loc70])
#loc193 = loc(fused[#loc71, #loc72])
#loc194 = loc(fused[#loc75, #loc76])
#loc195 = loc(fused[#loc78, #loc79, #loc80, #loc70])
#loc196 = loc(fused[#loc85, #loc86])
#loc197 = loc(fused[#loc87, #loc88])
#loc198 = loc(fused[#loc91, #loc89])
#loc199 = loc(fused[#loc92, #loc93])
#loc200 = loc(fused[#loc95, #loc93])
#loc201 = loc(fused[#loc99, #loc100])
#loc202 = loc(fused[#loc102, #loc100])
#loc203 = loc(fused[#loc103, #loc104])
#loc204 = loc(fused[#loc105, #loc106])
#loc205 = loc(fused[#loc109, #loc110])
#loc206 = loc(fused[#loc112, #loc113, #loc114, #loc104])
#loc207 = loc(fused[#loc121, #loc122])
#loc208 = loc(fused[#loc123, #loc124])
#loc209 = loc(fused[#loc127, #loc125])
#loc210 = loc(fused[#loc128, #loc129])
#loc211 = loc(fused[#loc131, #loc132, #loc133, #loc129])
#loc212 = loc(fused[#loc137, #loc136])
#loc213 = loc(fused[#loc138, #loc139])
#loc214 = loc(fused[#loc141, #loc139])
#loc215 = loc(fused[#loc146, #loc147])
#loc216 = loc(fused[#loc148, #loc149])
#loc217 = loc(fused[#loc152, #loc150])
#loc218 = loc(fused[#loc153, #loc154])
#loc219 = loc(fused[#loc156, #loc154])
#loc220 = loc(fused[#loc158, #loc157])
#loc221 = loc(fused[#loc159, #loc160])
#loc222 = loc(fused[#loc162, #loc160])
