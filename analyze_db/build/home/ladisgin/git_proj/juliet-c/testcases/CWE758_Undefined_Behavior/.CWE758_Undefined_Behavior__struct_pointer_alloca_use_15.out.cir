!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc47 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":116:10)
#loc48 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":116:14)
#loc49 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":116:20)
#loc50 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":116:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc178 = loc(fused[#loc47, #loc48])
#loc179 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc165)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc10)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc170)
            %2 = cir.const #cir.int<8> : !u64i loc(#loc15)
            %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
            %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc171)
            %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc15)
            cir.store %6, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc170)
            %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc17)
            %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
            cir.store %8, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc171)
            %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
            %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
            %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc21)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc22)
            %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
            %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc25)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc26)
          } loc(#loc169)
          cir.break loc(#loc27)
        } loc(#loc11)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc29)
          cir.break loc(#loc30)
        } loc(#loc28)
        cir.yield loc(#loc8)
      } loc(#loc8)
    } loc(#loc168)
    cir.return loc(#loc7)
  } loc(#loc167)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc172)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc175)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc54)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE758_Undefined_Behavior__struct_pointer_alloca_use_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE758_Undefined_Behavior__struct_pointer_alloca_use_15_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE758_Undefined_Behavior__struct_pointer_alloca_use_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call @CWE758_Undefined_Behavior__struct_pointer_alloca_use_15_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    cir.return %17 : !s32i loc(#loc182)
  } loc(#loc177)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc183)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc184)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc73)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc76)
          cir.break loc(#loc77)
        } loc(#loc74)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc188)
            %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc189)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc84)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc84)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc84)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc84)
            cir.store %6, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc189)
            %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc85)
            %8 = cir.const #cir.int<8> : !u64i loc(#loc190)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc85)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
            cir.store %10, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc192)
            cir.scope {
              %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
              %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc194)
              cir.if %22 {
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc96)
                %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc97)
                cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr1) loc(#loc95)
              } loc(#loc195)
            } loc(#loc193)
            %11 = cir.const #cir.int<5> : !s32i loc(#loc98)
            %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
            %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
            cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc196)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc100)
            %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
            %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc197)
            %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
            %18 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc103)
            cir.store %17, %18 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc198)
            cir.scope {
              %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc200)
              %20 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc108)
              %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
              cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc200)
              %22 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
              %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
              %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc112)
              %25 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
              %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
              %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc115)
            } loc(#loc199)
          } loc(#loc187)
          cir.break loc(#loc116)
        } loc(#loc78)
        cir.yield loc(#loc71)
      } loc(#loc71)
    } loc(#loc186)
    cir.return loc(#loc70)
  } loc(#loc185)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc121)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc204)
            %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc205)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc128)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc128)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc128)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc128)
            cir.store %6, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc205)
            %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc129)
            %8 = cir.const #cir.int<8> : !u64i loc(#loc206)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc129)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc207)
            cir.store %10, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc208)
            cir.scope {
              %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
              %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc210)
              cir.if %22 {
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc139)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc140)
                %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc141)
                cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr1) loc(#loc139)
              } loc(#loc211)
            } loc(#loc209)
            %11 = cir.const #cir.int<5> : !s32i loc(#loc142)
            %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
            %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
            cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc212)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc144)
            %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
            %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc213)
            %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
            %18 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc147)
            cir.store %17, %18 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc214)
            cir.scope {
              %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc216)
              %20 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
              %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
              cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc216)
              %22 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
              %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
              %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc155)
              cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc156)
              %25 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
              %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
              %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc159)
            } loc(#loc215)
          } loc(#loc203)
          cir.break loc(#loc160)
        } loc(#loc122)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc162)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc162)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          cir.break loc(#loc164)
        } loc(#loc161)
        cir.yield loc(#loc119)
      } loc(#loc119)
    } loc(#loc202)
    cir.return loc(#loc118)
  } loc(#loc201)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":34:19)
#loc6 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":20:1)
#loc7 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":37:1)
#loc8 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":22:5)
#loc9 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":36:5)
#loc10 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":22:12)
#loc11 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":24:5)
#loc12 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":25:5)
#loc13 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":30:5)
#loc14 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":26:9)
#loc15 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":26:56)
#loc16 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":27:9)
#loc17 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":27:33)
#loc18 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":27:32)
#loc19 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":28:22)
#loc20 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc21 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":28:28)
#loc22 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":28:9)
#loc23 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":29:22)
#loc24 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc25 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":29:28)
#loc26 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":29:9)
#loc27 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":31:5)
#loc28 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":32:5)
#loc29 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":34:9)
#loc30 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":35:9)
#loc31 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":101:1)
#loc32 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":105:1)
#loc33 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":103:5)
#loc34 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":103:11)
#loc35 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":104:5)
#loc36 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":104:11)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":121:15)
#loc42 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":123:15)
#loc43 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":126:15)
#loc44 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":128:15)
#loc45 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":116:1)
#loc46 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":131:1)
#loc51 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":117:1)
#loc52 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":119:27)
#loc53 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":119:22)
#loc54 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":119:5)
#loc55 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":121:5)
#loc56 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":122:5)
#loc57 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":122:66)
#loc58 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":123:5)
#loc59 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":126:5)
#loc60 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":127:5)
#loc61 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":127:65)
#loc62 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":128:5)
#loc63 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":130:12)
#loc64 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":130:5)
#loc65 = loc("/usr/include/stdlib.h":672:1)
#loc66 = loc("/usr/include/stdlib.h":672:45)
#loc67 = loc("/usr/include/stdlib.h":756:1)
#loc68 = loc("/usr/include/stdlib.h":756:70)
#loc69 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":44:1)
#loc70 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":70:1)
#loc71 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":46:5)
#loc72 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":69:5)
#loc73 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":46:12)
#loc74 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":48:5)
#loc75 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":50:19)
#loc76 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":50:9)
#loc77 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":51:9)
#loc78 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":52:5)
#loc79 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":53:5)
#loc80 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":67:5)
#loc81 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":54:9)
#loc82 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":54:25)
#loc83 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":55:9)
#loc84 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":55:56)
#loc85 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":57:33)
#loc86 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":57:40)
#loc87 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":57:60)
#loc88 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":57:61)
#loc89 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":57:9)
#loc90 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:9)
#loc91 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:37)
#loc92 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:13)
#loc93 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:21)
#loc94 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:27)
#loc95 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:28)
#loc96 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:34)
#loc97 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:33)
#loc98 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":59:24)
#loc99 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":59:9)
#loc100 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":60:24)
#loc101 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":60:9)
#loc102 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":61:20)
#loc103 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":61:10)
#loc104 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":61:9)
#loc105 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":62:9)
#loc106 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":66:9)
#loc107 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":63:13)
#loc108 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":63:37)
#loc109 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":63:36)
#loc110 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":64:26)
#loc111 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":64:32)
#loc112 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":64:13)
#loc113 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":65:26)
#loc114 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":65:32)
#loc115 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":65:13)
#loc116 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":68:5)
#loc117 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":73:1)
#loc118 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":99:1)
#loc119 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":75:5)
#loc120 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":98:5)
#loc121 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":75:12)
#loc122 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":77:5)
#loc123 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":78:5)
#loc124 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":92:5)
#loc125 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":79:9)
#loc126 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":79:25)
#loc127 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":80:9)
#loc128 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":80:56)
#loc129 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":82:33)
#loc130 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":82:40)
#loc131 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":82:60)
#loc132 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":82:61)
#loc133 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":82:9)
#loc134 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:9)
#loc135 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:37)
#loc136 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:13)
#loc137 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:21)
#loc138 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:27)
#loc139 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:28)
#loc140 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:34)
#loc141 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:33)
#loc142 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":84:24)
#loc143 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":84:9)
#loc144 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":85:24)
#loc145 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":85:9)
#loc146 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":86:20)
#loc147 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":86:10)
#loc148 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":86:9)
#loc149 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":87:9)
#loc150 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":91:9)
#loc151 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":88:13)
#loc152 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":88:37)
#loc153 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":88:36)
#loc154 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":89:26)
#loc155 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":89:32)
#loc156 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":89:13)
#loc157 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":90:26)
#loc158 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":90:32)
#loc159 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":90:13)
#loc160 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":93:5)
#loc161 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":94:5)
#loc162 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":96:19)
#loc163 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":96:9)
#loc164 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":97:9)
#loc165 = loc(fused[#loc1, #loc2])
#loc166 = loc(fused[#loc3, #loc4])
#loc167 = loc(fused[#loc6, #loc7])
#loc168 = loc(fused[#loc8, #loc9])
#loc169 = loc(fused[#loc12, #loc13])
#loc170 = loc(fused[#loc14, #loc15])
#loc171 = loc(fused[#loc16, #loc17])
#loc172 = loc(fused[#loc31, #loc32])
#loc173 = loc(fused[#loc33, #loc34])
#loc174 = loc(fused[#loc35, #loc36])
#loc175 = loc(fused[#loc37, #loc38])
#loc176 = loc(fused[#loc39, #loc40])
#loc177 = loc(fused[#loc45, #loc46])
#loc180 = loc(fused[#loc56, #loc57])
#loc181 = loc(fused[#loc60, #loc61])
#loc182 = loc(fused[#loc64, #loc63])
#loc183 = loc(fused[#loc65, #loc66])
#loc184 = loc(fused[#loc67, #loc68])
#loc185 = loc(fused[#loc69, #loc70])
#loc186 = loc(fused[#loc71, #loc72])
#loc187 = loc(fused[#loc79, #loc80])
#loc188 = loc(fused[#loc81, #loc82])
#loc189 = loc(fused[#loc83, #loc84])
#loc190 = loc(fused[#loc86, #loc87])
#loc191 = loc(fused[#loc85, #loc88])
#loc192 = loc(fused[#loc89, #loc88])
#loc193 = loc(fused[#loc90, #loc91])
#loc194 = loc(fused[#loc92, #loc93])
#loc195 = loc(fused[#loc94, #loc91])
#loc196 = loc(fused[#loc99, #loc98])
#loc197 = loc(fused[#loc101, #loc100])
#loc198 = loc(fused[#loc104, #loc102])
#loc199 = loc(fused[#loc105, #loc106])
#loc200 = loc(fused[#loc107, #loc108])
#loc201 = loc(fused[#loc117, #loc118])
#loc202 = loc(fused[#loc119, #loc120])
#loc203 = loc(fused[#loc123, #loc124])
#loc204 = loc(fused[#loc125, #loc126])
#loc205 = loc(fused[#loc127, #loc128])
#loc206 = loc(fused[#loc130, #loc131])
#loc207 = loc(fused[#loc129, #loc132])
#loc208 = loc(fused[#loc133, #loc132])
#loc209 = loc(fused[#loc134, #loc135])
#loc210 = loc(fused[#loc136, #loc137])
#loc211 = loc(fused[#loc138, #loc135])
#loc212 = loc(fused[#loc143, #loc142])
#loc213 = loc(fused[#loc145, #loc144])
#loc214 = loc(fused[#loc148, #loc146])
#loc215 = loc(fused[#loc149, #loc150])
#loc216 = loc(fused[#loc151, #loc152])
