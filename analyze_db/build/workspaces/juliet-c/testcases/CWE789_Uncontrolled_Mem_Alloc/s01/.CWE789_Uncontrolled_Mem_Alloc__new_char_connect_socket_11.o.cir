!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrue() -> !s32i loc(#loc522)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc523)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc524)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc525)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc526)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc527)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc528)
  cir.func private @close(!s32i) -> !s32i loc(#loc529)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc530)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc531)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc22)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc532)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc25)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_113badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc534)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc30)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc535)
    cir.scope {
      %3 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc34)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc537)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc540)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc541)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc542)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc543)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc44)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc542)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc51)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc52)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc52)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc53)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc53)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc546)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc59)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc60)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc548)
                  cir.if %60 {
                    cir.break loc(#loc62)
                  } loc(#loc549)
                } loc(#loc547)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc550)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc65)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc551)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc552)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc70)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc70)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc553)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc554)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc78)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc78)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc555)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc557)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc558)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc558)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc91)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc91)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc559)
                  cir.if %64 {
                    cir.break loc(#loc93)
                  } loc(#loc560)
                } loc(#loc556)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc95)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc96)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc96)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc96)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc96)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc96)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc96)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc96)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc97)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc561)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc98)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc99)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc562)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc105)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc105)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc564)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc106)
                    cir.yield %62 : !cir.bool loc(#loc106)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc108)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc565)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc106)
                      cir.yield %66 : !cir.bool loc(#loc106)
                    }, false {
                      %66 = cir.const #false loc(#loc106)
                      cir.yield %66 : !cir.bool loc(#loc106)
                    }) : (!cir.bool) -> !cir.bool loc(#loc106)
                    cir.yield %65 : !cir.bool loc(#loc106)
                  }) : (!cir.bool) -> !cir.bool loc(#loc106)
                  cir.if %61 {
                    cir.break loc(#loc110)
                  } loc(#loc566)
                } loc(#loc563)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc111)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc113)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc113)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc567)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc114)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc115)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc117)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc114)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc568)
              } loc(#loc545)
              cir.yield loc(#loc48)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc120)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc120)
              cir.condition(%12) loc(#loc120)
            } loc(#loc544)
          } loc(#loc544)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc124)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc570)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc126)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc127)
            } loc(#loc571)
          } loc(#loc569)
        } loc(#loc539)
      } loc(#loc538)
    } loc(#loc536)
    cir.scope {
      %3 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc130)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc573)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc576)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc139)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc578)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc579)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc145)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc146)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc581)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc582)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc150)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc22)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc22)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc153)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
              cir.delete.array %18 : <!s8i> loc(#loc154)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc25)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc25)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc155)
            } loc(#loc580)
          } loc(#loc577)
        } loc(#loc575)
      } loc(#loc574)
    } loc(#loc572)
    cir.return loc(#loc27)
  } loc(#loc533)
  cir.func private @globalReturnsFalse() -> !s32i loc(#loc583)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc159)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc585)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc164)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc586)
    cir.scope {
      %3 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc168)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc588)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc591)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc592)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc593)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc594)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc178)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc178)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc593)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc185)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc186)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc186)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc187)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc187)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc188)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc597)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc193)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc194)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc194)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc599)
                  cir.if %60 {
                    cir.break loc(#loc196)
                  } loc(#loc600)
                } loc(#loc598)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc601)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc199)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc602)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc603)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc204)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc204)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc604)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc206)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc206)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc207)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc605)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc210)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc210)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc211)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc606)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc216)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc608)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc609)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc609)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc221)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc222)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc222)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc610)
                  cir.if %64 {
                    cir.break loc(#loc224)
                  } loc(#loc611)
                } loc(#loc607)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc225)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc226)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc226)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc227)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc227)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc227)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc227)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc227)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc227)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc227)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc228)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc228)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc612)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc229)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc230)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc230)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc613)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc236)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc236)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc615)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc237)
                    cir.yield %62 : !cir.bool loc(#loc237)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc239)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc616)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc237)
                      cir.yield %66 : !cir.bool loc(#loc237)
                    }, false {
                      %66 = cir.const #false loc(#loc237)
                      cir.yield %66 : !cir.bool loc(#loc237)
                    }) : (!cir.bool) -> !cir.bool loc(#loc237)
                    cir.yield %65 : !cir.bool loc(#loc237)
                  }) : (!cir.bool) -> !cir.bool loc(#loc237)
                  cir.if %61 {
                    cir.break loc(#loc241)
                  } loc(#loc617)
                } loc(#loc614)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc242)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc244)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc244)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc618)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc245)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc246)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc248)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc245)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc619)
              } loc(#loc596)
              cir.yield loc(#loc182)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc251)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc251)
              cir.condition(%12) loc(#loc251)
            } loc(#loc595)
          } loc(#loc595)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc254)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc255)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc255)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc621)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc257)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc258)
            } loc(#loc622)
          } loc(#loc620)
        } loc(#loc590)
      } loc(#loc589)
    } loc(#loc587)
    cir.scope {
      %3 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc261)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc624)
      cir.if %4 {
        %5 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc158)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc158)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc266)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc627)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc273)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc629)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc630)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc277)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc278)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc278)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc631)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc276)
                cir.yield %15 : !cir.bool loc(#loc276)
              }, false {
                %15 = cir.const #false loc(#loc276)
                cir.yield %15 : !cir.bool loc(#loc276)
              }) : (!cir.bool) -> !cir.bool loc(#loc276)
              cir.yield %14 : !cir.bool loc(#loc276)
            }, false {
              %10 = cir.const #false loc(#loc276)
              cir.yield %10 : !cir.bool loc(#loc276)
            }) : (!cir.bool) -> !cir.bool loc(#loc276)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc282)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc283)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc633)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc634)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc287)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc288)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc289)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc289)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc287)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc290)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc291)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc292)
              cir.delete.array %19 : <!s8i> loc(#loc292)
            } else {
              %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc159)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc159)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc293)
            } loc(#loc632)
          } loc(#loc628)
        } loc(#loc626)
      } loc(#loc625)
    } loc(#loc623)
    cir.return loc(#loc161)
  } loc(#loc584)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc636)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc298)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc298)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc637)
    cir.scope {
      %3 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc302)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc639)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc642)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc643)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc644)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc645)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc312)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc312)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc644)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc319)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc320)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc320)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc321)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc321)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc322)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc648)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc328)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc328)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc650)
                  cir.if %60 {
                    cir.break loc(#loc330)
                  } loc(#loc651)
                } loc(#loc649)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc652)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc333)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc653)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc654)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc338)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc338)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc655)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc340)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc340)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc341)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc656)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc344)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc344)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc345)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc657)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc350)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc659)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc660)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc660)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc355)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc356)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc356)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc661)
                  cir.if %64 {
                    cir.break loc(#loc358)
                  } loc(#loc662)
                } loc(#loc658)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc359)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc360)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc360)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc361)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc361)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc361)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc361)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc361)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc361)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc361)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc362)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc362)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc663)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc363)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc364)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc364)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc664)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc369)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc370)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc370)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc666)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc371)
                    cir.yield %62 : !cir.bool loc(#loc371)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc372)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc373)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc667)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc371)
                      cir.yield %66 : !cir.bool loc(#loc371)
                    }, false {
                      %66 = cir.const #false loc(#loc371)
                      cir.yield %66 : !cir.bool loc(#loc371)
                    }) : (!cir.bool) -> !cir.bool loc(#loc371)
                    cir.yield %65 : !cir.bool loc(#loc371)
                  }) : (!cir.bool) -> !cir.bool loc(#loc371)
                  cir.if %61 {
                    cir.break loc(#loc375)
                  } loc(#loc668)
                } loc(#loc665)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc376)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc377)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc378)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc378)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc669)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc379)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc380)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc381)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc382)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc379)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc670)
              } loc(#loc647)
              cir.yield loc(#loc316)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc385)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc385)
              cir.condition(%12) loc(#loc385)
            } loc(#loc646)
          } loc(#loc646)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc388)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc389)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc389)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc672)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc391)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc392)
            } loc(#loc673)
          } loc(#loc671)
        } loc(#loc641)
      } loc(#loc640)
    } loc(#loc638)
    cir.scope {
      %3 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc395)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc675)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc678)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc404)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc680)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc681)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc408)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc409)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc409)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc682)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc407)
                cir.yield %15 : !cir.bool loc(#loc407)
              }, false {
                %15 = cir.const #false loc(#loc407)
                cir.yield %15 : !cir.bool loc(#loc407)
              }) : (!cir.bool) -> !cir.bool loc(#loc407)
              cir.yield %14 : !cir.bool loc(#loc407)
            }, false {
              %10 = cir.const #false loc(#loc407)
              cir.yield %10 : !cir.bool loc(#loc407)
            }) : (!cir.bool) -> !cir.bool loc(#loc407)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc413)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc414)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc684)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc685)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc418)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc419)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc420)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc420)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc418)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc421)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc422)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc423)
              cir.delete.array %19 : <!s8i> loc(#loc423)
            } else {
              %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc424)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc424)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc425)
            } loc(#loc683)
          } loc(#loc679)
        } loc(#loc677)
      } loc(#loc676)
    } loc(#loc674)
    cir.return loc(#loc295)
  } loc(#loc635)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc687)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc430)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc430)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc688)
    cir.scope {
      %3 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc434)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc690)
      cir.if %4 {
        %5 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc439)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc439)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc440)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc441)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc441)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc692)
      } loc(#loc691)
    } loc(#loc689)
    cir.scope {
      %3 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc445)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc694)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc697)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc454)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc699)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc700)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc460)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc461)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc702)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc703)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc465)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc466)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc467)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc467)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc465)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc468)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc469)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc470)
              cir.delete.array %18 : <!s8i> loc(#loc470)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc471)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc471)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc472)
            } loc(#loc701)
          } loc(#loc698)
        } loc(#loc696)
      } loc(#loc695)
    } loc(#loc693)
    cir.return loc(#loc427)
  } loc(#loc686)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc705)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc477)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc477)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc706)
    cir.scope {
      %3 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc481)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc708)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc484)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc484)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc710)
      } loc(#loc709)
    } loc(#loc707)
    cir.scope {
      %3 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc488)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc712)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc715)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc497)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc717)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc718)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc503)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc504)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc720)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc721)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc508)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc509)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc510)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc510)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc508)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc511)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc512)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc513)
              cir.delete.array %18 : <!s8i> loc(#loc513)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc514)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc514)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc515)
            } loc(#loc719)
          } loc(#loc716)
        } loc(#loc714)
      } loc(#loc713)
    } loc(#loc711)
    cir.return loc(#loc474)
  } loc(#loc704)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_114goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11L8goodB2G1Ev() : () -> () loc(#loc518)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11L8goodB2G2Ev() : () -> () loc(#loc519)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11L8goodG2B1Ev() : () -> () loc(#loc520)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11L8goodG2B2Ev() : () -> () loc(#loc521)
    cir.return loc(#loc517)
  } loc(#loc722)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":85:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":219:1)
#loc15 = loc("/usr/include/stdlib.h":223:6)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc20 = loc("/usr/include/string.h":141:1)
#loc21 = loc("/usr/include/string.h":142:14)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":127:34)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":133:27)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":52:1)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":137:1)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":54:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":54:12)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":56:12)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":56:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":57:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":115:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":57:8)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":57:26)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":58:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":59:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":114:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":64:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":64:17)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":65:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":65:32)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":66:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":66:36)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":67:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":67:45)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":68:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":103:21)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":69:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":102:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":78:40)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":78:49)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":78:62)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":78:33)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":78:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":78:73)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":79:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":82:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":79:21)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":79:38)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":80:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":81:21)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":83:24)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":83:25)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":83:34)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":83:37)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":83:51)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":83:17)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":83:52)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":84:38)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":84:17)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":85:43)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":85:17)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":85:63)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":86:42)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":86:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":86:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":86:50)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":87:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":90:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":87:29)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":87:62)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":87:63)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":87:72)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":87:86)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":87:21)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":87:92)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":88:17)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":89:21)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":93:35)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":93:50)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":93:63)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":93:81)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":93:84)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":93:30)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":93:17)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":93:85)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":94:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":97:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":94:21)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":94:35)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":94:48)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":94:51)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":94:65)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":95:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":96:21)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":99:43)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":99:29)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":99:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":101:24)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":101:32)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":101:45)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":101:51)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":101:17)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":101:52)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":103:20)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":104:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":107:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":104:17)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":104:34)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":105:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":106:30)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":106:17)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":116:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":136:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":116:8)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":116:26)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":117:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":118:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":135:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":119:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":119:20)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":123:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":134:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":123:17)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":123:24)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":123:43)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":124:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":130:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":132:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":125:37)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":52:6)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":125:28)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":125:41)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":125:17)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":127:17)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":127:24)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":128:27)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":128:17)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":129:27)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":133:17)
#loc156 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc157 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":211:19)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":230:27)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":144:1)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":234:1)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":146:5)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":146:12)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":148:12)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":148:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":149:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":207:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":149:8)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":149:26)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":150:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":151:9)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":206:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":156:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":156:17)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":157:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":157:32)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":158:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":158:36)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":159:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":159:45)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":160:13)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":195:21)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":161:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":194:13)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":170:40)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":170:49)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":170:62)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":170:33)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":170:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":170:73)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":171:17)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":174:17)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":171:21)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":171:38)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":172:17)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":173:21)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":175:24)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":175:25)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":175:34)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":175:37)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":175:51)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":175:17)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":175:52)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":176:38)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":176:17)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":177:53)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":177:43)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":177:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":177:63)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":178:42)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":178:36)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":178:17)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":178:50)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":179:17)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":182:17)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":179:29)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":179:62)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":179:63)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":179:72)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":179:86)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":179:21)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":179:92)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":180:17)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":181:21)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":185:35)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":185:50)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":185:63)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":185:81)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":185:84)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":185:30)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":185:17)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":185:85)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":186:17)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":189:17)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":186:21)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":186:35)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":186:48)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":186:51)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":186:65)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":187:17)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":188:21)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":191:43)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":191:29)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":191:17)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":193:24)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":193:32)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":193:45)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":193:51)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":193:17)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":193:52)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":195:20)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":196:13)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":199:13)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":196:17)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":196:34)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":197:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":198:30)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":198:17)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":208:5)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":233:5)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":208:8)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":208:27)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":209:5)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":212:5)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":214:5)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":211:9)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":215:9)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":232:9)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":216:13)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":216:20)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":220:13)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":231:13)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":220:17)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":220:24)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":220:43)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":220:45)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":220:48)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":220:55)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":221:13)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":227:13)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":229:13)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":222:37)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":144:13)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":222:28)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":222:41)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":222:17)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":224:17)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":224:24)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":224:34)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":225:27)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":225:17)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":226:27)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":230:17)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":237:1)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":322:1)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":239:5)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":239:12)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":241:12)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":241:5)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":242:5)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":300:5)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":242:8)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":242:26)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":243:5)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":244:9)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":299:9)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":249:13)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":249:17)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":250:13)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":250:32)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":251:13)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":251:36)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":252:13)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":252:45)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":253:13)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":288:21)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":254:13)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":287:13)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":263:40)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":263:49)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":263:62)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":263:33)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":263:17)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":263:73)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":264:17)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":267:17)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":264:21)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":264:38)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":265:17)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":266:21)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":268:24)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":268:25)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":268:34)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":268:37)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":268:51)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":268:17)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":268:52)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":269:38)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":269:17)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":270:53)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":270:43)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":270:17)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":270:63)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":271:42)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":271:36)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":271:17)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":271:50)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":272:17)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":275:17)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":272:29)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":272:62)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":272:63)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":272:72)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":272:86)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":272:21)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":272:92)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":273:17)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":274:21)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":278:35)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":278:50)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":278:63)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":278:81)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":278:84)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":278:30)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":278:17)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":278:85)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":279:17)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":282:17)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":279:21)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":279:35)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":279:48)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":279:51)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":279:65)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":280:17)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":281:21)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":284:43)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":284:29)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":284:17)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":286:24)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":286:32)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":286:45)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":286:51)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":286:17)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":286:52)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":288:20)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":289:13)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":292:13)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":289:17)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":289:34)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":290:13)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":291:30)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":291:17)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":301:5)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":321:5)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":301:8)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":301:26)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":302:5)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":303:9)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":320:9)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":304:13)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":304:20)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":308:13)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":319:13)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":308:17)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":308:24)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":308:43)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":308:45)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":308:48)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":308:55)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":309:13)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":315:13)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":317:13)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":310:37)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":237:13)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":310:28)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":310:41)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":310:17)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":312:17)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":312:24)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":312:34)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":313:27)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":313:17)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":314:27)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":318:27)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":318:17)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":325:1)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":361:1)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":327:5)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":327:12)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":329:12)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":329:5)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":330:5)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":339:5)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":330:8)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":330:27)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":331:5)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":334:5)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":336:5)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":333:19)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":333:9)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":338:16)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":338:9)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":340:5)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":360:5)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":340:8)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":340:26)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":341:5)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":342:9)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":359:9)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":343:13)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":343:20)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":347:13)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":358:13)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":347:17)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":347:24)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":347:43)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":348:13)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":354:13)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":356:13)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":349:37)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":325:13)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":349:28)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":349:41)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":349:17)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":351:17)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":351:24)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":351:34)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":352:27)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":352:17)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":353:27)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":357:27)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":357:17)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":364:1)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":395:1)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":366:5)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":366:12)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":368:12)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":368:5)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":369:5)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":373:5)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":369:8)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":369:26)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":370:5)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":372:16)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":372:9)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":374:5)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":394:5)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":374:8)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":374:26)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":375:5)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":376:9)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":393:9)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":377:13)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":377:20)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":381:13)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":392:13)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":381:17)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":381:24)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":381:43)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":382:13)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":388:13)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":390:13)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":383:37)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":364:13)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":383:28)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":383:41)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":383:17)
#loc508 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":385:17)
#loc509 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":385:24)
#loc510 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":385:34)
#loc511 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":386:27)
#loc512 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":386:17)
#loc513 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":387:27)
#loc514 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":391:27)
#loc515 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":391:17)
#loc516 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":397:1)
#loc517 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":403:1)
#loc518 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":399:5)
#loc519 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":400:5)
#loc520 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":401:5)
#loc521 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_11.cpp":402:5)
#loc522 = loc(fused[#loc1, #loc2])
#loc523 = loc(fused[#loc3, #loc4])
#loc524 = loc(fused[#loc5, #loc6])
#loc525 = loc(fused[#loc8, #loc9])
#loc526 = loc(fused[#loc10, #loc11])
#loc527 = loc(fused[#loc12, #loc13])
#loc528 = loc(fused[#loc14, #loc15])
#loc529 = loc(fused[#loc16, #loc17])
#loc530 = loc(fused[#loc18, #loc19])
#loc531 = loc(fused[#loc20, #loc21])
#loc532 = loc(fused[#loc23, #loc24])
#loc533 = loc(fused[#loc26, #loc27])
#loc534 = loc(fused[#loc28, #loc29])
#loc535 = loc(fused[#loc31, #loc30])
#loc536 = loc(fused[#loc32, #loc33])
#loc537 = loc(fused[#loc34, #loc35])
#loc538 = loc(fused[#loc36, #loc33])
#loc539 = loc(fused[#loc37, #loc38])
#loc540 = loc(fused[#loc39, #loc40])
#loc541 = loc(fused[#loc41, #loc42])
#loc542 = loc(fused[#loc43, #loc44])
#loc543 = loc(fused[#loc45, #loc46])
#loc544 = loc(fused[#loc47, #loc48])
#loc545 = loc(fused[#loc49, #loc50])
#loc546 = loc(fused[#loc55, #loc56])
#loc547 = loc(fused[#loc57, #loc58])
#loc548 = loc(fused[#loc59, #loc60])
#loc549 = loc(fused[#loc61, #loc58])
#loc550 = loc(fused[#loc63, #loc64])
#loc551 = loc(fused[#loc66, #loc67])
#loc552 = loc(fused[#loc68, #loc69])
#loc553 = loc(fused[#loc72, #loc70])
#loc554 = loc(fused[#loc76, #loc77])
#loc555 = loc(fused[#loc81, #loc82])
#loc556 = loc(fused[#loc83, #loc84])
#loc557 = loc(fused[#loc86, #loc87])
#loc558 = loc(fused[#loc88, #loc89])
#loc559 = loc(fused[#loc90, #loc91])
#loc560 = loc(fused[#loc92, #loc84])
#loc561 = loc(fused[#loc96, #loc97])
#loc562 = loc(fused[#loc100, #loc101])
#loc563 = loc(fused[#loc102, #loc103])
#loc564 = loc(fused[#loc104, #loc105])
#loc565 = loc(fused[#loc107, #loc108])
#loc566 = loc(fused[#loc109, #loc103])
#loc567 = loc(fused[#loc113, #loc111])
#loc568 = loc(fused[#loc118, #loc119])
#loc569 = loc(fused[#loc121, #loc122])
#loc570 = loc(fused[#loc123, #loc124])
#loc571 = loc(fused[#loc125, #loc122])
#loc572 = loc(fused[#loc128, #loc129])
#loc573 = loc(fused[#loc130, #loc131])
#loc574 = loc(fused[#loc132, #loc129])
#loc575 = loc(fused[#loc133, #loc134])
#loc576 = loc(fused[#loc135, #loc136])
#loc577 = loc(fused[#loc137, #loc138])
#loc578 = loc(fused[#loc140, #loc141])
#loc579 = loc(fused[#loc139, #loc141])
#loc580 = loc(fused[#loc142, #loc143, #loc144, #loc138])
#loc581 = loc(fused[#loc147, #loc148])
#loc582 = loc(fused[#loc149, #loc148])
#loc583 = loc(fused[#loc156, #loc157])
#loc584 = loc(fused[#loc160, #loc161])
#loc585 = loc(fused[#loc162, #loc163])
#loc586 = loc(fused[#loc165, #loc164])
#loc587 = loc(fused[#loc166, #loc167])
#loc588 = loc(fused[#loc168, #loc169])
#loc589 = loc(fused[#loc170, #loc167])
#loc590 = loc(fused[#loc171, #loc172])
#loc591 = loc(fused[#loc173, #loc174])
#loc592 = loc(fused[#loc175, #loc176])
#loc593 = loc(fused[#loc177, #loc178])
#loc594 = loc(fused[#loc179, #loc180])
#loc595 = loc(fused[#loc181, #loc182])
#loc596 = loc(fused[#loc183, #loc184])
#loc597 = loc(fused[#loc189, #loc190])
#loc598 = loc(fused[#loc191, #loc192])
#loc599 = loc(fused[#loc193, #loc194])
#loc600 = loc(fused[#loc195, #loc192])
#loc601 = loc(fused[#loc197, #loc198])
#loc602 = loc(fused[#loc200, #loc201])
#loc603 = loc(fused[#loc202, #loc203])
#loc604 = loc(fused[#loc205, #loc204])
#loc605 = loc(fused[#loc208, #loc209])
#loc606 = loc(fused[#loc212, #loc213])
#loc607 = loc(fused[#loc214, #loc215])
#loc608 = loc(fused[#loc217, #loc218])
#loc609 = loc(fused[#loc219, #loc220])
#loc610 = loc(fused[#loc221, #loc222])
#loc611 = loc(fused[#loc223, #loc215])
#loc612 = loc(fused[#loc227, #loc228])
#loc613 = loc(fused[#loc231, #loc232])
#loc614 = loc(fused[#loc233, #loc234])
#loc615 = loc(fused[#loc235, #loc236])
#loc616 = loc(fused[#loc238, #loc239])
#loc617 = loc(fused[#loc240, #loc234])
#loc618 = loc(fused[#loc244, #loc242])
#loc619 = loc(fused[#loc249, #loc250])
#loc620 = loc(fused[#loc252, #loc253])
#loc621 = loc(fused[#loc254, #loc255])
#loc622 = loc(fused[#loc256, #loc253])
#loc623 = loc(fused[#loc259, #loc260])
#loc624 = loc(fused[#loc261, #loc262])
#loc625 = loc(fused[#loc263, #loc264, #loc265, #loc260])
#loc626 = loc(fused[#loc267, #loc268])
#loc627 = loc(fused[#loc269, #loc270])
#loc628 = loc(fused[#loc271, #loc272])
#loc629 = loc(fused[#loc274, #loc275])
#loc630 = loc(fused[#loc273, #loc275])
#loc631 = loc(fused[#loc277, #loc278])
#loc632 = loc(fused[#loc279, #loc280, #loc281, #loc272])
#loc633 = loc(fused[#loc284, #loc285])
#loc634 = loc(fused[#loc286, #loc285])
#loc635 = loc(fused[#loc294, #loc295])
#loc636 = loc(fused[#loc296, #loc297])
#loc637 = loc(fused[#loc299, #loc298])
#loc638 = loc(fused[#loc300, #loc301])
#loc639 = loc(fused[#loc302, #loc303])
#loc640 = loc(fused[#loc304, #loc301])
#loc641 = loc(fused[#loc305, #loc306])
#loc642 = loc(fused[#loc307, #loc308])
#loc643 = loc(fused[#loc309, #loc310])
#loc644 = loc(fused[#loc311, #loc312])
#loc645 = loc(fused[#loc313, #loc314])
#loc646 = loc(fused[#loc315, #loc316])
#loc647 = loc(fused[#loc317, #loc318])
#loc648 = loc(fused[#loc323, #loc324])
#loc649 = loc(fused[#loc325, #loc326])
#loc650 = loc(fused[#loc327, #loc328])
#loc651 = loc(fused[#loc329, #loc326])
#loc652 = loc(fused[#loc331, #loc332])
#loc653 = loc(fused[#loc334, #loc335])
#loc654 = loc(fused[#loc336, #loc337])
#loc655 = loc(fused[#loc339, #loc338])
#loc656 = loc(fused[#loc342, #loc343])
#loc657 = loc(fused[#loc346, #loc347])
#loc658 = loc(fused[#loc348, #loc349])
#loc659 = loc(fused[#loc351, #loc352])
#loc660 = loc(fused[#loc353, #loc354])
#loc661 = loc(fused[#loc355, #loc356])
#loc662 = loc(fused[#loc357, #loc349])
#loc663 = loc(fused[#loc361, #loc362])
#loc664 = loc(fused[#loc365, #loc366])
#loc665 = loc(fused[#loc367, #loc368])
#loc666 = loc(fused[#loc369, #loc370])
#loc667 = loc(fused[#loc372, #loc373])
#loc668 = loc(fused[#loc374, #loc368])
#loc669 = loc(fused[#loc378, #loc376])
#loc670 = loc(fused[#loc383, #loc384])
#loc671 = loc(fused[#loc386, #loc387])
#loc672 = loc(fused[#loc388, #loc389])
#loc673 = loc(fused[#loc390, #loc387])
#loc674 = loc(fused[#loc393, #loc394])
#loc675 = loc(fused[#loc395, #loc396])
#loc676 = loc(fused[#loc397, #loc394])
#loc677 = loc(fused[#loc398, #loc399])
#loc678 = loc(fused[#loc400, #loc401])
#loc679 = loc(fused[#loc402, #loc403])
#loc680 = loc(fused[#loc405, #loc406])
#loc681 = loc(fused[#loc404, #loc406])
#loc682 = loc(fused[#loc408, #loc409])
#loc683 = loc(fused[#loc410, #loc411, #loc412, #loc403])
#loc684 = loc(fused[#loc415, #loc416])
#loc685 = loc(fused[#loc417, #loc416])
#loc686 = loc(fused[#loc426, #loc427])
#loc687 = loc(fused[#loc428, #loc429])
#loc688 = loc(fused[#loc431, #loc430])
#loc689 = loc(fused[#loc432, #loc433])
#loc690 = loc(fused[#loc434, #loc435])
#loc691 = loc(fused[#loc436, #loc437, #loc438, #loc433])
#loc692 = loc(fused[#loc442, #loc441])
#loc693 = loc(fused[#loc443, #loc444])
#loc694 = loc(fused[#loc445, #loc446])
#loc695 = loc(fused[#loc447, #loc444])
#loc696 = loc(fused[#loc448, #loc449])
#loc697 = loc(fused[#loc450, #loc451])
#loc698 = loc(fused[#loc452, #loc453])
#loc699 = loc(fused[#loc455, #loc456])
#loc700 = loc(fused[#loc454, #loc456])
#loc701 = loc(fused[#loc457, #loc458, #loc459, #loc453])
#loc702 = loc(fused[#loc462, #loc463])
#loc703 = loc(fused[#loc464, #loc463])
#loc704 = loc(fused[#loc473, #loc474])
#loc705 = loc(fused[#loc475, #loc476])
#loc706 = loc(fused[#loc478, #loc477])
#loc707 = loc(fused[#loc479, #loc480])
#loc708 = loc(fused[#loc481, #loc482])
#loc709 = loc(fused[#loc483, #loc480])
#loc710 = loc(fused[#loc485, #loc484])
#loc711 = loc(fused[#loc486, #loc487])
#loc712 = loc(fused[#loc488, #loc489])
#loc713 = loc(fused[#loc490, #loc487])
#loc714 = loc(fused[#loc491, #loc492])
#loc715 = loc(fused[#loc493, #loc494])
#loc716 = loc(fused[#loc495, #loc496])
#loc717 = loc(fused[#loc498, #loc499])
#loc718 = loc(fused[#loc497, #loc499])
#loc719 = loc(fused[#loc500, #loc501, #loc502, #loc496])
#loc720 = loc(fused[#loc505, #loc506])
#loc721 = loc(fused[#loc507, #loc506])
#loc722 = loc(fused[#loc516, #loc517])
