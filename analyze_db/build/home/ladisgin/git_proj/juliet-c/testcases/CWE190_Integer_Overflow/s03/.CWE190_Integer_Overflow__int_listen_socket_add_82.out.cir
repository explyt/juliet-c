!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc19 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":32:7)
#loc153 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":42:7)
#loc172 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":48:7)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":243:10)
#loc317 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":243:14)
#loc318 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":243:20)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":243:32)
#loc334 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":23:7)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc455 = loc(fused[#loc316, #loc317])
#loc456 = loc(fused[#loc318, #loc319])
!ty_anon_struct = !cir.struct<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_anon_struct1 = !cir.struct<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base = !cir.struct<class "CWE190_Integer_Overflow__int_listen_socket_add_82::CWE190_Integer_Overflow__int_listen_socket_add_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad = !cir.struct<class "CWE190_Integer_Overflow__int_listen_socket_add_82::CWE190_Integer_Overflow__int_listen_socket_add_82_bad" {!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base} #cir.record.decl.ast>
!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G = !cir.struct<class "CWE190_Integer_Overflow__int_listen_socket_add_82::CWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G" {!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base} #cir.record.decl.ast>
!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B = !cir.struct<class "CWE190_Integer_Overflow__int_listen_socket_add_82::CWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B" {!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc335)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc336)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc337)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc338)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc339)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc340)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc341)
  cir.func private @close(!s32i) -> !s32i loc(#loc342)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc343)
  cir.func linkonce_odr @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_8253CWE190_Integer_Overflow__int_listen_socket_add_82_badC2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad> loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":32:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc19)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad>> loc(#loc19)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad> loc(#loc19)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc19)
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>) -> () extra(#fn_attr) loc(#loc19)
    %3 = cir.vtable.address_point(@_ZTVN49CWE190_Integer_Overflow__int_listen_socket_add_8253CWE190_Integer_Overflow__int_listen_socket_add_82_badE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc344)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc19)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc19)
    cir.return loc(#loc19)
  } loc(#loc19)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc345)
  cir.func @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_823badEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc347)
    %1 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc348)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc30)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.scope {
      %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc351)
      %16 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc352)
      %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc353)
      %18 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc354)
      %19 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc355)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc39)
      cir.store %21, %17 : !s32i, !cir.ptr<!s32i> loc(#loc353)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc41)
      cir.store %23, %18 : !s32i, !cir.ptr<!s32i> loc(#loc354)
      cir.scope {
        cir.do {
          %24 = cir.const #cir.int<2> : !s32i loc(#loc46)
          %25 = cir.const #cir.int<1> : !u32i loc(#loc47)
          %26 = cir.cast(integral, %25 : !u32i), !s32i loc(#loc47)
          %27 = cir.const #cir.int<6> : !u32i loc(#loc48)
          %28 = cir.cast(integral, %27 : !u32i), !s32i loc(#loc48)
          %29 = cir.call @socket(%24, %26, %28) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
          cir.store %29, %17 : !s32i, !cir.ptr<!s32i> loc(#loc357)
          cir.scope {
            %70 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc54)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc55)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc55)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc359)
            cir.if %73 {
              cir.break loc(#loc57)
            } loc(#loc360)
          } loc(#loc358)
          %30 = cir.cast(bitcast, %16 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc361)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc60)
          %32 = cir.const #cir.int<16> : !u64i loc(#loc362)
          cir.libc.memset %32 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc363)
          %33 = cir.const #cir.int<2> : !s32i loc(#loc65)
          %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc65)
          %35 = cir.get_member %16[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
          cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc364)
          %36 = cir.const #cir.int<0> : !s32i loc(#loc68)
          %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc68)
          %38 = cir.get_member %16[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
          %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
          cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc365)
          %40 = cir.const #cir.int<27015> : !s32i loc(#loc72)
          %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc72)
          %42 = cir.call @htons(%41) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
          %43 = cir.get_member %16[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
          cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc366)
          cir.scope {
            %70 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc79)
            %71 = cir.cast(bitcast, %16 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc368)
            %72 = cir.const #cir.int<16> : !u64i loc(#loc369)
            %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc369)
            %74 = cir.call @bind(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc84)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc85)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc370)
            cir.if %77 {
              cir.break loc(#loc87)
            } loc(#loc371)
          } loc(#loc367)
          cir.scope {
            %70 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %71 = cir.const #cir.int<5> : !s32i loc(#loc91)
            %72 = cir.call @listen(%70, %71) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc92)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc93)
            %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc93)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc373)
            cir.if %75 {
              cir.break loc(#loc95)
            } loc(#loc374)
          } loc(#loc372)
          %44 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc96)
          %45 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc97)
          %46 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc98)
          %47 = cir.call @accept(%44, %45, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc99)
          cir.store %47, %18 : !s32i, !cir.ptr<!s32i> loc(#loc375)
          cir.scope {
            %70 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc104)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc105)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc105)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc377)
            cir.if %73 {
              cir.break loc(#loc107)
            } loc(#loc378)
          } loc(#loc376)
          %48 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc108)
          %49 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
          %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
          %51 = cir.const #cir.int<3> : !s32i loc(#loc110)
          %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc110)
          %53 = cir.const #cir.int<4> : !u64i loc(#loc110)
          %54 = cir.binop(mul, %52, %53) : !u64i loc(#loc110)
          %55 = cir.const #cir.int<2> : !s32i loc(#loc110)
          %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc110)
          %57 = cir.binop(add, %54, %56) : !u64i loc(#loc110)
          %58 = cir.const #cir.int<1> : !s32i loc(#loc111)
          %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc111)
          %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc379)
          %61 = cir.const #cir.int<0> : !s32i loc(#loc112)
          %62 = cir.call @recv(%48, %50, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc113)
          %63 = cir.cast(integral, %62 : !s64i), !s32i loc(#loc113)
          cir.store %63, %15 : !s32i, !cir.ptr<!s32i> loc(#loc380)
          cir.scope {
            %70 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc119)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc119)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc382)
            %74 = cir.ternary(%73, true {
              %75 = cir.const #true loc(#loc120)
              cir.yield %75 : !cir.bool loc(#loc120)
            }, false {
              %75 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc121)
              %76 = cir.const #cir.int<0> : !s32i loc(#loc122)
              %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc383)
              %78 = cir.ternary(%77, true {
                %79 = cir.const #true loc(#loc120)
                cir.yield %79 : !cir.bool loc(#loc120)
              }, false {
                %79 = cir.const #false loc(#loc120)
                cir.yield %79 : !cir.bool loc(#loc120)
              }) : (!cir.bool) -> !cir.bool loc(#loc120)
              cir.yield %78 : !cir.bool loc(#loc120)
            }) : (!cir.bool) -> !cir.bool loc(#loc120)
            cir.if %74 {
              cir.break loc(#loc124)
            } loc(#loc384)
          } loc(#loc381)
          %64 = cir.const #cir.int<0> : !s8i loc(#loc125)
          %65 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc126)
          %66 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
          %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !s32i), !cir.ptr<!s8i> loc(#loc127)
          cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc385)
          %68 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
          %69 = cir.call @atoi(%68) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc129)
          cir.store %69, %0 : !s32i, !cir.ptr<!s32i> loc(#loc386)
          cir.yield loc(#loc45)
        } while {
          %24 = cir.const #cir.int<0> : !s32i loc(#loc132)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc132)
          cir.condition(%25) loc(#loc132)
        } loc(#loc356)
      } loc(#loc356)
      cir.scope {
        %24 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc135)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc136)
        %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc136)
        %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc388)
        cir.if %27 {
          %28 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc138)
          %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc139)
        } loc(#loc389)
      } loc(#loc387)
      cir.scope {
        %24 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc142)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc143)
        %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc391)
        cir.if %27 {
          %28 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc145)
          %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc146)
        } loc(#loc392)
      } loc(#loc390)
    } loc(#loc350)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc393)
    %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc348)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad> loc(#loc393)
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_8253CWE190_Integer_Overflow__int_listen_socket_add_82_badC2Ev(%5) : (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad>) -> () extra(#fn_attr) loc(#loc29)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc147)
    cir.store %6, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>> loc(#loc348)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc148)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>> loc(#loc148)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>> loc(#loc148)
    %11 = cir.vtable.address_point( %10 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>> loc(#loc148)
    %12 = cir.load align(8) %11 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>> loc(#loc148)
    cir.call %12(%7, %8) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i) -> () loc(#loc150)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc151)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>), !cir.ptr<!void> loc(#loc151)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc152)
    cir.return loc(#loc25)
  } loc(#loc346)
  cir.func linkonce_odr @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_8257CWE190_Integer_Overflow__int_listen_socket_add_82_goodG2BC2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B> loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":42:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc153)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B>> loc(#loc153)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B> loc(#loc153)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc153)
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>) -> () extra(#fn_attr) loc(#loc153)
    %3 = cir.vtable.address_point(@_ZTVN49CWE190_Integer_Overflow__int_listen_socket_add_8257CWE190_Integer_Overflow__int_listen_socket_add_82_goodG2BE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc394)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc153)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc153)
    cir.return loc(#loc153)
  } loc(#loc153)
  cir.func internal private @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_82L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc396)
    %1 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc397)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc162)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc164)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc400)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc397)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B> loc(#loc400)
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_8257CWE190_Integer_Overflow__int_listen_socket_add_82_goodG2BC2Ev(%6) : (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B>) -> () extra(#fn_attr) loc(#loc161)
    %7 = cir.base_class_addr(%6 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc166)
    cir.store %7, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>> loc(#loc397)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc167)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>> loc(#loc167)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>> loc(#loc167)
    %12 = cir.vtable.address_point( %11 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>> loc(#loc167)
    %13 = cir.load align(8) %12 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>> loc(#loc167)
    cir.call %13(%8, %9) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i) -> () loc(#loc169)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc170)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>), !cir.ptr<!void> loc(#loc170)
    cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc171)
    cir.return loc(#loc157)
  } loc(#loc395)
  cir.func linkonce_odr @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_8257CWE190_Integer_Overflow__int_listen_socket_add_82_goodB2GC2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G> loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":48:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc172)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G>> loc(#loc172)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G> loc(#loc172)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc172)
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>) -> () extra(#fn_attr) loc(#loc172)
    %3 = cir.vtable.address_point(@_ZTVN49CWE190_Integer_Overflow__int_listen_socket_add_8257CWE190_Integer_Overflow__int_listen_socket_add_82_goodB2GE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc401)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc172)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc172)
    cir.return loc(#loc172)
  } loc(#loc172)
  cir.func internal private @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_82L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc403)
    %1 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc404)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc181)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.scope {
      %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc407)
      %16 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc408)
      %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc409)
      %18 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc410)
      %19 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc411)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc190)
      %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc190)
      cir.store %21, %17 : !s32i, !cir.ptr<!s32i> loc(#loc409)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc192)
      %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc192)
      cir.store %23, %18 : !s32i, !cir.ptr<!s32i> loc(#loc410)
      cir.scope {
        cir.do {
          %24 = cir.const #cir.int<2> : !s32i loc(#loc197)
          %25 = cir.const #cir.int<1> : !u32i loc(#loc198)
          %26 = cir.cast(integral, %25 : !u32i), !s32i loc(#loc198)
          %27 = cir.const #cir.int<6> : !u32i loc(#loc199)
          %28 = cir.cast(integral, %27 : !u32i), !s32i loc(#loc199)
          %29 = cir.call @socket(%24, %26, %28) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc200)
          cir.store %29, %17 : !s32i, !cir.ptr<!s32i> loc(#loc413)
          cir.scope {
            %70 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc205)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc206)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc206)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc415)
            cir.if %73 {
              cir.break loc(#loc208)
            } loc(#loc416)
          } loc(#loc414)
          %30 = cir.cast(bitcast, %16 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc417)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc211)
          %32 = cir.const #cir.int<16> : !u64i loc(#loc418)
          cir.libc.memset %32 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc419)
          %33 = cir.const #cir.int<2> : !s32i loc(#loc216)
          %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc216)
          %35 = cir.get_member %16[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
          cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc420)
          %36 = cir.const #cir.int<0> : !s32i loc(#loc218)
          %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc218)
          %38 = cir.get_member %16[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
          %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
          cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc421)
          %40 = cir.const #cir.int<27015> : !s32i loc(#loc220)
          %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc220)
          %42 = cir.call @htons(%41) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc221)
          %43 = cir.get_member %16[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
          cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc422)
          cir.scope {
            %70 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc226)
            %71 = cir.cast(bitcast, %16 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc424)
            %72 = cir.const #cir.int<16> : !u64i loc(#loc425)
            %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc425)
            %74 = cir.call @bind(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc231)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc232)
            %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc232)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc426)
            cir.if %77 {
              cir.break loc(#loc234)
            } loc(#loc427)
          } loc(#loc423)
          cir.scope {
            %70 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc237)
            %71 = cir.const #cir.int<5> : !s32i loc(#loc238)
            %72 = cir.call @listen(%70, %71) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc239)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc240)
            %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc240)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc429)
            cir.if %75 {
              cir.break loc(#loc242)
            } loc(#loc430)
          } loc(#loc428)
          %44 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc243)
          %45 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc244)
          %46 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc245)
          %47 = cir.call @accept(%44, %45, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc246)
          cir.store %47, %18 : !s32i, !cir.ptr<!s32i> loc(#loc431)
          cir.scope {
            %70 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc251)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc252)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc252)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc433)
            cir.if %73 {
              cir.break loc(#loc254)
            } loc(#loc434)
          } loc(#loc432)
          %48 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc255)
          %49 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc256)
          %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc256)
          %51 = cir.const #cir.int<3> : !s32i loc(#loc257)
          %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc257)
          %53 = cir.const #cir.int<4> : !u64i loc(#loc257)
          %54 = cir.binop(mul, %52, %53) : !u64i loc(#loc257)
          %55 = cir.const #cir.int<2> : !s32i loc(#loc257)
          %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc257)
          %57 = cir.binop(add, %54, %56) : !u64i loc(#loc257)
          %58 = cir.const #cir.int<1> : !s32i loc(#loc258)
          %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc258)
          %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc435)
          %61 = cir.const #cir.int<0> : !s32i loc(#loc259)
          %62 = cir.call @recv(%48, %50, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc260)
          %63 = cir.cast(integral, %62 : !s64i), !s32i loc(#loc260)
          cir.store %63, %15 : !s32i, !cir.ptr<!s32i> loc(#loc436)
          cir.scope {
            %70 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc265)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc266)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc266)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc438)
            %74 = cir.ternary(%73, true {
              %75 = cir.const #true loc(#loc267)
              cir.yield %75 : !cir.bool loc(#loc267)
            }, false {
              %75 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc268)
              %76 = cir.const #cir.int<0> : !s32i loc(#loc269)
              %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc439)
              %78 = cir.ternary(%77, true {
                %79 = cir.const #true loc(#loc267)
                cir.yield %79 : !cir.bool loc(#loc267)
              }, false {
                %79 = cir.const #false loc(#loc267)
                cir.yield %79 : !cir.bool loc(#loc267)
              }) : (!cir.bool) -> !cir.bool loc(#loc267)
              cir.yield %78 : !cir.bool loc(#loc267)
            }) : (!cir.bool) -> !cir.bool loc(#loc267)
            cir.if %74 {
              cir.break loc(#loc271)
            } loc(#loc440)
          } loc(#loc437)
          %64 = cir.const #cir.int<0> : !s8i loc(#loc272)
          %65 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc273)
          %66 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc274)
          %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !s32i), !cir.ptr<!s8i> loc(#loc274)
          cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc441)
          %68 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc275)
          %69 = cir.call @atoi(%68) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc276)
          cir.store %69, %0 : !s32i, !cir.ptr<!s32i> loc(#loc442)
          cir.yield loc(#loc196)
        } while {
          %24 = cir.const #cir.int<0> : !s32i loc(#loc279)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc279)
          cir.condition(%25) loc(#loc279)
        } loc(#loc412)
      } loc(#loc412)
      cir.scope {
        %24 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc282)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc283)
        %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc283)
        %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc444)
        cir.if %27 {
          %28 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc285)
          %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc286)
        } loc(#loc445)
      } loc(#loc443)
      cir.scope {
        %24 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc289)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc290)
        %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc290)
        %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc447)
        cir.if %27 {
          %28 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc292)
          %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc293)
        } loc(#loc448)
      } loc(#loc446)
    } loc(#loc406)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc449)
    %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc404)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G> loc(#loc449)
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_8257CWE190_Integer_Overflow__int_listen_socket_add_82_goodB2GC2Ev(%5) : (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G>) -> () extra(#fn_attr) loc(#loc180)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_goodB2G> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc294)
    cir.store %6, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>> loc(#loc404)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc295)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>> loc(#loc295)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>> loc(#loc295)
    %11 = cir.vtable.address_point( %10 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>> loc(#loc295)
    %12 = cir.load align(8) %11 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>> loc(#loc295)
    cir.call %12(%7, %8) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i)>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !s32i) -> () loc(#loc297)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc298)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>), !cir.ptr<!void> loc(#loc298)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc299)
    cir.return loc(#loc176)
  } loc(#loc402)
  cir.func @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_824goodEv() extra(#fn_attr2) {
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_82L7goodG2BEv() : () -> () loc(#loc302)
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_82L7goodB2GEv() : () -> () loc(#loc303)
    cir.return loc(#loc301)
  } loc(#loc450)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc451)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc452)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc453)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc311)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc312)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc313)
  cir.func @main(%arg0: !s32i loc(fused[#loc316, #loc317]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc318, #loc319])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc455)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc456)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc315)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc320)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc321)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc322)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc322)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc323)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc310)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc310)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc324)
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_824goodEv() : () -> () loc(#loc325)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc311)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc311)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc326)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc312)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc312)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc327)
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_823badEv() : () -> () loc(#loc328)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc313)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc313)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc329)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc330)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc457)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc457)
    cir.return %15 : !s32i loc(#loc457)
  } loc(#loc454)
  cir.global linkonce_odr dsolocal @_ZTVN49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseE> : !cir.ptr<!u8i>, #cir.global_view<@__cxa_pure_virtual> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc458)
  cir.func linkonce_odr @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseC2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":23:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, ["this", init] {alignment = 8 : i64} loc(#loc334)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>> loc(#loc334)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base> loc(#loc334)
    %2 = cir.vtable.address_point(@_ZTVN49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc458)
    %3 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_listen_socket_add_823A3ACWE190_Integer_Overflow__int_listen_socket_add_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc334)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc334)
    cir.return loc(#loc334)
  } loc(#loc334)
  cir.global "private" external @_ZTVN49CWE190_Integer_Overflow__int_listen_socket_add_8253CWE190_Integer_Overflow__int_listen_socket_add_82_badE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc344)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc332)
  cir.global linkonce_odr comdat @_ZTSN49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseE = #cir.const_array<"N49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseE" : !cir.array<!s8i x 109>> : !cir.array<!s8i x 109> {alignment = 1 : i64} loc(#loc332)
  cir.global constant external @_ZTIN49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN49CWE190_Integer_Overflow__int_listen_socket_add_8254CWE190_Integer_Overflow__int_listen_socket_add_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc332)
  cir.func private @__cxa_pure_virtual() loc(#loc)
  cir.global "private" external @_ZTVN49CWE190_Integer_Overflow__int_listen_socket_add_8257CWE190_Integer_Overflow__int_listen_socket_add_82_goodG2BE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc394)
  cir.global "private" external @_ZTVN49CWE190_Integer_Overflow__int_listen_socket_add_8257CWE190_Integer_Overflow__int_listen_socket_add_82_goodB2GE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc401)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc18 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc20 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":32:1)
#loc21 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":36:1)
#loc22 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc23 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":48:1)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":125:1)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":50:5)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":50:9)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":122:5)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":122:78)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":52:12)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":52:5)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":53:5)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":121:5)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":58:9)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":58:13)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":59:9)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":59:28)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":60:9)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":60:31)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":61:9)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":61:31)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":62:9)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":62:41)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":63:9)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":106:17)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":73:35)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":73:44)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":73:57)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":73:28)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":73:13)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":73:68)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":74:13)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":77:13)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":74:17)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":74:33)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":75:13)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":76:17)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":78:20)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":78:21)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":78:30)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":78:33)
#loc62 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":78:47)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":78:13)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":78:48)
#loc65 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":79:34)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":79:13)
#loc68 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":80:39)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":80:13)
#loc72 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":81:38)
#loc73 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":81:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":81:13)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":81:46)
#loc77 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":82:13)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":85:13)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":82:22)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":82:54)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":82:55)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":82:64)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":82:78)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":82:17)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":82:84)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":83:13)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":84:17)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":86:13)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":89:13)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":86:24)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":86:38)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":86:17)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":86:57)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":87:13)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":88:17)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":90:35)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":90:49)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":90:55)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":90:28)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":90:13)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":90:59)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":91:13)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":94:13)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":91:17)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":91:33)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":92:13)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":93:17)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":96:31)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":96:45)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":96:58)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":96:76)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":96:79)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":96:26)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":96:13)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":96:80)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":97:13)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":100:13)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":97:17)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":97:31)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":97:44)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":97:47)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":97:61)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":98:13)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":99:17)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":102:39)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":102:25)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":102:13)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":104:25)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":104:20)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":104:13)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":104:36)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":106:16)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":107:9)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":110:9)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":107:13)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":107:29)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":108:9)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":109:26)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":109:13)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":111:9)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":114:9)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":111:13)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":111:29)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":112:9)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":113:26)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":113:13)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":122:74)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":123:5)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":123:24)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":123:17)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":124:12)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":48:6)
#loc154 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":42:1)
#loc155 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":46:1)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":132:1)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":142:1)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":134:5)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":134:9)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":139:5)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":139:78)
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":136:12)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":136:5)
#loc164 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":138:12)
#loc165 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":138:5)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":139:74)
#loc167 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":140:5)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":140:24)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":140:17)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":141:12)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":132:13)
#loc173 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":48:1)
#loc174 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":52:1)
#loc175 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":145:1)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":222:1)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":147:5)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":147:9)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":219:5)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":219:78)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":149:12)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":149:5)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":150:5)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":218:5)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":155:9)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":155:13)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":156:9)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":156:28)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":157:9)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":157:31)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":158:9)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":158:31)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":159:9)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":159:41)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":160:9)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":203:17)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":170:35)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":170:44)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":170:57)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":170:28)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":170:13)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":170:68)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":171:13)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":174:13)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":171:17)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":171:33)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":172:13)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":173:17)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":175:20)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":175:21)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":175:30)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":175:33)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":175:47)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":175:13)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":175:48)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":176:34)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":176:13)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":177:39)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":177:13)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":178:38)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":178:32)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":178:13)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":178:46)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":179:13)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":182:13)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":179:22)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":179:54)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":179:55)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":179:64)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":179:78)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":179:17)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":179:84)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":180:13)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":181:17)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":183:13)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":186:13)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":183:24)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":183:38)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":183:17)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":183:57)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":184:13)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":185:17)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":187:35)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":187:49)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":187:55)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":187:28)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":187:13)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":187:59)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":188:13)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":191:13)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":188:17)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":188:33)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":189:13)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":190:17)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":193:31)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":193:45)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":193:58)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":193:76)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":193:79)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":193:26)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":193:13)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":193:80)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":194:13)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":197:13)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":194:17)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":194:31)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":194:44)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":194:47)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":194:61)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":195:13)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":196:17)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":199:39)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":199:25)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":199:13)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":201:25)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":201:20)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":201:13)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":201:36)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":203:16)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":204:9)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":207:9)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":204:13)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":204:29)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":205:9)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":206:26)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":206:13)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":208:9)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":211:9)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":208:13)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":208:29)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":209:9)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":210:26)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":210:13)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":219:74)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":220:5)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":220:24)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":220:17)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":221:12)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":145:13)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":224:1)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":228:1)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":226:5)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":227:5)
#loc304 = loc("/usr/include/stdlib.h":575:1)
#loc305 = loc("/usr/include/stdlib.h":575:41)
#loc306 = loc("/usr/include/time.h":76:1)
#loc307 = loc("/usr/include/time.h":76:38)
#loc308 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc309 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":248:15)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":250:15)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":253:15)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":255:15)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":243:1)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":258:1)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":244:1)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":246:27)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":246:22)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":246:5)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":248:5)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":249:5)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":250:5)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":253:5)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":254:5)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":255:5)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":257:12)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_add_82a.cpp":257:5)
#loc332 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":23:1)
#loc333 = loc("./CWE190_Integer_Overflow__int_listen_socket_add_82.h":28:1)
#loc335 = loc(fused[#loc1, #loc2])
#loc336 = loc(fused[#loc3, #loc4])
#loc337 = loc(fused[#loc5, #loc6])
#loc338 = loc(fused[#loc7, #loc8])
#loc339 = loc(fused[#loc9, #loc10])
#loc340 = loc(fused[#loc11, #loc12])
#loc341 = loc(fused[#loc13, #loc14])
#loc342 = loc(fused[#loc15, #loc16])
#loc343 = loc(fused[#loc17, #loc18])
#loc344 = loc(fused[#loc20, #loc21])
#loc345 = loc(fused[#loc22, #loc23])
#loc346 = loc(fused[#loc24, #loc25])
#loc347 = loc(fused[#loc26, #loc27])
#loc348 = loc(fused[#loc28, #loc29])
#loc349 = loc(fused[#loc31, #loc30])
#loc350 = loc(fused[#loc32, #loc33])
#loc351 = loc(fused[#loc34, #loc35])
#loc352 = loc(fused[#loc36, #loc37])
#loc353 = loc(fused[#loc38, #loc39])
#loc354 = loc(fused[#loc40, #loc41])
#loc355 = loc(fused[#loc42, #loc43])
#loc356 = loc(fused[#loc44, #loc45])
#loc357 = loc(fused[#loc50, #loc51])
#loc358 = loc(fused[#loc52, #loc53])
#loc359 = loc(fused[#loc54, #loc55])
#loc360 = loc(fused[#loc56, #loc53])
#loc361 = loc(fused[#loc58, #loc59])
#loc362 = loc(fused[#loc61, #loc62])
#loc363 = loc(fused[#loc63, #loc64])
#loc364 = loc(fused[#loc67, #loc65])
#loc365 = loc(fused[#loc71, #loc68])
#loc366 = loc(fused[#loc75, #loc76])
#loc367 = loc(fused[#loc77, #loc78])
#loc368 = loc(fused[#loc80, #loc81])
#loc369 = loc(fused[#loc82, #loc83])
#loc370 = loc(fused[#loc84, #loc85])
#loc371 = loc(fused[#loc86, #loc78])
#loc372 = loc(fused[#loc88, #loc89])
#loc373 = loc(fused[#loc92, #loc93])
#loc374 = loc(fused[#loc94, #loc89])
#loc375 = loc(fused[#loc100, #loc101])
#loc376 = loc(fused[#loc102, #loc103])
#loc377 = loc(fused[#loc104, #loc105])
#loc378 = loc(fused[#loc106, #loc103])
#loc379 = loc(fused[#loc110, #loc111])
#loc380 = loc(fused[#loc114, #loc115])
#loc381 = loc(fused[#loc116, #loc117])
#loc382 = loc(fused[#loc118, #loc119])
#loc383 = loc(fused[#loc121, #loc122])
#loc384 = loc(fused[#loc123, #loc117])
#loc385 = loc(fused[#loc127, #loc125])
#loc386 = loc(fused[#loc130, #loc131])
#loc387 = loc(fused[#loc133, #loc134])
#loc388 = loc(fused[#loc135, #loc136])
#loc389 = loc(fused[#loc137, #loc134])
#loc390 = loc(fused[#loc140, #loc141])
#loc391 = loc(fused[#loc142, #loc143])
#loc392 = loc(fused[#loc144, #loc141])
#loc393 = loc(fused[#loc147, #loc29])
#loc394 = loc(fused[#loc154, #loc155])
#loc395 = loc(fused[#loc156, #loc157])
#loc396 = loc(fused[#loc158, #loc159])
#loc397 = loc(fused[#loc160, #loc161])
#loc398 = loc(fused[#loc163, #loc162])
#loc399 = loc(fused[#loc165, #loc164])
#loc400 = loc(fused[#loc166, #loc161])
#loc401 = loc(fused[#loc173, #loc174])
#loc402 = loc(fused[#loc175, #loc176])
#loc403 = loc(fused[#loc177, #loc178])
#loc404 = loc(fused[#loc179, #loc180])
#loc405 = loc(fused[#loc182, #loc181])
#loc406 = loc(fused[#loc183, #loc184])
#loc407 = loc(fused[#loc185, #loc186])
#loc408 = loc(fused[#loc187, #loc188])
#loc409 = loc(fused[#loc189, #loc190])
#loc410 = loc(fused[#loc191, #loc192])
#loc411 = loc(fused[#loc193, #loc194])
#loc412 = loc(fused[#loc195, #loc196])
#loc413 = loc(fused[#loc201, #loc202])
#loc414 = loc(fused[#loc203, #loc204])
#loc415 = loc(fused[#loc205, #loc206])
#loc416 = loc(fused[#loc207, #loc204])
#loc417 = loc(fused[#loc209, #loc210])
#loc418 = loc(fused[#loc212, #loc213])
#loc419 = loc(fused[#loc214, #loc215])
#loc420 = loc(fused[#loc217, #loc216])
#loc421 = loc(fused[#loc219, #loc218])
#loc422 = loc(fused[#loc222, #loc223])
#loc423 = loc(fused[#loc224, #loc225])
#loc424 = loc(fused[#loc227, #loc228])
#loc425 = loc(fused[#loc229, #loc230])
#loc426 = loc(fused[#loc231, #loc232])
#loc427 = loc(fused[#loc233, #loc225])
#loc428 = loc(fused[#loc235, #loc236])
#loc429 = loc(fused[#loc239, #loc240])
#loc430 = loc(fused[#loc241, #loc236])
#loc431 = loc(fused[#loc247, #loc248])
#loc432 = loc(fused[#loc249, #loc250])
#loc433 = loc(fused[#loc251, #loc252])
#loc434 = loc(fused[#loc253, #loc250])
#loc435 = loc(fused[#loc257, #loc258])
#loc436 = loc(fused[#loc261, #loc262])
#loc437 = loc(fused[#loc263, #loc264])
#loc438 = loc(fused[#loc265, #loc266])
#loc439 = loc(fused[#loc268, #loc269])
#loc440 = loc(fused[#loc270, #loc264])
#loc441 = loc(fused[#loc274, #loc272])
#loc442 = loc(fused[#loc277, #loc278])
#loc443 = loc(fused[#loc280, #loc281])
#loc444 = loc(fused[#loc282, #loc283])
#loc445 = loc(fused[#loc284, #loc281])
#loc446 = loc(fused[#loc287, #loc288])
#loc447 = loc(fused[#loc289, #loc290])
#loc448 = loc(fused[#loc291, #loc288])
#loc449 = loc(fused[#loc294, #loc180])
#loc450 = loc(fused[#loc300, #loc301])
#loc451 = loc(fused[#loc304, #loc305])
#loc452 = loc(fused[#loc306, #loc307])
#loc453 = loc(fused[#loc308, #loc309])
#loc454 = loc(fused[#loc314, #loc315])
#loc457 = loc(fused[#loc331, #loc330])
#loc458 = loc(fused[#loc332, #loc333])
