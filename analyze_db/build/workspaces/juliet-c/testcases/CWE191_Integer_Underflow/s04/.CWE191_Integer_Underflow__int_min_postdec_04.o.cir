!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int_min_postdec_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc159)
  cir.func no_proto @CWE191_Integer_Underflow__int_min_postdec_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc162)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc9)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc13)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc165)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc15)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc15)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc15)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb3 loc(#loc12)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc167)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %10 ^bb6, ^bb9 loc(#loc168)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc169)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %12 = cir.unary(dec, %11) nsw : !s32i, !s32i loc(#loc24)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc6)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc26)
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc18)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc160)
  cir.func no_proto @CWE191_Integer_Underflow__int_min_postdec_04_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc172)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc173)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc174)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc175)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc35)
    cir.return loc(#loc28)
  } loc(#loc171)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc40)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc179)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc53)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc53)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc53)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb3 loc(#loc50)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc50)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc184)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc57)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc185)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb13 loc(#loc59)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc186)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %14 = cir.const #cir.int<2147483647> : !s32i loc(#loc65)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc65)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc65)
    %18 = cir.cmp(gt, %13, %17) : !s32i, !cir.bool loc(#loc187)
    cir.brcond %18 ^bb9, ^bb10 loc(#loc188)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %20 = cir.unary(dec, %19) nsw : !s32i, !s32i loc(#loc70)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc72)
    cir.br ^bb11 loc(#loc67)
  ^bb10:  // pred: ^bb8
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc40)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    cir.br ^bb11 loc(#loc63)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc63)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc56)
  ^bb13:  // 2 preds: ^bb6, ^bb12
    cir.br ^bb14 loc(#loc56)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc42)
  } loc(#loc177)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc192)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc84)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc195)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc86)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc86)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc86)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.br ^bb3 loc(#loc83)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc197)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc90)
    cir.brcond %10 ^bb6, ^bb12 loc(#loc198)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc199)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %12 = cir.const #cir.int<2147483647> : !s32i loc(#loc95)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc95)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc95)
    %16 = cir.cmp(gt, %11, %15) : !s32i, !cir.bool loc(#loc200)
    cir.brcond %16 ^bb8, ^bb9 loc(#loc201)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %18 = cir.unary(dec, %17) nsw : !s32i, !s32i loc(#loc100)
    cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc102)
    cir.br ^bb10 loc(#loc97)
  ^bb9:  // pred: ^bb7
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc103)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb10 loc(#loc93)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc93)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc89)
  ^bb12:  // 2 preds: ^bb5, ^bb11
    cir.br ^bb13 loc(#loc89)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc75)
  } loc(#loc190)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc205)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc111)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb1 loc(#loc207)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc115)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc208)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc119)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb4 loc(#loc117)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc121)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc122)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc114)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc210)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc126)
    cir.brcond %10 ^bb7, ^bb10 loc(#loc211)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc212)
  ^bb8:  // pred: ^bb7
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %12 = cir.unary(dec, %11) nsw : !s32i, !s32i loc(#loc131)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc133)
    cir.br ^bb9 loc(#loc129)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc125)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc125)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc106)
  } loc(#loc203)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc215)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc216)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc140)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb1 loc(#loc218)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc144)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc219)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<2> : !s32i loc(#loc146)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc147)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb3 loc(#loc143)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc221)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc151)
    cir.brcond %8 ^bb6, ^bb9 loc(#loc222)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc223)
  ^bb7:  // pred: ^bb6
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %10 = cir.unary(dec, %9) nsw : !s32i, !s32i loc(#loc156)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc158)
    cir.br ^bb8 loc(#loc154)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc150)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc150)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc135)
  } loc(#loc214)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int_min_postdec_04.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":28:1)
#loc4 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":47:1)
#loc5 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":43:13)
#loc6 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":43:26)
#loc7 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":30:5)
#loc8 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":30:9)
#loc9 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":32:12)
#loc10 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":32:5)
#loc11 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":33:5)
#loc12 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":37:5)
#loc13 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":33:8)
#loc14 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":34:5)
#loc15 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":36:16)
#loc16 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":36:9)
#loc17 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":38:5)
#loc18 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":46:5)
#loc19 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":38:8)
#loc20 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":39:5)
#loc21 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":40:9)
#loc22 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":45:9)
#loc23 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":42:17)
#loc24 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":42:13)
#loc25 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":44:26)
#loc26 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":44:13)
#loc27 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":161:1)
#loc28 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":167:1)
#loc29 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":163:5)
#loc30 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":163:14)
#loc31 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":164:5)
#loc32 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":164:14)
#loc33 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":165:5)
#loc34 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":165:14)
#loc35 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":166:5)
#loc36 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":166:14)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":67:19)
#loc40 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":80:23)
#loc41 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":54:1)
#loc42 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":83:1)
#loc43 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":75:13)
#loc44 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":75:26)
#loc45 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":56:5)
#loc46 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":56:9)
#loc47 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":58:12)
#loc48 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":58:5)
#loc49 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":59:5)
#loc50 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":63:5)
#loc51 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":59:8)
#loc52 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":60:5)
#loc53 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":62:16)
#loc54 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":62:9)
#loc55 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":64:5)
#loc56 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":82:5)
#loc57 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":64:8)
#loc58 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":65:5)
#loc59 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":68:5)
#loc60 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":70:5)
#loc61 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":67:9)
#loc62 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":72:9)
#loc63 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":81:9)
#loc64 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":72:13)
#loc65 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":72:20)
#loc66 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":73:9)
#loc67 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":77:9)
#loc68 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":79:9)
#loc69 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":74:17)
#loc70 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":74:13)
#loc71 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":76:26)
#loc72 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":76:13)
#loc73 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":80:13)
#loc74 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":86:1)
#loc75 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":110:1)
#loc76 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":102:13)
#loc77 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":102:26)
#loc78 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":88:5)
#loc79 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":88:9)
#loc80 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":90:12)
#loc81 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":90:5)
#loc82 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":91:5)
#loc83 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":95:5)
#loc84 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":91:8)
#loc85 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":92:5)
#loc86 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":94:16)
#loc87 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":94:9)
#loc88 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":96:5)
#loc89 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":109:5)
#loc90 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":96:8)
#loc91 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":97:5)
#loc92 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":99:9)
#loc93 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":108:9)
#loc94 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":99:13)
#loc95 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":99:20)
#loc96 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":100:9)
#loc97 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":104:9)
#loc98 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":106:9)
#loc99 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":101:17)
#loc100 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":101:13)
#loc101 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":103:26)
#loc102 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":103:13)
#loc103 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":107:23)
#loc104 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":107:13)
#loc105 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":113:1)
#loc106 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":137:1)
#loc107 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":133:13)
#loc108 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":133:26)
#loc109 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":115:5)
#loc110 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":115:9)
#loc111 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":117:12)
#loc112 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":117:5)
#loc113 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":118:5)
#loc114 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":127:5)
#loc115 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":118:8)
#loc116 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":119:5)
#loc117 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":122:5)
#loc118 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":124:5)
#loc119 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":121:19)
#loc120 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":121:9)
#loc121 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":126:17)
#loc122 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":126:16)
#loc123 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":126:9)
#loc124 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":128:5)
#loc125 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":136:5)
#loc126 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":128:8)
#loc127 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":129:5)
#loc128 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":130:9)
#loc129 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":135:9)
#loc130 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":132:17)
#loc131 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":132:13)
#loc132 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":134:26)
#loc133 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":134:13)
#loc134 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":140:1)
#loc135 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":159:1)
#loc136 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":155:13)
#loc137 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":155:26)
#loc138 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":142:5)
#loc139 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":142:9)
#loc140 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":144:12)
#loc141 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":144:5)
#loc142 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":145:5)
#loc143 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":149:5)
#loc144 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":145:8)
#loc145 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":146:5)
#loc146 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":148:17)
#loc147 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":148:16)
#loc148 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":148:9)
#loc149 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":150:5)
#loc150 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":158:5)
#loc151 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":150:8)
#loc152 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":151:5)
#loc153 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":152:9)
#loc154 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":157:9)
#loc155 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":154:17)
#loc156 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":154:13)
#loc157 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":156:26)
#loc158 = loc("CWE191_Integer_Underflow__int_min_postdec_04.c":156:13)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc10, #loc9])
#loc164 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc14, #loc12])
#loc166 = loc(fused[#loc16, #loc15])
#loc167 = loc(fused[#loc17, #loc18])
#loc168 = loc(fused[#loc20, #loc18])
#loc169 = loc(fused[#loc21, #loc22])
#loc170 = loc(fused[#loc24, #loc23])
#loc171 = loc(fused[#loc27, #loc28])
#loc172 = loc(fused[#loc29, #loc30])
#loc173 = loc(fused[#loc31, #loc32])
#loc174 = loc(fused[#loc33, #loc34])
#loc175 = loc(fused[#loc35, #loc36])
#loc176 = loc(fused[#loc37, #loc38])
#loc177 = loc(fused[#loc41, #loc42])
#loc178 = loc(fused[#loc43, #loc44])
#loc179 = loc(fused[#loc45, #loc46])
#loc180 = loc(fused[#loc48, #loc47])
#loc181 = loc(fused[#loc49, #loc50])
#loc182 = loc(fused[#loc52, #loc50])
#loc183 = loc(fused[#loc54, #loc53])
#loc184 = loc(fused[#loc55, #loc56])
#loc185 = loc(fused[#loc58, #loc59, #loc60, #loc56])
#loc186 = loc(fused[#loc62, #loc63])
#loc187 = loc(fused[#loc64, #loc65])
#loc188 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc189 = loc(fused[#loc70, #loc69])
#loc190 = loc(fused[#loc74, #loc75])
#loc191 = loc(fused[#loc76, #loc77])
#loc192 = loc(fused[#loc78, #loc79])
#loc193 = loc(fused[#loc81, #loc80])
#loc194 = loc(fused[#loc82, #loc83])
#loc195 = loc(fused[#loc85, #loc83])
#loc196 = loc(fused[#loc87, #loc86])
#loc197 = loc(fused[#loc88, #loc89])
#loc198 = loc(fused[#loc91, #loc89])
#loc199 = loc(fused[#loc92, #loc93])
#loc200 = loc(fused[#loc94, #loc95])
#loc201 = loc(fused[#loc96, #loc97, #loc98, #loc93])
#loc202 = loc(fused[#loc100, #loc99])
#loc203 = loc(fused[#loc105, #loc106])
#loc204 = loc(fused[#loc107, #loc108])
#loc205 = loc(fused[#loc109, #loc110])
#loc206 = loc(fused[#loc112, #loc111])
#loc207 = loc(fused[#loc113, #loc114])
#loc208 = loc(fused[#loc116, #loc117, #loc118, #loc114])
#loc209 = loc(fused[#loc123, #loc121])
#loc210 = loc(fused[#loc124, #loc125])
#loc211 = loc(fused[#loc127, #loc125])
#loc212 = loc(fused[#loc128, #loc129])
#loc213 = loc(fused[#loc131, #loc130])
#loc214 = loc(fused[#loc134, #loc135])
#loc215 = loc(fused[#loc136, #loc137])
#loc216 = loc(fused[#loc138, #loc139])
#loc217 = loc(fused[#loc141, #loc140])
#loc218 = loc(fused[#loc142, #loc143])
#loc219 = loc(fused[#loc145, #loc143])
#loc220 = loc(fused[#loc148, #loc146])
#loc221 = loc(fused[#loc149, #loc150])
#loc222 = loc(fused[#loc152, #loc150])
#loc223 = loc(fused[#loc153, #loc154])
#loc224 = loc(fused[#loc156, #loc155])
