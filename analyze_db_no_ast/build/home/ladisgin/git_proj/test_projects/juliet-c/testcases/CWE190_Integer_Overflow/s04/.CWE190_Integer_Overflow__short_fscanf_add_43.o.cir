!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc8 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":25:23)
#loc9 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":25:30)
#loc32 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":48:27)
#loc33 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":48:34)
#loc53 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":67:27)
#loc54 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":67:34)
#loc90 = loc(fused[#loc8, #loc9])
#loc98 = loc(fused[#loc32, #loc33])
#loc106 = loc(fused[#loc53, #loc54])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_add_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc87)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc88)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%hd\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private  @_ZN44CWE190_Integer_Overflow__short_fscanf_add_43L9badSourceERs(%arg0: !cir.ptr<!s16i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc90)
    cir.store %arg0, %0 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc10)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc11)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc88)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc13)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc11)
    cir.return loc(#loc7)
  } loc(#loc89)
  cir.func private  @printIntLine(!s32i) loc(#loc91)
  cir.func  @_ZN44CWE190_Integer_Overflow__short_fscanf_add_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc93)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc20)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc94)
    cir.call @_ZN44CWE190_Integer_Overflow__short_fscanf_add_43L9badSourceERs(%0) : (!cir.ptr<!s16i>) -> () loc(#loc22)
    cir.scope {
      %3 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc96)
      %4 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc27)
      %5 = cir.cast(integral, %4 : !s16i), !s32i loc(#loc27)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc27)
      %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc27)
      cir.store %8, %3 : !s16i, !cir.ptr<!s16i> loc(#loc96)
      %9 = cir.load %3 : !cir.ptr<!s16i>, !s16i loc(#loc28)
      %10 = cir.cast(integral, %9 : !s16i), !s32i loc(#loc28)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc29)
    } loc(#loc95)
    cir.return loc(#loc17)
  } loc(#loc92)
  cir.func internal private  @_ZN44CWE190_Integer_Overflow__short_fscanf_add_43L13goodG2BSourceERs(%arg0: !cir.ptr<!s16i> loc(fused[#loc32, #loc33])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc98)
    cir.store %arg0, %0 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc34)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc35)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc35)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc36)
    cir.store %2, %3 : !s16i, !cir.ptr<!s16i> loc(#loc99)
    cir.return loc(#loc31)
  } loc(#loc97)
  cir.func internal private  @_ZN44CWE190_Integer_Overflow__short_fscanf_add_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc101)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc41)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc102)
    cir.call @_ZN44CWE190_Integer_Overflow__short_fscanf_add_43L13goodG2BSourceERs(%0) : (!cir.ptr<!s16i>) -> () loc(#loc43)
    cir.scope {
      %3 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc104)
      %4 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc48)
      %5 = cir.cast(integral, %4 : !s16i), !s32i loc(#loc48)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc47)
      %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc48)
      %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc48)
      cir.store %8, %3 : !s16i, !cir.ptr<!s16i> loc(#loc104)
      %9 = cir.load %3 : !cir.ptr<!s16i>, !s16i loc(#loc49)
      %10 = cir.cast(integral, %9 : !s16i), !s32i loc(#loc49)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc50)
    } loc(#loc103)
    cir.return loc(#loc38)
  } loc(#loc100)
  cir.func internal private  @_ZN44CWE190_Integer_Overflow__short_fscanf_add_43L13goodB2GSourceERs(%arg0: !cir.ptr<!s16i> loc(fused[#loc53, #loc54])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc106)
    cir.store %arg0, %0 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc55)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc56)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc88)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc58)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc58)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc59)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc56)
    cir.return loc(#loc52)
  } loc(#loc105)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc107)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc62)
  cir.func internal private  @_ZN44CWE190_Integer_Overflow__short_fscanf_add_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc109)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc67)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc110)
    cir.call @_ZN44CWE190_Integer_Overflow__short_fscanf_add_43L13goodB2GSourceERs(%0) : (!cir.ptr<!s16i>) -> () loc(#loc69)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc72)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc72)
      %5 = cir.const #cir.int<32767> : !s32i loc(#loc73)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc112)
      cir.if %6 {
        %7 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc114)
        %8 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc79)
        %9 = cir.cast(integral, %8 : !s16i), !s32i loc(#loc79)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc79)
        %12 = cir.cast(integral, %11 : !s32i), !s16i loc(#loc79)
        cir.store %12, %7 : !s16i, !cir.ptr<!s16i> loc(#loc114)
        %13 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc80)
        %14 = cir.cast(integral, %13 : !s16i), !s32i loc(#loc80)
        cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc81)
      } else {
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc62)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc62)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc82)
      } loc(#loc113)
    } loc(#loc111)
    cir.return loc(#loc64)
  } loc(#loc108)
  cir.func  @_ZN44CWE190_Integer_Overflow__short_fscanf_add_434goodEv() extra(#fn_attr) {
    cir.call @_ZN44CWE190_Integer_Overflow__short_fscanf_add_43L7goodG2BEv() : () -> () loc(#loc85)
    cir.call @_ZN44CWE190_Integer_Overflow__short_fscanf_add_43L7goodB2GEv() : () -> () loc(#loc86)
    cir.return loc(#loc84)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_add_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":28:20)
#loc6 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":25:1)
#loc7 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":29:1)
#loc10 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":26:1)
#loc11 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":28:5)
#loc12 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":28:13)
#loc13 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":28:28)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":31:1)
#loc17 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":41:1)
#loc18 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":33:5)
#loc19 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":33:11)
#loc20 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":34:12)
#loc21 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":34:5)
#loc22 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":35:5)
#loc23 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":36:5)
#loc24 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":40:5)
#loc25 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":38:9)
#loc26 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":38:31)
#loc27 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":38:24)
#loc28 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":39:22)
#loc29 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":39:9)
#loc30 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":48:1)
#loc31 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":52:1)
#loc34 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":49:1)
#loc35 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":51:12)
#loc36 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":51:5)
#loc37 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":54:1)
#loc38 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":64:1)
#loc39 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":56:5)
#loc40 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":56:11)
#loc41 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":57:12)
#loc42 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":57:5)
#loc43 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":58:5)
#loc44 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":59:5)
#loc45 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":63:5)
#loc46 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":61:9)
#loc47 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":61:31)
#loc48 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":61:24)
#loc49 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":62:22)
#loc50 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":62:9)
#loc51 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":67:1)
#loc52 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":71:1)
#loc55 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":68:1)
#loc56 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":70:5)
#loc57 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":70:13)
#loc58 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":70:20)
#loc59 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":70:28)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc61 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc62 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":86:19)
#loc63 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":73:1)
#loc64 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":88:1)
#loc65 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":75:5)
#loc66 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":75:11)
#loc67 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":76:12)
#loc68 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":76:5)
#loc69 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":77:5)
#loc70 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":79:5)
#loc71 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":87:5)
#loc72 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":79:9)
#loc73 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":79:16)
#loc74 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":80:5)
#loc75 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":83:5)
#loc76 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":85:5)
#loc77 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":81:9)
#loc78 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":81:31)
#loc79 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":81:24)
#loc80 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":82:22)
#loc81 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":82:9)
#loc82 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":86:9)
#loc83 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":90:1)
#loc84 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":94:1)
#loc85 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":92:5)
#loc86 = loc("CWE190_Integer_Overflow__short_fscanf_add_43.cpp":93:5)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc89 = loc(fused[#loc6, #loc7])
#loc91 = loc(fused[#loc14, #loc15])
#loc92 = loc(fused[#loc16, #loc17])
#loc93 = loc(fused[#loc18, #loc19])
#loc94 = loc(fused[#loc21, #loc20])
#loc95 = loc(fused[#loc23, #loc24])
#loc96 = loc(fused[#loc25, #loc26])
#loc97 = loc(fused[#loc30, #loc31])
#loc99 = loc(fused[#loc36, #loc35])
#loc100 = loc(fused[#loc37, #loc38])
#loc101 = loc(fused[#loc39, #loc40])
#loc102 = loc(fused[#loc42, #loc41])
#loc103 = loc(fused[#loc44, #loc45])
#loc104 = loc(fused[#loc46, #loc47])
#loc105 = loc(fused[#loc51, #loc52])
#loc107 = loc(fused[#loc60, #loc61])
#loc108 = loc(fused[#loc63, #loc64])
#loc109 = loc(fused[#loc65, #loc66])
#loc110 = loc(fused[#loc68, #loc67])
#loc111 = loc(fused[#loc70, #loc71])
#loc112 = loc(fused[#loc72, #loc73])
#loc113 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc114 = loc(fused[#loc77, #loc78])
#loc115 = loc(fused[#loc83, #loc84])
