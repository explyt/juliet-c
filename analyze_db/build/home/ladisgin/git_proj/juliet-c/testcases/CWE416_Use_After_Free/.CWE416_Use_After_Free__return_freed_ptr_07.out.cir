!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc13 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":18:25)
#loc14 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":18:32)
#loc107 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":148:10)
#loc108 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":148:14)
#loc109 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":148:20)
#loc110 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":148:32)
#loc128 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":43:26)
#loc129 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":43:33)
#loc226 = loc(fused[#loc13, #loc14])
#loc264 = loc(fused[#loc107, #loc108])
#loc265 = loc(fused[#loc109, #loc110])
#loc270 = loc(fused[#loc128, #loc129])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__return_freed_ptr_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc220)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc221)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc222)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc223)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc224)
  cir.func internal private @helperBad(%arg0: !cir.ptr<!s8i> loc(fused[#loc13, #loc14])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["aString", init] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc12)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc227)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["j"] {alignment = 8 : i64} loc(#loc228)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["reversedString", init] {alignment = 8 : i64} loc(#loc229)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc21)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc16)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc20)
    cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
      %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc231)
      cir.if %12 {
        %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc29)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
        %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc29)
        cir.store %15, %2 : !u64i, !cir.ptr<!u64i> loc(#loc233)
        %16 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc33)
        %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc34)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc35)
        %20 = cir.binop(add, %17, %19) : !u64i loc(#loc234)
        %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc235)
        cir.store %22, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
        cir.scope {
          %33 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc238)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc44)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc45)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
          } loc(#loc239)
        } loc(#loc237)
        cir.scope {
          %33 = cir.const #cir.int<0> : !s32i loc(#loc48)
          %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc48)
          cir.store %34, %3 : !u64i, !cir.ptr<!u64i> loc(#loc241)
          cir.for : cond {
            %35 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc50)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc242)
            cir.condition(%37) loc(#loc52)
          } body {
            cir.scope {
              %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
              %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc55)
              %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc56)
              %38 = cir.binop(sub, %36, %37) : !u64i loc(#loc244)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc57)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc57)
              %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc245)
              %42 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc58)
              %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc54)
              %44 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
              %45 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc60)
              %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc61)
              cir.store %43, %46 : !s8i, !cir.ptr<!s8i> loc(#loc246)
            } loc(#loc243)
            cir.yield loc(#loc47)
          } step {
            %35 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc62)
            %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc63)
            cir.store %36, %3 : !u64i, !cir.ptr<!u64i> loc(#loc247)
            cir.yield loc(#loc240)
          } loc(#loc240)
        } loc(#loc240)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc64)
        %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc64)
        %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc66)
        %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc67)
        cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc248)
        %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc68)
        %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
        cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
        %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
        cir.store %31, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
        %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc249)
        cir.return %32 : !cir.ptr<!s8i> loc(#loc249)
      } else {
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc72)
        cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
        %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc250)
        cir.return %14 : !cir.ptr<!s8i> loc(#loc250)
      } loc(#loc232)
    } loc(#loc230)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc12)
  } loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSink\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc74)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc251)
  cir.func no_proto @CWE416_Use_After_Free__return_freed_ptr_07_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc220)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc82)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc254)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["reversedString", init] {alignment = 8 : i64} loc(#loc257)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc74)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc74)
          %7 = cir.call @helperBad(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc88)
          cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc90)
        } loc(#loc256)
      } loc(#loc255)
    } loc(#loc253)
    cir.return loc(#loc78)
  } loc(#loc252)
  cir.func no_proto @CWE416_Use_After_Free__return_freed_ptr_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc259)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    cir.return loc(#loc92)
  } loc(#loc258)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc261)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc104)
  cir.func @main(%arg0: !s32i loc(fused[#loc107, #loc108]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc109, #loc110])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc264)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc265)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc106)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc111)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc112)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc113)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc113)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc114)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc101)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %8 = cir.get_global @CWE416_Use_After_Free__return_freed_ptr_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc266)
    cir.call @CWE416_Use_After_Free__return_freed_ptr_07_good() : () -> () loc(#loc116)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc102)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc103)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %13 = cir.get_global @CWE416_Use_After_Free__return_freed_ptr_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call @CWE416_Use_After_Free__return_freed_ptr_07_bad() : () -> () loc(#loc120)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc104)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    cir.return %17 : !s32i loc(#loc268)
  } loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc125)
  cir.func internal private @helperGood(%arg0: !cir.ptr<!s8i> loc(fused[#loc128, #loc129])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["aString", init] {alignment = 8 : i64} loc(#loc270)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc271)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["j"] {alignment = 8 : i64} loc(#loc272)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["reversedString", init] {alignment = 8 : i64} loc(#loc273)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc131)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc271)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc135)
    cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
      %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc275)
      cir.if %12 {
        %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc144)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
        %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc144)
        cir.store %15, %2 : !u64i, !cir.ptr<!u64i> loc(#loc277)
        %16 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc148)
        %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc149)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc150)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc150)
        %20 = cir.binop(add, %17, %19) : !u64i loc(#loc278)
        %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc148)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc279)
        cir.store %22, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
        cir.scope {
          %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc156)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc156)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc282)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc159)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc160)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
          } loc(#loc283)
        } loc(#loc281)
        cir.scope {
          %30 = cir.const #cir.int<0> : !s32i loc(#loc163)
          %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc163)
          cir.store %31, %3 : !u64i, !cir.ptr<!u64i> loc(#loc285)
          cir.for : cond {
            %32 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc165)
            %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc166)
            %34 = cir.cmp(lt, %32, %33) : !u64i, !cir.bool loc(#loc286)
            cir.condition(%34) loc(#loc167)
          } body {
            cir.scope {
              %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
              %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc170)
              %34 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc171)
              %35 = cir.binop(sub, %33, %34) : !u64i loc(#loc288)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc172)
              %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc172)
              %38 = cir.binop(sub, %35, %37) : !u64i loc(#loc289)
              %39 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc173)
              %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc169)
              %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
              %42 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc175)
              %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc176)
              cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc290)
            } loc(#loc287)
            cir.yield loc(#loc162)
          } step {
            %32 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc177)
            %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc178)
            cir.store %33, %3 : !u64i, !cir.ptr<!u64i> loc(#loc291)
            cir.yield loc(#loc284)
          } loc(#loc284)
        } loc(#loc284)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc179)
        %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc179)
        %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
        %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc181)
        %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc182)
        cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc292)
        %28 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
        cir.store %28, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
        %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc293)
        cir.return %29 : !cir.ptr<!s8i> loc(#loc293)
      } else {
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc185)
        cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc294)
        %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc294)
        cir.return %14 : !cir.ptr<!s8i> loc(#loc294)
      } loc(#loc276)
    } loc(#loc274)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc127)
  } loc(#loc269)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"GoodSink\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc187)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc220)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc193)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc297)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc125)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc125)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc197)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["reversedString", init] {alignment = 8 : i64} loc(#loc300)
          %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc187)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc187)
          %7 = cir.call @helperGood(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc202)
          cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc204)
        } loc(#loc299)
      } loc(#loc298)
    } loc(#loc296)
    cir.return loc(#loc189)
  } loc(#loc295)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc220)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc210)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc303)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["reversedString", init] {alignment = 8 : i64} loc(#loc306)
          %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc216)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc216)
          %7 = cir.call @helperGood(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc217)
          cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc219)
        } loc(#loc305)
      } loc(#loc304)
    } loc(#loc302)
    cir.return loc(#loc206)
  } loc(#loc301)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__return_freed_ptr_07.c":0:0)
#loc1 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":70:1)
#loc2 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":70:25)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":18:1)
#loc12 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":41:1)
#loc15 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":20:5)
#loc16 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":20:16)
#loc17 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":21:5)
#loc18 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":21:12)
#loc19 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":22:5)
#loc20 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":22:29)
#loc21 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":19:1)
#loc22 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":23:5)
#loc23 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":40:5)
#loc24 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":23:9)
#loc25 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":23:20)
#loc26 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":24:5)
#loc27 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":36:5)
#loc28 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":38:5)
#loc29 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":25:13)
#loc30 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":25:20)
#loc31 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":25:9)
#loc32 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":25:27)
#loc33 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":26:35)
#loc34 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":26:42)
#loc35 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":26:44)
#loc36 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":26:45)
#loc37 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":26:9)
#loc38 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":27:9)
#loc39 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":27:47)
#loc40 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":27:13)
#loc41 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":27:31)
#loc42 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":27:37)
#loc43 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":27:38)
#loc44 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":27:44)
#loc45 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":27:43)
#loc46 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":28:9)
#loc47 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":31:9)
#loc48 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":28:18)
#loc49 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":28:14)
#loc50 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":28:21)
#loc51 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":28:25)
#loc52 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":28:23)
#loc53 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":29:9)
#loc54 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":30:33)
#loc55 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":30:41)
#loc56 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":30:43)
#loc57 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":30:45)
#loc58 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":30:46)
#loc59 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":30:13)
#loc60 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":30:28)
#loc61 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":30:29)
#loc62 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":28:29)
#loc63 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":28:28)
#loc64 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":32:29)
#loc65 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":32:9)
#loc66 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":32:24)
#loc67 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":32:25)
#loc68 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":34:9)
#loc69 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":34:14)
#loc70 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":35:16)
#loc71 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":35:9)
#loc72 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":39:16)
#loc73 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":39:9)
#loc74 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":80:47)
#loc75 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc76 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc77 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":74:1)
#loc78 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":88:1)
#loc79 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":76:5)
#loc80 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":87:5)
#loc81 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":76:8)
#loc82 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":76:20)
#loc83 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":77:5)
#loc84 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":78:9)
#loc85 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":86:9)
#loc86 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":80:13)
#loc87 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":80:56)
#loc88 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":80:37)
#loc89 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":81:23)
#loc90 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":81:13)
#loc91 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":133:1)
#loc92 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":137:1)
#loc93 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":135:5)
#loc94 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":135:11)
#loc95 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":136:5)
#loc96 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":136:11)
#loc97 = loc("/usr/include/stdlib.h":575:1)
#loc98 = loc("/usr/include/stdlib.h":575:41)
#loc99 = loc("/usr/include/time.h":76:1)
#loc100 = loc("/usr/include/time.h":76:38)
#loc101 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":153:15)
#loc102 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":155:15)
#loc103 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":158:15)
#loc104 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":160:15)
#loc105 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":148:1)
#loc106 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":163:1)
#loc111 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":149:1)
#loc112 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":151:27)
#loc113 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":151:22)
#loc114 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":151:5)
#loc115 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":153:5)
#loc116 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":154:5)
#loc117 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":154:53)
#loc118 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":155:5)
#loc119 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":158:5)
#loc120 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":159:5)
#loc121 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":159:52)
#loc122 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":160:5)
#loc123 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":162:12)
#loc124 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":162:5)
#loc125 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":100:19)
#loc126 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":43:1)
#loc127 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":65:1)
#loc130 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":45:5)
#loc131 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":45:16)
#loc132 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":46:5)
#loc133 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":46:12)
#loc134 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":47:5)
#loc135 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":47:29)
#loc136 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":44:1)
#loc137 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":48:5)
#loc138 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":64:5)
#loc139 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":48:9)
#loc140 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":48:20)
#loc141 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":49:5)
#loc142 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":60:5)
#loc143 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":62:5)
#loc144 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":50:13)
#loc145 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":50:20)
#loc146 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":50:9)
#loc147 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":50:27)
#loc148 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":51:35)
#loc149 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":51:42)
#loc150 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":51:44)
#loc151 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":51:45)
#loc152 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":51:9)
#loc153 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":52:9)
#loc154 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":52:47)
#loc155 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":52:13)
#loc156 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":52:31)
#loc157 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":52:37)
#loc158 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":52:38)
#loc159 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":52:44)
#loc160 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":52:43)
#loc161 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":53:9)
#loc162 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":56:9)
#loc163 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":53:18)
#loc164 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":53:14)
#loc165 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":53:21)
#loc166 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":53:25)
#loc167 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":53:23)
#loc168 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":54:9)
#loc169 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":55:33)
#loc170 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":55:41)
#loc171 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":55:43)
#loc172 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":55:45)
#loc173 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":55:46)
#loc174 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":55:13)
#loc175 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":55:28)
#loc176 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":55:29)
#loc177 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":53:29)
#loc178 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":53:28)
#loc179 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":57:29)
#loc180 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":57:9)
#loc181 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":57:24)
#loc182 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":57:25)
#loc183 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":59:16)
#loc184 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":59:9)
#loc185 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":63:16)
#loc186 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":63:9)
#loc187 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":106:48)
#loc188 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":95:1)
#loc189 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":114:1)
#loc190 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":97:5)
#loc191 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":113:5)
#loc192 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":97:8)
#loc193 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":97:20)
#loc194 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":98:5)
#loc195 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":101:5)
#loc196 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":103:5)
#loc197 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":100:9)
#loc198 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":104:9)
#loc199 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":112:9)
#loc200 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":106:13)
#loc201 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":106:58)
#loc202 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":106:37)
#loc203 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":107:23)
#loc204 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":107:13)
#loc205 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":117:1)
#loc206 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":131:1)
#loc207 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":119:5)
#loc208 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":130:5)
#loc209 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":119:8)
#loc210 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":119:20)
#loc211 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":120:5)
#loc212 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":121:9)
#loc213 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":129:9)
#loc214 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":123:13)
#loc215 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":123:58)
#loc216 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":123:48)
#loc217 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":123:37)
#loc218 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":124:23)
#loc219 = loc("CWE416_Use_After_Free__return_freed_ptr_07.c":124:13)
#loc220 = loc(fused[#loc1, #loc2])
#loc221 = loc(fused[#loc3, #loc4])
#loc222 = loc(fused[#loc5, #loc6])
#loc223 = loc(fused[#loc7, #loc8])
#loc224 = loc(fused[#loc9, #loc10])
#loc225 = loc(fused[#loc11, #loc12])
#loc227 = loc(fused[#loc15, #loc16])
#loc228 = loc(fused[#loc17, #loc18])
#loc229 = loc(fused[#loc19, #loc20])
#loc230 = loc(fused[#loc22, #loc23])
#loc231 = loc(fused[#loc24, #loc25])
#loc232 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc233 = loc(fused[#loc31, #loc32])
#loc234 = loc(fused[#loc34, #loc35])
#loc235 = loc(fused[#loc33, #loc36])
#loc236 = loc(fused[#loc37, #loc36])
#loc237 = loc(fused[#loc38, #loc39])
#loc238 = loc(fused[#loc40, #loc41])
#loc239 = loc(fused[#loc42, #loc39])
#loc240 = loc(fused[#loc46, #loc47])
#loc241 = loc(fused[#loc49, #loc48])
#loc242 = loc(fused[#loc50, #loc51])
#loc243 = loc(fused[#loc53, #loc47])
#loc244 = loc(fused[#loc55, #loc56])
#loc245 = loc(fused[#loc55, #loc57])
#loc246 = loc(fused[#loc59, #loc58])
#loc247 = loc(fused[#loc63, #loc62])
#loc248 = loc(fused[#loc65, #loc64])
#loc249 = loc(fused[#loc71, #loc70])
#loc250 = loc(fused[#loc73, #loc72])
#loc251 = loc(fused[#loc75, #loc76])
#loc252 = loc(fused[#loc77, #loc78])
#loc253 = loc(fused[#loc79, #loc80])
#loc254 = loc(fused[#loc81, #loc82])
#loc255 = loc(fused[#loc83, #loc80])
#loc256 = loc(fused[#loc84, #loc85])
#loc257 = loc(fused[#loc86, #loc87])
#loc258 = loc(fused[#loc91, #loc92])
#loc259 = loc(fused[#loc93, #loc94])
#loc260 = loc(fused[#loc95, #loc96])
#loc261 = loc(fused[#loc97, #loc98])
#loc262 = loc(fused[#loc99, #loc100])
#loc263 = loc(fused[#loc105, #loc106])
#loc266 = loc(fused[#loc116, #loc117])
#loc267 = loc(fused[#loc120, #loc121])
#loc268 = loc(fused[#loc124, #loc123])
#loc269 = loc(fused[#loc126, #loc127])
#loc271 = loc(fused[#loc130, #loc131])
#loc272 = loc(fused[#loc132, #loc133])
#loc273 = loc(fused[#loc134, #loc135])
#loc274 = loc(fused[#loc137, #loc138])
#loc275 = loc(fused[#loc139, #loc140])
#loc276 = loc(fused[#loc141, #loc142, #loc143, #loc138])
#loc277 = loc(fused[#loc146, #loc147])
#loc278 = loc(fused[#loc149, #loc150])
#loc279 = loc(fused[#loc148, #loc151])
#loc280 = loc(fused[#loc152, #loc151])
#loc281 = loc(fused[#loc153, #loc154])
#loc282 = loc(fused[#loc155, #loc156])
#loc283 = loc(fused[#loc157, #loc154])
#loc284 = loc(fused[#loc161, #loc162])
#loc285 = loc(fused[#loc164, #loc163])
#loc286 = loc(fused[#loc165, #loc166])
#loc287 = loc(fused[#loc168, #loc162])
#loc288 = loc(fused[#loc170, #loc171])
#loc289 = loc(fused[#loc170, #loc172])
#loc290 = loc(fused[#loc174, #loc173])
#loc291 = loc(fused[#loc178, #loc177])
#loc292 = loc(fused[#loc180, #loc179])
#loc293 = loc(fused[#loc184, #loc183])
#loc294 = loc(fused[#loc186, #loc185])
#loc295 = loc(fused[#loc188, #loc189])
#loc296 = loc(fused[#loc190, #loc191])
#loc297 = loc(fused[#loc192, #loc193])
#loc298 = loc(fused[#loc194, #loc195, #loc196, #loc191])
#loc299 = loc(fused[#loc198, #loc199])
#loc300 = loc(fused[#loc200, #loc201])
#loc301 = loc(fused[#loc205, #loc206])
#loc302 = loc(fused[#loc207, #loc208])
#loc303 = loc(fused[#loc209, #loc210])
#loc304 = loc(fused[#loc211, #loc208])
#loc305 = loc(fused[#loc212, #loc213])
#loc306 = loc(fused[#loc214, #loc215])
