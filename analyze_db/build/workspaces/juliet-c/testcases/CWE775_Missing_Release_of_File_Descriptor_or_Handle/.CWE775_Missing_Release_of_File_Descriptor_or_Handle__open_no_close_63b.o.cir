!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":30:85)
#loc4 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":30:91)
#loc13 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":42:89)
#loc14 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":42:95)
#loc28 = loc(fused[#loc3, #loc4])
#loc32 = loc(fused[#loc13, #loc14])
module @"/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc28)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc29)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc7)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc6)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc8)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc29)
    cir.return loc(#loc2)
  } loc(#loc27)
  cir.func private @close(!s32i) -> !s32i loc(#loc30)
  cir.func @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b_goodB2GSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc13, #loc14])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc32)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc33)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc17)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc33)
    cir.br ^bb1 loc(#loc34)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc23)
    %7 = cir.cmp(ne, %4, %6) : !s32i, !cir.bool loc(#loc35)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc36)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %9 = cir.call @close(%8) : (!s32i) -> !s32i loc(#loc26)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc12)
  } loc(#loc31)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":0:0)
#loc1 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":30:1)
#loc2 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":35:1)
#loc5 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":32:5)
#loc6 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":32:17)
#loc7 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":31:1)
#loc8 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":32:16)
#loc9 = loc("/usr/include/unistd.h":358:1)
#loc10 = loc("/usr/include/unistd.h":358:27)
#loc11 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":42:1)
#loc12 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":50:1)
#loc15 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":44:5)
#loc16 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":44:17)
#loc17 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":43:1)
#loc18 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":44:16)
#loc19 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":46:5)
#loc20 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":49:5)
#loc21 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":46:9)
#loc22 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":46:18)
#loc23 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":46:17)
#loc24 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":47:5)
#loc25 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":48:15)
#loc26 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_63b.c":48:9)
#loc27 = loc(fused[#loc1, #loc2])
#loc29 = loc(fused[#loc5, #loc6])
#loc30 = loc(fused[#loc9, #loc10])
#loc31 = loc(fused[#loc11, #loc12])
#loc33 = loc(fused[#loc15, #loc16])
#loc34 = loc(fused[#loc19, #loc20])
#loc35 = loc(fused[#loc21, #loc22])
#loc36 = loc(fused[#loc24, #loc20])
