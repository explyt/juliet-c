!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc215)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc216)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc217)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc219)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc220)
  cir.func private @printIntLine(!s32i) loc(#loc221)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc222)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc224)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc225)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc226)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc227)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc29)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb1 loc(#loc229)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc230)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc33)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %8 ^bb2, ^bb10 loc(#loc231)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc232)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc224)
    cir.store %9, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc224)
    cir.br ^bb4 loc(#loc233)
  ^bb4:  // pred: ^bb3
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
    %11 = cir.const #cir.int<3> : !s32i loc(#loc41)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc41)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc41)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc41)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc41)
    %17 = cir.binop(add, %14, %16) : !u64i loc(#loc41)
    %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc41)
    %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc216)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc43)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc234)
    cir.brcond %24 ^bb5, ^bb6 loc(#loc235)
  ^bb5:  // pred: ^bb4
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc48)
    %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc49)
    cir.store %26, %3 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb7 loc(#loc46)
  ^bb6:  // pred: ^bb4
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb7 loc(#loc39)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc39)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc37)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc32)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc32)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc237)
  ^bb12:  // pred: ^bb11
    %29 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc55)
    %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc56)
    %32 = cir.const #cir.int<4> : !u64i loc(#loc238)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc239)
    %34 = cir.call @malloc(%33) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc55)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc240)
    cir.store %35, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc241)
    cir.br ^bb13 loc(#loc242)
  ^bb13:  // pred: ^bb12
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %37 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc64)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc64)
    %39 = cir.cmp(eq, %36, %38) : !cir.ptr<!s32i>, !cir.bool loc(#loc243)
    cir.brcond %39 ^bb14, ^bb15 loc(#loc244)
  ^bb14:  // pred: ^bb13
    %40 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc66)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %42 = cir.unary(minus, %41) nsw : !s32i, !s32i loc(#loc68)
    cir.call @exit(%42) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
    cir.br ^bb15 loc(#loc62)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc62)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc245)
  ^bb17:  // pred: ^bb16
    %43 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc71)
    cir.store %44, %1 : !u64i, !cir.ptr<!u64i> loc(#loc246)
    cir.br ^bb18 loc(#loc245)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc74)
    %48 = cir.cmp(lt, %45, %47) : !u64i, !cir.bool loc(#loc247)
    cir.brcond %48 ^bb19, ^bb23 loc(#loc75)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc248)
  ^bb20:  // pred: ^bb19
    %49 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %50 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
    %51 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc79)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s32i>, %51 : !u64i), !cir.ptr<!s32i> loc(#loc80)
    cir.store %49, %52 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb21 loc(#loc70)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc70)
  ^bb22:  // pred: ^bb21
    %53 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc81)
    %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc82)
    cir.store %54, %1 : !u64i, !cir.ptr<!u64i> loc(#loc250)
    cir.br ^bb18 loc(#loc245)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc70)
  ^bb24:  // pred: ^bb23
    %55 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!s32i>, %56 : !s32i), !cir.ptr<!s32i> loc(#loc85)
    %58 = cir.load %57 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.call @printIntLine(%58) : (!s32i) -> () loc(#loc86)
    %59 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc87)
    cir.call @free(%60) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
    cir.br ^bb25 loc(#loc54)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc19)
  } loc(#loc223)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc252)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc91)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc253)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc93)
    cir.return loc(#loc90)
  } loc(#loc251)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc96)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc97)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    cir.return %2 : !s32i loc(#loc255)
  } loc(#loc254)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc99)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc258)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc259)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc109)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    cir.br ^bb1 loc(#loc261)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc262)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc113)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc113)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc263)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb4 loc(#loc116)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc119)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb4 loc(#loc112)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc265)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc123)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc124)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc266)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc267)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc123)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc268)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc269)
    cir.br ^bb7 loc(#loc270)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc132)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc271)
    cir.brcond %21 ^bb8, ^bb9 loc(#loc272)
  ^bb8:  // pred: ^bb7
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc134)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc136)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
    cir.br ^bb9 loc(#loc130)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc130)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc273)
  ^bb11:  // pred: ^bb10
    %25 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc139)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc274)
    cir.br ^bb12 loc(#loc273)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc141)
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc142)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc275)
    cir.brcond %30 ^bb13, ^bb17 loc(#loc143)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc276)
  ^bb14:  // pred: ^bb13
    %31 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc148)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.br ^bb15 loc(#loc138)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc138)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc150)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc278)
    cir.br ^bb12 loc(#loc273)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc138)
  ^bb18:  // pred: ^bb17
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc153)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc154)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc155)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc156)
    cir.br ^bb19 loc(#loc122)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc101)
  } loc(#loc256)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc159)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    cir.return %2 : !s32i loc(#loc280)
  } loc(#loc279)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc282)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc283)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc284)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc170)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb1 loc(#loc286)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc287)
    %6 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc174)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc174)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc288)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc177)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.br ^bb3 loc(#loc173)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc173)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc290)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc181)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc182)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc291)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc292)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc181)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc293)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc294)
    cir.br ^bb6 loc(#loc295)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc189)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc190)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc190)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc296)
    cir.brcond %19 ^bb7, ^bb8 loc(#loc297)
  ^bb7:  // pred: ^bb6
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc192)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc194)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc192)
    cir.br ^bb8 loc(#loc188)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc188)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc298)
  ^bb10:  // pred: ^bb9
    %23 = cir.const #cir.int<0> : !s32i loc(#loc197)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc197)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc299)
    cir.br ^bb11 loc(#loc298)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc199)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc200)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc300)
    cir.brcond %28 ^bb12, ^bb16 loc(#loc201)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc301)
  ^bb13:  // pred: ^bb12
    %29 = cir.const #cir.int<0> : !s32i loc(#loc203)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc204)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc205)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc206)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb14 loc(#loc196)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc196)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc207)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc208)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc303)
    cir.br ^bb11 loc(#loc298)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc196)
  ^bb17:  // pred: ^bb16
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc209)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc210)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc211)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc212)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc213)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc214)
    cir.br ^bb18 loc(#loc180)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc162)
  } loc(#loc281)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":54:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":37:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":72:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":45:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":45:49)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":59:9)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":59:16)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":60:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":60:14)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":39:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":39:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":41:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":41:12)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":41:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":42:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":57:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":42:8)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":42:26)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":43:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":44:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":56:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":47:13)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":55:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":47:23)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":47:36)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":47:53)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":47:17)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":47:63)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":48:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":51:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":53:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":50:29)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":50:24)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":50:17)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":50:40)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":54:17)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":58:5)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":71:5)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":63:28)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":63:35)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":63:42)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":63:52)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":63:53)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":63:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":64:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":64:43)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":64:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":64:27)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":64:33)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":64:34)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":64:40)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":64:39)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":65:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":68:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":65:18)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":65:14)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":65:21)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":65:33)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":65:23)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":66:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":67:29)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":67:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":67:24)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":67:25)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":65:40)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":65:39)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":69:22)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":69:33)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":69:34)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":69:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":70:14)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":70:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":137:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":141:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":139:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":139:14)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":140:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":140:14)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":25:1)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":28:1)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":27:12)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":27:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":87:19)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":79:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":108:1)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":95:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":95:16)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":96:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":96:14)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":81:5)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":81:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":83:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":83:12)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":83:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":84:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":93:5)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":84:8)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":84:27)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":85:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":88:5)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":90:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":87:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":92:16)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":92:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":94:5)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":107:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":99:28)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":99:35)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":99:42)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":99:52)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":99:53)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":99:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":100:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":100:43)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":100:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":100:27)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":100:33)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":100:34)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":100:40)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":100:39)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":101:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":104:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":101:18)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":101:14)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":101:21)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":101:33)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":101:23)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":102:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":103:29)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":103:13)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":103:24)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":103:25)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":101:40)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":101:39)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":105:22)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":105:33)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":105:34)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":105:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":106:14)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":106:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":30:1)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":33:1)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":32:12)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":32:5)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":111:1)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":135:1)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":122:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":122:16)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":123:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":123:14)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":113:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":113:9)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":115:13)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":115:12)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":115:5)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":116:5)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":120:5)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":116:8)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":116:26)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":117:5)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":119:16)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":119:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":121:5)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":134:5)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":126:28)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":126:35)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":126:42)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":126:52)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":126:53)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":126:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":127:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":127:43)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":127:13)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":127:27)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":127:33)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":127:34)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":127:40)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":127:39)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":128:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":131:9)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":128:18)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":128:14)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":128:21)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":128:33)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":128:23)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":129:9)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":130:29)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":130:13)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":130:24)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":130:25)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":128:40)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":128:39)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":132:22)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":132:33)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":132:34)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":132:9)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":133:14)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_08.c":133:9)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc5, #loc6])
#loc218 = loc(fused[#loc7, #loc8])
#loc219 = loc(fused[#loc10, #loc11])
#loc220 = loc(fused[#loc12, #loc13])
#loc221 = loc(fused[#loc14, #loc15])
#loc222 = loc(fused[#loc16, #loc17])
#loc223 = loc(fused[#loc18, #loc19])
#loc224 = loc(fused[#loc20, #loc21])
#loc225 = loc(fused[#loc22, #loc23])
#loc226 = loc(fused[#loc24, #loc25])
#loc227 = loc(fused[#loc26, #loc27])
#loc228 = loc(fused[#loc30, #loc28])
#loc229 = loc(fused[#loc31, #loc32])
#loc230 = loc(fused[#loc33, #loc34])
#loc231 = loc(fused[#loc35, #loc32])
#loc232 = loc(fused[#loc36, #loc37])
#loc233 = loc(fused[#loc38, #loc39])
#loc234 = loc(fused[#loc43, #loc44])
#loc235 = loc(fused[#loc45, #loc46, #loc47, #loc39])
#loc236 = loc(fused[#loc50, #loc51])
#loc237 = loc(fused[#loc53, #loc54])
#loc238 = loc(fused[#loc57, #loc58])
#loc239 = loc(fused[#loc56, #loc58])
#loc240 = loc(fused[#loc55, #loc59])
#loc241 = loc(fused[#loc60, #loc59])
#loc242 = loc(fused[#loc61, #loc62])
#loc243 = loc(fused[#loc63, #loc64])
#loc244 = loc(fused[#loc65, #loc62])
#loc245 = loc(fused[#loc69, #loc70])
#loc246 = loc(fused[#loc72, #loc71])
#loc247 = loc(fused[#loc73, #loc74])
#loc248 = loc(fused[#loc76, #loc70])
#loc249 = loc(fused[#loc78, #loc77])
#loc250 = loc(fused[#loc82, #loc81])
#loc251 = loc(fused[#loc89, #loc90])
#loc252 = loc(fused[#loc91, #loc92])
#loc253 = loc(fused[#loc93, #loc94])
#loc254 = loc(fused[#loc95, #loc96])
#loc255 = loc(fused[#loc98, #loc97])
#loc256 = loc(fused[#loc100, #loc101])
#loc257 = loc(fused[#loc102, #loc103])
#loc258 = loc(fused[#loc104, #loc105])
#loc259 = loc(fused[#loc106, #loc107])
#loc260 = loc(fused[#loc110, #loc108])
#loc261 = loc(fused[#loc111, #loc112])
#loc262 = loc(fused[#loc113, #loc114])
#loc263 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc264 = loc(fused[#loc120, #loc119])
#loc265 = loc(fused[#loc121, #loc122])
#loc266 = loc(fused[#loc125, #loc126])
#loc267 = loc(fused[#loc124, #loc126])
#loc268 = loc(fused[#loc123, #loc127])
#loc269 = loc(fused[#loc128, #loc127])
#loc270 = loc(fused[#loc129, #loc130])
#loc271 = loc(fused[#loc131, #loc132])
#loc272 = loc(fused[#loc133, #loc130])
#loc273 = loc(fused[#loc137, #loc138])
#loc274 = loc(fused[#loc140, #loc139])
#loc275 = loc(fused[#loc141, #loc142])
#loc276 = loc(fused[#loc144, #loc138])
#loc277 = loc(fused[#loc146, #loc145])
#loc278 = loc(fused[#loc150, #loc149])
#loc279 = loc(fused[#loc157, #loc158])
#loc280 = loc(fused[#loc160, #loc159])
#loc281 = loc(fused[#loc161, #loc162])
#loc282 = loc(fused[#loc163, #loc164])
#loc283 = loc(fused[#loc165, #loc166])
#loc284 = loc(fused[#loc167, #loc168])
#loc285 = loc(fused[#loc171, #loc169])
#loc286 = loc(fused[#loc172, #loc173])
#loc287 = loc(fused[#loc174, #loc175])
#loc288 = loc(fused[#loc176, #loc173])
#loc289 = loc(fused[#loc178, #loc177])
#loc290 = loc(fused[#loc179, #loc180])
#loc291 = loc(fused[#loc183, #loc184])
#loc292 = loc(fused[#loc182, #loc184])
#loc293 = loc(fused[#loc181, #loc185])
#loc294 = loc(fused[#loc186, #loc185])
#loc295 = loc(fused[#loc187, #loc188])
#loc296 = loc(fused[#loc189, #loc190])
#loc297 = loc(fused[#loc191, #loc188])
#loc298 = loc(fused[#loc195, #loc196])
#loc299 = loc(fused[#loc198, #loc197])
#loc300 = loc(fused[#loc199, #loc200])
#loc301 = loc(fused[#loc202, #loc196])
#loc302 = loc(fused[#loc204, #loc203])
#loc303 = loc(fused[#loc208, #loc207])
