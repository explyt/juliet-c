!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":467:10)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":467:14)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":467:20)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":467:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc891 = loc(fused[#loc284, #loc285])
#loc892 = loc(fused[#loc286, #loc287])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc772)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc773)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc774)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc775)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc776)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc777)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc778)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc779)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc780)
  cir.func private @close(!s32i) -> !s32i loc(#loc781)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc782)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc23)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc783)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc26)
  cir.func private @printIntLine(!s32i) loc(#loc784)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc786)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc787)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc787)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc787)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc788)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc790)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc790)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc39)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc39)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc793)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc794)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc795)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc796)
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc797)
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc798)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc53)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc53)
          cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc796)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc55)
          %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc55)
          cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc797)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
          cir.store %20, %13 : !u64i, !cir.ptr<!u64i> loc(#loc798)
          cir.scope {
            cir.do {
              %21 = cir.const #cir.int<2> : !s32i loc(#loc62)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc63)
              %23 = cir.const #cir.int<6> : !s32i loc(#loc64)
              %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc65)
              cir.store %24, %11 : !s32i, !cir.ptr<!s32i> loc(#loc800)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc70)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc71)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc71)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc802)
                cir.if %81 {
                  cir.break loc(#loc73)
                } loc(#loc803)
              } loc(#loc801)
              %25 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc804)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc76)
              %27 = cir.const #cir.int<16> : !u64i loc(#loc805)
              cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc806)
              %28 = cir.const #cir.int<2> : !s32i loc(#loc81)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc81)
              %30 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc807)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc84)
              %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc84)
              %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
              %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
              cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc808)
              %35 = cir.const #cir.int<27015> : !s32i loc(#loc88)
              %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc88)
              %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc89)
              %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
              cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc809)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                %79 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc811)
                %80 = cir.const #cir.int<16> : !u64i loc(#loc812)
                %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc812)
                %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc100)
                %83 = cir.const #cir.int<1> : !s32i loc(#loc101)
                %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc101)
                %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc813)
                cir.if %85 {
                  cir.break loc(#loc103)
                } loc(#loc814)
              } loc(#loc810)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %79 = cir.const #cir.int<5> : !s32i loc(#loc107)
                %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc108)
                %81 = cir.const #cir.int<1> : !s32i loc(#loc109)
                %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc109)
                %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc816)
                cir.if %83 {
                  cir.break loc(#loc111)
                } loc(#loc817)
              } loc(#loc815)
              %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc113)
              %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc114)
              %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc115)
              cir.store %42, %12 : !s32i, !cir.ptr<!s32i> loc(#loc818)
              cir.scope {
                %78 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc121)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc121)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc820)
                cir.if %81 {
                  cir.break loc(#loc123)
                } loc(#loc821)
              } loc(#loc819)
              %43 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
              %45 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc126)
              %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc127)
              %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc822)
              %48 = cir.const #cir.int<1> : !u64i loc(#loc823)
              %49 = cir.const #cir.int<100> : !s32i loc(#loc132)
              %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc132)
              %51 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc133)
              %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc824)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc134)
              %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc825)
              %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc826)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc136)
              %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc137)
              %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc137)
              cir.store %59, %8 : !s32i, !cir.ptr<!s32i> loc(#loc827)
              cir.scope {
                %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc143)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc143)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc829)
                %82 = cir.ternary(%81, true {
                  %83 = cir.const #true loc(#loc144)
                  cir.yield %83 : !cir.bool loc(#loc144)
                }, false {
                  %83 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                  %84 = cir.const #cir.int<0> : !s32i loc(#loc146)
                  %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc830)
                  %86 = cir.ternary(%85, true {
                    %87 = cir.const #true loc(#loc144)
                    cir.yield %87 : !cir.bool loc(#loc144)
                  }, false {
                    %87 = cir.const #false loc(#loc144)
                    cir.yield %87 : !cir.bool loc(#loc144)
                  }) : (!cir.bool) -> !cir.bool loc(#loc144)
                  cir.yield %86 : !cir.bool loc(#loc144)
                }) : (!cir.bool) -> !cir.bool loc(#loc144)
                cir.if %82 {
                  cir.break loc(#loc148)
                } loc(#loc831)
              } loc(#loc828)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc149)
              %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc149)
              %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
              %63 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc151)
              %64 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc152)
              %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc152)
              %66 = cir.const #cir.int<1> : !u64i loc(#loc832)
              %67 = cir.binop(div, %65, %66) : !u64i loc(#loc833)
              %68 = cir.binop(add, %63, %67) : !u64i loc(#loc834)
              %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc155)
              cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc835)
              %70 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc156)
              %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
              %72 = cir.const #cir.int<13> : !s32i loc(#loc158)
              %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc156)
              cir.store %73, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc836)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc163)
                cir.if %79 {
                  %80 = cir.const #cir.int<0> : !s32i loc(#loc165)
                  %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc165)
                  %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                  cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc839)
                } loc(#loc838)
              } loc(#loc837)
              %74 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc168)
              %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
              %76 = cir.const #cir.int<10> : !s32i loc(#loc170)
              %77 = cir.call @strchr(%75, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc168)
              cir.store %77, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc840)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc175)
                cir.if %79 {
                  %80 = cir.const #cir.int<0> : !s32i loc(#loc177)
                  %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc177)
                  %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
                  cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc843)
                } loc(#loc842)
              } loc(#loc841)
              cir.yield loc(#loc61)
            } while {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc180)
              %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc180)
              cir.condition(%22) loc(#loc180)
            } loc(#loc799)
          } loc(#loc799)
          cir.scope {
            %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc183)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc184)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc184)
            %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc845)
            cir.if %24 {
              %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc186)
              %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc187)
            } loc(#loc846)
          } loc(#loc844)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc190)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc191)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc191)
            %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc848)
            cir.if %24 {
              %25 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc193)
              %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc194)
            } loc(#loc849)
          } loc(#loc847)
        } loc(#loc792)
      } else {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc195)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc23)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc23)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc195)
      } loc(#loc791)
    } loc(#loc789)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc851)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc851)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc199)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc199)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc854)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc855)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc856)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc212)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc26)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc26)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc212)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc214)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc858)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc216)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc860)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc220)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc862)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc222)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc223)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc863)
                  cir.condition(%23) loc(#loc224)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc227)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc865)
                  } loc(#loc864)
                  cir.yield loc(#loc219)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc229)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc866)
                  cir.yield loc(#loc861)
                } loc(#loc861)
              } loc(#loc861)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc230)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc231)
            } loc(#loc859)
          } loc(#loc857)
        } loc(#loc853)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc868)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc869)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc870)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc240)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc241)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc242)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc242)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc240)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc243)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc872)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc248)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc875)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc250)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc877)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc254)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc879)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc256)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc880)
                      cir.condition(%26) loc(#loc258)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc260)
                        %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc261)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc882)
                      } loc(#loc881)
                      cir.yield loc(#loc253)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                      %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc263)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc883)
                      cir.yield loc(#loc878)
                    } loc(#loc878)
                  } loc(#loc878)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc264)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc265)
                } loc(#loc876)
              } loc(#loc874)
            } loc(#loc873)
          } loc(#loc871)
        } loc(#loc867)
      } loc(#loc852)
    } loc(#loc850)
    cir.return loc(#loc30)
  } loc(#loc785)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc885)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc268)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc886)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc270)
    cir.return loc(#loc267)
  } loc(#loc884)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc887)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc888)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc889)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc281)
  cir.func @main(%arg0: !s32i loc(fused[#loc284, #loc285]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc286, #loc287])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc891)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc892)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc283)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc288)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc289)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc290)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc290)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc291)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc278)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc278)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc292)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc893)
    cir.call @CWE606_Unchecked_Loop_Condition__char_listen_socket_12_good() : () -> () loc(#loc293)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc279)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc279)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc295)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc280)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc280)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc296)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc894)
    cir.call @CWE606_Unchecked_Loop_Condition__char_listen_socket_12_bad() : () -> () loc(#loc297)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc281)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc281)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc299)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc300)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc895)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc895)
    cir.return %17 : !s32i loc(#loc895)
  } loc(#loc890)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc897)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc898)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc898)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc898)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc308)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc899)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc901)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc901)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc312)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc312)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc904)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc905)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc906)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc907)
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc908)
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc909)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc326)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc326)
          cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc907)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc328)
          %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc328)
          cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc908)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc331)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc332)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc331)
          cir.store %20, %13 : !u64i, !cir.ptr<!u64i> loc(#loc909)
          cir.scope {
            cir.do {
              %21 = cir.const #cir.int<2> : !s32i loc(#loc335)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc336)
              %23 = cir.const #cir.int<6> : !s32i loc(#loc337)
              %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc338)
              cir.store %24, %11 : !s32i, !cir.ptr<!s32i> loc(#loc911)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc343)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc344)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc344)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc913)
                cir.if %81 {
                  cir.break loc(#loc346)
                } loc(#loc914)
              } loc(#loc912)
              %25 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc915)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc349)
              %27 = cir.const #cir.int<16> : !u64i loc(#loc916)
              cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc917)
              %28 = cir.const #cir.int<2> : !s32i loc(#loc354)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc354)
              %30 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc918)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc356)
              %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc356)
              %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
              %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
              cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc919)
              %35 = cir.const #cir.int<27015> : !s32i loc(#loc358)
              %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc358)
              %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc359)
              %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
              cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc920)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc364)
                %79 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc922)
                %80 = cir.const #cir.int<16> : !u64i loc(#loc923)
                %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc923)
                %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc369)
                %83 = cir.const #cir.int<1> : !s32i loc(#loc370)
                %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc370)
                %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc924)
                cir.if %85 {
                  cir.break loc(#loc372)
                } loc(#loc925)
              } loc(#loc921)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc375)
                %79 = cir.const #cir.int<5> : !s32i loc(#loc376)
                %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc377)
                %81 = cir.const #cir.int<1> : !s32i loc(#loc378)
                %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc378)
                %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc927)
                cir.if %83 {
                  cir.break loc(#loc380)
                } loc(#loc928)
              } loc(#loc926)
              %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc381)
              %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc382)
              %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc383)
              %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc384)
              cir.store %42, %12 : !s32i, !cir.ptr<!s32i> loc(#loc929)
              cir.scope {
                %78 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc389)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc390)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc390)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc931)
                cir.if %81 {
                  cir.break loc(#loc392)
                } loc(#loc932)
              } loc(#loc930)
              %43 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc393)
              %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc394)
              %45 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc395)
              %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc396)
              %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc933)
              %48 = cir.const #cir.int<1> : !u64i loc(#loc934)
              %49 = cir.const #cir.int<100> : !s32i loc(#loc401)
              %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc401)
              %51 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc402)
              %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc935)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc403)
              %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc403)
              %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc936)
              %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc937)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc405)
              %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc406)
              %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc406)
              cir.store %59, %8 : !s32i, !cir.ptr<!s32i> loc(#loc938)
              cir.scope {
                %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc411)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc412)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc412)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc940)
                %82 = cir.ternary(%81, true {
                  %83 = cir.const #true loc(#loc413)
                  cir.yield %83 : !cir.bool loc(#loc413)
                }, false {
                  %83 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc414)
                  %84 = cir.const #cir.int<0> : !s32i loc(#loc415)
                  %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc941)
                  %86 = cir.ternary(%85, true {
                    %87 = cir.const #true loc(#loc413)
                    cir.yield %87 : !cir.bool loc(#loc413)
                  }, false {
                    %87 = cir.const #false loc(#loc413)
                    cir.yield %87 : !cir.bool loc(#loc413)
                  }) : (!cir.bool) -> !cir.bool loc(#loc413)
                  cir.yield %86 : !cir.bool loc(#loc413)
                }) : (!cir.bool) -> !cir.bool loc(#loc413)
                cir.if %82 {
                  cir.break loc(#loc417)
                } loc(#loc942)
              } loc(#loc939)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc418)
              %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc418)
              %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc419)
              %63 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc420)
              %64 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc421)
              %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc421)
              %66 = cir.const #cir.int<1> : !u64i loc(#loc943)
              %67 = cir.binop(div, %65, %66) : !u64i loc(#loc944)
              %68 = cir.binop(add, %63, %67) : !u64i loc(#loc945)
              %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc424)
              cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc946)
              %70 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc425)
              %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc426)
              %72 = cir.const #cir.int<13> : !s32i loc(#loc427)
              %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc425)
              cir.store %73, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc947)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc432)
                %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc432)
                cir.if %79 {
                  %80 = cir.const #cir.int<0> : !s32i loc(#loc434)
                  %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc434)
                  %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc435)
                  cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc950)
                } loc(#loc949)
              } loc(#loc948)
              %74 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc437)
              %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc438)
              %76 = cir.const #cir.int<10> : !s32i loc(#loc439)
              %77 = cir.call @strchr(%75, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc437)
              cir.store %77, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc951)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc444)
                %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc444)
                cir.if %79 {
                  %80 = cir.const #cir.int<0> : !s32i loc(#loc446)
                  %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc446)
                  %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc447)
                  cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc954)
                } loc(#loc953)
              } loc(#loc952)
              cir.yield loc(#loc334)
            } while {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc449)
              %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc449)
              cir.condition(%22) loc(#loc449)
            } loc(#loc910)
          } loc(#loc910)
          cir.scope {
            %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc452)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc453)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc453)
            %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc956)
            cir.if %24 {
              %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc455)
              %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc456)
            } loc(#loc957)
          } loc(#loc955)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc459)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc460)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc460)
            %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc959)
            cir.if %24 {
              %25 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc462)
              %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc463)
            } loc(#loc960)
          } loc(#loc958)
        } loc(#loc903)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc962)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc963)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc964)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc965)
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc966)
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc967)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc473)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc473)
          cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc965)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc475)
          %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc475)
          cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc966)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc478)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc479)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc478)
          cir.store %20, %13 : !u64i, !cir.ptr<!u64i> loc(#loc967)
          cir.scope {
            cir.do {
              %21 = cir.const #cir.int<2> : !s32i loc(#loc482)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc483)
              %23 = cir.const #cir.int<6> : !s32i loc(#loc484)
              %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc485)
              cir.store %24, %11 : !s32i, !cir.ptr<!s32i> loc(#loc969)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc490)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc491)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc491)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc971)
                cir.if %81 {
                  cir.break loc(#loc493)
                } loc(#loc972)
              } loc(#loc970)
              %25 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc973)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc496)
              %27 = cir.const #cir.int<16> : !u64i loc(#loc974)
              cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc975)
              %28 = cir.const #cir.int<2> : !s32i loc(#loc501)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc501)
              %30 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc976)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc503)
              %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc503)
              %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
              %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
              cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc977)
              %35 = cir.const #cir.int<27015> : !s32i loc(#loc505)
              %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc505)
              %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc506)
              %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
              cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc978)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc511)
                %79 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc980)
                %80 = cir.const #cir.int<16> : !u64i loc(#loc981)
                %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc981)
                %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc516)
                %83 = cir.const #cir.int<1> : !s32i loc(#loc517)
                %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc517)
                %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc982)
                cir.if %85 {
                  cir.break loc(#loc519)
                } loc(#loc983)
              } loc(#loc979)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc522)
                %79 = cir.const #cir.int<5> : !s32i loc(#loc523)
                %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc524)
                %81 = cir.const #cir.int<1> : !s32i loc(#loc525)
                %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc525)
                %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc985)
                cir.if %83 {
                  cir.break loc(#loc527)
                } loc(#loc986)
              } loc(#loc984)
              %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc528)
              %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc529)
              %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc530)
              %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc531)
              cir.store %42, %12 : !s32i, !cir.ptr<!s32i> loc(#loc987)
              cir.scope {
                %78 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc536)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc537)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc537)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc989)
                cir.if %81 {
                  cir.break loc(#loc539)
                } loc(#loc990)
              } loc(#loc988)
              %43 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc540)
              %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc541)
              %45 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc542)
              %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc543)
              %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc991)
              %48 = cir.const #cir.int<1> : !u64i loc(#loc992)
              %49 = cir.const #cir.int<100> : !s32i loc(#loc548)
              %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc548)
              %51 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc549)
              %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc993)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc550)
              %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc550)
              %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc994)
              %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc995)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc552)
              %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc553)
              %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc553)
              cir.store %59, %8 : !s32i, !cir.ptr<!s32i> loc(#loc996)
              cir.scope {
                %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc558)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc559)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc559)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc998)
                %82 = cir.ternary(%81, true {
                  %83 = cir.const #true loc(#loc560)
                  cir.yield %83 : !cir.bool loc(#loc560)
                }, false {
                  %83 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc561)
                  %84 = cir.const #cir.int<0> : !s32i loc(#loc562)
                  %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc999)
                  %86 = cir.ternary(%85, true {
                    %87 = cir.const #true loc(#loc560)
                    cir.yield %87 : !cir.bool loc(#loc560)
                  }, false {
                    %87 = cir.const #false loc(#loc560)
                    cir.yield %87 : !cir.bool loc(#loc560)
                  }) : (!cir.bool) -> !cir.bool loc(#loc560)
                  cir.yield %86 : !cir.bool loc(#loc560)
                }) : (!cir.bool) -> !cir.bool loc(#loc560)
                cir.if %82 {
                  cir.break loc(#loc564)
                } loc(#loc1000)
              } loc(#loc997)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc565)
              %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc565)
              %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc566)
              %63 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc567)
              %64 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc568)
              %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc568)
              %66 = cir.const #cir.int<1> : !u64i loc(#loc1001)
              %67 = cir.binop(div, %65, %66) : !u64i loc(#loc1002)
              %68 = cir.binop(add, %63, %67) : !u64i loc(#loc1003)
              %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc571)
              cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc1004)
              %70 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc572)
              %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc573)
              %72 = cir.const #cir.int<13> : !s32i loc(#loc574)
              %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc572)
              cir.store %73, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1005)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc579)
                %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc579)
                cir.if %79 {
                  %80 = cir.const #cir.int<0> : !s32i loc(#loc581)
                  %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc581)
                  %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc582)
                  cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc1008)
                } loc(#loc1007)
              } loc(#loc1006)
              %74 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc584)
              %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc585)
              %76 = cir.const #cir.int<10> : !s32i loc(#loc586)
              %77 = cir.call @strchr(%75, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc584)
              cir.store %77, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1009)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc591)
                %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc591)
                cir.if %79 {
                  %80 = cir.const #cir.int<0> : !s32i loc(#loc593)
                  %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc593)
                  %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc594)
                  cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc1012)
                } loc(#loc1011)
              } loc(#loc1010)
              cir.yield loc(#loc481)
            } while {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc596)
              %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc596)
              cir.condition(%22) loc(#loc596)
            } loc(#loc968)
          } loc(#loc968)
          cir.scope {
            %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc599)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc600)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc600)
            %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc1014)
            cir.if %24 {
              %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc602)
              %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc603)
            } loc(#loc1015)
          } loc(#loc1013)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc606)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc607)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc607)
            %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc1017)
            cir.if %24 {
              %25 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc609)
              %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc610)
            } loc(#loc1018)
          } loc(#loc1016)
        } loc(#loc961)
      } loc(#loc902)
    } loc(#loc900)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc1020)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc1020)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc613)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc613)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1023)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc1024)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc1025)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc626)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc627)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc628)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc628)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc626)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc629)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc1027)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc633)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc634)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc1030)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc636)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc1032)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc640)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc1034)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc642)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc643)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc1035)
                      cir.condition(%26) loc(#loc644)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc646)
                        %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc647)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc1037)
                      } loc(#loc1036)
                      cir.yield loc(#loc639)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc648)
                      %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc649)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc1038)
                      cir.yield loc(#loc1033)
                    } loc(#loc1033)
                  } loc(#loc1033)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc650)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc651)
                } loc(#loc1031)
              } loc(#loc1029)
            } loc(#loc1028)
          } loc(#loc1026)
        } loc(#loc1022)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1040)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc1041)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc1042)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc660)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc661)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc662)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc662)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc660)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc663)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc1044)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc667)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc668)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc1047)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc670)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc1049)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc674)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc1051)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc676)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc677)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc1052)
                      cir.condition(%26) loc(#loc678)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc680)
                        %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc681)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc1054)
                      } loc(#loc1053)
                      cir.yield loc(#loc673)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc682)
                      %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc683)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc1055)
                      cir.yield loc(#loc1050)
                    } loc(#loc1050)
                  } loc(#loc1050)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc684)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc685)
                } loc(#loc1048)
              } loc(#loc1046)
            } loc(#loc1045)
          } loc(#loc1043)
        } loc(#loc1039)
      } loc(#loc1021)
    } loc(#loc1019)
    cir.return loc(#loc303)
  } loc(#loc896)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc1057)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc1058)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc1058)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1058)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc692)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1059)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc1061)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc1061)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc696)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc696)
      cir.if %7 {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc701)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc702)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc703)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc703)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc701)
      } else {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc704)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc705)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc706)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc706)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc704)
      } loc(#loc1062)
    } loc(#loc1060)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc1064)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc1064)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc709)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc709)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1067)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc1068)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc1069)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc722)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc723)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc724)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc724)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc722)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc725)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc1071)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc727)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc1073)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc731)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc1075)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc733)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc734)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc1076)
                  cir.condition(%23) loc(#loc735)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc737)
                    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc738)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc1078)
                  } loc(#loc1077)
                  cir.yield loc(#loc730)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc739)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc740)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc1079)
                  cir.yield loc(#loc1074)
                } loc(#loc1074)
              } loc(#loc1074)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc741)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc742)
            } loc(#loc1072)
          } loc(#loc1070)
        } loc(#loc1066)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1081)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc1082)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc1083)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc751)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc752)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc753)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc753)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc751)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc754)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc1085)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc756)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc1087)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc760)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc1089)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc762)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc763)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc1090)
                  cir.condition(%23) loc(#loc764)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc766)
                    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc767)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc1092)
                  } loc(#loc1091)
                  cir.yield loc(#loc759)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc768)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc769)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc1093)
                  cir.yield loc(#loc1088)
                } loc(#loc1088)
              } loc(#loc1088)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc770)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc771)
            } loc(#loc1086)
          } loc(#loc1084)
        } loc(#loc1080)
      } loc(#loc1065)
    } loc(#loc1063)
    cir.return loc(#loc687)
  } loc(#loc1056)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/sys/socket.h":102:1)
#loc6 = loc("/usr/include/sys/socket.h":102:62)
#loc7 = loc("/usr/include/netinet/in.h":404:1)
#loc8 = loc("/usr/include/netinet/in.h":405:40)
#loc9 = loc("/usr/include/sys/socket.h":112:1)
#loc10 = loc("/usr/include/sys/socket.h":113:6)
#loc11 = loc("/usr/include/sys/socket.h":296:1)
#loc12 = loc("/usr/include/sys/socket.h":296:39)
#loc13 = loc("/usr/include/sys/socket.h":306:1)
#loc14 = loc("/usr/include/sys/socket.h":307:38)
#loc15 = loc("/usr/include/sys/socket.h":145:1)
#loc16 = loc("/usr/include/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":246:1)
#loc18 = loc("/usr/include/string.h":247:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("/usr/include/string.h":141:1)
#loc22 = loc("/usr/include/string.h":142:14)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":139:22)
#loc24 = loc("/usr/include/stdio.h":468:1)
#loc25 = loc("/usr/include/stdio.h":468:12)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":145:30)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":49:1)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":178:1)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":51:5)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":51:12)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":52:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":52:28)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":53:12)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":53:5)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":54:5)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":140:5)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":54:8)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":54:33)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":55:5)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":135:5)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":137:5)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":56:9)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":134:9)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":61:13)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":61:17)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":62:13)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":62:32)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":63:13)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":63:19)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":64:13)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":64:35)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":65:13)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":65:35)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":66:13)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":66:41)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":66:30)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":66:37)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":67:13)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":119:21)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":77:39)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":77:48)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":77:61)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":77:32)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":77:17)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":77:72)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":78:17)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":81:17)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":78:21)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":78:37)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":79:17)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":80:21)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":82:24)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":82:25)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":82:34)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":82:37)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":82:51)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":82:17)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":82:52)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":83:38)
#loc82 = loc("/usr/include/netinet/in.h":249:5)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":83:17)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":84:43)
#loc85 = loc("/usr/include/netinet/in.h":251:20)
#loc86 = loc("/usr/include/netinet/in.h":33:15)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":84:17)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":85:42)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":85:36)
#loc90 = loc("/usr/include/netinet/in.h":250:15)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":85:17)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":85:50)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":86:17)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":89:17)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":86:26)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":86:58)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":86:59)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":86:68)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":86:82)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":86:21)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":86:88)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":87:17)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":88:21)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":90:17)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":93:17)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":90:28)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":90:42)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":90:21)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":90:61)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":91:17)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":92:21)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":94:39)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":94:53)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":94:59)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":94:32)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":94:17)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":94:63)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":95:17)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":98:17)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":95:21)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":95:37)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":96:17)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":97:21)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:35)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:58)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:65)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:63)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:49)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:72)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:75)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:86)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:91)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:97)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:107)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:108)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:111)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:30)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:17)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":100:112)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":101:17)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":104:17)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":101:21)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":101:35)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":101:48)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":101:51)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":101:65)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":102:17)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":103:21)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":106:61)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":106:17)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":106:22)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":106:32)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":106:45)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":106:56)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":106:57)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":108:27)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":108:34)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":108:40)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":108:17)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":108:44)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":109:17)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":112:17)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":109:21)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":110:17)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":111:32)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":111:22)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":111:21)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":113:27)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":113:34)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":113:40)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":113:17)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":113:44)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":114:17)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":117:17)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":114:21)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":115:17)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":116:32)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":116:22)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":116:21)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":119:20)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":120:13)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":123:13)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":120:17)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":120:33)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":121:13)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":122:30)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":122:17)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":124:13)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":127:13)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":124:17)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":124:33)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":125:13)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":126:30)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":126:17)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":139:9)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":139:16)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":141:5)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":177:5)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":141:8)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":141:33)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":142:5)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":157:5)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":159:5)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":143:9)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":156:9)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":144:13)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":144:17)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":144:20)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":144:23)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":145:13)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":155:13)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":145:17)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":145:24)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":145:43)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":146:13)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":148:31)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":148:17)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":149:17)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":153:17)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":149:26)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":149:22)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":149:29)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":149:33)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":149:31)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":150:17)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":152:32)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":152:21)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":149:37)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":149:36)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":154:30)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":154:17)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":160:9)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":176:9)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":161:13)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":161:17)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":161:20)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":161:23)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":162:13)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":175:13)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":162:17)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":162:24)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":162:30)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":162:43)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":163:13)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":165:17)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":174:17)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":165:21)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":165:25)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":166:17)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":167:35)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":167:21)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":168:21)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":172:21)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":168:30)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":168:26)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":168:33)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":168:37)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":168:35)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":169:21)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":171:36)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":171:25)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":168:41)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":168:40)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":173:34)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":173:21)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":452:1)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":456:1)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":454:5)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":454:13)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":455:5)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":455:13)
#loc272 = loc("/usr/include/stdlib.h":575:1)
#loc273 = loc("/usr/include/stdlib.h":575:41)
#loc274 = loc("/usr/include/time.h":76:1)
#loc275 = loc("/usr/include/time.h":76:38)
#loc276 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc277 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":472:15)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":474:15)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":477:15)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":479:15)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":467:1)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":482:1)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":468:1)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":470:27)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":470:22)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":470:5)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":472:5)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":473:5)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":473:65)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":474:5)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":477:5)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":478:5)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":478:64)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":479:5)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":481:12)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":481:5)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":187:1)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":396:1)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":189:5)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":189:12)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":190:5)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":190:28)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":191:12)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":191:5)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":192:5)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":355:5)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":192:8)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":192:33)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":193:5)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":273:5)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":275:5)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":194:9)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":272:9)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":199:13)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":199:17)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":200:13)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":200:32)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":201:13)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":201:19)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":202:13)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":202:35)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":203:13)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":203:35)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":204:13)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":204:41)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":204:30)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":204:37)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":205:13)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":257:21)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":215:39)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":215:48)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":215:61)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":215:32)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":215:17)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":215:72)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":216:17)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":219:17)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":216:21)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":216:37)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":217:17)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":218:21)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":220:24)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":220:25)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":220:34)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":220:37)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":220:51)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":220:17)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":220:52)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":221:38)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":221:17)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":222:43)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":222:17)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":223:42)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":223:36)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":223:17)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":223:50)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":224:17)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":227:17)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":224:26)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":224:58)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":224:59)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":224:68)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":224:82)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":224:21)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":224:88)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":225:17)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":226:21)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":228:17)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":231:17)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":228:28)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":228:42)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":228:21)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":228:61)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":229:17)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":230:21)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":232:39)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":232:53)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":232:59)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":232:32)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":232:17)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":232:63)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":233:17)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":236:17)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":233:21)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":233:37)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":234:17)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":235:21)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:35)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:58)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:65)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:63)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:49)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:72)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:75)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:86)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:91)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:97)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:107)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:108)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:111)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:30)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:17)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":238:112)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":239:17)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":242:17)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":239:21)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":239:35)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":239:48)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":239:51)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":239:65)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":240:17)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":241:21)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":244:61)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":244:17)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":244:22)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":244:32)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":244:45)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":244:56)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":244:57)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":246:27)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":246:34)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":246:40)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":246:17)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":246:44)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":247:17)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":250:17)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":247:21)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":248:17)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":249:32)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":249:22)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":249:21)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":251:27)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":251:34)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":251:40)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":251:17)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":251:44)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":252:17)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":255:17)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":252:21)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":253:17)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":254:32)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":254:22)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":254:21)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":257:20)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":258:13)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":261:13)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":258:17)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":258:33)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":259:13)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":260:30)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":260:17)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":262:13)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":265:13)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":262:17)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":262:33)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":263:13)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":264:30)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":264:17)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":276:9)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":354:9)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":281:13)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":281:17)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":282:13)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":282:32)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":283:13)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":283:19)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":284:13)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":284:35)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":285:13)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":285:35)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":286:13)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":286:41)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":286:30)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":286:37)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":287:13)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":339:21)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":297:39)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":297:48)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":297:61)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":297:32)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":297:17)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":297:72)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":298:17)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":301:17)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":298:21)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":298:37)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":299:17)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":300:21)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":302:24)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":302:25)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":302:34)
#loc497 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":302:37)
#loc498 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":302:51)
#loc499 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":302:17)
#loc500 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":302:52)
#loc501 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":303:38)
#loc502 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":303:17)
#loc503 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":304:43)
#loc504 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":304:17)
#loc505 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":305:42)
#loc506 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":305:36)
#loc507 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":305:17)
#loc508 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":305:50)
#loc509 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":306:17)
#loc510 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":309:17)
#loc511 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":306:26)
#loc512 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":306:58)
#loc513 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":306:59)
#loc514 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":306:68)
#loc515 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":306:82)
#loc516 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":306:21)
#loc517 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":306:88)
#loc518 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":307:17)
#loc519 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":308:21)
#loc520 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":310:17)
#loc521 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":313:17)
#loc522 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":310:28)
#loc523 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":310:42)
#loc524 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":310:21)
#loc525 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":310:61)
#loc526 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":311:17)
#loc527 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":312:21)
#loc528 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":314:39)
#loc529 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":314:53)
#loc530 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":314:59)
#loc531 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":314:32)
#loc532 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":314:17)
#loc533 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":314:63)
#loc534 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":315:17)
#loc535 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":318:17)
#loc536 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":315:21)
#loc537 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":315:37)
#loc538 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":316:17)
#loc539 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":317:21)
#loc540 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:35)
#loc541 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:58)
#loc542 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:65)
#loc543 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:63)
#loc544 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:49)
#loc545 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:72)
#loc546 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:75)
#loc547 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:86)
#loc548 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:91)
#loc549 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:97)
#loc550 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:107)
#loc551 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:108)
#loc552 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:111)
#loc553 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:30)
#loc554 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:17)
#loc555 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":320:112)
#loc556 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":321:17)
#loc557 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":324:17)
#loc558 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":321:21)
#loc559 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":321:35)
#loc560 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":321:48)
#loc561 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":321:51)
#loc562 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":321:65)
#loc563 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":322:17)
#loc564 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":323:21)
#loc565 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":326:61)
#loc566 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":326:17)
#loc567 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":326:22)
#loc568 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":326:32)
#loc569 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":326:45)
#loc570 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":326:56)
#loc571 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":326:57)
#loc572 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":328:27)
#loc573 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":328:34)
#loc574 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":328:40)
#loc575 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":328:17)
#loc576 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":328:44)
#loc577 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":329:17)
#loc578 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":332:17)
#loc579 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":329:21)
#loc580 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":330:17)
#loc581 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":331:32)
#loc582 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":331:22)
#loc583 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":331:21)
#loc584 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":333:27)
#loc585 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":333:34)
#loc586 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":333:40)
#loc587 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":333:17)
#loc588 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":333:44)
#loc589 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":334:17)
#loc590 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":337:17)
#loc591 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":334:21)
#loc592 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":335:17)
#loc593 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":336:32)
#loc594 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":336:22)
#loc595 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":336:21)
#loc596 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":339:20)
#loc597 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":340:13)
#loc598 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":343:13)
#loc599 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":340:17)
#loc600 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":340:33)
#loc601 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":341:13)
#loc602 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":342:30)
#loc603 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":342:17)
#loc604 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":344:13)
#loc605 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":347:13)
#loc606 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":344:17)
#loc607 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":344:33)
#loc608 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":345:13)
#loc609 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":346:30)
#loc610 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":346:17)
#loc611 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":356:5)
#loc612 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":395:5)
#loc613 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":356:8)
#loc614 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":356:33)
#loc615 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":357:5)
#loc616 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":375:5)
#loc617 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":377:5)
#loc618 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":358:9)
#loc619 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":374:9)
#loc620 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":359:13)
#loc621 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":359:17)
#loc622 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":359:20)
#loc623 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":359:23)
#loc624 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":360:13)
#loc625 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":373:13)
#loc626 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":360:17)
#loc627 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":360:24)
#loc628 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":360:30)
#loc629 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":360:43)
#loc630 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":361:13)
#loc631 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":363:17)
#loc632 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":372:17)
#loc633 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":363:21)
#loc634 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":363:25)
#loc635 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":364:17)
#loc636 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":365:35)
#loc637 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":365:21)
#loc638 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":366:21)
#loc639 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":370:21)
#loc640 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":366:30)
#loc641 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":366:26)
#loc642 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":366:33)
#loc643 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":366:37)
#loc644 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":366:35)
#loc645 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":367:21)
#loc646 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":369:36)
#loc647 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":369:25)
#loc648 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":366:41)
#loc649 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":366:40)
#loc650 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":371:34)
#loc651 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":371:21)
#loc652 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":378:9)
#loc653 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":394:9)
#loc654 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":379:13)
#loc655 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":379:17)
#loc656 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":379:20)
#loc657 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":379:23)
#loc658 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":380:13)
#loc659 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":393:13)
#loc660 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":380:17)
#loc661 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":380:24)
#loc662 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":380:30)
#loc663 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":380:43)
#loc664 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":381:13)
#loc665 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":383:17)
#loc666 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":392:17)
#loc667 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":383:21)
#loc668 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":383:25)
#loc669 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":384:17)
#loc670 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":385:35)
#loc671 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":385:21)
#loc672 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":386:21)
#loc673 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":390:21)
#loc674 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":386:30)
#loc675 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":386:26)
#loc676 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":386:33)
#loc677 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":386:37)
#loc678 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":386:35)
#loc679 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":387:21)
#loc680 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":389:36)
#loc681 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":389:25)
#loc682 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":386:41)
#loc683 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":386:40)
#loc684 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":391:34)
#loc685 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":391:21)
#loc686 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":401:1)
#loc687 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":450:1)
#loc688 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":403:5)
#loc689 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":403:12)
#loc690 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":404:5)
#loc691 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":404:28)
#loc692 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":405:12)
#loc693 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":405:5)
#loc694 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":406:5)
#loc695 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":415:5)
#loc696 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":406:8)
#loc697 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":406:33)
#loc698 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":407:5)
#loc699 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":410:5)
#loc700 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":412:5)
#loc701 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":409:9)
#loc702 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":409:16)
#loc703 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":409:22)
#loc704 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":414:9)
#loc705 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":414:16)
#loc706 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":414:22)
#loc707 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":416:5)
#loc708 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":449:5)
#loc709 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":416:8)
#loc710 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":416:33)
#loc711 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":417:5)
#loc712 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":432:5)
#loc713 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":434:5)
#loc714 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":418:9)
#loc715 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":431:9)
#loc716 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":419:13)
#loc717 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":419:17)
#loc718 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":419:20)
#loc719 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":419:23)
#loc720 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":420:13)
#loc721 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":430:13)
#loc722 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":420:17)
#loc723 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":420:24)
#loc724 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":420:30)
#loc725 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":420:43)
#loc726 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":421:13)
#loc727 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":423:31)
#loc728 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":423:17)
#loc729 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":424:17)
#loc730 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":428:17)
#loc731 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":424:26)
#loc732 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":424:22)
#loc733 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":424:29)
#loc734 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":424:33)
#loc735 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":424:31)
#loc736 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":425:17)
#loc737 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":427:32)
#loc738 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":427:21)
#loc739 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":424:37)
#loc740 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":424:36)
#loc741 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":429:30)
#loc742 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":429:17)
#loc743 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":435:9)
#loc744 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":448:9)
#loc745 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":436:13)
#loc746 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":436:17)
#loc747 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":436:20)
#loc748 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":436:23)
#loc749 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":437:13)
#loc750 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":447:13)
#loc751 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":437:17)
#loc752 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":437:24)
#loc753 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":437:30)
#loc754 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":437:43)
#loc755 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":438:13)
#loc756 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":440:31)
#loc757 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":440:17)
#loc758 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":441:17)
#loc759 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":445:17)
#loc760 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":441:26)
#loc761 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":441:22)
#loc762 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":441:29)
#loc763 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":441:33)
#loc764 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":441:31)
#loc765 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":442:17)
#loc766 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":444:32)
#loc767 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":444:21)
#loc768 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":441:37)
#loc769 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":441:36)
#loc770 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":446:30)
#loc771 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_12.c":446:17)
#loc772 = loc(fused[#loc1, #loc2])
#loc773 = loc(fused[#loc3, #loc4])
#loc774 = loc(fused[#loc5, #loc6])
#loc775 = loc(fused[#loc7, #loc8])
#loc776 = loc(fused[#loc9, #loc10])
#loc777 = loc(fused[#loc11, #loc12])
#loc778 = loc(fused[#loc13, #loc14])
#loc779 = loc(fused[#loc15, #loc16])
#loc780 = loc(fused[#loc17, #loc18])
#loc781 = loc(fused[#loc19, #loc20])
#loc782 = loc(fused[#loc21, #loc22])
#loc783 = loc(fused[#loc24, #loc25])
#loc784 = loc(fused[#loc27, #loc28])
#loc785 = loc(fused[#loc29, #loc30])
#loc786 = loc(fused[#loc31, #loc32])
#loc787 = loc(fused[#loc33, #loc34])
#loc788 = loc(fused[#loc36, #loc35])
#loc789 = loc(fused[#loc37, #loc38])
#loc790 = loc(fused[#loc39, #loc40])
#loc791 = loc(fused[#loc41, #loc42, #loc43, #loc38])
#loc792 = loc(fused[#loc44, #loc45])
#loc793 = loc(fused[#loc46, #loc47])
#loc794 = loc(fused[#loc48, #loc49])
#loc795 = loc(fused[#loc50, #loc51])
#loc796 = loc(fused[#loc52, #loc53])
#loc797 = loc(fused[#loc54, #loc55])
#loc798 = loc(fused[#loc56, #loc57])
#loc799 = loc(fused[#loc60, #loc61])
#loc800 = loc(fused[#loc66, #loc67])
#loc801 = loc(fused[#loc68, #loc69])
#loc802 = loc(fused[#loc70, #loc71])
#loc803 = loc(fused[#loc72, #loc69])
#loc804 = loc(fused[#loc74, #loc75])
#loc805 = loc(fused[#loc77, #loc78])
#loc806 = loc(fused[#loc79, #loc80])
#loc807 = loc(fused[#loc83, #loc81])
#loc808 = loc(fused[#loc87, #loc84])
#loc809 = loc(fused[#loc91, #loc92])
#loc810 = loc(fused[#loc93, #loc94])
#loc811 = loc(fused[#loc96, #loc97])
#loc812 = loc(fused[#loc98, #loc99])
#loc813 = loc(fused[#loc100, #loc101])
#loc814 = loc(fused[#loc102, #loc94])
#loc815 = loc(fused[#loc104, #loc105])
#loc816 = loc(fused[#loc108, #loc109])
#loc817 = loc(fused[#loc110, #loc105])
#loc818 = loc(fused[#loc116, #loc117])
#loc819 = loc(fused[#loc118, #loc119])
#loc820 = loc(fused[#loc120, #loc121])
#loc821 = loc(fused[#loc122, #loc119])
#loc822 = loc(fused[#loc128, #loc129])
#loc823 = loc(fused[#loc130, #loc131])
#loc824 = loc(fused[#loc132, #loc133])
#loc825 = loc(fused[#loc132, #loc134])
#loc826 = loc(fused[#loc130, #loc135])
#loc827 = loc(fused[#loc138, #loc139])
#loc828 = loc(fused[#loc140, #loc141])
#loc829 = loc(fused[#loc142, #loc143])
#loc830 = loc(fused[#loc145, #loc146])
#loc831 = loc(fused[#loc147, #loc141])
#loc832 = loc(fused[#loc153, #loc154])
#loc833 = loc(fused[#loc152, #loc154])
#loc834 = loc(fused[#loc151, #loc154])
#loc835 = loc(fused[#loc150, #loc149])
#loc836 = loc(fused[#loc159, #loc160])
#loc837 = loc(fused[#loc161, #loc162])
#loc838 = loc(fused[#loc164, #loc162])
#loc839 = loc(fused[#loc167, #loc165])
#loc840 = loc(fused[#loc171, #loc172])
#loc841 = loc(fused[#loc173, #loc174])
#loc842 = loc(fused[#loc176, #loc174])
#loc843 = loc(fused[#loc179, #loc177])
#loc844 = loc(fused[#loc181, #loc182])
#loc845 = loc(fused[#loc183, #loc184])
#loc846 = loc(fused[#loc185, #loc182])
#loc847 = loc(fused[#loc188, #loc189])
#loc848 = loc(fused[#loc190, #loc191])
#loc849 = loc(fused[#loc192, #loc189])
#loc850 = loc(fused[#loc197, #loc198])
#loc851 = loc(fused[#loc199, #loc200])
#loc852 = loc(fused[#loc201, #loc202, #loc203, #loc198])
#loc853 = loc(fused[#loc204, #loc205])
#loc854 = loc(fused[#loc206, #loc207])
#loc855 = loc(fused[#loc206, #loc208])
#loc856 = loc(fused[#loc206, #loc209])
#loc857 = loc(fused[#loc210, #loc211])
#loc858 = loc(fused[#loc212, #loc214])
#loc859 = loc(fused[#loc215, #loc211])
#loc860 = loc(fused[#loc217, #loc216])
#loc861 = loc(fused[#loc218, #loc219])
#loc862 = loc(fused[#loc221, #loc220])
#loc863 = loc(fused[#loc222, #loc223])
#loc864 = loc(fused[#loc225, #loc219])
#loc865 = loc(fused[#loc227, #loc226])
#loc866 = loc(fused[#loc229, #loc228])
#loc867 = loc(fused[#loc232, #loc233])
#loc868 = loc(fused[#loc234, #loc235])
#loc869 = loc(fused[#loc234, #loc236])
#loc870 = loc(fused[#loc234, #loc237])
#loc871 = loc(fused[#loc238, #loc239])
#loc872 = loc(fused[#loc240, #loc243])
#loc873 = loc(fused[#loc244, #loc239])
#loc874 = loc(fused[#loc245, #loc246])
#loc875 = loc(fused[#loc247, #loc248])
#loc876 = loc(fused[#loc249, #loc246])
#loc877 = loc(fused[#loc251, #loc250])
#loc878 = loc(fused[#loc252, #loc253])
#loc879 = loc(fused[#loc255, #loc254])
#loc880 = loc(fused[#loc256, #loc257])
#loc881 = loc(fused[#loc259, #loc253])
#loc882 = loc(fused[#loc261, #loc260])
#loc883 = loc(fused[#loc263, #loc262])
#loc884 = loc(fused[#loc266, #loc267])
#loc885 = loc(fused[#loc268, #loc269])
#loc886 = loc(fused[#loc270, #loc271])
#loc887 = loc(fused[#loc272, #loc273])
#loc888 = loc(fused[#loc274, #loc275])
#loc889 = loc(fused[#loc276, #loc277])
#loc890 = loc(fused[#loc282, #loc283])
#loc893 = loc(fused[#loc293, #loc294])
#loc894 = loc(fused[#loc297, #loc298])
#loc895 = loc(fused[#loc301, #loc300])
#loc896 = loc(fused[#loc302, #loc303])
#loc897 = loc(fused[#loc304, #loc305])
#loc898 = loc(fused[#loc306, #loc307])
#loc899 = loc(fused[#loc309, #loc308])
#loc900 = loc(fused[#loc310, #loc311])
#loc901 = loc(fused[#loc312, #loc313])
#loc902 = loc(fused[#loc314, #loc315, #loc316, #loc311])
#loc903 = loc(fused[#loc317, #loc318])
#loc904 = loc(fused[#loc319, #loc320])
#loc905 = loc(fused[#loc321, #loc322])
#loc906 = loc(fused[#loc323, #loc324])
#loc907 = loc(fused[#loc325, #loc326])
#loc908 = loc(fused[#loc327, #loc328])
#loc909 = loc(fused[#loc329, #loc330])
#loc910 = loc(fused[#loc333, #loc334])
#loc911 = loc(fused[#loc339, #loc340])
#loc912 = loc(fused[#loc341, #loc342])
#loc913 = loc(fused[#loc343, #loc344])
#loc914 = loc(fused[#loc345, #loc342])
#loc915 = loc(fused[#loc347, #loc348])
#loc916 = loc(fused[#loc350, #loc351])
#loc917 = loc(fused[#loc352, #loc353])
#loc918 = loc(fused[#loc355, #loc354])
#loc919 = loc(fused[#loc357, #loc356])
#loc920 = loc(fused[#loc360, #loc361])
#loc921 = loc(fused[#loc362, #loc363])
#loc922 = loc(fused[#loc365, #loc366])
#loc923 = loc(fused[#loc367, #loc368])
#loc924 = loc(fused[#loc369, #loc370])
#loc925 = loc(fused[#loc371, #loc363])
#loc926 = loc(fused[#loc373, #loc374])
#loc927 = loc(fused[#loc377, #loc378])
#loc928 = loc(fused[#loc379, #loc374])
#loc929 = loc(fused[#loc385, #loc386])
#loc930 = loc(fused[#loc387, #loc388])
#loc931 = loc(fused[#loc389, #loc390])
#loc932 = loc(fused[#loc391, #loc388])
#loc933 = loc(fused[#loc397, #loc398])
#loc934 = loc(fused[#loc399, #loc400])
#loc935 = loc(fused[#loc401, #loc402])
#loc936 = loc(fused[#loc401, #loc403])
#loc937 = loc(fused[#loc399, #loc404])
#loc938 = loc(fused[#loc407, #loc408])
#loc939 = loc(fused[#loc409, #loc410])
#loc940 = loc(fused[#loc411, #loc412])
#loc941 = loc(fused[#loc414, #loc415])
#loc942 = loc(fused[#loc416, #loc410])
#loc943 = loc(fused[#loc422, #loc423])
#loc944 = loc(fused[#loc421, #loc423])
#loc945 = loc(fused[#loc420, #loc423])
#loc946 = loc(fused[#loc419, #loc418])
#loc947 = loc(fused[#loc428, #loc429])
#loc948 = loc(fused[#loc430, #loc431])
#loc949 = loc(fused[#loc433, #loc431])
#loc950 = loc(fused[#loc436, #loc434])
#loc951 = loc(fused[#loc440, #loc441])
#loc952 = loc(fused[#loc442, #loc443])
#loc953 = loc(fused[#loc445, #loc443])
#loc954 = loc(fused[#loc448, #loc446])
#loc955 = loc(fused[#loc450, #loc451])
#loc956 = loc(fused[#loc452, #loc453])
#loc957 = loc(fused[#loc454, #loc451])
#loc958 = loc(fused[#loc457, #loc458])
#loc959 = loc(fused[#loc459, #loc460])
#loc960 = loc(fused[#loc461, #loc458])
#loc961 = loc(fused[#loc464, #loc465])
#loc962 = loc(fused[#loc466, #loc467])
#loc963 = loc(fused[#loc468, #loc469])
#loc964 = loc(fused[#loc470, #loc471])
#loc965 = loc(fused[#loc472, #loc473])
#loc966 = loc(fused[#loc474, #loc475])
#loc967 = loc(fused[#loc476, #loc477])
#loc968 = loc(fused[#loc480, #loc481])
#loc969 = loc(fused[#loc486, #loc487])
#loc970 = loc(fused[#loc488, #loc489])
#loc971 = loc(fused[#loc490, #loc491])
#loc972 = loc(fused[#loc492, #loc489])
#loc973 = loc(fused[#loc494, #loc495])
#loc974 = loc(fused[#loc497, #loc498])
#loc975 = loc(fused[#loc499, #loc500])
#loc976 = loc(fused[#loc502, #loc501])
#loc977 = loc(fused[#loc504, #loc503])
#loc978 = loc(fused[#loc507, #loc508])
#loc979 = loc(fused[#loc509, #loc510])
#loc980 = loc(fused[#loc512, #loc513])
#loc981 = loc(fused[#loc514, #loc515])
#loc982 = loc(fused[#loc516, #loc517])
#loc983 = loc(fused[#loc518, #loc510])
#loc984 = loc(fused[#loc520, #loc521])
#loc985 = loc(fused[#loc524, #loc525])
#loc986 = loc(fused[#loc526, #loc521])
#loc987 = loc(fused[#loc532, #loc533])
#loc988 = loc(fused[#loc534, #loc535])
#loc989 = loc(fused[#loc536, #loc537])
#loc990 = loc(fused[#loc538, #loc535])
#loc991 = loc(fused[#loc544, #loc545])
#loc992 = loc(fused[#loc546, #loc547])
#loc993 = loc(fused[#loc548, #loc549])
#loc994 = loc(fused[#loc548, #loc550])
#loc995 = loc(fused[#loc546, #loc551])
#loc996 = loc(fused[#loc554, #loc555])
#loc997 = loc(fused[#loc556, #loc557])
#loc998 = loc(fused[#loc558, #loc559])
#loc999 = loc(fused[#loc561, #loc562])
#loc1000 = loc(fused[#loc563, #loc557])
#loc1001 = loc(fused[#loc569, #loc570])
#loc1002 = loc(fused[#loc568, #loc570])
#loc1003 = loc(fused[#loc567, #loc570])
#loc1004 = loc(fused[#loc566, #loc565])
#loc1005 = loc(fused[#loc575, #loc576])
#loc1006 = loc(fused[#loc577, #loc578])
#loc1007 = loc(fused[#loc580, #loc578])
#loc1008 = loc(fused[#loc583, #loc581])
#loc1009 = loc(fused[#loc587, #loc588])
#loc1010 = loc(fused[#loc589, #loc590])
#loc1011 = loc(fused[#loc592, #loc590])
#loc1012 = loc(fused[#loc595, #loc593])
#loc1013 = loc(fused[#loc597, #loc598])
#loc1014 = loc(fused[#loc599, #loc600])
#loc1015 = loc(fused[#loc601, #loc598])
#loc1016 = loc(fused[#loc604, #loc605])
#loc1017 = loc(fused[#loc606, #loc607])
#loc1018 = loc(fused[#loc608, #loc605])
#loc1019 = loc(fused[#loc611, #loc612])
#loc1020 = loc(fused[#loc613, #loc614])
#loc1021 = loc(fused[#loc615, #loc616, #loc617, #loc612])
#loc1022 = loc(fused[#loc618, #loc619])
#loc1023 = loc(fused[#loc620, #loc621])
#loc1024 = loc(fused[#loc620, #loc622])
#loc1025 = loc(fused[#loc620, #loc623])
#loc1026 = loc(fused[#loc624, #loc625])
#loc1027 = loc(fused[#loc626, #loc629])
#loc1028 = loc(fused[#loc630, #loc625])
#loc1029 = loc(fused[#loc631, #loc632])
#loc1030 = loc(fused[#loc633, #loc634])
#loc1031 = loc(fused[#loc635, #loc632])
#loc1032 = loc(fused[#loc637, #loc636])
#loc1033 = loc(fused[#loc638, #loc639])
#loc1034 = loc(fused[#loc641, #loc640])
#loc1035 = loc(fused[#loc642, #loc643])
#loc1036 = loc(fused[#loc645, #loc639])
#loc1037 = loc(fused[#loc647, #loc646])
#loc1038 = loc(fused[#loc649, #loc648])
#loc1039 = loc(fused[#loc652, #loc653])
#loc1040 = loc(fused[#loc654, #loc655])
#loc1041 = loc(fused[#loc654, #loc656])
#loc1042 = loc(fused[#loc654, #loc657])
#loc1043 = loc(fused[#loc658, #loc659])
#loc1044 = loc(fused[#loc660, #loc663])
#loc1045 = loc(fused[#loc664, #loc659])
#loc1046 = loc(fused[#loc665, #loc666])
#loc1047 = loc(fused[#loc667, #loc668])
#loc1048 = loc(fused[#loc669, #loc666])
#loc1049 = loc(fused[#loc671, #loc670])
#loc1050 = loc(fused[#loc672, #loc673])
#loc1051 = loc(fused[#loc675, #loc674])
#loc1052 = loc(fused[#loc676, #loc677])
#loc1053 = loc(fused[#loc679, #loc673])
#loc1054 = loc(fused[#loc681, #loc680])
#loc1055 = loc(fused[#loc683, #loc682])
#loc1056 = loc(fused[#loc686, #loc687])
#loc1057 = loc(fused[#loc688, #loc689])
#loc1058 = loc(fused[#loc690, #loc691])
#loc1059 = loc(fused[#loc693, #loc692])
#loc1060 = loc(fused[#loc694, #loc695])
#loc1061 = loc(fused[#loc696, #loc697])
#loc1062 = loc(fused[#loc698, #loc699, #loc700, #loc695])
#loc1063 = loc(fused[#loc707, #loc708])
#loc1064 = loc(fused[#loc709, #loc710])
#loc1065 = loc(fused[#loc711, #loc712, #loc713, #loc708])
#loc1066 = loc(fused[#loc714, #loc715])
#loc1067 = loc(fused[#loc716, #loc717])
#loc1068 = loc(fused[#loc716, #loc718])
#loc1069 = loc(fused[#loc716, #loc719])
#loc1070 = loc(fused[#loc720, #loc721])
#loc1071 = loc(fused[#loc722, #loc725])
#loc1072 = loc(fused[#loc726, #loc721])
#loc1073 = loc(fused[#loc728, #loc727])
#loc1074 = loc(fused[#loc729, #loc730])
#loc1075 = loc(fused[#loc732, #loc731])
#loc1076 = loc(fused[#loc733, #loc734])
#loc1077 = loc(fused[#loc736, #loc730])
#loc1078 = loc(fused[#loc738, #loc737])
#loc1079 = loc(fused[#loc740, #loc739])
#loc1080 = loc(fused[#loc743, #loc744])
#loc1081 = loc(fused[#loc745, #loc746])
#loc1082 = loc(fused[#loc745, #loc747])
#loc1083 = loc(fused[#loc745, #loc748])
#loc1084 = loc(fused[#loc749, #loc750])
#loc1085 = loc(fused[#loc751, #loc754])
#loc1086 = loc(fused[#loc755, #loc750])
#loc1087 = loc(fused[#loc757, #loc756])
#loc1088 = loc(fused[#loc758, #loc759])
#loc1089 = loc(fused[#loc761, #loc760])
#loc1090 = loc(fused[#loc762, #loc763])
#loc1091 = loc(fused[#loc765, #loc759])
#loc1092 = loc(fused[#loc767, #loc766])
#loc1093 = loc(fused[#loc769, #loc768])
