!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc61)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc62)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51b_badSink(!cir.ptr<!cir.double>) loc(#loc63)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc65)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!cir.double> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc66)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc13)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc67)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc68)
    cir.store %5, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc69)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc20)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc21)
      %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!cir.double>, !cir.bool loc(#loc71)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc23)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc25)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc72)
    } loc(#loc70)
    %6 = cir.const #cir.fp<1.700000e+300> : !cir.double loc(#loc26)
    %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc27)
    cir.store %6, %7 : !cir.double, !cir.ptr<!cir.double> loc(#loc73)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc29)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51b_badSink(%8) : (!cir.ptr<!cir.double>) -> () loc(#loc30)
    cir.return loc(#loc8)
  } loc(#loc64)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc75)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    cir.return loc(#loc32)
  } loc(#loc74)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51b_goodG2BSink(!cir.ptr<!cir.double>) loc(#loc76)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc78)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!cir.double> loc(#loc41)
    cir.store %1, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc79)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc43)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc80)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc43)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc81)
    cir.store %5, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc82)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc50)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc51)
      %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!cir.double>, !cir.bool loc(#loc84)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc53)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc55)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc53)
      } loc(#loc85)
    } loc(#loc83)
    %6 = cir.const #cir.fp<1.700000e+300> : !cir.double loc(#loc56)
    %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc57)
    cir.store %6, %7 : !cir.double, !cir.ptr<!cir.double> loc(#loc86)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc59)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51b_goodG2BSink(%8) : (!cir.ptr<!cir.double>) -> () loc(#loc60)
    cir.return loc(#loc38)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":22:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":22:80)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":24:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":35:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":26:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":26:14)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":28:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":28:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":31:22)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":31:29)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":31:40)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":31:41)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":31:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":32:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":32:33)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":32:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":32:17)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":32:23)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":32:24)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":32:30)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":32:29)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":33:13)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":33:6)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":33:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":34:66)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":34:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":57:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":60:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":59:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":59:13)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":42:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":42:84)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":45:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":55:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":47:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":47:14)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":49:12)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":49:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":51:22)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":51:29)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":51:41)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":51:42)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":51:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":52:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":52:33)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":52:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":52:17)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":52:23)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":52:24)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":52:30)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":52:29)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":53:13)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":53:6)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":53:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":54:70)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51a.c":54:5)
#loc61 = loc(fused[#loc1, #loc2])
#loc62 = loc(fused[#loc3, #loc4])
#loc63 = loc(fused[#loc5, #loc6])
#loc64 = loc(fused[#loc7, #loc8])
#loc65 = loc(fused[#loc9, #loc10])
#loc66 = loc(fused[#loc12, #loc11])
#loc67 = loc(fused[#loc14, #loc15])
#loc68 = loc(fused[#loc13, #loc16])
#loc69 = loc(fused[#loc17, #loc16])
#loc70 = loc(fused[#loc18, #loc19])
#loc71 = loc(fused[#loc20, #loc21])
#loc72 = loc(fused[#loc22, #loc19])
#loc73 = loc(fused[#loc28, #loc26])
#loc74 = loc(fused[#loc31, #loc32])
#loc75 = loc(fused[#loc33, #loc34])
#loc76 = loc(fused[#loc35, #loc36])
#loc77 = loc(fused[#loc37, #loc38])
#loc78 = loc(fused[#loc39, #loc40])
#loc79 = loc(fused[#loc42, #loc41])
#loc80 = loc(fused[#loc44, #loc45])
#loc81 = loc(fused[#loc43, #loc46])
#loc82 = loc(fused[#loc47, #loc46])
#loc83 = loc(fused[#loc48, #loc49])
#loc84 = loc(fused[#loc50, #loc51])
#loc85 = loc(fused[#loc52, #loc49])
#loc86 = loc(fused[#loc58, #loc56])
