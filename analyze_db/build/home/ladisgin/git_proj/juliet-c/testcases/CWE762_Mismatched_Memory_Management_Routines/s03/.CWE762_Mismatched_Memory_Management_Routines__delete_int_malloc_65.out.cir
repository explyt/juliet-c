!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":94:10)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":94:14)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":94:20)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":94:32)
#loc146 = loc(fused[#loc91, #loc92])
#loc147 = loc(fused[#loc93, #loc94])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_657badSinkEPi(!cir.ptr<!s32i>) loc(#loc107)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc109)
  cir.func @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_653badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.get_global @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_657badSinkEPi : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc12)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>> loc(#loc112)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc16)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc114)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc115)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc116)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc117)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc24)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc119)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc120)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc28)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
    cir.br ^bb3 loc(#loc22)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc29)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    cir.call %17(%18) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!s32i>) -> () loc(#loc29)
    cir.return loc(#loc8)
  } loc(#loc110)
  cir.func private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_6511goodG2BSinkEPi(!cir.ptr<!s32i>) loc(#loc121)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc122)
  cir.func internal private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.get_global @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_6511goodG2BSinkEPi : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc40)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>> loc(#loc125)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc41)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc126)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc127)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc45)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc127)
    cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc128)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc47)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    cir.call %7(%8) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!s32i>) -> () loc(#loc47)
    cir.return loc(#loc36)
  } loc(#loc123)
  cir.func private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_6511goodB2GSinkEPi(!cir.ptr<!s32i>) loc(#loc129)
  cir.func internal private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.get_global @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_6511goodB2GSinkEPi : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc56)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>> loc(#loc132)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc57)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc59)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc60)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc134)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc135)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc59)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc136)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc68)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc139)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc72)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
    cir.br ^bb3 loc(#loc66)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc66)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc73)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
    cir.call %17(%18) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!s32i>) -> () loc(#loc73)
    cir.return loc(#loc52)
  } loc(#loc130)
  cir.func @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_654goodEv() extra(#fn_attr1) {
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65L7goodG2BEv() : () -> () loc(#loc77)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65L7goodB2GEv() : () -> () loc(#loc78)
    cir.return loc(#loc76)
  } loc(#loc141)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc142)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc88)
  cir.func @main(%arg0: !s32i loc(fused[#loc91, #loc92]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc93, #loc94])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc95)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc96)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc97)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc97)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc98)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_654goodEv() : () -> () loc(#loc100)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc87)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_653badEv() : () -> () loc(#loc103)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc88)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.return %15 : !s32i loc(#loc148)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":26:1)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":26:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":28:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":40:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":30:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":30:11)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":32:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":32:31)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":34:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":34:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":36:19)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":36:26)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":36:30)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":36:40)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":36:41)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":36:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":37:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":37:33)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":37:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":37:17)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":37:23)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":37:24)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":37:30)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":37:29)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":39:5)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":39:13)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":47:1)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":47:28)
#loc33 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc34 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":49:1)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":58:1)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":51:5)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":51:11)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":52:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":52:31)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":54:12)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":54:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":56:12)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":56:16)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":49:13)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":56:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":57:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":57:13)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":61:1)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":61:28)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":63:1)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":73:1)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":65:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":65:11)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":66:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":66:31)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":68:12)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":68:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":70:19)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":70:26)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":70:30)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":70:40)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":70:41)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":70:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":71:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":71:33)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":71:9)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":71:17)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":71:23)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":71:24)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":71:30)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":71:29)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":72:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":72:13)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":75:1)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":79:1)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":77:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":78:5)
#loc79 = loc("/usr/include/stdlib.h":575:1)
#loc80 = loc("/usr/include/stdlib.h":575:41)
#loc81 = loc("/usr/include/time.h":76:1)
#loc82 = loc("/usr/include/time.h":76:38)
#loc83 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc84 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":99:15)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":101:15)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":104:15)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":106:15)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":94:1)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":109:1)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":95:1)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":97:27)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":97:22)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":97:5)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":99:5)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":100:5)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":101:5)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":104:5)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":105:5)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":106:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":108:12)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_65a.cpp":108:5)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc7, #loc8])
#loc111 = loc(fused[#loc9, #loc10])
#loc112 = loc(fused[#loc11, #loc12])
#loc113 = loc(fused[#loc14, #loc13])
#loc114 = loc(fused[#loc17, #loc18])
#loc115 = loc(fused[#loc16, #loc18])
#loc116 = loc(fused[#loc15, #loc19])
#loc117 = loc(fused[#loc20, #loc19])
#loc118 = loc(fused[#loc21, #loc22])
#loc119 = loc(fused[#loc23, #loc24])
#loc120 = loc(fused[#loc25, #loc22])
#loc121 = loc(fused[#loc31, #loc32])
#loc122 = loc(fused[#loc33, #loc34])
#loc123 = loc(fused[#loc35, #loc36])
#loc124 = loc(fused[#loc37, #loc38])
#loc125 = loc(fused[#loc39, #loc40])
#loc126 = loc(fused[#loc42, #loc41])
#loc127 = loc(fused[#loc43, #loc44])
#loc128 = loc(fused[#loc46, #loc44])
#loc129 = loc(fused[#loc49, #loc50])
#loc130 = loc(fused[#loc51, #loc52])
#loc131 = loc(fused[#loc53, #loc54])
#loc132 = loc(fused[#loc55, #loc56])
#loc133 = loc(fused[#loc58, #loc57])
#loc134 = loc(fused[#loc61, #loc62])
#loc135 = loc(fused[#loc60, #loc62])
#loc136 = loc(fused[#loc59, #loc63])
#loc137 = loc(fused[#loc64, #loc63])
#loc138 = loc(fused[#loc65, #loc66])
#loc139 = loc(fused[#loc67, #loc68])
#loc140 = loc(fused[#loc69, #loc66])
#loc141 = loc(fused[#loc75, #loc76])
#loc142 = loc(fused[#loc79, #loc80])
#loc143 = loc(fused[#loc81, #loc82])
#loc144 = loc(fused[#loc83, #loc84])
#loc145 = loc(fused[#loc89, #loc90])
#loc148 = loc(fused[#loc106, #loc105])
