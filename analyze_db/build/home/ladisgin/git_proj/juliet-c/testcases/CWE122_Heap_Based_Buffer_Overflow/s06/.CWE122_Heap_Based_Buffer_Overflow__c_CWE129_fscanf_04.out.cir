!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":268:10)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":268:14)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":268:20)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":268:32)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":101:27)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":142:27)
#true = #cir.bool<true> : !cir.bool
#loc508 = loc(fused[#loc114, #loc115])
#loc509 = loc(fused[#loc116, #loc117])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc462)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc463)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc464)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc465)
  cir.func private @printIntLine(!s32i) loc(#loc466)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc467)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc468)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc470)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc471)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc472)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc26)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc473)
    cir.br ^bb1 loc(#loc474)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc475)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc32)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc463)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc32)
    cir.br ^bb3 loc(#loc29)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc29)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc476)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc36)
    cir.brcond %14 ^bb6, ^bb34 loc(#loc477)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc478)
  ^bb7:  // pred: ^bb6
    %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc40)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc41)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc41)
    %18 = cir.const #cir.int<4> : !u64i loc(#loc479)
    %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc480)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc40)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc481)
    cir.store %21, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc471)
    cir.br ^bb8 loc(#loc482)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc47)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc483)
    cir.brcond %25 ^bb9, ^bb10 loc(#loc484)
  ^bb9:  // pred: ^bb8
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc49)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc51)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
    cir.br ^bb10 loc(#loc45)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc45)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc485)
  ^bb12:  // pred: ^bb11
    %29 = cir.const #cir.int<0> : !s32i loc(#loc54)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc486)
    cir.br ^bb13 loc(#loc485)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc57)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc487)
    cir.brcond %32 ^bb14, ^bb18 loc(#loc58)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc488)
  ^bb15:  // pred: ^bb14
    %33 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc63)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc489)
    cir.br ^bb16 loc(#loc53)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc53)
  ^bb17:  // pred: ^bb16
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %38 = cir.unary(inc, %37) : !s32i, !s32i loc(#loc65)
    cir.store %38, %0 : !s32i, !cir.ptr<!s32i> loc(#loc490)
    cir.br ^bb13 loc(#loc485)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc53)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc491)
  ^bb20:  // pred: ^bb19
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %41 = cir.cmp(ge, %39, %40) : !s32i, !cir.bool loc(#loc492)
    cir.brcond %41 ^bb21, ^bb30 loc(#loc493)
  ^bb21:  // pred: ^bb20
    %42 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc76)
    cir.store %42, %45 : !s32i, !cir.ptr<!s32i> loc(#loc494)
    cir.br ^bb22 loc(#loc495)
  ^bb22:  // pred: ^bb21
    %46 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %46, %0 : !s32i, !cir.ptr<!s32i> loc(#loc496)
    cir.br ^bb23 loc(#loc495)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %47 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %48 = cir.const #cir.int<10> : !s32i loc(#loc82)
    %49 = cir.cmp(lt, %47, %48) : !s32i, !cir.bool loc(#loc497)
    cir.brcond %49 ^bb24, ^bb28 loc(#loc83)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc498)
  ^bb25:  // pred: ^bb24
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s32i>, %51 : !s32i), !cir.ptr<!s32i> loc(#loc87)
    %53 = cir.load %52 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call @printIntLine(%53) : (!s32i) -> () loc(#loc88)
    cir.br ^bb26 loc(#loc78)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc78)
  ^bb27:  // pred: ^bb26
    %54 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %55 = cir.unary(inc, %54) : !s32i, !s32i loc(#loc90)
    cir.store %55, %0 : !s32i, !cir.ptr<!s32i> loc(#loc499)
    cir.br ^bb23 loc(#loc495)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc78)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc71)
  ^bb30:  // pred: ^bb20
    %56 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
    %57 = cir.cast(array_to_ptrdecay, %56 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb31 loc(#loc67)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc67)
  ^bb32:  // pred: ^bb31
    %58 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc92)
    cir.call @free(%59) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
    cir.br ^bb33 loc(#loc39)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc35)
  ^bb34:  // 2 preds: ^bb5, ^bb33
    cir.br ^bb35 loc(#loc35)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc18)
  } loc(#loc469)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc501)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc96)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc502)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc98)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc503)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc100)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc504)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc102)
    cir.return loc(#loc95)
  } loc(#loc500)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc505)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc506)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc111)
  cir.func @main(%arg0: !s32i loc(fused[#loc114, #loc115]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc116, #loc117])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc508)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc509)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc113)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc118)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc119)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc120)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc120)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc121)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc108)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc510)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04_good() : () -> () loc(#loc123)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc109)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc110)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc511)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04_bad() : () -> () loc(#loc127)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc111)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc130)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc512)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc512)
    cir.return %17 : !s32i loc(#loc512)
  } loc(#loc507)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc133)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc514)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc515)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc516)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc143)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc517)
    cir.br ^bb1 loc(#loc518)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc147)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc519)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc149)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc463)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc150)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc151)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc151)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc149)
    cir.br ^bb3 loc(#loc146)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc146)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc520)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc154)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc521)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc132)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb43 loc(#loc156)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc522)
  ^bb8:  // pred: ^bb7
    %17 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc161)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc162)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc162)
    %20 = cir.const #cir.int<4> : !u64i loc(#loc523)
    %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc524)
    %22 = cir.call @malloc(%21) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc161)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc525)
    cir.store %23, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc515)
    cir.br ^bb9 loc(#loc526)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc167)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc168)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc168)
    %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc527)
    cir.brcond %27 ^bb10, ^bb11 loc(#loc528)
  ^bb10:  // pred: ^bb9
    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc170)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc172)
    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc170)
    cir.br ^bb11 loc(#loc166)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc166)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc529)
  ^bb13:  // pred: ^bb12
    %31 = cir.const #cir.int<0> : !s32i loc(#loc175)
    cir.store %31, %0 : !s32i, !cir.ptr<!s32i> loc(#loc530)
    cir.br ^bb14 loc(#loc529)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc178)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc531)
    cir.brcond %34 ^bb15, ^bb19 loc(#loc179)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc532)
  ^bb16:  // pred: ^bb15
    %35 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc184)
    cir.store %35, %38 : !s32i, !cir.ptr<!s32i> loc(#loc533)
    cir.br ^bb17 loc(#loc174)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc174)
  ^bb18:  // pred: ^bb17
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %40 = cir.unary(inc, %39) : !s32i, !s32i loc(#loc186)
    cir.store %40, %0 : !s32i, !cir.ptr<!s32i> loc(#loc534)
    cir.br ^bb14 loc(#loc529)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc174)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc535)
  ^bb21:  // pred: ^bb20
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc190)
    %43 = cir.cmp(ge, %41, %42) : !s32i, !cir.bool loc(#loc536)
    cir.brcond %43 ^bb22, ^bb27 loc(#loc191)
  ^bb22:  // pred: ^bb21
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc193)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc537)
    cir.brcond %46 ^bb23, ^bb24 loc(#loc191)
  ^bb23:  // pred: ^bb22
    %47 = cir.const #true loc(#loc191)
    cir.br ^bb25(%47 : !cir.bool) loc(#loc191)
  ^bb24:  // pred: ^bb22
    %48 = cir.const #false loc(#loc191)
    cir.br ^bb25(%48 : !cir.bool) loc(#loc191)
  ^bb25(%49: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":101:27)):  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc191)
  ^bb26:  // pred: ^bb25
    cir.br ^bb28(%49 : !cir.bool) loc(#loc191)
  ^bb27:  // pred: ^bb21
    %50 = cir.const #false loc(#loc191)
    cir.br ^bb28(%50 : !cir.bool) loc(#loc191)
  ^bb28(%51: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":101:27)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc191)
  ^bb29:  // pred: ^bb28
    cir.brcond %51 ^bb30, ^bb39 loc(#loc538)
  ^bb30:  // pred: ^bb29
    %52 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc199)
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!s32i>, %54 : !s32i), !cir.ptr<!s32i> loc(#loc201)
    cir.store %52, %55 : !s32i, !cir.ptr<!s32i> loc(#loc539)
    cir.br ^bb31 loc(#loc540)
  ^bb31:  // pred: ^bb30
    %56 = cir.const #cir.int<0> : !s32i loc(#loc204)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    cir.br ^bb32 loc(#loc540)
  ^bb32:  // 2 preds: ^bb31, ^bb36
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    %58 = cir.const #cir.int<10> : !s32i loc(#loc207)
    %59 = cir.cmp(lt, %57, %58) : !s32i, !cir.bool loc(#loc542)
    cir.brcond %59 ^bb33, ^bb37 loc(#loc208)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc543)
  ^bb34:  // pred: ^bb33
    %60 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc210)
    %61 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %62 = cir.ptr_stride(%60 : !cir.ptr<!s32i>, %61 : !s32i), !cir.ptr<!s32i> loc(#loc212)
    %63 = cir.load %62 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.call @printIntLine(%63) : (!s32i) -> () loc(#loc213)
    cir.br ^bb35 loc(#loc203)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc203)
  ^bb36:  // pred: ^bb35
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %65 = cir.unary(inc, %64) : !s32i, !s32i loc(#loc215)
    cir.store %65, %0 : !s32i, !cir.ptr<!s32i> loc(#loc544)
    cir.br ^bb32 loc(#loc540)
  ^bb37:  // pred: ^bb32
    cir.br ^bb38 loc(#loc203)
  ^bb38:  // pred: ^bb37
    cir.br ^bb40 loc(#loc196)
  ^bb39:  // pred: ^bb29
    %66 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc133)
    %67 = cir.cast(array_to_ptrdecay, %66 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%67) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    cir.br ^bb40 loc(#loc188)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc188)
  ^bb41:  // pred: ^bb40
    %68 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc217)
    %69 = cir.cast(bitcast, %68 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc217)
    cir.call @free(%69) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc218)
    cir.br ^bb42 loc(#loc160)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc153)
  ^bb43:  // 2 preds: ^bb6, ^bb42
    cir.br ^bb44 loc(#loc153)
  ^bb44:  // pred: ^bb43
    cir.return loc(#loc135)
  } loc(#loc513)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc546)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc547)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc548)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc228)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc549)
    cir.br ^bb1 loc(#loc550)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc232)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc551)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc234)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc463)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc235)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc236)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc236)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc234)
    cir.br ^bb3 loc(#loc231)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc231)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc552)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc239)
    cir.brcond %14 ^bb6, ^bb42 loc(#loc553)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc554)
  ^bb7:  // pred: ^bb6
    %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc243)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc244)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc244)
    %18 = cir.const #cir.int<4> : !u64i loc(#loc555)
    %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc556)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc243)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc557)
    cir.store %21, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc547)
    cir.br ^bb8 loc(#loc558)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc249)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc250)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc250)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc559)
    cir.brcond %25 ^bb9, ^bb10 loc(#loc560)
  ^bb9:  // pred: ^bb8
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc252)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc254)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc252)
    cir.br ^bb10 loc(#loc248)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc248)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc561)
  ^bb12:  // pred: ^bb11
    %29 = cir.const #cir.int<0> : !s32i loc(#loc257)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc562)
    cir.br ^bb13 loc(#loc561)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc260)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc563)
    cir.brcond %32 ^bb14, ^bb18 loc(#loc261)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc564)
  ^bb15:  // pred: ^bb14
    %33 = cir.const #cir.int<0> : !s32i loc(#loc263)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc264)
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc266)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc565)
    cir.br ^bb16 loc(#loc256)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc256)
  ^bb17:  // pred: ^bb16
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    %38 = cir.unary(inc, %37) : !s32i, !s32i loc(#loc268)
    cir.store %38, %0 : !s32i, !cir.ptr<!s32i> loc(#loc566)
    cir.br ^bb13 loc(#loc561)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc256)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc567)
  ^bb20:  // pred: ^bb19
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc272)
    %41 = cir.cmp(ge, %39, %40) : !s32i, !cir.bool loc(#loc568)
    cir.brcond %41 ^bb21, ^bb26 loc(#loc273)
  ^bb21:  // pred: ^bb20
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    %43 = cir.const #cir.int<10> : !s32i loc(#loc275)
    %44 = cir.cmp(lt, %42, %43) : !s32i, !cir.bool loc(#loc569)
    cir.brcond %44 ^bb22, ^bb23 loc(#loc273)
  ^bb22:  // pred: ^bb21
    %45 = cir.const #true loc(#loc273)
    cir.br ^bb24(%45 : !cir.bool) loc(#loc273)
  ^bb23:  // pred: ^bb21
    %46 = cir.const #false loc(#loc273)
    cir.br ^bb24(%46 : !cir.bool) loc(#loc273)
  ^bb24(%47: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":142:27)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc273)
  ^bb25:  // pred: ^bb24
    cir.br ^bb27(%47 : !cir.bool) loc(#loc273)
  ^bb26:  // pred: ^bb20
    %48 = cir.const #false loc(#loc273)
    cir.br ^bb27(%48 : !cir.bool) loc(#loc273)
  ^bb27(%49: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":142:27)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc273)
  ^bb28:  // pred: ^bb27
    cir.brcond %49 ^bb29, ^bb38 loc(#loc570)
  ^bb29:  // pred: ^bb28
    %50 = cir.const #cir.int<1> : !s32i loc(#loc280)
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc281)
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc283)
    cir.store %50, %53 : !s32i, !cir.ptr<!s32i> loc(#loc571)
    cir.br ^bb30 loc(#loc572)
  ^bb30:  // pred: ^bb29
    %54 = cir.const #cir.int<0> : !s32i loc(#loc286)
    cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc573)
    cir.br ^bb31 loc(#loc572)
  ^bb31:  // 2 preds: ^bb30, ^bb35
    %55 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %56 = cir.const #cir.int<10> : !s32i loc(#loc289)
    %57 = cir.cmp(lt, %55, %56) : !s32i, !cir.bool loc(#loc574)
    cir.brcond %57 ^bb32, ^bb36 loc(#loc290)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc575)
  ^bb33:  // pred: ^bb32
    %58 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc292)
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %60 = cir.ptr_stride(%58 : !cir.ptr<!s32i>, %59 : !s32i), !cir.ptr<!s32i> loc(#loc294)
    %61 = cir.load %60 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    cir.call @printIntLine(%61) : (!s32i) -> () loc(#loc295)
    cir.br ^bb34 loc(#loc285)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc285)
  ^bb35:  // pred: ^bb34
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %63 = cir.unary(inc, %62) : !s32i, !s32i loc(#loc297)
    cir.store %63, %0 : !s32i, !cir.ptr<!s32i> loc(#loc576)
    cir.br ^bb31 loc(#loc572)
  ^bb36:  // pred: ^bb31
    cir.br ^bb37 loc(#loc285)
  ^bb37:  // pred: ^bb36
    cir.br ^bb39 loc(#loc278)
  ^bb38:  // pred: ^bb28
    %64 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc298)
    %65 = cir.cast(array_to_ptrdecay, %64 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc298)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc299)
    cir.br ^bb39 loc(#loc270)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc270)
  ^bb40:  // pred: ^bb39
    %66 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc300)
    %67 = cir.cast(bitcast, %66 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc300)
    cir.call @free(%67) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc301)
    cir.br ^bb41 loc(#loc242)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc238)
  ^bb42:  // 2 preds: ^bb5, ^bb41
    cir.br ^bb43 loc(#loc238)
  ^bb43:  // pred: ^bb42
    cir.return loc(#loc220)
  } loc(#loc545)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc578)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc579)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc580)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc310)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc311)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc581)
    cir.br ^bb1 loc(#loc582)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc315)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc315)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc583)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc319)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc319)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc320)
    cir.br ^bb4 loc(#loc317)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<7> : !s32i loc(#loc321)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    cir.br ^bb4 loc(#loc314)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc314)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc585)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<1> : !s32i loc(#loc325)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc325)
    cir.brcond %11 ^bb7, ^bb35 loc(#loc586)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc587)
  ^bb8:  // pred: ^bb7
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc329)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc330)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc330)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc588)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc589)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc329)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc590)
    cir.store %18, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc579)
    cir.br ^bb9 loc(#loc591)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc335)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc336)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc336)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc592)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc593)
  ^bb10:  // pred: ^bb9
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc338)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc339)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc340)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc338)
    cir.br ^bb11 loc(#loc334)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc334)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc594)
  ^bb13:  // pred: ^bb12
    %26 = cir.const #cir.int<0> : !s32i loc(#loc343)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc595)
    cir.br ^bb14 loc(#loc594)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc345)
    %28 = cir.const #cir.int<10> : !s32i loc(#loc346)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc596)
    cir.brcond %29 ^bb15, ^bb19 loc(#loc347)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc597)
  ^bb16:  // pred: ^bb15
    %30 = cir.const #cir.int<0> : !s32i loc(#loc349)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc350)
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc351)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc352)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc598)
    cir.br ^bb17 loc(#loc342)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc342)
  ^bb18:  // pred: ^bb17
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc353)
    %35 = cir.unary(inc, %34) : !s32i, !s32i loc(#loc354)
    cir.store %35, %0 : !s32i, !cir.ptr<!s32i> loc(#loc599)
    cir.br ^bb14 loc(#loc594)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc342)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc600)
  ^bb21:  // pred: ^bb20
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc357)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc358)
    %38 = cir.cmp(ge, %36, %37) : !s32i, !cir.bool loc(#loc601)
    cir.brcond %38 ^bb22, ^bb31 loc(#loc602)
  ^bb22:  // pred: ^bb21
    %39 = cir.const #cir.int<1> : !s32i loc(#loc362)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc363)
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc364)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc365)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc603)
    cir.br ^bb23 loc(#loc604)
  ^bb23:  // pred: ^bb22
    %43 = cir.const #cir.int<0> : !s32i loc(#loc368)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc605)
    cir.br ^bb24 loc(#loc604)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc370)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc371)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc606)
    cir.brcond %46 ^bb25, ^bb29 loc(#loc372)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc607)
  ^bb26:  // pred: ^bb25
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc374)
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc375)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc376)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc374)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc377)
    cir.br ^bb27 loc(#loc367)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc367)
  ^bb28:  // pred: ^bb27
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc378)
    %52 = cir.unary(inc, %51) : !s32i, !s32i loc(#loc379)
    cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc608)
    cir.br ^bb24 loc(#loc604)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc367)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc360)
  ^bb31:  // pred: ^bb21
    %53 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc380)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc380)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc381)
    cir.br ^bb32 loc(#loc356)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc356)
  ^bb33:  // pred: ^bb32
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc382)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc382)
    cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc383)
    cir.br ^bb34 loc(#loc328)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc324)
  ^bb35:  // 2 preds: ^bb6, ^bb34
    cir.br ^bb36 loc(#loc324)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc303)
  } loc(#loc577)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc610)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc611)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc612)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc392)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc393)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc613)
    cir.br ^bb1 loc(#loc614)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc397)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc397)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc615)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<7> : !s32i loc(#loc399)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc616)
    cir.br ^bb3 loc(#loc396)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc396)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc617)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc403)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc403)
    cir.brcond %9 ^bb6, ^bb34 loc(#loc618)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc619)
  ^bb7:  // pred: ^bb6
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc407)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc408)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc408)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc620)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc621)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc407)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc622)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc611)
    cir.br ^bb8 loc(#loc623)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc413)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc414)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc414)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc624)
    cir.brcond %20 ^bb9, ^bb10 loc(#loc625)
  ^bb9:  // pred: ^bb8
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc416)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc417)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc418)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc416)
    cir.br ^bb10 loc(#loc412)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc412)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc626)
  ^bb12:  // pred: ^bb11
    %24 = cir.const #cir.int<0> : !s32i loc(#loc421)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc627)
    cir.br ^bb13 loc(#loc626)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc423)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc424)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc628)
    cir.brcond %27 ^bb14, ^bb18 loc(#loc425)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc629)
  ^bb15:  // pred: ^bb14
    %28 = cir.const #cir.int<0> : !s32i loc(#loc427)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc428)
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc429)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc430)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc630)
    cir.br ^bb16 loc(#loc420)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc420)
  ^bb17:  // pred: ^bb16
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc431)
    %33 = cir.unary(inc, %32) : !s32i, !s32i loc(#loc432)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc631)
    cir.br ^bb13 loc(#loc626)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc420)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc632)
  ^bb20:  // pred: ^bb19
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc435)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc436)
    %36 = cir.cmp(ge, %34, %35) : !s32i, !cir.bool loc(#loc633)
    cir.brcond %36 ^bb21, ^bb30 loc(#loc634)
  ^bb21:  // pred: ^bb20
    %37 = cir.const #cir.int<1> : !s32i loc(#loc440)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc441)
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc442)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc443)
    cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc635)
    cir.br ^bb22 loc(#loc636)
  ^bb22:  // pred: ^bb21
    %41 = cir.const #cir.int<0> : !s32i loc(#loc446)
    cir.store %41, %0 : !s32i, !cir.ptr<!s32i> loc(#loc637)
    cir.br ^bb23 loc(#loc636)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc448)
    %43 = cir.const #cir.int<10> : !s32i loc(#loc449)
    %44 = cir.cmp(lt, %42, %43) : !s32i, !cir.bool loc(#loc638)
    cir.brcond %44 ^bb24, ^bb28 loc(#loc450)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc639)
  ^bb25:  // pred: ^bb24
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc452)
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc453)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc454)
    %48 = cir.load %47 : !cir.ptr<!s32i>, !s32i loc(#loc452)
    cir.call @printIntLine(%48) : (!s32i) -> () loc(#loc455)
    cir.br ^bb26 loc(#loc445)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc445)
  ^bb27:  // pred: ^bb26
    %49 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc456)
    %50 = cir.unary(inc, %49) : !s32i, !s32i loc(#loc457)
    cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc640)
    cir.br ^bb23 loc(#loc636)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc445)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc438)
  ^bb30:  // pred: ^bb20
    %51 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc458)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc458)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc459)
    cir.br ^bb31 loc(#loc434)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc434)
  ^bb32:  // pred: ^bb31
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc460)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc460)
    cir.call @free(%54) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc461)
    cir.br ^bb33 loc(#loc406)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc402)
  ^bb34:  // 2 preds: ^bb5, ^bb33
    cir.br ^bb35 loc(#loc402)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc385)
  } loc(#loc609)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":36:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":62:27)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":28:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":67:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":41:13)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":41:17)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":42:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":42:58)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":30:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":30:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":32:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":32:12)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":32:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":33:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":37:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":33:8)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":34:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":36:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":36:16)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":38:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":66:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":38:8)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":39:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":40:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":65:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":42:35)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":42:42)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":42:47)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":42:57)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":43:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":43:43)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":43:17)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":43:27)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":43:33)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":43:34)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":43:40)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":43:39)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":45:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":48:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":45:22)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":45:18)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":45:25)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":45:29)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":45:27)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":46:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":47:29)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":47:17)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":47:24)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":47:25)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":45:34)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":45:33)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":51:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":63:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":51:17)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":51:25)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":52:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":59:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":61:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":53:32)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":53:17)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":53:24)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":53:28)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":55:17)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":58:17)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":55:25)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":55:21)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":55:28)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":55:32)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":55:30)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":56:17)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":57:34)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":57:41)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":57:42)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":57:21)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":55:37)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":55:36)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":62:17)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":64:18)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":64:13)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":251:1)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":257:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":253:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":253:14)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":254:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":254:14)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":255:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":255:14)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":256:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":256:14)
#loc104 = loc("/usr/include/stdlib.h":575:1)
#loc105 = loc("/usr/include/stdlib.h":575:41)
#loc106 = loc("/usr/include/time.h":76:1)
#loc107 = loc("/usr/include/time.h":76:38)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":273:15)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":275:15)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":278:15)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":280:15)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":268:1)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":283:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":269:1)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":271:27)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":271:22)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":271:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":273:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":274:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":274:64)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":275:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":278:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":279:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":279:63)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":280:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":282:12)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":282:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":87:19)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":112:27)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":74:1)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":117:1)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":92:13)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":92:17)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":93:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":93:58)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":76:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":76:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":78:13)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":78:12)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":78:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":79:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":83:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":79:8)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":80:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":82:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":82:16)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":82:23)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":84:5)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":116:5)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":84:8)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":85:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":88:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":90:5)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":87:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":91:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":115:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":93:35)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":93:42)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":93:47)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":93:57)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":94:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":94:43)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":94:17)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":94:27)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":94:33)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":94:34)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":94:40)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":94:39)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":96:13)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":99:13)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":96:22)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":96:18)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":96:25)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":96:29)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":96:27)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":97:13)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":98:29)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":98:17)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":98:24)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":98:25)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":96:34)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":96:33)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":101:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":113:13)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":101:17)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":101:25)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":101:30)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":101:38)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":101:40)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":102:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":109:13)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":111:13)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":103:32)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":103:17)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":103:24)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":103:28)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":105:17)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":108:17)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":105:25)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":105:21)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":105:28)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":105:32)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":105:30)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":106:17)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":107:34)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":107:41)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":107:42)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":107:21)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":105:37)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":105:36)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":112:17)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":114:18)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":114:13)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":120:1)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":158:1)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":133:13)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":133:17)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":134:13)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":134:58)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":122:5)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":122:9)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":124:13)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":124:12)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":124:5)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":125:5)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":129:5)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":125:8)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":126:5)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":128:9)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":128:16)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":128:23)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":130:5)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":157:5)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":130:8)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":131:5)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":132:9)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":156:9)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":134:35)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":134:42)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":134:47)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":134:57)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":135:13)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":135:43)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":135:17)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":135:27)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":135:33)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":135:34)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":135:40)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":135:39)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":137:13)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":140:13)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":137:22)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":137:18)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":137:25)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":137:29)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":137:27)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":138:13)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":139:29)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":139:17)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":139:24)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":139:25)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":137:34)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":137:33)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":142:13)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":154:13)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":142:17)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":142:25)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":142:30)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":142:38)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":142:40)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":143:13)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":150:13)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":152:13)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":144:32)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":144:17)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":144:24)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":144:28)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":146:17)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":149:17)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":146:25)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":146:21)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":146:28)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":146:32)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":146:30)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":147:17)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":148:34)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":148:41)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":148:42)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":148:21)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":146:37)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":146:36)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":153:27)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":153:17)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":155:18)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":155:13)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":161:1)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":206:1)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":180:13)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":180:17)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":181:13)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":181:58)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":163:5)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":163:9)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":165:13)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":165:12)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":165:5)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":166:5)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":176:5)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":166:8)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":167:5)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":170:5)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":172:5)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":169:19)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":169:9)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":175:16)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":175:9)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":177:5)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":205:5)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":177:8)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":178:5)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":179:9)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":204:9)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":181:35)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":181:42)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":181:47)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":181:57)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":182:13)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":182:43)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":182:17)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":182:27)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":182:33)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":182:34)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":182:40)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":182:39)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":184:13)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":187:13)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":184:22)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":184:18)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":184:25)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":184:29)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":184:27)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":185:13)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":186:29)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":186:17)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":186:24)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":186:25)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":184:34)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":184:33)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":190:13)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":202:13)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":190:17)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":190:25)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":191:13)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":198:13)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":200:13)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":192:32)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":192:17)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":192:24)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":192:28)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":194:17)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":197:17)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":194:25)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":194:21)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":194:28)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":194:32)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":194:30)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":195:17)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":196:34)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":196:41)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":196:42)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":196:21)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":194:37)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":194:36)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":201:27)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":201:17)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":203:18)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":203:13)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":209:1)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":249:1)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":223:13)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":223:17)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":224:13)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":224:58)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":211:5)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":211:9)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":213:13)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":213:12)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":213:5)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":214:5)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":219:5)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":214:8)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":215:5)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":218:16)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":218:9)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":220:5)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":248:5)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":220:8)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":221:5)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":222:9)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":247:9)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":224:35)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":224:42)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":224:47)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":224:57)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":225:13)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":225:43)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":225:17)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":225:27)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":225:33)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":225:34)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":225:40)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":225:39)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":227:13)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":230:13)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":227:22)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":227:18)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":227:25)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":227:29)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":227:27)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":228:13)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":229:29)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":229:17)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":229:24)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":229:25)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":227:34)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":227:33)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":233:13)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":245:13)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":233:17)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":233:25)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":234:13)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":241:13)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":243:13)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":235:32)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":235:17)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":235:24)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":235:28)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":237:17)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":240:17)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":237:25)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":237:21)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":237:28)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":237:32)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":237:30)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":238:17)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":239:34)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":239:41)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":239:42)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":239:21)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":237:37)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":237:36)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":244:27)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":244:17)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":246:18)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_04.c":246:13)
#loc462 = loc(fused[#loc1, #loc2])
#loc463 = loc(fused[#loc3, #loc4])
#loc464 = loc(fused[#loc6, #loc7])
#loc465 = loc(fused[#loc8, #loc9])
#loc466 = loc(fused[#loc10, #loc11])
#loc467 = loc(fused[#loc12, #loc13])
#loc468 = loc(fused[#loc15, #loc16])
#loc469 = loc(fused[#loc17, #loc18])
#loc470 = loc(fused[#loc19, #loc20])
#loc471 = loc(fused[#loc21, #loc22])
#loc472 = loc(fused[#loc23, #loc24])
#loc473 = loc(fused[#loc27, #loc25])
#loc474 = loc(fused[#loc28, #loc29])
#loc475 = loc(fused[#loc31, #loc29])
#loc476 = loc(fused[#loc34, #loc35])
#loc477 = loc(fused[#loc37, #loc35])
#loc478 = loc(fused[#loc38, #loc39])
#loc479 = loc(fused[#loc42, #loc43])
#loc480 = loc(fused[#loc41, #loc43])
#loc481 = loc(fused[#loc40, #loc22])
#loc482 = loc(fused[#loc44, #loc45])
#loc483 = loc(fused[#loc46, #loc47])
#loc484 = loc(fused[#loc48, #loc45])
#loc485 = loc(fused[#loc52, #loc53])
#loc486 = loc(fused[#loc55, #loc54])
#loc487 = loc(fused[#loc56, #loc57])
#loc488 = loc(fused[#loc59, #loc53])
#loc489 = loc(fused[#loc61, #loc60])
#loc490 = loc(fused[#loc65, #loc64])
#loc491 = loc(fused[#loc66, #loc67])
#loc492 = loc(fused[#loc68, #loc69])
#loc493 = loc(fused[#loc70, #loc71, #loc72, #loc67])
#loc494 = loc(fused[#loc74, #loc73])
#loc495 = loc(fused[#loc77, #loc78])
#loc496 = loc(fused[#loc80, #loc79])
#loc497 = loc(fused[#loc81, #loc82])
#loc498 = loc(fused[#loc84, #loc78])
#loc499 = loc(fused[#loc90, #loc89])
#loc500 = loc(fused[#loc94, #loc95])
#loc501 = loc(fused[#loc96, #loc97])
#loc502 = loc(fused[#loc98, #loc99])
#loc503 = loc(fused[#loc100, #loc101])
#loc504 = loc(fused[#loc102, #loc103])
#loc505 = loc(fused[#loc104, #loc105])
#loc506 = loc(fused[#loc106, #loc107])
#loc507 = loc(fused[#loc112, #loc113])
#loc510 = loc(fused[#loc123, #loc124])
#loc511 = loc(fused[#loc127, #loc128])
#loc512 = loc(fused[#loc131, #loc130])
#loc513 = loc(fused[#loc134, #loc135])
#loc514 = loc(fused[#loc136, #loc137])
#loc515 = loc(fused[#loc138, #loc139])
#loc516 = loc(fused[#loc140, #loc141])
#loc517 = loc(fused[#loc144, #loc142])
#loc518 = loc(fused[#loc145, #loc146])
#loc519 = loc(fused[#loc148, #loc146])
#loc520 = loc(fused[#loc152, #loc153])
#loc521 = loc(fused[#loc155, #loc156, #loc157, #loc153])
#loc522 = loc(fused[#loc159, #loc160])
#loc523 = loc(fused[#loc163, #loc164])
#loc524 = loc(fused[#loc162, #loc164])
#loc525 = loc(fused[#loc161, #loc139])
#loc526 = loc(fused[#loc165, #loc166])
#loc527 = loc(fused[#loc167, #loc168])
#loc528 = loc(fused[#loc169, #loc166])
#loc529 = loc(fused[#loc173, #loc174])
#loc530 = loc(fused[#loc176, #loc175])
#loc531 = loc(fused[#loc177, #loc178])
#loc532 = loc(fused[#loc180, #loc174])
#loc533 = loc(fused[#loc182, #loc181])
#loc534 = loc(fused[#loc186, #loc185])
#loc535 = loc(fused[#loc187, #loc188])
#loc536 = loc(fused[#loc189, #loc190])
#loc537 = loc(fused[#loc192, #loc194])
#loc538 = loc(fused[#loc195, #loc196, #loc197, #loc188])
#loc539 = loc(fused[#loc199, #loc198])
#loc540 = loc(fused[#loc202, #loc203])
#loc541 = loc(fused[#loc205, #loc204])
#loc542 = loc(fused[#loc206, #loc207])
#loc543 = loc(fused[#loc209, #loc203])
#loc544 = loc(fused[#loc215, #loc214])
#loc545 = loc(fused[#loc219, #loc220])
#loc546 = loc(fused[#loc221, #loc222])
#loc547 = loc(fused[#loc223, #loc224])
#loc548 = loc(fused[#loc225, #loc226])
#loc549 = loc(fused[#loc229, #loc227])
#loc550 = loc(fused[#loc230, #loc231])
#loc551 = loc(fused[#loc233, #loc231])
#loc552 = loc(fused[#loc237, #loc238])
#loc553 = loc(fused[#loc240, #loc238])
#loc554 = loc(fused[#loc241, #loc242])
#loc555 = loc(fused[#loc245, #loc246])
#loc556 = loc(fused[#loc244, #loc246])
#loc557 = loc(fused[#loc243, #loc224])
#loc558 = loc(fused[#loc247, #loc248])
#loc559 = loc(fused[#loc249, #loc250])
#loc560 = loc(fused[#loc251, #loc248])
#loc561 = loc(fused[#loc255, #loc256])
#loc562 = loc(fused[#loc258, #loc257])
#loc563 = loc(fused[#loc259, #loc260])
#loc564 = loc(fused[#loc262, #loc256])
#loc565 = loc(fused[#loc264, #loc263])
#loc566 = loc(fused[#loc268, #loc267])
#loc567 = loc(fused[#loc269, #loc270])
#loc568 = loc(fused[#loc271, #loc272])
#loc569 = loc(fused[#loc274, #loc276])
#loc570 = loc(fused[#loc277, #loc278, #loc279, #loc270])
#loc571 = loc(fused[#loc281, #loc280])
#loc572 = loc(fused[#loc284, #loc285])
#loc573 = loc(fused[#loc287, #loc286])
#loc574 = loc(fused[#loc288, #loc289])
#loc575 = loc(fused[#loc291, #loc285])
#loc576 = loc(fused[#loc297, #loc296])
#loc577 = loc(fused[#loc302, #loc303])
#loc578 = loc(fused[#loc304, #loc305])
#loc579 = loc(fused[#loc306, #loc307])
#loc580 = loc(fused[#loc308, #loc309])
#loc581 = loc(fused[#loc312, #loc310])
#loc582 = loc(fused[#loc313, #loc314])
#loc583 = loc(fused[#loc316, #loc317, #loc318, #loc314])
#loc584 = loc(fused[#loc322, #loc321])
#loc585 = loc(fused[#loc323, #loc324])
#loc586 = loc(fused[#loc326, #loc324])
#loc587 = loc(fused[#loc327, #loc328])
#loc588 = loc(fused[#loc331, #loc332])
#loc589 = loc(fused[#loc330, #loc332])
#loc590 = loc(fused[#loc329, #loc307])
#loc591 = loc(fused[#loc333, #loc334])
#loc592 = loc(fused[#loc335, #loc336])
#loc593 = loc(fused[#loc337, #loc334])
#loc594 = loc(fused[#loc341, #loc342])
#loc595 = loc(fused[#loc344, #loc343])
#loc596 = loc(fused[#loc345, #loc346])
#loc597 = loc(fused[#loc348, #loc342])
#loc598 = loc(fused[#loc350, #loc349])
#loc599 = loc(fused[#loc354, #loc353])
#loc600 = loc(fused[#loc355, #loc356])
#loc601 = loc(fused[#loc357, #loc358])
#loc602 = loc(fused[#loc359, #loc360, #loc361, #loc356])
#loc603 = loc(fused[#loc363, #loc362])
#loc604 = loc(fused[#loc366, #loc367])
#loc605 = loc(fused[#loc369, #loc368])
#loc606 = loc(fused[#loc370, #loc371])
#loc607 = loc(fused[#loc373, #loc367])
#loc608 = loc(fused[#loc379, #loc378])
#loc609 = loc(fused[#loc384, #loc385])
#loc610 = loc(fused[#loc386, #loc387])
#loc611 = loc(fused[#loc388, #loc389])
#loc612 = loc(fused[#loc390, #loc391])
#loc613 = loc(fused[#loc394, #loc392])
#loc614 = loc(fused[#loc395, #loc396])
#loc615 = loc(fused[#loc398, #loc396])
#loc616 = loc(fused[#loc400, #loc399])
#loc617 = loc(fused[#loc401, #loc402])
#loc618 = loc(fused[#loc404, #loc402])
#loc619 = loc(fused[#loc405, #loc406])
#loc620 = loc(fused[#loc409, #loc410])
#loc621 = loc(fused[#loc408, #loc410])
#loc622 = loc(fused[#loc407, #loc389])
#loc623 = loc(fused[#loc411, #loc412])
#loc624 = loc(fused[#loc413, #loc414])
#loc625 = loc(fused[#loc415, #loc412])
#loc626 = loc(fused[#loc419, #loc420])
#loc627 = loc(fused[#loc422, #loc421])
#loc628 = loc(fused[#loc423, #loc424])
#loc629 = loc(fused[#loc426, #loc420])
#loc630 = loc(fused[#loc428, #loc427])
#loc631 = loc(fused[#loc432, #loc431])
#loc632 = loc(fused[#loc433, #loc434])
#loc633 = loc(fused[#loc435, #loc436])
#loc634 = loc(fused[#loc437, #loc438, #loc439, #loc434])
#loc635 = loc(fused[#loc441, #loc440])
#loc636 = loc(fused[#loc444, #loc445])
#loc637 = loc(fused[#loc447, #loc446])
#loc638 = loc(fused[#loc448, #loc449])
#loc639 = loc(fused[#loc451, #loc445])
#loc640 = loc(fused[#loc457, #loc456])
