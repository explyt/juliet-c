!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc51)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc52)
    cir.goto "sink" loc(#loc53)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc13)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc51)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc51)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
    %4 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc14)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc16)
    %8 = cir.const #cir.int<6> : !u64i loc(#loc54)
    %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc55)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc19)
    %12 = cir.binop(sub, %9, %11) : !u64i loc(#loc56)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc4)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc4)
    %17 = cir.call @snprintf(%5, %12, %14, %16) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc14)
    cir.return loc(#loc6)
  } loc(#loc50)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc58)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    cir.return loc(#loc21)
  } loc(#loc57)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc26)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc61)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc62)
    cir.goto "sink" loc(#loc63)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc35)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc61)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc61)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
    cir.scope {
      %4 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc38)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc40)
      %8 = cir.const #cir.int<6> : !u64i loc(#loc65)
      %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc66)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc43)
      %12 = cir.binop(sub, %9, %11) : !u64i loc(#loc67)
      %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc44)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc44)
      %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc45)
      %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc45)
      %17 = cir.call @snprintf(%5, %12, %14, %16) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc46)
      %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc68)
      cir.if %19 {
        %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc26)
        %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc26)
        cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      } loc(#loc69)
    } loc(#loc64)
    cir.return loc(#loc28)
  } loc(#loc60)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":42:42)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":42:50)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":32:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":44:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":39:9)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":39:32)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":40:9)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":40:23)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":34:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":34:10)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":35:1)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":42:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":42:18)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":42:23)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":42:27)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":42:37)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":42:39)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":68:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":71:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":70:5)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":70:11)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":63:23)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":51:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":66:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":58:9)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":58:32)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":59:9)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":59:23)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":53:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":53:10)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":54:1)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":61:9)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":64:9)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":61:13)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":61:22)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":61:27)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":61:31)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":61:41)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":61:43)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":61:46)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":61:54)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":61:61)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":62:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_snprintf_18.c":63:13)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc5, #loc6])
#loc51 = loc(fused[#loc7, #loc8])
#loc52 = loc(fused[#loc9, #loc10])
#loc53 = loc(fused[#loc11, #loc12])
#loc54 = loc(fused[#loc17, #loc18])
#loc55 = loc(fused[#loc16, #loc18])
#loc56 = loc(fused[#loc16, #loc19])
#loc57 = loc(fused[#loc20, #loc21])
#loc58 = loc(fused[#loc22, #loc23])
#loc59 = loc(fused[#loc24, #loc25])
#loc60 = loc(fused[#loc27, #loc28])
#loc61 = loc(fused[#loc29, #loc30])
#loc62 = loc(fused[#loc31, #loc32])
#loc63 = loc(fused[#loc33, #loc34])
#loc64 = loc(fused[#loc36, #loc37])
#loc65 = loc(fused[#loc41, #loc42])
#loc66 = loc(fused[#loc40, #loc42])
#loc67 = loc(fused[#loc40, #loc43])
#loc68 = loc(fused[#loc38, #loc46])
#loc69 = loc(fused[#loc47, #loc37])
