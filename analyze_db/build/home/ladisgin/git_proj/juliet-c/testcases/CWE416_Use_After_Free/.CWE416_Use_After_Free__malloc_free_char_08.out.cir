!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc74 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":182:10)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":182:14)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":182:20)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":182:32)
#loc310 = loc(fused[#loc74, #loc75])
#loc311 = loc(fused[#loc76, #loc77])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc280)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc281)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc282)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc283)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc285)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
    cir.br ^bb1 loc(#loc287)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc288)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc289)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc21)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc290)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc291)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc292)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
    cir.br ^bb3 loc(#loc294)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc295)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc296)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc33)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc35)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc36)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc36)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc297)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc40)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc42)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc298)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
    cir.br ^bb7 loc(#loc16)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc16)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc299)
  ^bb9:  // pred: ^bb8
    %35 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc300)
    %36 = cir.call %35() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc49)
    %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc49)
    cir.brcond %37 ^bb10, ^bb11 loc(#loc301)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb11 loc(#loc48)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc48)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc10)
  } loc(#loc284)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc303)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc304)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc305)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc306)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc55)
  } loc(#loc302)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc307)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc308)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc310)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc311)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE416_Use_After_Free__malloc_free_char_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc312)
    cir.call @CWE416_Use_After_Free__malloc_free_char_08_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE416_Use_After_Free__malloc_free_char_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc313)
    cir.call @CWE416_Use_After_Free__malloc_free_char_08_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc314)
    cir.return %17 : !s32i loc(#loc314)
  } loc(#loc309)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc93)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc94)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    cir.return %2 : !s32i loc(#loc316)
  } loc(#loc315)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc318)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc101)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc319)
    cir.br ^bb1 loc(#loc320)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc321)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc105)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc322)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc108)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc109)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc323)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc324)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc325)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc326)
    cir.br ^bb3 loc(#loc327)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc328)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc329)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc119)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc121)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc119)
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc115)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc123)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc124)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc124)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc330)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc128)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc130)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc130)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc132)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc331)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc134)
    cir.br ^bb7 loc(#loc104)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc104)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc332)
  ^bb9:  // pred: ^bb8
    %35 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc333)
    %36 = cir.call %35() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc137)
    %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc137)
    cir.brcond %37 ^bb10, ^bb11 loc(#loc334)
  ^bb10:  // pred: ^bb9
    %38 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc96)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb12 loc(#loc140)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc136)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc136)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc98)
  } loc(#loc317)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc145)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc336)
    cir.return %2 : !s32i loc(#loc336)
  } loc(#loc335)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc338)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc151)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc339)
    cir.br ^bb1 loc(#loc340)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc341)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc155)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc155)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc342)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc158)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc159)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc159)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc343)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc344)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc158)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc345)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc346)
    cir.br ^bb3 loc(#loc347)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc348)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc349)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc169)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc171)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc169)
    cir.br ^bb5 loc(#loc165)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc165)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc172)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc173)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc174)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc174)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc174)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc350)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc178)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc180)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc180)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc182)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc351)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc184)
    cir.br ^bb7 loc(#loc154)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc154)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc352)
  ^bb9:  // pred: ^bb8
    %35 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc353)
    %36 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc187)
    %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc187)
    cir.brcond %37 ^bb10, ^bb11 loc(#loc354)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc186)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc186)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc148)
  } loc(#loc337)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc356)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc194)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc357)
    cir.br ^bb1 loc(#loc358)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc359)
    %3 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc198)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc198)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc360)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc203)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    cir.br ^bb8 loc(#loc201)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc205)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc206)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc206)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc361)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc362)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc205)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc363)
    cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc364)
    cir.br ^bb4 loc(#loc365)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc214)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc214)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc366)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc367)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc216)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc218)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc216)
    cir.br ^bb6 loc(#loc212)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc212)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc219)
    %23 = cir.const #cir.int<65> : !s32i loc(#loc220)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc221)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc222)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc221)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc221)
    cir.libc.memset %27 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc368)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc225)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc225)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc227)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc228)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc227)
    %34 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc229)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc369)
    cir.br ^bb8 loc(#loc197)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc197)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc370)
  ^bb10:  // pred: ^bb9
    %35 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc371)
    %36 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc232)
    %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc232)
    cir.brcond %37 ^bb11, ^bb12 loc(#loc372)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc236)
    cir.br ^bb12 loc(#loc231)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc231)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc191)
  } loc(#loc355)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc374)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc241)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc375)
    cir.br ^bb1 loc(#loc376)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc377)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc245)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc245)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc378)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc248)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc249)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc249)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc379)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc380)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc248)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc381)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc382)
    cir.br ^bb3 loc(#loc383)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc256)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc257)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc257)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc384)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc385)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc259)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc260)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc261)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc259)
    cir.br ^bb5 loc(#loc255)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc255)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc262)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc263)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc264)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc265)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc264)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc264)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc386)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc268)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc268)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc270)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc271)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc270)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc272)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc387)
    cir.br ^bb7 loc(#loc244)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc244)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc388)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc389)
    %34 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc275)
    %35 = cir.cast(int_to_bool, %34 : !s32i), !cir.bool loc(#loc275)
    cir.brcond %35 ^bb10, ^bb11 loc(#loc390)
  ^bb10:  // pred: ^bb9
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc278)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc279)
    cir.br ^bb11 loc(#loc274)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc274)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc238)
  } loc(#loc373)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":37:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":57:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":39:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":39:12)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":41:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":41:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":42:5)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":50:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":42:8)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":42:26)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":43:5)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:24)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:31)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:35)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:46)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:47)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:9)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:9)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:37)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:13)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:21)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:27)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:28)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:34)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:33)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:16)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:22)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:27)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:31)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:9)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:32)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":47:23)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":47:9)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":47:14)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":47:18)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":47:19)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":49:14)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":49:9)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":51:5)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":56:5)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":51:8)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":51:26)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":52:5)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":54:19)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":54:9)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":165:1)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":171:1)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":167:5)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":167:14)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":168:5)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":168:14)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":169:5)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":169:14)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":170:5)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":170:14)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":187:15)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":189:15)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":192:15)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":194:15)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":182:1)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":197:1)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":183:1)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":185:27)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":185:22)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":185:5)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":187:5)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":188:5)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":188:53)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":189:5)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":192:5)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":193:5)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":193:52)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":194:5)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":196:12)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":196:5)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":25:1)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":28:1)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":27:12)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":27:5)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":81:19)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":64:1)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":90:1)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":66:5)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":66:12)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":68:12)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":68:5)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":69:5)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":77:5)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":69:8)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":69:26)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":70:5)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:24)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:31)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:35)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:46)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:47)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:9)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:9)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:37)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:13)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:21)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:27)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:28)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:34)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:33)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:16)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:22)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:27)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:31)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:9)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:32)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":74:23)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":74:9)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":74:14)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":74:18)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":74:19)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":76:14)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":76:9)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":78:5)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":89:5)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":78:8)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":78:27)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":79:5)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":82:5)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":84:5)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":81:9)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":30:1)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":33:1)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":32:12)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":32:5)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":93:1)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":114:1)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":95:5)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":95:12)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":97:12)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":97:5)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":98:5)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":106:5)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":98:8)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":98:26)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":99:5)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:24)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:31)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:35)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:46)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:47)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:9)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:9)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:37)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:13)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:21)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:27)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:28)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:34)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:33)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:16)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:22)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:27)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:31)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:9)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:32)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":103:23)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":103:9)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":103:14)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":103:18)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":103:19)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":105:14)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":105:9)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":107:5)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":113:5)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":107:8)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":107:26)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":108:5)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":117:1)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":141:1)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":119:5)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":119:12)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":121:12)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":121:5)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":122:5)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":134:5)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":122:8)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":122:27)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":123:5)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":126:5)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":128:5)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":125:19)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":125:9)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:24)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:31)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:35)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:46)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:47)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:9)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:9)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:37)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:13)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:21)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:27)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:28)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:34)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:33)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:16)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:22)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:27)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:31)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:9)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:32)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":132:23)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":132:9)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":132:14)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":132:18)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":132:19)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":135:5)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":140:5)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":135:8)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":135:26)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":136:5)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":138:19)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":138:9)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":144:1)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":163:1)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":146:5)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":146:12)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":148:12)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":148:5)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":149:5)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":156:5)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":149:8)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":149:26)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":150:5)
#loc248 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:24)
#loc249 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:31)
#loc250 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:35)
#loc251 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:46)
#loc252 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:47)
#loc253 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:9)
#loc254 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:9)
#loc255 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:37)
#loc256 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:13)
#loc257 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:21)
#loc258 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:27)
#loc259 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:28)
#loc260 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:34)
#loc261 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:33)
#loc262 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:16)
#loc263 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:22)
#loc264 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:27)
#loc265 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:31)
#loc266 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:9)
#loc267 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:32)
#loc268 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":154:23)
#loc269 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":154:9)
#loc270 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":154:14)
#loc271 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":154:18)
#loc272 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":154:19)
#loc273 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":157:5)
#loc274 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":162:5)
#loc275 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":157:8)
#loc276 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":157:26)
#loc277 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":158:5)
#loc278 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":160:19)
#loc279 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":160:9)
#loc280 = loc(fused[#loc1, #loc2])
#loc281 = loc(fused[#loc3, #loc4])
#loc282 = loc(fused[#loc5, #loc6])
#loc283 = loc(fused[#loc7, #loc8])
#loc284 = loc(fused[#loc9, #loc10])
#loc285 = loc(fused[#loc11, #loc12])
#loc286 = loc(fused[#loc14, #loc13])
#loc287 = loc(fused[#loc15, #loc16])
#loc288 = loc(fused[#loc17, #loc18])
#loc289 = loc(fused[#loc19, #loc16])
#loc290 = loc(fused[#loc22, #loc23])
#loc291 = loc(fused[#loc21, #loc23])
#loc292 = loc(fused[#loc20, #loc24])
#loc293 = loc(fused[#loc25, #loc24])
#loc294 = loc(fused[#loc26, #loc27])
#loc295 = loc(fused[#loc28, #loc29])
#loc296 = loc(fused[#loc30, #loc27])
#loc297 = loc(fused[#loc38, #loc39])
#loc298 = loc(fused[#loc41, #loc40])
#loc299 = loc(fused[#loc47, #loc48])
#loc300 = loc(fused[#loc49, #loc50])
#loc301 = loc(fused[#loc51, #loc48])
#loc302 = loc(fused[#loc54, #loc55])
#loc303 = loc(fused[#loc56, #loc57])
#loc304 = loc(fused[#loc58, #loc59])
#loc305 = loc(fused[#loc60, #loc61])
#loc306 = loc(fused[#loc62, #loc63])
#loc307 = loc(fused[#loc64, #loc65])
#loc308 = loc(fused[#loc66, #loc67])
#loc309 = loc(fused[#loc72, #loc73])
#loc312 = loc(fused[#loc83, #loc84])
#loc313 = loc(fused[#loc87, #loc88])
#loc314 = loc(fused[#loc91, #loc90])
#loc315 = loc(fused[#loc92, #loc93])
#loc316 = loc(fused[#loc95, #loc94])
#loc317 = loc(fused[#loc97, #loc98])
#loc318 = loc(fused[#loc99, #loc100])
#loc319 = loc(fused[#loc102, #loc101])
#loc320 = loc(fused[#loc103, #loc104])
#loc321 = loc(fused[#loc105, #loc106])
#loc322 = loc(fused[#loc107, #loc104])
#loc323 = loc(fused[#loc110, #loc111])
#loc324 = loc(fused[#loc109, #loc111])
#loc325 = loc(fused[#loc108, #loc112])
#loc326 = loc(fused[#loc113, #loc112])
#loc327 = loc(fused[#loc114, #loc115])
#loc328 = loc(fused[#loc116, #loc117])
#loc329 = loc(fused[#loc118, #loc115])
#loc330 = loc(fused[#loc126, #loc127])
#loc331 = loc(fused[#loc129, #loc128])
#loc332 = loc(fused[#loc135, #loc136])
#loc333 = loc(fused[#loc137, #loc138])
#loc334 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc335 = loc(fused[#loc143, #loc144])
#loc336 = loc(fused[#loc146, #loc145])
#loc337 = loc(fused[#loc147, #loc148])
#loc338 = loc(fused[#loc149, #loc150])
#loc339 = loc(fused[#loc152, #loc151])
#loc340 = loc(fused[#loc153, #loc154])
#loc341 = loc(fused[#loc155, #loc156])
#loc342 = loc(fused[#loc157, #loc154])
#loc343 = loc(fused[#loc160, #loc161])
#loc344 = loc(fused[#loc159, #loc161])
#loc345 = loc(fused[#loc158, #loc162])
#loc346 = loc(fused[#loc163, #loc162])
#loc347 = loc(fused[#loc164, #loc165])
#loc348 = loc(fused[#loc166, #loc167])
#loc349 = loc(fused[#loc168, #loc165])
#loc350 = loc(fused[#loc176, #loc177])
#loc351 = loc(fused[#loc179, #loc178])
#loc352 = loc(fused[#loc185, #loc186])
#loc353 = loc(fused[#loc187, #loc188])
#loc354 = loc(fused[#loc189, #loc186])
#loc355 = loc(fused[#loc190, #loc191])
#loc356 = loc(fused[#loc192, #loc193])
#loc357 = loc(fused[#loc195, #loc194])
#loc358 = loc(fused[#loc196, #loc197])
#loc359 = loc(fused[#loc198, #loc199])
#loc360 = loc(fused[#loc200, #loc201, #loc202, #loc197])
#loc361 = loc(fused[#loc207, #loc208])
#loc362 = loc(fused[#loc206, #loc208])
#loc363 = loc(fused[#loc205, #loc209])
#loc364 = loc(fused[#loc210, #loc209])
#loc365 = loc(fused[#loc211, #loc212])
#loc366 = loc(fused[#loc213, #loc214])
#loc367 = loc(fused[#loc215, #loc212])
#loc368 = loc(fused[#loc223, #loc224])
#loc369 = loc(fused[#loc226, #loc225])
#loc370 = loc(fused[#loc230, #loc231])
#loc371 = loc(fused[#loc232, #loc233])
#loc372 = loc(fused[#loc234, #loc231])
#loc373 = loc(fused[#loc237, #loc238])
#loc374 = loc(fused[#loc239, #loc240])
#loc375 = loc(fused[#loc242, #loc241])
#loc376 = loc(fused[#loc243, #loc244])
#loc377 = loc(fused[#loc245, #loc246])
#loc378 = loc(fused[#loc247, #loc244])
#loc379 = loc(fused[#loc250, #loc251])
#loc380 = loc(fused[#loc249, #loc251])
#loc381 = loc(fused[#loc248, #loc252])
#loc382 = loc(fused[#loc253, #loc252])
#loc383 = loc(fused[#loc254, #loc255])
#loc384 = loc(fused[#loc256, #loc257])
#loc385 = loc(fused[#loc258, #loc255])
#loc386 = loc(fused[#loc266, #loc267])
#loc387 = loc(fused[#loc269, #loc268])
#loc388 = loc(fused[#loc273, #loc274])
#loc389 = loc(fused[#loc275, #loc276])
#loc390 = loc(fused[#loc277, #loc274])
