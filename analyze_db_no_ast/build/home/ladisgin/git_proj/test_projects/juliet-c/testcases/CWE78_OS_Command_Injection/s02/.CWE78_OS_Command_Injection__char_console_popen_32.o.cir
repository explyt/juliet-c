!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc161)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc162)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc163)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc164)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc165)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc166)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_popen_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc170)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc171)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc169)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc170)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc171)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc171)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc174)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc176)
        %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
        %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
        cir.store %14, %11 : !u64i, !cir.ptr<!u64i> loc(#loc176)
        cir.scope {
          %15 = cir.const #cir.int<100> : !s32i loc(#loc40)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc40)
          %17 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc41)
          %18 = cir.binop(sub, %16, %17) : !u64i loc(#loc178)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc42)
          %21 = cir.cmp(gt, %18, %20) : !u64i, !s32i loc(#loc179)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc43)
          cir.if %22 {
            cir.scope {
              %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
              %24 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc48)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc49)
              %26 = cir.const #cir.int<100> : !s32i loc(#loc50)
              %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc50)
              %28 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc51)
              %29 = cir.binop(sub, %27, %28) : !u64i loc(#loc182)
              %30 = cir.cast(integral, %29 : !u64i), !s32i loc(#loc182)
              %31 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
              %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
              %33 = cir.call @fgets(%25, %30, %32) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc53)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc54)
              %36 = cir.cmp(ne, %33, %35) : !cir.ptr<!s8i>, !s32i loc(#loc183)
              %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc55)
              cir.if %37 {
                %38 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
                %39 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                %40 = cir.call @strlen(%39) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
                cir.store %40, %11 : !u64i, !cir.ptr<!u64i> loc(#loc185)
                cir.scope {
                  %41 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc66)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc66)
                  %44 = cir.cmp(gt, %41, %43) : !u64i, !s32i loc(#loc187)
                  %45 = cir.cast(int_to_bool, %44 : !s32i), !cir.bool loc(#loc67)
                  %46 = cir.ternary(%45, true {
                    %47 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                    %48 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                    %49 = cir.const #cir.int<1> : !s32i loc(#loc71)
                    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc71)
                    %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc188)
                    %52 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                    %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc69)
                    %54 = cir.cast(integral, %53 : !s8i), !s32i loc(#loc69)
                    %55 = cir.const #cir.int<10> : !s32i loc(#loc73)
                    %56 = cir.cmp(eq, %54, %55) : !s32i, !s32i loc(#loc189)
                    %57 = cir.cast(int_to_bool, %56 : !s32i), !cir.bool loc(#loc74)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc68)
                      cir.yield %59 : !cir.bool loc(#loc68)
                    }, false {
                      %59 = cir.const #false loc(#loc68)
                      cir.yield %59 : !cir.bool loc(#loc68)
                    }) : (!cir.bool) -> !cir.bool loc(#loc68)
                    cir.yield %58 : !cir.bool loc(#loc68)
                  }, false {
                    %47 = cir.const #false loc(#loc68)
                    cir.yield %47 : !cir.bool loc(#loc68)
                  }) : (!cir.bool) -> !cir.bool loc(#loc68)
                  cir.if %46 {
                    %47 = cir.const #cir.int<0> : !s32i loc(#loc76)
                    %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc76)
                    %49 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
                    %50 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc78)
                    %51 = cir.const #cir.int<1> : !s32i loc(#loc79)
                    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc79)
                    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc191)
                    %54 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc80)
                    cir.store %48, %54 : !s8i, !cir.ptr<!s8i> loc(#loc192)
                  } loc(#loc190)
                } loc(#loc186)
              } else {
                %38 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc81)
                %40 = cir.const #cir.int<0> : !s32i loc(#loc82)
                %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc82)
                %42 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
                %43 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc84)
                %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc85)
                cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc193)
              } loc(#loc184)
            } loc(#loc181)
          } loc(#loc180)
        } loc(#loc177)
      } loc(#loc175)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    } loc(#loc173)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc196)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc198)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
        %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc12)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc12)
        %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc99)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc199)
        cir.scope {
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc105)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc201)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc106)
          cir.if %18 {
            %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc108)
            %20 = cir.call @pclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc109)
          } loc(#loc202)
        } loc(#loc200)
      } loc(#loc197)
    } loc(#loc195)
    cir.return loc(#loc16)
  } loc(#loc167)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_popen_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc112)
    cir.return loc(#loc111)
  } loc(#loc203)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc205)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc116)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc209)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc210)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc208)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc209)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc210)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc210)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc213)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc134)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
      %11 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc116)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc116)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc134)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    } loc(#loc212)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc216)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc218)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
        %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc149)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc149)
        %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc150)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
        cir.scope {
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc155)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc156)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc156)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc221)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc157)
          cir.if %18 {
            %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc159)
            %20 = cir.call @pclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc160)
          } loc(#loc222)
        } loc(#loc220)
      } loc(#loc217)
    } loc(#loc215)
    cir.return loc(#loc118)
  } loc(#loc206)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":67:31)
#loc10 = loc("/usr/include/stdio.h":903:1)
#loc11 = loc("/usr/include/stdio.h":904:3)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":80:32)
#loc13 = loc("/usr/include/stdio.h":897:1)
#loc14 = loc("/usr/include/stdio.h":897:36)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":39:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":87:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":41:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":41:12)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":42:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":42:25)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":43:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":43:25)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":44:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":44:26)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":45:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":45:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":46:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":74:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":47:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":47:24)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":47:23)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":48:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":72:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":50:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":50:41)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":50:30)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":50:37)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":52:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":71:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":52:17)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":52:21)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":52:31)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":52:29)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":53:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":70:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:32)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:31)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:47)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:51)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:61)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:21)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:71)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:68)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":56:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":64:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":66:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":59:31)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":59:38)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":59:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":59:42)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":63:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:25)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:35)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:33)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:37)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:40)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:45)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:53)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:54)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:59)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:56)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":61:21)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":62:43)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":62:25)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":62:30)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":62:38)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":62:39)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":67:21)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":69:37)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":69:21)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":69:26)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":69:33)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":73:21)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":73:10)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":73:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":75:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":86:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":76:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":76:24)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":76:23)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":77:9)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":85:9)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":78:13)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":78:19)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":80:26)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":80:20)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":80:13)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":80:35)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":81:13)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":84:13)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":81:17)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":81:25)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":81:22)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":82:13)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":83:24)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":83:17)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":121:1)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":124:1)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":123:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":123:13)
#loc114 = loc("/usr/include/string.h":149:1)
#loc115 = loc("/usr/include/string.h":150:14)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":104:22)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":94:1)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":119:1)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":96:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":96:12)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":97:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":97:25)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":98:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":98:25)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":99:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":99:26)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":100:12)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":100:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":101:5)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":106:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":102:9)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":102:24)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":102:23)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":104:9)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":104:16)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":105:21)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":105:10)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":105:9)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":107:5)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":118:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":108:9)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":108:24)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":108:23)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":109:9)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":117:9)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":110:13)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":110:19)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":112:26)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":112:32)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":112:20)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":112:13)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":112:35)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":113:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":116:13)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":113:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":113:25)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":113:22)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":114:13)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":115:24)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":115:17)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc10, #loc11])
#loc166 = loc(fused[#loc13, #loc14])
#loc167 = loc(fused[#loc15, #loc16])
#loc168 = loc(fused[#loc17, #loc18])
#loc169 = loc(fused[#loc19, #loc20])
#loc170 = loc(fused[#loc21, #loc22])
#loc171 = loc(fused[#loc23, #loc24])
#loc172 = loc(fused[#loc26, #loc25])
#loc173 = loc(fused[#loc27, #loc28])
#loc174 = loc(fused[#loc29, #loc30])
#loc175 = loc(fused[#loc32, #loc33])
#loc176 = loc(fused[#loc34, #loc35])
#loc177 = loc(fused[#loc38, #loc39])
#loc178 = loc(fused[#loc40, #loc41])
#loc179 = loc(fused[#loc40, #loc42])
#loc180 = loc(fused[#loc44, #loc39])
#loc181 = loc(fused[#loc45, #loc46])
#loc182 = loc(fused[#loc50, #loc51])
#loc183 = loc(fused[#loc53, #loc54])
#loc184 = loc(fused[#loc56, #loc57, #loc58, #loc46])
#loc185 = loc(fused[#loc61, #loc62])
#loc186 = loc(fused[#loc63, #loc64])
#loc187 = loc(fused[#loc65, #loc66])
#loc188 = loc(fused[#loc70, #loc71])
#loc189 = loc(fused[#loc69, #loc73])
#loc190 = loc(fused[#loc75, #loc64])
#loc191 = loc(fused[#loc78, #loc79])
#loc192 = loc(fused[#loc77, #loc76])
#loc193 = loc(fused[#loc83, #loc82])
#loc194 = loc(fused[#loc88, #loc86])
#loc195 = loc(fused[#loc89, #loc90])
#loc196 = loc(fused[#loc91, #loc92])
#loc197 = loc(fused[#loc94, #loc95])
#loc198 = loc(fused[#loc96, #loc97])
#loc199 = loc(fused[#loc100, #loc101])
#loc200 = loc(fused[#loc102, #loc103])
#loc201 = loc(fused[#loc104, #loc105])
#loc202 = loc(fused[#loc107, #loc103])
#loc203 = loc(fused[#loc110, #loc111])
#loc204 = loc(fused[#loc112, #loc113])
#loc205 = loc(fused[#loc114, #loc115])
#loc206 = loc(fused[#loc117, #loc118])
#loc207 = loc(fused[#loc119, #loc120])
#loc208 = loc(fused[#loc121, #loc122])
#loc209 = loc(fused[#loc123, #loc124])
#loc210 = loc(fused[#loc125, #loc126])
#loc211 = loc(fused[#loc128, #loc127])
#loc212 = loc(fused[#loc129, #loc130])
#loc213 = loc(fused[#loc131, #loc132])
#loc214 = loc(fused[#loc138, #loc136])
#loc215 = loc(fused[#loc139, #loc140])
#loc216 = loc(fused[#loc141, #loc142])
#loc217 = loc(fused[#loc144, #loc145])
#loc218 = loc(fused[#loc146, #loc147])
#loc219 = loc(fused[#loc151, #loc152])
#loc220 = loc(fused[#loc153, #loc154])
#loc221 = loc(fused[#loc155, #loc156])
#loc222 = loc(fused[#loc158, #loc154])
