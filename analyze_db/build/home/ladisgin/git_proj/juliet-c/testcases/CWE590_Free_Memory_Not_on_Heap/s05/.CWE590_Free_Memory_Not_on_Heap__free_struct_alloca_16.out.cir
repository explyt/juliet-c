!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":100:10)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":100:14)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":100:20)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":100:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc170 = loc(fused[#loc67, #loc68])
#loc171 = loc(fused[#loc69, #loc70])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc146)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc147)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc153)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb3, ^bb16 loc(#loc17)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc154)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc8)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc8)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc8)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc149)
    cir.br ^bb5 loc(#loc155)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc156)
  ^bb6:  // pred: ^bb5
    %13 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc24)
    cir.store %14, %1 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.br ^bb7 loc(#loc156)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc26)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc27)
    %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc158)
    cir.brcond %18 ^bb8, ^bb12 loc(#loc28)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc159)
  ^bb9:  // pred: ^bb8
    %19 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc23)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc41)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    cir.br ^bb7 loc(#loc156)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc23)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc21)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    cir.store %31, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc163)
    cir.br ^bb15 loc(#loc19)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc44)
  ^bb16:  // 2 preds: ^bb2, ^bb15
    cir.br ^bb17 loc(#loc16)
  ^bb17:  // pred: ^bb16
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %33 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    cir.call @printStructLine(%34) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc48)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc49)
    cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
    cir.return loc(#loc6)
  } loc(#loc148)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc52)
  } loc(#loc164)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc166)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc64)
  cir.func @main(%arg0: !s32i loc(fused[#loc67, #loc68]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc69, #loc70])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc66)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc71)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc72)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc73)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc73)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc74)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc61)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16_good() : () -> () loc(#loc76)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc63)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16_bad() : () -> () loc(#loc80)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc64)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.return %17 : !s32i loc(#loc174)
  } loc(#loc169)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc87)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc176)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc102)
    cir.brcond %5 ^bb3, ^bb20 loc(#loc102)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc183)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc105)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc106)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc184)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc185)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
    cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc178)
    cir.br ^bb5 loc(#loc187)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc188)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc189)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc115)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc116)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb7 loc(#loc110)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc110)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc190)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc191)
  ^bb10:  // pred: ^bb9
    %21 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc121)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    cir.br ^bb11 loc(#loc191)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc123)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc124)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc193)
    cir.brcond %26 ^bb12, ^bb16 loc(#loc125)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc194)
  ^bb13:  // pred: ^bb12
    %27 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %34 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.br ^bb14 loc(#loc120)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc120)
  ^bb15:  // pred: ^bb14
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc136)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc197)
    cir.br ^bb11 loc(#loc191)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc120)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc118)
  ^bb18:  // pred: ^bb17
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    cir.store %39, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc198)
    cir.br ^bb19 loc(#loc104)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc139)
  ^bb20:  // 2 preds: ^bb2, ^bb19
    cir.br ^bb21 loc(#loc101)
  ^bb21:  // pred: ^bb20
    %40 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!ty__twoIntsStruct>, %41 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
    cir.call @printStructLine(%42) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc143)
    %43 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc144)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc145)
    cir.return loc(#loc91)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":47:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":31:13)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":31:59)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":33:17)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":33:24)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":25:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":25:21)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":26:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":26:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":27:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":43:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":27:11)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":29:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":41:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":32:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":39:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":34:17)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":38:17)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":34:26)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":34:22)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":34:29)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":34:33)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":34:31)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":35:17)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":36:44)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":36:21)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":36:32)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":36:33)
#loc34 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":37:44)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":37:21)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":37:32)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":37:33)
#loc39 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":34:39)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":34:38)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":40:20)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":40:13)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":42:9)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":44:22)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":44:27)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":44:28)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":44:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":46:10)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":46:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":85:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":88:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":87:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":87:13)
#loc55 = loc("/usr/include/stdlib.h":575:1)
#loc56 = loc("/usr/include/stdlib.h":575:41)
#loc57 = loc("/usr/include/time.h":76:1)
#loc58 = loc("/usr/include/time.h":76:38)
#loc59 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":105:15)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":107:15)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":110:15)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":112:15)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":100:1)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":115:1)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":101:1)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":103:27)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":103:22)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":103:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":105:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":106:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":106:64)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":107:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":110:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":111:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":111:63)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":112:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":114:12)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":114:5)
#loc85 = loc("/usr/include/stdlib.h":672:1)
#loc86 = loc("/usr/include/stdlib.h":672:45)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":65:27)
#loc88 = loc("/usr/include/stdlib.h":756:1)
#loc89 = loc("/usr/include/stdlib.h":756:70)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":54:1)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":83:1)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":62:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":62:91)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":69:17)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":69:24)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":56:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":56:21)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":57:12)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":57:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":58:5)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":79:5)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":58:11)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":60:9)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":77:9)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":62:59)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":62:66)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":62:70)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":62:90)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":63:13)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":67:13)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":63:17)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":63:31)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":64:13)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":65:17)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":66:17)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":66:22)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":68:13)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":75:13)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":70:17)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":74:17)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":70:26)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":70:22)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":70:29)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":70:33)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":70:31)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":71:17)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":72:44)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":72:21)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":72:32)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":72:33)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":73:44)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":73:21)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":73:32)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":73:33)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":70:39)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":70:38)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":76:20)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":76:13)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":78:9)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":80:22)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":80:27)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":80:28)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":80:5)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":82:10)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_16.c":82:5)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc9, #loc10])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc14, #loc13])
#loc153 = loc(fused[#loc15, #loc16])
#loc154 = loc(fused[#loc18, #loc19])
#loc155 = loc(fused[#loc20, #loc21])
#loc156 = loc(fused[#loc22, #loc23])
#loc157 = loc(fused[#loc25, #loc24])
#loc158 = loc(fused[#loc26, #loc27])
#loc159 = loc(fused[#loc29, #loc23])
#loc160 = loc(fused[#loc31, #loc30])
#loc161 = loc(fused[#loc36, #loc35])
#loc162 = loc(fused[#loc41, #loc40])
#loc163 = loc(fused[#loc43, #loc42])
#loc164 = loc(fused[#loc51, #loc52])
#loc165 = loc(fused[#loc53, #loc54])
#loc166 = loc(fused[#loc55, #loc56])
#loc167 = loc(fused[#loc57, #loc58])
#loc168 = loc(fused[#loc59, #loc60])
#loc169 = loc(fused[#loc65, #loc66])
#loc172 = loc(fused[#loc76, #loc77])
#loc173 = loc(fused[#loc80, #loc81])
#loc174 = loc(fused[#loc84, #loc83])
#loc175 = loc(fused[#loc85, #loc86])
#loc176 = loc(fused[#loc88, #loc89])
#loc177 = loc(fused[#loc90, #loc91])
#loc178 = loc(fused[#loc92, #loc93])
#loc179 = loc(fused[#loc94, #loc95])
#loc180 = loc(fused[#loc96, #loc97])
#loc181 = loc(fused[#loc99, #loc98])
#loc182 = loc(fused[#loc100, #loc101])
#loc183 = loc(fused[#loc103, #loc104])
#loc184 = loc(fused[#loc107, #loc108])
#loc185 = loc(fused[#loc106, #loc108])
#loc186 = loc(fused[#loc105, #loc93])
#loc187 = loc(fused[#loc109, #loc110])
#loc188 = loc(fused[#loc111, #loc112])
#loc189 = loc(fused[#loc113, #loc110])
#loc190 = loc(fused[#loc117, #loc118])
#loc191 = loc(fused[#loc119, #loc120])
#loc192 = loc(fused[#loc122, #loc121])
#loc193 = loc(fused[#loc123, #loc124])
#loc194 = loc(fused[#loc126, #loc120])
#loc195 = loc(fused[#loc128, #loc127])
#loc196 = loc(fused[#loc132, #loc131])
#loc197 = loc(fused[#loc136, #loc135])
#loc198 = loc(fused[#loc138, #loc137])
