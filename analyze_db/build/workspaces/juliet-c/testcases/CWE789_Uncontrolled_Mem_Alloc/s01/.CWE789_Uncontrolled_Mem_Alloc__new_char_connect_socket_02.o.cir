!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc508)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc509)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc510)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc511)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc512)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc513)
  cir.func private @close(!s32i) -> !s32i loc(#loc514)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc515)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc516)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc517)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc23)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc519)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc28)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc520)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc32)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc524)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc525)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc526)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc527)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc41)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc526)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc48)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc49)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc49)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc50)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc50)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc530)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc57)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc57)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc532)
                  cir.if %60 {
                    cir.break loc(#loc59)
                  } loc(#loc533)
                } loc(#loc531)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc534)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc62)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc535)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc536)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc67)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc67)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc537)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc70)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc538)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc75)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc75)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc76)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc539)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc541)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc542)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc542)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc87)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc88)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc88)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc543)
                  cir.if %64 {
                    cir.break loc(#loc90)
                  } loc(#loc544)
                } loc(#loc540)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc92)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc93)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc93)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc93)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc93)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc93)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc93)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc93)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc94)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc94)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc545)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc95)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc96)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc96)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc546)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc102)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc102)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc548)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc103)
                    cir.yield %62 : !cir.bool loc(#loc103)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc105)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc549)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc103)
                      cir.yield %66 : !cir.bool loc(#loc103)
                    }, false {
                      %66 = cir.const #false loc(#loc103)
                      cir.yield %66 : !cir.bool loc(#loc103)
                    }) : (!cir.bool) -> !cir.bool loc(#loc103)
                    cir.yield %65 : !cir.bool loc(#loc103)
                  }) : (!cir.bool) -> !cir.bool loc(#loc103)
                  cir.if %61 {
                    cir.break loc(#loc107)
                  } loc(#loc550)
                } loc(#loc547)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc108)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc110)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc110)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc551)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc111)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc112)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc114)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc111)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc552)
              } loc(#loc529)
              cir.yield loc(#loc45)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc117)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc117)
              cir.condition(%12) loc(#loc117)
            } loc(#loc528)
          } loc(#loc528)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc121)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc121)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc554)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc124)
            } loc(#loc555)
          } loc(#loc553)
        } loc(#loc523)
      } loc(#loc522)
    } loc(#loc521)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc127)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc127)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc559)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc135)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc561)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc562)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc141)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc142)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc564)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc565)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc146)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc20)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc20)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc149)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
              cir.delete.array %18 : <!s8i> loc(#loc150)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc23)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc23)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc151)
            } loc(#loc563)
          } loc(#loc560)
        } loc(#loc558)
      } loc(#loc557)
    } loc(#loc556)
    cir.return loc(#loc25)
  } loc(#loc518)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc153)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc567)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc158)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc158)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc568)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc162)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc162)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc572)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc573)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc574)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc575)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc171)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc171)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc574)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc178)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc179)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc179)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc180)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc180)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc181)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc578)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc186)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc187)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc187)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc580)
                  cir.if %60 {
                    cir.break loc(#loc189)
                  } loc(#loc581)
                } loc(#loc579)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc582)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc192)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc583)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc584)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc197)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc197)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc585)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc199)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc199)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc200)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc586)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc203)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc203)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc204)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc587)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc209)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc589)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc590)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc590)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc214)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc215)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc215)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc591)
                  cir.if %64 {
                    cir.break loc(#loc217)
                  } loc(#loc592)
                } loc(#loc588)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc219)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc219)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc220)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc220)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc220)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc220)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc220)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc220)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc220)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc221)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc221)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc593)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc222)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc223)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc223)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc594)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc229)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc229)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc596)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc230)
                    cir.yield %62 : !cir.bool loc(#loc230)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc232)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc597)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc230)
                      cir.yield %66 : !cir.bool loc(#loc230)
                    }, false {
                      %66 = cir.const #false loc(#loc230)
                      cir.yield %66 : !cir.bool loc(#loc230)
                    }) : (!cir.bool) -> !cir.bool loc(#loc230)
                    cir.yield %65 : !cir.bool loc(#loc230)
                  }) : (!cir.bool) -> !cir.bool loc(#loc230)
                  cir.if %61 {
                    cir.break loc(#loc234)
                  } loc(#loc598)
                } loc(#loc595)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc235)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc237)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc237)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc599)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc238)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc239)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc241)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc238)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc600)
              } loc(#loc577)
              cir.yield loc(#loc175)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc244)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc244)
              cir.condition(%12) loc(#loc244)
            } loc(#loc576)
          } loc(#loc576)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc247)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc248)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc248)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc602)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc250)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc251)
            } loc(#loc603)
          } loc(#loc601)
        } loc(#loc571)
      } loc(#loc570)
    } loc(#loc569)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc254)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc254)
      cir.if %4 {
        %5 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc152)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc152)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc258)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc607)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc265)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc609)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc610)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc269)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc270)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc270)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc611)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc268)
                cir.yield %15 : !cir.bool loc(#loc268)
              }, false {
                %15 = cir.const #false loc(#loc268)
                cir.yield %15 : !cir.bool loc(#loc268)
              }) : (!cir.bool) -> !cir.bool loc(#loc268)
              cir.yield %14 : !cir.bool loc(#loc268)
            }, false {
              %10 = cir.const #false loc(#loc268)
              cir.yield %10 : !cir.bool loc(#loc268)
            }) : (!cir.bool) -> !cir.bool loc(#loc268)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc274)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc275)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc613)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc614)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc279)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc280)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc281)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc281)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc279)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc282)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc283)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc284)
              cir.delete.array %19 : <!s8i> loc(#loc284)
            } else {
              %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc153)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc153)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc285)
            } loc(#loc612)
          } loc(#loc608)
        } loc(#loc606)
      } loc(#loc605)
    } loc(#loc604)
    cir.return loc(#loc155)
  } loc(#loc566)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc616)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc290)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc290)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc617)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc294)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc294)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc621)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc622)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc623)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc624)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc303)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc303)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc623)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc310)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc311)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc311)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc312)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc312)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc313)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc627)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc318)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc319)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc319)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc629)
                  cir.if %60 {
                    cir.break loc(#loc321)
                  } loc(#loc630)
                } loc(#loc628)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc631)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc324)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc632)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc633)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc329)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc329)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc634)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc331)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc331)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc332)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc635)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc335)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc335)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc336)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc636)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc341)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc638)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc639)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc639)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc346)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc347)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc347)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc640)
                  cir.if %64 {
                    cir.break loc(#loc349)
                  } loc(#loc641)
                } loc(#loc637)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc350)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc351)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc351)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc352)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc352)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc352)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc352)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc352)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc352)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc352)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc353)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc353)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc642)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc354)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc355)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc355)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc643)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc360)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc361)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc361)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc645)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc362)
                    cir.yield %62 : !cir.bool loc(#loc362)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc363)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc364)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc646)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc362)
                      cir.yield %66 : !cir.bool loc(#loc362)
                    }, false {
                      %66 = cir.const #false loc(#loc362)
                      cir.yield %66 : !cir.bool loc(#loc362)
                    }) : (!cir.bool) -> !cir.bool loc(#loc362)
                    cir.yield %65 : !cir.bool loc(#loc362)
                  }) : (!cir.bool) -> !cir.bool loc(#loc362)
                  cir.if %61 {
                    cir.break loc(#loc366)
                  } loc(#loc647)
                } loc(#loc644)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc367)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc368)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc369)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc369)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc648)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc370)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc371)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc372)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc373)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc370)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc649)
              } loc(#loc626)
              cir.yield loc(#loc307)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc376)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc376)
              cir.condition(%12) loc(#loc376)
            } loc(#loc625)
          } loc(#loc625)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc379)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc380)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc380)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc651)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc382)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc383)
            } loc(#loc652)
          } loc(#loc650)
        } loc(#loc620)
      } loc(#loc619)
    } loc(#loc618)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc386)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc386)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc656)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc394)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc658)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc659)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc398)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc399)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc399)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc660)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc397)
                cir.yield %15 : !cir.bool loc(#loc397)
              }, false {
                %15 = cir.const #false loc(#loc397)
                cir.yield %15 : !cir.bool loc(#loc397)
              }) : (!cir.bool) -> !cir.bool loc(#loc397)
              cir.yield %14 : !cir.bool loc(#loc397)
            }, false {
              %10 = cir.const #false loc(#loc397)
              cir.yield %10 : !cir.bool loc(#loc397)
            }) : (!cir.bool) -> !cir.bool loc(#loc397)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc403)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc404)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc662)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc663)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc408)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc409)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc410)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc410)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc408)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc411)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc412)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc413)
              cir.delete.array %19 : <!s8i> loc(#loc413)
            } else {
              %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc414)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc414)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc415)
            } loc(#loc661)
          } loc(#loc657)
        } loc(#loc655)
      } loc(#loc654)
    } loc(#loc653)
    cir.return loc(#loc287)
  } loc(#loc615)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc665)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc420)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc420)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc666)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc424)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc424)
      cir.if %4 {
        %5 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc428)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc428)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc429)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc430)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc430)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc669)
      } loc(#loc668)
    } loc(#loc667)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc434)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc434)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc673)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc442)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc675)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc676)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc448)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc449)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc678)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc679)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc453)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc454)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc455)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc455)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc453)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc456)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc457)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc458)
              cir.delete.array %18 : <!s8i> loc(#loc458)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc459)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc459)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc460)
            } loc(#loc677)
          } loc(#loc674)
        } loc(#loc672)
      } loc(#loc671)
    } loc(#loc670)
    cir.return loc(#loc417)
  } loc(#loc664)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc681)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc465)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc465)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc682)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc469)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc469)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc471)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc471)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc685)
      } loc(#loc684)
    } loc(#loc683)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc475)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc475)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc689)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc483)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc691)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc692)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc489)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc490)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc694)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc695)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc494)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc495)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc496)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc496)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc494)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc497)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc498)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc499)
              cir.delete.array %18 : <!s8i> loc(#loc499)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc500)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc500)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc501)
            } loc(#loc693)
          } loc(#loc690)
        } loc(#loc688)
      } loc(#loc687)
    } loc(#loc686)
    cir.return loc(#loc462)
  } loc(#loc680)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02L8goodB2G1Ev() : () -> () loc(#loc504)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02L8goodB2G2Ev() : () -> () loc(#loc505)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02L8goodG2B1Ev() : () -> () loc(#loc506)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02L8goodG2B2Ev() : () -> () loc(#loc507)
    cir.return loc(#loc503)
  } loc(#loc696)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":86:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":219:1)
#loc13 = loc("/usr/include/stdlib.h":223:6)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("/usr/include/string.h":141:1)
#loc19 = loc("/usr/include/string.h":142:14)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":128:34)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":134:27)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":53:1)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":138:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":55:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":55:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":57:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":57:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":58:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":116:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":58:8)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":59:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":60:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":115:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":65:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":65:17)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":66:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":66:32)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":67:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":67:36)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":68:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":68:45)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":69:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":104:21)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":70:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":103:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":79:40)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":79:49)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":79:62)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":79:33)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":79:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":79:73)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":80:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":83:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":80:21)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":80:38)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":81:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":82:21)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":84:24)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":84:25)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":84:34)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":84:37)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":84:51)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":84:17)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":84:52)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":85:38)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":85:17)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":86:43)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":86:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":86:63)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":87:42)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":87:36)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":87:17)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":87:50)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":88:17)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":91:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":88:29)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":88:62)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":88:63)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":88:72)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":88:86)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":88:21)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":88:92)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":89:17)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":90:21)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":94:35)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":94:50)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":94:63)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":94:81)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":94:84)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":94:30)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":94:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":94:85)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":95:17)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":98:17)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":95:21)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":95:35)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":95:48)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":95:51)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":95:65)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":96:17)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":97:21)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":100:43)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":100:29)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":100:17)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":102:24)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":102:32)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":102:45)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":102:51)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":102:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":102:52)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":104:20)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":105:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":108:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":105:17)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":105:34)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":106:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":107:30)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":107:17)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":117:5)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":137:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":117:8)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":118:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":119:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":136:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":120:13)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":120:20)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":124:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":135:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":124:17)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":124:24)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":124:43)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":125:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":131:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":133:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":126:37)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":53:6)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":126:28)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":126:41)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":126:17)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":128:17)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":128:24)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":129:27)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":129:17)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":130:27)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":134:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":212:19)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":231:27)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":145:1)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":235:1)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":147:5)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":147:12)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":149:12)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":149:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":150:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":208:5)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":150:8)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":151:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":152:9)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":207:9)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":157:13)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":157:17)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":158:13)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":158:32)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":159:13)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":159:36)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":160:13)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":160:45)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":161:13)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":196:21)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":162:13)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":195:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":171:40)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":171:49)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":171:62)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":171:33)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":171:17)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":171:73)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":172:17)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":175:17)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":172:21)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":172:38)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":173:17)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":174:21)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":176:24)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":176:25)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":176:34)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":176:37)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":176:51)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":176:17)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":176:52)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":177:38)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":177:17)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":178:53)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":178:43)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":178:17)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":178:63)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":179:42)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":179:36)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":179:17)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":179:50)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":180:17)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":183:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":180:29)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":180:62)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":180:63)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":180:72)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":180:86)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":180:21)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":180:92)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":181:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":182:21)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":186:35)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":186:50)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":186:63)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":186:81)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":186:84)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":186:30)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":186:17)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":186:85)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":187:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":190:17)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":187:21)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":187:35)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":187:48)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":187:51)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":187:65)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":188:17)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":189:21)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":192:43)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":192:29)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":192:17)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":194:24)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":194:32)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":194:45)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":194:51)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":194:17)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":194:52)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":196:20)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":197:13)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":200:13)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":197:17)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":197:34)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":198:13)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":199:30)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":199:17)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":209:5)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":234:5)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":209:8)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":210:5)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":213:5)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":215:5)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":212:9)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":216:9)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":233:9)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":217:13)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":217:20)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":221:13)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":232:13)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":221:17)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":221:24)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":221:43)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":221:45)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":221:48)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":221:55)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":222:13)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":228:13)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":230:13)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":223:37)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":145:13)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":223:28)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":223:41)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":223:17)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":225:17)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":225:24)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":225:34)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":226:27)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":226:17)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":227:27)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":231:17)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":238:1)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":323:1)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":240:5)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":240:12)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":242:12)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":242:5)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":243:5)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":301:5)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":243:8)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":244:5)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":245:9)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":300:9)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":250:13)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":250:17)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":251:13)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":251:32)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":252:13)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":252:36)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":253:13)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":253:45)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":254:13)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":289:21)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":255:13)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":288:13)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":264:40)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":264:49)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":264:62)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":264:33)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":264:17)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":264:73)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":265:17)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":268:17)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":265:21)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":265:38)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":266:17)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":267:21)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":269:24)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":269:25)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":269:34)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":269:37)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":269:51)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":269:17)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":269:52)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":270:38)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":270:17)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":271:53)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":271:43)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":271:17)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":271:63)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":272:42)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":272:36)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":272:17)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":272:50)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":273:17)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":276:17)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":273:29)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":273:62)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":273:63)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":273:72)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":273:86)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":273:21)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":273:92)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":274:17)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":275:21)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":279:35)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":279:50)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":279:63)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":279:81)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":279:84)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":279:30)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":279:17)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":279:85)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":280:17)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":283:17)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":280:21)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":280:35)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":280:48)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":280:51)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":280:65)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":281:17)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":282:21)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":285:43)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":285:29)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":285:17)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":287:24)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":287:32)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":287:45)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":287:51)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":287:17)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":287:52)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":289:20)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":290:13)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":293:13)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":290:17)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":290:34)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":291:13)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":292:30)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":292:17)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":302:5)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":322:5)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":302:8)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":303:5)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":304:9)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":321:9)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":305:13)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":305:20)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":309:13)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":320:13)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":309:17)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":309:24)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":309:43)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":309:45)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":309:48)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":309:55)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":310:13)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":316:13)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":318:13)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":311:37)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":238:13)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":311:28)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":311:41)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":311:17)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":313:17)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":313:24)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":313:34)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":314:27)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":314:17)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":315:27)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":319:27)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":319:17)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":326:1)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":362:1)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":328:5)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":328:12)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":330:12)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":330:5)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":331:5)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":340:5)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":331:8)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":332:5)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":335:5)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":337:5)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":334:19)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":334:9)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":339:16)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":339:9)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":341:5)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":361:5)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":341:8)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":342:5)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":343:9)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":360:9)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":344:13)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":344:20)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":348:13)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":359:13)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":348:17)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":348:24)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":348:43)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":349:13)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":355:13)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":357:13)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":350:37)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":326:13)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":350:28)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":350:41)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":350:17)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":352:17)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":352:24)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":352:34)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":353:27)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":353:17)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":354:27)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":358:27)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":358:17)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":365:1)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":396:1)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":367:5)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":367:12)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":369:12)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":369:5)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":370:5)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":374:5)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":370:8)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":371:5)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":373:16)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":373:9)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":375:5)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":395:5)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":375:8)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":376:5)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":377:9)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":394:9)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":378:13)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":378:20)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":382:13)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":393:13)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":382:17)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":382:24)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":382:43)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":383:13)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":389:13)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":391:13)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":384:37)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":365:13)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":384:28)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":384:41)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":384:17)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":386:17)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":386:24)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":386:34)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":387:27)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":387:17)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":388:27)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":392:27)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":392:17)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":398:1)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":404:1)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":400:5)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":401:5)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":402:5)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_02.cpp":403:5)
#loc508 = loc(fused[#loc1, #loc2])
#loc509 = loc(fused[#loc3, #loc4])
#loc510 = loc(fused[#loc6, #loc7])
#loc511 = loc(fused[#loc8, #loc9])
#loc512 = loc(fused[#loc10, #loc11])
#loc513 = loc(fused[#loc12, #loc13])
#loc514 = loc(fused[#loc14, #loc15])
#loc515 = loc(fused[#loc16, #loc17])
#loc516 = loc(fused[#loc18, #loc19])
#loc517 = loc(fused[#loc21, #loc22])
#loc518 = loc(fused[#loc24, #loc25])
#loc519 = loc(fused[#loc26, #loc27])
#loc520 = loc(fused[#loc29, #loc28])
#loc521 = loc(fused[#loc30, #loc31])
#loc522 = loc(fused[#loc33, #loc31])
#loc523 = loc(fused[#loc34, #loc35])
#loc524 = loc(fused[#loc36, #loc37])
#loc525 = loc(fused[#loc38, #loc39])
#loc526 = loc(fused[#loc40, #loc41])
#loc527 = loc(fused[#loc42, #loc43])
#loc528 = loc(fused[#loc44, #loc45])
#loc529 = loc(fused[#loc46, #loc47])
#loc530 = loc(fused[#loc52, #loc53])
#loc531 = loc(fused[#loc54, #loc55])
#loc532 = loc(fused[#loc56, #loc57])
#loc533 = loc(fused[#loc58, #loc55])
#loc534 = loc(fused[#loc60, #loc61])
#loc535 = loc(fused[#loc63, #loc64])
#loc536 = loc(fused[#loc65, #loc66])
#loc537 = loc(fused[#loc69, #loc67])
#loc538 = loc(fused[#loc73, #loc74])
#loc539 = loc(fused[#loc78, #loc79])
#loc540 = loc(fused[#loc80, #loc81])
#loc541 = loc(fused[#loc83, #loc84])
#loc542 = loc(fused[#loc85, #loc86])
#loc543 = loc(fused[#loc87, #loc88])
#loc544 = loc(fused[#loc89, #loc81])
#loc545 = loc(fused[#loc93, #loc94])
#loc546 = loc(fused[#loc97, #loc98])
#loc547 = loc(fused[#loc99, #loc100])
#loc548 = loc(fused[#loc101, #loc102])
#loc549 = loc(fused[#loc104, #loc105])
#loc550 = loc(fused[#loc106, #loc100])
#loc551 = loc(fused[#loc110, #loc108])
#loc552 = loc(fused[#loc115, #loc116])
#loc553 = loc(fused[#loc118, #loc119])
#loc554 = loc(fused[#loc120, #loc121])
#loc555 = loc(fused[#loc122, #loc119])
#loc556 = loc(fused[#loc125, #loc126])
#loc557 = loc(fused[#loc128, #loc126])
#loc558 = loc(fused[#loc129, #loc130])
#loc559 = loc(fused[#loc131, #loc132])
#loc560 = loc(fused[#loc133, #loc134])
#loc561 = loc(fused[#loc136, #loc137])
#loc562 = loc(fused[#loc135, #loc137])
#loc563 = loc(fused[#loc138, #loc139, #loc140, #loc134])
#loc564 = loc(fused[#loc143, #loc144])
#loc565 = loc(fused[#loc145, #loc144])
#loc566 = loc(fused[#loc154, #loc155])
#loc567 = loc(fused[#loc156, #loc157])
#loc568 = loc(fused[#loc159, #loc158])
#loc569 = loc(fused[#loc160, #loc161])
#loc570 = loc(fused[#loc163, #loc161])
#loc571 = loc(fused[#loc164, #loc165])
#loc572 = loc(fused[#loc166, #loc167])
#loc573 = loc(fused[#loc168, #loc169])
#loc574 = loc(fused[#loc170, #loc171])
#loc575 = loc(fused[#loc172, #loc173])
#loc576 = loc(fused[#loc174, #loc175])
#loc577 = loc(fused[#loc176, #loc177])
#loc578 = loc(fused[#loc182, #loc183])
#loc579 = loc(fused[#loc184, #loc185])
#loc580 = loc(fused[#loc186, #loc187])
#loc581 = loc(fused[#loc188, #loc185])
#loc582 = loc(fused[#loc190, #loc191])
#loc583 = loc(fused[#loc193, #loc194])
#loc584 = loc(fused[#loc195, #loc196])
#loc585 = loc(fused[#loc198, #loc197])
#loc586 = loc(fused[#loc201, #loc202])
#loc587 = loc(fused[#loc205, #loc206])
#loc588 = loc(fused[#loc207, #loc208])
#loc589 = loc(fused[#loc210, #loc211])
#loc590 = loc(fused[#loc212, #loc213])
#loc591 = loc(fused[#loc214, #loc215])
#loc592 = loc(fused[#loc216, #loc208])
#loc593 = loc(fused[#loc220, #loc221])
#loc594 = loc(fused[#loc224, #loc225])
#loc595 = loc(fused[#loc226, #loc227])
#loc596 = loc(fused[#loc228, #loc229])
#loc597 = loc(fused[#loc231, #loc232])
#loc598 = loc(fused[#loc233, #loc227])
#loc599 = loc(fused[#loc237, #loc235])
#loc600 = loc(fused[#loc242, #loc243])
#loc601 = loc(fused[#loc245, #loc246])
#loc602 = loc(fused[#loc247, #loc248])
#loc603 = loc(fused[#loc249, #loc246])
#loc604 = loc(fused[#loc252, #loc253])
#loc605 = loc(fused[#loc255, #loc256, #loc257, #loc253])
#loc606 = loc(fused[#loc259, #loc260])
#loc607 = loc(fused[#loc261, #loc262])
#loc608 = loc(fused[#loc263, #loc264])
#loc609 = loc(fused[#loc266, #loc267])
#loc610 = loc(fused[#loc265, #loc267])
#loc611 = loc(fused[#loc269, #loc270])
#loc612 = loc(fused[#loc271, #loc272, #loc273, #loc264])
#loc613 = loc(fused[#loc276, #loc277])
#loc614 = loc(fused[#loc278, #loc277])
#loc615 = loc(fused[#loc286, #loc287])
#loc616 = loc(fused[#loc288, #loc289])
#loc617 = loc(fused[#loc291, #loc290])
#loc618 = loc(fused[#loc292, #loc293])
#loc619 = loc(fused[#loc295, #loc293])
#loc620 = loc(fused[#loc296, #loc297])
#loc621 = loc(fused[#loc298, #loc299])
#loc622 = loc(fused[#loc300, #loc301])
#loc623 = loc(fused[#loc302, #loc303])
#loc624 = loc(fused[#loc304, #loc305])
#loc625 = loc(fused[#loc306, #loc307])
#loc626 = loc(fused[#loc308, #loc309])
#loc627 = loc(fused[#loc314, #loc315])
#loc628 = loc(fused[#loc316, #loc317])
#loc629 = loc(fused[#loc318, #loc319])
#loc630 = loc(fused[#loc320, #loc317])
#loc631 = loc(fused[#loc322, #loc323])
#loc632 = loc(fused[#loc325, #loc326])
#loc633 = loc(fused[#loc327, #loc328])
#loc634 = loc(fused[#loc330, #loc329])
#loc635 = loc(fused[#loc333, #loc334])
#loc636 = loc(fused[#loc337, #loc338])
#loc637 = loc(fused[#loc339, #loc340])
#loc638 = loc(fused[#loc342, #loc343])
#loc639 = loc(fused[#loc344, #loc345])
#loc640 = loc(fused[#loc346, #loc347])
#loc641 = loc(fused[#loc348, #loc340])
#loc642 = loc(fused[#loc352, #loc353])
#loc643 = loc(fused[#loc356, #loc357])
#loc644 = loc(fused[#loc358, #loc359])
#loc645 = loc(fused[#loc360, #loc361])
#loc646 = loc(fused[#loc363, #loc364])
#loc647 = loc(fused[#loc365, #loc359])
#loc648 = loc(fused[#loc369, #loc367])
#loc649 = loc(fused[#loc374, #loc375])
#loc650 = loc(fused[#loc377, #loc378])
#loc651 = loc(fused[#loc379, #loc380])
#loc652 = loc(fused[#loc381, #loc378])
#loc653 = loc(fused[#loc384, #loc385])
#loc654 = loc(fused[#loc387, #loc385])
#loc655 = loc(fused[#loc388, #loc389])
#loc656 = loc(fused[#loc390, #loc391])
#loc657 = loc(fused[#loc392, #loc393])
#loc658 = loc(fused[#loc395, #loc396])
#loc659 = loc(fused[#loc394, #loc396])
#loc660 = loc(fused[#loc398, #loc399])
#loc661 = loc(fused[#loc400, #loc401, #loc402, #loc393])
#loc662 = loc(fused[#loc405, #loc406])
#loc663 = loc(fused[#loc407, #loc406])
#loc664 = loc(fused[#loc416, #loc417])
#loc665 = loc(fused[#loc418, #loc419])
#loc666 = loc(fused[#loc421, #loc420])
#loc667 = loc(fused[#loc422, #loc423])
#loc668 = loc(fused[#loc425, #loc426, #loc427, #loc423])
#loc669 = loc(fused[#loc431, #loc430])
#loc670 = loc(fused[#loc432, #loc433])
#loc671 = loc(fused[#loc435, #loc433])
#loc672 = loc(fused[#loc436, #loc437])
#loc673 = loc(fused[#loc438, #loc439])
#loc674 = loc(fused[#loc440, #loc441])
#loc675 = loc(fused[#loc443, #loc444])
#loc676 = loc(fused[#loc442, #loc444])
#loc677 = loc(fused[#loc445, #loc446, #loc447, #loc441])
#loc678 = loc(fused[#loc450, #loc451])
#loc679 = loc(fused[#loc452, #loc451])
#loc680 = loc(fused[#loc461, #loc462])
#loc681 = loc(fused[#loc463, #loc464])
#loc682 = loc(fused[#loc466, #loc465])
#loc683 = loc(fused[#loc467, #loc468])
#loc684 = loc(fused[#loc470, #loc468])
#loc685 = loc(fused[#loc472, #loc471])
#loc686 = loc(fused[#loc473, #loc474])
#loc687 = loc(fused[#loc476, #loc474])
#loc688 = loc(fused[#loc477, #loc478])
#loc689 = loc(fused[#loc479, #loc480])
#loc690 = loc(fused[#loc481, #loc482])
#loc691 = loc(fused[#loc484, #loc485])
#loc692 = loc(fused[#loc483, #loc485])
#loc693 = loc(fused[#loc486, #loc487, #loc488, #loc482])
#loc694 = loc(fused[#loc491, #loc492])
#loc695 = loc(fused[#loc493, #loc492])
#loc696 = loc(fused[#loc502, #loc503])
