!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":137:10)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":137:14)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":137:20)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":137:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc226 = loc(fused[#loc74, #loc75])
#loc227 = loc(fused[#loc76, #loc77])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc196)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc197)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc199)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc200)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc202)
    %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc196)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc205)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    cir.store %8, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc206)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc207)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc208)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc209)
  ^bb7:  // pred: ^bb6
    %9 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc29)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc210)
    cir.br ^bb8 loc(#loc209)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc32)
    %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc211)
    cir.brcond %14 ^bb9, ^bb13 loc(#loc33)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc212)
  ^bb10:  // pred: ^bb9
    %15 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc28)
  ^bb12:  // pred: ^bb11
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc44)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc215)
    cir.br ^bb8 loc(#loc209)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc28)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc26)
  ^bb15:  // pred: ^bb14
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc45)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc46)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc47)
    %33 = cir.const #cir.int<8> : !u64i loc(#loc216)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc217)
    cir.libc.memmove %34 bytes from %30 to %28 : !cir.ptr<!void>, !u64i loc(#loc218)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!ty__twoIntsStruct>, %36 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    cir.call @printStructLine(%37) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc55)
    cir.br ^bb16 loc(#loc24)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc6)
  } loc(#loc198)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc219)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc222)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc223)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc81)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    cir.return %17 : !s32i loc(#loc230)
  } loc(#loc225)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc94)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc233)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc234)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc236)
    %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc237)
    cir.br ^bb1 loc(#loc238)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc231)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc109)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc239)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb4 loc(#loc111)
  ^bb3:  // pred: ^bb1
    %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    cir.store %10, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc240)
    cir.br ^bb4 loc(#loc108)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc108)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc241)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc242)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc243)
  ^bb8:  // pred: ^bb7
    %11 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc122)
    cir.store %12, %1 : !u64i, !cir.ptr<!u64i> loc(#loc244)
    cir.br ^bb9 loc(#loc243)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc125)
    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc245)
    cir.brcond %16 ^bb10, ^bb14 loc(#loc126)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc246)
  ^bb11:  // pred: ^bb10
    %17 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %18 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.br ^bb12 loc(#loc121)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc121)
  ^bb13:  // pred: ^bb12
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc135)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    cir.br ^bb9 loc(#loc243)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc121)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc119)
  ^bb16:  // pred: ^bb15
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc136)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc137)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc138)
    %35 = cir.const #cir.int<8> : !u64i loc(#loc250)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc251)
    cir.libc.memmove %36 bytes from %32 to %30 : !cir.ptr<!void>, !u64i loc(#loc252)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!ty__twoIntsStruct>, %38 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    cir.call @printStructLine(%39) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc146)
    cir.br ^bb17 loc(#loc117)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc96)
  } loc(#loc232)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc254)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc255)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc256)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc257)
    %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc258)
    cir.br ^bb1 loc(#loc259)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc196)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc161)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc260)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc163)
    cir.store %8, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc261)
    cir.br ^bb3 loc(#loc160)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc160)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc262)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc263)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc264)
  ^bb7:  // pred: ^bb6
    %9 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc171)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc265)
    cir.br ^bb8 loc(#loc264)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc173)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc174)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc174)
    %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc266)
    cir.brcond %14 ^bb9, ^bb13 loc(#loc175)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc267)
  ^bb10:  // pred: ^bb9
    %15 = cir.const #cir.int<0> : !s32i loc(#loc177)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc178)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc179)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc179)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc181)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
    %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    cir.br ^bb11 loc(#loc170)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc170)
  ^bb12:  // pred: ^bb11
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc183)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc184)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc270)
    cir.br ^bb8 loc(#loc264)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc170)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc168)
  ^bb15:  // pred: ^bb14
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc185)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc185)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc186)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc187)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc187)
    %33 = cir.const #cir.int<8> : !u64i loc(#loc271)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc272)
    cir.libc.memmove %34 bytes from %30 to %28 : !cir.ptr<!void>, !u64i loc(#loc273)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc192)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc193)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!ty__twoIntsStruct>, %36 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
    cir.call @printStructLine(%37) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc195)
    cir.br ^bb16 loc(#loc166)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc148)
  } loc(#loc253)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":23:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":23:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":28:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":54:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":40:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":40:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":42:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":42:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":30:21)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":31:35)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":32:37)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":38:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":33:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":37:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":37:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":39:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":53:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":41:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":49:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":44:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":48:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":44:22)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":44:18)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":44:25)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":44:29)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":44:27)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":45:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":46:36)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":46:24)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":46:17)
#loc38 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":47:36)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":47:24)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":47:17)
#loc42 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":44:35)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":44:34)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":51:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":51:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":51:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":51:35)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":51:55)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":51:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":51:56)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":52:26)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":52:31)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":52:32)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":52:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":121:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":125:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":123:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":123:14)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":124:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":124:14)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":142:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":144:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":147:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":149:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":137:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":152:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":138:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":140:27)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":140:22)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":140:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":142:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":143:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":143:79)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":144:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":147:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":148:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":148:78)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":149:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":151:12)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":151:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":24:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":24:26)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":69:19)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":61:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":91:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":77:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":77:33)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":79:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":79:20)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":63:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":63:21)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":64:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":64:35)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":65:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":65:37)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":66:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":75:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":66:8)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":67:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":70:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":72:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":69:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":74:16)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":74:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":76:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":90:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":78:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":86:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":81:13)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":85:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":81:22)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":81:18)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":81:25)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":81:29)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":81:27)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":82:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":83:36)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":83:24)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":83:17)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":84:36)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":84:24)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":84:17)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":81:35)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":81:34)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":88:17)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":88:23)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":88:31)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":88:35)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":88:55)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":88:9)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":88:56)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":89:26)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":89:31)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":89:32)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":89:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":94:1)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":119:1)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":105:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":105:33)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":107:13)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":107:20)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":96:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":96:21)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":97:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":97:35)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":98:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":98:37)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":99:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":103:5)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":99:8)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":100:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":102:16)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":102:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":104:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":118:5)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":106:9)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":114:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":109:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":113:13)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":109:22)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":109:18)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":109:25)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":109:29)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":109:27)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":110:13)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":111:36)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":111:24)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":111:17)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":112:36)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":112:24)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":112:17)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":109:35)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":109:34)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":116:17)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":116:23)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":116:31)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":116:35)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":116:55)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":116:9)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":116:56)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":117:26)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":117:31)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":117:32)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_05.c":117:9)
#loc196 = loc(fused[#loc1, #loc2])
#loc197 = loc(fused[#loc3, #loc4])
#loc198 = loc(fused[#loc5, #loc6])
#loc199 = loc(fused[#loc7, #loc8])
#loc200 = loc(fused[#loc9, #loc10])
#loc201 = loc(fused[#loc11, #loc12])
#loc202 = loc(fused[#loc13, #loc14])
#loc203 = loc(fused[#loc15, #loc16])
#loc204 = loc(fused[#loc17, #loc18])
#loc205 = loc(fused[#loc20, #loc18])
#loc206 = loc(fused[#loc22, #loc21])
#loc207 = loc(fused[#loc23, #loc24])
#loc208 = loc(fused[#loc25, #loc26])
#loc209 = loc(fused[#loc27, #loc28])
#loc210 = loc(fused[#loc30, #loc29])
#loc211 = loc(fused[#loc31, #loc32])
#loc212 = loc(fused[#loc34, #loc28])
#loc213 = loc(fused[#loc37, #loc35])
#loc214 = loc(fused[#loc41, #loc39])
#loc215 = loc(fused[#loc44, #loc43])
#loc216 = loc(fused[#loc48, #loc49])
#loc217 = loc(fused[#loc47, #loc49])
#loc218 = loc(fused[#loc50, #loc51])
#loc219 = loc(fused[#loc56, #loc57])
#loc220 = loc(fused[#loc58, #loc59])
#loc221 = loc(fused[#loc60, #loc61])
#loc222 = loc(fused[#loc62, #loc63])
#loc223 = loc(fused[#loc64, #loc65])
#loc224 = loc(fused[#loc66, #loc67])
#loc225 = loc(fused[#loc72, #loc73])
#loc228 = loc(fused[#loc83, #loc84])
#loc229 = loc(fused[#loc87, #loc88])
#loc230 = loc(fused[#loc91, #loc90])
#loc231 = loc(fused[#loc92, #loc93])
#loc232 = loc(fused[#loc95, #loc96])
#loc233 = loc(fused[#loc97, #loc98])
#loc234 = loc(fused[#loc99, #loc100])
#loc235 = loc(fused[#loc101, #loc102])
#loc236 = loc(fused[#loc103, #loc104])
#loc237 = loc(fused[#loc105, #loc106])
#loc238 = loc(fused[#loc107, #loc108])
#loc239 = loc(fused[#loc110, #loc111, #loc112, #loc108])
#loc240 = loc(fused[#loc115, #loc114])
#loc241 = loc(fused[#loc116, #loc117])
#loc242 = loc(fused[#loc118, #loc119])
#loc243 = loc(fused[#loc120, #loc121])
#loc244 = loc(fused[#loc123, #loc122])
#loc245 = loc(fused[#loc124, #loc125])
#loc246 = loc(fused[#loc127, #loc121])
#loc247 = loc(fused[#loc130, #loc128])
#loc248 = loc(fused[#loc133, #loc131])
#loc249 = loc(fused[#loc135, #loc134])
#loc250 = loc(fused[#loc139, #loc140])
#loc251 = loc(fused[#loc138, #loc140])
#loc252 = loc(fused[#loc141, #loc142])
#loc253 = loc(fused[#loc147, #loc148])
#loc254 = loc(fused[#loc149, #loc150])
#loc255 = loc(fused[#loc151, #loc152])
#loc256 = loc(fused[#loc153, #loc154])
#loc257 = loc(fused[#loc155, #loc156])
#loc258 = loc(fused[#loc157, #loc158])
#loc259 = loc(fused[#loc159, #loc160])
#loc260 = loc(fused[#loc162, #loc160])
#loc261 = loc(fused[#loc164, #loc163])
#loc262 = loc(fused[#loc165, #loc166])
#loc263 = loc(fused[#loc167, #loc168])
#loc264 = loc(fused[#loc169, #loc170])
#loc265 = loc(fused[#loc172, #loc171])
#loc266 = loc(fused[#loc173, #loc174])
#loc267 = loc(fused[#loc176, #loc170])
#loc268 = loc(fused[#loc179, #loc177])
#loc269 = loc(fused[#loc182, #loc180])
#loc270 = loc(fused[#loc184, #loc183])
#loc271 = loc(fused[#loc188, #loc189])
#loc272 = loc(fused[#loc187, #loc189])
#loc273 = loc(fused[#loc190, #loc191])
