!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc95)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc96)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc98)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc99)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc15)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc101)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc19)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc21)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc102)
    cir.scope {
      %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc104)
      %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      cir.store %19, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
      %20 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      cir.store %20, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
      cir.scope {
        %21 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc107)
        %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc107)
        cir.store %22, %21 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc107)
        %23 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc34)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
        %25 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
        %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
        %27 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc36)
        %28 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %29 = cir.call @strlen(%28) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc36)
        %30 = cir.const #cir.int<1> : !u64i loc(#loc108)
        %31 = cir.binop(mul, %29, %30) : !u64i loc(#loc109)
        cir.libc.memcpy %31 bytes from %26 to %24 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc110)
        %32 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc42)
        %34 = cir.const #cir.int<50> : !s32i loc(#loc43)
        %35 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc43)
        %37 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc45)
        %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc45)
        cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc111)
        %39 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc47)
      } loc(#loc106)
    } loc(#loc103)
    cir.return loc(#loc6)
  } loc(#loc97)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc112)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc116)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc61)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc62)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc62)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc62)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc118)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc66)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc68)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc68)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc70)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc119)
    cir.scope {
      %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc121)
      %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc122)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
      cir.store %19, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
      %20 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      cir.store %20, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
      cir.scope {
        %21 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc124)
        %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc124)
        cir.store %22, %21 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc124)
        %23 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc81)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
        %25 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
        %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
        %27 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc83)
        %28 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
        %29 = cir.call @strlen(%28) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc83)
        %30 = cir.const #cir.int<1> : !u64i loc(#loc125)
        %31 = cir.binop(mul, %29, %30) : !u64i loc(#loc126)
        cir.libc.memcpy %31 bytes from %26 to %24 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc127)
        %32 = cir.const #cir.int<0> : !s32i loc(#loc89)
        %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc89)
        %34 = cir.const #cir.int<50> : !s32i loc(#loc90)
        %35 = cir.const #cir.int<1> : !s32i loc(#loc91)
        %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc90)
        %37 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc92)
        %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc92)
        cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc128)
        %39 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
        cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc94)
      } loc(#loc123)
    } loc(#loc120)
    cir.return loc(#loc53)
  } loc(#loc114)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":42:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":25:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":25:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":26:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":27:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":27:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":29:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":29:18)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":29:23)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":29:27)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":29:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":29:28)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":30:19)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":30:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":30:10)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":30:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":30:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":31:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":41:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":32:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":32:27)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":33:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":33:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":34:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":40:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":35:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":35:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":37:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":37:26)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":37:32)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":37:39)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":37:45)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":37:56)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":37:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":37:57)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":38:26)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":38:18)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":38:21)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":38:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":39:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":39:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":70:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":73:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":72:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":72:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":49:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":68:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":51:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":51:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":52:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":52:24)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":53:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":53:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":55:12)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":55:18)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":55:23)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":55:26)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":55:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":55:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":56:18)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":56:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":56:10)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":56:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":56:14)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":57:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":67:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":58:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":58:27)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":59:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":59:23)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":60:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":66:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":61:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":61:29)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":63:20)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":63:26)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":63:32)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":63:39)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":63:45)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":63:56)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":63:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":63:57)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":64:26)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":64:18)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":64:21)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":64:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":65:23)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_31.c":65:13)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc7, #loc8])
#loc99 = loc(fused[#loc9, #loc10])
#loc100 = loc(fused[#loc12, #loc11])
#loc101 = loc(fused[#loc17, #loc18])
#loc102 = loc(fused[#loc20, #loc19])
#loc103 = loc(fused[#loc24, #loc25])
#loc104 = loc(fused[#loc26, #loc27])
#loc105 = loc(fused[#loc28, #loc29])
#loc106 = loc(fused[#loc30, #loc31])
#loc107 = loc(fused[#loc32, #loc33])
#loc108 = loc(fused[#loc38, #loc39])
#loc109 = loc(fused[#loc36, #loc39])
#loc110 = loc(fused[#loc40, #loc41])
#loc111 = loc(fused[#loc45, #loc42])
#loc112 = loc(fused[#loc48, #loc49])
#loc113 = loc(fused[#loc50, #loc51])
#loc114 = loc(fused[#loc52, #loc53])
#loc115 = loc(fused[#loc54, #loc55])
#loc116 = loc(fused[#loc56, #loc57])
#loc117 = loc(fused[#loc59, #loc58])
#loc118 = loc(fused[#loc64, #loc65])
#loc119 = loc(fused[#loc67, #loc66])
#loc120 = loc(fused[#loc71, #loc72])
#loc121 = loc(fused[#loc73, #loc74])
#loc122 = loc(fused[#loc75, #loc76])
#loc123 = loc(fused[#loc77, #loc78])
#loc124 = loc(fused[#loc79, #loc80])
#loc125 = loc(fused[#loc85, #loc86])
#loc126 = loc(fused[#loc83, #loc86])
#loc127 = loc(fused[#loc87, #loc88])
#loc128 = loc(fused[#loc92, #loc89])
