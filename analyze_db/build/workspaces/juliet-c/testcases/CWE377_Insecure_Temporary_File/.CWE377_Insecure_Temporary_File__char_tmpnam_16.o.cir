!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE377_Insecure_Temporary_File/CWE377_Insecure_Temporary_File__char_tmpnam_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"/tmp/fileXXXXXX\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> loc(#loc88)
  cir.func private @tmpnam(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc90)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc91)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Temporary file was opened...now closing file\00" : !cir.array<!s8i x 45>> : !cir.array<!s8i x 45> {alignment = 1 : i64} loc(#loc11)
  cir.func private @close(!s32i) -> !s32i loc(#loc93)
  cir.func no_proto @CWE377_Insecure_Temporary_File__char_tmpnam_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename"] {alignment = 8 : i64} loc(#loc95)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc96)
    cir.br ^bb1 loc(#loc97)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc97)
  ^bb2:  // 2 preds: ^bb1, ^bb15
    %2 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %3 ^bb3, ^bb16 loc(#loc22)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc98)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc99)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
    %5 = cir.call @tmpnam(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    cir.br ^bb6 loc(#loc101)
  ^bb6:  // pred: ^bb5
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
    %9 = cir.cmp(eq, %6, %8) : !cir.ptr<!s8i>, !cir.bool loc(#loc102)
    cir.brcond %9 ^bb7, ^bb8 loc(#loc103)
  ^bb7:  // pred: ^bb6
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc35)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc36)
    cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb8 loc(#loc31)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc31)
  ^bb9:  // pred: ^bb8
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %15 = cir.const #cir.int<64> : !s32i loc(#loc41)
    %16 = cir.binop(or, %14, %15) : !s32i loc(#loc104)
    %17 = cir.const #cir.int<256> : !s32i loc(#loc42)
    %18 = cir.const #cir.int<128> : !s32i loc(#loc43)
    %19 = cir.binop(or, %17, %18) : !s32i loc(#loc105)
    %20 = cir.call @open(%13, %16, %19) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc44)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.br ^bb10 loc(#loc107)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc51)
    %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc108)
    cir.brcond %24 ^bb11, ^bb12 loc(#loc109)
  ^bb11:  // pred: ^bb10
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 45>> loc(#loc11)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 45>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %28 = cir.call @close(%27) : (!s32i) -> !s32i loc(#loc55)
    cir.br ^bb12 loc(#loc48)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc48)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc25)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16 loc(#loc56)
  ^bb15:  // no predecessors
    cir.br ^bb2 loc(#loc21)
  ^bb16:  // 2 preds: ^bb2, ^bb14
    cir.br ^bb17 loc(#loc21)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc15)
  } loc(#loc94)
  cir.func no_proto @CWE377_Insecure_Temporary_File__char_tmpnam_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc111)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc110)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc112)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 16>, !cir.ptr<!cir.array<!s8i x 16>>, ["filename"] {alignment = 16 : i64} loc(#loc88)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc114)
    cir.br ^bb1 loc(#loc115)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc115)
  ^bb2:  // 2 preds: ^bb1, ^bb11
    %2 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %3 ^bb3, ^bb12 loc(#loc69)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc116)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc117)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc88)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc88)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc73)
    %6 = cir.call @mkstemp(%5) : (!cir.ptr<!s8i>) -> !s32i loc(#loc74)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // pred: ^bb5
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc81)
    %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc119)
    cir.brcond %11 ^bb7, ^bb8 loc(#loc120)
  ^bb7:  // pred: ^bb6
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 45>> loc(#loc83)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 45>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc86)
    cir.br ^bb8 loc(#loc78)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc78)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc72)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc87)
  ^bb11:  // no predecessors
    cir.br ^bb2 loc(#loc68)
  ^bb12:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb13 loc(#loc68)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc64)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE377_Insecure_Temporary_File/CWE377_Insecure_Temporary_File__char_tmpnam_16.c":0:0)
#loc1 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":85:13)
#loc2 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":85:31)
#loc3 = loc("/usr/include/stdio.h":211:1)
#loc4 = loc("/usr/include/stdio.h":211:38)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/fcntl.h":209:1)
#loc10 = loc("/usr/include/fcntl.h":209:56)
#loc11 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":67:27)
#loc12 = loc("/usr/include/unistd.h":358:1)
#loc13 = loc("/usr/include/unistd.h":358:27)
#loc14 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":50:1)
#loc15 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":73:1)
#loc16 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":55:13)
#loc17 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":55:20)
#loc18 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":56:13)
#loc19 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":56:17)
#loc20 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":52:5)
#loc21 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":72:5)
#loc22 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":52:11)
#loc23 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":53:5)
#loc24 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":54:9)
#loc25 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":70:9)
#loc26 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":57:31)
#loc27 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":57:24)
#loc28 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":57:13)
#loc29 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":57:35)
#loc30 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":58:13)
#loc31 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":61:13)
#loc32 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":58:17)
#loc33 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":58:29)
#loc34 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":59:13)
#loc35 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":60:17)
#loc36 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":60:22)
#loc37 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":62:23)
#loc38 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":62:13)
#loc39 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:29)
#loc40 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:39)
#loc41 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:46)
#loc42 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:55)
#loc43 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:63)
#loc44 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:24)
#loc45 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:13)
#loc46 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:71)
#loc47 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":65:13)
#loc48 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":69:13)
#loc49 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":65:17)
#loc50 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":65:30)
#loc51 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":65:29)
#loc52 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":66:13)
#loc53 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":67:17)
#loc54 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":68:23)
#loc55 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":68:17)
#loc56 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":71:9)
#loc57 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":100:1)
#loc58 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":103:1)
#loc59 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":102:5)
#loc60 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":102:11)
#loc61 = loc("/usr/include/stdlib.h":827:1)
#loc62 = loc("/usr/include/stdlib.h":827:39)
#loc63 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":80:1)
#loc64 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":98:1)
#loc65 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":88:13)
#loc66 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":88:44)
#loc67 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":82:5)
#loc68 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":97:5)
#loc69 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":82:11)
#loc70 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":83:5)
#loc71 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":84:9)
#loc72 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":95:9)
#loc73 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":88:36)
#loc74 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":88:28)
#loc75 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":89:23)
#loc76 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":89:13)
#loc77 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":90:13)
#loc78 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":94:13)
#loc79 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":90:17)
#loc80 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":90:30)
#loc81 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":90:29)
#loc82 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":91:13)
#loc83 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":92:27)
#loc84 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":92:17)
#loc85 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":93:23)
#loc86 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":93:17)
#loc87 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":96:9)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc5, #loc6])
#loc91 = loc(fused[#loc7, #loc8])
#loc92 = loc(fused[#loc9, #loc10])
#loc93 = loc(fused[#loc12, #loc13])
#loc94 = loc(fused[#loc14, #loc15])
#loc95 = loc(fused[#loc16, #loc17])
#loc96 = loc(fused[#loc18, #loc19])
#loc97 = loc(fused[#loc20, #loc21])
#loc98 = loc(fused[#loc23, #loc21])
#loc99 = loc(fused[#loc24, #loc25])
#loc100 = loc(fused[#loc28, #loc29])
#loc101 = loc(fused[#loc30, #loc31])
#loc102 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc34, #loc31])
#loc104 = loc(fused[#loc40, #loc41])
#loc105 = loc(fused[#loc42, #loc43])
#loc106 = loc(fused[#loc45, #loc46])
#loc107 = loc(fused[#loc47, #loc48])
#loc108 = loc(fused[#loc49, #loc50])
#loc109 = loc(fused[#loc52, #loc48])
#loc110 = loc(fused[#loc57, #loc58])
#loc111 = loc(fused[#loc59, #loc60])
#loc112 = loc(fused[#loc61, #loc62])
#loc113 = loc(fused[#loc63, #loc64])
#loc114 = loc(fused[#loc65, #loc66])
#loc115 = loc(fused[#loc67, #loc68])
#loc116 = loc(fused[#loc70, #loc68])
#loc117 = loc(fused[#loc71, #loc72])
#loc118 = loc(fused[#loc77, #loc78])
#loc119 = loc(fused[#loc79, #loc80])
#loc120 = loc(fused[#loc82, #loc78])
