!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":138:10)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":138:14)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":138:20)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":138:32)
#loc242 = loc(fused[#loc77, #loc78])
#loc243 = loc(fused[#loc79, #loc80])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc211)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc212)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc214)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc12)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc216)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc219)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc19)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc222)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
          %5 = cir.const #cir.int<100> : !s32i loc(#loc27)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc27)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc223)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc224)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
          cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
          cir.scope {
            %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc227)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc36)
              %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc37)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
            } loc(#loc228)
          } loc(#loc226)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc38)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc38)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc41)
          %17 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc42)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc43)
          %20 = cir.const #cir.int<130000> : !s32i loc(#loc44)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc44)
          %22 = cir.const #cir.int<1> : !u64i loc(#loc229)
          %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc230)
          %24 = cir.call @realloc(%19, %23) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc231)
          cir.store %25, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc232)
          cir.scope {
            %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
            %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc234)
            cir.if %29 {
              %30 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc55)
              %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
              %32 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc12)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc12)
              %34 = cir.call @strcpy(%31, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc55)
              %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
              cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc58)
              %36 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc59)
              %37 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
              cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
            } loc(#loc235)
          } loc(#loc233)
        } loc(#loc221)
      } loc(#loc220)
    } loc(#loc218)
    cir.return loc(#loc16)
  } loc(#loc217)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc236)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc239)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc240)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc74)
  cir.func @main(%arg0: !s32i loc(fused[#loc77, #loc78]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc79, #loc80])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc243)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc76)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc81)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc82)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc83)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc83)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc84)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc71)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_char_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc244)
    cir.call @CWE401_Memory_Leak__malloc_realloc_char_08_good() : () -> () loc(#loc86)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc72)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc73)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_char_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call @CWE401_Memory_Leak__malloc_realloc_char_08_bad() : () -> () loc(#loc90)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc74)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    cir.return %17 : !s32i loc(#loc246)
  } loc(#loc241)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc96)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc97)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    cir.return %2 : !s32i loc(#loc248)
  } loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc99)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc251)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc104)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc104)
      cir.if %2 {
        %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc109)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc254)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc255)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc116)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc117)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc117)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc256)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc257)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc258)
          cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
          cir.scope {
            %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
            %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc260)
            cir.if %33 {
              %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc125)
              %35 = cir.const #cir.int<1> : !s32i loc(#loc126)
              %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc127)
              cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc125)
            } loc(#loc261)
          } loc(#loc259)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc128)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc130)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc130)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          %18 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc133)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
          %21 = cir.const #cir.int<130000> : !s32i loc(#loc135)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc135)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc262)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc263)
          %25 = cir.call @realloc(%20, %24) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc264)
          cir.store %26, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
          cir.scope {
            %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc144)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc144)
            %33 = cir.cmp(ne, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc267)
            cir.if %33 {
              %34 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
              cir.store %34, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
              %35 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc148)
              %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
              %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc150)
              %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc150)
              %39 = cir.call @strcpy(%36, %38) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc148)
              %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
              cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc152)
            } loc(#loc268)
          } loc(#loc266)
          %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc153)
          %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
          cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
        } loc(#loc253)
      } loc(#loc252)
    } loc(#loc250)
    cir.return loc(#loc101)
  } loc(#loc249)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc157)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.return %2 : !s32i loc(#loc271)
  } loc(#loc270)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc274)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc163)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc163)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc277)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc278)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc172)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc173)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc173)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc279)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc280)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc172)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc281)
          cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
          cir.scope {
            %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc179)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc179)
            %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc283)
            cir.if %33 {
              %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc181)
              %35 = cir.const #cir.int<1> : !s32i loc(#loc182)
              %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc183)
              cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc181)
            } loc(#loc284)
          } loc(#loc282)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc184)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc186)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc186)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc184)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc188)
          %18 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc189)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc190)
          %21 = cir.const #cir.int<130000> : !s32i loc(#loc191)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc191)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc285)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc286)
          %25 = cir.call @realloc(%20, %24) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc189)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc287)
          cir.store %26, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
          cir.scope {
            %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc200)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
            %33 = cir.cmp(ne, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc290)
            cir.if %33 {
              %34 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
              cir.store %34, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc292)
              %35 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc204)
              %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
              %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc206)
              %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc206)
              %39 = cir.call @strcpy(%36, %38) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc204)
              %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
              cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc208)
            } loc(#loc291)
          } loc(#loc289)
          %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc209)
          %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc210)
          cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc209)
        } loc(#loc276)
      } loc(#loc275)
    } loc(#loc273)
    cir.return loc(#loc160)
  } loc(#loc272)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":45:26)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":683:1)
#loc11 = loc("/usr/include/stdlib.h":684:14)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":52:30)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":37:1)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":58:1)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":39:5)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":57:5)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":39:8)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":39:26)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":40:5)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":41:9)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":56:9)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":42:13)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":42:58)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":42:35)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":42:42)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":42:46)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":42:57)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":43:13)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":43:41)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":43:17)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":43:25)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":43:31)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":43:32)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":43:38)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":43:37)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":45:13)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":45:20)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":46:23)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":46:13)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":48:28)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":48:36)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":48:43)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":48:51)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":48:62)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":48:42)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":48:63)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":48:13)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":49:13)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":55:13)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":49:17)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":49:25)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":50:13)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":52:17)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":52:24)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":53:27)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":53:17)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":54:17)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":54:22)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":123:1)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":127:1)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":125:5)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":125:11)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":126:5)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":126:11)
#loc67 = loc("/usr/include/stdlib.h":575:1)
#loc68 = loc("/usr/include/stdlib.h":575:41)
#loc69 = loc("/usr/include/time.h":76:1)
#loc70 = loc("/usr/include/time.h":76:38)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":143:15)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":145:15)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":148:15)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":150:15)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":138:1)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":153:1)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":139:1)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":141:27)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":141:22)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":141:5)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":143:5)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":144:5)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":144:53)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":145:5)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":148:5)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":149:5)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":149:52)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":150:5)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":152:12)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":152:5)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":25:1)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":28:1)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":27:12)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":27:5)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":70:19)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":65:1)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":94:1)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":67:5)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":93:5)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":67:8)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":67:27)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":68:5)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":71:5)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":73:5)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":70:9)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":74:9)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":92:9)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":75:13)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":75:58)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":77:13)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":77:20)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":75:35)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":75:42)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":75:46)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":75:57)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":76:13)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":76:41)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":76:17)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":76:25)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":76:31)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":76:32)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":76:38)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":76:37)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":79:13)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":79:20)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":79:26)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":80:23)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":80:13)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":81:31)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":81:39)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":81:46)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":81:54)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":81:65)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":81:45)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":81:66)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":81:13)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":84:13)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":90:13)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":84:17)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":84:28)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":85:13)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":86:24)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":86:17)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":88:17)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":88:24)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":88:30)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":89:27)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":89:17)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":91:13)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":91:18)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":30:1)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":33:1)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":32:12)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":32:5)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":97:1)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":121:1)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":99:5)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":120:5)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":99:8)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":99:26)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":100:5)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":101:9)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":119:9)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":102:13)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":102:58)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":104:13)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":104:20)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":102:35)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":102:42)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":102:46)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":102:57)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":103:13)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":103:41)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":103:17)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":103:25)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":103:31)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":103:32)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":103:38)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":103:37)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":106:13)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":106:20)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":106:26)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":107:23)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":107:13)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":108:31)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":108:39)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":108:46)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":108:54)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":108:65)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":108:45)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":108:66)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":108:13)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":111:13)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":117:13)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":111:17)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":111:28)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":112:13)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":113:24)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":113:17)
#loc204 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":115:17)
#loc205 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":115:24)
#loc206 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":115:30)
#loc207 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":116:27)
#loc208 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":116:17)
#loc209 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":118:13)
#loc210 = loc("CWE401_Memory_Leak__malloc_realloc_char_08.c":118:18)
#loc211 = loc(fused[#loc1, #loc2])
#loc212 = loc(fused[#loc3, #loc4])
#loc213 = loc(fused[#loc5, #loc6])
#loc214 = loc(fused[#loc8, #loc9])
#loc215 = loc(fused[#loc10, #loc11])
#loc216 = loc(fused[#loc13, #loc14])
#loc217 = loc(fused[#loc15, #loc16])
#loc218 = loc(fused[#loc17, #loc18])
#loc219 = loc(fused[#loc19, #loc20])
#loc220 = loc(fused[#loc21, #loc18])
#loc221 = loc(fused[#loc22, #loc23])
#loc222 = loc(fused[#loc24, #loc25])
#loc223 = loc(fused[#loc28, #loc29])
#loc224 = loc(fused[#loc27, #loc29])
#loc225 = loc(fused[#loc26, #loc25])
#loc226 = loc(fused[#loc30, #loc31])
#loc227 = loc(fused[#loc32, #loc33])
#loc228 = loc(fused[#loc34, #loc31])
#loc229 = loc(fused[#loc45, #loc46])
#loc230 = loc(fused[#loc47, #loc46])
#loc231 = loc(fused[#loc42, #loc48])
#loc232 = loc(fused[#loc49, #loc48])
#loc233 = loc(fused[#loc50, #loc51])
#loc234 = loc(fused[#loc52, #loc53])
#loc235 = loc(fused[#loc54, #loc51])
#loc236 = loc(fused[#loc61, #loc62])
#loc237 = loc(fused[#loc63, #loc64])
#loc238 = loc(fused[#loc65, #loc66])
#loc239 = loc(fused[#loc67, #loc68])
#loc240 = loc(fused[#loc69, #loc70])
#loc241 = loc(fused[#loc75, #loc76])
#loc244 = loc(fused[#loc86, #loc87])
#loc245 = loc(fused[#loc90, #loc91])
#loc246 = loc(fused[#loc94, #loc93])
#loc247 = loc(fused[#loc95, #loc96])
#loc248 = loc(fused[#loc98, #loc97])
#loc249 = loc(fused[#loc100, #loc101])
#loc250 = loc(fused[#loc102, #loc103])
#loc251 = loc(fused[#loc104, #loc105])
#loc252 = loc(fused[#loc106, #loc107, #loc108, #loc103])
#loc253 = loc(fused[#loc110, #loc111])
#loc254 = loc(fused[#loc112, #loc113])
#loc255 = loc(fused[#loc114, #loc115])
#loc256 = loc(fused[#loc118, #loc119])
#loc257 = loc(fused[#loc117, #loc119])
#loc258 = loc(fused[#loc116, #loc113])
#loc259 = loc(fused[#loc120, #loc121])
#loc260 = loc(fused[#loc122, #loc123])
#loc261 = loc(fused[#loc124, #loc121])
#loc262 = loc(fused[#loc136, #loc137])
#loc263 = loc(fused[#loc138, #loc137])
#loc264 = loc(fused[#loc133, #loc139])
#loc265 = loc(fused[#loc140, #loc139])
#loc266 = loc(fused[#loc141, #loc142])
#loc267 = loc(fused[#loc143, #loc144])
#loc268 = loc(fused[#loc145, #loc142])
#loc269 = loc(fused[#loc147, #loc146])
#loc270 = loc(fused[#loc155, #loc156])
#loc271 = loc(fused[#loc158, #loc157])
#loc272 = loc(fused[#loc159, #loc160])
#loc273 = loc(fused[#loc161, #loc162])
#loc274 = loc(fused[#loc163, #loc164])
#loc275 = loc(fused[#loc165, #loc162])
#loc276 = loc(fused[#loc166, #loc167])
#loc277 = loc(fused[#loc168, #loc169])
#loc278 = loc(fused[#loc170, #loc171])
#loc279 = loc(fused[#loc174, #loc175])
#loc280 = loc(fused[#loc173, #loc175])
#loc281 = loc(fused[#loc172, #loc169])
#loc282 = loc(fused[#loc176, #loc177])
#loc283 = loc(fused[#loc178, #loc179])
#loc284 = loc(fused[#loc180, #loc177])
#loc285 = loc(fused[#loc192, #loc193])
#loc286 = loc(fused[#loc194, #loc193])
#loc287 = loc(fused[#loc189, #loc195])
#loc288 = loc(fused[#loc196, #loc195])
#loc289 = loc(fused[#loc197, #loc198])
#loc290 = loc(fused[#loc199, #loc200])
#loc291 = loc(fused[#loc201, #loc198])
#loc292 = loc(fused[#loc203, #loc202])
