!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":88:48)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":194:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc300)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc301)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc302)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc303)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc304)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc305)
  cir.func private @close(!s32i) -> !s32i loc(#loc306)
  cir.func private @printIntLine(!s32i) loc(#loc307)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_add_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc309)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc310)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc311)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc312)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc313)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc314)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc315)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc316)
    %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc317)
    %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc318)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc317)
    cir.store %7, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc318)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc40)
    cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    cir.br ^bb1 loc(#loc320)
  ^bb1:  // pred: ^bb0
    %11 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.br ^bb2 loc(#loc321)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc27)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.br ^bb3 loc(#loc322)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc322)
  ^bb4:  // pred: ^bb27
    %15 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc49)
    cir.brcond %16 ^bb5, ^bb28 loc(#loc49)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc323)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc54)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
    cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.br ^bb7 loc(#loc325)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc61)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc326)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc327)
  ^bb8:  // pred: ^bb7
    cir.br ^bb28 loc(#loc63)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc59)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc328)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc329)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc330)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc71)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc71)
    %30 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc331)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc74)
    %34 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc332)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc79)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc79)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc80)
    %39 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc333)
    cir.br ^bb11 loc(#loc334)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %41 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc335)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc336)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc336)
    %44 = cir.call @connect(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc91)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc92)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %47 ^bb12, ^bb13 loc(#loc338)
  ^bb12:  // pred: ^bb11
    cir.br ^bb28 loc(#loc94)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc85)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %49 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %51 = cir.const #cir.int<3> : !s32i loc(#loc97)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc97)
    %53 = cir.const #cir.int<4> : !u64i loc(#loc97)
    %54 = cir.binop(mul, %52, %53) : !u64i loc(#loc97)
    %55 = cir.const #cir.int<2> : !s32i loc(#loc97)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc97)
    %57 = cir.binop(add, %54, %56) : !u64i loc(#loc97)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc98)
    %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc339)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %62 = cir.call @recv(%48, %50, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc100)
    %63 = cir.cast(integral, %62 : !s64i), !s32i loc(#loc100)
    cir.store %63, %1 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.br ^bb15 loc(#loc341)
  ^bb15:  // pred: ^bb14
    %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc106)
    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc342)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc107)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc107)
    cir.br ^bb22(%68 : !cir.bool) loc(#loc107)
  ^bb17:  // pred: ^bb15
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %71 = cir.cmp(eq, %69, %70) : !s32i, !cir.bool loc(#loc343)
    cir.brcond %71 ^bb18, ^bb19 loc(#loc107)
  ^bb18:  // pred: ^bb17
    %72 = cir.const #true loc(#loc107)
    cir.br ^bb20(%72 : !cir.bool) loc(#loc107)
  ^bb19:  // pred: ^bb17
    %73 = cir.const #false loc(#loc107)
    cir.br ^bb20(%73 : !cir.bool) loc(#loc107)
  ^bb20(%74: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":88:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc107)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%74 : !cir.bool) loc(#loc107)
  ^bb22(%75: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":88:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc107)
  ^bb23:  // pred: ^bb22
    cir.brcond %75 ^bb24, ^bb25 loc(#loc344)
  ^bb24:  // pred: ^bb23
    cir.br ^bb28 loc(#loc111)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc104)
  ^bb26:  // pred: ^bb25
    %76 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc112)
    %78 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %79 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
    %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !s32i), !cir.ptr<!s8i> loc(#loc114)
    cir.store %77, %80 : !s8i, !cir.ptr<!s8i> loc(#loc345)
    %81 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
    %82 = cir.call @atoi(%81) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc116)
    cir.store %82, %0 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    cir.br ^bb27 loc(#loc51)
  ^bb27:  // pred: ^bb26
    cir.br ^bb4 loc(#loc48)
  ^bb28:  // 4 preds: ^bb4, ^bb8, ^bb12, ^bb24
    cir.br ^bb29 loc(#loc48)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc347)
  ^bb30:  // pred: ^bb29
    %83 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %84 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc122)
    %86 = cir.cmp(ne, %83, %85) : !s32i, !cir.bool loc(#loc348)
    cir.brcond %86 ^bb31, ^bb32 loc(#loc349)
  ^bb31:  // pred: ^bb30
    %87 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %88 = cir.call @close(%87) : (!s32i) -> !s32i loc(#loc125)
    cir.br ^bb32 loc(#loc120)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc120)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc46)
  ^bb34:  // pred: ^bb33
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %90 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
    cir.store %89, %90 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    cir.br ^bb35 loc(#loc43)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc351)
  ^bb36:  // pred: ^bb35
    %91 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
    %92 = cir.load %91 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    cir.br ^bb37 loc(#loc352)
  ^bb37:  // pred: ^bb36
    %93 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %95 = cir.binop(add, %93, %94) nsw : !s32i loc(#loc134)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    %96 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.call @printIntLine(%96) : (!s32i) -> () loc(#loc136)
    cir.br ^bb38 loc(#loc133)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc130)
  ^bb39:  // pred: ^bb38
    cir.return loc(#loc19)
  } loc(#loc308)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_add_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc354)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc139)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc355)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc141)
    cir.return loc(#loc138)
  } loc(#loc353)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc357)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc358)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc359)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc360)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc361)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc362)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc361)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc362)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc157)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.br ^bb1 loc(#loc364)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc162)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %11 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.br ^bb2 loc(#loc160)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc367)
  ^bb3:  // pred: ^bb2
    %12 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.br ^bb4 loc(#loc368)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %16 = cir.binop(add, %14, %15) nsw : !s32i loc(#loc172)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc174)
    cir.br ^bb5 loc(#loc171)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc168)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc144)
  } loc(#loc356)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc369)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc177)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc371)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc372)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc373)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc374)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc375)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc376)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc377)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc378)
    %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc379)
    %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc380)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc379)
    cir.store %7, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc380)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc200)
    cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    cir.br ^bb1 loc(#loc382)
  ^bb1:  // pred: ^bb0
    %11 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb2 loc(#loc383)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc187)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb3 loc(#loc384)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc384)
  ^bb4:  // pred: ^bb27
    %15 = cir.const #cir.int<0> : !s32i loc(#loc209)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc209)
    cir.brcond %16 ^bb5, ^bb28 loc(#loc209)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc385)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc212)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc214)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc215)
    cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb7 loc(#loc387)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc221)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc388)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc389)
  ^bb8:  // pred: ^bb7
    cir.br ^bb28 loc(#loc223)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc219)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc390)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc226)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc391)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc392)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc231)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc231)
    %30 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc393)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc233)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc233)
    %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc234)
    %34 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc394)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc237)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc237)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc238)
    %39 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc395)
    cir.br ^bb11 loc(#loc396)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %41 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc397)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc398)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc398)
    %44 = cir.call @connect(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc248)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc249)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc399)
    cir.brcond %47 ^bb12, ^bb13 loc(#loc400)
  ^bb12:  // pred: ^bb11
    cir.br ^bb28 loc(#loc251)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc242)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %49 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc253)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc253)
    %51 = cir.const #cir.int<3> : !s32i loc(#loc254)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc254)
    %53 = cir.const #cir.int<4> : !u64i loc(#loc254)
    %54 = cir.binop(mul, %52, %53) : !u64i loc(#loc254)
    %55 = cir.const #cir.int<2> : !s32i loc(#loc254)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc254)
    %57 = cir.binop(add, %54, %56) : !u64i loc(#loc254)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc255)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc255)
    %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc401)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc256)
    %62 = cir.call @recv(%48, %50, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc257)
    %63 = cir.cast(integral, %62 : !s64i), !s32i loc(#loc257)
    cir.store %63, %1 : !s32i, !cir.ptr<!s32i> loc(#loc402)
    cir.br ^bb15 loc(#loc403)
  ^bb15:  // pred: ^bb14
    %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc263)
    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc263)
    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc404)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc264)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc264)
    cir.br ^bb22(%68 : !cir.bool) loc(#loc264)
  ^bb17:  // pred: ^bb15
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc266)
    %71 = cir.cmp(eq, %69, %70) : !s32i, !cir.bool loc(#loc405)
    cir.brcond %71 ^bb18, ^bb19 loc(#loc264)
  ^bb18:  // pred: ^bb17
    %72 = cir.const #true loc(#loc264)
    cir.br ^bb20(%72 : !cir.bool) loc(#loc264)
  ^bb19:  // pred: ^bb17
    %73 = cir.const #false loc(#loc264)
    cir.br ^bb20(%73 : !cir.bool) loc(#loc264)
  ^bb20(%74: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":194:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc264)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%74 : !cir.bool) loc(#loc264)
  ^bb22(%75: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":194:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc264)
  ^bb23:  // pred: ^bb22
    cir.brcond %75 ^bb24, ^bb25 loc(#loc406)
  ^bb24:  // pred: ^bb23
    cir.br ^bb28 loc(#loc268)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc261)
  ^bb26:  // pred: ^bb25
    %76 = cir.const #cir.int<0> : !s32i loc(#loc269)
    %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc269)
    %78 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %79 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc271)
    %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !s32i), !cir.ptr<!s8i> loc(#loc271)
    cir.store %77, %80 : !s8i, !cir.ptr<!s8i> loc(#loc407)
    %81 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc272)
    %82 = cir.call @atoi(%81) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc273)
    cir.store %82, %0 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    cir.br ^bb27 loc(#loc211)
  ^bb27:  // pred: ^bb26
    cir.br ^bb4 loc(#loc208)
  ^bb28:  // 4 preds: ^bb4, ^bb8, ^bb12, ^bb24
    cir.br ^bb29 loc(#loc208)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc409)
  ^bb30:  // pred: ^bb29
    %83 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %84 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc279)
    %86 = cir.cmp(ne, %83, %85) : !s32i, !cir.bool loc(#loc410)
    cir.brcond %86 ^bb31, ^bb32 loc(#loc411)
  ^bb31:  // pred: ^bb30
    %87 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    %88 = cir.call @close(%87) : (!s32i) -> !s32i loc(#loc282)
    cir.br ^bb32 loc(#loc277)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc277)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc206)
  ^bb34:  // pred: ^bb33
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %90 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc284)
    cir.store %89, %90 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.br ^bb35 loc(#loc203)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc413)
  ^bb36:  // pred: ^bb35
    %91 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
    %92 = cir.load %91 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    cir.br ^bb37 loc(#loc414)
  ^bb37:  // pred: ^bb36
    %93 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    %94 = cir.const #cir.int<2147483647> : !s32i loc(#loc292)
    %95 = cir.cmp(lt, %93, %94) : !s32i, !cir.bool loc(#loc415)
    cir.brcond %95 ^bb38, ^bb39 loc(#loc416)
  ^bb38:  // pred: ^bb37
    %96 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %98 = cir.binop(add, %96, %97) nsw : !s32i loc(#loc296)
    cir.store %98, %6 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    %99 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    cir.call @printIntLine(%99) : (!s32i) -> () loc(#loc298)
    cir.br ^bb40 loc(#loc294)
  ^bb39:  // pred: ^bb37
    %100 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc177)
    %101 = cir.cast(array_to_ptrdecay, %100 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%101) : (!cir.ptr<!s8i>) -> () loc(#loc299)
    cir.br ^bb40 loc(#loc290)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc290)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc287)
  ^bb42:  // pred: ^bb41
    cir.return loc(#loc179)
  } loc(#loc370)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_32.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":79:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":44:1)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":119:1)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":52:9)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":52:21)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":58:13)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":58:17)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":59:13)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":59:32)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":60:13)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":60:36)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":61:13)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":61:45)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":112:9)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":112:21)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":115:13)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":115:33)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":46:5)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":46:9)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":47:5)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":47:22)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":48:5)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":48:22)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":50:12)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":50:5)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":51:5)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":110:5)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":52:20)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":53:9)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":108:9)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":62:13)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":97:21)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":97:20)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":63:13)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":96:13)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":72:40)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":72:49)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":72:62)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":72:33)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":72:17)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":72:73)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":73:17)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":76:17)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":73:21)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":73:38)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":74:17)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":75:21)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":77:24)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":77:25)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":77:34)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":77:37)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":77:51)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":77:17)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":77:52)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":78:38)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":78:17)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":79:43)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":79:17)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":79:63)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":80:42)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":80:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":80:17)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":80:50)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":81:17)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":84:17)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":81:29)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":81:62)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":81:63)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":81:72)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":81:86)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":81:21)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":81:92)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":82:17)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":83:21)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":87:35)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":87:50)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":87:63)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":87:81)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":87:84)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":87:30)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":87:17)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":87:85)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":88:17)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":91:17)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":88:21)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":88:35)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":88:51)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":88:65)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":89:17)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":90:21)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":93:43)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":93:29)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":93:17)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":95:29)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":95:24)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":95:17)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":95:40)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":98:13)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":101:13)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":98:17)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":98:34)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":99:13)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":100:30)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":100:17)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":109:21)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":109:10)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":109:9)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":111:5)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":118:5)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":112:20)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":113:9)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":117:9)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":115:26)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":116:26)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":116:13)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":232:1)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":236:1)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":234:5)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":234:13)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":235:5)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":235:13)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":126:1)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":147:1)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":134:9)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":134:21)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":140:9)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":140:21)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":143:13)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":143:33)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":128:5)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":128:9)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":129:5)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":129:22)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":130:5)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":130:22)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":132:12)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":132:5)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":133:5)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":138:5)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":134:20)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":136:16)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":136:9)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":137:21)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":137:10)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":137:9)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":139:5)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":146:5)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":140:20)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":141:9)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":145:9)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":143:26)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":144:26)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":144:13)
#loc175 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc176 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":227:23)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":150:1)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":230:1)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":158:9)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":158:21)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":164:13)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":164:17)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":165:13)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":165:32)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":166:13)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":166:36)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":167:13)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":167:45)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":218:9)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":218:21)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":222:13)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":222:33)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":152:5)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":152:9)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":153:5)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":153:22)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":154:5)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":154:22)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":156:12)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":156:5)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":157:5)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":216:5)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":158:20)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":159:9)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":214:9)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":168:13)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":203:21)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":203:20)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":169:13)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":202:13)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":178:40)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":178:49)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":178:62)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":178:33)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":178:17)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":178:73)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":179:17)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":182:17)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":179:21)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":179:38)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":180:17)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":181:21)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":183:24)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":183:25)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":183:34)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":183:37)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":183:51)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":183:17)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":183:52)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":184:38)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":184:17)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":185:53)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":185:43)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":185:17)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":185:63)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":186:42)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":186:36)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":186:17)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":186:50)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":187:17)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":190:17)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":187:29)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":187:62)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":187:63)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":187:72)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":187:86)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":187:21)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":187:92)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":188:17)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":189:21)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":193:35)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":193:50)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":193:63)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":193:81)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":193:84)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":193:30)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":193:17)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":193:85)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":194:17)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":197:17)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":194:21)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":194:35)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":194:51)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":194:65)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":195:17)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":196:21)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":199:43)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":199:29)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":199:17)
#loc272 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":201:29)
#loc273 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":201:24)
#loc274 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":201:17)
#loc275 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":201:40)
#loc276 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":204:13)
#loc277 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":207:13)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":204:17)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":204:34)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":205:13)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":206:30)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":206:17)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":215:21)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":215:10)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":215:9)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":217:5)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":229:5)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":218:20)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":220:9)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":228:9)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":220:13)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":220:20)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":221:9)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":224:9)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":226:9)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":222:26)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":223:26)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":223:13)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_add_32.c":227:13)
#loc300 = loc(fused[#loc1, #loc2])
#loc301 = loc(fused[#loc3, #loc4])
#loc302 = loc(fused[#loc6, #loc7])
#loc303 = loc(fused[#loc8, #loc9])
#loc304 = loc(fused[#loc10, #loc11])
#loc305 = loc(fused[#loc12, #loc13])
#loc306 = loc(fused[#loc14, #loc15])
#loc307 = loc(fused[#loc16, #loc17])
#loc308 = loc(fused[#loc18, #loc19])
#loc309 = loc(fused[#loc20, #loc21])
#loc310 = loc(fused[#loc22, #loc23])
#loc311 = loc(fused[#loc24, #loc25])
#loc312 = loc(fused[#loc26, #loc27])
#loc313 = loc(fused[#loc28, #loc29])
#loc314 = loc(fused[#loc30, #loc31])
#loc315 = loc(fused[#loc32, #loc33])
#loc316 = loc(fused[#loc34, #loc35])
#loc317 = loc(fused[#loc36, #loc37])
#loc318 = loc(fused[#loc38, #loc39])
#loc319 = loc(fused[#loc41, #loc40])
#loc320 = loc(fused[#loc42, #loc43])
#loc321 = loc(fused[#loc45, #loc46])
#loc322 = loc(fused[#loc47, #loc48])
#loc323 = loc(fused[#loc50, #loc51])
#loc324 = loc(fused[#loc56, #loc57])
#loc325 = loc(fused[#loc58, #loc59])
#loc326 = loc(fused[#loc60, #loc61])
#loc327 = loc(fused[#loc62, #loc59])
#loc328 = loc(fused[#loc64, #loc65])
#loc329 = loc(fused[#loc67, #loc68])
#loc330 = loc(fused[#loc69, #loc70])
#loc331 = loc(fused[#loc73, #loc71])
#loc332 = loc(fused[#loc77, #loc78])
#loc333 = loc(fused[#loc82, #loc83])
#loc334 = loc(fused[#loc84, #loc85])
#loc335 = loc(fused[#loc87, #loc88])
#loc336 = loc(fused[#loc89, #loc90])
#loc337 = loc(fused[#loc91, #loc92])
#loc338 = loc(fused[#loc93, #loc85])
#loc339 = loc(fused[#loc97, #loc98])
#loc340 = loc(fused[#loc101, #loc102])
#loc341 = loc(fused[#loc103, #loc104])
#loc342 = loc(fused[#loc105, #loc106])
#loc343 = loc(fused[#loc108, #loc109])
#loc344 = loc(fused[#loc110, #loc104])
#loc345 = loc(fused[#loc114, #loc112])
#loc346 = loc(fused[#loc117, #loc118])
#loc347 = loc(fused[#loc119, #loc120])
#loc348 = loc(fused[#loc121, #loc122])
#loc349 = loc(fused[#loc123, #loc120])
#loc350 = loc(fused[#loc128, #loc126])
#loc351 = loc(fused[#loc129, #loc130])
#loc352 = loc(fused[#loc132, #loc133])
#loc353 = loc(fused[#loc137, #loc138])
#loc354 = loc(fused[#loc139, #loc140])
#loc355 = loc(fused[#loc141, #loc142])
#loc356 = loc(fused[#loc143, #loc144])
#loc357 = loc(fused[#loc145, #loc146])
#loc358 = loc(fused[#loc147, #loc148])
#loc359 = loc(fused[#loc149, #loc150])
#loc360 = loc(fused[#loc151, #loc152])
#loc361 = loc(fused[#loc153, #loc154])
#loc362 = loc(fused[#loc155, #loc156])
#loc363 = loc(fused[#loc158, #loc157])
#loc364 = loc(fused[#loc159, #loc160])
#loc365 = loc(fused[#loc163, #loc162])
#loc366 = loc(fused[#loc166, #loc164])
#loc367 = loc(fused[#loc167, #loc168])
#loc368 = loc(fused[#loc170, #loc171])
#loc369 = loc(fused[#loc175, #loc176])
#loc370 = loc(fused[#loc178, #loc179])
#loc371 = loc(fused[#loc180, #loc181])
#loc372 = loc(fused[#loc182, #loc183])
#loc373 = loc(fused[#loc184, #loc185])
#loc374 = loc(fused[#loc186, #loc187])
#loc375 = loc(fused[#loc188, #loc189])
#loc376 = loc(fused[#loc190, #loc191])
#loc377 = loc(fused[#loc192, #loc193])
#loc378 = loc(fused[#loc194, #loc195])
#loc379 = loc(fused[#loc196, #loc197])
#loc380 = loc(fused[#loc198, #loc199])
#loc381 = loc(fused[#loc201, #loc200])
#loc382 = loc(fused[#loc202, #loc203])
#loc383 = loc(fused[#loc205, #loc206])
#loc384 = loc(fused[#loc207, #loc208])
#loc385 = loc(fused[#loc210, #loc211])
#loc386 = loc(fused[#loc216, #loc217])
#loc387 = loc(fused[#loc218, #loc219])
#loc388 = loc(fused[#loc220, #loc221])
#loc389 = loc(fused[#loc222, #loc219])
#loc390 = loc(fused[#loc224, #loc225])
#loc391 = loc(fused[#loc227, #loc228])
#loc392 = loc(fused[#loc229, #loc230])
#loc393 = loc(fused[#loc232, #loc231])
#loc394 = loc(fused[#loc235, #loc236])
#loc395 = loc(fused[#loc239, #loc240])
#loc396 = loc(fused[#loc241, #loc242])
#loc397 = loc(fused[#loc244, #loc245])
#loc398 = loc(fused[#loc246, #loc247])
#loc399 = loc(fused[#loc248, #loc249])
#loc400 = loc(fused[#loc250, #loc242])
#loc401 = loc(fused[#loc254, #loc255])
#loc402 = loc(fused[#loc258, #loc259])
#loc403 = loc(fused[#loc260, #loc261])
#loc404 = loc(fused[#loc262, #loc263])
#loc405 = loc(fused[#loc265, #loc266])
#loc406 = loc(fused[#loc267, #loc261])
#loc407 = loc(fused[#loc271, #loc269])
#loc408 = loc(fused[#loc274, #loc275])
#loc409 = loc(fused[#loc276, #loc277])
#loc410 = loc(fused[#loc278, #loc279])
#loc411 = loc(fused[#loc280, #loc277])
#loc412 = loc(fused[#loc285, #loc283])
#loc413 = loc(fused[#loc286, #loc287])
#loc414 = loc(fused[#loc289, #loc290])
#loc415 = loc(fused[#loc291, #loc292])
#loc416 = loc(fused[#loc293, #loc294, #loc295, #loc290])
