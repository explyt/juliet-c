!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":127:10)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":127:14)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":127:20)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":127:32)
#true = #cir.bool<true> : !cir.bool
#loc206 = loc(fused[#loc138, #loc139])
#loc207 = loc(fused[#loc140, #loc141])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_16L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc154)
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_163badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc155)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc156)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc157)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc158)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc16)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc161)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc155)
    %2 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_163badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc155)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc155)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc27)
        cir.condition(%5) loc(#loc27)
      } do {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc167)
          %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc32)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc32)
          cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc167)
          cir.scope {
            %8 = cir.const #cir.int<4096> : !s32i loc(#loc36)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc36)
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc169)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc38)
            %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc170)
            cir.if %14 {
              cir.scope {
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
                %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc43)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc44)
                %18 = cir.const #cir.int<4096> : !s32i loc(#loc45)
                %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc45)
                %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc173)
                %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc173)
                %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc158)
                %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
                %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc48)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc49)
                %27 = cir.cmp(ne, %25, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc174)
                cir.if %27 {
                  %28 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
                  %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
                  %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
                  cir.store %30, %4 : !u64i, !cir.ptr<!u64i> loc(#loc176)
                  cir.scope {
                    %31 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                    %32 = cir.const #cir.int<0> : !s32i loc(#loc60)
                    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc60)
                    %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc178)
                    %35 = cir.ternary(%34, true {
                      %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
                      %37 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                      %38 = cir.const #cir.int<1> : !s32i loc(#loc64)
                      %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc64)
                      %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc179)
                      %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc65)
                      %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc62)
                      %43 = cir.cast(integral, %42 : !s8i), !s32i loc(#loc62)
                      %44 = cir.const #cir.int<10> : !s8i loc(#loc66)
                      %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc66)
                      %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc180)
                      %47 = cir.ternary(%46, true {
                        %48 = cir.const #true loc(#loc61)
                        cir.yield %48 : !cir.bool loc(#loc61)
                      }, false {
                        %48 = cir.const #false loc(#loc61)
                        cir.yield %48 : !cir.bool loc(#loc61)
                      }) : (!cir.bool) -> !cir.bool loc(#loc61)
                      cir.yield %47 : !cir.bool loc(#loc61)
                    }, false {
                      %36 = cir.const #false loc(#loc61)
                      cir.yield %36 : !cir.bool loc(#loc61)
                    }) : (!cir.bool) -> !cir.bool loc(#loc61)
                    cir.if %35 {
                      %36 = cir.const #cir.int<0> : !s8i loc(#loc68)
                      %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                      %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                      %39 = cir.const #cir.int<1> : !s32i loc(#loc71)
                      %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc71)
                      %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc182)
                      %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                      cir.store %36, %42 : !s8i, !cir.ptr<!s8i> loc(#loc183)
                    } loc(#loc181)
                  } loc(#loc177)
                } else {
                  %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                  %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                  cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc73)
                  %30 = cir.const #cir.int<0> : !s8i loc(#loc74)
                  %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                  %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                  %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                  cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc184)
                } loc(#loc175)
              } loc(#loc172)
            } loc(#loc171)
          } loc(#loc168)
        } loc(#loc166)
        cir.break loc(#loc78)
      } loc(#loc165)
    } loc(#loc165)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc186)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc82)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc186)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc83)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc16)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc16)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc83)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc187)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc90)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc189)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc92)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc93)
        } loc(#loc190)
      } loc(#loc188)
    } loc(#loc185)
    cir.return loc(#loc20)
  } loc(#loc162)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc96)
  cir.func internal private @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc154)
    %2 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_16L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc154)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc154)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc105)
        cir.condition(%5) loc(#loc105)
      } do {
        %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc106)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc96)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc96)
        %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
        cir.break loc(#loc108)
      } loc(#loc195)
    } loc(#loc195)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc197)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc112)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc197)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc113)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc115)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc115)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc113)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc198)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc120)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc121)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc200)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc123)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc124)
        } loc(#loc201)
      } loc(#loc199)
    } loc(#loc196)
    cir.return loc(#loc98)
  } loc(#loc192)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_16L7goodG2BEv() : () -> () loc(#loc127)
    cir.return loc(#loc126)
  } loc(#loc202)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc203)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc135)
  cir.func @main(%arg0: !s32i loc(fused[#loc138, #loc139]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc140, #loc141])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc207)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc137)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc142)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc143)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc144)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc144)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc145)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc132)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_164goodEv() : () -> () loc(#loc147)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc133)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc134)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_163badEv() : () -> () loc(#loc150)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc135)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc152)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    cir.return %15 : !s32i loc(#loc208)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":90:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":90:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":40:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":40:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":63:31)
#loc14 = loc("/usr/include/stdio.h":264:1)
#loc15 = loc("/usr/include/stdio.h":266:3)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":74:29)
#loc17 = loc("/usr/include/stdio.h":184:1)
#loc18 = loc("/usr/include/stdio.h":184:36)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":37:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":80:1)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":39:5)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":39:12)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":41:12)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":41:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":42:5)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":70:5)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":42:11)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":44:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":68:9)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":46:13)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":46:41)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":46:30)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":46:37)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":48:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":67:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":48:17)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":48:30)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":48:40)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":49:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":51:17)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":66:17)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":51:27)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":51:32)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":51:31)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":51:47)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":51:60)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":51:70)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":51:21)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":51:80)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":52:17)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":60:17)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":62:17)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":55:31)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":55:38)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":55:21)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":55:42)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":56:21)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":59:21)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":56:25)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":56:35)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":56:37)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":56:40)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":56:45)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":56:53)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":56:54)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":56:59)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":57:21)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":58:43)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":58:25)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":58:30)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":58:38)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":58:39)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":63:21)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":65:37)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":65:21)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":65:26)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":65:33)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":69:9)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":71:5)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":79:5)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":72:9)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":72:23)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":74:17)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":74:23)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":74:9)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":74:34)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":75:9)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":78:9)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":75:13)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":75:22)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":76:9)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":77:20)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":77:13)
#loc94 = loc("/usr/include/string.h":149:1)
#loc95 = loc("/usr/include/string.h":150:14)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":95:22)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":87:1)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":107:1)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":89:5)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":89:12)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":91:12)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":91:5)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":92:5)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":97:5)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":92:11)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":95:9)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":95:16)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":96:9)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":98:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":106:5)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":99:9)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":99:23)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":101:17)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":101:23)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":101:29)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":101:9)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":101:34)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":102:9)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":105:9)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":102:13)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":102:22)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":103:9)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":104:20)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":104:13)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":109:1)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":112:1)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":111:5)
#loc128 = loc("/usr/include/stdlib.h":575:1)
#loc129 = loc("/usr/include/stdlib.h":575:41)
#loc130 = loc("/usr/include/time.h":76:1)
#loc131 = loc("/usr/include/time.h":76:38)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":132:15)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":134:15)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":137:15)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":139:15)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":127:1)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":142:1)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":128:1)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":130:27)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":130:22)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":130:5)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":132:5)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":133:5)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":134:5)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":137:5)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":138:5)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":139:5)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":141:12)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_16.cpp":141:5)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc7, #loc8])
#loc158 = loc(fused[#loc9, #loc10])
#loc159 = loc(fused[#loc11, #loc12])
#loc160 = loc(fused[#loc14, #loc15])
#loc161 = loc(fused[#loc17, #loc18])
#loc162 = loc(fused[#loc19, #loc20])
#loc163 = loc(fused[#loc21, #loc22])
#loc164 = loc(fused[#loc24, #loc23])
#loc165 = loc(fused[#loc25, #loc26])
#loc166 = loc(fused[#loc28, #loc29])
#loc167 = loc(fused[#loc30, #loc31])
#loc168 = loc(fused[#loc34, #loc35])
#loc169 = loc(fused[#loc36, #loc37])
#loc170 = loc(fused[#loc36, #loc38])
#loc171 = loc(fused[#loc39, #loc35])
#loc172 = loc(fused[#loc40, #loc41])
#loc173 = loc(fused[#loc45, #loc46])
#loc174 = loc(fused[#loc48, #loc49])
#loc175 = loc(fused[#loc50, #loc51, #loc52, #loc41])
#loc176 = loc(fused[#loc55, #loc56])
#loc177 = loc(fused[#loc57, #loc58])
#loc178 = loc(fused[#loc59, #loc60])
#loc179 = loc(fused[#loc63, #loc64])
#loc180 = loc(fused[#loc62, #loc66])
#loc181 = loc(fused[#loc67, #loc58])
#loc182 = loc(fused[#loc70, #loc71])
#loc183 = loc(fused[#loc69, #loc68])
#loc184 = loc(fused[#loc75, #loc74])
#loc185 = loc(fused[#loc79, #loc80])
#loc186 = loc(fused[#loc81, #loc82])
#loc187 = loc(fused[#loc85, #loc86])
#loc188 = loc(fused[#loc87, #loc88])
#loc189 = loc(fused[#loc89, #loc90])
#loc190 = loc(fused[#loc91, #loc88])
#loc191 = loc(fused[#loc94, #loc95])
#loc192 = loc(fused[#loc97, #loc98])
#loc193 = loc(fused[#loc99, #loc100])
#loc194 = loc(fused[#loc102, #loc101])
#loc195 = loc(fused[#loc103, #loc104])
#loc196 = loc(fused[#loc109, #loc110])
#loc197 = loc(fused[#loc111, #loc112])
#loc198 = loc(fused[#loc116, #loc117])
#loc199 = loc(fused[#loc118, #loc119])
#loc200 = loc(fused[#loc120, #loc121])
#loc201 = loc(fused[#loc122, #loc119])
#loc202 = loc(fused[#loc125, #loc126])
#loc203 = loc(fused[#loc128, #loc129])
#loc204 = loc(fused[#loc130, #loc131])
#loc205 = loc(fused[#loc136, #loc137])
#loc208 = loc(fused[#loc153, #loc152])
