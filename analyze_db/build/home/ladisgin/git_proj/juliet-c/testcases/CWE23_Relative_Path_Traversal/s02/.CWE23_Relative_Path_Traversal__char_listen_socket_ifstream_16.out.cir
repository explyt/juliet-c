!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.struct<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":193:10)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":193:14)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":193:20)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":193:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc348 = loc(fused[#loc240, #loc241])
#loc349 = loc(fused[#loc242, #loc243])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.struct<struct "__pthread_internal_list" {!cir.ptr<!cir.struct<struct "__pthread_internal_list">>, !cir.ptr<!cir.struct<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0_ = !cir.struct<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.struct<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.struct<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.struct<struct "__mbstate_t" {!s32i, !ty_anon2E0_} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.struct<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.struct<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.struct<class "std::__basic_file<char>" packed {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.struct<class "std::basic_istream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.struct<class "std::basic_ios<char, std::char_traits<char>>" {!cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<!void (!u32i, !cir.ptr<!cir.struct<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.struct<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.struct<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::ctype<char>" packed {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::num_put<char, std::ostreambuf_iterator<char>>" {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::num_get<char, std::istreambuf_iterator<char>>" {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.struct<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<!void (!u32i, !cir.ptr<!cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.struct<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.struct<class "std::ctype<char>" packed {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar3E3E = !cir.struct<class "std::num_get<char, std::istreambuf_iterator<char>>" {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar3E3E = !cir.struct<class "std::num_put<char, std::ostreambuf_iterator<char>>" {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.struct<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.struct<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ifstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc256)
  cir.global "private" constant cir_private @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_163badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc257)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc258)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc259)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc260)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc261)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc262)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc263)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc264)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc265)
  cir.func private @close(!s32i) -> !s32i loc(#loc266)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc267)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc268)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc269)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc270)
  cir.func @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc272)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc257)
    %2 = cir.get_global @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_163badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc257)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc257)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc39)
        cir.condition(%5) loc(#loc39)
      } do {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc276)
          %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc277)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc278)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc279)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc280)
          %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc281)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc49)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc279)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc51)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc51)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc280)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
          cir.store %16, %9 : !u64i, !cir.ptr<!u64i> loc(#loc281)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc58)
              %18 = cir.const #cir.int<1> : !u32i loc(#loc59)
              %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc59)
              %20 = cir.const #cir.int<6> : !u32i loc(#loc60)
              %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc60)
              %22 = cir.call @socket(%17, %19, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc61)
              cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc283)
              cir.scope {
                %75 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc66)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc67)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc67)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc285)
                cir.if %78 {
                  cir.break loc(#loc69)
                } loc(#loc286)
              } loc(#loc284)
              %23 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc287)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc72)
              %25 = cir.const #cir.int<16> : !u64i loc(#loc288)
              cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc289)
              %26 = cir.const #cir.int<2> : !s32i loc(#loc77)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc77)
              %28 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
              cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc290)
              %29 = cir.const #cir.int<0> : !s32i loc(#loc80)
              %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc80)
              %31 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc291)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc84)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc84)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc85)
              %36 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc292)
              cir.scope {
                %75 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %76 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc294)
                %77 = cir.const #cir.int<16> : !u64i loc(#loc295)
                %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc295)
                %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc96)
                %80 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc97)
                %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc296)
                cir.if %82 {
                  cir.break loc(#loc99)
                } loc(#loc297)
              } loc(#loc293)
              cir.scope {
                %75 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                %76 = cir.const #cir.int<5> : !s32i loc(#loc103)
                %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc104)
                %78 = cir.const #cir.int<1> : !s32i loc(#loc105)
                %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc105)
                %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc299)
                cir.if %80 {
                  cir.break loc(#loc107)
                } loc(#loc300)
              } loc(#loc298)
              %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc108)
              %38 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc109)
              %39 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc110)
              %40 = cir.call @accept(%37, %38, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc111)
              cir.store %40, %8 : !s32i, !cir.ptr<!s32i> loc(#loc301)
              cir.scope {
                %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc117)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc117)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc303)
                cir.if %78 {
                  cir.break loc(#loc119)
                } loc(#loc304)
              } loc(#loc302)
              %41 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
              %43 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc122)
              %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc123)
              %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc305)
              %46 = cir.const #cir.int<1> : !u64i loc(#loc306)
              %47 = cir.const #cir.int<4096> : !s32i loc(#loc128)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc128)
              %49 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc129)
              %50 = cir.binop(sub, %48, %49) : !u64i loc(#loc307)
              %51 = cir.const #cir.int<1> : !s32i loc(#loc130)
              %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc130)
              %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc308)
              %54 = cir.binop(mul, %46, %53) : !u64i loc(#loc309)
              %55 = cir.const #cir.int<0> : !s32i loc(#loc132)
              %56 = cir.call @recv(%41, %45, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc133)
              %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc133)
              cir.store %57, %4 : !s32i, !cir.ptr<!s32i> loc(#loc310)
              cir.scope {
                %75 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc138)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc139)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc139)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc312)
                %79 = cir.ternary(%78, true {
                  %80 = cir.const #true loc(#loc140)
                  cir.yield %80 : !cir.bool loc(#loc140)
                }, false {
                  %80 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                  %81 = cir.const #cir.int<0> : !s32i loc(#loc142)
                  %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc313)
                  %83 = cir.ternary(%82, true {
                    %84 = cir.const #true loc(#loc140)
                    cir.yield %84 : !cir.bool loc(#loc140)
                  }, false {
                    %84 = cir.const #false loc(#loc140)
                    cir.yield %84 : !cir.bool loc(#loc140)
                  }) : (!cir.bool) -> !cir.bool loc(#loc140)
                  cir.yield %83 : !cir.bool loc(#loc140)
                }) : (!cir.bool) -> !cir.bool loc(#loc140)
                cir.if %79 {
                  cir.break loc(#loc144)
                } loc(#loc314)
              } loc(#loc311)
              %58 = cir.const #cir.int<0> : !s8i loc(#loc145)
              %59 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
              %60 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc147)
              %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc148)
              %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc148)
              %63 = cir.const #cir.int<1> : !u64i loc(#loc315)
              %64 = cir.binop(div, %62, %63) : !u64i loc(#loc316)
              %65 = cir.binop(add, %60, %64) : !u64i loc(#loc317)
              %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc151)
              cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc318)
              %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
              %68 = cir.const #cir.int<13> : !s8i loc(#loc153)
              %69 = cir.cast(integral, %68 : !s8i), !s32i loc(#loc153)
              %70 = cir.call @strchr(%67, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc154)
              cir.store %70, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc319)
              cir.scope {
                %75 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
                %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc159)
                cir.if %76 {
                  %77 = cir.const #cir.int<0> : !s8i loc(#loc161)
                  %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
                  cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc322)
                } loc(#loc321)
              } loc(#loc320)
              %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
              %72 = cir.const #cir.int<10> : !s8i loc(#loc165)
              %73 = cir.cast(integral, %72 : !s8i), !s32i loc(#loc165)
              %74 = cir.call @strchr(%71, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
              cir.store %74, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
              cir.scope {
                %75 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
                %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc171)
                cir.if %76 {
                  %77 = cir.const #cir.int<0> : !s8i loc(#loc173)
                  %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
                  cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc326)
                } loc(#loc325)
              } loc(#loc324)
              cir.yield loc(#loc57)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc176)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc176)
              cir.condition(%18) loc(#loc176)
            } loc(#loc282)
          } loc(#loc282)
          cir.scope {
            %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc179)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc180)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc180)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc328)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc182)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc183)
            } loc(#loc329)
          } loc(#loc327)
          cir.scope {
            %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc186)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc187)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc187)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc331)
            cir.if %20 {
              %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc189)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc190)
            } loc(#loc332)
          } loc(#loc330)
        } loc(#loc275)
        cir.break loc(#loc191)
      } loc(#loc274)
    } loc(#loc274)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc334)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc195)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc335)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc270)
          cir.yield loc(#loc200)
        } loc(#loc200)
        cir.yield loc(#loc199)
      } catch [#cir.unwind {
        cir.resume loc(#loc199)
      }] loc(#loc199)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc270)
          cir.yield loc(#loc201)
        } loc(#loc201)
        cir.yield loc(#loc199)
      } catch [#cir.unwind {
        cir.resume loc(#loc199)
      }] loc(#loc199)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc270)
    } loc(#loc333)
    cir.return loc(#loc32)
  } loc(#loc271)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc336)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc204)
  cir.func internal private @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc338)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc256)
    %2 = cir.get_global @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc256)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc256)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc209)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc339)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc213)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc213)
        cir.condition(%5) loc(#loc213)
      } do {
        %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc214)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc204)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc204)
        %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc214)
        cir.break loc(#loc216)
      } loc(#loc340)
    } loc(#loc340)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc342)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc220)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc335)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc270)
          cir.yield loc(#loc223)
        } loc(#loc223)
        cir.yield loc(#loc222)
      } catch [#cir.unwind {
        cir.resume loc(#loc222)
      }] loc(#loc222)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc270)
          cir.yield loc(#loc224)
        } loc(#loc224)
        cir.yield loc(#loc222)
      } catch [#cir.unwind {
        cir.resume loc(#loc222)
      }] loc(#loc222)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc270)
    } loc(#loc341)
    cir.return loc(#loc206)
  } loc(#loc337)
  cir.func @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16L7goodG2BEv() : () -> () loc(#loc227)
    cir.return loc(#loc226)
  } loc(#loc343)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc344)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc345)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc346)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc237)
  cir.func @main(%arg0: !s32i loc(fused[#loc240, #loc241]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc242, #loc243])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc348)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc349)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc239)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc244)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc245)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc246)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc246)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc247)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc234)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc234)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc248)
    cir.call @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_164goodEv() : () -> () loc(#loc249)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc235)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc235)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc250)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc236)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc236)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc251)
    cir.call @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_163badEv() : () -> () loc(#loc252)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc237)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc237)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc253)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc254)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc350)
    cir.return %15 : !s32i loc(#loc350)
  } loc(#loc347)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":159:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":159:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":58:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":58:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":226:1)
#loc20 = loc("/usr/include/string.h":227:50)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":558:7)
#loc24 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":559:34)
#loc25 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":697:7)
#loc26 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":706:7)
#loc27 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":769:7)
#loc28 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":774:7)
#loc29 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":639:7)
#loc30 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":640:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":55:1)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":149:1)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":57:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":57:12)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":59:12)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":59:5)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":60:5)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":142:5)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":60:11)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":62:9)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":140:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":67:13)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":67:17)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":68:13)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":68:32)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":69:13)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":69:19)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":70:13)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":70:35)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":71:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":71:35)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":72:13)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":72:41)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":72:30)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":72:37)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":73:13)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":125:21)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":83:39)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":83:48)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":83:61)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":83:32)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":83:17)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":83:72)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":84:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":87:17)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":84:21)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":84:37)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":85:17)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":86:21)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":88:24)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":88:25)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":88:34)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":88:37)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":88:51)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":88:17)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":88:52)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":89:38)
#loc78 = loc("/usr/include/netinet/in.h":249:5)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":89:17)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":90:43)
#loc81 = loc("/usr/include/netinet/in.h":251:20)
#loc82 = loc("/usr/include/netinet/in.h":33:15)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":90:17)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":91:42)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":91:36)
#loc86 = loc("/usr/include/netinet/in.h":250:15)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":91:17)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":91:50)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":92:17)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":95:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":92:26)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":92:58)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":92:59)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":92:68)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":92:82)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":92:21)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":92:88)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":93:17)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":94:21)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":96:17)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":99:17)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":96:28)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":96:42)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":96:21)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":96:61)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":97:17)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":98:21)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":100:39)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":100:53)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":100:59)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":100:32)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":100:17)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":100:63)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":101:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":104:17)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":101:21)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":101:37)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":102:17)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":103:21)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:35)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:58)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:65)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:63)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:49)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:72)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:75)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:86)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:91)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:106)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:116)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:117)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:120)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:30)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:17)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":106:121)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":107:17)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":110:17)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":107:21)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":107:35)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":107:48)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":107:51)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":107:65)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":108:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":109:21)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":112:61)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":112:17)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":112:22)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":112:32)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":112:45)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":112:56)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":112:57)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":114:34)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":114:40)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":114:27)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":114:17)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":114:44)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":115:17)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":118:17)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":115:21)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":116:17)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":117:32)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":117:22)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":117:21)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":119:34)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":119:40)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":119:27)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":119:17)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":119:44)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":120:17)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":123:17)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":120:21)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":121:17)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":122:32)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":122:22)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":122:21)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":125:20)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":126:13)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":129:13)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":126:17)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":126:33)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":127:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":128:30)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":128:17)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":130:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":133:13)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":130:17)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":130:33)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":131:13)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":132:30)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":132:17)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":141:9)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":143:5)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":148:5)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":144:9)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":144:18)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":146:32)
#loc197 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":698:57)
#loc198 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":698:67)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":55:6)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":146:19)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":147:19)
#loc202 = loc("/usr/include/string.h":149:1)
#loc203 = loc("/usr/include/string.h":150:14)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":164:22)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":156:1)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":173:1)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":158:5)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":158:12)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":160:12)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":160:5)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":161:5)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":166:5)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":161:11)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":164:9)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":164:16)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":165:9)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":167:5)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":172:5)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":168:9)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":168:18)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":170:32)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":156:13)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":170:19)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":171:19)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":175:1)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":178:1)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":177:5)
#loc228 = loc("/usr/include/stdlib.h":575:1)
#loc229 = loc("/usr/include/stdlib.h":575:41)
#loc230 = loc("/usr/include/time.h":76:1)
#loc231 = loc("/usr/include/time.h":76:38)
#loc232 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc233 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":198:15)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":200:15)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":203:15)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":205:15)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":193:1)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":208:1)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":194:1)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":196:27)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":196:22)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":196:5)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":198:5)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":199:5)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":200:5)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":203:5)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":204:5)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":205:5)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":207:12)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_16.cpp":207:5)
#loc256 = loc(fused[#loc1, #loc2])
#loc257 = loc(fused[#loc3, #loc4])
#loc258 = loc(fused[#loc5, #loc6])
#loc259 = loc(fused[#loc7, #loc8])
#loc260 = loc(fused[#loc9, #loc10])
#loc261 = loc(fused[#loc11, #loc12])
#loc262 = loc(fused[#loc13, #loc14])
#loc263 = loc(fused[#loc15, #loc16])
#loc264 = loc(fused[#loc17, #loc18])
#loc265 = loc(fused[#loc19, #loc20])
#loc266 = loc(fused[#loc21, #loc22])
#loc267 = loc(fused[#loc23, #loc24])
#loc268 = loc(fused[#loc25, #loc26])
#loc269 = loc(fused[#loc27, #loc28])
#loc270 = loc(fused[#loc29, #loc30])
#loc271 = loc(fused[#loc31, #loc32])
#loc272 = loc(fused[#loc33, #loc34])
#loc273 = loc(fused[#loc36, #loc35])
#loc274 = loc(fused[#loc37, #loc38])
#loc275 = loc(fused[#loc40, #loc41])
#loc276 = loc(fused[#loc42, #loc43])
#loc277 = loc(fused[#loc44, #loc45])
#loc278 = loc(fused[#loc46, #loc47])
#loc279 = loc(fused[#loc48, #loc49])
#loc280 = loc(fused[#loc50, #loc51])
#loc281 = loc(fused[#loc52, #loc53])
#loc282 = loc(fused[#loc56, #loc57])
#loc283 = loc(fused[#loc62, #loc63])
#loc284 = loc(fused[#loc64, #loc65])
#loc285 = loc(fused[#loc66, #loc67])
#loc286 = loc(fused[#loc68, #loc65])
#loc287 = loc(fused[#loc70, #loc71])
#loc288 = loc(fused[#loc73, #loc74])
#loc289 = loc(fused[#loc75, #loc76])
#loc290 = loc(fused[#loc79, #loc77])
#loc291 = loc(fused[#loc83, #loc80])
#loc292 = loc(fused[#loc87, #loc88])
#loc293 = loc(fused[#loc89, #loc90])
#loc294 = loc(fused[#loc92, #loc93])
#loc295 = loc(fused[#loc94, #loc95])
#loc296 = loc(fused[#loc96, #loc97])
#loc297 = loc(fused[#loc98, #loc90])
#loc298 = loc(fused[#loc100, #loc101])
#loc299 = loc(fused[#loc104, #loc105])
#loc300 = loc(fused[#loc106, #loc101])
#loc301 = loc(fused[#loc112, #loc113])
#loc302 = loc(fused[#loc114, #loc115])
#loc303 = loc(fused[#loc116, #loc117])
#loc304 = loc(fused[#loc118, #loc115])
#loc305 = loc(fused[#loc124, #loc125])
#loc306 = loc(fused[#loc126, #loc127])
#loc307 = loc(fused[#loc128, #loc129])
#loc308 = loc(fused[#loc128, #loc130])
#loc309 = loc(fused[#loc126, #loc131])
#loc310 = loc(fused[#loc134, #loc135])
#loc311 = loc(fused[#loc136, #loc137])
#loc312 = loc(fused[#loc138, #loc139])
#loc313 = loc(fused[#loc141, #loc142])
#loc314 = loc(fused[#loc143, #loc137])
#loc315 = loc(fused[#loc149, #loc150])
#loc316 = loc(fused[#loc148, #loc150])
#loc317 = loc(fused[#loc147, #loc150])
#loc318 = loc(fused[#loc146, #loc145])
#loc319 = loc(fused[#loc155, #loc156])
#loc320 = loc(fused[#loc157, #loc158])
#loc321 = loc(fused[#loc160, #loc158])
#loc322 = loc(fused[#loc163, #loc161])
#loc323 = loc(fused[#loc167, #loc168])
#loc324 = loc(fused[#loc169, #loc170])
#loc325 = loc(fused[#loc172, #loc170])
#loc326 = loc(fused[#loc175, #loc173])
#loc327 = loc(fused[#loc177, #loc178])
#loc328 = loc(fused[#loc179, #loc180])
#loc329 = loc(fused[#loc181, #loc178])
#loc330 = loc(fused[#loc184, #loc185])
#loc331 = loc(fused[#loc186, #loc187])
#loc332 = loc(fused[#loc188, #loc185])
#loc333 = loc(fused[#loc192, #loc193])
#loc334 = loc(fused[#loc194, #loc195])
#loc335 = loc(fused[#loc197, #loc198])
#loc336 = loc(fused[#loc202, #loc203])
#loc337 = loc(fused[#loc205, #loc206])
#loc338 = loc(fused[#loc207, #loc208])
#loc339 = loc(fused[#loc210, #loc209])
#loc340 = loc(fused[#loc211, #loc212])
#loc341 = loc(fused[#loc217, #loc218])
#loc342 = loc(fused[#loc219, #loc220])
#loc343 = loc(fused[#loc225, #loc226])
#loc344 = loc(fused[#loc228, #loc229])
#loc345 = loc(fused[#loc230, #loc231])
#loc346 = loc(fused[#loc232, #loc233])
#loc347 = loc(fused[#loc238, #loc239])
#loc350 = loc(fused[#loc255, #loc254])
