!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":94:10)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":94:14)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":94:20)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":94:32)
#loc206 = loc(fused[#loc88, #loc89])
#loc207 = loc(fused[#loc90, #loc91])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc172)
  cir.func private @printLongLongLine(!s64i) loc(#loc173)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc174)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc175)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int64_t_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc177)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc17)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc180)
        cir.condition(%4) loc(#loc21)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc183)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc27)
            %4 = cir.const #cir.int<100> : !s32i loc(#loc28)
            %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc28)
            %6 = cir.const #cir.int<8> : !u64i loc(#loc184)
            %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc185)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc186)
            cir.store %9, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc183)
            cir.scope {
              %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc34)
              %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s64i>, !cir.bool loc(#loc188)
              cir.if %30 {
                %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
                %32 = cir.const #cir.int<1> : !s32i loc(#loc37)
                %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc38)
                cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
              } loc(#loc189)
            } loc(#loc187)
            %10 = cir.const #cir.int<5> : !s64i loc(#loc39)
            %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc40)
            %12 = cir.const #cir.int<0> : !s32i loc(#loc41)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc42)
            cir.store %10, %13 : !s64i, !cir.ptr<!s64i> loc(#loc190)
            %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc43)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc44)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc45)
            %17 = cir.load %16 : !cir.ptr<!s64i>, !s64i loc(#loc43)
            cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc46)
            %18 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc47)
            %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc48)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc48)
            %21 = cir.const #cir.int<130000> : !s32i loc(#loc49)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc49)
            %23 = cir.const #cir.int<8> : !u64i loc(#loc191)
            %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc192)
            %25 = cir.call @realloc(%20, %24) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc193)
            cir.store %26, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc194)
            cir.scope {
              %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc57)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc58)
              %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s64i>, !cir.bool loc(#loc196)
              cir.if %30 {
                %31 = cir.const #cir.int<10> : !s64i loc(#loc60)
                %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc61)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc62)
                %34 = cir.ptr_stride(%32 : !cir.ptr<!s64i>, %33 : !s32i), !cir.ptr<!s64i> loc(#loc63)
                cir.store %31, %34 : !s64i, !cir.ptr<!s64i> loc(#loc198)
                %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc64)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc65)
                %37 = cir.ptr_stride(%35 : !cir.ptr<!s64i>, %36 : !s32i), !cir.ptr<!s64i> loc(#loc66)
                %38 = cir.load %37 : !cir.ptr<!s64i>, !s64i loc(#loc64)
                cir.call @printLongLongLine(%38) : (!s64i) -> () loc(#loc67)
                %39 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc68)
                %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc69)
                %41 = cir.cast(bitcast, %40 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc69)
                cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
              } loc(#loc197)
            } loc(#loc195)
          } loc(#loc182)
        } loc(#loc181)
        cir.yield loc(#loc16)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc71)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
        cir.yield loc(#loc178)
      } loc(#loc178)
    } loc(#loc178)
    cir.return loc(#loc12)
  } loc(#loc176)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int64_t_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc73)
  } loc(#loc200)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc202)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc203)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc85)
  cir.func @main(%arg0: !s32i loc(fused[#loc88, #loc89]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc90, #loc91])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc207)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc87)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc92)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc93)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc94)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc94)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc95)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc82)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int64_t_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int64_t_17_good() : () -> () loc(#loc97)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc83)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc84)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int64_t_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int64_t_17_bad() : () -> () loc(#loc101)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc85)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.return %17 : !s32i loc(#loc210)
  } loc(#loc205)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc212)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc112)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc215)
        cir.condition(%4) loc(#loc116)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc218)
            %3 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc219)
            %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc124)
            %5 = cir.const #cir.int<100> : !s32i loc(#loc125)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc125)
            %7 = cir.const #cir.int<8> : !u64i loc(#loc220)
            %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc221)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc222)
            cir.store %10, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc218)
            cir.scope {
              %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc130)
              %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc131)
              %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s64i>, !cir.bool loc(#loc224)
              cir.if %34 {
                %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc133)
                %36 = cir.const #cir.int<1> : !s32i loc(#loc134)
                %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc135)
                cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc133)
              } loc(#loc225)
            } loc(#loc223)
            %11 = cir.const #cir.int<5> : !s64i loc(#loc136)
            %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc137)
            %13 = cir.const #cir.int<0> : !s32i loc(#loc138)
            %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc139)
            cir.store %11, %14 : !s64i, !cir.ptr<!s64i> loc(#loc226)
            %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc140)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc141)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !s32i), !cir.ptr<!s64i> loc(#loc142)
            %18 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc140)
            cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc143)
            %19 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc144)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc145)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc145)
            %22 = cir.const #cir.int<130000> : !s32i loc(#loc146)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc146)
            %24 = cir.const #cir.int<8> : !u64i loc(#loc227)
            %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc228)
            %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc144)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc229)
            cir.store %27, %3 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc230)
            cir.scope {
              %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc154)
              %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc155)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc155)
              %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s64i>, !cir.bool loc(#loc232)
              cir.if %34 {
                %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc157)
                cir.store %35, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc234)
                %36 = cir.const #cir.int<10> : !s64i loc(#loc159)
                %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc160)
                %38 = cir.const #cir.int<0> : !s32i loc(#loc161)
                %39 = cir.ptr_stride(%37 : !cir.ptr<!s64i>, %38 : !s32i), !cir.ptr<!s64i> loc(#loc162)
                cir.store %36, %39 : !s64i, !cir.ptr<!s64i> loc(#loc235)
                %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc163)
                %41 = cir.const #cir.int<0> : !s32i loc(#loc164)
                %42 = cir.ptr_stride(%40 : !cir.ptr<!s64i>, %41 : !s32i), !cir.ptr<!s64i> loc(#loc165)
                %43 = cir.load %42 : !cir.ptr<!s64i>, !s64i loc(#loc163)
                cir.call @printLongLongLine(%43) : (!s64i) -> () loc(#loc166)
              } loc(#loc233)
            } loc(#loc231)
            %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc167)
            %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc168)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc168)
            cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc167)
          } loc(#loc217)
        } loc(#loc216)
        cir.yield loc(#loc111)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc170)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
        cir.yield loc(#loc213)
      } loc(#loc213)
    } loc(#loc213)
    cir.return loc(#loc107)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("/usr/include/stdlib.h":683:1)
#loc8 = loc("/usr/include/stdlib.h":684:14)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":24:1)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":46:1)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":26:5)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":26:9)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":27:5)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":45:5)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":27:13)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":27:9)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":27:16)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":27:20)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":27:18)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":28:5)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":29:9)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":44:9)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":30:13)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":30:67)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":30:41)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":30:48)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":30:52)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":30:66)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":31:13)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":31:41)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":31:17)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":31:25)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":31:31)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":31:32)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":31:38)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":31:37)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":33:23)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":33:13)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":33:18)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":33:19)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":34:31)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":34:36)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":34:37)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":34:13)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":36:31)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":36:39)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":36:46)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":36:54)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":36:68)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":36:45)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":36:69)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":36:13)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":37:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":43:13)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":37:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":37:25)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":38:13)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":40:27)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":40:17)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":40:22)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":40:23)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":41:35)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":41:40)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":41:41)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":41:17)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":42:17)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":42:22)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":27:24)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":27:23)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":80:1)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":83:1)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":82:5)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":82:11)
#loc76 = loc("/usr/include/stdlib.h":575:1)
#loc77 = loc("/usr/include/stdlib.h":575:41)
#loc78 = loc("/usr/include/time.h":76:1)
#loc79 = loc("/usr/include/time.h":76:38)
#loc80 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc81 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":99:15)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":101:15)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":104:15)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":106:15)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":94:1)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":109:1)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":95:1)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":97:27)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":97:22)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":97:5)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":99:5)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":100:5)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":100:56)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":101:5)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":104:5)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":105:5)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":105:55)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":106:5)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":108:12)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":108:5)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":53:1)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":78:1)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":55:5)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":55:9)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":56:5)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":77:5)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":56:13)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":56:9)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":56:16)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":56:20)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":56:18)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":57:5)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":58:9)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":76:9)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":59:13)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":59:67)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":61:13)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":61:23)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":59:41)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":59:48)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":59:52)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":59:66)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":60:13)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":60:41)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":60:17)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":60:25)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":60:31)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":60:32)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":60:38)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":60:37)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":63:23)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":63:13)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":63:18)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":63:19)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":64:31)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":64:36)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":64:37)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":64:13)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":65:34)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":65:42)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":65:49)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":65:57)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":65:71)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":65:48)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":65:72)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":65:13)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":68:13)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":74:13)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":68:17)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":68:28)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":69:13)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":70:24)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":70:17)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":72:27)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":72:17)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":72:22)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":72:23)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":73:35)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":73:40)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":73:41)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":73:17)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":75:13)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":75:18)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":56:24)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_17.c":56:23)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc11, #loc12])
#loc177 = loc(fused[#loc13, #loc14])
#loc178 = loc(fused[#loc15, #loc16])
#loc179 = loc(fused[#loc18, #loc17])
#loc180 = loc(fused[#loc19, #loc20])
#loc181 = loc(fused[#loc22, #loc16])
#loc182 = loc(fused[#loc23, #loc24])
#loc183 = loc(fused[#loc25, #loc26])
#loc184 = loc(fused[#loc29, #loc30])
#loc185 = loc(fused[#loc28, #loc30])
#loc186 = loc(fused[#loc27, #loc26])
#loc187 = loc(fused[#loc31, #loc32])
#loc188 = loc(fused[#loc33, #loc34])
#loc189 = loc(fused[#loc35, #loc32])
#loc190 = loc(fused[#loc40, #loc39])
#loc191 = loc(fused[#loc50, #loc51])
#loc192 = loc(fused[#loc52, #loc51])
#loc193 = loc(fused[#loc47, #loc53])
#loc194 = loc(fused[#loc54, #loc53])
#loc195 = loc(fused[#loc55, #loc56])
#loc196 = loc(fused[#loc57, #loc58])
#loc197 = loc(fused[#loc59, #loc56])
#loc198 = loc(fused[#loc61, #loc60])
#loc199 = loc(fused[#loc71, #loc70])
#loc200 = loc(fused[#loc72, #loc73])
#loc201 = loc(fused[#loc74, #loc75])
#loc202 = loc(fused[#loc76, #loc77])
#loc203 = loc(fused[#loc78, #loc79])
#loc204 = loc(fused[#loc80, #loc81])
#loc205 = loc(fused[#loc86, #loc87])
#loc208 = loc(fused[#loc97, #loc98])
#loc209 = loc(fused[#loc101, #loc102])
#loc210 = loc(fused[#loc105, #loc104])
#loc211 = loc(fused[#loc106, #loc107])
#loc212 = loc(fused[#loc108, #loc109])
#loc213 = loc(fused[#loc110, #loc111])
#loc214 = loc(fused[#loc113, #loc112])
#loc215 = loc(fused[#loc114, #loc115])
#loc216 = loc(fused[#loc117, #loc111])
#loc217 = loc(fused[#loc118, #loc119])
#loc218 = loc(fused[#loc120, #loc121])
#loc219 = loc(fused[#loc122, #loc123])
#loc220 = loc(fused[#loc126, #loc127])
#loc221 = loc(fused[#loc125, #loc127])
#loc222 = loc(fused[#loc124, #loc121])
#loc223 = loc(fused[#loc128, #loc129])
#loc224 = loc(fused[#loc130, #loc131])
#loc225 = loc(fused[#loc132, #loc129])
#loc226 = loc(fused[#loc137, #loc136])
#loc227 = loc(fused[#loc147, #loc148])
#loc228 = loc(fused[#loc149, #loc148])
#loc229 = loc(fused[#loc144, #loc150])
#loc230 = loc(fused[#loc151, #loc150])
#loc231 = loc(fused[#loc152, #loc153])
#loc232 = loc(fused[#loc154, #loc155])
#loc233 = loc(fused[#loc156, #loc153])
#loc234 = loc(fused[#loc158, #loc157])
#loc235 = loc(fused[#loc160, #loc159])
#loc236 = loc(fused[#loc170, #loc169])
