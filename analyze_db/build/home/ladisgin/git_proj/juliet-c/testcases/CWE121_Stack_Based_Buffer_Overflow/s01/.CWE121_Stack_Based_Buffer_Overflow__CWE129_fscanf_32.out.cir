!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":153:10)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":153:14)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":153:20)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":153:32)
#true = #cir.bool<true> : !cir.bool
#loc252 = loc(fused[#loc83, #loc84])
#loc253 = loc(fused[#loc85, #loc86])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc220)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc222)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc226)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc227)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc226)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc227)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc20)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc230)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc230)
      %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
      %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
      %13 = cir.call @__isoc99_fscanf(%10, %12, %5) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc27)
      %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
      cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    } loc(#loc229)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc233)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc36)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc233)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc235)
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc236)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc236)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc236)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc45)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc46)
          %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc238)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc51)
            %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc52)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc52)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc240)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc55)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc242)
              cir.for : cond {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc58)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc243)
                cir.condition(%21) loc(#loc59)
              } body {
                cir.scope {
                  %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                  %20 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc62)
                  %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc62)
                  %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc62)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc63)
                } loc(#loc244)
                cir.yield loc(#loc54)
              } step {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc65)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc245)
                cir.yield loc(#loc241)
              } loc(#loc241)
            } loc(#loc241)
          } else {
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc10)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc10)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
          } loc(#loc239)
        } loc(#loc237)
      } loc(#loc234)
    } loc(#loc232)
    cir.return loc(#loc12)
  } loc(#loc224)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc246)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc249)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc80)
  cir.func @main(%arg0: !s32i loc(fused[#loc83, #loc84]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc85, #loc86])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc252)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc253)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc89)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc89)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc90)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32_good() : () -> () loc(#loc92)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc79)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32_bad() : () -> () loc(#loc96)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    cir.return %17 : !s32i loc(#loc256)
  } loc(#loc251)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc259)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc260)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc259)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc260)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc110)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc263)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc116)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc263)
      %8 = cir.const #cir.int<7> : !s32i loc(#loc117)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc264)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc119)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    } loc(#loc262)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc267)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc267)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc269)
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc270)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc270)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc270)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc136)
          %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc272)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc140)
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc142)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc142)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc274)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc145)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc276)
              cir.for : cond {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc148)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc277)
                cir.condition(%21) loc(#loc149)
              } body {
                cir.scope {
                  %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                  %20 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc152)
                  %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc152)
                  %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc153)
                } loc(#loc278)
                cir.yield loc(#loc144)
              } step {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc155)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc279)
                cir.yield loc(#loc275)
              } loc(#loc275)
            } loc(#loc275)
          } else {
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc156)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc156)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc157)
          } loc(#loc273)
        } loc(#loc271)
      } loc(#loc268)
    } loc(#loc266)
    cir.return loc(#loc102)
  } loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc158)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc281)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc282)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc283)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc282)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc283)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc168)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc286)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc173)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc174)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc286)
      %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc175)
      %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc176)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc177)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc177)
      %13 = cir.call @__isoc99_fscanf(%10, %12, %5) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc175)
      %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc178)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
      cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    } loc(#loc285)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc289)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc184)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc289)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc291)
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc292)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc292)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc292)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc194)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc195)
          %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc294)
          %14 = cir.ternary(%13, true {
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc197)
            %16 = cir.const #cir.int<10> : !s32i loc(#loc198)
            %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc295)
            %18 = cir.ternary(%17, true {
              %19 = cir.const #true loc(#loc196)
              cir.yield %19 : !cir.bool loc(#loc196)
            }, false {
              %19 = cir.const #false loc(#loc196)
              cir.yield %19 : !cir.bool loc(#loc196)
            }) : (!cir.bool) -> !cir.bool loc(#loc196)
            cir.yield %18 : !cir.bool loc(#loc196)
          }, false {
            %15 = cir.const #false loc(#loc196)
            cir.yield %15 : !cir.bool loc(#loc196)
          }) : (!cir.bool) -> !cir.bool loc(#loc196)
          cir.if %14 {
            %15 = cir.const #cir.int<1> : !s32i loc(#loc203)
            %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc204)
            %17 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc205)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc205)
            cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc297)
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc208)
              cir.store %19, %8 : !s32i, !cir.ptr<!s32i> loc(#loc299)
              cir.for : cond {
                %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc210)
                %21 = cir.const #cir.int<10> : !s32i loc(#loc211)
                %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc300)
                cir.condition(%22) loc(#loc212)
              } body {
                cir.scope {
                  %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc214)
                  %21 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc215)
                  %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc215)
                  %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc215)
                  cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc216)
                } loc(#loc301)
                cir.yield loc(#loc207)
              } step {
                %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc217)
                %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc218)
                cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc302)
                cir.yield loc(#loc298)
              } loc(#loc298)
            } loc(#loc298)
          } else {
            %15 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc158)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc158)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc219)
          } loc(#loc296)
        } loc(#loc293)
      } loc(#loc290)
    } loc(#loc288)
    cir.return loc(#loc160)
  } loc(#loc280)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":32:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":53:27)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":22:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":57:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":24:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":24:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":25:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":25:22)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":26:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":26:22)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":28:13)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":28:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":28:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":29:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":34:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":30:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":30:21)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":30:20)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":32:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":32:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":33:21)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":33:10)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":33:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":35:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":56:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":36:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":36:21)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":36:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":37:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":55:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":38:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":38:17)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":39:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":39:34)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":42:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":54:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":42:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":42:25)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":43:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":50:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":52:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":44:32)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":44:24)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":44:17)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":46:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":49:17)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":46:25)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":46:21)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":46:28)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":46:32)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":46:30)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":47:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":48:41)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":48:34)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":48:21)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":46:37)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":46:36)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":53:17)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":139:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":143:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":141:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":141:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":142:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":142:13)
#loc73 = loc("/usr/include/stdlib.h":575:1)
#loc74 = loc("/usr/include/stdlib.h":575:41)
#loc75 = loc("/usr/include/time.h":76:1)
#loc76 = loc("/usr/include/time.h":76:38)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":158:15)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":160:15)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":163:15)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":165:15)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":153:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":168:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":154:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":156:27)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":156:22)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":156:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":158:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":159:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":159:63)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":160:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":163:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":164:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":164:62)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":165:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":167:12)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":167:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":64:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":100:1)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":66:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":66:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":67:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":67:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":68:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":68:22)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":70:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":70:12)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":70:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":71:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":77:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":72:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":72:21)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":72:20)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":75:16)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":75:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":76:21)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":76:10)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":76:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":78:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":99:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":79:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":79:21)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":79:20)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":80:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":98:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":81:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":81:17)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":82:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":82:34)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":85:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":97:13)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":85:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":85:25)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":86:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":93:13)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":95:13)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":87:32)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":87:24)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":87:17)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":89:17)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":92:17)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":89:25)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":89:21)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":89:28)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":89:32)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":89:30)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":90:17)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":91:41)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":91:34)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":91:21)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":89:37)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":89:36)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":96:27)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":96:17)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":133:27)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":103:1)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":137:1)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":105:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":105:9)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":106:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":106:22)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":107:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":107:22)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":109:13)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":109:12)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":109:5)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":110:5)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":115:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":111:9)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":111:21)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":111:20)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":113:9)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":113:16)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":113:23)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":114:21)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":114:10)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":114:9)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":116:5)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":136:5)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":117:9)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":117:21)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":117:20)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":118:9)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":135:9)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":119:13)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":119:17)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":120:13)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":120:34)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":122:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":134:13)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":122:17)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":122:25)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":122:27)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":122:30)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":122:38)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":122:40)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":123:13)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":130:13)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":132:13)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":124:32)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":124:24)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":124:17)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":126:17)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":129:17)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":126:25)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":126:21)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":126:28)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":126:32)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":126:30)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":127:17)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":128:41)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":128:34)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":128:21)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":126:37)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":126:36)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c":133:17)
#loc220 = loc(fused[#loc1, #loc2])
#loc221 = loc(fused[#loc3, #loc4])
#loc222 = loc(fused[#loc6, #loc7])
#loc223 = loc(fused[#loc8, #loc9])
#loc224 = loc(fused[#loc11, #loc12])
#loc225 = loc(fused[#loc13, #loc14])
#loc226 = loc(fused[#loc15, #loc16])
#loc227 = loc(fused[#loc17, #loc18])
#loc228 = loc(fused[#loc21, #loc19])
#loc229 = loc(fused[#loc22, #loc23])
#loc230 = loc(fused[#loc24, #loc25])
#loc231 = loc(fused[#loc31, #loc29])
#loc232 = loc(fused[#loc32, #loc33])
#loc233 = loc(fused[#loc34, #loc35])
#loc234 = loc(fused[#loc37, #loc38])
#loc235 = loc(fused[#loc39, #loc40])
#loc236 = loc(fused[#loc41, #loc42])
#loc237 = loc(fused[#loc43, #loc44])
#loc238 = loc(fused[#loc45, #loc46])
#loc239 = loc(fused[#loc47, #loc48, #loc49, #loc44])
#loc240 = loc(fused[#loc52, #loc50])
#loc241 = loc(fused[#loc53, #loc54])
#loc242 = loc(fused[#loc56, #loc55])
#loc243 = loc(fused[#loc57, #loc58])
#loc244 = loc(fused[#loc60, #loc54])
#loc245 = loc(fused[#loc65, #loc64])
#loc246 = loc(fused[#loc67, #loc68])
#loc247 = loc(fused[#loc69, #loc70])
#loc248 = loc(fused[#loc71, #loc72])
#loc249 = loc(fused[#loc73, #loc74])
#loc250 = loc(fused[#loc75, #loc76])
#loc251 = loc(fused[#loc81, #loc82])
#loc254 = loc(fused[#loc92, #loc93])
#loc255 = loc(fused[#loc96, #loc97])
#loc256 = loc(fused[#loc100, #loc99])
#loc257 = loc(fused[#loc101, #loc102])
#loc258 = loc(fused[#loc103, #loc104])
#loc259 = loc(fused[#loc105, #loc106])
#loc260 = loc(fused[#loc107, #loc108])
#loc261 = loc(fused[#loc111, #loc109])
#loc262 = loc(fused[#loc112, #loc113])
#loc263 = loc(fused[#loc114, #loc115])
#loc264 = loc(fused[#loc118, #loc117])
#loc265 = loc(fused[#loc121, #loc119])
#loc266 = loc(fused[#loc122, #loc123])
#loc267 = loc(fused[#loc124, #loc125])
#loc268 = loc(fused[#loc127, #loc128])
#loc269 = loc(fused[#loc129, #loc130])
#loc270 = loc(fused[#loc131, #loc132])
#loc271 = loc(fused[#loc133, #loc134])
#loc272 = loc(fused[#loc135, #loc136])
#loc273 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc274 = loc(fused[#loc142, #loc140])
#loc275 = loc(fused[#loc143, #loc144])
#loc276 = loc(fused[#loc146, #loc145])
#loc277 = loc(fused[#loc147, #loc148])
#loc278 = loc(fused[#loc150, #loc144])
#loc279 = loc(fused[#loc155, #loc154])
#loc280 = loc(fused[#loc159, #loc160])
#loc281 = loc(fused[#loc161, #loc162])
#loc282 = loc(fused[#loc163, #loc164])
#loc283 = loc(fused[#loc165, #loc166])
#loc284 = loc(fused[#loc169, #loc167])
#loc285 = loc(fused[#loc170, #loc171])
#loc286 = loc(fused[#loc172, #loc173])
#loc287 = loc(fused[#loc180, #loc178])
#loc288 = loc(fused[#loc181, #loc182])
#loc289 = loc(fused[#loc183, #loc184])
#loc290 = loc(fused[#loc186, #loc187])
#loc291 = loc(fused[#loc188, #loc189])
#loc292 = loc(fused[#loc190, #loc191])
#loc293 = loc(fused[#loc192, #loc193])
#loc294 = loc(fused[#loc194, #loc195])
#loc295 = loc(fused[#loc197, #loc199])
#loc296 = loc(fused[#loc200, #loc201, #loc202, #loc193])
#loc297 = loc(fused[#loc205, #loc203])
#loc298 = loc(fused[#loc206, #loc207])
#loc299 = loc(fused[#loc209, #loc208])
#loc300 = loc(fused[#loc210, #loc211])
#loc301 = loc(fused[#loc213, #loc207])
#loc302 = loc(fused[#loc218, #loc217])
