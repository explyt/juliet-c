!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":168:10)
#loc72 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":168:14)
#loc73 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":168:20)
#loc74 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":168:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc266 = loc(fused[#loc71, #loc72])
#loc267 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc239)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc240)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc241)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_calloc_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc244)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        %4 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc17)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc18)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc247)
        %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc248)
        cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc249)
        cir.scope {
          %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
          %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc251)
          cir.if %26 {
            %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
            %28 = cir.const #cir.int<1> : !s32i loc(#loc29)
            %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc30)
            cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
          } loc(#loc252)
        } loc(#loc250)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
        %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc253)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc38)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
        %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc254)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
        cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc44)
      } loc(#loc246)
    } loc(#loc245)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc47)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc47)
      cir.if %3 {
      } loc(#loc256)
    } loc(#loc255)
    cir.return loc(#loc8)
  } loc(#loc242)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_calloc_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc258)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc259)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc50)
  } loc(#loc257)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc262)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc263)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc266)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc267)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE401_Memory_Leak__twoIntsStruct_calloc_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call @CWE401_Memory_Leak__twoIntsStruct_calloc_04_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE401_Memory_Leak__twoIntsStruct_calloc_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call @CWE401_Memory_Leak__twoIntsStruct_calloc_04_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    cir.return %17 : !s32i loc(#loc270)
  } loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc89)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc271)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc273)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc274)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc100)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc100)
      cir.if %3 {
        %4 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc102)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc103)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc103)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc277)
        %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc278)
        cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc279)
        cir.scope {
          %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
          %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc281)
          cir.if %26 {
            %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc113)
            %28 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc115)
            cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
          } loc(#loc282)
        } loc(#loc280)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc116)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc118)
        %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
        %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc283)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc120)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc122)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
        %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc284)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc125)
        %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
        cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc127)
      } loc(#loc276)
    } loc(#loc275)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc130)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc130)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc89)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc89)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc134)
      } else {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc135)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc136)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
      } loc(#loc286)
    } loc(#loc285)
    cir.return loc(#loc93)
  } loc(#loc272)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc288)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc289)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc145)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc145)
      cir.if %3 {
        %4 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc147)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc148)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc148)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc292)
        %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc293)
        cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc294)
        cir.scope {
          %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc156)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
          %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc296)
          cir.if %26 {
            %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
            %28 = cir.const #cir.int<1> : !s32i loc(#loc159)
            %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc160)
            cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
          } loc(#loc297)
        } loc(#loc295)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc161)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc163)
        %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
        %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc298)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc165)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc167)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc168)
        %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc299)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc169)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc170)
        %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
        cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc172)
      } loc(#loc291)
    } loc(#loc290)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc175)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc175)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc177)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc178)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc178)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc177)
      } loc(#loc301)
    } loc(#loc300)
    cir.return loc(#loc138)
  } loc(#loc287)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc303)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc183)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc304)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc187)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc187)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc191)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc191)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc192)
      } else {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc193)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc193)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc193)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc193)
        %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc193)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc193)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc193)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc307)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc195)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc197)
        %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc198)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc308)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc199)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc200)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc201)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc202)
        %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc309)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc203)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc204)
        %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc205)
        cir.call @printStructLine(%23) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc206)
      } loc(#loc306)
    } loc(#loc305)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc209)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc209)
      cir.if %3 {
      } loc(#loc311)
    } loc(#loc310)
    cir.return loc(#loc180)
  } loc(#loc302)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc313)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc215)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc314)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc219)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc219)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc221)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc221)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc221)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc221)
        %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc221)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc221)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc221)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc317)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc223)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc224)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc225)
        %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc226)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc318)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc227)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc228)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc229)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc230)
        %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc319)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc231)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc232)
        %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc233)
        cir.call @printStructLine(%23) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc234)
      } loc(#loc316)
    } loc(#loc315)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc237)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc237)
      cir.if %3 {
      } loc(#loc321)
    } loc(#loc320)
    cir.return loc(#loc212)
  } loc(#loc312)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":30:1)
#loc8 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":49:1)
#loc9 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":32:5)
#loc10 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":32:21)
#loc11 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":33:12)
#loc12 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":33:5)
#loc13 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":34:5)
#loc14 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":43:5)
#loc15 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":34:8)
#loc16 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":35:5)
#loc17 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":37:33)
#loc18 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":37:40)
#loc19 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":37:45)
#loc20 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":37:65)
#loc21 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":37:66)
#loc22 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":37:9)
#loc23 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":38:9)
#loc24 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":38:37)
#loc25 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":38:13)
#loc26 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":38:21)
#loc27 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":38:27)
#loc28 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":38:28)
#loc29 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":38:34)
#loc30 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":38:33)
#loc31 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":40:26)
#loc32 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":40:9)
#loc33 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":40:14)
#loc34 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":40:15)
#loc35 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc36 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":41:26)
#loc37 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":41:9)
#loc38 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":41:14)
#loc39 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":41:15)
#loc40 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc41 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":42:26)
#loc42 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":42:31)
#loc43 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":42:32)
#loc44 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":42:9)
#loc45 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":44:5)
#loc46 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":48:5)
#loc47 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":44:8)
#loc48 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":45:5)
#loc49 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":151:1)
#loc50 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":157:1)
#loc51 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":153:5)
#loc52 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":153:14)
#loc53 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":154:5)
#loc54 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":154:14)
#loc55 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":155:5)
#loc56 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":155:14)
#loc57 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":156:5)
#loc58 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":156:14)
#loc59 = loc("/usr/include/stdlib.h":575:1)
#loc60 = loc("/usr/include/stdlib.h":575:41)
#loc61 = loc("/usr/include/time.h":76:1)
#loc62 = loc("/usr/include/time.h":76:38)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc65 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":173:15)
#loc66 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":175:15)
#loc67 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":178:15)
#loc68 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":180:15)
#loc69 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":168:1)
#loc70 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":183:1)
#loc75 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":169:1)
#loc76 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":171:27)
#loc77 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":171:22)
#loc78 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":171:5)
#loc79 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":173:5)
#loc80 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":174:5)
#loc81 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":174:54)
#loc82 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":175:5)
#loc83 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":178:5)
#loc84 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":179:5)
#loc85 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":179:53)
#loc86 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":180:5)
#loc87 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":182:12)
#loc88 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":182:5)
#loc89 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":73:19)
#loc90 = loc("/usr/include/stdlib.h":687:1)
#loc91 = loc("/usr/include/stdlib.h":687:32)
#loc92 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":56:1)
#loc93 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":80:1)
#loc94 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":58:5)
#loc95 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":58:21)
#loc96 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":59:12)
#loc97 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":59:5)
#loc98 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":60:5)
#loc99 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":69:5)
#loc100 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":60:8)
#loc101 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":61:5)
#loc102 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":63:33)
#loc103 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":63:40)
#loc104 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":63:45)
#loc105 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":63:65)
#loc106 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":63:66)
#loc107 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":63:9)
#loc108 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":64:9)
#loc109 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":64:37)
#loc110 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":64:13)
#loc111 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":64:21)
#loc112 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":64:27)
#loc113 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":64:28)
#loc114 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":64:34)
#loc115 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":64:33)
#loc116 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":66:26)
#loc117 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":66:9)
#loc118 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":66:14)
#loc119 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":66:15)
#loc120 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":67:26)
#loc121 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":67:9)
#loc122 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":67:14)
#loc123 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":67:15)
#loc124 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":68:26)
#loc125 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":68:31)
#loc126 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":68:32)
#loc127 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":68:9)
#loc128 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":70:5)
#loc129 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":79:5)
#loc130 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":70:8)
#loc131 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":71:5)
#loc132 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":74:5)
#loc133 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":76:5)
#loc134 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":73:9)
#loc135 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":78:9)
#loc136 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":78:14)
#loc137 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":83:1)
#loc138 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":102:1)
#loc139 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":85:5)
#loc140 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":85:21)
#loc141 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":86:12)
#loc142 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":86:5)
#loc143 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":87:5)
#loc144 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":96:5)
#loc145 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":87:8)
#loc146 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":88:5)
#loc147 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":90:33)
#loc148 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":90:40)
#loc149 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":90:45)
#loc150 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":90:65)
#loc151 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":90:66)
#loc152 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":90:9)
#loc153 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":91:9)
#loc154 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":91:37)
#loc155 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":91:13)
#loc156 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":91:21)
#loc157 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":91:27)
#loc158 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":91:28)
#loc159 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":91:34)
#loc160 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":91:33)
#loc161 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":93:26)
#loc162 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":93:9)
#loc163 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":93:14)
#loc164 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":93:15)
#loc165 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":94:26)
#loc166 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":94:9)
#loc167 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":94:14)
#loc168 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":94:15)
#loc169 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":95:26)
#loc170 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":95:31)
#loc171 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":95:32)
#loc172 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":95:9)
#loc173 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":97:5)
#loc174 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":101:5)
#loc175 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":97:8)
#loc176 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":98:5)
#loc177 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":100:9)
#loc178 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":100:14)
#loc179 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":105:1)
#loc180 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":128:1)
#loc181 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":107:5)
#loc182 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":107:21)
#loc183 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":108:12)
#loc184 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":108:5)
#loc185 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":109:5)
#loc186 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":122:5)
#loc187 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":109:8)
#loc188 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":110:5)
#loc189 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":113:5)
#loc190 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":115:5)
#loc191 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":112:19)
#loc192 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":112:9)
#loc193 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":117:33)
#loc194 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":117:9)
#loc195 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":119:26)
#loc196 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":119:9)
#loc197 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":119:14)
#loc198 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":119:15)
#loc199 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":120:26)
#loc200 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":120:9)
#loc201 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":120:14)
#loc202 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":120:15)
#loc203 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":121:26)
#loc204 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":121:31)
#loc205 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":121:32)
#loc206 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":121:9)
#loc207 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":123:5)
#loc208 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":127:5)
#loc209 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":123:8)
#loc210 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":124:5)
#loc211 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":131:1)
#loc212 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":149:1)
#loc213 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":133:5)
#loc214 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":133:21)
#loc215 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":134:12)
#loc216 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":134:5)
#loc217 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":135:5)
#loc218 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":143:5)
#loc219 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":135:8)
#loc220 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":136:5)
#loc221 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":138:33)
#loc222 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":138:9)
#loc223 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":140:26)
#loc224 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":140:9)
#loc225 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":140:14)
#loc226 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":140:15)
#loc227 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":141:26)
#loc228 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":141:9)
#loc229 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":141:14)
#loc230 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":141:15)
#loc231 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":142:26)
#loc232 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":142:31)
#loc233 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":142:32)
#loc234 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":142:9)
#loc235 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":144:5)
#loc236 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":148:5)
#loc237 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":144:8)
#loc238 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_04.c":145:5)
#loc239 = loc(fused[#loc1, #loc2])
#loc240 = loc(fused[#loc3, #loc4])
#loc241 = loc(fused[#loc5, #loc6])
#loc242 = loc(fused[#loc7, #loc8])
#loc243 = loc(fused[#loc9, #loc10])
#loc244 = loc(fused[#loc12, #loc11])
#loc245 = loc(fused[#loc13, #loc14])
#loc246 = loc(fused[#loc16, #loc14])
#loc247 = loc(fused[#loc19, #loc20])
#loc248 = loc(fused[#loc17, #loc21])
#loc249 = loc(fused[#loc22, #loc21])
#loc250 = loc(fused[#loc23, #loc24])
#loc251 = loc(fused[#loc25, #loc26])
#loc252 = loc(fused[#loc27, #loc24])
#loc253 = loc(fused[#loc32, #loc31])
#loc254 = loc(fused[#loc37, #loc36])
#loc255 = loc(fused[#loc45, #loc46])
#loc256 = loc(fused[#loc48, #loc46])
#loc257 = loc(fused[#loc49, #loc50])
#loc258 = loc(fused[#loc51, #loc52])
#loc259 = loc(fused[#loc53, #loc54])
#loc260 = loc(fused[#loc55, #loc56])
#loc261 = loc(fused[#loc57, #loc58])
#loc262 = loc(fused[#loc59, #loc60])
#loc263 = loc(fused[#loc61, #loc62])
#loc264 = loc(fused[#loc63, #loc64])
#loc265 = loc(fused[#loc69, #loc70])
#loc268 = loc(fused[#loc80, #loc81])
#loc269 = loc(fused[#loc84, #loc85])
#loc270 = loc(fused[#loc88, #loc87])
#loc271 = loc(fused[#loc90, #loc91])
#loc272 = loc(fused[#loc92, #loc93])
#loc273 = loc(fused[#loc94, #loc95])
#loc274 = loc(fused[#loc97, #loc96])
#loc275 = loc(fused[#loc98, #loc99])
#loc276 = loc(fused[#loc101, #loc99])
#loc277 = loc(fused[#loc104, #loc105])
#loc278 = loc(fused[#loc102, #loc106])
#loc279 = loc(fused[#loc107, #loc106])
#loc280 = loc(fused[#loc108, #loc109])
#loc281 = loc(fused[#loc110, #loc111])
#loc282 = loc(fused[#loc112, #loc109])
#loc283 = loc(fused[#loc117, #loc116])
#loc284 = loc(fused[#loc121, #loc120])
#loc285 = loc(fused[#loc128, #loc129])
#loc286 = loc(fused[#loc131, #loc132, #loc133, #loc129])
#loc287 = loc(fused[#loc137, #loc138])
#loc288 = loc(fused[#loc139, #loc140])
#loc289 = loc(fused[#loc142, #loc141])
#loc290 = loc(fused[#loc143, #loc144])
#loc291 = loc(fused[#loc146, #loc144])
#loc292 = loc(fused[#loc149, #loc150])
#loc293 = loc(fused[#loc147, #loc151])
#loc294 = loc(fused[#loc152, #loc151])
#loc295 = loc(fused[#loc153, #loc154])
#loc296 = loc(fused[#loc155, #loc156])
#loc297 = loc(fused[#loc157, #loc154])
#loc298 = loc(fused[#loc162, #loc161])
#loc299 = loc(fused[#loc166, #loc165])
#loc300 = loc(fused[#loc173, #loc174])
#loc301 = loc(fused[#loc176, #loc174])
#loc302 = loc(fused[#loc179, #loc180])
#loc303 = loc(fused[#loc181, #loc182])
#loc304 = loc(fused[#loc184, #loc183])
#loc305 = loc(fused[#loc185, #loc186])
#loc306 = loc(fused[#loc188, #loc189, #loc190, #loc186])
#loc307 = loc(fused[#loc194, #loc193])
#loc308 = loc(fused[#loc196, #loc195])
#loc309 = loc(fused[#loc200, #loc199])
#loc310 = loc(fused[#loc207, #loc208])
#loc311 = loc(fused[#loc210, #loc208])
#loc312 = loc(fused[#loc211, #loc212])
#loc313 = loc(fused[#loc213, #loc214])
#loc314 = loc(fused[#loc216, #loc215])
#loc315 = loc(fused[#loc217, #loc218])
#loc316 = loc(fused[#loc220, #loc218])
#loc317 = loc(fused[#loc222, #loc221])
#loc318 = loc(fused[#loc224, #loc223])
#loc319 = loc(fused[#loc228, #loc227])
#loc320 = loc(fused[#loc235, #loc236])
#loc321 = loc(fused[#loc238, #loc236])
