!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc183 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":289:10)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":289:14)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":289:20)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":289:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc449 = loc(fused[#loc183, #loc184])
#loc450 = loc(fused[#loc185, #loc186])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_listen_socket_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc380)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc381)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc382)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc383)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc384)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc385)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc386)
  cir.func private @close(!s32i) -> !s32i loc(#loc387)
  cir.func private @printIntLine(!s32i) loc(#loc388)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc389)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_listen_socket_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc391)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc31)
        cir.condition(%4) loc(#loc31)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc395)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc396)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc397)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc398)
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc399)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc39)
          cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc397)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc41)
          cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc398)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc46)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc47)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc48)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
              cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc401)
              cir.scope {
                %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc55)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc55)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc403)
                cir.if %60 {
                  cir.break loc(#loc57)
                } loc(#loc404)
              } loc(#loc402)
              %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc405)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc60)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc406)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc407)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc65)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc65)
              %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc408)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc68)
              %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc68)
              %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc409)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc72)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc72)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
              %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc410)
              cir.scope {
                %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                %58 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc412)
                %59 = cir.const #cir.int<16> : !u64i loc(#loc413)
                %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc413)
                %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc84)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc85)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc85)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc414)
                cir.if %64 {
                  cir.break loc(#loc87)
                } loc(#loc415)
              } loc(#loc411)
              cir.scope {
                %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                %58 = cir.const #cir.int<5> : !s32i loc(#loc91)
                %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc92)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc93)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc93)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc417)
                cir.if %62 {
                  cir.break loc(#loc95)
                } loc(#loc418)
              } loc(#loc416)
              %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc97)
              %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc98)
              %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc99)
              cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc419)
              cir.scope {
                %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc105)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc105)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc421)
                cir.if %60 {
                  cir.break loc(#loc107)
                } loc(#loc422)
              } loc(#loc420)
              %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc108)
              %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
              %37 = cir.const #cir.int<3> : !s32i loc(#loc110)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc110)
              %39 = cir.const #cir.int<4> : !u64i loc(#loc110)
              %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc110)
              %41 = cir.const #cir.int<2> : !s32i loc(#loc110)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc110)
              %43 = cir.binop(add, %40, %42) : !u64i loc(#loc110)
              %44 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc111)
              %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc423)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc113)
              %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc113)
              cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc424)
              cir.scope {
                %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc119)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc119)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc426)
                %61 = cir.ternary(%60, true {
                  %62 = cir.const #true loc(#loc120)
                  cir.yield %62 : !cir.bool loc(#loc120)
                }, false {
                  %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                  %63 = cir.const #cir.int<0> : !s32i loc(#loc122)
                  %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc427)
                  %65 = cir.ternary(%64, true {
                    %66 = cir.const #true loc(#loc120)
                    cir.yield %66 : !cir.bool loc(#loc120)
                  }, false {
                    %66 = cir.const #false loc(#loc120)
                    cir.yield %66 : !cir.bool loc(#loc120)
                  }) : (!cir.bool) -> !cir.bool loc(#loc120)
                  cir.yield %65 : !cir.bool loc(#loc120)
                }) : (!cir.bool) -> !cir.bool loc(#loc120)
                cir.if %61 {
                  cir.break loc(#loc124)
                } loc(#loc428)
              } loc(#loc425)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc125)
              %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc125)
              %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc126)
              %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
              %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc127)
              cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc429)
              %55 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
              %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc129)
              cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc430)
              cir.yield loc(#loc45)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc132)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc132)
              cir.condition(%13) loc(#loc132)
            } loc(#loc400)
          } loc(#loc400)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc136)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc136)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc432)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc138)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc139)
            } loc(#loc433)
          } loc(#loc431)
          cir.scope {
            %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc143)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc143)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc435)
            cir.if %15 {
              %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc146)
            } loc(#loc436)
          } loc(#loc434)
        } loc(#loc394)
        cir.break loc(#loc147)
      } loc(#loc393)
    } loc(#loc393)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc150)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc150)
        cir.condition(%4) loc(#loc150)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc439)
          %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc439)
          cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc439)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
            %6 = cir.const #cir.int<10> : !s32i loc(#loc158)
            %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc441)
            cir.if %7 {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc163)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc163)
              %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc163)
              cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc164)
            } else {
              %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc21)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc21)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc165)
            } loc(#loc442)
          } loc(#loc440)
        } loc(#loc438)
        cir.break loc(#loc166)
      } loc(#loc437)
    } loc(#loc437)
    cir.return loc(#loc23)
  } loc(#loc390)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_listen_socket_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc444)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc169)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc445)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc171)
    cir.return loc(#loc168)
  } loc(#loc443)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc446)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc447)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc180)
  cir.func @main(%arg0: !s32i loc(fused[#loc183, #loc184]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc185, #loc186])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc449)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc450)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc182)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc187)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc188)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc189)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc189)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc190)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc177)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %8 = cir.get_global @CWE127_Buffer_Underread__CWE839_listen_socket_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc451)
    cir.call @CWE127_Buffer_Underread__CWE839_listen_socket_16_good() : () -> () loc(#loc192)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc178)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc179)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc195)
    %13 = cir.get_global @CWE127_Buffer_Underread__CWE839_listen_socket_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc452)
    cir.call @CWE127_Buffer_Underread__CWE839_listen_socket_16_bad() : () -> () loc(#loc196)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc180)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc198)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc199)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc453)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc453)
    cir.return %17 : !s32i loc(#loc453)
  } loc(#loc448)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc201)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc455)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc207)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc456)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc211)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc211)
        cir.condition(%4) loc(#loc211)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc459)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc460)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc461)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc462)
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc463)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc219)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc219)
          cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc461)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc221)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc221)
          cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc462)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc226)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc227)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc228)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc229)
              cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc465)
              cir.scope {
                %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc234)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc235)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc235)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc467)
                cir.if %60 {
                  cir.break loc(#loc237)
                } loc(#loc468)
              } loc(#loc466)
              %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc469)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc240)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc470)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc471)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc245)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc245)
              %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc472)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc247)
              %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc247)
              %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc473)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc249)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc249)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc250)
              %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc474)
              cir.scope {
                %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc255)
                %58 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc476)
                %59 = cir.const #cir.int<16> : !u64i loc(#loc477)
                %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc477)
                %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc260)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc261)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc261)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc478)
                cir.if %64 {
                  cir.break loc(#loc263)
                } loc(#loc479)
              } loc(#loc475)
              cir.scope {
                %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                %58 = cir.const #cir.int<5> : !s32i loc(#loc267)
                %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc268)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc269)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc269)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc481)
                cir.if %62 {
                  cir.break loc(#loc271)
                } loc(#loc482)
              } loc(#loc480)
              %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc272)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc273)
              %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc274)
              %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc275)
              cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc483)
              cir.scope {
                %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc280)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc281)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc281)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc485)
                cir.if %60 {
                  cir.break loc(#loc283)
                } loc(#loc486)
              } loc(#loc484)
              %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc284)
              %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc285)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc285)
              %37 = cir.const #cir.int<3> : !s32i loc(#loc286)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc286)
              %39 = cir.const #cir.int<4> : !u64i loc(#loc286)
              %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc286)
              %41 = cir.const #cir.int<2> : !s32i loc(#loc286)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc286)
              %43 = cir.binop(add, %40, %42) : !u64i loc(#loc286)
              %44 = cir.const #cir.int<1> : !s32i loc(#loc287)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc287)
              %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc487)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc288)
              %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc289)
              %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc289)
              cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc488)
              cir.scope {
                %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc294)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc295)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc295)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc490)
                %61 = cir.ternary(%60, true {
                  %62 = cir.const #true loc(#loc296)
                  cir.yield %62 : !cir.bool loc(#loc296)
                }, false {
                  %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                  %63 = cir.const #cir.int<0> : !s32i loc(#loc298)
                  %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc491)
                  %65 = cir.ternary(%64, true {
                    %66 = cir.const #true loc(#loc296)
                    cir.yield %66 : !cir.bool loc(#loc296)
                  }, false {
                    %66 = cir.const #false loc(#loc296)
                    cir.yield %66 : !cir.bool loc(#loc296)
                  }) : (!cir.bool) -> !cir.bool loc(#loc296)
                  cir.yield %65 : !cir.bool loc(#loc296)
                }) : (!cir.bool) -> !cir.bool loc(#loc296)
                cir.if %61 {
                  cir.break loc(#loc300)
                } loc(#loc492)
              } loc(#loc489)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc301)
              %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc301)
              %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc302)
              %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc303)
              %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc303)
              cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc493)
              %55 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc304)
              %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc305)
              cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc494)
              cir.yield loc(#loc225)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc308)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc308)
              cir.condition(%13) loc(#loc308)
            } loc(#loc464)
          } loc(#loc464)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc311)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc312)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc312)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc496)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc314)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc315)
            } loc(#loc497)
          } loc(#loc495)
          cir.scope {
            %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc318)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc319)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc319)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc499)
            cir.if %15 {
              %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc321)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc322)
            } loc(#loc500)
          } loc(#loc498)
        } loc(#loc458)
        cir.break loc(#loc323)
      } loc(#loc457)
    } loc(#loc457)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc326)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc326)
        cir.condition(%4) loc(#loc326)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc503)
          %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc503)
          cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc503)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc333)
            %6 = cir.const #cir.int<0> : !s32i loc(#loc334)
            %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc505)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc336)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc337)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc506)
              %12 = cir.ternary(%11, true {
                %13 = cir.const #true loc(#loc335)
                cir.yield %13 : !cir.bool loc(#loc335)
              }, false {
                %13 = cir.const #false loc(#loc335)
                cir.yield %13 : !cir.bool loc(#loc335)
              }) : (!cir.bool) -> !cir.bool loc(#loc335)
              cir.yield %12 : !cir.bool loc(#loc335)
            }, false {
              %9 = cir.const #false loc(#loc335)
              cir.yield %9 : !cir.bool loc(#loc335)
            }) : (!cir.bool) -> !cir.bool loc(#loc335)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc342)
              %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc343)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc343)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc343)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc344)
            } else {
              %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc201)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc201)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc345)
            } loc(#loc507)
          } loc(#loc504)
        } loc(#loc502)
        cir.break loc(#loc346)
      } loc(#loc501)
    } loc(#loc501)
    cir.return loc(#loc203)
  } loc(#loc454)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc509)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc351)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc352)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc510)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc356)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc356)
        cir.condition(%4) loc(#loc356)
      } do {
        %3 = cir.const #cir.int<7> : !s32i loc(#loc357)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc512)
        cir.break loc(#loc359)
      } loc(#loc511)
    } loc(#loc511)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc362)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc362)
        cir.condition(%4) loc(#loc362)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc515)
          %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc515)
          cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc515)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc369)
            %6 = cir.const #cir.int<10> : !s32i loc(#loc370)
            %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc517)
            cir.if %7 {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc374)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc375)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc375)
              %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc375)
              cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc376)
            } else {
              %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc377)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc377)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc378)
            } loc(#loc518)
          } loc(#loc516)
        } loc(#loc514)
        cir.break loc(#loc379)
      } loc(#loc513)
    } loc(#loc513)
    cir.return loc(#loc348)
  } loc(#loc508)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_listen_socket_16.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":134:27)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":44:1)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":139:1)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":46:5)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":46:9)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":48:13)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":48:12)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":48:5)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":49:5)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":121:5)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":49:11)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":51:9)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":119:9)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":56:13)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":56:17)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":57:13)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":57:32)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":58:13)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":58:35)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":59:13)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":59:35)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":60:13)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":60:45)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":61:13)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":104:21)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":71:39)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":71:48)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":71:61)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":71:32)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":71:17)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":71:72)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":72:17)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":75:17)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":72:21)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":72:37)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":73:17)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":74:21)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":76:24)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":76:25)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":76:34)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":76:37)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":76:51)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":76:17)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":76:52)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":77:38)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":77:17)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":78:43)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":78:17)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":79:42)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":79:36)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":79:17)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":79:50)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":80:17)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":83:17)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":80:26)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":80:58)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":80:59)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":80:68)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":80:82)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":80:21)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":80:88)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":81:17)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":82:21)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":84:17)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":87:17)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":84:28)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":84:42)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":84:21)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":84:61)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":85:17)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":86:21)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":88:39)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":88:53)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":88:59)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":88:32)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":88:17)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":88:63)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":89:17)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":92:17)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":89:21)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":89:37)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":90:17)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":91:21)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":94:35)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":94:49)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":94:62)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":94:80)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":94:83)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":94:30)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":94:17)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":94:84)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":95:17)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":98:17)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":95:21)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":95:35)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":95:48)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":95:51)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":95:65)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":96:17)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":97:21)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":100:43)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":100:29)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":100:17)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":102:29)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":102:24)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":102:17)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":102:40)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":104:20)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":105:13)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":108:13)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":105:17)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":105:33)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":106:13)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":107:30)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":107:17)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":109:13)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":112:13)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":109:17)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":109:33)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":110:13)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":111:30)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":111:17)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":120:9)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":122:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":138:5)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":122:11)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":124:9)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":136:9)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":125:13)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":125:34)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":128:13)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":135:13)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":128:17)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":128:24)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":129:13)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":131:13)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":133:13)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":130:37)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":130:30)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":130:17)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":134:17)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":137:9)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":274:1)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":278:1)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":276:5)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":276:13)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":277:5)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":277:13)
#loc173 = loc("/usr/include/stdlib.h":575:1)
#loc174 = loc("/usr/include/stdlib.h":575:41)
#loc175 = loc("/usr/include/time.h":76:1)
#loc176 = loc("/usr/include/time.h":76:38)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":294:15)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":296:15)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":299:15)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":301:15)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":289:1)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":304:1)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":290:1)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":292:27)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":292:22)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":292:5)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":294:5)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":295:5)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":295:59)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":296:5)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":299:5)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":300:5)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":300:58)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":301:5)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":303:12)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":303:5)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":235:27)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":146:1)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":240:1)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":148:5)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":148:9)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":150:13)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":150:12)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":150:5)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":151:5)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":223:5)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":151:11)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":153:9)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":221:9)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":158:13)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":158:17)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":159:13)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":159:32)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":160:13)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":160:35)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":161:13)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":161:35)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":162:13)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":162:45)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":163:13)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":206:21)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":173:39)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":173:48)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":173:61)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":173:32)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":173:17)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":173:72)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":174:17)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":177:17)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":174:21)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":174:37)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":175:17)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":176:21)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":178:24)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":178:25)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":178:34)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":178:37)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":178:51)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":178:17)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":178:52)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":179:38)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":179:17)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":180:43)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":180:17)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":181:42)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":181:36)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":181:17)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":181:50)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":182:17)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":185:17)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":182:26)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":182:58)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":182:59)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":182:68)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":182:82)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":182:21)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":182:88)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":183:17)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":184:21)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":186:17)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":189:17)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":186:28)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":186:42)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":186:21)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":186:61)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":187:17)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":188:21)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":190:39)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":190:53)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":190:59)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":190:32)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":190:17)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":190:63)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":191:17)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":194:17)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":191:21)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":191:37)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":192:17)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":193:21)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":196:35)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":196:49)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":196:62)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":196:80)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":196:83)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":196:30)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":196:17)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":196:84)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":197:17)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":200:17)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":197:21)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":197:35)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":197:48)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":197:51)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":197:65)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":198:17)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":199:21)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":202:43)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":202:29)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":202:17)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":204:29)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":204:24)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":204:17)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":204:40)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":206:20)
#loc309 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":207:13)
#loc310 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":210:13)
#loc311 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":207:17)
#loc312 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":207:33)
#loc313 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":208:13)
#loc314 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":209:30)
#loc315 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":209:17)
#loc316 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":211:13)
#loc317 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":214:13)
#loc318 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":211:17)
#loc319 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":211:33)
#loc320 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":212:13)
#loc321 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":213:30)
#loc322 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":213:17)
#loc323 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":222:9)
#loc324 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":224:5)
#loc325 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":239:5)
#loc326 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":224:11)
#loc327 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":226:9)
#loc328 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":237:9)
#loc329 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":227:13)
#loc330 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":227:34)
#loc331 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":229:13)
#loc332 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":236:13)
#loc333 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":229:17)
#loc334 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":229:25)
#loc335 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":229:27)
#loc336 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":229:30)
#loc337 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":229:38)
#loc338 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":229:40)
#loc339 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":230:13)
#loc340 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":232:13)
#loc341 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":234:13)
#loc342 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":231:37)
#loc343 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":231:30)
#loc344 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":231:17)
#loc345 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":235:17)
#loc346 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":238:9)
#loc347 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":243:1)
#loc348 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":272:1)
#loc349 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":245:5)
#loc350 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":245:9)
#loc351 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":247:13)
#loc352 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":247:12)
#loc353 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":247:5)
#loc354 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":248:5)
#loc355 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":254:5)
#loc356 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":248:11)
#loc357 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":252:16)
#loc358 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":252:9)
#loc359 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":253:9)
#loc360 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":255:5)
#loc361 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":271:5)
#loc362 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":255:11)
#loc363 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":257:9)
#loc364 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":269:9)
#loc365 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":258:13)
#loc366 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":258:34)
#loc367 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":261:13)
#loc368 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":268:13)
#loc369 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":261:17)
#loc370 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":261:24)
#loc371 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":262:13)
#loc372 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":264:13)
#loc373 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":266:13)
#loc374 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":263:37)
#loc375 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":263:30)
#loc376 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":263:17)
#loc377 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":267:27)
#loc378 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":267:17)
#loc379 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_16.c":270:9)
#loc380 = loc(fused[#loc1, #loc2])
#loc381 = loc(fused[#loc3, #loc4])
#loc382 = loc(fused[#loc5, #loc6])
#loc383 = loc(fused[#loc7, #loc8])
#loc384 = loc(fused[#loc9, #loc10])
#loc385 = loc(fused[#loc11, #loc12])
#loc386 = loc(fused[#loc13, #loc14])
#loc387 = loc(fused[#loc15, #loc16])
#loc388 = loc(fused[#loc17, #loc18])
#loc389 = loc(fused[#loc19, #loc20])
#loc390 = loc(fused[#loc22, #loc23])
#loc391 = loc(fused[#loc24, #loc25])
#loc392 = loc(fused[#loc28, #loc26])
#loc393 = loc(fused[#loc29, #loc30])
#loc394 = loc(fused[#loc32, #loc33])
#loc395 = loc(fused[#loc34, #loc35])
#loc396 = loc(fused[#loc36, #loc37])
#loc397 = loc(fused[#loc38, #loc39])
#loc398 = loc(fused[#loc40, #loc41])
#loc399 = loc(fused[#loc42, #loc43])
#loc400 = loc(fused[#loc44, #loc45])
#loc401 = loc(fused[#loc50, #loc51])
#loc402 = loc(fused[#loc52, #loc53])
#loc403 = loc(fused[#loc54, #loc55])
#loc404 = loc(fused[#loc56, #loc53])
#loc405 = loc(fused[#loc58, #loc59])
#loc406 = loc(fused[#loc61, #loc62])
#loc407 = loc(fused[#loc63, #loc64])
#loc408 = loc(fused[#loc67, #loc65])
#loc409 = loc(fused[#loc71, #loc68])
#loc410 = loc(fused[#loc75, #loc76])
#loc411 = loc(fused[#loc77, #loc78])
#loc412 = loc(fused[#loc80, #loc81])
#loc413 = loc(fused[#loc82, #loc83])
#loc414 = loc(fused[#loc84, #loc85])
#loc415 = loc(fused[#loc86, #loc78])
#loc416 = loc(fused[#loc88, #loc89])
#loc417 = loc(fused[#loc92, #loc93])
#loc418 = loc(fused[#loc94, #loc89])
#loc419 = loc(fused[#loc100, #loc101])
#loc420 = loc(fused[#loc102, #loc103])
#loc421 = loc(fused[#loc104, #loc105])
#loc422 = loc(fused[#loc106, #loc103])
#loc423 = loc(fused[#loc110, #loc111])
#loc424 = loc(fused[#loc114, #loc115])
#loc425 = loc(fused[#loc116, #loc117])
#loc426 = loc(fused[#loc118, #loc119])
#loc427 = loc(fused[#loc121, #loc122])
#loc428 = loc(fused[#loc123, #loc117])
#loc429 = loc(fused[#loc127, #loc125])
#loc430 = loc(fused[#loc130, #loc131])
#loc431 = loc(fused[#loc133, #loc134])
#loc432 = loc(fused[#loc135, #loc136])
#loc433 = loc(fused[#loc137, #loc134])
#loc434 = loc(fused[#loc140, #loc141])
#loc435 = loc(fused[#loc142, #loc143])
#loc436 = loc(fused[#loc144, #loc141])
#loc437 = loc(fused[#loc148, #loc149])
#loc438 = loc(fused[#loc151, #loc152])
#loc439 = loc(fused[#loc153, #loc154])
#loc440 = loc(fused[#loc155, #loc156])
#loc441 = loc(fused[#loc157, #loc158])
#loc442 = loc(fused[#loc159, #loc160, #loc161, #loc156])
#loc443 = loc(fused[#loc167, #loc168])
#loc444 = loc(fused[#loc169, #loc170])
#loc445 = loc(fused[#loc171, #loc172])
#loc446 = loc(fused[#loc173, #loc174])
#loc447 = loc(fused[#loc175, #loc176])
#loc448 = loc(fused[#loc181, #loc182])
#loc451 = loc(fused[#loc192, #loc193])
#loc452 = loc(fused[#loc196, #loc197])
#loc453 = loc(fused[#loc200, #loc199])
#loc454 = loc(fused[#loc202, #loc203])
#loc455 = loc(fused[#loc204, #loc205])
#loc456 = loc(fused[#loc208, #loc206])
#loc457 = loc(fused[#loc209, #loc210])
#loc458 = loc(fused[#loc212, #loc213])
#loc459 = loc(fused[#loc214, #loc215])
#loc460 = loc(fused[#loc216, #loc217])
#loc461 = loc(fused[#loc218, #loc219])
#loc462 = loc(fused[#loc220, #loc221])
#loc463 = loc(fused[#loc222, #loc223])
#loc464 = loc(fused[#loc224, #loc225])
#loc465 = loc(fused[#loc230, #loc231])
#loc466 = loc(fused[#loc232, #loc233])
#loc467 = loc(fused[#loc234, #loc235])
#loc468 = loc(fused[#loc236, #loc233])
#loc469 = loc(fused[#loc238, #loc239])
#loc470 = loc(fused[#loc241, #loc242])
#loc471 = loc(fused[#loc243, #loc244])
#loc472 = loc(fused[#loc246, #loc245])
#loc473 = loc(fused[#loc248, #loc247])
#loc474 = loc(fused[#loc251, #loc252])
#loc475 = loc(fused[#loc253, #loc254])
#loc476 = loc(fused[#loc256, #loc257])
#loc477 = loc(fused[#loc258, #loc259])
#loc478 = loc(fused[#loc260, #loc261])
#loc479 = loc(fused[#loc262, #loc254])
#loc480 = loc(fused[#loc264, #loc265])
#loc481 = loc(fused[#loc268, #loc269])
#loc482 = loc(fused[#loc270, #loc265])
#loc483 = loc(fused[#loc276, #loc277])
#loc484 = loc(fused[#loc278, #loc279])
#loc485 = loc(fused[#loc280, #loc281])
#loc486 = loc(fused[#loc282, #loc279])
#loc487 = loc(fused[#loc286, #loc287])
#loc488 = loc(fused[#loc290, #loc291])
#loc489 = loc(fused[#loc292, #loc293])
#loc490 = loc(fused[#loc294, #loc295])
#loc491 = loc(fused[#loc297, #loc298])
#loc492 = loc(fused[#loc299, #loc293])
#loc493 = loc(fused[#loc303, #loc301])
#loc494 = loc(fused[#loc306, #loc307])
#loc495 = loc(fused[#loc309, #loc310])
#loc496 = loc(fused[#loc311, #loc312])
#loc497 = loc(fused[#loc313, #loc310])
#loc498 = loc(fused[#loc316, #loc317])
#loc499 = loc(fused[#loc318, #loc319])
#loc500 = loc(fused[#loc320, #loc317])
#loc501 = loc(fused[#loc324, #loc325])
#loc502 = loc(fused[#loc327, #loc328])
#loc503 = loc(fused[#loc329, #loc330])
#loc504 = loc(fused[#loc331, #loc332])
#loc505 = loc(fused[#loc333, #loc334])
#loc506 = loc(fused[#loc336, #loc338])
#loc507 = loc(fused[#loc339, #loc340, #loc341, #loc332])
#loc508 = loc(fused[#loc347, #loc348])
#loc509 = loc(fused[#loc349, #loc350])
#loc510 = loc(fused[#loc353, #loc351])
#loc511 = loc(fused[#loc354, #loc355])
#loc512 = loc(fused[#loc358, #loc357])
#loc513 = loc(fused[#loc360, #loc361])
#loc514 = loc(fused[#loc363, #loc364])
#loc515 = loc(fused[#loc365, #loc366])
#loc516 = loc(fused[#loc367, #loc368])
#loc517 = loc(fused[#loc369, #loc370])
#loc518 = loc(fused[#loc371, #loc372, #loc373, #loc368])
