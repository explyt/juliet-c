!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fputs_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fputs(!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc69)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc70)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fputs_08_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc73)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc10)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc10)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
        %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc70)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc13)
        %7 = cir.call @fputs(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc14)
      } loc(#loc74)
    } loc(#loc72)
    cir.return loc(#loc7)
  } loc(#loc71)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fputs_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc76)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc17)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc77)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc16)
  } loc(#loc75)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc22)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc23)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.return %2 : !s32i loc(#loc79)
  } loc(#loc78)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc80)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc27)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fputs failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc83)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc33)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc33)
      cir.if %2 {
        %3 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc38)
      } else {
        cir.scope {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc41)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc41)
          %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc70)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
          %7 = cir.call @fputs(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc43)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc44)
          %10 = cir.cmp(eq, %7, %9) : !s32i, !s32i loc(#loc86)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc45)
          cir.if %11 {
            %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc28)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc47)
          } loc(#loc87)
        } loc(#loc85)
      } loc(#loc84)
    } loc(#loc82)
    cir.return loc(#loc30)
  } loc(#loc81)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc50)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.return %2 : !s32i loc(#loc89)
  } loc(#loc88)
  cir.func no_proto internal private  @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc92)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc56)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc56)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc61)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc61)
          %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc70)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc62)
          %7 = cir.call @fputs(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc63)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc64)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc64)
          %10 = cir.cmp(eq, %7, %9) : !s32i, !s32i loc(#loc95)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc65)
          cir.if %11 {
            %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc67)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc67)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc68)
          } loc(#loc96)
        } loc(#loc94)
      } loc(#loc93)
    } loc(#loc91)
    cir.return loc(#loc53)
  } loc(#loc90)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fputs_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":717:1)
#loc2 = loc("/usr/include/stdio.h":718:3)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":42:15)
#loc4 = loc("/usr/include/stdio.h":150:1)
#loc5 = loc("/usr/include/stdio.h":150:14)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":37:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":44:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":39:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":43:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":39:8)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":39:26)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":40:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":42:25)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":42:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":81:1)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":85:1)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":83:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":83:11)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":84:5)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":84:11)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":25:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":28:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":27:12)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":27:5)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":56:19)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":63:23)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":51:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":66:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":53:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":65:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":53:8)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":53:27)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":54:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":57:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":59:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":56:9)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":64:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:19)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:29)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:13)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:40)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:37)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":62:9)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":63:13)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":30:1)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":33:1)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":32:12)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":32:5)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":69:1)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":79:1)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":71:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":78:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":71:8)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":71:26)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":72:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:9)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":77:9)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:19)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:29)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:13)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:40)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:37)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":75:9)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":76:23)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":76:13)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc4, #loc5])
#loc71 = loc(fused[#loc6, #loc7])
#loc72 = loc(fused[#loc8, #loc9])
#loc73 = loc(fused[#loc10, #loc11])
#loc74 = loc(fused[#loc12, #loc9])
#loc75 = loc(fused[#loc15, #loc16])
#loc76 = loc(fused[#loc17, #loc18])
#loc77 = loc(fused[#loc19, #loc20])
#loc78 = loc(fused[#loc21, #loc22])
#loc79 = loc(fused[#loc24, #loc23])
#loc80 = loc(fused[#loc25, #loc26])
#loc81 = loc(fused[#loc29, #loc30])
#loc82 = loc(fused[#loc31, #loc32])
#loc83 = loc(fused[#loc33, #loc34])
#loc84 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc85 = loc(fused[#loc39, #loc40])
#loc86 = loc(fused[#loc43, #loc44])
#loc87 = loc(fused[#loc46, #loc40])
#loc88 = loc(fused[#loc48, #loc49])
#loc89 = loc(fused[#loc51, #loc50])
#loc90 = loc(fused[#loc52, #loc53])
#loc91 = loc(fused[#loc54, #loc55])
#loc92 = loc(fused[#loc56, #loc57])
#loc93 = loc(fused[#loc58, #loc55])
#loc94 = loc(fused[#loc59, #loc60])
#loc95 = loc(fused[#loc63, #loc64])
#loc96 = loc(fused[#loc66, #loc60])
