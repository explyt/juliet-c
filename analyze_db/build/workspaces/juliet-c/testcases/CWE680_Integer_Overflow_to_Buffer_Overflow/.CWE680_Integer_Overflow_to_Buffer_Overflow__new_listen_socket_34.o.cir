!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_343A3AunionType = !cir.record<union "CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34::unionType" {!s32i, !s32i}>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc243)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc244)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc245)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc246)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc247)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc248)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc249)
  cir.func private @close(!s32i) -> !s32i loc(#loc250)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc251)
  cir.func private @printIntLine(!s32i) loc(#loc252)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_343badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc254)
    %1 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_343A3AunionType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_343A3AunionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc255)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc28)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc258)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc259)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc260)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc261)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc262)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc37)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc260)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc39)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc261)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc46)
            %16 = cir.const #cir.int<1> : !u32i loc(#loc47)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc47)
            %18 = cir.const #cir.int<6> : !u32i loc(#loc48)
            %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc48)
            %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
            cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc265)
            cir.scope {
              %61 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc54)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc55)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc55)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc267)
              cir.if %64 {
                cir.break loc(#loc57)
              } loc(#loc268)
            } loc(#loc266)
            %21 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc269)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc60)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc270)
            cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc271)
            %24 = cir.const #cir.int<2> : !s32i loc(#loc65)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc65)
            %26 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
            cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc272)
            %27 = cir.const #cir.int<0> : !s32i loc(#loc68)
            %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc68)
            %29 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
            %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
            cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc273)
            %31 = cir.const #cir.int<27015> : !s32i loc(#loc72)
            %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc72)
            %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc73)
            %34 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
            cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc274)
            cir.scope {
              %61 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc79)
              %62 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc276)
              %63 = cir.const #cir.int<16> : !u64i loc(#loc277)
              %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc277)
              %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc84)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc85)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc85)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc278)
              cir.if %68 {
                cir.break loc(#loc87)
              } loc(#loc279)
            } loc(#loc275)
            cir.scope {
              %61 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
              %62 = cir.const #cir.int<5> : !s32i loc(#loc91)
              %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc92)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc93)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc281)
              cir.if %66 {
                cir.break loc(#loc95)
              } loc(#loc282)
            } loc(#loc280)
            %35 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc97)
            %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc98)
            %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc99)
            cir.store %38, %9 : !s32i, !cir.ptr<!s32i> loc(#loc283)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc104)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc105)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc105)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc285)
              cir.if %64 {
                cir.break loc(#loc107)
              } loc(#loc286)
            } loc(#loc284)
            %39 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %40 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
            %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
            %42 = cir.const #cir.int<3> : !s32i loc(#loc110)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc110)
            %44 = cir.const #cir.int<4> : !u64i loc(#loc110)
            %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc110)
            %46 = cir.const #cir.int<2> : !s32i loc(#loc110)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc110)
            %48 = cir.binop(add, %45, %47) : !u64i loc(#loc110)
            %49 = cir.const #cir.int<1> : !s32i loc(#loc111)
            %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc111)
            %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc287)
            %52 = cir.const #cir.int<0> : !s32i loc(#loc112)
            %53 = cir.call @recv(%39, %41, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc113)
            %54 = cir.cast(integral, %53 : !s64i), !s32i loc(#loc113)
            cir.store %54, %6 : !s32i, !cir.ptr<!s32i> loc(#loc288)
            cir.scope {
              %61 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc119)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc119)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc290)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc120)
                cir.yield %66 : !cir.bool loc(#loc120)
              }, false {
                %66 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %67 = cir.const #cir.int<0> : !s32i loc(#loc122)
                %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc291)
                %69 = cir.ternary(%68, true {
                  %70 = cir.const #true loc(#loc120)
                  cir.yield %70 : !cir.bool loc(#loc120)
                }, false {
                  %70 = cir.const #false loc(#loc120)
                  cir.yield %70 : !cir.bool loc(#loc120)
                }) : (!cir.bool) -> !cir.bool loc(#loc120)
                cir.yield %69 : !cir.bool loc(#loc120)
              }) : (!cir.bool) -> !cir.bool loc(#loc120)
              cir.if %65 {
                cir.break loc(#loc124)
              } loc(#loc292)
            } loc(#loc289)
            %55 = cir.const #cir.int<0> : !s8i loc(#loc125)
            %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc126)
            %57 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
            %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc127)
            cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc293)
            %59 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
            %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc129)
            cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
          } loc(#loc264)
          cir.yield loc(#loc43)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc132)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc132)
          cir.condition(%16) loc(#loc132)
        } loc(#loc263)
      } loc(#loc263)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc135)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc136)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc136)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc296)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc138)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc139)
        } loc(#loc297)
      } loc(#loc295)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc142)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc143)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc299)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc145)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc146)
        } loc(#loc300)
      } loc(#loc298)
    } loc(#loc257)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_343A3AunionType> -> !cir.ptr<!s32i> loc(#loc148)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc303)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_343A3AunionType> -> !cir.ptr<!s32i> loc(#loc154)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc153)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc303)
      cir.scope {
        %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc305)
        %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc306)
        %11 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc307)
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc162)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc162)
        %14 = cir.const #cir.int<4> : !u64i loc(#loc308)
        %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc309)
        cir.store %15, %9 : !u64i, !cir.ptr<!u64i> loc(#loc310)
        %16 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc166)
        %17 = cir.call @_Znam(%16) : (!u64i) -> !cir.ptr<!void> loc(#loc167)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc311)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc311)
        cir.store %19, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc312)
        cir.scope {
          %25 = cir.const #cir.int<0> : !s32i loc(#loc173)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc173)
          cir.store %26, %10 : !u64i, !cir.ptr<!u64i> loc(#loc314)
          cir.for : cond {
            %27 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc175)
            %28 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc176)
            %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc176)
            %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc315)
            cir.condition(%30) loc(#loc315)
          } body {
            cir.scope {
              %27 = cir.const #cir.int<0> : !s32i loc(#loc178)
              %28 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
              %29 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc180)
              %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc181)
              cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc317)
            } loc(#loc316)
            cir.yield loc(#loc172)
          } step {
            %27 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc182)
            %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc183)
            cir.store %28, %10 : !u64i, !cir.ptr<!u64i> loc(#loc318)
            cir.yield loc(#loc313)
          } loc(#loc313)
        } loc(#loc313)
        %20 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc184)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc185)
        %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc186)
        %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc184)
        cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc187)
        %24 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
        cir.delete.array %24 : <!s32i> loc(#loc188)
      } loc(#loc304)
    } loc(#loc302)
    cir.return loc(#loc22)
  } loc(#loc253)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc320)
    %1 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_343A3AunionType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_343A3AunionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc321)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc195)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc196)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc198)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_343A3AunionType> -> !cir.ptr<!s32i> loc(#loc148)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc326)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_343A3AunionType> -> !cir.ptr<!s32i> loc(#loc154)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc205)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc326)
      cir.scope {
        %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc328)
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc329)
        %12 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc330)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc213)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc213)
        %15 = cir.const #cir.int<4> : !u64i loc(#loc331)
        %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc332)
        cir.store %16, %10 : !u64i, !cir.ptr<!u64i> loc(#loc333)
        %17 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc217)
        %18 = cir.call @_Znam(%17) : (!u64i) -> !cir.ptr<!void> loc(#loc218)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc334)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc334)
        cir.store %20, %12 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc335)
        cir.scope {
          %26 = cir.const #cir.int<0> : !s32i loc(#loc224)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc224)
          cir.store %27, %11 : !u64i, !cir.ptr<!u64i> loc(#loc337)
          cir.for : cond {
            %28 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc226)
            %29 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc227)
            %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc227)
            %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc338)
            cir.condition(%31) loc(#loc338)
          } body {
            cir.scope {
              %28 = cir.const #cir.int<0> : !s32i loc(#loc229)
              %29 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc230)
              %30 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc231)
              %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !u64i), !cir.ptr<!s32i> loc(#loc232)
              cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc340)
            } loc(#loc339)
            cir.yield loc(#loc223)
          } step {
            %28 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc233)
            %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc234)
            cir.store %29, %11 : !u64i, !cir.ptr<!u64i> loc(#loc341)
            cir.yield loc(#loc336)
          } loc(#loc336)
        } loc(#loc336)
        %21 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc235)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc236)
        %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc237)
        %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc235)
        cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc238)
        %25 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc239)
        cir.delete.array %25 : <!s32i> loc(#loc239)
      } loc(#loc327)
    } loc(#loc325)
    cir.return loc(#loc190)
  } loc(#loc319)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_344goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34L7goodG2BEv() : () -> () loc(#loc242)
    cir.return loc(#loc241)
  } loc(#loc342)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":52:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":144:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":54:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":54:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":55:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":55:15)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":57:13)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":57:12)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":57:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":58:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":126:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":63:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":63:13)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":64:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":64:28)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":65:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":65:31)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":66:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":66:31)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":67:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":67:41)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":68:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":111:17)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":69:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":110:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":78:35)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":78:44)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":78:57)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":78:28)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":78:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":78:68)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":79:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":82:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":79:17)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":79:33)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":80:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":81:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":83:20)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":83:21)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":83:30)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":83:33)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":83:47)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":83:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":83:48)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":84:34)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":84:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":85:39)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":85:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":86:38)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":86:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":86:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":86:46)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":87:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":90:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":87:22)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":87:54)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":87:55)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":87:64)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":87:78)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":87:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":87:84)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":88:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":89:17)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":91:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":94:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":91:24)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":91:38)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":91:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":91:57)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":92:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":93:17)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":95:35)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":95:49)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":95:55)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":95:28)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":95:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":95:59)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":96:13)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":99:13)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":96:17)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":96:33)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":97:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":98:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":101:31)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":101:45)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":101:58)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":101:76)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":101:79)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":101:26)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":101:13)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":101:80)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":102:13)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":105:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":102:17)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":102:31)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":102:44)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":102:47)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":102:61)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":103:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":104:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":107:39)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":107:25)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":107:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":109:25)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":109:20)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":109:13)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":109:36)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":111:16)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":112:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":115:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":112:13)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":112:29)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":113:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":114:26)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":114:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":116:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":119:9)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":116:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":116:29)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":117:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":118:26)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":118:13)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":127:26)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":46:9)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":127:5)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":128:5)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":143:5)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":129:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":129:28)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":47:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":130:9)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":142:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":131:13)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":131:20)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":131:30)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":132:13)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":132:18)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":134:25)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":134:32)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":134:42)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":134:13)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":135:41)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":52:6)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":135:32)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":135:50)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":135:13)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":136:13)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":139:13)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":136:22)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":136:18)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":136:25)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":136:37)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":137:13)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":138:33)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":138:17)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":138:28)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":138:29)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":136:44)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":136:43)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":140:26)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":140:37)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":140:38)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":140:13)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":141:23)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":151:1)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":176:1)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":153:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":153:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":154:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":154:15)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":156:13)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":156:12)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":156:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":158:12)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":158:5)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":159:26)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":159:5)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":160:5)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":175:5)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":161:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":161:28)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":162:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":174:9)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":163:13)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":163:20)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":163:30)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":164:13)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":164:18)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":166:25)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":166:32)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":166:42)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":166:13)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":167:41)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":151:13)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":167:32)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":167:50)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":167:13)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":168:13)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":171:13)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":168:22)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":168:18)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":168:25)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":168:37)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":169:13)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":170:33)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":170:17)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":170:28)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":170:29)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":168:44)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":168:43)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":172:26)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":172:37)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":172:38)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":172:13)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":173:23)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":178:1)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":181:1)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_34.cpp":180:5)
#loc243 = loc(fused[#loc1, #loc2])
#loc244 = loc(fused[#loc3, #loc4])
#loc245 = loc(fused[#loc5, #loc6])
#loc246 = loc(fused[#loc7, #loc8])
#loc247 = loc(fused[#loc9, #loc10])
#loc248 = loc(fused[#loc11, #loc12])
#loc249 = loc(fused[#loc13, #loc14])
#loc250 = loc(fused[#loc15, #loc16])
#loc251 = loc(fused[#loc17, #loc18])
#loc252 = loc(fused[#loc19, #loc20])
#loc253 = loc(fused[#loc21, #loc22])
#loc254 = loc(fused[#loc23, #loc24])
#loc255 = loc(fused[#loc25, #loc26])
#loc256 = loc(fused[#loc29, #loc27])
#loc257 = loc(fused[#loc30, #loc31])
#loc258 = loc(fused[#loc32, #loc33])
#loc259 = loc(fused[#loc34, #loc35])
#loc260 = loc(fused[#loc36, #loc37])
#loc261 = loc(fused[#loc38, #loc39])
#loc262 = loc(fused[#loc40, #loc41])
#loc263 = loc(fused[#loc42, #loc43])
#loc264 = loc(fused[#loc44, #loc45])
#loc265 = loc(fused[#loc50, #loc51])
#loc266 = loc(fused[#loc52, #loc53])
#loc267 = loc(fused[#loc54, #loc55])
#loc268 = loc(fused[#loc56, #loc53])
#loc269 = loc(fused[#loc58, #loc59])
#loc270 = loc(fused[#loc61, #loc62])
#loc271 = loc(fused[#loc63, #loc64])
#loc272 = loc(fused[#loc67, #loc65])
#loc273 = loc(fused[#loc71, #loc68])
#loc274 = loc(fused[#loc75, #loc76])
#loc275 = loc(fused[#loc77, #loc78])
#loc276 = loc(fused[#loc80, #loc81])
#loc277 = loc(fused[#loc82, #loc83])
#loc278 = loc(fused[#loc84, #loc85])
#loc279 = loc(fused[#loc86, #loc78])
#loc280 = loc(fused[#loc88, #loc89])
#loc281 = loc(fused[#loc92, #loc93])
#loc282 = loc(fused[#loc94, #loc89])
#loc283 = loc(fused[#loc100, #loc101])
#loc284 = loc(fused[#loc102, #loc103])
#loc285 = loc(fused[#loc104, #loc105])
#loc286 = loc(fused[#loc106, #loc103])
#loc287 = loc(fused[#loc110, #loc111])
#loc288 = loc(fused[#loc114, #loc115])
#loc289 = loc(fused[#loc116, #loc117])
#loc290 = loc(fused[#loc118, #loc119])
#loc291 = loc(fused[#loc121, #loc122])
#loc292 = loc(fused[#loc123, #loc117])
#loc293 = loc(fused[#loc127, #loc125])
#loc294 = loc(fused[#loc130, #loc131])
#loc295 = loc(fused[#loc133, #loc134])
#loc296 = loc(fused[#loc135, #loc136])
#loc297 = loc(fused[#loc137, #loc134])
#loc298 = loc(fused[#loc140, #loc141])
#loc299 = loc(fused[#loc142, #loc143])
#loc300 = loc(fused[#loc144, #loc141])
#loc301 = loc(fused[#loc149, #loc147])
#loc302 = loc(fused[#loc150, #loc151])
#loc303 = loc(fused[#loc152, #loc153])
#loc304 = loc(fused[#loc155, #loc156])
#loc305 = loc(fused[#loc157, #loc158])
#loc306 = loc(fused[#loc157, #loc159])
#loc307 = loc(fused[#loc160, #loc161])
#loc308 = loc(fused[#loc163, #loc164])
#loc309 = loc(fused[#loc162, #loc164])
#loc310 = loc(fused[#loc165, #loc164])
#loc311 = loc(fused[#loc168, #loc169])
#loc312 = loc(fused[#loc170, #loc169])
#loc313 = loc(fused[#loc171, #loc172])
#loc314 = loc(fused[#loc174, #loc173])
#loc315 = loc(fused[#loc175, #loc176])
#loc316 = loc(fused[#loc177, #loc172])
#loc317 = loc(fused[#loc179, #loc178])
#loc318 = loc(fused[#loc183, #loc182])
#loc319 = loc(fused[#loc189, #loc190])
#loc320 = loc(fused[#loc191, #loc192])
#loc321 = loc(fused[#loc193, #loc194])
#loc322 = loc(fused[#loc197, #loc195])
#loc323 = loc(fused[#loc199, #loc198])
#loc324 = loc(fused[#loc201, #loc200])
#loc325 = loc(fused[#loc202, #loc203])
#loc326 = loc(fused[#loc204, #loc205])
#loc327 = loc(fused[#loc206, #loc207])
#loc328 = loc(fused[#loc208, #loc209])
#loc329 = loc(fused[#loc208, #loc210])
#loc330 = loc(fused[#loc211, #loc212])
#loc331 = loc(fused[#loc214, #loc215])
#loc332 = loc(fused[#loc213, #loc215])
#loc333 = loc(fused[#loc216, #loc215])
#loc334 = loc(fused[#loc219, #loc220])
#loc335 = loc(fused[#loc221, #loc220])
#loc336 = loc(fused[#loc222, #loc223])
#loc337 = loc(fused[#loc225, #loc224])
#loc338 = loc(fused[#loc226, #loc227])
#loc339 = loc(fused[#loc228, #loc223])
#loc340 = loc(fused[#loc230, #loc229])
#loc341 = loc(fused[#loc234, #loc233])
#loc342 = loc(fused[#loc240, #loc241])
