!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":53:18)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":53:25)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":138:23)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":138:30)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":159:23)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":159:30)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc204 = loc(fused[#loc22, #loc23])
#loc259 = loc(fused[#loc164, #loc165])
#loc265 = loc(fused[#loc182, #loc183])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_229badGlobalE : !s32i {alignment = 4 : i64} loc(#loc194)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc195)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc196)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc9)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc198)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc199)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc200)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc201)
  cir.func private @close(!s32i) -> !s32i loc(#loc202)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_229badSourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc22, #loc23])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc21)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc24)
    cir.scope {
      %4 = cir.get_global @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_229badGlobalE : !cir.ptr<!s32i> loc(#loc194)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc27)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc208)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc209)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc210)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc211)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc212)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc38)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc211)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc41)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc41)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc212)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc45)
              %18 = cir.const #cir.int<1> : !u32i loc(#loc46)
              %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc46)
              %20 = cir.const #cir.int<6> : !u32i loc(#loc47)
              %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc47)
              %22 = cir.call @socket(%17, %19, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
              cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc214)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc54)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc54)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc216)
                cir.if %75 {
                  cir.break loc(#loc56)
                } loc(#loc217)
              } loc(#loc215)
              %23 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc218)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc59)
              %25 = cir.const #cir.int<16> : !u64i loc(#loc219)
              cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc220)
              %26 = cir.const #cir.int<2> : !s32i loc(#loc64)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc64)
              %28 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
              cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc221)
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc9)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc9)
              %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
              %32 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
              %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
              cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc222)
              %34 = cir.const #cir.int<27015> : !s32i loc(#loc72)
              %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc72)
              %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
              %37 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc223)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                %73 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc225)
                %74 = cir.const #cir.int<16> : !u64i loc(#loc226)
                %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc226)
                %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc85)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc85)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc227)
                cir.if %79 {
                  cir.break loc(#loc87)
                } loc(#loc228)
              } loc(#loc224)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
              %40 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc90)
              %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc91)
              %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc229)
              %43 = cir.const #cir.int<1> : !u64i loc(#loc230)
              %44 = cir.const #cir.int<4096> : !s32i loc(#loc96)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc96)
              %46 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc97)
              %47 = cir.binop(sub, %45, %46) : !u64i loc(#loc231)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc98)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc98)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc232)
              %51 = cir.binop(mul, %43, %50) : !u64i loc(#loc233)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc100)
              %53 = cir.call @recv(%38, %42, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc101)
              %54 = cir.cast(integral, %53 : !s64i), !s32i loc(#loc101)
              cir.store %54, %7 : !s32i, !cir.ptr<!s32i> loc(#loc234)
              cir.scope {
                %72 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc107)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc107)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc236)
                %76 = cir.ternary(%75, true {
                  %77 = cir.const #true loc(#loc108)
                  cir.yield %77 : !cir.bool loc(#loc108)
                }, false {
                  %77 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                  %78 = cir.const #cir.int<0> : !s32i loc(#loc110)
                  %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc237)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc108)
                    cir.yield %81 : !cir.bool loc(#loc108)
                  }, false {
                    %81 = cir.const #false loc(#loc108)
                    cir.yield %81 : !cir.bool loc(#loc108)
                  }) : (!cir.bool) -> !cir.bool loc(#loc108)
                  cir.yield %80 : !cir.bool loc(#loc108)
                }) : (!cir.bool) -> !cir.bool loc(#loc108)
                cir.if %76 {
                  cir.break loc(#loc112)
                } loc(#loc238)
              } loc(#loc235)
              %55 = cir.const #cir.int<0> : !s8i loc(#loc113)
              %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
              %57 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc115)
              %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc116)
              %60 = cir.const #cir.int<1> : !u64i loc(#loc239)
              %61 = cir.binop(div, %59, %60) : !u64i loc(#loc240)
              %62 = cir.binop(add, %57, %61) : !u64i loc(#loc241)
              %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc119)
              cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc242)
              %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
              %65 = cir.const #cir.int<13> : !s8i loc(#loc121)
              %66 = cir.cast(integral, %65 : !s8i), !s32i loc(#loc121)
              %67 = cir.call @strchr(%64, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
              cir.store %67, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
              cir.scope {
                %72 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc127)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s8i loc(#loc129)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc246)
                } loc(#loc245)
              } loc(#loc244)
              %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
              %69 = cir.const #cir.int<10> : !s8i loc(#loc133)
              %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc133)
              %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc134)
              cir.store %71, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
              cir.scope {
                %72 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc139)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s8i loc(#loc141)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc250)
                } loc(#loc249)
              } loc(#loc248)
              cir.yield loc(#loc44)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc144)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc144)
              cir.condition(%18) loc(#loc144)
            } loc(#loc213)
          } loc(#loc213)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc147)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc148)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc148)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc252)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc151)
            } loc(#loc253)
          } loc(#loc251)
        } loc(#loc207)
      } loc(#loc206)
    } loc(#loc205)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc254)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc254)
  } loc(#loc203)
  cir.global "private" external @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_2214goodG2B1GlobalE : !s32i {alignment = 4 : i64} loc(#loc255)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc256)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc158)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc161)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_2214goodG2B1SourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc164, #loc165])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc259)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc163)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.scope {
      %4 = cir.get_global @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_2214goodG2B1GlobalE : !cir.ptr<!s32i> loc(#loc255)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc169)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc169)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc158)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc158)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc173)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc174)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
        %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc161)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc161)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc174)
      } loc(#loc261)
    } loc(#loc260)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc262)
  } loc(#loc258)
  cir.global "private" external @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_2214goodG2B2GlobalE : !s32i {alignment = 4 : i64} loc(#loc263)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_2214goodG2B2SourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc182, #loc183])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc265)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc181)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.scope {
      %4 = cir.get_global @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_2214goodG2B2GlobalE : !cir.ptr<!s32i> loc(#loc263)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc187)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc187)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc189)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
        %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc191)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc191)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc189)
      } loc(#loc267)
    } loc(#loc266)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc268)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc268)
  } loc(#loc264)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":0:0)
#loc1 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":51:1)
#loc2 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":51:12)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/sys/socket.h":102:1)
#loc6 = loc("/usr/include/sys/socket.h":102:62)
#loc7 = loc("/usr/include/arpa/inet.h":34:1)
#loc8 = loc("/usr/include/arpa/inet.h":34:47)
#loc9 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":84:53)
#loc10 = loc("/usr/include/netinet/in.h":404:1)
#loc11 = loc("/usr/include/netinet/in.h":405:40)
#loc12 = loc("/usr/include/sys/socket.h":126:1)
#loc13 = loc("/usr/include/sys/socket.h":126:75)
#loc14 = loc("/usr/include/sys/socket.h":145:1)
#loc15 = loc("/usr/include/sys/socket.h":145:68)
#loc16 = loc("/usr/include/string.h":226:1)
#loc17 = loc("/usr/include/string.h":227:50)
#loc18 = loc("/usr/include/unistd.h":358:1)
#loc19 = loc("/usr/include/unistd.h":358:27)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":53:1)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":126:1)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":54:1)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":55:5)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":124:5)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":55:8)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":56:5)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":57:9)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":123:9)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":62:13)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":62:17)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":63:13)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":63:32)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":64:13)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":64:19)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":65:13)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":65:36)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":66:13)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":66:41)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":66:30)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":66:37)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":67:13)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":112:21)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":77:40)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":77:49)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":77:62)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":77:33)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":77:17)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":77:73)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":78:17)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":81:17)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":78:21)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":78:38)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":79:17)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":80:21)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":82:24)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":82:25)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":82:34)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":82:37)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":82:51)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":82:17)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":82:52)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":83:38)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":83:17)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":84:43)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":84:17)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":84:63)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":85:42)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":85:36)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":85:17)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":85:50)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":86:17)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":89:17)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":86:29)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":86:62)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":86:63)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":86:72)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":86:86)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":86:21)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":86:92)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":87:17)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":88:21)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:35)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:59)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:66)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:64)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:50)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:73)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:76)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:87)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:92)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:107)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:117)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:118)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:121)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:30)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:17)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":93:122)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":94:17)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":97:17)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":94:21)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":94:35)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":94:48)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":94:51)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":94:65)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":95:17)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":96:21)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":99:61)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":99:17)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":99:22)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":99:32)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":99:45)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":99:56)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":99:57)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":101:34)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":101:40)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":101:27)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":101:17)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":101:44)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":102:17)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":105:17)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":102:21)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":103:17)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":104:32)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":104:22)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":104:21)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":106:34)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":106:40)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":106:27)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":106:17)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":106:44)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":107:17)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":110:17)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":107:21)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":108:17)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":109:32)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":109:22)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":109:21)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":112:20)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":113:13)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":116:13)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":113:17)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":113:34)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":114:13)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":115:30)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":115:17)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":125:12)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":125:5)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":134:1)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":134:12)
#loc156 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc157 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":143:19)
#loc159 = loc("/usr/include/string.h":149:1)
#loc160 = loc("/usr/include/string.h":150:14)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":152:22)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":138:1)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":156:1)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":139:1)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":140:5)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":154:5)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":140:8)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":141:5)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":144:5)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":146:5)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":143:9)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":152:9)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":152:16)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":155:12)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":155:5)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":135:1)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":135:12)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":159:1)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":172:1)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":160:1)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":161:5)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":170:5)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":161:8)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":162:5)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":168:9)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":168:16)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":168:22)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":171:12)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_22b.cpp":171:5)
#loc194 = loc(fused[#loc1, #loc2])
#loc195 = loc(fused[#loc3, #loc4])
#loc196 = loc(fused[#loc5, #loc6])
#loc197 = loc(fused[#loc7, #loc8])
#loc198 = loc(fused[#loc10, #loc11])
#loc199 = loc(fused[#loc12, #loc13])
#loc200 = loc(fused[#loc14, #loc15])
#loc201 = loc(fused[#loc16, #loc17])
#loc202 = loc(fused[#loc18, #loc19])
#loc203 = loc(fused[#loc20, #loc21])
#loc205 = loc(fused[#loc25, #loc26])
#loc206 = loc(fused[#loc28, #loc26])
#loc207 = loc(fused[#loc29, #loc30])
#loc208 = loc(fused[#loc31, #loc32])
#loc209 = loc(fused[#loc33, #loc34])
#loc210 = loc(fused[#loc35, #loc36])
#loc211 = loc(fused[#loc37, #loc38])
#loc212 = loc(fused[#loc39, #loc40])
#loc213 = loc(fused[#loc43, #loc44])
#loc214 = loc(fused[#loc49, #loc50])
#loc215 = loc(fused[#loc51, #loc52])
#loc216 = loc(fused[#loc53, #loc54])
#loc217 = loc(fused[#loc55, #loc52])
#loc218 = loc(fused[#loc57, #loc58])
#loc219 = loc(fused[#loc60, #loc61])
#loc220 = loc(fused[#loc62, #loc63])
#loc221 = loc(fused[#loc66, #loc64])
#loc222 = loc(fused[#loc70, #loc71])
#loc223 = loc(fused[#loc75, #loc76])
#loc224 = loc(fused[#loc77, #loc78])
#loc225 = loc(fused[#loc80, #loc81])
#loc226 = loc(fused[#loc82, #loc83])
#loc227 = loc(fused[#loc84, #loc85])
#loc228 = loc(fused[#loc86, #loc78])
#loc229 = loc(fused[#loc92, #loc93])
#loc230 = loc(fused[#loc94, #loc95])
#loc231 = loc(fused[#loc96, #loc97])
#loc232 = loc(fused[#loc96, #loc98])
#loc233 = loc(fused[#loc94, #loc99])
#loc234 = loc(fused[#loc102, #loc103])
#loc235 = loc(fused[#loc104, #loc105])
#loc236 = loc(fused[#loc106, #loc107])
#loc237 = loc(fused[#loc109, #loc110])
#loc238 = loc(fused[#loc111, #loc105])
#loc239 = loc(fused[#loc117, #loc118])
#loc240 = loc(fused[#loc116, #loc118])
#loc241 = loc(fused[#loc115, #loc118])
#loc242 = loc(fused[#loc114, #loc113])
#loc243 = loc(fused[#loc123, #loc124])
#loc244 = loc(fused[#loc125, #loc126])
#loc245 = loc(fused[#loc128, #loc126])
#loc246 = loc(fused[#loc131, #loc129])
#loc247 = loc(fused[#loc135, #loc136])
#loc248 = loc(fused[#loc137, #loc138])
#loc249 = loc(fused[#loc140, #loc138])
#loc250 = loc(fused[#loc143, #loc141])
#loc251 = loc(fused[#loc145, #loc146])
#loc252 = loc(fused[#loc147, #loc148])
#loc253 = loc(fused[#loc149, #loc146])
#loc254 = loc(fused[#loc153, #loc152])
#loc255 = loc(fused[#loc154, #loc155])
#loc256 = loc(fused[#loc156, #loc157])
#loc257 = loc(fused[#loc159, #loc160])
#loc258 = loc(fused[#loc162, #loc163])
#loc260 = loc(fused[#loc167, #loc168])
#loc261 = loc(fused[#loc170, #loc171, #loc172, #loc168])
#loc262 = loc(fused[#loc177, #loc176])
#loc263 = loc(fused[#loc178, #loc179])
#loc264 = loc(fused[#loc180, #loc181])
#loc266 = loc(fused[#loc185, #loc186])
#loc267 = loc(fused[#loc188, #loc186])
#loc268 = loc(fused[#loc193, #loc192])
