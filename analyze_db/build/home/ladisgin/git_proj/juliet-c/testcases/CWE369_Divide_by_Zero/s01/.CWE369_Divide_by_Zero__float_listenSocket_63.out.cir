!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":98:44)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":238:10)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":238:14)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":238:20)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":238:32)
#loc281 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":195:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc369 = loc(fused[#loc159, #loc160])
#loc370 = loc(fused[#loc161, #loc162])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc308)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc309)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc310)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc311)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc312)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc313)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc314)
  cir.func private @close(!s32i) -> !s32i loc(#loc315)
  cir.func private @CWE369_Divide_by_Zero__float_listenSocket_63b_badSink(!cir.ptr<!cir.float>) loc(#loc316)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_63_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc319)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc320)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc321)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc322)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc323)
    %6 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc33)
    cir.store %6, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc324)
    cir.br ^bb1 loc(#loc325)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc26)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc28)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.br ^bb2 loc(#loc326)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc326)
  ^bb3:  // pred: ^bb32
    %11 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %12 ^bb4, ^bb33 loc(#loc39)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc42)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb5 loc(#loc328)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc49)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc329)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc330)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc51)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc47)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc331)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc332)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc333)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc59)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc334)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc62)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc335)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc66)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc66)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc67)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc336)
    cir.br ^bb9 loc(#loc337)
  ^bb9:  // pred: ^bb8
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc338)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc339)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc339)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc78)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc79)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc340)
    cir.brcond %42 ^bb10, ^bb11 loc(#loc341)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc81)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc72)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc342)
  ^bb13:  // pred: ^bb12
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc85)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc86)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc87)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc343)
    cir.brcond %48 ^bb14, ^bb15 loc(#loc344)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc89)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc83)
  ^bb16:  // pred: ^bb15
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc91)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc92)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc93)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb17 loc(#loc346)
  ^bb17:  // pred: ^bb16
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc99)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc347)
    cir.brcond %56 ^bb18, ^bb19 loc(#loc348)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc101)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc97)
  ^bb20:  // pred: ^bb19
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc103)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc104)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc104)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc104)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc107)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc107)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.br ^bb21 loc(#loc350)
  ^bb21:  // pred: ^bb20
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %69 = cir.unary(minus, %68) : !s32i, !s32i loc(#loc113)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc351)
    cir.brcond %70 ^bb22, ^bb23 loc(#loc114)
  ^bb22:  // pred: ^bb21
    %71 = cir.const #true loc(#loc114)
    cir.br ^bb28(%71 : !cir.bool) loc(#loc114)
  ^bb23:  // pred: ^bb21
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %74 ^bb24, ^bb25 loc(#loc114)
  ^bb24:  // pred: ^bb23
    %75 = cir.const #true loc(#loc114)
    cir.br ^bb26(%75 : !cir.bool) loc(#loc114)
  ^bb25:  // pred: ^bb23
    %76 = cir.const #false loc(#loc114)
    cir.br ^bb26(%76 : !cir.bool) loc(#loc114)
  ^bb26(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":98:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc114)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%77 : !cir.bool) loc(#loc114)
  ^bb28(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":98:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc114)
  ^bb29:  // pred: ^bb28
    cir.brcond %78 ^bb30, ^bb31 loc(#loc353)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc118)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc111)
  ^bb32:  // pred: ^bb31
    %79 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc119)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc121)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc121)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc354)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc122)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc123)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc123)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc355)
    cir.br ^bb3 loc(#loc38)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc38)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc356)
  ^bb35:  // pred: ^bb34
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %89 = cir.unary(minus, %88) : !s32i, !s32i loc(#loc129)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc357)
    cir.brcond %90 ^bb36, ^bb37 loc(#loc358)
  ^bb36:  // pred: ^bb35
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc132)
    cir.br ^bb37 loc(#loc127)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc127)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc359)
  ^bb39:  // pred: ^bb38
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc136)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc360)
    cir.brcond %96 ^bb40, ^bb41 loc(#loc361)
  ^bb40:  // pred: ^bb39
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc139)
    cir.br ^bb41 loc(#loc134)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc134)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc36)
  ^bb43:  // pred: ^bb42
    cir.call @CWE369_Divide_by_Zero__float_listenSocket_63b_badSink(%5) : (!cir.ptr<!cir.float>) -> () loc(#loc140)
    cir.return loc(#loc20)
  } loc(#loc317)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_63_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc363)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc143)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc364)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc145)
    cir.return loc(#loc142)
  } loc(#loc362)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc365)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc366)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc367)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc156)
  cir.func @main(%arg0: !s32i loc(fused[#loc159, #loc160]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc161, #loc162])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc369)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc370)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc158)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc163)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc164)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc165)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc165)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc166)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc153)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_listenSocket_63_good : !cir.ptr<!cir.func<!void ()>> loc(#loc371)
    cir.call @CWE369_Divide_by_Zero__float_listenSocket_63_good() : () -> () loc(#loc168)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc154)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc155)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_listenSocket_63_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc372)
    cir.call @CWE369_Divide_by_Zero__float_listenSocket_63_bad() : () -> () loc(#loc172)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc156)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc156)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc175)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc373)
    cir.return %17 : !s32i loc(#loc373)
  } loc(#loc368)
  cir.func private @CWE369_Divide_by_Zero__float_listenSocket_63b_goodG2BSink(!cir.ptr<!cir.float>) loc(#loc374)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc376)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc183)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc377)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc185)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc378)
    cir.call @CWE369_Divide_by_Zero__float_listenSocket_63b_goodG2BSink(%0) : (!cir.ptr<!cir.float>) -> () loc(#loc187)
    cir.return loc(#loc180)
  } loc(#loc375)
  cir.func private @CWE369_Divide_by_Zero__float_listenSocket_63b_goodB2GSink(!cir.ptr<!cir.float>) loc(#loc379)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc381)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc382)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc383)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc384)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc385)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc386)
    %6 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc204)
    cir.store %6, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc387)
    cir.br ^bb1 loc(#loc388)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc197)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc199)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc384)
    cir.br ^bb2 loc(#loc389)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc389)
  ^bb3:  // pred: ^bb32
    %11 = cir.const #cir.int<0> : !s32i loc(#loc210)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc210)
    cir.brcond %12 ^bb4, ^bb33 loc(#loc210)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc211)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc213)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc214)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    cir.br ^bb5 loc(#loc391)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc220)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc220)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc392)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc393)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc222)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc218)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc394)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc225)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc395)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc396)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc230)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc230)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc397)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc232)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc232)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc398)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc234)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc234)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc235)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc399)
    cir.br ^bb9 loc(#loc400)
  ^bb9:  // pred: ^bb8
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc401)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc402)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc402)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc245)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc246)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc246)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc403)
    cir.brcond %42 ^bb10, ^bb11 loc(#loc404)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc248)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc239)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc405)
  ^bb13:  // pred: ^bb12
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc252)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc253)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc254)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc254)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc406)
    cir.brcond %48 ^bb14, ^bb15 loc(#loc407)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc256)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc250)
  ^bb16:  // pred: ^bb15
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc258)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc259)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc260)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    cir.br ^bb17 loc(#loc409)
  ^bb17:  // pred: ^bb16
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc266)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc410)
    cir.brcond %56 ^bb18, ^bb19 loc(#loc411)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc268)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc264)
  ^bb20:  // pred: ^bb19
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc270)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc270)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc271)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc271)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc271)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc273)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc274)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc274)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.br ^bb21 loc(#loc413)
  ^bb21:  // pred: ^bb20
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc280)
    %69 = cir.unary(minus, %68) : !s32i, !s32i loc(#loc280)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc414)
    cir.brcond %70 ^bb22, ^bb23 loc(#loc281)
  ^bb22:  // pred: ^bb21
    %71 = cir.const #true loc(#loc281)
    cir.br ^bb28(%71 : !cir.bool) loc(#loc281)
  ^bb23:  // pred: ^bb21
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc283)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc415)
    cir.brcond %74 ^bb24, ^bb25 loc(#loc281)
  ^bb24:  // pred: ^bb23
    %75 = cir.const #true loc(#loc281)
    cir.br ^bb26(%75 : !cir.bool) loc(#loc281)
  ^bb25:  // pred: ^bb23
    %76 = cir.const #false loc(#loc281)
    cir.br ^bb26(%76 : !cir.bool) loc(#loc281)
  ^bb26(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":195:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc281)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%77 : !cir.bool) loc(#loc281)
  ^bb28(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":195:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc281)
  ^bb29:  // pred: ^bb28
    cir.brcond %78 ^bb30, ^bb31 loc(#loc416)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc285)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc278)
  ^bb32:  // pred: ^bb31
    %79 = cir.const #cir.int<0> : !s32i loc(#loc286)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc286)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc288)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc288)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc417)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc289)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc290)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc290)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc418)
    cir.br ^bb3 loc(#loc209)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc209)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc419)
  ^bb35:  // pred: ^bb34
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc296)
    %89 = cir.unary(minus, %88) : !s32i, !s32i loc(#loc296)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc420)
    cir.brcond %90 ^bb36, ^bb37 loc(#loc421)
  ^bb36:  // pred: ^bb35
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc298)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc299)
    cir.br ^bb37 loc(#loc294)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc294)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc422)
  ^bb39:  // pred: ^bb38
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc303)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc423)
    cir.brcond %96 ^bb40, ^bb41 loc(#loc424)
  ^bb40:  // pred: ^bb39
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc305)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc306)
    cir.br ^bb41 loc(#loc301)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc301)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc207)
  ^bb43:  // pred: ^bb42
    cir.call @CWE369_Divide_by_Zero__float_listenSocket_63b_goodB2GSink(%5) : (!cir.ptr<!cir.float>) -> () loc(#loc307)
    cir.return loc(#loc191)
  } loc(#loc380)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_63a.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":47:1)
#loc18 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":47:75)
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":49:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":124:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":59:9)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":59:13)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":60:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":60:28)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":61:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":61:31)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":62:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":62:31)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":63:9)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":63:41)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":51:5)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":51:11)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":53:12)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":53:5)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":54:5)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":122:5)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":64:9)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":107:17)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":107:16)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":73:35)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":73:44)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":73:57)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":73:28)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":73:13)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":73:68)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":74:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":77:13)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":74:17)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":74:33)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":75:13)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":76:17)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":78:20)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":78:21)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":78:30)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":78:33)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":78:47)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":78:13)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":78:48)
#loc59 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":79:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":79:13)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":80:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":80:13)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":81:38)
#loc67 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":81:32)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":81:13)
#loc70 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":81:46)
#loc71 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":82:13)
#loc72 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":85:13)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":82:22)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":82:54)
#loc75 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":82:55)
#loc76 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":82:64)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":82:78)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":82:17)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":82:84)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":83:13)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":84:17)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":86:13)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":89:13)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":86:24)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":86:38)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":86:17)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":86:57)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":87:13)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":88:17)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":90:35)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":90:49)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":90:55)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":90:28)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":90:13)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":90:59)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":91:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":94:13)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":91:17)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":91:33)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":92:13)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":93:17)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":97:31)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":97:45)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":97:58)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":97:76)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":97:79)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":97:26)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":97:13)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":97:80)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":98:13)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":101:13)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":98:17)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":98:31)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":98:47)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":98:61)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":99:13)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":100:17)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":103:39)
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":103:25)
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":103:13)
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":105:32)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":105:27)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":105:13)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":105:43)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":108:9)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":111:9)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":108:13)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":108:29)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":109:9)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":110:26)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":110:13)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":112:9)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":115:9)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":112:13)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":112:29)
#loc137 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":113:9)
#loc138 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":114:26)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":114:13)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":123:5)
#loc141 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":223:1)
#loc142 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":227:1)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":225:5)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":225:13)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":226:5)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":226:13)
#loc147 = loc("/usr/include/stdlib.h":575:1)
#loc148 = loc("/usr/include/stdlib.h":575:41)
#loc149 = loc("/usr/include/time.h":76:1)
#loc150 = loc("/usr/include/time.h":76:38)
#loc151 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc152 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":243:15)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":245:15)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":248:15)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":250:15)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":238:1)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":253:1)
#loc163 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":239:1)
#loc164 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":241:27)
#loc165 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":241:22)
#loc166 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":241:5)
#loc167 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":243:5)
#loc168 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":244:5)
#loc169 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":244:55)
#loc170 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":245:5)
#loc171 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":248:5)
#loc172 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":249:5)
#loc173 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":249:54)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":250:5)
#loc175 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":252:12)
#loc176 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":252:5)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":131:1)
#loc178 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":131:76)
#loc179 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":133:1)
#loc180 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":141:1)
#loc181 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":135:5)
#loc182 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":135:11)
#loc183 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":137:12)
#loc184 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":137:5)
#loc185 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":139:12)
#loc186 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":139:5)
#loc187 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":140:5)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":144:1)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":144:76)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":146:1)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":221:1)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":156:9)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":156:13)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":157:9)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":157:28)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":158:9)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":158:31)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":159:9)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":159:31)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":160:9)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":160:41)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":148:5)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":148:11)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":150:12)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":150:5)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":151:5)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":219:5)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":161:9)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":204:17)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":204:16)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":170:35)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":170:44)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":170:57)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":170:28)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":170:13)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":170:68)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":171:13)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":174:13)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":171:17)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":171:33)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":172:13)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":173:17)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":175:20)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":175:21)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":175:30)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":175:33)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":175:47)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":175:13)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":175:48)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":176:34)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":176:13)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":177:39)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":177:13)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":178:38)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":178:32)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":178:13)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":178:46)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":179:13)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":182:13)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":179:22)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":179:54)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":179:55)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":179:64)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":179:78)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":179:17)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":179:84)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":180:13)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":181:17)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":183:13)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":186:13)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":183:24)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":183:38)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":183:17)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":183:57)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":184:13)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":185:17)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":187:35)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":187:49)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":187:55)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":187:28)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":187:13)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":187:59)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":188:13)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":191:13)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":188:17)
#loc266 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":188:33)
#loc267 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":189:13)
#loc268 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":190:17)
#loc269 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":194:31)
#loc270 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":194:45)
#loc271 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":194:58)
#loc272 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":194:76)
#loc273 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":194:79)
#loc274 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":194:26)
#loc275 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":194:13)
#loc276 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":194:80)
#loc277 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":195:13)
#loc278 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":198:13)
#loc279 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":195:17)
#loc280 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":195:31)
#loc282 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":195:47)
#loc283 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":195:61)
#loc284 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":196:13)
#loc285 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":197:17)
#loc286 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":200:39)
#loc287 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":200:25)
#loc288 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":200:13)
#loc289 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":202:32)
#loc290 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":202:27)
#loc291 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":202:13)
#loc292 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":202:43)
#loc293 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":205:9)
#loc294 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":208:9)
#loc295 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":205:13)
#loc296 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":205:29)
#loc297 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":206:9)
#loc298 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":207:26)
#loc299 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":207:13)
#loc300 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":209:9)
#loc301 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":212:9)
#loc302 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":209:13)
#loc303 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":209:29)
#loc304 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":210:9)
#loc305 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":211:26)
#loc306 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":211:13)
#loc307 = loc("CWE369_Divide_by_Zero__float_listenSocket_63a.c":220:5)
#loc308 = loc(fused[#loc1, #loc2])
#loc309 = loc(fused[#loc3, #loc4])
#loc310 = loc(fused[#loc5, #loc6])
#loc311 = loc(fused[#loc7, #loc8])
#loc312 = loc(fused[#loc9, #loc10])
#loc313 = loc(fused[#loc11, #loc12])
#loc314 = loc(fused[#loc13, #loc14])
#loc315 = loc(fused[#loc15, #loc16])
#loc316 = loc(fused[#loc17, #loc18])
#loc317 = loc(fused[#loc19, #loc20])
#loc318 = loc(fused[#loc21, #loc22])
#loc319 = loc(fused[#loc23, #loc24])
#loc320 = loc(fused[#loc25, #loc26])
#loc321 = loc(fused[#loc27, #loc28])
#loc322 = loc(fused[#loc29, #loc30])
#loc323 = loc(fused[#loc31, #loc32])
#loc324 = loc(fused[#loc34, #loc33])
#loc325 = loc(fused[#loc35, #loc36])
#loc326 = loc(fused[#loc37, #loc38])
#loc327 = loc(fused[#loc44, #loc45])
#loc328 = loc(fused[#loc46, #loc47])
#loc329 = loc(fused[#loc48, #loc49])
#loc330 = loc(fused[#loc50, #loc47])
#loc331 = loc(fused[#loc52, #loc53])
#loc332 = loc(fused[#loc55, #loc56])
#loc333 = loc(fused[#loc57, #loc58])
#loc334 = loc(fused[#loc61, #loc59])
#loc335 = loc(fused[#loc65, #loc62])
#loc336 = loc(fused[#loc69, #loc70])
#loc337 = loc(fused[#loc71, #loc72])
#loc338 = loc(fused[#loc74, #loc75])
#loc339 = loc(fused[#loc76, #loc77])
#loc340 = loc(fused[#loc78, #loc79])
#loc341 = loc(fused[#loc80, #loc72])
#loc342 = loc(fused[#loc82, #loc83])
#loc343 = loc(fused[#loc86, #loc87])
#loc344 = loc(fused[#loc88, #loc83])
#loc345 = loc(fused[#loc94, #loc95])
#loc346 = loc(fused[#loc96, #loc97])
#loc347 = loc(fused[#loc98, #loc99])
#loc348 = loc(fused[#loc100, #loc97])
#loc349 = loc(fused[#loc108, #loc109])
#loc350 = loc(fused[#loc110, #loc111])
#loc351 = loc(fused[#loc112, #loc113])
#loc352 = loc(fused[#loc115, #loc116])
#loc353 = loc(fused[#loc117, #loc111])
#loc354 = loc(fused[#loc121, #loc119])
#loc355 = loc(fused[#loc124, #loc125])
#loc356 = loc(fused[#loc126, #loc127])
#loc357 = loc(fused[#loc128, #loc129])
#loc358 = loc(fused[#loc130, #loc127])
#loc359 = loc(fused[#loc133, #loc134])
#loc360 = loc(fused[#loc135, #loc136])
#loc361 = loc(fused[#loc137, #loc134])
#loc362 = loc(fused[#loc141, #loc142])
#loc363 = loc(fused[#loc143, #loc144])
#loc364 = loc(fused[#loc145, #loc146])
#loc365 = loc(fused[#loc147, #loc148])
#loc366 = loc(fused[#loc149, #loc150])
#loc367 = loc(fused[#loc151, #loc152])
#loc368 = loc(fused[#loc157, #loc158])
#loc371 = loc(fused[#loc168, #loc169])
#loc372 = loc(fused[#loc172, #loc173])
#loc373 = loc(fused[#loc176, #loc175])
#loc374 = loc(fused[#loc177, #loc178])
#loc375 = loc(fused[#loc179, #loc180])
#loc376 = loc(fused[#loc181, #loc182])
#loc377 = loc(fused[#loc184, #loc183])
#loc378 = loc(fused[#loc186, #loc185])
#loc379 = loc(fused[#loc188, #loc189])
#loc380 = loc(fused[#loc190, #loc191])
#loc381 = loc(fused[#loc192, #loc193])
#loc382 = loc(fused[#loc194, #loc195])
#loc383 = loc(fused[#loc196, #loc197])
#loc384 = loc(fused[#loc198, #loc199])
#loc385 = loc(fused[#loc200, #loc201])
#loc386 = loc(fused[#loc202, #loc203])
#loc387 = loc(fused[#loc205, #loc204])
#loc388 = loc(fused[#loc206, #loc207])
#loc389 = loc(fused[#loc208, #loc209])
#loc390 = loc(fused[#loc215, #loc216])
#loc391 = loc(fused[#loc217, #loc218])
#loc392 = loc(fused[#loc219, #loc220])
#loc393 = loc(fused[#loc221, #loc218])
#loc394 = loc(fused[#loc223, #loc224])
#loc395 = loc(fused[#loc226, #loc227])
#loc396 = loc(fused[#loc228, #loc229])
#loc397 = loc(fused[#loc231, #loc230])
#loc398 = loc(fused[#loc233, #loc232])
#loc399 = loc(fused[#loc236, #loc237])
#loc400 = loc(fused[#loc238, #loc239])
#loc401 = loc(fused[#loc241, #loc242])
#loc402 = loc(fused[#loc243, #loc244])
#loc403 = loc(fused[#loc245, #loc246])
#loc404 = loc(fused[#loc247, #loc239])
#loc405 = loc(fused[#loc249, #loc250])
#loc406 = loc(fused[#loc253, #loc254])
#loc407 = loc(fused[#loc255, #loc250])
#loc408 = loc(fused[#loc261, #loc262])
#loc409 = loc(fused[#loc263, #loc264])
#loc410 = loc(fused[#loc265, #loc266])
#loc411 = loc(fused[#loc267, #loc264])
#loc412 = loc(fused[#loc275, #loc276])
#loc413 = loc(fused[#loc277, #loc278])
#loc414 = loc(fused[#loc279, #loc280])
#loc415 = loc(fused[#loc282, #loc283])
#loc416 = loc(fused[#loc284, #loc278])
#loc417 = loc(fused[#loc288, #loc286])
#loc418 = loc(fused[#loc291, #loc292])
#loc419 = loc(fused[#loc293, #loc294])
#loc420 = loc(fused[#loc295, #loc296])
#loc421 = loc(fused[#loc297, #loc294])
#loc422 = loc(fused[#loc300, #loc301])
#loc423 = loc(fused[#loc302, #loc303])
#loc424 = loc(fused[#loc304, #loc301])
