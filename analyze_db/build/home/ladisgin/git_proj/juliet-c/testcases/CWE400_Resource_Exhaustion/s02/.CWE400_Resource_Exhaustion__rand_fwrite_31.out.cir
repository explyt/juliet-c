!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":151:10)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":151:14)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":151:20)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":151:32)
#true = #cir.bool<true> : !cir.bool
#loc292 = loc(fused[#loc95, #loc96])
#loc293 = loc(fused[#loc97, #loc98])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc252)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc254)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc256)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc21)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
    %7 = cir.ternary(%6, true {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc21)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc21)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc21)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc21)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc21)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc21)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc21)
      cir.yield %20 : !u32i loc(#loc21)
    }, false {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc21)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc21)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc21)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc21)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc21)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc21)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc21)
      %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc21)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc21)
      %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc21)
      cir.yield %24 : !u32i loc(#loc21)
    }) : (!cir.bool) -> !u32i loc(#loc21)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc21)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc262)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc263)
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      cir.store %11, %9 : !s32i, !cir.ptr<!s32i> loc(#loc262)
      %12 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      cir.store %12, %10 : !s32i, !cir.ptr<!s32i> loc(#loc263)
      cir.scope {
        %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc265)
        %14 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc266)
        %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc267)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc32)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc32)
        cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc265)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc34)
        cir.store %18, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc266)
        %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
        cir.store %20, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
        %21 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc36)
        %22 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
        %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
        %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc36)
        cir.store %25, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc268)
        cir.scope {
          %26 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc43)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc270)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc45)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc46)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
          } loc(#loc271)
        } loc(#loc269)
        cir.scope {
          %26 = cir.const #cir.int<0> : !s32i loc(#loc49)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc49)
          cir.store %27, %13 : !u64i, !cir.ptr<!u64i> loc(#loc273)
          cir.for : cond {
            %28 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %29 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc52)
            %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc52)
            %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc274)
            cir.condition(%31) loc(#loc53)
          } body {
            cir.scope {
              cir.scope {
                %28 = cir.const #cir.int<50> : !u64i loc(#loc277)
                %29 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc59)
                %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
                %33 = cir.const #cir.int<1> : !u64i loc(#loc278)
                %34 = cir.const #cir.int<50> : !u64i loc(#loc279)
                %35 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
                %36 = cir.call @fwrite(%32, %33, %34, %35) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc59)
                %37 = cir.cmp(ne, %28, %36) : !u64i, !cir.bool loc(#loc280)
                cir.if %37 {
                  %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc68)
                  cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
                } loc(#loc281)
              } loc(#loc276)
            } loc(#loc275)
            cir.yield loc(#loc48)
          } step {
            %28 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc69)
            %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc70)
            cir.store %29, %13 : !u64i, !cir.ptr<!u64i> loc(#loc282)
            cir.yield loc(#loc272)
          } loc(#loc272)
        } loc(#loc272)
        cir.scope {
          %26 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
          %27 = cir.cast(ptr_to_bool, %26 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc73)
          cir.if %27 {
            %28 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
            %29 = cir.call @fclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc76)
          } loc(#loc284)
        } loc(#loc283)
      } loc(#loc264)
    } loc(#loc261)
    cir.return loc(#loc15)
  } loc(#loc257)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc286)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc287)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    cir.return loc(#loc78)
  } loc(#loc285)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc288)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc289)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc290)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc92)
  cir.func @main(%arg0: !s32i loc(fused[#loc95, #loc96]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc97, #loc98])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc292)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc293)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc99)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc100)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc101)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc101)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc102)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc89)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc294)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_31_good() : () -> () loc(#loc104)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc90)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc91)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc295)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_31_bad() : () -> () loc(#loc108)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc92)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc111)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    cir.return %17 : !s32i loc(#loc296)
  } loc(#loc291)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc298)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc118)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc120)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc302)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc303)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc302)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc127)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc303)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc305)
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc306)
        %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc307)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc131)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc131)
        cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc305)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc133)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc306)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc135)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc135)
        cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
        %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc136)
        %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
        %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc138)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc138)
        %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc136)
        cir.store %20, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc308)
        cir.scope {
          %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc143)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc144)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc144)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc310)
          cir.if %24 {
            %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc146)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc147)
            cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc146)
          } loc(#loc311)
        } loc(#loc309)
        cir.scope {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc150)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc150)
          cir.store %22, %8 : !u64i, !cir.ptr<!u64i> loc(#loc313)
          cir.for : cond {
            %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc152)
            %24 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc153)
            %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc153)
            %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc314)
            cir.condition(%26) loc(#loc154)
          } body {
            cir.scope {
              cir.scope {
                %23 = cir.const #cir.int<50> : !u64i loc(#loc317)
                %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc160)
                %25 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc161)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc161)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
                %28 = cir.const #cir.int<1> : !u64i loc(#loc318)
                %29 = cir.const #cir.int<50> : !u64i loc(#loc319)
                %30 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc166)
                %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc160)
                %32 = cir.cmp(ne, %23, %31) : !u64i, !cir.bool loc(#loc320)
                cir.if %32 {
                  %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc169)
                  %34 = cir.const #cir.int<1> : !s32i loc(#loc170)
                  cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc169)
                } loc(#loc321)
              } loc(#loc316)
            } loc(#loc315)
            cir.yield loc(#loc149)
          } step {
            %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc171)
            %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc172)
            cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc322)
            cir.yield loc(#loc312)
          } loc(#loc312)
        } loc(#loc312)
        cir.scope {
          %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc175)
          %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc175)
          cir.if %22 {
            %23 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc177)
            %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc178)
          } loc(#loc324)
        } loc(#loc323)
      } loc(#loc304)
    } loc(#loc301)
    cir.return loc(#loc114)
  } loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc179)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc326)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc185)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc187)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc187)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc187)
    %7 = cir.ternary(%6, true {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc187)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc187)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc187)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc187)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc187)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc187)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc187)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc187)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc187)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc187)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc187)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc187)
      cir.yield %20 : !u32i loc(#loc187)
    }, false {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc187)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc187)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc187)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc187)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc187)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc187)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc187)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc187)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc187)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc187)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc187)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc187)
      %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc187)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc187)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc187)
      %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc187)
      cir.yield %24 : !u32i loc(#loc187)
    }) : (!cir.bool) -> !u32i loc(#loc187)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc187)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc330)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc331)
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
      cir.store %11, %9 : !s32i, !cir.ptr<!s32i> loc(#loc330)
      %12 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc194)
      cir.store %12, %10 : !s32i, !cir.ptr<!s32i> loc(#loc331)
      cir.scope {
        %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc333)
        %14 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc334)
        %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc335)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc198)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc198)
        cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc333)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc200)
        cir.store %18, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc334)
        %19 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc179)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc179)
        cir.store %20, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc335)
        cir.scope {
          %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc204)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc205)
          %23 = cir.cmp(gt, %21, %22) : !s32i, !cir.bool loc(#loc337)
          %24 = cir.ternary(%23, true {
            %25 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc207)
            %26 = cir.const #cir.int<20> : !s32i loc(#loc208)
            %27 = cir.cmp(le, %25, %26) : !s32i, !cir.bool loc(#loc338)
            %28 = cir.ternary(%27, true {
              %29 = cir.const #true loc(#loc206)
              cir.yield %29 : !cir.bool loc(#loc206)
            }, false {
              %29 = cir.const #false loc(#loc206)
              cir.yield %29 : !cir.bool loc(#loc206)
            }) : (!cir.bool) -> !cir.bool loc(#loc206)
            cir.yield %28 : !cir.bool loc(#loc206)
          }, false {
            %25 = cir.const #false loc(#loc206)
            cir.yield %25 : !cir.bool loc(#loc206)
          }) : (!cir.bool) -> !cir.bool loc(#loc206)
          cir.if %24 {
            %25 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc210)
            %26 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
            %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc212)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc212)
            %29 = cir.call @fopen(%26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc210)
            cir.store %29, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc340)
            cir.scope {
              %30 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc217)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc218)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc218)
              %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc342)
              cir.if %33 {
                %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc220)
                %35 = cir.const #cir.int<1> : !s32i loc(#loc221)
                cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc220)
              } loc(#loc343)
            } loc(#loc341)
            cir.scope {
              %30 = cir.const #cir.int<0> : !s32i loc(#loc224)
              %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc224)
              cir.store %31, %13 : !u64i, !cir.ptr<!u64i> loc(#loc345)
              cir.for : cond {
                %32 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc226)
                %33 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc227)
                %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc346)
                cir.condition(%35) loc(#loc228)
              } body {
                cir.scope {
                  cir.scope {
                    %32 = cir.const #cir.int<50> : !u64i loc(#loc349)
                    %33 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc234)
                    %34 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc235)
                    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc235)
                    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc235)
                    %37 = cir.const #cir.int<1> : !u64i loc(#loc350)
                    %38 = cir.const #cir.int<50> : !u64i loc(#loc351)
                    %39 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc240)
                    %40 = cir.call @fwrite(%36, %37, %38, %39) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc234)
                    %41 = cir.cmp(ne, %32, %40) : !u64i, !cir.bool loc(#loc352)
                    cir.if %41 {
                      %42 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc242)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc243)
                      cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc242)
                    } loc(#loc353)
                  } loc(#loc348)
                } loc(#loc347)
                cir.yield loc(#loc223)
              } step {
                %32 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc244)
                %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc245)
                cir.store %33, %13 : !u64i, !cir.ptr<!u64i> loc(#loc354)
                cir.yield loc(#loc344)
              } loc(#loc344)
            } loc(#loc344)
            cir.scope {
              %30 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc248)
              %31 = cir.cast(ptr_to_bool, %30 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc248)
              cir.if %31 {
                %32 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc250)
                %33 = cir.call @fclose(%32) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc251)
              } loc(#loc356)
            } loc(#loc355)
          } loc(#loc339)
        } loc(#loc336)
      } loc(#loc332)
    } loc(#loc329)
    cir.return loc(#loc181)
  } loc(#loc325)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":37:36)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":38:37)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":735:1)
#loc10 = loc("/usr/include/stdio.h":736:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:48)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":58:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":26:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":28:14)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":28:13)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":28:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":30:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":30:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":31:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":57:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":32:9)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":32:25)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":33:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":33:21)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":34:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":56:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":35:13)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":35:24)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":36:13)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":36:27)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":37:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":38:21)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":38:27)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":38:13)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":38:41)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":39:13)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":42:13)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":39:17)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":39:26)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":40:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":41:17)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":41:22)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:13)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":51:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:22)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:18)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:25)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:37)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:27)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":46:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:17)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":50:17)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:21)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:36)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:41)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:58)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:69)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:72)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:87)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:90)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:95)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":48:17)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":49:21)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":49:26)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:45)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:44)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":52:13)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":55:13)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":52:17)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":53:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":54:24)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":54:17)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":137:1)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":141:1)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":139:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":139:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":140:5)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":140:13)
#loc83 = loc("/usr/include/stdlib.h":575:1)
#loc84 = loc("/usr/include/stdlib.h":575:41)
#loc85 = loc("/usr/include/time.h":76:1)
#loc86 = loc("/usr/include/time.h":76:38)
#loc87 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc88 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":156:15)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":158:15)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":161:15)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":163:15)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":151:1)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":166:1)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":152:1)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":154:27)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":154:22)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":154:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":156:5)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":157:5)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":157:53)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":158:5)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":161:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":162:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":162:52)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":163:5)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":165:12)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":165:5)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":65:1)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":99:1)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":67:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":67:9)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":69:14)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":69:13)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":69:5)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":71:13)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":71:5)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":72:5)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":98:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":73:9)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":73:25)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":74:9)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":74:21)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":75:9)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":97:9)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":76:13)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":76:24)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":77:13)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":77:27)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":78:13)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":78:36)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":79:21)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":79:27)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":79:37)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":79:13)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":79:41)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":80:13)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":83:13)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":80:17)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":80:26)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":81:13)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":82:17)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":82:22)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:13)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":92:13)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:22)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:18)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:25)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:37)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:27)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":87:13)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:17)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":91:17)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:21)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:36)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:41)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:48)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:58)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:69)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:72)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:87)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:90)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:95)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":89:17)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":90:21)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":90:26)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:45)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:44)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":93:13)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":96:13)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":93:17)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":94:13)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":95:24)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":95:17)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":115:36)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":102:1)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":135:1)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":104:5)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":104:9)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":106:14)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":106:13)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":106:5)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":108:13)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":108:5)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":109:5)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":134:5)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":110:9)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":110:25)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":111:9)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":111:21)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":112:9)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":133:9)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":113:13)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":113:24)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":114:13)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":114:27)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":115:13)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:13)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":132:13)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:17)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:25)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:27)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:30)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:39)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":118:13)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":119:25)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":119:31)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":119:41)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":119:17)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":119:45)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":120:17)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":123:17)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":120:21)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":120:30)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":121:17)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":122:21)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":122:26)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:17)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":127:17)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:26)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:22)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:29)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:41)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:31)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":125:17)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:21)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:108)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:25)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:40)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:45)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:52)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:62)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:73)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:76)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:91)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:94)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:99)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:102)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:107)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:49)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:48)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":128:17)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":131:17)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":128:21)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":129:17)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":130:28)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":130:21)
#loc252 = loc(fused[#loc1, #loc2])
#loc253 = loc(fused[#loc4, #loc5])
#loc254 = loc(fused[#loc7, #loc8])
#loc255 = loc(fused[#loc9, #loc10])
#loc256 = loc(fused[#loc12, #loc13])
#loc257 = loc(fused[#loc14, #loc15])
#loc258 = loc(fused[#loc16, #loc17])
#loc259 = loc(fused[#loc20, #loc18])
#loc260 = loc(fused[#loc22, #loc21])
#loc261 = loc(fused[#loc23, #loc24])
#loc262 = loc(fused[#loc25, #loc26])
#loc263 = loc(fused[#loc27, #loc28])
#loc264 = loc(fused[#loc29, #loc30])
#loc265 = loc(fused[#loc31, #loc32])
#loc266 = loc(fused[#loc33, #loc34])
#loc267 = loc(fused[#loc35, #loc3])
#loc268 = loc(fused[#loc38, #loc39])
#loc269 = loc(fused[#loc40, #loc41])
#loc270 = loc(fused[#loc42, #loc43])
#loc271 = loc(fused[#loc44, #loc41])
#loc272 = loc(fused[#loc47, #loc48])
#loc273 = loc(fused[#loc50, #loc49])
#loc274 = loc(fused[#loc51, #loc52])
#loc275 = loc(fused[#loc54, #loc48])
#loc276 = loc(fused[#loc55, #loc56])
#loc277 = loc(fused[#loc57, #loc58])
#loc278 = loc(fused[#loc60, #loc61])
#loc279 = loc(fused[#loc62, #loc63])
#loc280 = loc(fused[#loc57, #loc65])
#loc281 = loc(fused[#loc66, #loc56])
#loc282 = loc(fused[#loc70, #loc69])
#loc283 = loc(fused[#loc71, #loc72])
#loc284 = loc(fused[#loc74, #loc72])
#loc285 = loc(fused[#loc77, #loc78])
#loc286 = loc(fused[#loc79, #loc80])
#loc287 = loc(fused[#loc81, #loc82])
#loc288 = loc(fused[#loc83, #loc84])
#loc289 = loc(fused[#loc85, #loc86])
#loc290 = loc(fused[#loc87, #loc88])
#loc291 = loc(fused[#loc93, #loc94])
#loc294 = loc(fused[#loc104, #loc105])
#loc295 = loc(fused[#loc108, #loc109])
#loc296 = loc(fused[#loc112, #loc111])
#loc297 = loc(fused[#loc113, #loc114])
#loc298 = loc(fused[#loc115, #loc116])
#loc299 = loc(fused[#loc119, #loc117])
#loc300 = loc(fused[#loc121, #loc120])
#loc301 = loc(fused[#loc122, #loc123])
#loc302 = loc(fused[#loc124, #loc125])
#loc303 = loc(fused[#loc126, #loc127])
#loc304 = loc(fused[#loc128, #loc129])
#loc305 = loc(fused[#loc130, #loc131])
#loc306 = loc(fused[#loc132, #loc133])
#loc307 = loc(fused[#loc134, #loc135])
#loc308 = loc(fused[#loc139, #loc140])
#loc309 = loc(fused[#loc141, #loc142])
#loc310 = loc(fused[#loc143, #loc144])
#loc311 = loc(fused[#loc145, #loc142])
#loc312 = loc(fused[#loc148, #loc149])
#loc313 = loc(fused[#loc151, #loc150])
#loc314 = loc(fused[#loc152, #loc153])
#loc315 = loc(fused[#loc155, #loc149])
#loc316 = loc(fused[#loc156, #loc157])
#loc317 = loc(fused[#loc158, #loc159])
#loc318 = loc(fused[#loc162, #loc163])
#loc319 = loc(fused[#loc164, #loc165])
#loc320 = loc(fused[#loc158, #loc167])
#loc321 = loc(fused[#loc168, #loc157])
#loc322 = loc(fused[#loc172, #loc171])
#loc323 = loc(fused[#loc173, #loc174])
#loc324 = loc(fused[#loc176, #loc174])
#loc325 = loc(fused[#loc180, #loc181])
#loc326 = loc(fused[#loc182, #loc183])
#loc327 = loc(fused[#loc186, #loc184])
#loc328 = loc(fused[#loc188, #loc187])
#loc329 = loc(fused[#loc189, #loc190])
#loc330 = loc(fused[#loc191, #loc192])
#loc331 = loc(fused[#loc193, #loc194])
#loc332 = loc(fused[#loc195, #loc196])
#loc333 = loc(fused[#loc197, #loc198])
#loc334 = loc(fused[#loc199, #loc200])
#loc335 = loc(fused[#loc201, #loc179])
#loc336 = loc(fused[#loc202, #loc203])
#loc337 = loc(fused[#loc204, #loc205])
#loc338 = loc(fused[#loc207, #loc208])
#loc339 = loc(fused[#loc209, #loc203])
#loc340 = loc(fused[#loc213, #loc214])
#loc341 = loc(fused[#loc215, #loc216])
#loc342 = loc(fused[#loc217, #loc218])
#loc343 = loc(fused[#loc219, #loc216])
#loc344 = loc(fused[#loc222, #loc223])
#loc345 = loc(fused[#loc225, #loc224])
#loc346 = loc(fused[#loc226, #loc227])
#loc347 = loc(fused[#loc229, #loc223])
#loc348 = loc(fused[#loc230, #loc231])
#loc349 = loc(fused[#loc232, #loc233])
#loc350 = loc(fused[#loc236, #loc237])
#loc351 = loc(fused[#loc238, #loc239])
#loc352 = loc(fused[#loc232, #loc241])
#loc353 = loc(fused[#loc242, #loc231])
#loc354 = loc(fused[#loc245, #loc244])
#loc355 = loc(fused[#loc246, #loc247])
#loc356 = loc(fused[#loc249, #loc247])
