!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":119:10)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":119:14)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":119:20)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":119:32)
#loc156 = loc(fused[#loc59, #loc60])
#loc157 = loc(fused[#loc61, #loc62])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc134)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc135)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc136)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc138)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc141)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc19)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc141)
    cir.store %4, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc141)
    cir.br ^bb2 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc26)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc26)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc26)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc26)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc26)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc26)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc26)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc135)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc28)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc145)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc146)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc34)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb5 loc(#loc31)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc148)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %26 = cir.binop(rem, %24, %25) : !s32i loc(#loc149)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc42)
    cir.return loc(#loc13)
  } loc(#loc139)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc150)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc153)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func @main(%arg0: !s32i loc(fused[#loc59, #loc60]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc65)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc65)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc66)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_modulo_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE369_Divide_by_Zero__int_fgets_modulo_18_good() : () -> () loc(#loc68)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_modulo_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call @CWE369_Divide_by_Zero__int_fgets_modulo_18_bad() : () -> () loc(#loc72)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.return %17 : !s32i loc(#loc160)
  } loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc77)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc163)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc85)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc163)
    cir.store %4, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc163)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc92)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc92)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc92)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc92)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc92)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc92)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc92)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc92)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc135)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc94)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc95)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc168)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc100)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb5 loc(#loc97)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc103)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb5 loc(#loc90)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc90)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc170)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc171)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %26 = cir.cmp(ne, %24, %25) : !s32i, !cir.bool loc(#loc172)
    cir.brcond %26 ^bb9, ^bb10 loc(#loc173)
  ^bb9:  // pred: ^bb8
    %27 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %29 = cir.binop(rem, %27, %28) : !s32i loc(#loc174)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc116)
    cir.br ^bb11 loc(#loc112)
  ^bb10:  // pred: ^bb8
    %30 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc77)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb11 loc(#loc108)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc108)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc79)
  } loc(#loc161)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc123)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<7> : !s32i loc(#loc127)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.br ^bb2 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc181)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc133)
    cir.return loc(#loc119)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":41:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":24:1)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":48:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":26:5)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":26:9)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":32:9)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":32:45)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":28:13)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":28:12)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":28:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":29:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":29:10)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":34:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":42:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":34:19)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":34:32)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":34:49)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":34:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":34:59)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":35:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":38:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":40:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":37:25)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":37:20)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":37:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":37:36)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":41:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":44:5)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":44:10)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":47:18)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":47:24)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":47:5)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":104:1)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":108:1)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":106:5)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":106:13)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":107:5)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":107:13)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":124:15)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":126:15)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":129:15)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":131:15)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":119:1)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":134:1)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":120:1)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":122:27)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":122:22)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":122:5)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":124:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":125:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":125:53)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":126:5)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":129:5)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":130:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":130:52)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":131:5)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":133:12)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":133:5)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":84:19)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":55:1)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":86:1)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":57:5)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":57:9)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":63:9)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":63:45)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":59:13)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":59:12)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":59:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":60:5)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":60:10)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":65:9)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":73:9)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":65:19)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":65:32)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":65:49)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":65:13)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":65:59)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":66:9)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":69:9)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":71:9)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":68:25)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":68:20)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":68:13)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":68:36)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":72:23)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":72:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":75:5)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":75:10)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":78:5)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":85:5)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":78:9)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":78:17)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":79:5)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":81:5)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":83:5)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":80:22)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":80:28)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":80:9)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":84:9)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":89:1)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":102:1)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":91:5)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":91:9)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":93:13)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":93:12)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":93:5)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":94:5)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":94:10)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":97:12)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":97:5)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":98:5)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":98:10)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":101:18)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":101:24)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_18.c":101:5)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc5, #loc6])
#loc137 = loc(fused[#loc7, #loc8])
#loc138 = loc(fused[#loc10, #loc11])
#loc139 = loc(fused[#loc12, #loc13])
#loc140 = loc(fused[#loc14, #loc15])
#loc141 = loc(fused[#loc16, #loc17])
#loc142 = loc(fused[#loc20, #loc18])
#loc143 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc28, #loc29])
#loc146 = loc(fused[#loc30, #loc31, #loc32, #loc24])
#loc147 = loc(fused[#loc35, #loc36])
#loc148 = loc(fused[#loc38, #loc39])
#loc149 = loc(fused[#loc40, #loc41])
#loc150 = loc(fused[#loc43, #loc44])
#loc151 = loc(fused[#loc45, #loc46])
#loc152 = loc(fused[#loc47, #loc48])
#loc153 = loc(fused[#loc49, #loc50])
#loc154 = loc(fused[#loc51, #loc52])
#loc155 = loc(fused[#loc57, #loc58])
#loc158 = loc(fused[#loc68, #loc69])
#loc159 = loc(fused[#loc72, #loc73])
#loc160 = loc(fused[#loc76, #loc75])
#loc161 = loc(fused[#loc78, #loc79])
#loc162 = loc(fused[#loc80, #loc81])
#loc163 = loc(fused[#loc82, #loc83])
#loc164 = loc(fused[#loc86, #loc84])
#loc165 = loc(fused[#loc87, #loc88])
#loc166 = loc(fused[#loc89, #loc90])
#loc167 = loc(fused[#loc94, #loc95])
#loc168 = loc(fused[#loc96, #loc97, #loc98, #loc90])
#loc169 = loc(fused[#loc101, #loc102])
#loc170 = loc(fused[#loc105, #loc106])
#loc171 = loc(fused[#loc107, #loc108])
#loc172 = loc(fused[#loc109, #loc110])
#loc173 = loc(fused[#loc111, #loc112, #loc113, #loc108])
#loc174 = loc(fused[#loc114, #loc115])
#loc175 = loc(fused[#loc118, #loc119])
#loc176 = loc(fused[#loc120, #loc121])
#loc177 = loc(fused[#loc124, #loc122])
#loc178 = loc(fused[#loc125, #loc126])
#loc179 = loc(fused[#loc128, #loc127])
#loc180 = loc(fused[#loc129, #loc130])
#loc181 = loc(fused[#loc131, #loc132])
