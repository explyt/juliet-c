!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":89:10)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":89:14)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":89:20)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":89:32)
#loc126 = loc(fused[#loc56, #loc57])
#loc127 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc109)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc114)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc13)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc13)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc13)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc13)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.scope {
      cir.while {
        %10 = cir.const #cir.int<1> : !s32i loc(#loc18)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc18)
        cir.condition(%11) loc(#loc18)
      } do {
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
        %12 = cir.const #cir.int<65> : !s32i loc(#loc20)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc21)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc21)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc21)
        cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc117)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc25)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
        %20 = cir.const #cir.int<100> : !s32i loc(#loc27)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc27)
        %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc29)
        cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc118)
        cir.break loc(#loc30)
      } loc(#loc116)
    } loc(#loc116)
    cir.scope {
      %10 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc120)
      %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc120)
      cir.store %11, %10 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc120)
      %12 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc35)
      %13 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc36)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
      %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
      %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      %20 = cir.call @snprintf(%13, %16, %18, %19) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc35)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    } loc(#loc119)
    cir.return loc(#loc9)
  } loc(#loc112)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc43)
  } loc(#loc121)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc123)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.return %17 : !s32i loc(#loc130)
  } loc(#loc125)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc79)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc79)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc79)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc79)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc79)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.scope {
      cir.while {
        %10 = cir.const #cir.int<1> : !s32i loc(#loc84)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc84)
        cir.condition(%11) loc(#loc84)
      } do {
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
        %12 = cir.const #cir.int<65> : !s32i loc(#loc86)
        %13 = cir.const #cir.int<50> : !s32i loc(#loc87)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc88)
        %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc87)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc87)
        cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc136)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc91)
        %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc91)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
        %20 = cir.const #cir.int<50> : !s32i loc(#loc93)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc94)
        %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc93)
        %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc95)
        cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc137)
        cir.break loc(#loc96)
      } loc(#loc135)
    } loc(#loc135)
    cir.scope {
      %10 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc139)
      %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc139)
      cir.store %11, %10 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc139)
      %12 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc101)
      %13 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc102)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc103)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc103)
      %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc105)
      %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc105)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      %20 = cir.call @snprintf(%13, %16, %18, %19) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc101)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    } loc(#loc138)
    cir.return loc(#loc75)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":44:38)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":29:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":47:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":31:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":31:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":32:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":32:33)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":33:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":33:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":40:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":34:11)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":37:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":37:22)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":37:27)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":37:31)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":37:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":37:32)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":38:23)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":38:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":38:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":38:18)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":38:19)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":39:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":41:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":46:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":42:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":42:25)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":44:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":44:18)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":44:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":44:31)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":44:44)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":45:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":45:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":74:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":77:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":76:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":76:13)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":94:15)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":96:15)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":99:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":101:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":89:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":104:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":90:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":92:27)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":92:22)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":92:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":94:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":95:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":95:77)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":96:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":99:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":100:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":100:76)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":101:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":103:12)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":103:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":54:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":72:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":56:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":56:12)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":57:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":57:33)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":58:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":58:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":59:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":65:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":59:11)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":62:16)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":62:22)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":62:27)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":62:30)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":62:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":62:31)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":63:22)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":63:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":63:14)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":63:17)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":63:18)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":64:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":66:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":71:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":67:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":67:25)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":69:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":69:18)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":69:24)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":69:31)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":69:38)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":69:44)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":70:19)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_16.c":70:9)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc6, #loc7])
#loc112 = loc(fused[#loc8, #loc9])
#loc113 = loc(fused[#loc10, #loc11])
#loc114 = loc(fused[#loc12, #loc13])
#loc115 = loc(fused[#loc15, #loc14])
#loc116 = loc(fused[#loc16, #loc17])
#loc117 = loc(fused[#loc23, #loc24])
#loc118 = loc(fused[#loc26, #loc25])
#loc119 = loc(fused[#loc31, #loc32])
#loc120 = loc(fused[#loc33, #loc34])
#loc121 = loc(fused[#loc42, #loc43])
#loc122 = loc(fused[#loc44, #loc45])
#loc123 = loc(fused[#loc46, #loc47])
#loc124 = loc(fused[#loc48, #loc49])
#loc125 = loc(fused[#loc54, #loc55])
#loc128 = loc(fused[#loc65, #loc66])
#loc129 = loc(fused[#loc69, #loc70])
#loc130 = loc(fused[#loc73, #loc72])
#loc131 = loc(fused[#loc74, #loc75])
#loc132 = loc(fused[#loc76, #loc77])
#loc133 = loc(fused[#loc78, #loc79])
#loc134 = loc(fused[#loc81, #loc80])
#loc135 = loc(fused[#loc82, #loc83])
#loc136 = loc(fused[#loc89, #loc90])
#loc137 = loc(fused[#loc92, #loc91])
#loc138 = loc(fused[#loc97, #loc98])
#loc139 = loc(fused[#loc99, #loc100])
