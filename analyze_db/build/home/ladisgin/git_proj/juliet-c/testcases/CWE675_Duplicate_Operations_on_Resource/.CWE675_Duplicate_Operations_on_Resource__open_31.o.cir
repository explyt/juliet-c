!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc83)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc85)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc86)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc87)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc15)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc18)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc89)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc19)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc20)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc90)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc21)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc25)
    cir.br ^bb1 loc(#loc92)
  ^bb1:  // pred: ^bb0
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.store %17, %1 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc29)
    cir.br ^bb2 loc(#loc27)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc7)
  } loc(#loc84)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc95)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc36)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc97)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc98)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc99)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc46)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc36)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc36)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc49)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc101)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc50)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc51)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc102)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc52)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc58)
    cir.br ^bb2 loc(#loc56)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc38)
  } loc(#loc96)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc107)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc108)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc68)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc70)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc70)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc71)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc72)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc110)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc73)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc74)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc111)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc75)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc79)
    cir.br ^bb1 loc(#loc113)
  ^bb1:  // pred: ^bb0
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.store %17, %1 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.br ^bb2 loc(#loc81)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc60)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_31.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:17)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":31:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":44:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":39:9)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":39:24)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":40:9)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":40:20)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":33:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":33:9)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":34:13)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":34:12)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":34:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:39)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:46)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:55)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:63)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:12)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:5)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:71)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":37:11)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":37:5)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":38:5)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":43:5)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":42:15)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":42:9)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":82:1)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":86:1)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":84:5)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":84:13)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":85:5)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":85:13)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:17)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":51:1)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":63:1)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":58:9)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":58:24)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":59:9)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":59:20)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":53:5)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":53:9)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":54:13)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":54:12)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":54:5)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:40)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:47)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:56)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:64)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:12)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:5)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:72)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":57:5)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":62:5)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":61:15)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":61:9)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":66:1)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":80:1)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":74:9)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":74:24)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":75:9)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":75:20)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":68:5)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":68:9)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":69:13)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":69:12)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":69:5)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:17)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:39)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:46)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:55)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:63)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:12)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:5)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:71)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":72:11)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":72:5)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":73:5)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":79:5)
#loc82 = loc(fused[#loc1, #loc2])
#loc83 = loc(fused[#loc4, #loc5])
#loc84 = loc(fused[#loc6, #loc7])
#loc85 = loc(fused[#loc8, #loc9])
#loc86 = loc(fused[#loc10, #loc11])
#loc87 = loc(fused[#loc12, #loc13])
#loc88 = loc(fused[#loc16, #loc14])
#loc89 = loc(fused[#loc17, #loc18])
#loc90 = loc(fused[#loc19, #loc20])
#loc91 = loc(fused[#loc22, #loc23])
#loc92 = loc(fused[#loc26, #loc27])
#loc93 = loc(fused[#loc30, #loc31])
#loc94 = loc(fused[#loc32, #loc33])
#loc95 = loc(fused[#loc34, #loc35])
#loc96 = loc(fused[#loc37, #loc38])
#loc97 = loc(fused[#loc39, #loc40])
#loc98 = loc(fused[#loc41, #loc42])
#loc99 = loc(fused[#loc43, #loc44])
#loc100 = loc(fused[#loc47, #loc45])
#loc101 = loc(fused[#loc48, #loc49])
#loc102 = loc(fused[#loc50, #loc51])
#loc103 = loc(fused[#loc53, #loc54])
#loc104 = loc(fused[#loc55, #loc56])
#loc105 = loc(fused[#loc59, #loc60])
#loc106 = loc(fused[#loc61, #loc62])
#loc107 = loc(fused[#loc63, #loc64])
#loc108 = loc(fused[#loc65, #loc66])
#loc109 = loc(fused[#loc69, #loc67])
#loc110 = loc(fused[#loc71, #loc72])
#loc111 = loc(fused[#loc73, #loc74])
#loc112 = loc(fused[#loc76, #loc77])
#loc113 = loc(fused[#loc80, #loc81])
