!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc143)
  cir.func private  @printLongLongLine(!s64i) loc(#loc144)
  cir.func no_proto  @CWE401_Memory_Leak__int64_t_calloc_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc148)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc147)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc148)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc15)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc149)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc20)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc21)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc151)
      %7 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc22)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc23)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc23)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc152)
      %11 = cir.call @calloc(%9, %10) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc153)
      cir.store %12, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc154)
      cir.scope {
        %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc31)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s64i>, !s32i loc(#loc156)
        %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc32)
        cir.if %27 {
          %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
          %29 = cir.const #cir.int<1> : !s32i loc(#loc35)
          %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc36)
          cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
        } loc(#loc157)
      } loc(#loc155)
      %13 = cir.const #cir.int<5> : !s64i loc(#loc37)
      %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc38)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc39)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc40)
      cir.store %13, %16 : !s64i, !cir.ptr<!s64i> loc(#loc158)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc42)
      %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc43)
      %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc41)
      cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc44)
      %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc45)
      %22 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc46)
      cir.store %21, %22 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc159)
    } loc(#loc150)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc161)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc51)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc52)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc161)
    } loc(#loc160)
    cir.return loc(#loc8)
  } loc(#loc145)
  cir.func no_proto  @CWE401_Memory_Leak__int64_t_calloc_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc162)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc168)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc167)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc168)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc67)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc169)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc171)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc72)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc73)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc171)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc74)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc74)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc74)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc74)
      %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc74)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc74)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc74)
      cir.store %13, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc172)
      %14 = cir.const #cir.int<5> : !s64i loc(#loc76)
      %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc77)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !s32i), !cir.ptr<!s64i> loc(#loc79)
      cir.store %14, %17 : !s64i, !cir.ptr<!s64i> loc(#loc173)
      %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc80)
      %19 = cir.const #cir.int<0> : !s32i loc(#loc81)
      %20 = cir.ptr_stride(%18 : !cir.ptr<!s64i>, %19 : !s32i), !cir.ptr<!s64i> loc(#loc82)
      %21 = cir.load %20 : !cir.ptr<!s64i>, !s64i loc(#loc80)
      cir.call @printLongLongLine(%21) : (!s64i) -> () loc(#loc83)
      %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc84)
      %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc85)
      cir.store %22, %23 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc174)
    } loc(#loc170)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc176)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc90)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc91)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc176)
    } loc(#loc175)
    cir.return loc(#loc60)
  } loc(#loc165)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc177)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc181)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc180)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc181)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc102)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc182)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc184)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc107)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc108)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc184)
      %7 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc109)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc110)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc110)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc185)
      %11 = cir.call @calloc(%9, %10) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc186)
      cir.store %12, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc187)
      cir.scope {
        %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc117)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc118)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s64i>, !s32i loc(#loc189)
        %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc119)
        cir.if %27 {
          %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
          %29 = cir.const #cir.int<1> : !s32i loc(#loc122)
          %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc123)
          cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
        } loc(#loc190)
      } loc(#loc188)
      %13 = cir.const #cir.int<5> : !s64i loc(#loc124)
      %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc125)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc126)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc127)
      cir.store %13, %16 : !s64i, !cir.ptr<!s64i> loc(#loc191)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc128)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc129)
      %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc130)
      %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc128)
      cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc131)
      %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc132)
      %22 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc133)
      cir.store %21, %22 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc192)
    } loc(#loc183)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc194)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc138)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc139)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc194)
      %7 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc140)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc141)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc141)
      cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc140)
    } loc(#loc193)
    cir.return loc(#loc95)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":45:1)
#loc9 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":26:5)
#loc10 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":26:15)
#loc11 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":27:5)
#loc12 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":27:28)
#loc13 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":28:5)
#loc14 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":28:28)
#loc15 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":29:12)
#loc16 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":29:5)
#loc17 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":30:5)
#loc18 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":39:5)
#loc19 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":31:9)
#loc20 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":31:27)
#loc21 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":31:26)
#loc22 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":33:27)
#loc23 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":33:34)
#loc24 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":33:39)
#loc25 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":33:53)
#loc26 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":33:54)
#loc27 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":33:9)
#loc28 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":34:9)
#loc29 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":34:37)
#loc30 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":34:13)
#loc31 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":34:21)
#loc32 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":34:18)
#loc33 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":34:27)
#loc34 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":34:28)
#loc35 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":34:34)
#loc36 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":34:33)
#loc37 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":36:19)
#loc38 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":36:9)
#loc39 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":36:14)
#loc40 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":36:15)
#loc41 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":37:27)
#loc42 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":37:32)
#loc43 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":37:33)
#loc44 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":37:9)
#loc45 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":38:21)
#loc46 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":38:10)
#loc47 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":38:9)
#loc48 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":40:5)
#loc49 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":44:5)
#loc50 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":41:9)
#loc51 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":41:27)
#loc52 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":41:26)
#loc53 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":98:1)
#loc54 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":102:1)
#loc55 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":100:5)
#loc56 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":100:13)
#loc57 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":101:5)
#loc58 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":101:13)
#loc59 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":52:1)
#loc60 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":72:1)
#loc61 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":54:5)
#loc62 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":54:15)
#loc63 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":55:5)
#loc64 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":55:28)
#loc65 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":56:5)
#loc66 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":56:28)
#loc67 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":57:12)
#loc68 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":57:5)
#loc69 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":58:5)
#loc70 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":66:5)
#loc71 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":59:9)
#loc72 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":59:27)
#loc73 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":59:26)
#loc74 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":61:27)
#loc75 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":61:9)
#loc76 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":63:19)
#loc77 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":63:9)
#loc78 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":63:14)
#loc79 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":63:15)
#loc80 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":64:27)
#loc81 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":64:32)
#loc82 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":64:33)
#loc83 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":64:9)
#loc84 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":65:21)
#loc85 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":65:10)
#loc86 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":65:9)
#loc87 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":67:5)
#loc88 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":71:5)
#loc89 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":68:9)
#loc90 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":68:27)
#loc91 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":68:26)
#loc92 = loc("/usr/include/stdlib.h":687:1)
#loc93 = loc("/usr/include/stdlib.h":687:32)
#loc94 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":75:1)
#loc95 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":96:1)
#loc96 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":77:5)
#loc97 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":77:15)
#loc98 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":78:5)
#loc99 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":78:28)
#loc100 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":79:5)
#loc101 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":79:28)
#loc102 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":80:12)
#loc103 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":80:5)
#loc104 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":81:5)
#loc105 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":90:5)
#loc106 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":82:9)
#loc107 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":82:27)
#loc108 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":82:26)
#loc109 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":84:27)
#loc110 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":84:34)
#loc111 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":84:39)
#loc112 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":84:53)
#loc113 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":84:54)
#loc114 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":84:9)
#loc115 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":85:9)
#loc116 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":85:37)
#loc117 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":85:13)
#loc118 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":85:21)
#loc119 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":85:18)
#loc120 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":85:27)
#loc121 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":85:28)
#loc122 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":85:34)
#loc123 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":85:33)
#loc124 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":87:19)
#loc125 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":87:9)
#loc126 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":87:14)
#loc127 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":87:15)
#loc128 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":88:27)
#loc129 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":88:32)
#loc130 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":88:33)
#loc131 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":88:9)
#loc132 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":89:21)
#loc133 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":89:10)
#loc134 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":89:9)
#loc135 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":91:5)
#loc136 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":95:5)
#loc137 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":92:9)
#loc138 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":92:27)
#loc139 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":92:26)
#loc140 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":94:9)
#loc141 = loc("CWE401_Memory_Leak__int64_t_calloc_32.c":94:14)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc9, #loc10])
#loc147 = loc(fused[#loc11, #loc12])
#loc148 = loc(fused[#loc13, #loc14])
#loc149 = loc(fused[#loc16, #loc15])
#loc150 = loc(fused[#loc17, #loc18])
#loc151 = loc(fused[#loc19, #loc20])
#loc152 = loc(fused[#loc24, #loc25])
#loc153 = loc(fused[#loc22, #loc26])
#loc154 = loc(fused[#loc27, #loc26])
#loc155 = loc(fused[#loc28, #loc29])
#loc156 = loc(fused[#loc30, #loc31])
#loc157 = loc(fused[#loc33, #loc29])
#loc158 = loc(fused[#loc38, #loc37])
#loc159 = loc(fused[#loc47, #loc45])
#loc160 = loc(fused[#loc48, #loc49])
#loc161 = loc(fused[#loc50, #loc51])
#loc162 = loc(fused[#loc53, #loc54])
#loc163 = loc(fused[#loc55, #loc56])
#loc164 = loc(fused[#loc57, #loc58])
#loc165 = loc(fused[#loc59, #loc60])
#loc166 = loc(fused[#loc61, #loc62])
#loc167 = loc(fused[#loc63, #loc64])
#loc168 = loc(fused[#loc65, #loc66])
#loc169 = loc(fused[#loc68, #loc67])
#loc170 = loc(fused[#loc69, #loc70])
#loc171 = loc(fused[#loc71, #loc72])
#loc172 = loc(fused[#loc75, #loc74])
#loc173 = loc(fused[#loc77, #loc76])
#loc174 = loc(fused[#loc86, #loc84])
#loc175 = loc(fused[#loc87, #loc88])
#loc176 = loc(fused[#loc89, #loc90])
#loc177 = loc(fused[#loc92, #loc93])
#loc178 = loc(fused[#loc94, #loc95])
#loc179 = loc(fused[#loc96, #loc97])
#loc180 = loc(fused[#loc98, #loc99])
#loc181 = loc(fused[#loc100, #loc101])
#loc182 = loc(fused[#loc103, #loc102])
#loc183 = loc(fused[#loc104, #loc105])
#loc184 = loc(fused[#loc106, #loc107])
#loc185 = loc(fused[#loc111, #loc112])
#loc186 = loc(fused[#loc109, #loc113])
#loc187 = loc(fused[#loc114, #loc113])
#loc188 = loc(fused[#loc115, #loc116])
#loc189 = loc(fused[#loc117, #loc118])
#loc190 = loc(fused[#loc120, #loc116])
#loc191 = loc(fused[#loc125, #loc124])
#loc192 = loc(fused[#loc134, #loc132])
#loc193 = loc(fused[#loc135, #loc136])
#loc194 = loc(fused[#loc137, #loc138])
