!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":152:10)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":152:14)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":152:20)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":152:32)
#loc280 = loc(fused[#loc108, #loc109])
#loc281 = loc(fused[#loc110, #loc111])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc240)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc241)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc242)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc243)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc244)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc245)
  cir.func private @printIntLine(!s32i) loc(#loc246)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc247)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc249)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc250)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc251)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc252)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc30)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    cir.br ^bb1 loc(#loc254)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<6> : !s32i loc(#loc34)
    cir.br ^bb2 loc(#loc32)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %6 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc32)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc35)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc255)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc249)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc249)
    cir.br ^bb6 loc(#loc256)
  ^bb6:  // pred: ^bb5
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc41)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc41)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc41)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc41)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc41)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc41)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc41)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc241)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc43)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc257)
    cir.brcond %22 ^bb7, ^bb8 loc(#loc258)
  ^bb7:  // pred: ^bb6
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc48)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc49)
    cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.br ^bb9 loc(#loc46)
  ^bb8:  // pred: ^bb6
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb9 loc(#loc39)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc37)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc53)
  ^bb12:  // pred: ^bb2
    %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb13 loc(#loc55)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc33)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc260)
  ^bb15:  // pred: ^bb14
    %29 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc58)
    %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc59)
    %32 = cir.const #cir.int<4> : !u64i loc(#loc261)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc262)
    %34 = cir.call @malloc(%33) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc263)
    cir.store %35, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc264)
    cir.br ^bb16 loc(#loc265)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %37 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc67)
    %39 = cir.cmp(eq, %36, %38) : !cir.ptr<!s32i>, !cir.bool loc(#loc266)
    cir.brcond %39 ^bb17, ^bb18 loc(#loc267)
  ^bb17:  // pred: ^bb16
    %40 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc69)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc71)
    cir.call @exit(%42) : (!s32i) -> () extra(#fn_attr) loc(#loc69)
    cir.br ^bb18 loc(#loc65)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc65)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc268)
  ^bb20:  // pred: ^bb19
    %43 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc74)
    cir.store %44, %1 : !u64i, !cir.ptr<!u64i> loc(#loc269)
    cir.br ^bb21 loc(#loc268)
  ^bb21:  // 2 preds: ^bb20, ^bb25
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc77)
    %48 = cir.cmp(lt, %45, %47) : !u64i, !cir.bool loc(#loc270)
    cir.brcond %48 ^bb22, ^bb26 loc(#loc78)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc271)
  ^bb23:  // pred: ^bb22
    %49 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %50 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
    %51 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s32i>, %51 : !u64i), !cir.ptr<!s32i> loc(#loc83)
    cir.store %49, %52 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.br ^bb24 loc(#loc73)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc73)
  ^bb25:  // pred: ^bb24
    %53 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc84)
    %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc85)
    cir.store %54, %1 : !u64i, !cir.ptr<!u64i> loc(#loc273)
    cir.br ^bb21 loc(#loc268)
  ^bb26:  // pred: ^bb21
    cir.br ^bb27 loc(#loc73)
  ^bb27:  // pred: ^bb26
    %55 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!s32i>, %56 : !s32i), !cir.ptr<!s32i> loc(#loc88)
    %58 = cir.load %57 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    cir.call @printIntLine(%58) : (!s32i) -> () loc(#loc89)
    %59 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc90)
    cir.call @free(%60) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc91)
    cir.br ^bb28 loc(#loc57)
  ^bb28:  // pred: ^bb27
    cir.return loc(#loc20)
  } loc(#loc248)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc275)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc94)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc276)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc96)
    cir.return loc(#loc93)
  } loc(#loc274)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc277)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc105)
  cir.func @main(%arg0: !s32i loc(fused[#loc108, #loc109]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc110, #loc111])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc281)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc107)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc112)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc113)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc114)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc114)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc115)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc102)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc282)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15_good() : () -> () loc(#loc117)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc103)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc104)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc283)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15_bad() : () -> () loc(#loc121)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc105)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc124)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    cir.return %17 : !s32i loc(#loc284)
  } loc(#loc279)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc286)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc287)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc288)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc135)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.br ^bb1 loc(#loc290)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc139)
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc137)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc141)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb6 loc(#loc143)
  ^bb5:  // pred: ^bb2
    %8 = cir.const #cir.int<20> : !s32i loc(#loc144)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb6 loc(#loc146)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc138)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc292)
  ^bb8:  // pred: ^bb7
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc149)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc150)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc293)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc294)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc149)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc295)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc296)
    cir.br ^bb9 loc(#loc297)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc158)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc158)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc298)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc299)
  ^bb10:  // pred: ^bb9
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc160)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc162)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc160)
    cir.br ^bb11 loc(#loc156)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc156)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc300)
  ^bb13:  // pred: ^bb12
    %23 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc165)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc301)
    cir.br ^bb14 loc(#loc300)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc167)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc168)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc302)
    cir.brcond %28 ^bb15, ^bb19 loc(#loc169)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc303)
  ^bb16:  // pred: ^bb15
    %29 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc173)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc174)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.br ^bb17 loc(#loc164)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc164)
  ^bb18:  // pred: ^bb17
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc176)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc305)
    cir.br ^bb14 loc(#loc300)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc164)
  ^bb20:  // pred: ^bb19
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc177)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc179)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc180)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc181)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc182)
    cir.br ^bb21 loc(#loc148)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc127)
  } loc(#loc285)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc307)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc308)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc309)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc192)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb1 loc(#loc311)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<6> : !s32i loc(#loc196)
    cir.br ^bb2 loc(#loc194)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc194)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc197)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.const #cir.int<20> : !s32i loc(#loc198)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.br ^bb6 loc(#loc200)
  ^bb5:  // pred: ^bb2
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc201)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc202)
    cir.br ^bb6 loc(#loc203)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc195)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc313)
  ^bb8:  // pred: ^bb7
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc206)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc207)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc314)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc315)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc206)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc316)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc317)
    cir.br ^bb9 loc(#loc318)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc214)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc215)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc215)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc319)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc320)
  ^bb10:  // pred: ^bb9
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc217)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc219)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc217)
    cir.br ^bb11 loc(#loc213)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc213)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc321)
  ^bb13:  // pred: ^bb12
    %23 = cir.const #cir.int<0> : !s32i loc(#loc222)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc222)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc322)
    cir.br ^bb14 loc(#loc321)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc224)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc225)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc323)
    cir.brcond %28 ^bb15, ^bb19 loc(#loc226)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc324)
  ^bb16:  // pred: ^bb15
    %29 = cir.const #cir.int<0> : !s32i loc(#loc228)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc229)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc230)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc231)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.br ^bb17 loc(#loc221)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc221)
  ^bb18:  // pred: ^bb17
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc232)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc233)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc326)
    cir.br ^bb14 loc(#loc321)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc221)
  ^bb20:  // pred: ^bb19
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc234)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc235)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc236)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc237)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc238)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc238)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc239)
    cir.br ^bb21 loc(#loc205)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc184)
  } loc(#loc306)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":41:23)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":47:19)
#loc11 = loc("/usr/include/stdlib.h":672:1)
#loc12 = loc("/usr/include/stdlib.h":672:45)
#loc13 = loc("/usr/include/stdlib.h":756:1)
#loc14 = loc("/usr/include/stdlib.h":756:70)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":23:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":64:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":32:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":32:45)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":51:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":51:16)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":52:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":52:14)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":25:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":25:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":27:13)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":27:12)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":27:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":28:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":49:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":28:12)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":30:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":31:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":43:5)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":34:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":42:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":34:19)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":34:32)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":34:49)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":34:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":34:59)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":35:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":38:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":40:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":37:25)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":37:20)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":37:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":37:36)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":41:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":44:5)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":47:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":48:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":50:5)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":63:5)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":55:28)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":55:35)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":55:42)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":55:52)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":55:53)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":55:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":56:9)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":56:43)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":56:13)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":56:27)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":56:33)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":56:34)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":56:40)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":56:39)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":57:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":60:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":57:18)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":57:14)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":57:21)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":57:33)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":57:23)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":58:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":59:29)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":59:13)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":59:24)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":59:25)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":57:40)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":57:39)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":61:22)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":61:33)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":61:34)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":61:9)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":62:14)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":62:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":136:1)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":140:1)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":138:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":138:14)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":139:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":139:14)
#loc98 = loc("/usr/include/stdlib.h":575:1)
#loc99 = loc("/usr/include/stdlib.h":575:41)
#loc100 = loc("/usr/include/time.h":76:1)
#loc101 = loc("/usr/include/time.h":76:38)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":157:15)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":159:15)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":162:15)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":164:15)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":152:1)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":167:1)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":153:1)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":155:27)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":155:22)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":155:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":157:5)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":158:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":158:70)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":159:5)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":162:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":163:5)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":163:69)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":164:5)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":166:12)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":166:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":71:1)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":101:1)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":88:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":88:16)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":89:9)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":89:14)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":73:5)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":73:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":75:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":75:12)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":75:5)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":76:5)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":86:5)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":76:12)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":78:5)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":80:19)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":80:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":81:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":84:16)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":84:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":85:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":87:5)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":100:5)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":92:28)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":92:35)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":92:42)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":92:52)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":92:53)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":92:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":93:9)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":93:43)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":93:13)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":93:27)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":93:33)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":93:34)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":93:40)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":93:39)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":94:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":97:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":94:18)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":94:14)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":94:21)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":94:33)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":94:23)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":95:9)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":96:29)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":96:13)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":96:24)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":96:25)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":94:40)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":94:39)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":98:22)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":98:33)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":98:34)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":98:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":99:14)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":99:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":104:1)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":134:1)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":121:9)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":121:16)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":122:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":122:14)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":106:5)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":106:9)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":108:13)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":108:12)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":108:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":109:5)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":119:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":109:12)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":111:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":113:16)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":113:9)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":114:9)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":117:19)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":117:9)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":118:9)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":120:5)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":133:5)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":125:28)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":125:35)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":125:42)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":125:52)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":125:53)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":125:9)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":126:9)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":126:43)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":126:13)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":126:27)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":126:33)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":126:34)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":126:40)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":126:39)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":127:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":130:9)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":127:18)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":127:14)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":127:21)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":127:33)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":127:23)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":128:9)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":129:29)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":129:13)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":129:24)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":129:25)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":127:40)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":127:39)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":131:22)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":131:33)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":131:34)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":131:9)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":132:14)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_15.c":132:9)
#loc240 = loc(fused[#loc1, #loc2])
#loc241 = loc(fused[#loc3, #loc4])
#loc242 = loc(fused[#loc5, #loc6])
#loc243 = loc(fused[#loc7, #loc8])
#loc244 = loc(fused[#loc11, #loc12])
#loc245 = loc(fused[#loc13, #loc14])
#loc246 = loc(fused[#loc15, #loc16])
#loc247 = loc(fused[#loc17, #loc18])
#loc248 = loc(fused[#loc19, #loc20])
#loc249 = loc(fused[#loc21, #loc22])
#loc250 = loc(fused[#loc23, #loc24])
#loc251 = loc(fused[#loc25, #loc26])
#loc252 = loc(fused[#loc27, #loc28])
#loc253 = loc(fused[#loc31, #loc29])
#loc254 = loc(fused[#loc32, #loc33])
#loc255 = loc(fused[#loc36, #loc37])
#loc256 = loc(fused[#loc38, #loc39])
#loc257 = loc(fused[#loc43, #loc44])
#loc258 = loc(fused[#loc45, #loc46, #loc47, #loc39])
#loc259 = loc(fused[#loc50, #loc51])
#loc260 = loc(fused[#loc56, #loc57])
#loc261 = loc(fused[#loc60, #loc61])
#loc262 = loc(fused[#loc59, #loc61])
#loc263 = loc(fused[#loc58, #loc62])
#loc264 = loc(fused[#loc63, #loc62])
#loc265 = loc(fused[#loc64, #loc65])
#loc266 = loc(fused[#loc66, #loc67])
#loc267 = loc(fused[#loc68, #loc65])
#loc268 = loc(fused[#loc72, #loc73])
#loc269 = loc(fused[#loc75, #loc74])
#loc270 = loc(fused[#loc76, #loc77])
#loc271 = loc(fused[#loc79, #loc73])
#loc272 = loc(fused[#loc81, #loc80])
#loc273 = loc(fused[#loc85, #loc84])
#loc274 = loc(fused[#loc92, #loc93])
#loc275 = loc(fused[#loc94, #loc95])
#loc276 = loc(fused[#loc96, #loc97])
#loc277 = loc(fused[#loc98, #loc99])
#loc278 = loc(fused[#loc100, #loc101])
#loc279 = loc(fused[#loc106, #loc107])
#loc282 = loc(fused[#loc117, #loc118])
#loc283 = loc(fused[#loc121, #loc122])
#loc284 = loc(fused[#loc125, #loc124])
#loc285 = loc(fused[#loc126, #loc127])
#loc286 = loc(fused[#loc128, #loc129])
#loc287 = loc(fused[#loc130, #loc131])
#loc288 = loc(fused[#loc132, #loc133])
#loc289 = loc(fused[#loc136, #loc134])
#loc290 = loc(fused[#loc137, #loc138])
#loc291 = loc(fused[#loc145, #loc144])
#loc292 = loc(fused[#loc147, #loc148])
#loc293 = loc(fused[#loc151, #loc152])
#loc294 = loc(fused[#loc150, #loc152])
#loc295 = loc(fused[#loc149, #loc153])
#loc296 = loc(fused[#loc154, #loc153])
#loc297 = loc(fused[#loc155, #loc156])
#loc298 = loc(fused[#loc157, #loc158])
#loc299 = loc(fused[#loc159, #loc156])
#loc300 = loc(fused[#loc163, #loc164])
#loc301 = loc(fused[#loc166, #loc165])
#loc302 = loc(fused[#loc167, #loc168])
#loc303 = loc(fused[#loc170, #loc164])
#loc304 = loc(fused[#loc172, #loc171])
#loc305 = loc(fused[#loc176, #loc175])
#loc306 = loc(fused[#loc183, #loc184])
#loc307 = loc(fused[#loc185, #loc186])
#loc308 = loc(fused[#loc187, #loc188])
#loc309 = loc(fused[#loc189, #loc190])
#loc310 = loc(fused[#loc193, #loc191])
#loc311 = loc(fused[#loc194, #loc195])
#loc312 = loc(fused[#loc199, #loc198])
#loc313 = loc(fused[#loc204, #loc205])
#loc314 = loc(fused[#loc208, #loc209])
#loc315 = loc(fused[#loc207, #loc209])
#loc316 = loc(fused[#loc206, #loc210])
#loc317 = loc(fused[#loc211, #loc210])
#loc318 = loc(fused[#loc212, #loc213])
#loc319 = loc(fused[#loc214, #loc215])
#loc320 = loc(fused[#loc216, #loc213])
#loc321 = loc(fused[#loc220, #loc221])
#loc322 = loc(fused[#loc223, #loc222])
#loc323 = loc(fused[#loc224, #loc225])
#loc324 = loc(fused[#loc227, #loc221])
#loc325 = loc(fused[#loc229, #loc228])
#loc326 = loc(fused[#loc233, #loc232])
