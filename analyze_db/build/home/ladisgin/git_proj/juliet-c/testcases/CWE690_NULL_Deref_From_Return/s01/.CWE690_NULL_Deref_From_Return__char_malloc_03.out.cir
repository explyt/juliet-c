!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":100:10)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":100:14)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":100:20)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":100:32)
#loc149 = loc(fused[#loc49, #loc50])
#loc150 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc132)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc137)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<5> : !s32i loc(#loc24)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc25)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc141)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc142)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc27)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
    %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc31)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb3 loc(#loc23)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc11)
  } loc(#loc133)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc143)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc146)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc46)
  cir.func @main(%arg0: !s32i loc(fused[#loc49, #loc50]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc51, #loc52])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc55)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc55)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc56)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__char_malloc_03_good : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call @CWE690_NULL_Deref_From_Return__char_malloc_03_good() : () -> () loc(#loc58)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc44)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__char_malloc_03_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call @CWE690_NULL_Deref_From_Return__char_malloc_03_bad() : () -> () loc(#loc62)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.return %17 : !s32i loc(#loc153)
  } loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc74)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc75)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc75)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc157)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc158)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc74)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<5> : !s32i loc(#loc82)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc83)
    %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc162)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb8 loc(#loc85)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc164)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
    %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc93)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc95)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc95)
    %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc98)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
    cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc98)
    cir.br ^bb6 loc(#loc89)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc89)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc81)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc81)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc69)
  } loc(#loc154)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc104)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc106)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc107)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc107)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc170)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc171)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc106)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<5> : !s32i loc(#loc114)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc115)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc175)
    cir.brcond %11 ^bb2, ^bb7 loc(#loc176)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc177)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
    %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc178)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc179)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc122)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc124)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc124)
    %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc127)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc127)
    cir.br ^bb5 loc(#loc118)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc113)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc113)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc101)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_03.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":32:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":23:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":36:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":25:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":25:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":26:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":26:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":28:20)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":28:27)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":28:30)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":28:41)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":28:42)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":28:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":29:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":35:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":29:8)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":29:11)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":30:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":32:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":32:16)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":33:19)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":33:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":34:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":34:14)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":85:1)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":89:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":87:5)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":87:14)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":88:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":88:14)
#loc39 = loc("/usr/include/stdlib.h":575:1)
#loc40 = loc("/usr/include/stdlib.h":575:41)
#loc41 = loc("/usr/include/time.h":76:1)
#loc42 = loc("/usr/include/time.h":76:38)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":105:15)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":107:15)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":110:15)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":112:15)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":100:1)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":115:1)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":101:1)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":103:27)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":103:22)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":103:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":105:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":106:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":106:56)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":107:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":110:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":111:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":111:55)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":112:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":114:12)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":114:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":52:19)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":43:1)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":64:1)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":45:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":45:12)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":46:12)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":46:5)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":48:20)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":48:27)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":48:30)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":48:41)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":48:42)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":48:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":49:5)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":63:5)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":49:8)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":49:11)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":50:5)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":53:5)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":55:5)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":52:9)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":57:9)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":62:9)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":57:13)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":57:21)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":58:9)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":59:13)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":59:20)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":59:26)
#loc96 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":60:23)
#loc97 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":60:13)
#loc98 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":61:13)
#loc99 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":61:18)
#loc100 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":67:1)
#loc101 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":83:1)
#loc102 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":69:5)
#loc103 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":69:12)
#loc104 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":70:12)
#loc105 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":70:5)
#loc106 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":72:20)
#loc107 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":72:27)
#loc108 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":72:30)
#loc109 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":72:41)
#loc110 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":72:42)
#loc111 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":72:5)
#loc112 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":73:5)
#loc113 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":82:5)
#loc114 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":73:8)
#loc115 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":73:11)
#loc116 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":74:5)
#loc117 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":76:9)
#loc118 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":81:9)
#loc119 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":76:13)
#loc120 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":76:21)
#loc121 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":77:9)
#loc122 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":78:13)
#loc123 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":78:20)
#loc124 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":78:26)
#loc125 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":79:23)
#loc126 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":79:13)
#loc127 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":80:13)
#loc128 = loc("CWE690_NULL_Deref_From_Return__char_malloc_03.c":80:18)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc6, #loc7])
#loc132 = loc(fused[#loc8, #loc9])
#loc133 = loc(fused[#loc10, #loc11])
#loc134 = loc(fused[#loc12, #loc13])
#loc135 = loc(fused[#loc15, #loc14])
#loc136 = loc(fused[#loc18, #loc19])
#loc137 = loc(fused[#loc17, #loc19])
#loc138 = loc(fused[#loc16, #loc20])
#loc139 = loc(fused[#loc21, #loc20])
#loc140 = loc(fused[#loc22, #loc23])
#loc141 = loc(fused[#loc24, #loc25])
#loc142 = loc(fused[#loc26, #loc23])
#loc143 = loc(fused[#loc33, #loc34])
#loc144 = loc(fused[#loc35, #loc36])
#loc145 = loc(fused[#loc37, #loc38])
#loc146 = loc(fused[#loc39, #loc40])
#loc147 = loc(fused[#loc41, #loc42])
#loc148 = loc(fused[#loc47, #loc48])
#loc151 = loc(fused[#loc58, #loc59])
#loc152 = loc(fused[#loc62, #loc63])
#loc153 = loc(fused[#loc66, #loc65])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc73, #loc72])
#loc157 = loc(fused[#loc76, #loc77])
#loc158 = loc(fused[#loc75, #loc77])
#loc159 = loc(fused[#loc74, #loc78])
#loc160 = loc(fused[#loc79, #loc78])
#loc161 = loc(fused[#loc80, #loc81])
#loc162 = loc(fused[#loc82, #loc83])
#loc163 = loc(fused[#loc84, #loc85, #loc86, #loc81])
#loc164 = loc(fused[#loc88, #loc89])
#loc165 = loc(fused[#loc90, #loc91])
#loc166 = loc(fused[#loc92, #loc89])
#loc167 = loc(fused[#loc100, #loc101])
#loc168 = loc(fused[#loc102, #loc103])
#loc169 = loc(fused[#loc105, #loc104])
#loc170 = loc(fused[#loc108, #loc109])
#loc171 = loc(fused[#loc107, #loc109])
#loc172 = loc(fused[#loc106, #loc110])
#loc173 = loc(fused[#loc111, #loc110])
#loc174 = loc(fused[#loc112, #loc113])
#loc175 = loc(fused[#loc114, #loc115])
#loc176 = loc(fused[#loc116, #loc113])
#loc177 = loc(fused[#loc117, #loc118])
#loc178 = loc(fused[#loc119, #loc120])
#loc179 = loc(fused[#loc121, #loc118])
