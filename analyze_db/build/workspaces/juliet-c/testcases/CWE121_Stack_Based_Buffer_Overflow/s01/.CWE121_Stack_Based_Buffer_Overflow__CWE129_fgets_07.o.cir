!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc343)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc344)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc345)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc346)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc347)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc348)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc350)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc343)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc353)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc356)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc356)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc356)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc34)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc34)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc34)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc34)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc34)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc34)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc34)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc34)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc345)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc36)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc358)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc41)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc42)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc360)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc45)
            } loc(#loc359)
          } loc(#loc357)
        } loc(#loc355)
      } loc(#loc354)
    } loc(#loc352)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc343)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc49)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc362)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc365)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc366)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc366)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc366)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc60)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc368)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc64)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc66)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc66)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc370)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc69)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc372)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc72)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc373)
                  cir.condition(%20) loc(#loc73)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc76)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc76)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc77)
                  } loc(#loc374)
                  cir.yield loc(#loc68)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc79)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc375)
                  cir.yield loc(#loc371)
                } loc(#loc371)
              } loc(#loc371)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc80)
            } loc(#loc369)
          } loc(#loc367)
        } loc(#loc364)
      } loc(#loc363)
    } loc(#loc361)
    cir.return loc(#loc16)
  } loc(#loc349)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc377)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc83)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc378)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc85)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc379)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc380)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc89)
    cir.return loc(#loc82)
  } loc(#loc376)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc92)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc382)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc98)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc343)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc102)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc103)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc385)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc388)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc388)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc388)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc112)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc112)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc112)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc112)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc112)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc112)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc112)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc112)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc345)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc114)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc390)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc120)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc123)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc123)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc124)
            } loc(#loc391)
          } loc(#loc389)
        } loc(#loc387)
      } loc(#loc386)
    } loc(#loc384)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc343)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc127)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc128)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc394)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc132)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc397)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc398)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc398)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc398)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc142)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc400)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc145)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc401)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc143)
                cir.yield %18 : !cir.bool loc(#loc143)
              }, false {
                %18 = cir.const #false loc(#loc143)
                cir.yield %18 : !cir.bool loc(#loc143)
              }) : (!cir.bool) -> !cir.bool loc(#loc143)
              cir.yield %17 : !cir.bool loc(#loc143)
            }, false {
              %14 = cir.const #false loc(#loc143)
              cir.yield %14 : !cir.bool loc(#loc143)
            }) : (!cir.bool) -> !cir.bool loc(#loc143)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc150)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc152)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc152)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc403)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc155)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc405)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc158)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc406)
                  cir.condition(%21) loc(#loc159)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc161)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc162)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc162)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc162)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc163)
                  } loc(#loc407)
                  cir.yield loc(#loc154)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                  %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc165)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc408)
                  cir.yield loc(#loc404)
                } loc(#loc404)
              } loc(#loc404)
            } else {
              %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc92)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc92)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc166)
            } loc(#loc402)
          } loc(#loc399)
        } loc(#loc396)
      } loc(#loc395)
    } loc(#loc393)
    cir.return loc(#loc94)
  } loc(#loc381)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc410)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc172)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc343)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc176)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc177)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc413)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc416)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc416)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc416)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc185)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc186)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc186)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc186)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc186)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc186)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc186)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc186)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc186)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc345)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc187)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc188)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc189)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc418)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc193)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc194)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc420)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc197)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc197)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc198)
            } loc(#loc419)
          } loc(#loc417)
        } loc(#loc415)
      } loc(#loc414)
    } loc(#loc412)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc343)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc201)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc202)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc422)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc425)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc426)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc426)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc426)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc212)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc213)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc428)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc216)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc429)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc214)
                cir.yield %18 : !cir.bool loc(#loc214)
              }, false {
                %18 = cir.const #false loc(#loc214)
                cir.yield %18 : !cir.bool loc(#loc214)
              }) : (!cir.bool) -> !cir.bool loc(#loc214)
              cir.yield %17 : !cir.bool loc(#loc214)
            }, false {
              %14 = cir.const #false loc(#loc214)
              cir.yield %14 : !cir.bool loc(#loc214)
            }) : (!cir.bool) -> !cir.bool loc(#loc214)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc221)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc222)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc223)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc223)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc431)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc226)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc433)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc229)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc434)
                  cir.condition(%21) loc(#loc230)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc233)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc233)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc234)
                  } loc(#loc435)
                  cir.yield loc(#loc225)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                  %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc236)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc436)
                  cir.yield loc(#loc432)
                } loc(#loc432)
              } loc(#loc432)
            } else {
              %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc237)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc237)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc238)
            } loc(#loc430)
          } loc(#loc427)
        } loc(#loc424)
      } loc(#loc423)
    } loc(#loc421)
    cir.return loc(#loc168)
  } loc(#loc409)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc438)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc244)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc343)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc248)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc249)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc441)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc253)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc253)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc254)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc255)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc443)
      } loc(#loc442)
    } loc(#loc440)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc343)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc259)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc260)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc445)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc448)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc449)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc449)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc449)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc270)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc271)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc451)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc275)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc276)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc277)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc277)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc453)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc280)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc455)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc282)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc283)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc456)
                  cir.condition(%20) loc(#loc284)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc286)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc287)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc287)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc287)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc288)
                  } loc(#loc457)
                  cir.yield loc(#loc279)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc289)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc290)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc458)
                  cir.yield loc(#loc454)
                } loc(#loc454)
              } loc(#loc454)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc291)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc291)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc292)
            } loc(#loc452)
          } loc(#loc450)
        } loc(#loc447)
      } loc(#loc446)
    } loc(#loc444)
    cir.return loc(#loc240)
  } loc(#loc437)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc460)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc297)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc298)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc461)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc343)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc302)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc303)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc463)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc305)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc465)
      } loc(#loc464)
    } loc(#loc462)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc343)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc309)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc310)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc467)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc470)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc471)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc471)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc471)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc320)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc321)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc473)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc325)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc326)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc327)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc327)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc475)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc330)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc477)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc332)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc333)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc478)
                  cir.condition(%20) loc(#loc334)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc336)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc337)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc337)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc337)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc338)
                  } loc(#loc479)
                  cir.yield loc(#loc329)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc339)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc340)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc480)
                  cir.yield loc(#loc476)
                } loc(#loc476)
              } loc(#loc476)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc341)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc341)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc342)
            } loc(#loc474)
          } loc(#loc472)
        } loc(#loc469)
      } loc(#loc468)
    } loc(#loc466)
    cir.return loc(#loc294)
  } loc(#loc459)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":25:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":25:25)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":46:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":68:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":29:1)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":72:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":31:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":31:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":33:13)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":33:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":33:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":34:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":49:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":34:8)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":34:20)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":35:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":36:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":48:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":37:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":37:49)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":39:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":47:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":39:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":39:36)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":39:53)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":39:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":39:63)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":40:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":43:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":45:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":42:29)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":42:24)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":42:17)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":42:40)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":46:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":50:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":71:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":50:8)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":50:20)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":51:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":52:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":70:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":53:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":53:17)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":54:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":54:34)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":57:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":69:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":57:17)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":57:25)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":58:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":65:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":67:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":59:32)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":59:24)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":59:17)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":61:17)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":64:17)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":61:25)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":61:21)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":61:28)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":61:32)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":61:30)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":62:17)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":63:41)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":63:34)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":63:21)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":61:37)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":61:36)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":68:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":250:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":256:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":252:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":252:14)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":253:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":253:14)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":254:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":254:14)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":255:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":255:14)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":103:19)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":122:27)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":79:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":126:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":81:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":81:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":83:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":83:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":83:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":84:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":99:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":84:8)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":84:20)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":85:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":86:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":98:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":87:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":87:49)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":89:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":97:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":89:23)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":89:36)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":89:53)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":89:17)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":89:63)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":90:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":93:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":95:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":92:29)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":92:24)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":92:17)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":92:40)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":96:27)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":96:17)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":100:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":125:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":100:8)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":100:20)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":101:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":104:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":106:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":103:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":107:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":124:9)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":108:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":108:17)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":109:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":109:34)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":111:13)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":123:13)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":111:17)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":111:25)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":111:27)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":111:30)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":111:38)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":111:40)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":112:13)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":119:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":121:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":113:32)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":113:24)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":113:17)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":115:17)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":118:17)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":115:25)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":115:21)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":115:28)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":115:32)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":115:30)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":116:17)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":117:41)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":117:34)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":117:21)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":115:37)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":115:36)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":122:17)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":129:1)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":171:1)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":131:5)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":131:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":133:13)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":133:12)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":133:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":134:5)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":149:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":134:8)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":134:20)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":135:5)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":136:9)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":148:9)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":137:13)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":137:49)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":139:13)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":147:13)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":139:23)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":139:36)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":139:53)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":139:17)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":139:63)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":140:13)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":143:13)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":145:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":142:29)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":142:24)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":142:17)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":142:40)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":146:27)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":146:17)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":150:5)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":170:5)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":150:8)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":150:20)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":151:5)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":152:9)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":169:9)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":153:13)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":153:17)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":154:13)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":154:34)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":156:13)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":168:13)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":156:17)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":156:25)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":156:27)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":156:30)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":156:38)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":156:40)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":157:13)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":164:13)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":166:13)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":158:32)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":158:24)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":158:17)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":160:17)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":163:17)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":160:25)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":160:21)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":160:28)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":160:32)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":160:30)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":161:17)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":162:41)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":162:34)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":162:21)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":160:37)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":160:36)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":167:27)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":167:17)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":174:1)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":212:1)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":176:5)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":176:9)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":178:13)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":178:12)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":178:5)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":179:5)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":189:5)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":179:8)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":179:20)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":180:5)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":183:5)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":185:5)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":182:19)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":182:9)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":188:16)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":188:9)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":190:5)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":211:5)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":190:8)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":190:20)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":191:5)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":192:9)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":210:9)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":193:13)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":193:17)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":194:13)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":194:34)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":197:13)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":209:13)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":197:17)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":197:25)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":198:13)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":205:13)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":207:13)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":199:32)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":199:24)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":199:17)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":201:17)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":204:17)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":201:25)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":201:21)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":201:28)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":201:32)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":201:30)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":202:17)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":203:41)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":203:34)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":203:21)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":201:37)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":201:36)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":208:27)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":208:17)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":215:1)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":248:1)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":217:5)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":217:9)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":219:13)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":219:12)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":219:5)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":220:5)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":225:5)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":220:8)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":220:20)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":221:5)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":224:16)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":224:9)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":226:5)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":247:5)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":226:8)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":226:20)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":227:5)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":228:9)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":246:9)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":229:13)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":229:17)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":230:13)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":230:34)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":233:13)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":245:13)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":233:17)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":233:25)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":234:13)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":241:13)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":243:13)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":235:32)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":235:24)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":235:17)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":237:17)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":240:17)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":237:25)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":237:21)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":237:28)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":237:32)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":237:30)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":238:17)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":239:41)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":239:34)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":239:21)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":237:37)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":237:36)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":244:27)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c":244:17)
#loc343 = loc(fused[#loc1, #loc2])
#loc344 = loc(fused[#loc3, #loc4])
#loc345 = loc(fused[#loc5, #loc6])
#loc346 = loc(fused[#loc7, #loc8])
#loc347 = loc(fused[#loc9, #loc10])
#loc348 = loc(fused[#loc12, #loc13])
#loc349 = loc(fused[#loc15, #loc16])
#loc350 = loc(fused[#loc17, #loc18])
#loc351 = loc(fused[#loc21, #loc19])
#loc352 = loc(fused[#loc22, #loc23])
#loc353 = loc(fused[#loc24, #loc25])
#loc354 = loc(fused[#loc26, #loc23])
#loc355 = loc(fused[#loc27, #loc28])
#loc356 = loc(fused[#loc29, #loc30])
#loc357 = loc(fused[#loc31, #loc32])
#loc358 = loc(fused[#loc36, #loc37])
#loc359 = loc(fused[#loc38, #loc39, #loc40, #loc32])
#loc360 = loc(fused[#loc43, #loc44])
#loc361 = loc(fused[#loc46, #loc47])
#loc362 = loc(fused[#loc48, #loc49])
#loc363 = loc(fused[#loc50, #loc47])
#loc364 = loc(fused[#loc51, #loc52])
#loc365 = loc(fused[#loc53, #loc54])
#loc366 = loc(fused[#loc55, #loc56])
#loc367 = loc(fused[#loc57, #loc58])
#loc368 = loc(fused[#loc59, #loc60])
#loc369 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc370 = loc(fused[#loc66, #loc64])
#loc371 = loc(fused[#loc67, #loc68])
#loc372 = loc(fused[#loc70, #loc69])
#loc373 = loc(fused[#loc71, #loc72])
#loc374 = loc(fused[#loc74, #loc68])
#loc375 = loc(fused[#loc79, #loc78])
#loc376 = loc(fused[#loc81, #loc82])
#loc377 = loc(fused[#loc83, #loc84])
#loc378 = loc(fused[#loc85, #loc86])
#loc379 = loc(fused[#loc87, #loc88])
#loc380 = loc(fused[#loc89, #loc90])
#loc381 = loc(fused[#loc93, #loc94])
#loc382 = loc(fused[#loc95, #loc96])
#loc383 = loc(fused[#loc99, #loc97])
#loc384 = loc(fused[#loc100, #loc101])
#loc385 = loc(fused[#loc102, #loc103])
#loc386 = loc(fused[#loc104, #loc101])
#loc387 = loc(fused[#loc105, #loc106])
#loc388 = loc(fused[#loc107, #loc108])
#loc389 = loc(fused[#loc109, #loc110])
#loc390 = loc(fused[#loc114, #loc115])
#loc391 = loc(fused[#loc116, #loc117, #loc118, #loc110])
#loc392 = loc(fused[#loc121, #loc122])
#loc393 = loc(fused[#loc125, #loc126])
#loc394 = loc(fused[#loc127, #loc128])
#loc395 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc396 = loc(fused[#loc133, #loc134])
#loc397 = loc(fused[#loc135, #loc136])
#loc398 = loc(fused[#loc137, #loc138])
#loc399 = loc(fused[#loc139, #loc140])
#loc400 = loc(fused[#loc141, #loc142])
#loc401 = loc(fused[#loc144, #loc146])
#loc402 = loc(fused[#loc147, #loc148, #loc149, #loc140])
#loc403 = loc(fused[#loc152, #loc150])
#loc404 = loc(fused[#loc153, #loc154])
#loc405 = loc(fused[#loc156, #loc155])
#loc406 = loc(fused[#loc157, #loc158])
#loc407 = loc(fused[#loc160, #loc154])
#loc408 = loc(fused[#loc165, #loc164])
#loc409 = loc(fused[#loc167, #loc168])
#loc410 = loc(fused[#loc169, #loc170])
#loc411 = loc(fused[#loc173, #loc171])
#loc412 = loc(fused[#loc174, #loc175])
#loc413 = loc(fused[#loc176, #loc177])
#loc414 = loc(fused[#loc178, #loc175])
#loc415 = loc(fused[#loc179, #loc180])
#loc416 = loc(fused[#loc181, #loc182])
#loc417 = loc(fused[#loc183, #loc184])
#loc418 = loc(fused[#loc188, #loc189])
#loc419 = loc(fused[#loc190, #loc191, #loc192, #loc184])
#loc420 = loc(fused[#loc195, #loc196])
#loc421 = loc(fused[#loc199, #loc200])
#loc422 = loc(fused[#loc201, #loc202])
#loc423 = loc(fused[#loc203, #loc200])
#loc424 = loc(fused[#loc204, #loc205])
#loc425 = loc(fused[#loc206, #loc207])
#loc426 = loc(fused[#loc208, #loc209])
#loc427 = loc(fused[#loc210, #loc211])
#loc428 = loc(fused[#loc212, #loc213])
#loc429 = loc(fused[#loc215, #loc217])
#loc430 = loc(fused[#loc218, #loc219, #loc220, #loc211])
#loc431 = loc(fused[#loc223, #loc221])
#loc432 = loc(fused[#loc224, #loc225])
#loc433 = loc(fused[#loc227, #loc226])
#loc434 = loc(fused[#loc228, #loc229])
#loc435 = loc(fused[#loc231, #loc225])
#loc436 = loc(fused[#loc236, #loc235])
#loc437 = loc(fused[#loc239, #loc240])
#loc438 = loc(fused[#loc241, #loc242])
#loc439 = loc(fused[#loc245, #loc243])
#loc440 = loc(fused[#loc246, #loc247])
#loc441 = loc(fused[#loc248, #loc249])
#loc442 = loc(fused[#loc250, #loc251, #loc252, #loc247])
#loc443 = loc(fused[#loc256, #loc255])
#loc444 = loc(fused[#loc257, #loc258])
#loc445 = loc(fused[#loc259, #loc260])
#loc446 = loc(fused[#loc261, #loc258])
#loc447 = loc(fused[#loc262, #loc263])
#loc448 = loc(fused[#loc264, #loc265])
#loc449 = loc(fused[#loc266, #loc267])
#loc450 = loc(fused[#loc268, #loc269])
#loc451 = loc(fused[#loc270, #loc271])
#loc452 = loc(fused[#loc272, #loc273, #loc274, #loc269])
#loc453 = loc(fused[#loc277, #loc275])
#loc454 = loc(fused[#loc278, #loc279])
#loc455 = loc(fused[#loc281, #loc280])
#loc456 = loc(fused[#loc282, #loc283])
#loc457 = loc(fused[#loc285, #loc279])
#loc458 = loc(fused[#loc290, #loc289])
#loc459 = loc(fused[#loc293, #loc294])
#loc460 = loc(fused[#loc295, #loc296])
#loc461 = loc(fused[#loc299, #loc297])
#loc462 = loc(fused[#loc300, #loc301])
#loc463 = loc(fused[#loc302, #loc303])
#loc464 = loc(fused[#loc304, #loc301])
#loc465 = loc(fused[#loc306, #loc305])
#loc466 = loc(fused[#loc307, #loc308])
#loc467 = loc(fused[#loc309, #loc310])
#loc468 = loc(fused[#loc311, #loc308])
#loc469 = loc(fused[#loc312, #loc313])
#loc470 = loc(fused[#loc314, #loc315])
#loc471 = loc(fused[#loc316, #loc317])
#loc472 = loc(fused[#loc318, #loc319])
#loc473 = loc(fused[#loc320, #loc321])
#loc474 = loc(fused[#loc322, #loc323, #loc324, #loc319])
#loc475 = loc(fused[#loc327, #loc325])
#loc476 = loc(fused[#loc328, #loc329])
#loc477 = loc(fused[#loc331, #loc330])
#loc478 = loc(fused[#loc332, #loc333])
#loc479 = loc(fused[#loc335, #loc329])
#loc480 = loc(fused[#loc340, #loc339])
