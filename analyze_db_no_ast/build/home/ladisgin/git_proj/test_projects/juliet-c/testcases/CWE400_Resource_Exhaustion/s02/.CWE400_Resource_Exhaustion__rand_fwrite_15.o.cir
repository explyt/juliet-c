!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc421)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc422)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc423)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc424)
  cir.func private  @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc425)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc426)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc428)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc22)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc26)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %6 = cir.binop(and, %4, %5) : !s32i loc(#loc27)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc27)
        %8 = cir.ternary(%7, true {
          %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc27)
          %12 = cir.const #cir.int<30> : !s32i loc(#loc27)
          %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc27)
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc27)
          %16 = cir.const #cir.int<15> : !s32i loc(#loc27)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc27)
          %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc27)
          %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc27)
          %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc27)
          cir.yield %21 : !u32i loc(#loc27)
        }, false {
          %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc27)
          %12 = cir.const #cir.int<30> : !s32i loc(#loc27)
          %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc27)
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc27)
          %16 = cir.const #cir.int<15> : !s32i loc(#loc27)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc27)
          %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc27)
          %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc27)
          %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc27)
          %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc27)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc27)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc27)
          %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc27)
          cir.yield %25 : !u32i loc(#loc27)
        }) : (!cir.bool) -> !u32i loc(#loc27)
        %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc27)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc431)
        cir.break loc(#loc29)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc30)
        cir.break loc(#loc31)
      }
      ] loc(#loc24)
    } loc(#loc430)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc34)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc434)
          %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc435)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc436)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc38)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc38)
          cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc434)
          %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc40)
          cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc435)
          %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc6)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc6)
          cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc436)
          %12 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
          %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %14 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc9)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc9)
          %16 = cir.call @fopen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc42)
          cir.store %16, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc437)
          cir.scope {
            %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc49)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc439)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc50)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc52)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc53)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc52)
            } loc(#loc440)
          } loc(#loc438)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc56)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc56)
            cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc442)
            cir.for : cond {
              %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc58)
              %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc59)
              %22 = cir.cmp(lt, %19, %21) : !u64i, !s32i loc(#loc443)
              %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc60)
              cir.condition(%23) loc(#loc60)
            } body {
              cir.scope {
                cir.scope {
                  %19 = cir.const #cir.int<50> : !u64i loc(#loc446)
                  %20 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc66)
                  %21 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
                  %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
                  %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
                  %24 = cir.const #cir.int<1> : !u64i loc(#loc447)
                  %25 = cir.const #cir.int<50> : !u64i loc(#loc448)
                  %26 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc71)
                  %27 = cir.call @fwrite(%23, %24, %25, %26) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc66)
                  %28 = cir.cmp(ne, %19, %27) : !u64i, !s32i loc(#loc449)
                  %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc73)
                  cir.if %29 {
                    %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc75)
                    %31 = cir.const #cir.int<1> : !s32i loc(#loc76)
                    cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
                  } loc(#loc450)
                } loc(#loc445)
              } loc(#loc444)
              cir.yield loc(#loc55)
            } step {
              %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc77)
              %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc78)
              cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc451)
              cir.yield loc(#loc441)
            } loc(#loc441)
          } loc(#loc441)
          cir.scope {
            %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
            %18 = cir.cast(ptr_to_bool, %17 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc81)
            cir.if %18 {
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
              %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc84)
            } loc(#loc453)
          } loc(#loc452)
        } loc(#loc433)
        cir.break loc(#loc85)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc87)
        cir.break loc(#loc88)
      }
      ] loc(#loc32)
    } loc(#loc432)
    cir.return loc(#loc18)
  } loc(#loc427)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc455)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc456)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc457)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc458)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc97)
    cir.return loc(#loc90)
  } loc(#loc454)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc99)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc460)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc105)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc461)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc109)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %6 = cir.binop(and, %4, %5) : !s32i loc(#loc110)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc110)
        %8 = cir.ternary(%7, true {
          %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
          %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc110)
          %12 = cir.const #cir.int<30> : !s32i loc(#loc110)
          %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc110)
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc110)
          %16 = cir.const #cir.int<15> : !s32i loc(#loc110)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc110)
          %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc110)
          %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
          %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc110)
          %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc110)
          cir.yield %21 : !u32i loc(#loc110)
        }, false {
          %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
          %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc110)
          %12 = cir.const #cir.int<30> : !s32i loc(#loc110)
          %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc110)
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc110)
          %16 = cir.const #cir.int<15> : !s32i loc(#loc110)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc110)
          %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc110)
          %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
          %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc110)
          %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc110)
          %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc110)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc110)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc110)
          %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc110)
          cir.yield %25 : !u32i loc(#loc110)
        }) : (!cir.bool) -> !u32i loc(#loc110)
        %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc110)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc463)
        cir.break loc(#loc112)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc113)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        cir.break loc(#loc115)
      }
      ] loc(#loc107)
    } loc(#loc462)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc118)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc119)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc119)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc120)
        cir.break loc(#loc121)
      },
      case (default) {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc466)
          %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc467)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc468)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc125)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc125)
          cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc466)
          %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc127)
          cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc467)
          %10 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc99)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc99)
          cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc468)
          cir.scope {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
            %13 = cir.const #cir.int<0> : !s32i loc(#loc132)
            %14 = cir.cmp(gt, %12, %13) : !s32i, !s32i loc(#loc470)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc133)
            %16 = cir.ternary(%15, true {
              %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
              %18 = cir.const #cir.int<20> : !s32i loc(#loc136)
              %19 = cir.cmp(le, %17, %18) : !s32i, !s32i loc(#loc471)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc137)
              %21 = cir.ternary(%20, true {
                %22 = cir.const #true loc(#loc134)
                cir.yield %22 : !cir.bool loc(#loc134)
              }, false {
                %22 = cir.const #false loc(#loc134)
                cir.yield %22 : !cir.bool loc(#loc134)
              }) : (!cir.bool) -> !cir.bool loc(#loc134)
              cir.yield %21 : !cir.bool loc(#loc134)
            }, false {
              %17 = cir.const #false loc(#loc134)
              cir.yield %17 : !cir.bool loc(#loc134)
            }) : (!cir.bool) -> !cir.bool loc(#loc134)
            cir.if %16 {
              %17 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc139)
              %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
              %19 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc141)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc141)
              %21 = cir.call @fopen(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc139)
              cir.store %21, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc473)
              cir.scope {
                %22 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc146)
                %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc147)
                %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc147)
                %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc475)
                %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc148)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc150)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc151)
                  cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc150)
                } loc(#loc476)
              } loc(#loc474)
              cir.scope {
                %22 = cir.const #cir.int<0> : !s32i loc(#loc154)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc154)
                cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc478)
                cir.for : cond {
                  %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc156)
                  %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                  %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc157)
                  %27 = cir.cmp(lt, %24, %26) : !u64i, !s32i loc(#loc479)
                  %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc158)
                  cir.condition(%28) loc(#loc158)
                } body {
                  cir.scope {
                    cir.scope {
                      %24 = cir.const #cir.int<50> : !u64i loc(#loc482)
                      %25 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc164)
                      %26 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc165)
                      %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc165)
                      %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc165)
                      %29 = cir.const #cir.int<1> : !u64i loc(#loc483)
                      %30 = cir.const #cir.int<50> : !u64i loc(#loc484)
                      %31 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc170)
                      %32 = cir.call @fwrite(%28, %29, %30, %31) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc164)
                      %33 = cir.cmp(ne, %24, %32) : !u64i, !s32i loc(#loc485)
                      %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc172)
                      cir.if %34 {
                        %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc173)
                        %36 = cir.const #cir.int<1> : !s32i loc(#loc174)
                        cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc173)
                      } loc(#loc486)
                    } loc(#loc481)
                  } loc(#loc480)
                  cir.yield loc(#loc153)
                } step {
                  %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc175)
                  %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc176)
                  cir.store %25, %4 : !u64i, !cir.ptr<!u64i> loc(#loc487)
                  cir.yield loc(#loc477)
                } loc(#loc477)
              } loc(#loc477)
              cir.scope {
                %22 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc179)
                %23 = cir.cast(ptr_to_bool, %22 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc179)
                cir.if %23 {
                  %24 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc181)
                  %25 = cir.call @fclose(%24) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc182)
                } loc(#loc489)
              } loc(#loc488)
            } loc(#loc472)
          } loc(#loc469)
        } loc(#loc465)
        cir.break loc(#loc183)
      }
      ] loc(#loc116)
    } loc(#loc464)
    cir.return loc(#loc101)
  } loc(#loc459)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc491)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc189)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc492)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc193)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc194)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc194)
        %6 = cir.binop(and, %4, %5) : !s32i loc(#loc194)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc194)
        %8 = cir.ternary(%7, true {
          %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc194)
          %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc194)
          %12 = cir.const #cir.int<30> : !s32i loc(#loc194)
          %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc194)
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc194)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc194)
          %16 = cir.const #cir.int<15> : !s32i loc(#loc194)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc194)
          %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc194)
          %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc194)
          %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc194)
          %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc194)
          cir.yield %21 : !u32i loc(#loc194)
        }, false {
          %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc194)
          %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc194)
          %12 = cir.const #cir.int<30> : !s32i loc(#loc194)
          %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc194)
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc194)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc194)
          %16 = cir.const #cir.int<15> : !s32i loc(#loc194)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc194)
          %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc194)
          %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc194)
          %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc194)
          %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc194)
          %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc194)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc194)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc194)
          %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc194)
          cir.yield %25 : !u32i loc(#loc194)
        }) : (!cir.bool) -> !u32i loc(#loc194)
        %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc194)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc494)
        cir.break loc(#loc196)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc197)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc197)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc198)
        cir.break loc(#loc199)
      }
      ] loc(#loc191)
    } loc(#loc493)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc202)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc497)
          %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc498)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc499)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc206)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc206)
          cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc497)
          %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc208)
          cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc498)
          %10 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc210)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc210)
          cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc499)
          cir.scope {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
            %13 = cir.const #cir.int<0> : !s32i loc(#loc214)
            %14 = cir.cmp(gt, %12, %13) : !s32i, !s32i loc(#loc501)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc215)
            %16 = cir.ternary(%15, true {
              %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc217)
              %18 = cir.const #cir.int<20> : !s32i loc(#loc218)
              %19 = cir.cmp(le, %17, %18) : !s32i, !s32i loc(#loc502)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc219)
              %21 = cir.ternary(%20, true {
                %22 = cir.const #true loc(#loc216)
                cir.yield %22 : !cir.bool loc(#loc216)
              }, false {
                %22 = cir.const #false loc(#loc216)
                cir.yield %22 : !cir.bool loc(#loc216)
              }) : (!cir.bool) -> !cir.bool loc(#loc216)
              cir.yield %21 : !cir.bool loc(#loc216)
            }, false {
              %17 = cir.const #false loc(#loc216)
              cir.yield %17 : !cir.bool loc(#loc216)
            }) : (!cir.bool) -> !cir.bool loc(#loc216)
            cir.if %16 {
              %17 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc221)
              %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc222)
              %19 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc223)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc223)
              %21 = cir.call @fopen(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc221)
              cir.store %21, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc504)
              cir.scope {
                %22 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc228)
                %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc229)
                %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc229)
                %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc506)
                %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc230)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc232)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc233)
                  cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc232)
                } loc(#loc507)
              } loc(#loc505)
              cir.scope {
                %22 = cir.const #cir.int<0> : !s32i loc(#loc236)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc236)
                cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc509)
                cir.for : cond {
                  %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc238)
                  %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                  %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc239)
                  %27 = cir.cmp(lt, %24, %26) : !u64i, !s32i loc(#loc510)
                  %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc240)
                  cir.condition(%28) loc(#loc240)
                } body {
                  cir.scope {
                    cir.scope {
                      %24 = cir.const #cir.int<50> : !u64i loc(#loc513)
                      %25 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc246)
                      %26 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc247)
                      %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc247)
                      %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc247)
                      %29 = cir.const #cir.int<1> : !u64i loc(#loc514)
                      %30 = cir.const #cir.int<50> : !u64i loc(#loc515)
                      %31 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc252)
                      %32 = cir.call @fwrite(%28, %29, %30, %31) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc246)
                      %33 = cir.cmp(ne, %24, %32) : !u64i, !s32i loc(#loc516)
                      %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc254)
                      cir.if %34 {
                        %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc255)
                        %36 = cir.const #cir.int<1> : !s32i loc(#loc256)
                        cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc255)
                      } loc(#loc517)
                    } loc(#loc512)
                  } loc(#loc511)
                  cir.yield loc(#loc235)
                } step {
                  %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc257)
                  %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc258)
                  cir.store %25, %4 : !u64i, !cir.ptr<!u64i> loc(#loc518)
                  cir.yield loc(#loc508)
                } loc(#loc508)
              } loc(#loc508)
              cir.scope {
                %22 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc261)
                %23 = cir.cast(ptr_to_bool, %22 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc261)
                cir.if %23 {
                  %24 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc263)
                  %25 = cir.call @fclose(%24) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc264)
                } loc(#loc520)
              } loc(#loc519)
            } loc(#loc503)
          } loc(#loc500)
        } loc(#loc496)
        cir.break loc(#loc265)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc266)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc266)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc267)
        cir.break loc(#loc268)
      }
      ] loc(#loc200)
    } loc(#loc495)
    cir.return loc(#loc185)
  } loc(#loc490)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc522)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc274)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc523)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc278)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc279)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc279)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc280)
        cir.break loc(#loc281)
      },
      case (default) {
        %4 = cir.const #cir.int<20> : !s32i loc(#loc282)
        cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc525)
        cir.break loc(#loc284)
      }
      ] loc(#loc276)
    } loc(#loc524)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc287)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc528)
          %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc529)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc530)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc291)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc291)
          cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc528)
          %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc293)
          cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc529)
          %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc295)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc295)
          cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc530)
          %12 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc296)
          %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc297)
          %14 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc298)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc298)
          %16 = cir.call @fopen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc296)
          cir.store %16, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc531)
          cir.scope {
            %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc303)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc304)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc304)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc533)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc305)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc307)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc308)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc307)
            } loc(#loc534)
          } loc(#loc532)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc311)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc311)
            cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc536)
            cir.for : cond {
              %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc313)
              %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc314)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc314)
              %22 = cir.cmp(lt, %19, %21) : !u64i, !s32i loc(#loc537)
              %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc315)
              cir.condition(%23) loc(#loc315)
            } body {
              cir.scope {
                cir.scope {
                  %19 = cir.const #cir.int<50> : !u64i loc(#loc540)
                  %20 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc321)
                  %21 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc322)
                  %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc322)
                  %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc322)
                  %24 = cir.const #cir.int<1> : !u64i loc(#loc541)
                  %25 = cir.const #cir.int<50> : !u64i loc(#loc542)
                  %26 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc327)
                  %27 = cir.call @fwrite(%23, %24, %25, %26) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc321)
                  %28 = cir.cmp(ne, %19, %27) : !u64i, !s32i loc(#loc543)
                  %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc329)
                  cir.if %29 {
                    %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc331)
                    %31 = cir.const #cir.int<1> : !s32i loc(#loc332)
                    cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc331)
                  } loc(#loc544)
                } loc(#loc539)
              } loc(#loc538)
              cir.yield loc(#loc310)
            } step {
              %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc333)
              %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc334)
              cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc545)
              cir.yield loc(#loc535)
            } loc(#loc535)
          } loc(#loc535)
          cir.scope {
            %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc337)
            %18 = cir.cast(ptr_to_bool, %17 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc337)
            cir.if %18 {
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc339)
              %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc340)
            } loc(#loc547)
          } loc(#loc546)
        } loc(#loc527)
        cir.break loc(#loc341)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc342)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc342)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc343)
        cir.break loc(#loc344)
      }
      ] loc(#loc285)
    } loc(#loc526)
    cir.return loc(#loc270)
  } loc(#loc521)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc549)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc349)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc350)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc550)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc354)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.const #cir.int<20> : !s32i loc(#loc355)
        cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc552)
        cir.break loc(#loc357)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc358)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc358)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc359)
        cir.break loc(#loc360)
      }
      ] loc(#loc352)
    } loc(#loc551)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc363)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc555)
          %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc556)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc557)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc367)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc367)
          cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc555)
          %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc369)
          cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc556)
          %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc371)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc371)
          cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc557)
          %12 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc372)
          %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc373)
          %14 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc374)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc374)
          %16 = cir.call @fopen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc372)
          cir.store %16, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc558)
          cir.scope {
            %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc379)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc380)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc380)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc560)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc381)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc383)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc384)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc383)
            } loc(#loc561)
          } loc(#loc559)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc387)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc387)
            cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc563)
            cir.for : cond {
              %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc389)
              %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc390)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc390)
              %22 = cir.cmp(lt, %19, %21) : !u64i, !s32i loc(#loc564)
              %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc391)
              cir.condition(%23) loc(#loc391)
            } body {
              cir.scope {
                cir.scope {
                  %19 = cir.const #cir.int<50> : !u64i loc(#loc567)
                  %20 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc397)
                  %21 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc398)
                  %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc398)
                  %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc398)
                  %24 = cir.const #cir.int<1> : !u64i loc(#loc568)
                  %25 = cir.const #cir.int<50> : !u64i loc(#loc569)
                  %26 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc403)
                  %27 = cir.call @fwrite(%23, %24, %25, %26) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc397)
                  %28 = cir.cmp(ne, %19, %27) : !u64i, !s32i loc(#loc570)
                  %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc405)
                  cir.if %29 {
                    %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc407)
                    %31 = cir.const #cir.int<1> : !s32i loc(#loc408)
                    cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc407)
                  } loc(#loc571)
                } loc(#loc566)
              } loc(#loc565)
              cir.yield loc(#loc386)
            } step {
              %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc409)
              %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc410)
              cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc572)
              cir.yield loc(#loc562)
            } loc(#loc562)
          } loc(#loc562)
          cir.scope {
            %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc413)
            %18 = cir.cast(ptr_to_bool, %17 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc413)
            cir.if %18 {
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc415)
              %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc416)
            } loc(#loc574)
          } loc(#loc573)
        } loc(#loc554)
        cir.break loc(#loc417)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc418)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc418)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc419)
        cir.break loc(#loc420)
      }
      ] loc(#loc361)
    } loc(#loc553)
    cir.return loc(#loc346)
  } loc(#loc548)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":37:19)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":46:32)
#loc7 = loc("/usr/include/stdio.h":264:1)
#loc8 = loc("/usr/include/stdio.h":266:3)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":47:33)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("/usr/include/stdio.h":745:1)
#loc13 = loc("/usr/include/stdio.h":746:43)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:44)
#loc15 = loc("/usr/include/stdio.h":184:1)
#loc16 = loc("/usr/include/stdio.h":184:36)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":24:1)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":72:1)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":26:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":26:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":28:14)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":28:13)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":28:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":29:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":39:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":29:12)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":33:17)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":33:9)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":34:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":37:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":38:9)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":40:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":71:5)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":40:12)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":43:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":65:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":44:9)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":44:20)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":45:9)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":45:23)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":46:9)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":47:17)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":47:23)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":47:9)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":47:37)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":48:9)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":51:9)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":48:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":48:22)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":48:19)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":49:9)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":50:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":50:18)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:9)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":60:9)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:18)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:14)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:21)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:33)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:23)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":55:9)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:13)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":59:13)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:17)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:32)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:37)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:54)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:65)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:68)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:83)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:86)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:91)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:34)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":57:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":58:17)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":58:22)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:41)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:40)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":61:9)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":64:9)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":61:13)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":62:9)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":63:20)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":63:13)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":66:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":69:19)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":69:9)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":70:9)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":280:1)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":286:1)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":282:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":282:14)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":283:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":283:14)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":284:5)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":284:14)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":285:5)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":285:14)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":105:32)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":79:1)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":126:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":81:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":81:9)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":83:14)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":83:13)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":83:5)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":84:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":94:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":84:12)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":88:17)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":88:9)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":89:9)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":92:19)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":92:9)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":93:9)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":95:5)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":125:5)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":95:12)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":99:19)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":99:9)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":100:9)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":102:5)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":123:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":103:9)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":103:20)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":104:9)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":104:23)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":105:9)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:9)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":122:9)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:13)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:21)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:19)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:23)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:26)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:35)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:32)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":108:9)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":109:21)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":109:27)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":109:37)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":109:13)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":109:41)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":110:13)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":113:13)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":110:17)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":110:26)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":110:23)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":111:13)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":112:17)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":112:22)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:13)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":117:13)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:22)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:18)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:25)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:37)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:27)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":115:13)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:17)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:104)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:21)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:36)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:41)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:48)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:58)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:69)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:72)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:87)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:90)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:95)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:38)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:98)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:103)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:45)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:44)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":118:13)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":121:13)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":118:17)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":119:13)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":120:24)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":120:17)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":124:5)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":129:1)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":176:1)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":131:5)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":131:9)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":133:14)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":133:13)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":133:5)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":134:5)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":144:5)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":134:12)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":138:17)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":138:9)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":139:9)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":142:19)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":142:9)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":143:9)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":145:5)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":175:5)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":145:12)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":148:5)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":169:5)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":149:9)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":149:20)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":150:9)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":150:23)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":151:9)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":151:32)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:9)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":168:9)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:13)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:21)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:19)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:23)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:26)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:35)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:32)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":154:9)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":155:21)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":155:27)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":155:37)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":155:13)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":155:41)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":156:13)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":159:13)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":156:17)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":156:26)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":156:23)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":157:13)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":158:17)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":158:22)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:13)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":163:13)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:22)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:18)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:25)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:37)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:27)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":161:13)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:17)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:104)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:21)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:36)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:41)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:48)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:58)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:69)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:72)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:87)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:90)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:95)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:38)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:98)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:103)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:45)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:44)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":164:13)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":167:13)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":164:17)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":165:13)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":166:24)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":166:17)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":170:5)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":173:19)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":173:9)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":174:9)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":179:1)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":227:1)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":181:5)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":181:9)
#loc273 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":183:14)
#loc274 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":183:13)
#loc275 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":183:5)
#loc276 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":184:5)
#loc277 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":194:5)
#loc278 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":184:12)
#loc279 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":188:19)
#loc280 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":188:9)
#loc281 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":189:9)
#loc282 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":192:17)
#loc283 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":192:9)
#loc284 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":193:9)
#loc285 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":195:5)
#loc286 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":226:5)
#loc287 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":195:12)
#loc288 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":198:5)
#loc289 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":220:5)
#loc290 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":199:9)
#loc291 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":199:20)
#loc292 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":200:9)
#loc293 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":200:23)
#loc294 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":201:9)
#loc295 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":201:32)
#loc296 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":202:17)
#loc297 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":202:23)
#loc298 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":202:33)
#loc299 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":202:9)
#loc300 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":202:37)
#loc301 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":203:9)
#loc302 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":206:9)
#loc303 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":203:13)
#loc304 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":203:22)
#loc305 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":203:19)
#loc306 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":204:9)
#loc307 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":205:13)
#loc308 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":205:18)
#loc309 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:9)
#loc310 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":215:9)
#loc311 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:18)
#loc312 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:14)
#loc313 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:21)
#loc314 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:33)
#loc315 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:23)
#loc316 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":210:9)
#loc317 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:13)
#loc318 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":214:13)
#loc319 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:17)
#loc320 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:32)
#loc321 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:37)
#loc322 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:44)
#loc323 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:54)
#loc324 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:65)
#loc325 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:68)
#loc326 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:83)
#loc327 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:86)
#loc328 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:91)
#loc329 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:34)
#loc330 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":212:13)
#loc331 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":213:17)
#loc332 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":213:22)
#loc333 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:41)
#loc334 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:40)
#loc335 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":216:9)
#loc336 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":219:9)
#loc337 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":216:13)
#loc338 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":217:9)
#loc339 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":218:20)
#loc340 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":218:13)
#loc341 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":221:5)
#loc342 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":224:19)
#loc343 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":224:9)
#loc344 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":225:9)
#loc345 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":230:1)
#loc346 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":278:1)
#loc347 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":232:5)
#loc348 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":232:9)
#loc349 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":234:14)
#loc350 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":234:13)
#loc351 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":234:5)
#loc352 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":235:5)
#loc353 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":245:5)
#loc354 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":235:12)
#loc355 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":239:17)
#loc356 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":239:9)
#loc357 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":240:9)
#loc358 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":243:19)
#loc359 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":243:9)
#loc360 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":244:9)
#loc361 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":246:5)
#loc362 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":277:5)
#loc363 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":246:12)
#loc364 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":249:5)
#loc365 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":271:5)
#loc366 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":250:9)
#loc367 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":250:20)
#loc368 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":251:9)
#loc369 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":251:23)
#loc370 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":252:9)
#loc371 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":252:32)
#loc372 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":253:17)
#loc373 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":253:23)
#loc374 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":253:33)
#loc375 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":253:9)
#loc376 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":253:37)
#loc377 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":254:9)
#loc378 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":257:9)
#loc379 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":254:13)
#loc380 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":254:22)
#loc381 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":254:19)
#loc382 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":255:9)
#loc383 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":256:13)
#loc384 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":256:18)
#loc385 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:9)
#loc386 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":266:9)
#loc387 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:18)
#loc388 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:14)
#loc389 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:21)
#loc390 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:33)
#loc391 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:23)
#loc392 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":261:9)
#loc393 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:13)
#loc394 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":265:13)
#loc395 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:17)
#loc396 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:32)
#loc397 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:37)
#loc398 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:44)
#loc399 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:54)
#loc400 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:65)
#loc401 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:68)
#loc402 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:83)
#loc403 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:86)
#loc404 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:91)
#loc405 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:34)
#loc406 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":263:13)
#loc407 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":264:17)
#loc408 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":264:22)
#loc409 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:41)
#loc410 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:40)
#loc411 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":267:9)
#loc412 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":270:9)
#loc413 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":267:13)
#loc414 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":268:9)
#loc415 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":269:20)
#loc416 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":269:13)
#loc417 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":272:5)
#loc418 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":275:19)
#loc419 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":275:9)
#loc420 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":276:9)
#loc421 = loc(fused[#loc1, #loc2])
#loc422 = loc(fused[#loc3, #loc4])
#loc423 = loc(fused[#loc7, #loc8])
#loc424 = loc(fused[#loc10, #loc11])
#loc425 = loc(fused[#loc12, #loc13])
#loc426 = loc(fused[#loc15, #loc16])
#loc427 = loc(fused[#loc17, #loc18])
#loc428 = loc(fused[#loc19, #loc20])
#loc429 = loc(fused[#loc23, #loc21])
#loc430 = loc(fused[#loc24, #loc25])
#loc431 = loc(fused[#loc28, #loc27])
#loc432 = loc(fused[#loc32, #loc33])
#loc433 = loc(fused[#loc35, #loc36])
#loc434 = loc(fused[#loc37, #loc38])
#loc435 = loc(fused[#loc39, #loc40])
#loc436 = loc(fused[#loc41, #loc6])
#loc437 = loc(fused[#loc44, #loc45])
#loc438 = loc(fused[#loc46, #loc47])
#loc439 = loc(fused[#loc48, #loc49])
#loc440 = loc(fused[#loc51, #loc47])
#loc441 = loc(fused[#loc54, #loc55])
#loc442 = loc(fused[#loc57, #loc56])
#loc443 = loc(fused[#loc58, #loc59])
#loc444 = loc(fused[#loc61, #loc55])
#loc445 = loc(fused[#loc62, #loc63])
#loc446 = loc(fused[#loc64, #loc65])
#loc447 = loc(fused[#loc67, #loc68])
#loc448 = loc(fused[#loc69, #loc70])
#loc449 = loc(fused[#loc64, #loc72])
#loc450 = loc(fused[#loc74, #loc63])
#loc451 = loc(fused[#loc78, #loc77])
#loc452 = loc(fused[#loc79, #loc80])
#loc453 = loc(fused[#loc82, #loc80])
#loc454 = loc(fused[#loc89, #loc90])
#loc455 = loc(fused[#loc91, #loc92])
#loc456 = loc(fused[#loc93, #loc94])
#loc457 = loc(fused[#loc95, #loc96])
#loc458 = loc(fused[#loc97, #loc98])
#loc459 = loc(fused[#loc100, #loc101])
#loc460 = loc(fused[#loc102, #loc103])
#loc461 = loc(fused[#loc106, #loc104])
#loc462 = loc(fused[#loc107, #loc108])
#loc463 = loc(fused[#loc111, #loc110])
#loc464 = loc(fused[#loc116, #loc117])
#loc465 = loc(fused[#loc122, #loc123])
#loc466 = loc(fused[#loc124, #loc125])
#loc467 = loc(fused[#loc126, #loc127])
#loc468 = loc(fused[#loc128, #loc99])
#loc469 = loc(fused[#loc129, #loc130])
#loc470 = loc(fused[#loc131, #loc132])
#loc471 = loc(fused[#loc135, #loc136])
#loc472 = loc(fused[#loc138, #loc130])
#loc473 = loc(fused[#loc142, #loc143])
#loc474 = loc(fused[#loc144, #loc145])
#loc475 = loc(fused[#loc146, #loc147])
#loc476 = loc(fused[#loc149, #loc145])
#loc477 = loc(fused[#loc152, #loc153])
#loc478 = loc(fused[#loc155, #loc154])
#loc479 = loc(fused[#loc156, #loc157])
#loc480 = loc(fused[#loc159, #loc153])
#loc481 = loc(fused[#loc160, #loc161])
#loc482 = loc(fused[#loc162, #loc163])
#loc483 = loc(fused[#loc166, #loc167])
#loc484 = loc(fused[#loc168, #loc169])
#loc485 = loc(fused[#loc162, #loc171])
#loc486 = loc(fused[#loc173, #loc161])
#loc487 = loc(fused[#loc176, #loc175])
#loc488 = loc(fused[#loc177, #loc178])
#loc489 = loc(fused[#loc180, #loc178])
#loc490 = loc(fused[#loc184, #loc185])
#loc491 = loc(fused[#loc186, #loc187])
#loc492 = loc(fused[#loc190, #loc188])
#loc493 = loc(fused[#loc191, #loc192])
#loc494 = loc(fused[#loc195, #loc194])
#loc495 = loc(fused[#loc200, #loc201])
#loc496 = loc(fused[#loc203, #loc204])
#loc497 = loc(fused[#loc205, #loc206])
#loc498 = loc(fused[#loc207, #loc208])
#loc499 = loc(fused[#loc209, #loc210])
#loc500 = loc(fused[#loc211, #loc212])
#loc501 = loc(fused[#loc213, #loc214])
#loc502 = loc(fused[#loc217, #loc218])
#loc503 = loc(fused[#loc220, #loc212])
#loc504 = loc(fused[#loc224, #loc225])
#loc505 = loc(fused[#loc226, #loc227])
#loc506 = loc(fused[#loc228, #loc229])
#loc507 = loc(fused[#loc231, #loc227])
#loc508 = loc(fused[#loc234, #loc235])
#loc509 = loc(fused[#loc237, #loc236])
#loc510 = loc(fused[#loc238, #loc239])
#loc511 = loc(fused[#loc241, #loc235])
#loc512 = loc(fused[#loc242, #loc243])
#loc513 = loc(fused[#loc244, #loc245])
#loc514 = loc(fused[#loc248, #loc249])
#loc515 = loc(fused[#loc250, #loc251])
#loc516 = loc(fused[#loc244, #loc253])
#loc517 = loc(fused[#loc255, #loc243])
#loc518 = loc(fused[#loc258, #loc257])
#loc519 = loc(fused[#loc259, #loc260])
#loc520 = loc(fused[#loc262, #loc260])
#loc521 = loc(fused[#loc269, #loc270])
#loc522 = loc(fused[#loc271, #loc272])
#loc523 = loc(fused[#loc275, #loc273])
#loc524 = loc(fused[#loc276, #loc277])
#loc525 = loc(fused[#loc283, #loc282])
#loc526 = loc(fused[#loc285, #loc286])
#loc527 = loc(fused[#loc288, #loc289])
#loc528 = loc(fused[#loc290, #loc291])
#loc529 = loc(fused[#loc292, #loc293])
#loc530 = loc(fused[#loc294, #loc295])
#loc531 = loc(fused[#loc299, #loc300])
#loc532 = loc(fused[#loc301, #loc302])
#loc533 = loc(fused[#loc303, #loc304])
#loc534 = loc(fused[#loc306, #loc302])
#loc535 = loc(fused[#loc309, #loc310])
#loc536 = loc(fused[#loc312, #loc311])
#loc537 = loc(fused[#loc313, #loc314])
#loc538 = loc(fused[#loc316, #loc310])
#loc539 = loc(fused[#loc317, #loc318])
#loc540 = loc(fused[#loc319, #loc320])
#loc541 = loc(fused[#loc323, #loc324])
#loc542 = loc(fused[#loc325, #loc326])
#loc543 = loc(fused[#loc319, #loc328])
#loc544 = loc(fused[#loc330, #loc318])
#loc545 = loc(fused[#loc334, #loc333])
#loc546 = loc(fused[#loc335, #loc336])
#loc547 = loc(fused[#loc338, #loc336])
#loc548 = loc(fused[#loc345, #loc346])
#loc549 = loc(fused[#loc347, #loc348])
#loc550 = loc(fused[#loc351, #loc349])
#loc551 = loc(fused[#loc352, #loc353])
#loc552 = loc(fused[#loc356, #loc355])
#loc553 = loc(fused[#loc361, #loc362])
#loc554 = loc(fused[#loc364, #loc365])
#loc555 = loc(fused[#loc366, #loc367])
#loc556 = loc(fused[#loc368, #loc369])
#loc557 = loc(fused[#loc370, #loc371])
#loc558 = loc(fused[#loc375, #loc376])
#loc559 = loc(fused[#loc377, #loc378])
#loc560 = loc(fused[#loc379, #loc380])
#loc561 = loc(fused[#loc382, #loc378])
#loc562 = loc(fused[#loc385, #loc386])
#loc563 = loc(fused[#loc388, #loc387])
#loc564 = loc(fused[#loc389, #loc390])
#loc565 = loc(fused[#loc392, #loc386])
#loc566 = loc(fused[#loc393, #loc394])
#loc567 = loc(fused[#loc395, #loc396])
#loc568 = loc(fused[#loc399, #loc400])
#loc569 = loc(fused[#loc401, #loc402])
#loc570 = loc(fused[#loc395, #loc404])
#loc571 = loc(fused[#loc406, #loc394])
#loc572 = loc(fused[#loc410, #loc409])
#loc573 = loc(fused[#loc411, #loc412])
#loc574 = loc(fused[#loc414, #loc412])
