!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc136)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc137)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc140)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_multiply_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc142)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc143)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc144)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc145)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc146)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc24)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc142)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc142)
    cir.br ^bb2 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc31)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc31)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc31)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc31)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc150)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc151)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc39)
    cir.store %23, %4 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.br ^bb5 loc(#loc36)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb5 loc(#loc29)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc153)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.store %26, %1 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.store %27, %2 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.br ^bb9 loc(#loc154)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %30 = cir.cmp(gt, %28, %29) : !s32i, !cir.bool loc(#loc155)
    cir.brcond %30 ^bb10, ^bb11 loc(#loc156)
  ^bb10:  // pred: ^bb9
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc21)
    %33 = cir.binop(mul, %31, %32) nsw : !s32i loc(#loc50)
    cir.store %33, %3 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %34 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc52)
    cir.br ^bb11 loc(#loc46)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc46)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc44)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc13)
  } loc(#loc141)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_multiply_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc159)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc157)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc162)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc163)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc164)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc71)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb1 loc(#loc167)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.br ^bb2 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %10 = cir.cmp(gt, %8, %9) : !s32i, !cir.bool loc(#loc169)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc170)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc80)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc82)
    cir.br ^bb4 loc(#loc76)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc60)
  } loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc83)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc172)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc173)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc174)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc175)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc176)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc96)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc172)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc172)
    cir.br ^bb2 loc(#loc179)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc103)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc103)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc103)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc103)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc103)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc103)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc103)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc103)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc105)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc180)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc181)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc111)
    cir.store %23, %4 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.br ^bb5 loc(#loc108)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb5 loc(#loc101)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc101)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc99)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc183)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.store %26, %1 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    cir.store %27, %2 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb9 loc(#loc184)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %30 = cir.cmp(gt, %28, %29) : !s32i, !cir.bool loc(#loc185)
    cir.brcond %30 ^bb10, ^bb16 loc(#loc186)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc187)
  ^bb11:  // pred: ^bb10
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %32 = cir.const #cir.int<2147483647> : !s32i loc(#loc126)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc127)
    %34 = cir.binop(div, %32, %33) : !s32i loc(#loc188)
    %35 = cir.cmp(lt, %31, %34) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %35 ^bb12, ^bb13 loc(#loc190)
  ^bb12:  // pred: ^bb11
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %37 = cir.const #cir.int<2> : !s32i loc(#loc93)
    %38 = cir.binop(mul, %36, %37) nsw : !s32i loc(#loc132)
    cir.store %38, %3 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %39 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc134)
    cir.br ^bb14 loc(#loc130)
  ^bb13:  // pred: ^bb11
    %40 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc83)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.br ^bb14 loc(#loc124)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc124)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc119)
  ^bb16:  // 2 preds: ^bb9, ^bb15
    cir.br ^bb17 loc(#loc119)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc117)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc85)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_31.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":24:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":52:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":30:9)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":30:45)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":43:9)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":43:24)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":44:9)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":44:20)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":48:13)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":48:33)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":26:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":26:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":28:12)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":28:5)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":29:5)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":41:5)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":32:9)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":40:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":32:19)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":32:32)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":32:49)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":32:13)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":32:59)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":33:9)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":36:9)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":38:9)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":35:25)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":35:20)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":35:13)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":35:36)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":39:13)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":42:5)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":51:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":45:9)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":50:9)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":45:12)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":45:19)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":46:9)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":48:26)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":49:26)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":49:13)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":116:1)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":120:1)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":118:5)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":118:13)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":119:5)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":119:13)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":59:1)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":76:1)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":67:9)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":67:24)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":68:9)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":68:20)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":72:13)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":72:33)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":61:5)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":61:9)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":63:12)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":63:5)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":65:12)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":65:5)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":66:5)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":75:5)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":69:9)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":74:9)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":69:12)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":69:19)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":70:9)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":72:26)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":73:26)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":73:13)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":110:27)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":79:1)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":114:1)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":85:9)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":85:45)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":98:9)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":98:24)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":99:9)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":99:20)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":105:17)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":105:37)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":81:5)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":81:9)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":83:12)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":83:5)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":84:5)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":96:5)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":87:9)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":95:9)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":87:19)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":87:32)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":87:49)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":87:13)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":87:59)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":88:9)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":91:9)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":93:9)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":90:25)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":90:20)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":90:13)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":90:36)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":94:23)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":94:13)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":97:5)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":113:5)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":100:9)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":112:9)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":100:12)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":100:19)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":101:9)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":103:13)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":111:13)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":103:17)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":103:25)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":103:33)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":103:34)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":104:13)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":107:13)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":109:13)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":105:30)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":106:30)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":106:17)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_multiply_31.c":110:17)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc3, #loc4])
#loc138 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc7, #loc8])
#loc140 = loc(fused[#loc10, #loc11])
#loc141 = loc(fused[#loc12, #loc13])
#loc142 = loc(fused[#loc14, #loc15])
#loc143 = loc(fused[#loc16, #loc17])
#loc144 = loc(fused[#loc18, #loc19])
#loc145 = loc(fused[#loc20, #loc21])
#loc146 = loc(fused[#loc22, #loc23])
#loc147 = loc(fused[#loc25, #loc24])
#loc148 = loc(fused[#loc26, #loc27])
#loc149 = loc(fused[#loc28, #loc29])
#loc150 = loc(fused[#loc33, #loc34])
#loc151 = loc(fused[#loc35, #loc36, #loc37, #loc29])
#loc152 = loc(fused[#loc40, #loc41])
#loc153 = loc(fused[#loc43, #loc44])
#loc154 = loc(fused[#loc45, #loc46])
#loc155 = loc(fused[#loc47, #loc48])
#loc156 = loc(fused[#loc49, #loc46])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc55, #loc56])
#loc159 = loc(fused[#loc57, #loc58])
#loc160 = loc(fused[#loc59, #loc60])
#loc161 = loc(fused[#loc61, #loc62])
#loc162 = loc(fused[#loc63, #loc64])
#loc163 = loc(fused[#loc65, #loc66])
#loc164 = loc(fused[#loc67, #loc68])
#loc165 = loc(fused[#loc70, #loc69])
#loc166 = loc(fused[#loc72, #loc71])
#loc167 = loc(fused[#loc73, #loc74])
#loc168 = loc(fused[#loc75, #loc76])
#loc169 = loc(fused[#loc77, #loc78])
#loc170 = loc(fused[#loc79, #loc76])
#loc171 = loc(fused[#loc84, #loc85])
#loc172 = loc(fused[#loc86, #loc87])
#loc173 = loc(fused[#loc88, #loc89])
#loc174 = loc(fused[#loc90, #loc91])
#loc175 = loc(fused[#loc92, #loc93])
#loc176 = loc(fused[#loc94, #loc95])
#loc177 = loc(fused[#loc97, #loc96])
#loc178 = loc(fused[#loc98, #loc99])
#loc179 = loc(fused[#loc100, #loc101])
#loc180 = loc(fused[#loc105, #loc106])
#loc181 = loc(fused[#loc107, #loc108, #loc109, #loc101])
#loc182 = loc(fused[#loc112, #loc113])
#loc183 = loc(fused[#loc116, #loc117])
#loc184 = loc(fused[#loc118, #loc119])
#loc185 = loc(fused[#loc120, #loc121])
#loc186 = loc(fused[#loc122, #loc119])
#loc187 = loc(fused[#loc123, #loc124])
#loc188 = loc(fused[#loc126, #loc127])
#loc189 = loc(fused[#loc125, #loc128])
#loc190 = loc(fused[#loc129, #loc130, #loc131, #loc124])
