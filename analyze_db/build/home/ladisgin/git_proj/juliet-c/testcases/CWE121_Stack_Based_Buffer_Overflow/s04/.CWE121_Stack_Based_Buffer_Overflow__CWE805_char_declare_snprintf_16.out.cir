!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":94:10)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":94:14)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":94:20)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":94:32)
#loc133 = loc(fused[#loc58, #loc59])
#loc134 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc116)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc120)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc122)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc18)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc21)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc124)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc17)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc125)
  ^bb6:  // pred: ^bb5
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    %14 = cir.const #cir.int<67> : !s32i loc(#loc29)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc30)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc30)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc126)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc34)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc35)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc127)
    %26 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc38)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc40)
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
    %33 = cir.call @snprintf(%27, %29, %31, %32) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc7)
  } loc(#loc117)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc45)
  } loc(#loc128)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc130)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.return %17 : !s32i loc(#loc137)
  } loc(#loc132)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc141)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc143)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc88)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc88)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc91)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc94)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc145)
    cir.br ^bb4 loc(#loc95)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc87)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc146)
  ^bb6:  // pred: ^bb5
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %14 = cir.const #cir.int<67> : !s32i loc(#loc99)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc100)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc100)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc147)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc104)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc105)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc148)
    %26 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc108)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc110)
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc111)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc111)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
    %33 = cir.call @snprintf(%27, %29, %31, %32) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc108)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.br ^bb7 loc(#loc97)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc77)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":47:29)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":29:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":50:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":43:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":43:24)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":31:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":31:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":32:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":32:26)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":33:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":33:28)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":41:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":34:11)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":38:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":38:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":39:19)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":39:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":39:14)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":39:15)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":40:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":42:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":49:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":44:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":44:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":44:29)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":44:33)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":44:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":44:34)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":45:25)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":45:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":45:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":45:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":47:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":47:18)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":47:24)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":47:35)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":48:19)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":48:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":79:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":82:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":81:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":81:13)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":99:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":101:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":104:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":106:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":94:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":109:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":95:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":97:27)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":97:22)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":97:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":99:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":100:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":100:78)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":101:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":104:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":105:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":105:77)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":106:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":108:12)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":108:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":57:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":77:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":70:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":70:24)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":59:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":59:12)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":60:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":60:26)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":61:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":61:28)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":62:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":68:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":62:11)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":65:16)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":65:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":66:19)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":66:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":66:14)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":66:15)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":67:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":69:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":76:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":71:16)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":71:24)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":71:29)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":71:33)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":71:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":71:34)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":72:25)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":72:16)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":72:20)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":72:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":74:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":74:18)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":74:24)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":74:29)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":74:35)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":75:19)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_16.c":75:9)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc4, #loc5])
#loc117 = loc(fused[#loc6, #loc7])
#loc118 = loc(fused[#loc8, #loc9])
#loc119 = loc(fused[#loc10, #loc11])
#loc120 = loc(fused[#loc12, #loc13])
#loc121 = loc(fused[#loc14, #loc15])
#loc122 = loc(fused[#loc16, #loc17])
#loc123 = loc(fused[#loc20, #loc19])
#loc124 = loc(fused[#loc22, #loc21])
#loc125 = loc(fused[#loc26, #loc27])
#loc126 = loc(fused[#loc32, #loc33])
#loc127 = loc(fused[#loc37, #loc34])
#loc128 = loc(fused[#loc44, #loc45])
#loc129 = loc(fused[#loc46, #loc47])
#loc130 = loc(fused[#loc48, #loc49])
#loc131 = loc(fused[#loc50, #loc51])
#loc132 = loc(fused[#loc56, #loc57])
#loc135 = loc(fused[#loc67, #loc68])
#loc136 = loc(fused[#loc71, #loc72])
#loc137 = loc(fused[#loc75, #loc74])
#loc138 = loc(fused[#loc76, #loc77])
#loc139 = loc(fused[#loc78, #loc79])
#loc140 = loc(fused[#loc80, #loc81])
#loc141 = loc(fused[#loc82, #loc83])
#loc142 = loc(fused[#loc84, #loc85])
#loc143 = loc(fused[#loc86, #loc87])
#loc144 = loc(fused[#loc90, #loc89])
#loc145 = loc(fused[#loc92, #loc91])
#loc146 = loc(fused[#loc96, #loc97])
#loc147 = loc(fused[#loc102, #loc103])
#loc148 = loc(fused[#loc107, #loc104])
