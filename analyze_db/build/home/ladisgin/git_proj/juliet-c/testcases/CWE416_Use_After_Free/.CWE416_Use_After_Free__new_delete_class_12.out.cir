!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("../../testcasesupport/std_testcase.h":61:7)
#loc145 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":160:10)
#loc146 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":160:14)
#loc147 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":160:20)
#loc148 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":160:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc221 = loc(fused[#loc145, #loc146])
#loc222 = loc(fused[#loc147, #loc148])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__new_delete_class_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc161)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc162)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc163)
  cir.func private @printIntLine(!s32i) loc(#loc164)
  cir.func @_ZN42CWE416_Use_After_Free__new_delete_class_123badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc167)
    cir.br ^bb1 loc(#loc168)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc18)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc169)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc170)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc171)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc25)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc171)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc24)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc172)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc30)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc33)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc25)
    cir.br ^bb4 loc(#loc21)
  ^bb3:  // pred: ^bb1
    %15 = cir.const #cir.int<8> : !u64i loc(#loc175)
    %16 = cir.call @_Znwm(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc25)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc175)
    cir.call @_ZN12TwoIntsClassC2Ev(%17) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc35)
    cir.store %17, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc176)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
    %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
    %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc17)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc179)
  ^bb6:  // pred: ^bb5
    %24 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc43)
    %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc180)
    cir.brcond %25 ^bb7, ^bb8 loc(#loc181)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
    %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc50)
    cir.br ^bb9 loc(#loc46)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc42)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc42)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc11)
  } loc(#loc165)
  cir.func internal private @_ZN42CWE416_Use_After_Free__new_delete_class_12L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc55)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc59)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc186)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc187)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc188)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc66)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc188)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc65)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc189)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc70)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc72)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc72)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc66)
    cir.br ^bb4 loc(#loc62)
  ^bb3:  // pred: ^bb1
    %15 = cir.const #cir.int<8> : !u64i loc(#loc192)
    %16 = cir.call @_Znwm(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc66)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc192)
    cir.call @_ZN12TwoIntsClassC2Ev(%17) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc74)
    cir.store %17, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc193)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc77)
    %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc79)
    %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc80)
    cir.call @_ZdlPv(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc66)
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc58)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc196)
  ^bb6:  // pred: ^bb5
    %26 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc83)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc197)
    cir.brcond %27 ^bb7, ^bb8 loc(#loc198)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9 loc(#loc86)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc82)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc82)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc52)
  } loc(#loc182)
  cir.func internal private @_ZN42CWE416_Use_After_Free__new_delete_class_12L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc200)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc96)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc203)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc204)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc205)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc103)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc205)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc102)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc206)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc106)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc107)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc108)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.br ^bb4 loc(#loc99)
  ^bb3:  // pred: ^bb1
    %13 = cir.const #cir.int<8> : !u64i loc(#loc209)
    %14 = cir.call @_Znwm(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc103)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc209)
    cir.call @_ZN12TwoIntsClassC2Ev(%15) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc110)
    cir.store %15, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc210)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc113)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc114)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc115)
    %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb4 loc(#loc95)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc95)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc213)
  ^bb6:  // pred: ^bb5
    %22 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc118)
    %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc214)
    cir.brcond %23 ^bb7, ^bb8 loc(#loc215)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc123)
    %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc125)
    cir.br ^bb9 loc(#loc121)
  ^bb8:  // pred: ^bb6
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc126)
    %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc128)
    cir.br ^bb9 loc(#loc117)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc117)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc89)
  } loc(#loc199)
  cir.func @_ZN42CWE416_Use_After_Free__new_delete_class_124goodEv() extra(#fn_attr2) {
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_12L7goodB2GEv() : () -> () loc(#loc131)
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_12L7goodG2BEv() : () -> () loc(#loc132)
    cir.return loc(#loc130)
  } loc(#loc216)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc217)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc218)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc142)
  cir.func @main(%arg0: !s32i loc(fused[#loc145, #loc146]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc147, #loc148])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc221)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc222)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc144)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc149)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc150)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc151)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc151)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc152)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc139)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_124goodEv() : () -> () loc(#loc154)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc140)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc141)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_123badEv() : () -> () loc(#loc157)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc142)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc159)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    cir.return %15 : !s32i loc(#loc223)
  } loc(#loc220)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__new_delete_class_12.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":26:1)
#loc11 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":59:1)
#loc12 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":28:5)
#loc13 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":28:20)
#loc14 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":30:12)
#loc15 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":30:5)
#loc16 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":31:5)
#loc17 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":45:5)
#loc18 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":31:8)
#loc19 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":31:33)
#loc20 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":32:5)
#loc21 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":38:5)
#loc22 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":40:5)
#loc23 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":33:16)
#loc24 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":33:20)
#loc25 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":26:6)
#loc26 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":33:9)
#loc27 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":34:24)
#loc28 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":34:9)
#loc29 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc30 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":35:24)
#loc31 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":35:9)
#loc32 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc33 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":37:16)
#loc34 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":41:16)
#loc35 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":41:20)
#loc36 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":41:9)
#loc37 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":42:24)
#loc38 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":42:9)
#loc39 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":43:24)
#loc40 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":43:9)
#loc41 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":46:5)
#loc42 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":58:5)
#loc43 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":46:8)
#loc44 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":46:33)
#loc45 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":47:5)
#loc46 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":51:5)
#loc47 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":53:5)
#loc48 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":49:22)
#loc49 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":49:28)
#loc50 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":49:9)
#loc51 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":68:1)
#loc52 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":103:1)
#loc53 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":70:5)
#loc54 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":70:20)
#loc55 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":72:12)
#loc56 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":72:5)
#loc57 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":73:5)
#loc58 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":88:5)
#loc59 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":73:8)
#loc60 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":73:33)
#loc61 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":74:5)
#loc62 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":80:5)
#loc63 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":82:5)
#loc64 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":75:16)
#loc65 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":75:20)
#loc66 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":68:13)
#loc67 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":75:9)
#loc68 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":76:24)
#loc69 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":76:9)
#loc70 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":77:24)
#loc71 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":77:9)
#loc72 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":79:16)
#loc73 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":83:16)
#loc74 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":83:20)
#loc75 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":83:9)
#loc76 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":84:24)
#loc77 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":84:9)
#loc78 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":85:24)
#loc79 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":85:9)
#loc80 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":87:16)
#loc81 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":89:5)
#loc82 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":102:5)
#loc83 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":89:8)
#loc84 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":89:33)
#loc85 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":90:5)
#loc86 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":95:5)
#loc87 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":97:5)
#loc88 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":108:1)
#loc89 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":139:1)
#loc90 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":110:5)
#loc91 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":110:20)
#loc92 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":112:12)
#loc93 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":112:5)
#loc94 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":113:5)
#loc95 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":126:5)
#loc96 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":113:8)
#loc97 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":113:33)
#loc98 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":114:5)
#loc99 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":119:5)
#loc100 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":121:5)
#loc101 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":115:16)
#loc102 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":115:20)
#loc103 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":108:13)
#loc104 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":115:9)
#loc105 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":116:24)
#loc106 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":116:9)
#loc107 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":117:24)
#loc108 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":117:9)
#loc109 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":122:16)
#loc110 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":122:20)
#loc111 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":122:9)
#loc112 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":123:24)
#loc113 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":123:9)
#loc114 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":124:24)
#loc115 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":124:9)
#loc116 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":127:5)
#loc117 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":138:5)
#loc118 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":127:8)
#loc119 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":127:33)
#loc120 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":128:5)
#loc121 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":132:5)
#loc122 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":134:5)
#loc123 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":130:22)
#loc124 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":130:28)
#loc125 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":130:9)
#loc126 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":136:22)
#loc127 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":136:28)
#loc128 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":136:9)
#loc129 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":141:1)
#loc130 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":145:1)
#loc131 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":143:5)
#loc132 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":144:5)
#loc133 = loc("/usr/include/stdlib.h":575:1)
#loc134 = loc("/usr/include/stdlib.h":575:41)
#loc135 = loc("/usr/include/time.h":76:1)
#loc136 = loc("/usr/include/time.h":76:38)
#loc137 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc138 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc139 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":165:15)
#loc140 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":167:15)
#loc141 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":170:15)
#loc142 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":172:15)
#loc143 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":160:1)
#loc144 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":175:1)
#loc149 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":161:1)
#loc150 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":163:27)
#loc151 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":163:22)
#loc152 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":163:5)
#loc153 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":165:5)
#loc154 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":166:5)
#loc155 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":167:5)
#loc156 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":170:5)
#loc157 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":171:5)
#loc158 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":172:5)
#loc159 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":174:12)
#loc160 = loc("CWE416_Use_After_Free__new_delete_class_12.cpp":174:5)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc6, #loc7])
#loc164 = loc(fused[#loc8, #loc9])
#loc165 = loc(fused[#loc10, #loc11])
#loc166 = loc(fused[#loc12, #loc13])
#loc167 = loc(fused[#loc15, #loc14])
#loc168 = loc(fused[#loc16, #loc17])
#loc169 = loc(fused[#loc18, #loc19])
#loc170 = loc(fused[#loc20, #loc21, #loc22, #loc17])
#loc171 = loc(fused[#loc23, #loc24])
#loc172 = loc(fused[#loc26, #loc24])
#loc173 = loc(fused[#loc28, #loc27])
#loc174 = loc(fused[#loc31, #loc30])
#loc175 = loc(fused[#loc34, #loc35])
#loc176 = loc(fused[#loc36, #loc35])
#loc177 = loc(fused[#loc38, #loc37])
#loc178 = loc(fused[#loc40, #loc39])
#loc179 = loc(fused[#loc41, #loc42])
#loc180 = loc(fused[#loc43, #loc44])
#loc181 = loc(fused[#loc45, #loc46, #loc47, #loc42])
#loc182 = loc(fused[#loc51, #loc52])
#loc183 = loc(fused[#loc53, #loc54])
#loc184 = loc(fused[#loc56, #loc55])
#loc185 = loc(fused[#loc57, #loc58])
#loc186 = loc(fused[#loc59, #loc60])
#loc187 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc188 = loc(fused[#loc64, #loc65])
#loc189 = loc(fused[#loc67, #loc65])
#loc190 = loc(fused[#loc69, #loc68])
#loc191 = loc(fused[#loc71, #loc70])
#loc192 = loc(fused[#loc73, #loc74])
#loc193 = loc(fused[#loc75, #loc74])
#loc194 = loc(fused[#loc77, #loc76])
#loc195 = loc(fused[#loc79, #loc78])
#loc196 = loc(fused[#loc81, #loc82])
#loc197 = loc(fused[#loc83, #loc84])
#loc198 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc199 = loc(fused[#loc88, #loc89])
#loc200 = loc(fused[#loc90, #loc91])
#loc201 = loc(fused[#loc93, #loc92])
#loc202 = loc(fused[#loc94, #loc95])
#loc203 = loc(fused[#loc96, #loc97])
#loc204 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc205 = loc(fused[#loc101, #loc102])
#loc206 = loc(fused[#loc104, #loc102])
#loc207 = loc(fused[#loc106, #loc105])
#loc208 = loc(fused[#loc108, #loc107])
#loc209 = loc(fused[#loc109, #loc110])
#loc210 = loc(fused[#loc111, #loc110])
#loc211 = loc(fused[#loc113, #loc112])
#loc212 = loc(fused[#loc115, #loc114])
#loc213 = loc(fused[#loc116, #loc117])
#loc214 = loc(fused[#loc118, #loc119])
#loc215 = loc(fused[#loc120, #loc121, #loc122, #loc117])
#loc216 = loc(fused[#loc129, #loc130])
#loc217 = loc(fused[#loc133, #loc134])
#loc218 = loc(fused[#loc135, #loc136])
#loc219 = loc(fused[#loc137, #loc138])
#loc220 = loc(fused[#loc143, #loc144])
#loc223 = loc(fused[#loc160, #loc159])
