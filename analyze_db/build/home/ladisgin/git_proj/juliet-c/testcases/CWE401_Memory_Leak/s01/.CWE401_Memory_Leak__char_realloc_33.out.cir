!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc110 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":104:10)
#loc111 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":104:14)
#loc112 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":104:20)
#loc113 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":104:32)
#loc168 = loc(fused[#loc110, #loc111])
#loc169 = loc(fused[#loc112, #loc113])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc127)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.func @_ZN35CWE401_Memory_Leak__char_realloc_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc133)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc17)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %4 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc20)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc22)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc135)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc136)
    %11 = cir.call @realloc(%6, %10) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc30)
    %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc140)
    cir.brcond %15 ^bb2, ^bb3 loc(#loc141)
  ^bb2:  // pred: ^bb1
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb3 loc(#loc28)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb5 loc(#loc142)
  ^bb5:  // pred: ^bb4
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.br ^bb6 loc(#loc40)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc11)
  } loc(#loc130)
  cir.func internal private @_ZN35CWE401_Memory_Leak__char_realloc_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc146)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc49)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc51)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc51)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc51)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc51)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc51)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc53)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc55)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc55)
    %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc53)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc44)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb2 loc(#loc59)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc42)
  } loc(#loc143)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc150)
  cir.func internal private @_ZN35CWE401_Memory_Leak__char_realloc_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc154)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc69)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc70)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    %4 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc72)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc74)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc156)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc157)
    %11 = cir.call @realloc(%6, %10) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc72)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc82)
    %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc161)
    cir.brcond %15 ^bb2, ^bb3 loc(#loc162)
  ^bb2:  // pred: ^bb1
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc84)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc86)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
    cir.br ^bb3 loc(#loc80)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc80)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc88)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc88)
    %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb5 loc(#loc163)
  ^bb5:  // pred: ^bb4
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc65)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc94)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
    cir.br ^bb6 loc(#loc93)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc63)
  } loc(#loc151)
  cir.func @_ZN35CWE401_Memory_Leak__char_realloc_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN35CWE401_Memory_Leak__char_realloc_33L7goodG2BEv() : () -> () loc(#loc98)
    cir.call @_ZN35CWE401_Memory_Leak__char_realloc_33L7goodB2GEv() : () -> () loc(#loc99)
    cir.return loc(#loc97)
  } loc(#loc164)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc165)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc107)
  cir.func @main(%arg0: !s32i loc(fused[#loc110, #loc111]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc112, #loc113])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc109)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc114)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc115)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc116)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc116)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc117)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc104)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.call @_ZN35CWE401_Memory_Leak__char_realloc_334goodEv() : () -> () loc(#loc119)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc105)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc106)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.call @_ZN35CWE401_Memory_Leak__char_realloc_333badEv() : () -> () loc(#loc122)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc107)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc124)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    cir.return %15 : !s32i loc(#loc170)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":36:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":27:1)
#loc11 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":43:1)
#loc12 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":39:9)
#loc13 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":39:23)
#loc14 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":29:5)
#loc15 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":29:12)
#loc16 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":30:5)
#loc17 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":30:23)
#loc18 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":31:12)
#loc19 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":31:5)
#loc20 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":33:20)
#loc21 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":33:28)
#loc22 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":33:34)
#loc23 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":33:38)
#loc24 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":33:49)
#loc25 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":33:50)
#loc26 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":33:5)
#loc27 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":34:5)
#loc28 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":34:33)
#loc29 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":34:9)
#loc30 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":34:17)
#loc31 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":34:23)
#loc32 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":34:24)
#loc33 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":34:30)
#loc34 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":34:29)
#loc35 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":36:12)
#loc36 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":36:5)
#loc37 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":37:15)
#loc38 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":37:5)
#loc39 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":38:5)
#loc40 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":42:5)
#loc41 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":50:1)
#loc42 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":65:1)
#loc43 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":61:9)
#loc44 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":61:23)
#loc45 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":52:5)
#loc46 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":52:12)
#loc47 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":53:5)
#loc48 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":53:23)
#loc49 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":54:12)
#loc50 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":54:5)
#loc51 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":56:20)
#loc52 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":56:5)
#loc53 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":58:5)
#loc54 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":58:12)
#loc55 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":58:18)
#loc56 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":59:15)
#loc57 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":59:5)
#loc58 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":60:5)
#loc59 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":64:5)
#loc60 = loc("/usr/include/stdlib.h":687:1)
#loc61 = loc("/usr/include/stdlib.h":687:32)
#loc62 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":68:1)
#loc63 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":84:1)
#loc64 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":80:9)
#loc65 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":80:23)
#loc66 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":70:5)
#loc67 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":70:12)
#loc68 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":71:5)
#loc69 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":71:23)
#loc70 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":72:12)
#loc71 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":72:5)
#loc72 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":74:20)
#loc73 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":74:28)
#loc74 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":74:34)
#loc75 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":74:38)
#loc76 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":74:49)
#loc77 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":74:50)
#loc78 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":74:5)
#loc79 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":75:5)
#loc80 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":75:33)
#loc81 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":75:9)
#loc82 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":75:17)
#loc83 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":75:23)
#loc84 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":75:24)
#loc85 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":75:30)
#loc86 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":75:29)
#loc87 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":77:12)
#loc88 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":77:18)
#loc89 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":77:5)
#loc90 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":78:15)
#loc91 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":78:5)
#loc92 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":79:5)
#loc93 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":83:5)
#loc94 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":82:9)
#loc95 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":82:14)
#loc96 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":86:1)
#loc97 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":90:1)
#loc98 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":88:5)
#loc99 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":89:5)
#loc100 = loc("/usr/include/stdlib.h":575:1)
#loc101 = loc("/usr/include/stdlib.h":575:41)
#loc102 = loc("/usr/include/time.h":76:1)
#loc103 = loc("/usr/include/time.h":76:38)
#loc104 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":109:15)
#loc105 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":111:15)
#loc106 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":114:15)
#loc107 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":116:15)
#loc108 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":104:1)
#loc109 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":119:1)
#loc114 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":105:1)
#loc115 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":107:27)
#loc116 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":107:22)
#loc117 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":107:5)
#loc118 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":109:5)
#loc119 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":110:5)
#loc120 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":111:5)
#loc121 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":114:5)
#loc122 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":115:5)
#loc123 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":116:5)
#loc124 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":118:12)
#loc125 = loc("CWE401_Memory_Leak__char_realloc_33.cpp":118:5)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc5, #loc6])
#loc129 = loc(fused[#loc8, #loc9])
#loc130 = loc(fused[#loc10, #loc11])
#loc131 = loc(fused[#loc12, #loc13])
#loc132 = loc(fused[#loc14, #loc15])
#loc133 = loc(fused[#loc16, #loc17])
#loc134 = loc(fused[#loc19, #loc18])
#loc135 = loc(fused[#loc23, #loc24])
#loc136 = loc(fused[#loc22, #loc24])
#loc137 = loc(fused[#loc20, #loc25])
#loc138 = loc(fused[#loc26, #loc25])
#loc139 = loc(fused[#loc27, #loc28])
#loc140 = loc(fused[#loc29, #loc30])
#loc141 = loc(fused[#loc31, #loc28])
#loc142 = loc(fused[#loc39, #loc40])
#loc143 = loc(fused[#loc41, #loc42])
#loc144 = loc(fused[#loc43, #loc44])
#loc145 = loc(fused[#loc45, #loc46])
#loc146 = loc(fused[#loc47, #loc48])
#loc147 = loc(fused[#loc50, #loc49])
#loc148 = loc(fused[#loc52, #loc51])
#loc149 = loc(fused[#loc58, #loc59])
#loc150 = loc(fused[#loc60, #loc61])
#loc151 = loc(fused[#loc62, #loc63])
#loc152 = loc(fused[#loc64, #loc65])
#loc153 = loc(fused[#loc66, #loc67])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc71, #loc70])
#loc156 = loc(fused[#loc75, #loc76])
#loc157 = loc(fused[#loc74, #loc76])
#loc158 = loc(fused[#loc72, #loc77])
#loc159 = loc(fused[#loc78, #loc77])
#loc160 = loc(fused[#loc79, #loc80])
#loc161 = loc(fused[#loc81, #loc82])
#loc162 = loc(fused[#loc83, #loc80])
#loc163 = loc(fused[#loc92, #loc93])
#loc164 = loc(fused[#loc96, #loc97])
#loc165 = loc(fused[#loc100, #loc101])
#loc166 = loc(fused[#loc102, #loc103])
#loc167 = loc(fused[#loc108, #loc109])
#loc170 = loc(fused[#loc125, #loc124])
