!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":112:10)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":112:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":112:20)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":112:32)
#loc155 = loc(fused[#loc61, #loc62])
#loc156 = loc(fused[#loc63, #loc64])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc133)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc134)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66b_badSink(!cir.ptr<!s32i>) loc(#loc137)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc139)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc140)
    %2 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc141)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc21)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc139)
    cir.store %5, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc139)
    cir.br ^bb2 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc28)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc28)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc28)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc28)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc28)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc28)
    %13 = cir.binop(add, %10, %12) : !u64i loc(#loc28)
    %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc28)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc134)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
    %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc145)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc146)
  ^bb3:  // pred: ^bb2
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc36)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb5 loc(#loc33)
  ^bb4:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb5 loc(#loc26)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %27 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc42)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc43)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66b_badSink(%29) : (!cir.ptr<!s32i>) -> () loc(#loc44)
    cir.return loc(#loc13)
  } loc(#loc138)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc149)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc152)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66_good : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %17 : !s32i loc(#loc159)
  } loc(#loc154)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66b_goodG2BSink(!cir.ptr<!s32i>) loc(#loc160)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc163)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc88)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc90)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc93)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc94)
    %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc94)
    cir.store %5, %8 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc95)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66b_goodG2BSink(%9) : (!cir.ptr<!s32i>) -> () loc(#loc96)
    cir.return loc(#loc82)
  } loc(#loc161)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66b_goodB2GSink(!cir.ptr<!s32i>) loc(#loc167)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc169)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %2 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc171)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc108)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc169)
    cir.store %5, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc169)
    cir.br ^bb2 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc115)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc115)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc115)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc115)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc115)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc115)
    %13 = cir.binop(add, %10, %12) : !u64i loc(#loc115)
    %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc115)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc134)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
    %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc117)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc175)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc176)
  ^bb3:  // pred: ^bb2
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc123)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb5 loc(#loc120)
  ^bb4:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc126)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.br ^bb5 loc(#loc113)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc113)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc111)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc129)
    %27 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc130)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc130)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc131)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66b_goodB2GSink(%29) : (!cir.ptr<!s32i>) -> () loc(#loc132)
    cir.return loc(#loc100)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":43:23)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":25:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":25:83)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":27:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":49:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":34:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":34:45)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":29:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":29:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":30:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":30:20)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":32:13)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":32:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":32:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":33:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":45:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":36:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":44:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":36:19)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":36:32)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":36:49)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":36:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":36:59)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":37:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":40:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":42:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":39:25)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":39:20)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":39:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":39:36)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":43:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":47:20)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":47:15)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":47:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":48:67)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":48:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":97:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":101:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":99:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":99:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":100:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":100:13)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":117:15)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":119:15)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":122:15)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":124:15)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":112:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":127:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":113:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":115:27)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":115:22)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":115:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":117:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":118:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":118:63)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":119:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":122:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":123:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":123:62)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":124:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":126:12)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":126:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":56:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":56:87)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":58:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":69:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":60:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":60:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":61:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":61:20)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":63:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":63:12)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":63:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":66:12)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":66:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":67:20)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":67:15)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":67:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":68:71)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":68:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":72:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":72:87)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":74:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":95:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":81:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":81:45)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":76:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":76:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":77:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":77:20)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":79:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":79:12)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":79:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":80:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":92:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":83:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":91:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":83:19)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":83:32)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":83:49)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":83:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":83:59)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":84:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":87:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":89:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":86:25)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":86:20)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":86:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":86:36)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":90:23)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":90:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":93:20)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":93:15)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":93:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":94:71)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_66a.c":94:5)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc12, #loc13])
#loc139 = loc(fused[#loc14, #loc15])
#loc140 = loc(fused[#loc16, #loc17])
#loc141 = loc(fused[#loc18, #loc19])
#loc142 = loc(fused[#loc22, #loc20])
#loc143 = loc(fused[#loc23, #loc24])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc30, #loc31])
#loc146 = loc(fused[#loc32, #loc33, #loc34, #loc26])
#loc147 = loc(fused[#loc37, #loc38])
#loc148 = loc(fused[#loc42, #loc40])
#loc149 = loc(fused[#loc45, #loc46])
#loc150 = loc(fused[#loc47, #loc48])
#loc151 = loc(fused[#loc49, #loc50])
#loc152 = loc(fused[#loc51, #loc52])
#loc153 = loc(fused[#loc53, #loc54])
#loc154 = loc(fused[#loc59, #loc60])
#loc157 = loc(fused[#loc70, #loc71])
#loc158 = loc(fused[#loc74, #loc75])
#loc159 = loc(fused[#loc78, #loc77])
#loc160 = loc(fused[#loc79, #loc80])
#loc161 = loc(fused[#loc81, #loc82])
#loc162 = loc(fused[#loc83, #loc84])
#loc163 = loc(fused[#loc85, #loc86])
#loc164 = loc(fused[#loc89, #loc87])
#loc165 = loc(fused[#loc91, #loc90])
#loc166 = loc(fused[#loc94, #loc92])
#loc167 = loc(fused[#loc97, #loc98])
#loc168 = loc(fused[#loc99, #loc100])
#loc169 = loc(fused[#loc101, #loc102])
#loc170 = loc(fused[#loc103, #loc104])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc109, #loc107])
#loc173 = loc(fused[#loc110, #loc111])
#loc174 = loc(fused[#loc112, #loc113])
#loc175 = loc(fused[#loc117, #loc118])
#loc176 = loc(fused[#loc119, #loc120, #loc121, #loc113])
#loc177 = loc(fused[#loc124, #loc125])
#loc178 = loc(fused[#loc130, #loc128])
