!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @CWE78_OS_Command_Injection__char_connect_socket_system_61b_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc61)
  cir.func private  @system(!cir.ptr<!s8i>) -> !s32i loc(#loc62)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc63)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc64)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_connect_socket_system_61_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc66)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc67)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc67)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc67)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %5 = cir.call @CWE78_OS_Command_Injection__char_connect_socket_system_61b_badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc19)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %7 = cir.call @system(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc25)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc26)
      %9 = cir.cmp(ne, %7, %8) : !s32i, !s32i loc(#loc71)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc27)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc7)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc7)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc29)
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc31)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc72)
    } loc(#loc70)
    cir.return loc(#loc11)
  } loc(#loc65)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_connect_socket_system_61_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc74)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc73)
  cir.func private  @CWE78_OS_Command_Injection__char_connect_socket_system_61b_goodG2BSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc75)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc77)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc78)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc78)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc78)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc79)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %5 = cir.call @CWE78_OS_Command_Injection__char_connect_socket_system_61b_goodG2BSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc47)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      %7 = cir.call @system(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc53)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc54)
      %9 = cir.cmp(ne, %7, %8) : !s32i, !s32i loc(#loc82)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc55)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc57)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc57)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc58)
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc59)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc60)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc59)
      } loc(#loc83)
    } loc(#loc81)
    cir.return loc(#loc39)
  } loc(#loc76)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":57:1)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":57:88)
#loc3 = loc("/usr/include/stdlib.h":923:1)
#loc4 = loc("/usr/include/stdlib.h":923:41)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":68:19)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":59:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":71:1)
#loc12 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":61:5)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":61:12)
#loc14 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":62:5)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":62:26)
#loc16 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":63:12)
#loc17 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":63:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":64:81)
#loc19 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":64:12)
#loc20 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":64:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":64:85)
#loc22 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":66:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":70:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":66:16)
#loc25 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":66:9)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":66:25)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":66:22)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":67:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":68:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":69:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":69:14)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":94:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":97:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":96:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":96:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":78:1)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":78:92)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":80:1)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":92:1)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":82:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":82:12)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":83:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":83:26)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":84:12)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":84:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":85:85)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":85:12)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":85:5)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":85:89)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":87:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":91:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":87:16)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":87:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":87:25)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":87:22)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":88:5)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":89:19)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":89:9)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":90:9)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_61a.c":90:14)
#loc61 = loc(fused[#loc1, #loc2])
#loc62 = loc(fused[#loc3, #loc4])
#loc63 = loc(fused[#loc5, #loc6])
#loc64 = loc(fused[#loc8, #loc9])
#loc65 = loc(fused[#loc10, #loc11])
#loc66 = loc(fused[#loc12, #loc13])
#loc67 = loc(fused[#loc14, #loc15])
#loc68 = loc(fused[#loc17, #loc16])
#loc69 = loc(fused[#loc20, #loc21])
#loc70 = loc(fused[#loc22, #loc23])
#loc71 = loc(fused[#loc25, #loc26])
#loc72 = loc(fused[#loc28, #loc23])
#loc73 = loc(fused[#loc32, #loc33])
#loc74 = loc(fused[#loc34, #loc35])
#loc75 = loc(fused[#loc36, #loc37])
#loc76 = loc(fused[#loc38, #loc39])
#loc77 = loc(fused[#loc40, #loc41])
#loc78 = loc(fused[#loc42, #loc43])
#loc79 = loc(fused[#loc45, #loc44])
#loc80 = loc(fused[#loc48, #loc49])
#loc81 = loc(fused[#loc50, #loc51])
#loc82 = loc(fused[#loc53, #loc54])
#loc83 = loc(fused[#loc56, #loc51])
