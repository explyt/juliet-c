!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc175 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":155:10)
#loc176 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":155:14)
#loc177 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":155:20)
#loc178 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":155:32)
#loc268 = loc(fused[#loc175, #loc176])
#loc269 = loc(fused[#loc177, #loc178])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc191)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc192)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc193)
  cir.func @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_033badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc196)
    cir.br ^bb1 loc(#loc197)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc15)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc198)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc199)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc18)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc19)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc200)
    %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc201)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc202)
    cir.br ^bb3 loc(#loc203)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc27)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc204)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc205)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc31)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc14)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc206)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<5> : !s32i loc(#loc34)
    %18 = cir.const #cir.int<5> : !s32i loc(#loc35)
    %19 = cir.cmp(eq, %17, %18) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc208)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc37)
    cir.call @_ZdlPv(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc38)
    cir.br ^bb11 loc(#loc33)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc33)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc8)
  } loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc39)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc209)
  cir.func internal private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc46)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc50)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc51)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc214)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc215)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc53)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc54)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc216)
    %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc53)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc217)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc218)
    cir.br ^bb3 loc(#loc219)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc62)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc220)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc221)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc64)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc66)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc64)
    cir.br ^bb5 loc(#loc60)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc60)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc49)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc49)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc222)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<5> : !s32i loc(#loc69)
    %18 = cir.const #cir.int<5> : !s32i loc(#loc70)
    %19 = cir.cmp(ne, %17, %18) : !s32i, !cir.bool loc(#loc223)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc224)
  ^bb10:  // pred: ^bb9
    %20 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb12 loc(#loc72)
  ^bb11:  // pred: ^bb9
    %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc75)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc76)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
    cir.br ^bb12 loc(#loc68)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc68)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc43)
  } loc(#loc210)
  cir.func internal private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc81)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc227)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc85)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc86)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc229)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc230)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc88)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc89)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc231)
    %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc232)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc233)
    cir.br ^bb3 loc(#loc234)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc97)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc235)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc236)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc99)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc101)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
    cir.br ^bb5 loc(#loc95)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc95)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc84)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc237)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<5> : !s32i loc(#loc104)
    %18 = cir.const #cir.int<5> : !s32i loc(#loc105)
    %19 = cir.cmp(eq, %17, %18) : !s32i, !cir.bool loc(#loc238)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc239)
  ^bb10:  // pred: ^bb9
    %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc107)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc108)
    cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb11 loc(#loc103)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc103)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc78)
  } loc(#loc225)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc240)
  cir.func internal private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc115)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc243)
    cir.br ^bb1 loc(#loc244)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc119)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc120)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc245)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc246)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc124)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb4 loc(#loc122)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<4> : !u64i loc(#loc247)
    %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc128)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc247)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc248)
    cir.br ^bb4 loc(#loc118)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc118)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc249)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<5> : !s32i loc(#loc132)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc133)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc250)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc251)
  ^bb7:  // pred: ^bb6
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc135)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc128)
    cir.br ^bb8 loc(#loc131)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc131)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc112)
  } loc(#loc241)
  cir.func internal private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc253)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc140)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc254)
    cir.br ^bb1 loc(#loc255)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc144)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc145)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc256)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc257)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<4> : !u64i loc(#loc258)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc149)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc258)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc259)
    cir.br ^bb3 loc(#loc143)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc260)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<5> : !s32i loc(#loc153)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc154)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc261)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc262)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc156)
    cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
    cir.br ^bb7 loc(#loc152)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc152)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc137)
  } loc(#loc252)
  cir.func @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_034goodEv() extra(#fn_attr1) {
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03L8goodB2G1Ev() : () -> () loc(#loc159)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03L8goodB2G2Ev() : () -> () loc(#loc160)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03L8goodG2B1Ev() : () -> () loc(#loc161)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03L8goodG2B2Ev() : () -> () loc(#loc162)
    cir.return loc(#loc158)
  } loc(#loc263)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc264)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc265)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc172)
  cir.func @main(%arg0: !s32i loc(fused[#loc175, #loc176]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc177, #loc178])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc268)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc269)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc174)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc179)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc180)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc181)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc181)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc182)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc169)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_034goodEv() : () -> () loc(#loc184)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc170)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc171)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_033badEv() : () -> () loc(#loc187)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc172)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc189)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    cir.return %15 : !s32i loc(#loc270)
  } loc(#loc267)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":25:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":42:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":27:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":27:11)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":29:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":29:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":30:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":35:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":30:8)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":30:11)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":31:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":33:23)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":33:30)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":33:35)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":33:45)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":33:46)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":33:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":34:9)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":34:37)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":34:13)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":34:21)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":34:27)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":34:28)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":34:34)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":34:33)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":36:5)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":41:5)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":36:8)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":36:11)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":37:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":40:16)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":25:6)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":63:19)
#loc40 = loc("/usr/include/stdlib.h":687:1)
#loc41 = loc("/usr/include/stdlib.h":687:32)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":49:1)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":70:1)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":51:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":51:11)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":53:12)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":53:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":54:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":59:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":54:8)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":54:11)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":55:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":57:23)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":57:30)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":57:35)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":57:45)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":57:46)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":57:9)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":58:9)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":58:37)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":58:13)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":58:21)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":58:27)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":58:28)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":58:34)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":58:33)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":60:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":69:5)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":60:8)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":60:11)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":61:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":64:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":66:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":63:9)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":68:9)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":68:14)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":73:1)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":89:1)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":75:5)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":75:11)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":77:12)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":77:5)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":78:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":83:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":78:8)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":78:11)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":79:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":81:23)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":81:30)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":81:35)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":81:45)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":81:46)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":81:9)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":82:9)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":82:37)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":82:13)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":82:21)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":82:27)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":82:28)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":82:34)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":82:33)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":84:5)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":88:5)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":84:8)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":84:11)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":85:5)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":87:9)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":87:14)
#loc109 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc110 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":92:1)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":113:1)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":94:5)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":94:11)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":96:12)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":96:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":97:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":106:5)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":97:8)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":97:11)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":98:5)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":101:5)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":103:5)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":100:19)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":100:9)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":105:16)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":105:20)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":92:13)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":105:9)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":107:5)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":112:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":107:8)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":107:11)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":108:5)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":111:16)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":116:1)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":132:1)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":118:5)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":118:11)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":120:12)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":120:5)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":121:5)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":125:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":121:8)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":121:11)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":122:5)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":124:16)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":124:20)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":116:13)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":124:9)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":126:5)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":131:5)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":126:8)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":126:11)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":127:5)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":130:16)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":134:1)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":140:1)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":136:5)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":137:5)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":138:5)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":139:5)
#loc163 = loc("/usr/include/stdlib.h":575:1)
#loc164 = loc("/usr/include/stdlib.h":575:41)
#loc165 = loc("/usr/include/time.h":76:1)
#loc166 = loc("/usr/include/time.h":76:38)
#loc167 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc168 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":160:15)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":162:15)
#loc171 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":165:15)
#loc172 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":167:15)
#loc173 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":155:1)
#loc174 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":170:1)
#loc179 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":156:1)
#loc180 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":158:27)
#loc181 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":158:22)
#loc182 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":158:5)
#loc183 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":160:5)
#loc184 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":161:5)
#loc185 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":162:5)
#loc186 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":165:5)
#loc187 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":166:5)
#loc188 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":167:5)
#loc189 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":169:12)
#loc190 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_calloc_03.cpp":169:5)
#loc191 = loc(fused[#loc1, #loc2])
#loc192 = loc(fused[#loc3, #loc4])
#loc193 = loc(fused[#loc5, #loc6])
#loc194 = loc(fused[#loc7, #loc8])
#loc195 = loc(fused[#loc9, #loc10])
#loc196 = loc(fused[#loc12, #loc11])
#loc197 = loc(fused[#loc13, #loc14])
#loc198 = loc(fused[#loc15, #loc16])
#loc199 = loc(fused[#loc17, #loc14])
#loc200 = loc(fused[#loc20, #loc21])
#loc201 = loc(fused[#loc18, #loc22])
#loc202 = loc(fused[#loc23, #loc22])
#loc203 = loc(fused[#loc24, #loc25])
#loc204 = loc(fused[#loc26, #loc27])
#loc205 = loc(fused[#loc28, #loc25])
#loc206 = loc(fused[#loc32, #loc33])
#loc207 = loc(fused[#loc34, #loc35])
#loc208 = loc(fused[#loc36, #loc33])
#loc209 = loc(fused[#loc40, #loc41])
#loc210 = loc(fused[#loc42, #loc43])
#loc211 = loc(fused[#loc44, #loc45])
#loc212 = loc(fused[#loc47, #loc46])
#loc213 = loc(fused[#loc48, #loc49])
#loc214 = loc(fused[#loc50, #loc51])
#loc215 = loc(fused[#loc52, #loc49])
#loc216 = loc(fused[#loc55, #loc56])
#loc217 = loc(fused[#loc53, #loc57])
#loc218 = loc(fused[#loc58, #loc57])
#loc219 = loc(fused[#loc59, #loc60])
#loc220 = loc(fused[#loc61, #loc62])
#loc221 = loc(fused[#loc63, #loc60])
#loc222 = loc(fused[#loc67, #loc68])
#loc223 = loc(fused[#loc69, #loc70])
#loc224 = loc(fused[#loc71, #loc72, #loc73, #loc68])
#loc225 = loc(fused[#loc77, #loc78])
#loc226 = loc(fused[#loc79, #loc80])
#loc227 = loc(fused[#loc82, #loc81])
#loc228 = loc(fused[#loc83, #loc84])
#loc229 = loc(fused[#loc85, #loc86])
#loc230 = loc(fused[#loc87, #loc84])
#loc231 = loc(fused[#loc90, #loc91])
#loc232 = loc(fused[#loc88, #loc92])
#loc233 = loc(fused[#loc93, #loc92])
#loc234 = loc(fused[#loc94, #loc95])
#loc235 = loc(fused[#loc96, #loc97])
#loc236 = loc(fused[#loc98, #loc95])
#loc237 = loc(fused[#loc102, #loc103])
#loc238 = loc(fused[#loc104, #loc105])
#loc239 = loc(fused[#loc106, #loc103])
#loc240 = loc(fused[#loc109, #loc110])
#loc241 = loc(fused[#loc111, #loc112])
#loc242 = loc(fused[#loc113, #loc114])
#loc243 = loc(fused[#loc116, #loc115])
#loc244 = loc(fused[#loc117, #loc118])
#loc245 = loc(fused[#loc119, #loc120])
#loc246 = loc(fused[#loc121, #loc122, #loc123, #loc118])
#loc247 = loc(fused[#loc126, #loc127])
#loc248 = loc(fused[#loc129, #loc127])
#loc249 = loc(fused[#loc130, #loc131])
#loc250 = loc(fused[#loc132, #loc133])
#loc251 = loc(fused[#loc134, #loc131])
#loc252 = loc(fused[#loc136, #loc137])
#loc253 = loc(fused[#loc138, #loc139])
#loc254 = loc(fused[#loc141, #loc140])
#loc255 = loc(fused[#loc142, #loc143])
#loc256 = loc(fused[#loc144, #loc145])
#loc257 = loc(fused[#loc146, #loc143])
#loc258 = loc(fused[#loc147, #loc148])
#loc259 = loc(fused[#loc150, #loc148])
#loc260 = loc(fused[#loc151, #loc152])
#loc261 = loc(fused[#loc153, #loc154])
#loc262 = loc(fused[#loc155, #loc152])
#loc263 = loc(fused[#loc157, #loc158])
#loc264 = loc(fused[#loc163, #loc164])
#loc265 = loc(fused[#loc165, #loc166])
#loc266 = loc(fused[#loc167, #loc168])
#loc267 = loc(fused[#loc173, #loc174])
#loc270 = loc(fused[#loc190, #loc189])
