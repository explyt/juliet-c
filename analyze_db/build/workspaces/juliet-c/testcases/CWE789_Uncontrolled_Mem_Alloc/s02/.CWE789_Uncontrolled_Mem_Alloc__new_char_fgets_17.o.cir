!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc222)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc223)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc224)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc226)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc14)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc15)
  cir.func @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc229)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc230)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc23)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc27)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc235)
        cir.condition(%8) loc(#loc235)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc238)
            %7 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc238)
            cir.store %7, %6 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc238)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc38)
              %9 = cir.const #cir.int<3> : !s32i loc(#loc39)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc39)
              %11 = cir.const #cir.int<8> : !u64i loc(#loc39)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc39)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc39)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc39)
              %15 = cir.binop(add, %12, %14) : !u64i loc(#loc39)
              %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc39)
              %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc223)
              %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
              %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc41)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc42)
              %21 = cir.cmp(ne, %19, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc240)
              cir.if %21 {
                %22 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc46)
                %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc47)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc48)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc49)
                %26 = cir.call @__isoc23_strtoul(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc46)
                cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc242)
              } else {
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc52)
              } loc(#loc241)
            } loc(#loc239)
          } loc(#loc237)
        } loc(#loc236)
        cir.yield loc(#loc26)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc54)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc243)
        cir.yield loc(#loc233)
      } loc(#loc233)
    } loc(#loc233)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc57)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc245)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc60)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc246)
        cir.condition(%8) loc(#loc246)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc249)
            cir.scope {
              %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc68)
              %8 = cir.const #cir.int<5> : !u64i loc(#loc251)
              %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc252)
              cir.if %9 {
                %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc74)
                %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc75)
                %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc254)
                cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
                %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc79)
                %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc14)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc14)
                %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc79)
                %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc82)
                %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
                cir.delete.array %19 : <!s8i> loc(#loc83)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc15)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc15)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc84)
              } loc(#loc253)
            } loc(#loc250)
          } loc(#loc248)
        } loc(#loc247)
        cir.yield loc(#loc56)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc86)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc256)
        cir.yield loc(#loc244)
      } loc(#loc244)
    } loc(#loc244)
    cir.return loc(#loc17)
  } loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc87)
  cir.func internal private @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc259)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc260)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc95)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc261)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc99)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc102)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc264)
        cir.condition(%8) loc(#loc264)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc267)
            %7 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc267)
            cir.store %7, %6 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc267)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc110)
              %9 = cir.const #cir.int<3> : !s32i loc(#loc111)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc111)
              %11 = cir.const #cir.int<8> : !u64i loc(#loc111)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc111)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc111)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc111)
              %15 = cir.binop(add, %12, %14) : !u64i loc(#loc111)
              %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc111)
              %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc223)
              %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc112)
              %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc113)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc114)
              %21 = cir.cmp(ne, %19, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc269)
              cir.if %21 {
                %22 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc118)
                %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc119)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc121)
                %26 = cir.call @__isoc23_strtoul(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc118)
                cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc271)
              } else {
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc124)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc124)
                cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc125)
              } loc(#loc270)
            } loc(#loc268)
          } loc(#loc266)
        } loc(#loc265)
        cir.yield loc(#loc98)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc127)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
        cir.yield loc(#loc262)
      } loc(#loc262)
    } loc(#loc262)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc130)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc274)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc275)
        cir.condition(%8) loc(#loc275)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc278)
            cir.scope {
              %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc141)
              %8 = cir.const #cir.int<5> : !u64i loc(#loc280)
              %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc281)
              %10 = cir.ternary(%9, true {
                %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc145)
                %12 = cir.const #cir.int<100> : !s32i loc(#loc146)
                %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc146)
                %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc282)
                %15 = cir.ternary(%14, true {
                  %16 = cir.const #true loc(#loc144)
                  cir.yield %16 : !cir.bool loc(#loc144)
                }, false {
                  %16 = cir.const #false loc(#loc144)
                  cir.yield %16 : !cir.bool loc(#loc144)
                }) : (!cir.bool) -> !cir.bool loc(#loc144)
                cir.yield %15 : !cir.bool loc(#loc144)
              }, false {
                %11 = cir.const #false loc(#loc144)
                cir.yield %11 : !cir.bool loc(#loc144)
              }) : (!cir.bool) -> !cir.bool loc(#loc144)
              cir.if %10 {
                %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc150)
                %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc151)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc284)
                cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc155)
                %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
                %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc157)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc157)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
                %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc159)
                %20 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                cir.delete.array %20 : <!s8i> loc(#loc160)
              } else {
                %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc87)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc87)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc161)
              } loc(#loc283)
            } loc(#loc279)
          } loc(#loc277)
        } loc(#loc276)
        cir.yield loc(#loc129)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc162)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc163)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc286)
        cir.yield loc(#loc273)
      } loc(#loc273)
    } loc(#loc273)
    cir.return loc(#loc89)
  } loc(#loc257)
  cir.func internal private @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc288)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc289)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc290)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc171)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc291)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc175)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc178)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc294)
        cir.condition(%8) loc(#loc294)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<20> : !s32i loc(#loc180)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc180)
          cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc296)
        } loc(#loc295)
        cir.yield loc(#loc174)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc182)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc183)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc297)
        cir.yield loc(#loc292)
      } loc(#loc292)
    } loc(#loc292)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc186)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc299)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc188)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc189)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc300)
        cir.condition(%8) loc(#loc300)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc303)
            cir.scope {
              %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc197)
              %8 = cir.const #cir.int<5> : !u64i loc(#loc305)
              %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc306)
              cir.if %9 {
                %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc203)
                %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc204)
                %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc308)
                cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc309)
                %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc208)
                %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc210)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc210)
                %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
                %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc212)
                %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
                cir.delete.array %19 : <!s8i> loc(#loc213)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc214)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc214)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc215)
              } loc(#loc307)
            } loc(#loc304)
          } loc(#loc302)
        } loc(#loc301)
        cir.yield loc(#loc185)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc216)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc217)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc310)
        cir.yield loc(#loc298)
      } loc(#loc298)
    } loc(#loc298)
    cir.return loc(#loc165)
  } loc(#loc287)
  cir.func @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17L7goodB2GEv() : () -> () loc(#loc220)
    cir.call @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17L7goodG2BEv() : () -> () loc(#loc221)
    cir.return loc(#loc219)
  } loc(#loc311)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":219:1)
#loc6 = loc("/usr/include/stdlib.h":223:6)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":50:27)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc12 = loc("/usr/include/string.h":141:1)
#loc13 = loc("/usr/include/string.h":142:14)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":65:34)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":71:27)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":32:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":75:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":34:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":34:9)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":34:11)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":35:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":35:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":37:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":37:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":38:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":53:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":38:13)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":38:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":38:16)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":38:20)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":39:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":40:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":52:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":41:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":41:49)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":43:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":51:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":43:23)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":43:36)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":43:53)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":43:17)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":43:63)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":44:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":47:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":49:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":46:24)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":46:32)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":46:45)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":46:51)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":46:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":46:52)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":50:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":38:24)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":38:23)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":54:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":74:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":54:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":54:9)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":54:16)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":54:20)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":55:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":56:9)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":73:9)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":57:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":57:20)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":61:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":72:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":61:17)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":61:24)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":61:43)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":62:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":68:13)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":70:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":63:37)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":32:6)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":63:28)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":63:41)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":63:17)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":65:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":65:24)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":66:27)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":66:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":67:27)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":71:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":54:24)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":54:23)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":121:27)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":82:1)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":125:1)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":84:5)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":84:9)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":84:11)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":85:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":85:12)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":87:12)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":87:5)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":88:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":103:5)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":88:13)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":88:9)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":88:16)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":88:20)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":89:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":90:9)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":102:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":91:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":91:49)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":93:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":101:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":93:23)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":93:36)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":93:53)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":93:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":93:63)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":94:13)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":97:13)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":99:13)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":96:24)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":96:32)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":96:45)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":96:51)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":96:17)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":96:52)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":100:27)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":100:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":88:24)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":88:23)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":104:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":124:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":104:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":104:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":104:16)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":104:20)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":105:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":106:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":123:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":107:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":107:20)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":111:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":122:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":111:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":111:24)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":111:43)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":111:45)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":111:48)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":111:55)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":112:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":118:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":120:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":113:37)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":82:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":113:28)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":113:41)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":113:17)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":115:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":115:24)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":115:34)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":116:27)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":116:17)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":117:27)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":121:17)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":104:24)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":104:23)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":128:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":160:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":130:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":130:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":130:11)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":131:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":131:12)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":133:12)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":133:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":134:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":138:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":134:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":134:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":134:16)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":134:20)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":135:5)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":137:16)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":137:9)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":134:24)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":134:23)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":139:5)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":159:5)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":139:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":139:9)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":139:16)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":139:20)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":140:5)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":141:9)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":158:9)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":142:13)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":142:20)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":146:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":157:13)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":146:17)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":146:24)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":146:43)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":147:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":153:13)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":155:13)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":148:37)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":128:13)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":148:28)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":148:41)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":148:17)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":150:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":150:24)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":150:34)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":151:27)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":151:17)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":152:27)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":156:27)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":156:17)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":139:24)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":139:23)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":162:1)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":166:1)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":164:5)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_17.cpp":165:5)
#loc222 = loc(fused[#loc1, #loc2])
#loc223 = loc(fused[#loc3, #loc4])
#loc224 = loc(fused[#loc5, #loc6])
#loc225 = loc(fused[#loc7, #loc8])
#loc226 = loc(fused[#loc10, #loc11])
#loc227 = loc(fused[#loc12, #loc13])
#loc228 = loc(fused[#loc16, #loc17])
#loc229 = loc(fused[#loc18, #loc19])
#loc230 = loc(fused[#loc18, #loc20])
#loc231 = loc(fused[#loc21, #loc22])
#loc232 = loc(fused[#loc24, #loc23])
#loc233 = loc(fused[#loc25, #loc26])
#loc234 = loc(fused[#loc28, #loc27])
#loc235 = loc(fused[#loc29, #loc30])
#loc236 = loc(fused[#loc31, #loc26])
#loc237 = loc(fused[#loc32, #loc33])
#loc238 = loc(fused[#loc34, #loc35])
#loc239 = loc(fused[#loc36, #loc37])
#loc240 = loc(fused[#loc41, #loc42])
#loc241 = loc(fused[#loc43, #loc44, #loc45, #loc37])
#loc242 = loc(fused[#loc50, #loc51])
#loc243 = loc(fused[#loc54, #loc53])
#loc244 = loc(fused[#loc55, #loc56])
#loc245 = loc(fused[#loc58, #loc57])
#loc246 = loc(fused[#loc59, #loc60])
#loc247 = loc(fused[#loc61, #loc56])
#loc248 = loc(fused[#loc62, #loc63])
#loc249 = loc(fused[#loc64, #loc65])
#loc250 = loc(fused[#loc66, #loc67])
#loc251 = loc(fused[#loc69, #loc70])
#loc252 = loc(fused[#loc68, #loc70])
#loc253 = loc(fused[#loc71, #loc72, #loc73, #loc67])
#loc254 = loc(fused[#loc76, #loc77])
#loc255 = loc(fused[#loc78, #loc77])
#loc256 = loc(fused[#loc86, #loc85])
#loc257 = loc(fused[#loc88, #loc89])
#loc258 = loc(fused[#loc90, #loc91])
#loc259 = loc(fused[#loc90, #loc92])
#loc260 = loc(fused[#loc93, #loc94])
#loc261 = loc(fused[#loc96, #loc95])
#loc262 = loc(fused[#loc97, #loc98])
#loc263 = loc(fused[#loc100, #loc99])
#loc264 = loc(fused[#loc101, #loc102])
#loc265 = loc(fused[#loc103, #loc98])
#loc266 = loc(fused[#loc104, #loc105])
#loc267 = loc(fused[#loc106, #loc107])
#loc268 = loc(fused[#loc108, #loc109])
#loc269 = loc(fused[#loc113, #loc114])
#loc270 = loc(fused[#loc115, #loc116, #loc117, #loc109])
#loc271 = loc(fused[#loc122, #loc123])
#loc272 = loc(fused[#loc127, #loc126])
#loc273 = loc(fused[#loc128, #loc129])
#loc274 = loc(fused[#loc131, #loc130])
#loc275 = loc(fused[#loc132, #loc133])
#loc276 = loc(fused[#loc134, #loc129])
#loc277 = loc(fused[#loc135, #loc136])
#loc278 = loc(fused[#loc137, #loc138])
#loc279 = loc(fused[#loc139, #loc140])
#loc280 = loc(fused[#loc142, #loc143])
#loc281 = loc(fused[#loc141, #loc143])
#loc282 = loc(fused[#loc145, #loc146])
#loc283 = loc(fused[#loc147, #loc148, #loc149, #loc140])
#loc284 = loc(fused[#loc152, #loc153])
#loc285 = loc(fused[#loc154, #loc153])
#loc286 = loc(fused[#loc163, #loc162])
#loc287 = loc(fused[#loc164, #loc165])
#loc288 = loc(fused[#loc166, #loc167])
#loc289 = loc(fused[#loc166, #loc168])
#loc290 = loc(fused[#loc169, #loc170])
#loc291 = loc(fused[#loc172, #loc171])
#loc292 = loc(fused[#loc173, #loc174])
#loc293 = loc(fused[#loc176, #loc175])
#loc294 = loc(fused[#loc177, #loc178])
#loc295 = loc(fused[#loc179, #loc174])
#loc296 = loc(fused[#loc181, #loc180])
#loc297 = loc(fused[#loc183, #loc182])
#loc298 = loc(fused[#loc184, #loc185])
#loc299 = loc(fused[#loc187, #loc186])
#loc300 = loc(fused[#loc188, #loc189])
#loc301 = loc(fused[#loc190, #loc185])
#loc302 = loc(fused[#loc191, #loc192])
#loc303 = loc(fused[#loc193, #loc194])
#loc304 = loc(fused[#loc195, #loc196])
#loc305 = loc(fused[#loc198, #loc199])
#loc306 = loc(fused[#loc197, #loc199])
#loc307 = loc(fused[#loc200, #loc201, #loc202, #loc196])
#loc308 = loc(fused[#loc205, #loc206])
#loc309 = loc(fused[#loc207, #loc206])
#loc310 = loc(fused[#loc217, #loc216])
#loc311 = loc(fused[#loc218, #loc219])
