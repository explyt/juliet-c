!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc119 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":104:10)
#loc120 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":104:14)
#loc121 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":104:20)
#loc122 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":104:32)
#loc180 = loc(fused[#loc119, #loc120])
#loc181 = loc(fused[#loc121, #loc122])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc136)
  cir.func private @printIntLine(!s32i) loc(#loc137)
  cir.func @_ZN34CWE401_Memory_Leak__int_realloc_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc140)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc12)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
    %3 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc15)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc16)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc17)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc142)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc143)
    %10 = cir.call @realloc(%5, %9) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc144)
    cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
    cir.scope {
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
      %21 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc25)
      %22 = cir.cmp(eq, %20, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc147)
      cir.if %22 {
        %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc29)
        cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
      } loc(#loc148)
    } loc(#loc146)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc30)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc33)
    cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc36)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc37)
    cir.scope {
      %20 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
      %21 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc41)
      %22 = cir.load %21 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
      cir.store %22, %20 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
    } loc(#loc150)
    cir.return loc(#loc8)
  } loc(#loc138)
  cir.func internal private @_ZN34CWE401_Memory_Leak__int_realloc_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc154)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc47)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc48)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc155)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc50)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc50)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc50)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc50)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc50)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc50)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc156)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc52)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc55)
    cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc58)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc59)
    cir.scope {
      %18 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
      %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc63)
      %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
      cir.store %20, %18 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc159)
    } loc(#loc158)
    cir.return loc(#loc43)
  } loc(#loc152)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc160)
  cir.func internal private @_ZN34CWE401_Memory_Leak__int_realloc_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc163)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc71)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc72)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc164)
    %3 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc74)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc75)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc76)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc165)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc166)
    %10 = cir.call @realloc(%5, %9) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc74)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc167)
    cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc168)
    cir.scope {
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
      %21 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc84)
      %22 = cir.cmp(eq, %20, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc170)
      cir.if %22 {
        %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc86)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc88)
        cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc86)
      } loc(#loc171)
    } loc(#loc169)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc89)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc92)
    cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc95)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc96)
    cir.scope {
      %20 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc174)
      %21 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc100)
      %22 = cir.load %21 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
      cir.store %22, %20 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc174)
      %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc101)
      %24 = cir.load %20 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc102)
      cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc101)
    } loc(#loc173)
    cir.return loc(#loc67)
  } loc(#loc161)
  cir.func @_ZN34CWE401_Memory_Leak__int_realloc_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN34CWE401_Memory_Leak__int_realloc_33L7goodG2BEv() : () -> () loc(#loc105)
    cir.call @_ZN34CWE401_Memory_Leak__int_realloc_33L7goodB2GEv() : () -> () loc(#loc106)
    cir.return loc(#loc104)
  } loc(#loc175)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc176)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc177)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc116)
  cir.func @main(%arg0: !s32i loc(fused[#loc119, #loc120]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc121, #loc122])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc123)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc124)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc125)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc125)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc126)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc113)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.call @_ZN34CWE401_Memory_Leak__int_realloc_334goodEv() : () -> () loc(#loc128)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc115)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.call @_ZN34CWE401_Memory_Leak__int_realloc_333badEv() : () -> () loc(#loc131)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc116)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    cir.return %15 : !s32i loc(#loc182)
  } loc(#loc179)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":27:1)
#loc8 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":43:1)
#loc9 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":29:5)
#loc10 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":29:11)
#loc11 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":30:5)
#loc12 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":30:22)
#loc13 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":31:12)
#loc14 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":31:5)
#loc15 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":33:19)
#loc16 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":33:27)
#loc17 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":33:33)
#loc18 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":33:37)
#loc19 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":33:47)
#loc20 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":33:48)
#loc21 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":33:5)
#loc22 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":34:5)
#loc23 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":34:33)
#loc24 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":34:9)
#loc25 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":34:17)
#loc26 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":34:23)
#loc27 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":34:24)
#loc28 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":34:30)
#loc29 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":34:29)
#loc30 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":36:15)
#loc31 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":36:5)
#loc32 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":36:10)
#loc33 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":36:11)
#loc34 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":37:18)
#loc35 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":37:23)
#loc36 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":37:24)
#loc37 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":37:5)
#loc38 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":38:5)
#loc39 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":42:5)
#loc40 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":39:9)
#loc41 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":39:22)
#loc42 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":50:1)
#loc43 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":65:1)
#loc44 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":52:5)
#loc45 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":52:11)
#loc46 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":53:5)
#loc47 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":53:22)
#loc48 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":54:12)
#loc49 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":54:5)
#loc50 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":56:19)
#loc51 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":56:5)
#loc52 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":58:15)
#loc53 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":58:5)
#loc54 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":58:10)
#loc55 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":58:11)
#loc56 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":59:18)
#loc57 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":59:23)
#loc58 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":59:24)
#loc59 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":59:5)
#loc60 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":60:5)
#loc61 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":64:5)
#loc62 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":61:9)
#loc63 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":61:22)
#loc64 = loc("/usr/include/stdlib.h":687:1)
#loc65 = loc("/usr/include/stdlib.h":687:32)
#loc66 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":68:1)
#loc67 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":84:1)
#loc68 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":70:5)
#loc69 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":70:11)
#loc70 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":71:5)
#loc71 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":71:22)
#loc72 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":72:12)
#loc73 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":72:5)
#loc74 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":74:19)
#loc75 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":74:27)
#loc76 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":74:33)
#loc77 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":74:37)
#loc78 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":74:47)
#loc79 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":74:48)
#loc80 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":74:5)
#loc81 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":75:5)
#loc82 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":75:33)
#loc83 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":75:9)
#loc84 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":75:17)
#loc85 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":75:23)
#loc86 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":75:24)
#loc87 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":75:30)
#loc88 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":75:29)
#loc89 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":77:15)
#loc90 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":77:5)
#loc91 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":77:10)
#loc92 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":77:11)
#loc93 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":78:18)
#loc94 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":78:23)
#loc95 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":78:24)
#loc96 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":78:5)
#loc97 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":79:5)
#loc98 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":83:5)
#loc99 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":80:9)
#loc100 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":80:22)
#loc101 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":82:9)
#loc102 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":82:14)
#loc103 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":86:1)
#loc104 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":90:1)
#loc105 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":88:5)
#loc106 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":89:5)
#loc107 = loc("/usr/include/stdlib.h":575:1)
#loc108 = loc("/usr/include/stdlib.h":575:41)
#loc109 = loc("/usr/include/time.h":76:1)
#loc110 = loc("/usr/include/time.h":76:38)
#loc111 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc112 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc113 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":109:15)
#loc114 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":111:15)
#loc115 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":114:15)
#loc116 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":116:15)
#loc117 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":104:1)
#loc118 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":119:1)
#loc123 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":105:1)
#loc124 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":107:27)
#loc125 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":107:22)
#loc126 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":107:5)
#loc127 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":109:5)
#loc128 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":110:5)
#loc129 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":111:5)
#loc130 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":114:5)
#loc131 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":115:5)
#loc132 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":116:5)
#loc133 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":118:12)
#loc134 = loc("CWE401_Memory_Leak__int_realloc_33.cpp":118:5)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc14, #loc13])
#loc142 = loc(fused[#loc18, #loc19])
#loc143 = loc(fused[#loc17, #loc19])
#loc144 = loc(fused[#loc15, #loc20])
#loc145 = loc(fused[#loc21, #loc20])
#loc146 = loc(fused[#loc22, #loc23])
#loc147 = loc(fused[#loc24, #loc25])
#loc148 = loc(fused[#loc26, #loc23])
#loc149 = loc(fused[#loc31, #loc30])
#loc150 = loc(fused[#loc38, #loc39])
#loc151 = loc(fused[#loc40, #loc41])
#loc152 = loc(fused[#loc42, #loc43])
#loc153 = loc(fused[#loc44, #loc45])
#loc154 = loc(fused[#loc46, #loc47])
#loc155 = loc(fused[#loc49, #loc48])
#loc156 = loc(fused[#loc51, #loc50])
#loc157 = loc(fused[#loc53, #loc52])
#loc158 = loc(fused[#loc60, #loc61])
#loc159 = loc(fused[#loc62, #loc63])
#loc160 = loc(fused[#loc64, #loc65])
#loc161 = loc(fused[#loc66, #loc67])
#loc162 = loc(fused[#loc68, #loc69])
#loc163 = loc(fused[#loc70, #loc71])
#loc164 = loc(fused[#loc73, #loc72])
#loc165 = loc(fused[#loc77, #loc78])
#loc166 = loc(fused[#loc76, #loc78])
#loc167 = loc(fused[#loc74, #loc79])
#loc168 = loc(fused[#loc80, #loc79])
#loc169 = loc(fused[#loc81, #loc82])
#loc170 = loc(fused[#loc83, #loc84])
#loc171 = loc(fused[#loc85, #loc82])
#loc172 = loc(fused[#loc90, #loc89])
#loc173 = loc(fused[#loc97, #loc98])
#loc174 = loc(fused[#loc99, #loc100])
#loc175 = loc(fused[#loc103, #loc104])
#loc176 = loc(fused[#loc107, #loc108])
#loc177 = loc(fused[#loc109, #loc110])
#loc178 = loc(fused[#loc111, #loc112])
#loc179 = loc(fused[#loc117, #loc118])
#loc182 = loc(fused[#loc134, #loc133])
