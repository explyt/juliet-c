!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":104:10)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":104:14)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":104:20)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":104:32)
#loc236 = loc(fused[#loc103, #loc104])
#loc237 = loc(fused[#loc105, #loc106])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc199)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc200)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc201)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc202)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc203)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc207)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc206)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc207)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc210)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc24)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
      %8 = cir.const #cir.int<50> : !s32i loc(#loc27)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc27)
      %10 = cir.const #cir.int<1> : !u64i loc(#loc211)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc212)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc213)
      cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
      cir.scope {
        %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
        %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
        %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc216)
        cir.if %33 {
          %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
          %35 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc39)
          cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
        } loc(#loc217)
      } loc(#loc215)
      %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
      %16 = cir.const #cir.int<65> : !s32i loc(#loc41)
      %17 = cir.const #cir.int<50> : !s32i loc(#loc42)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc42)
      %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc42)
      cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc218)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc46)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc46)
      %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      %24 = cir.const #cir.int<50> : !s32i loc(#loc48)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc49)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc48)
      %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc50)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc219)
      %28 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      %29 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
      cir.store %28, %29 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    } loc(#loc209)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc222)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
      cir.scope {
        %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc224)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
        %10 = cir.const #cir.int<67> : !s32i loc(#loc64)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc65)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc65)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc65)
        cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc225)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc69)
        %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc69)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc70)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc71)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc70)
        %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
        %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc72)
        cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc226)
        %22 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
        %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
        %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
        %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc75)
        %27 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
        %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc75)
        %29 = cir.const #cir.int<1> : !u64i loc(#loc227)
        %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc228)
        cir.libc.memmove %30 bytes from %25 to %23 : !cir.ptr<!void>, !u64i loc(#loc229)
        %31 = cir.const #cir.int<0> : !s32i loc(#loc81)
        %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc81)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc82)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc82)
        %36 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
        %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc84)
        cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc230)
        %38 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
        cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc86)
        %39 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc87)
        %40 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
        %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
        cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
      } loc(#loc223)
    } loc(#loc221)
    cir.return loc(#loc12)
  } loc(#loc204)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc231)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc233)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc100)
  cir.func @main(%arg0: !s32i loc(fused[#loc103, #loc104]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc105, #loc106])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc108)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc109)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc109)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc110)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %8 = cir.get_global @CWE126_Buffer_Overread__malloc_char_memmove_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call @CWE126_Buffer_Overread__malloc_char_memmove_32_good() : () -> () loc(#loc112)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc99)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %13 = cir.get_global @CWE126_Buffer_Overread__malloc_char_memmove_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call @CWE126_Buffer_Overread__malloc_char_memmove_32_bad() : () -> () loc(#loc116)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc100)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    cir.return %17 : !s32i loc(#loc240)
  } loc(#loc235)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc243)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc244)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc243)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc244)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc129)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc247)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc136)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc137)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc137)
      %10 = cir.const #cir.int<1> : !u64i loc(#loc248)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc249)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc250)
      cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
      cir.scope {
        %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
        %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
        %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc253)
        cir.if %33 {
          %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
          %35 = cir.const #cir.int<1> : !s32i loc(#loc148)
          %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc149)
          cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
        } loc(#loc254)
      } loc(#loc252)
      %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
      %16 = cir.const #cir.int<65> : !s32i loc(#loc151)
      %17 = cir.const #cir.int<100> : !s32i loc(#loc152)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc153)
      %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc152)
      %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc152)
      cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc255)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc156)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc156)
      %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc158)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc159)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc158)
      %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc160)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc256)
      %28 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      %29 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
      cir.store %28, %29 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
    } loc(#loc246)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc259)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
      cir.scope {
        %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc261)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc173)
        %10 = cir.const #cir.int<67> : !s32i loc(#loc174)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc175)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc176)
        %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc175)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc175)
        cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc262)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc179)
        %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc179)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc180)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc181)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc180)
        %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc182)
        %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc182)
        cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc263)
        %22 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc183)
        %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
        %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc184)
        %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc185)
        %27 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc186)
        %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc185)
        %29 = cir.const #cir.int<1> : !u64i loc(#loc264)
        %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc265)
        cir.libc.memmove %30 bytes from %25 to %23 : !cir.ptr<!void>, !u64i loc(#loc266)
        %31 = cir.const #cir.int<0> : !s32i loc(#loc191)
        %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc191)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc192)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc193)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc192)
        %36 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc194)
        %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc194)
        cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc267)
        %38 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc195)
        cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc196)
        %39 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc197)
        %40 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
        %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc198)
        cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc197)
      } loc(#loc260)
    } loc(#loc258)
    cir.return loc(#loc122)
  } loc(#loc241)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":52:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":25:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":26:25)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":27:5)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":27:25)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":28:12)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":28:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":29:5)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":37:5)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":30:9)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":30:24)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":30:23)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":32:24)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":32:31)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":32:34)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":32:45)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":32:46)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":32:9)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":33:9)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":33:37)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":33:13)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":33:21)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":33:27)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":33:28)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":33:34)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":33:33)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":34:16)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":34:22)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":34:27)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":34:30)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":34:9)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":34:31)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":35:22)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":35:9)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":35:14)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":35:17)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":35:18)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":36:21)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":36:10)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":36:9)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":38:5)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":51:5)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":39:9)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":39:24)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":39:23)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":40:9)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":50:9)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":41:13)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":41:26)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":42:20)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":42:26)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":42:31)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":42:35)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":42:13)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":42:36)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":43:27)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":43:18)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":43:22)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":43:13)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":46:21)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":46:27)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":46:33)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":46:40)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":46:46)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":46:57)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":46:13)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":46:58)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":47:27)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":47:18)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":47:22)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":47:13)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":48:23)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":48:13)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":49:13)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":49:18)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":90:1)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":93:1)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":92:5)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":92:13)
#loc93 = loc("/usr/include/stdlib.h":575:1)
#loc94 = loc("/usr/include/stdlib.h":575:41)
#loc95 = loc("/usr/include/time.h":76:1)
#loc96 = loc("/usr/include/time.h":76:38)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":109:15)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":111:15)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":114:15)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":116:15)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":104:1)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":119:1)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":105:1)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":107:27)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":107:22)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":107:5)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":109:5)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":110:5)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":110:57)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":111:5)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":114:5)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":115:5)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":115:56)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":116:5)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":118:12)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":118:5)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":59:1)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":88:1)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":61:5)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":61:12)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":62:5)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":62:25)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":63:5)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":63:25)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":64:12)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":64:5)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":65:5)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":73:5)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":66:9)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":66:24)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":66:23)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":68:24)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":68:31)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":68:35)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":68:46)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":68:47)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":68:9)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":69:9)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":69:37)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":69:13)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":69:21)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":69:27)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":69:28)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":69:34)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":69:33)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":70:16)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":70:22)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":70:27)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":70:31)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":70:9)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":70:32)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":71:23)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":71:9)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":71:14)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":71:18)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":71:19)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":72:21)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":72:10)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":72:9)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":74:5)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":87:5)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":75:9)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":75:24)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":75:23)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":76:9)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":86:9)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":77:13)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":77:26)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":78:20)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":78:26)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":78:31)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":78:35)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":78:13)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":78:36)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":79:27)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":79:18)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":79:22)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":79:13)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":82:21)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":82:27)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":82:33)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":82:40)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":82:46)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":82:57)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":82:13)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":82:58)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":83:27)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":83:18)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":83:22)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":83:13)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":84:23)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":84:13)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":85:13)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_memmove_32.c":85:18)
#loc199 = loc(fused[#loc1, #loc2])
#loc200 = loc(fused[#loc3, #loc4])
#loc201 = loc(fused[#loc5, #loc6])
#loc202 = loc(fused[#loc7, #loc8])
#loc203 = loc(fused[#loc9, #loc10])
#loc204 = loc(fused[#loc11, #loc12])
#loc205 = loc(fused[#loc13, #loc14])
#loc206 = loc(fused[#loc15, #loc16])
#loc207 = loc(fused[#loc17, #loc18])
#loc208 = loc(fused[#loc20, #loc19])
#loc209 = loc(fused[#loc21, #loc22])
#loc210 = loc(fused[#loc23, #loc24])
#loc211 = loc(fused[#loc28, #loc29])
#loc212 = loc(fused[#loc27, #loc29])
#loc213 = loc(fused[#loc26, #loc30])
#loc214 = loc(fused[#loc31, #loc30])
#loc215 = loc(fused[#loc32, #loc33])
#loc216 = loc(fused[#loc34, #loc35])
#loc217 = loc(fused[#loc36, #loc33])
#loc218 = loc(fused[#loc44, #loc45])
#loc219 = loc(fused[#loc47, #loc46])
#loc220 = loc(fused[#loc53, #loc51])
#loc221 = loc(fused[#loc54, #loc55])
#loc222 = loc(fused[#loc56, #loc57])
#loc223 = loc(fused[#loc59, #loc60])
#loc224 = loc(fused[#loc61, #loc62])
#loc225 = loc(fused[#loc67, #loc68])
#loc226 = loc(fused[#loc72, #loc69])
#loc227 = loc(fused[#loc77, #loc78])
#loc228 = loc(fused[#loc75, #loc78])
#loc229 = loc(fused[#loc79, #loc80])
#loc230 = loc(fused[#loc84, #loc81])
#loc231 = loc(fused[#loc89, #loc90])
#loc232 = loc(fused[#loc91, #loc92])
#loc233 = loc(fused[#loc93, #loc94])
#loc234 = loc(fused[#loc95, #loc96])
#loc235 = loc(fused[#loc101, #loc102])
#loc238 = loc(fused[#loc112, #loc113])
#loc239 = loc(fused[#loc116, #loc117])
#loc240 = loc(fused[#loc120, #loc119])
#loc241 = loc(fused[#loc121, #loc122])
#loc242 = loc(fused[#loc123, #loc124])
#loc243 = loc(fused[#loc125, #loc126])
#loc244 = loc(fused[#loc127, #loc128])
#loc245 = loc(fused[#loc130, #loc129])
#loc246 = loc(fused[#loc131, #loc132])
#loc247 = loc(fused[#loc133, #loc134])
#loc248 = loc(fused[#loc138, #loc139])
#loc249 = loc(fused[#loc137, #loc139])
#loc250 = loc(fused[#loc136, #loc140])
#loc251 = loc(fused[#loc141, #loc140])
#loc252 = loc(fused[#loc142, #loc143])
#loc253 = loc(fused[#loc144, #loc145])
#loc254 = loc(fused[#loc146, #loc143])
#loc255 = loc(fused[#loc154, #loc155])
#loc256 = loc(fused[#loc157, #loc156])
#loc257 = loc(fused[#loc163, #loc161])
#loc258 = loc(fused[#loc164, #loc165])
#loc259 = loc(fused[#loc166, #loc167])
#loc260 = loc(fused[#loc169, #loc170])
#loc261 = loc(fused[#loc171, #loc172])
#loc262 = loc(fused[#loc177, #loc178])
#loc263 = loc(fused[#loc182, #loc179])
#loc264 = loc(fused[#loc187, #loc188])
#loc265 = loc(fused[#loc185, #loc188])
#loc266 = loc(fused[#loc189, #loc190])
#loc267 = loc(fused[#loc194, #loc191])
