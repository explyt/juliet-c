!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc37 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":73:10)
#loc38 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":73:14)
#loc39 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":73:20)
#loc40 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":73:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i}>
#loc92 = loc(fused[#loc37, #loc38])
#loc93 = loc(fused[#loc39, #loc40])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc80)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
        cir.condition(%1) loc(#loc7)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc84)
          %1 = cir.const #cir.int<8> : !u64i loc(#loc11)
          %2 = cir.alloca !u8i, !cir.ptr<!u8i>, %1 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
          %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc85)
          %4 = cir.cast(bitcast, %2 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
          cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc84)
          %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
          cir.copy %6 to %3 : !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
          %7 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc14)
          %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc15)
          cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc16)
          %9 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc18)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc19)
        } loc(#loc83)
        cir.break loc(#loc20)
      } loc(#loc82)
    } loc(#loc82)
    cir.return loc(#loc4)
  } loc(#loc81)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc87)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc22)
  } loc(#loc86)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc88)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc89)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc34)
  cir.func @main(%arg0: !s32i loc(fused[#loc37, #loc38]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc39, #loc40])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc92)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc93)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc36)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc41)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc42)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc43)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc43)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc44)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc31)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %8 = cir.get_global @CWE758_Undefined_Behavior__struct_alloca_use_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc94)
    cir.call @CWE758_Undefined_Behavior__struct_alloca_use_16_good() : () -> () loc(#loc46)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc32)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc33)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %13 = cir.get_global @CWE758_Undefined_Behavior__struct_alloca_use_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc95)
    cir.call @CWE758_Undefined_Behavior__struct_alloca_use_16_bad() : () -> () loc(#loc50)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc34)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc53)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.return %17 : !s32i loc(#loc96)
  } loc(#loc91)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc59)
        cir.condition(%1) loc(#loc59)
      } do {
        cir.scope {
          %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc100)
          %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc101)
          %2 = cir.const #cir.int<8> : !u64i loc(#loc65)
          %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc65)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc65)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
          cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc101)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc66)
          %7 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc14)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc102)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc68)
          %9 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc103)
          %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
          cir.copy %0 to %10 : !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
          cir.scope {
            %11 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc105)
            %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
            cir.copy %12 to %11 : !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
            %13 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc14)
            %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc76)
            %15 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc77)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc78)
          } loc(#loc104)
        } loc(#loc99)
        cir.break loc(#loc79)
      } loc(#loc98)
    } loc(#loc98)
    cir.return loc(#loc56)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":20:1)
#loc4 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":32:1)
#loc5 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":22:5)
#loc6 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":31:5)
#loc7 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":22:11)
#loc8 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":24:9)
#loc9 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":29:9)
#loc10 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":25:13)
#loc11 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":25:56)
#loc12 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":26:13)
#loc13 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":26:35)
#loc14 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc15 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":27:31)
#loc16 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":27:13)
#loc17 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc18 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":28:31)
#loc19 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":28:13)
#loc20 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":30:9)
#loc21 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":59:1)
#loc22 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":62:1)
#loc23 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":61:5)
#loc24 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":61:11)
#loc25 = loc("/usr/include/stdlib.h":575:1)
#loc26 = loc("/usr/include/stdlib.h":575:41)
#loc27 = loc("/usr/include/time.h":76:1)
#loc28 = loc("/usr/include/time.h":76:38)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":78:15)
#loc32 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":80:15)
#loc33 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":83:15)
#loc34 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":85:15)
#loc35 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":73:1)
#loc36 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":88:1)
#loc41 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":74:1)
#loc42 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":76:27)
#loc43 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":76:22)
#loc44 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":76:5)
#loc45 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":78:5)
#loc46 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":79:5)
#loc47 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":79:58)
#loc48 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":80:5)
#loc49 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":83:5)
#loc50 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":84:5)
#loc51 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":84:57)
#loc52 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":85:5)
#loc53 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":87:12)
#loc54 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":87:5)
#loc55 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":39:1)
#loc56 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":57:1)
#loc57 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":41:5)
#loc58 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":56:5)
#loc59 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":41:11)
#loc60 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":43:9)
#loc61 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":54:9)
#loc62 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":44:13)
#loc63 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":44:27)
#loc64 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":45:13)
#loc65 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":45:56)
#loc66 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":46:27)
#loc67 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":46:13)
#loc68 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":47:27)
#loc69 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":47:13)
#loc70 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":48:14)
#loc71 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":49:13)
#loc72 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":53:13)
#loc73 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":50:17)
#loc74 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":50:39)
#loc75 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":51:35)
#loc76 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":51:17)
#loc77 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":52:35)
#loc78 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":52:17)
#loc79 = loc("CWE758_Undefined_Behavior__struct_alloca_use_16.c":55:9)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc5, #loc6])
#loc83 = loc(fused[#loc8, #loc9])
#loc84 = loc(fused[#loc10, #loc11])
#loc85 = loc(fused[#loc12, #loc13])
#loc86 = loc(fused[#loc21, #loc22])
#loc87 = loc(fused[#loc23, #loc24])
#loc88 = loc(fused[#loc25, #loc26])
#loc89 = loc(fused[#loc27, #loc28])
#loc90 = loc(fused[#loc29, #loc30])
#loc91 = loc(fused[#loc35, #loc36])
#loc94 = loc(fused[#loc46, #loc47])
#loc95 = loc(fused[#loc50, #loc51])
#loc96 = loc(fused[#loc54, #loc53])
#loc97 = loc(fused[#loc55, #loc56])
#loc98 = loc(fused[#loc57, #loc58])
#loc99 = loc(fused[#loc60, #loc61])
#loc100 = loc(fused[#loc62, #loc63])
#loc101 = loc(fused[#loc64, #loc65])
#loc102 = loc(fused[#loc67, #loc66])
#loc103 = loc(fused[#loc69, #loc68])
#loc104 = loc(fused[#loc71, #loc72])
#loc105 = loc(fused[#loc73, #loc74])
