!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc103 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":110:10)
#loc104 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":110:14)
#loc105 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":110:20)
#loc106 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":110:32)
#loc238 = loc(fused[#loc103, #loc104])
#loc239 = loc(fused[#loc105, #loc106])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_loop_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc201)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc202)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc203)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_loop_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc208)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc18)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc18)
      %6 = cir.const #cir.int<1> : !u64i loc(#loc209)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc210)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc211)
      cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
      cir.scope {
        %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
        %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc24)
        %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc213)
        cir.if %31 {
          %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
          %33 = cir.const #cir.int<1> : !s32i loc(#loc27)
          %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc28)
          cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
        } loc(#loc214)
      } loc(#loc212)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
      %12 = cir.const #cir.int<65> : !s32i loc(#loc30)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc31)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc31)
      cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc215)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc35)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc35)
      %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc37)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc39)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc216)
      %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %25 = cir.const #cir.int<8> : !s32i loc(#loc41)
      %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc41)
      %27 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc42)
      cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    } loc(#loc207)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc219)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc220)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
      cir.scope {
        %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc222)
        %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc223)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
        %10 = cir.const #cir.int<67> : !s32i loc(#loc57)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc58)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc58)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc58)
        cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc224)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc62)
        %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc62)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc63)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc64)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc63)
        %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
        %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc65)
        cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc225)
        cir.scope {
          %30 = cir.const #cir.int<0> : !s32i loc(#loc68)
          %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc68)
          cir.store %31, %6 : !u64i, !cir.ptr<!u64i> loc(#loc227)
          cir.for : cond {
            %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc70)
            %33 = cir.const #cir.int<100> : !s32i loc(#loc71)
            %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc71)
            %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc228)
            cir.condition(%35) loc(#loc72)
          } body {
            cir.scope {
              %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc74)
              %33 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
              %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc75)
              %35 = cir.load %34 : !cir.ptr<!s8i>, !s8i loc(#loc75)
              %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
              %37 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc77)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc78)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc230)
            } loc(#loc229)
            cir.yield loc(#loc67)
          } step {
            %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc80)
            %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc81)
            cir.store %33, %6 : !u64i, !cir.ptr<!u64i> loc(#loc231)
            cir.yield loc(#loc226)
          } loc(#loc226)
        } loc(#loc226)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc82)
        %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc82)
        %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc84)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc85)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc84)
        %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc86)
        cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc232)
        %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      } loc(#loc221)
    } loc(#loc218)
    cir.return loc(#loc8)
  } loc(#loc204)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_loop_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc233)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc235)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc100)
  cir.func @main(%arg0: !s32i loc(fused[#loc103, #loc104]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc105, #loc106])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc238)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc239)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc108)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc109)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc109)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc110)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_loop_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc240)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_loop_31_good() : () -> () loc(#loc112)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc99)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_loop_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_loop_31_bad() : () -> () loc(#loc116)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc100)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    cir.return %17 : !s32i loc(#loc242)
  } loc(#loc237)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc125)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc247)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc131)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc132)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc132)
      %6 = cir.const #cir.int<1> : !u64i loc(#loc248)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc249)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc250)
      cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
      cir.scope {
        %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
        %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc138)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
        %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc252)
        cir.if %28 {
          %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc140)
          %30 = cir.const #cir.int<1> : !s32i loc(#loc141)
          %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc142)
          cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc140)
        } loc(#loc253)
      } loc(#loc251)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc143)
      %12 = cir.const #cir.int<65> : !s32i loc(#loc144)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc145)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc146)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc145)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc145)
      cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc254)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc149)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc149)
      %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc151)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc152)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc151)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc153)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc255)
      %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
      cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
    } loc(#loc246)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc258)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc259)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
      cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
      cir.scope {
        %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc261)
        %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc262)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc168)
        %10 = cir.const #cir.int<67> : !s32i loc(#loc169)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc170)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc171)
        %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc170)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc170)
        cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc263)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc174)
        %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc174)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc175)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc176)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc175)
        %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
        %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc177)
        cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc264)
        cir.scope {
          %30 = cir.const #cir.int<0> : !s32i loc(#loc180)
          %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc180)
          cir.store %31, %6 : !u64i, !cir.ptr<!u64i> loc(#loc266)
          cir.for : cond {
            %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc182)
            %33 = cir.const #cir.int<100> : !s32i loc(#loc183)
            %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc183)
            %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc267)
            cir.condition(%35) loc(#loc184)
          } body {
            cir.scope {
              %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc186)
              %33 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc187)
              %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc187)
              %35 = cir.load %34 : !cir.ptr<!s8i>, !s8i loc(#loc187)
              %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
              %37 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc189)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc190)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc269)
            } loc(#loc268)
            cir.yield loc(#loc179)
          } step {
            %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc192)
            %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc193)
            cir.store %33, %6 : !u64i, !cir.ptr<!u64i> loc(#loc270)
            cir.yield loc(#loc265)
          } loc(#loc265)
        } loc(#loc265)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc194)
        %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc194)
        %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc196)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc197)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc196)
        %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc198)
        cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc271)
        %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc200)
      } loc(#loc260)
    } loc(#loc257)
    cir.return loc(#loc122)
  } loc(#loc243)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_loop_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":23:1)
#loc8 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":55:1)
#loc9 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":25:5)
#loc10 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":25:12)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":26:12)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":26:5)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":27:5)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":34:5)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:9)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:60)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:37)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:44)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:48)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:59)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:9)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:43)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:13)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:27)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:33)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:34)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:40)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:39)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:16)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:28)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:33)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:37)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:9)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:38)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":31:29)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":31:9)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":31:20)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":31:24)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":31:25)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":33:16)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":33:29)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":33:27)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":33:9)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":35:5)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":54:5)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":36:9)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":36:27)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":37:9)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":37:23)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":38:9)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":53:9)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":39:13)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":39:20)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":40:13)
#loc55 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":40:28)
#loc56 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:20)
#loc57 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:28)
#loc58 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:33)
#loc59 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:37)
#loc60 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:13)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:38)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":42:29)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":42:20)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":42:24)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":42:13)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:13)
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":47:13)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:22)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:18)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:25)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:29)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:27)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":45:13)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:34)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:27)
#loc76 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:17)
#loc77 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:22)
#loc78 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:23)
#loc79 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:35)
#loc80 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:35)
#loc81 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:34)
#loc82 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":49:27)
#loc83 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":49:13)
#loc84 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":49:18)
#loc85 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":49:22)
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":49:23)
#loc87 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":50:23)
#loc88 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":50:13)
#loc89 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":96:1)
#loc90 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":99:1)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":98:5)
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":98:13)
#loc93 = loc("/usr/include/stdlib.h":575:1)
#loc94 = loc("/usr/include/stdlib.h":575:41)
#loc95 = loc("/usr/include/time.h":76:1)
#loc96 = loc("/usr/include/time.h":76:38)
#loc97 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":115:15)
#loc98 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":117:15)
#loc99 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":120:15)
#loc100 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":122:15)
#loc101 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":110:1)
#loc102 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":125:1)
#loc107 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":111:1)
#loc108 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":113:27)
#loc109 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":113:22)
#loc110 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":113:5)
#loc111 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":115:5)
#loc112 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":116:5)
#loc113 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":116:56)
#loc114 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":117:5)
#loc115 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":120:5)
#loc116 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":121:5)
#loc117 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":121:55)
#loc118 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":122:5)
#loc119 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":124:12)
#loc120 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":124:5)
#loc121 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":62:1)
#loc122 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":94:1)
#loc123 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":64:5)
#loc124 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":64:12)
#loc125 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":65:12)
#loc126 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":65:5)
#loc127 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":66:5)
#loc128 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":73:5)
#loc129 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:9)
#loc130 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:60)
#loc131 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:37)
#loc132 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:44)
#loc133 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:48)
#loc134 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:59)
#loc135 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:9)
#loc136 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:43)
#loc137 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:13)
#loc138 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:27)
#loc139 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:33)
#loc140 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:34)
#loc141 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:40)
#loc142 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:39)
#loc143 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:16)
#loc144 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:28)
#loc145 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:33)
#loc146 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:37)
#loc147 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:9)
#loc148 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:38)
#loc149 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":70:29)
#loc150 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":70:9)
#loc151 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":70:20)
#loc152 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":70:24)
#loc153 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":70:25)
#loc154 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":72:16)
#loc155 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":72:9)
#loc156 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":74:5)
#loc157 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":93:5)
#loc158 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":75:9)
#loc159 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":75:27)
#loc160 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":76:9)
#loc161 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":76:23)
#loc162 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":77:9)
#loc163 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":92:9)
#loc164 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":78:13)
#loc165 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":78:20)
#loc166 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":79:13)
#loc167 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":79:28)
#loc168 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:20)
#loc169 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:28)
#loc170 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:33)
#loc171 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:37)
#loc172 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:13)
#loc173 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:38)
#loc174 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":81:29)
#loc175 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":81:20)
#loc176 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":81:24)
#loc177 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":81:13)
#loc178 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:13)
#loc179 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":86:13)
#loc180 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:22)
#loc181 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:18)
#loc182 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:25)
#loc183 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:29)
#loc184 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:27)
#loc185 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":84:13)
#loc186 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:34)
#loc187 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:27)
#loc188 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:17)
#loc189 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:22)
#loc190 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:23)
#loc191 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:35)
#loc192 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:35)
#loc193 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:34)
#loc194 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":88:27)
#loc195 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":88:13)
#loc196 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":88:18)
#loc197 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":88:22)
#loc198 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":88:23)
#loc199 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":89:23)
#loc200 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":89:13)
#loc201 = loc(fused[#loc1, #loc2])
#loc202 = loc(fused[#loc3, #loc4])
#loc203 = loc(fused[#loc5, #loc6])
#loc204 = loc(fused[#loc7, #loc8])
#loc205 = loc(fused[#loc9, #loc10])
#loc206 = loc(fused[#loc12, #loc11])
#loc207 = loc(fused[#loc13, #loc14])
#loc208 = loc(fused[#loc15, #loc16])
#loc209 = loc(fused[#loc19, #loc20])
#loc210 = loc(fused[#loc18, #loc20])
#loc211 = loc(fused[#loc17, #loc16])
#loc212 = loc(fused[#loc21, #loc22])
#loc213 = loc(fused[#loc23, #loc24])
#loc214 = loc(fused[#loc25, #loc22])
#loc215 = loc(fused[#loc33, #loc34])
#loc216 = loc(fused[#loc36, #loc35])
#loc217 = loc(fused[#loc43, #loc41])
#loc218 = loc(fused[#loc44, #loc45])
#loc219 = loc(fused[#loc46, #loc47])
#loc220 = loc(fused[#loc48, #loc49])
#loc221 = loc(fused[#loc50, #loc51])
#loc222 = loc(fused[#loc52, #loc53])
#loc223 = loc(fused[#loc54, #loc55])
#loc224 = loc(fused[#loc60, #loc61])
#loc225 = loc(fused[#loc65, #loc62])
#loc226 = loc(fused[#loc66, #loc67])
#loc227 = loc(fused[#loc69, #loc68])
#loc228 = loc(fused[#loc70, #loc71])
#loc229 = loc(fused[#loc73, #loc67])
#loc230 = loc(fused[#loc76, #loc79])
#loc231 = loc(fused[#loc81, #loc80])
#loc232 = loc(fused[#loc83, #loc82])
#loc233 = loc(fused[#loc89, #loc90])
#loc234 = loc(fused[#loc91, #loc92])
#loc235 = loc(fused[#loc93, #loc94])
#loc236 = loc(fused[#loc95, #loc96])
#loc237 = loc(fused[#loc101, #loc102])
#loc240 = loc(fused[#loc112, #loc113])
#loc241 = loc(fused[#loc116, #loc117])
#loc242 = loc(fused[#loc120, #loc119])
#loc243 = loc(fused[#loc121, #loc122])
#loc244 = loc(fused[#loc123, #loc124])
#loc245 = loc(fused[#loc126, #loc125])
#loc246 = loc(fused[#loc127, #loc128])
#loc247 = loc(fused[#loc129, #loc130])
#loc248 = loc(fused[#loc133, #loc134])
#loc249 = loc(fused[#loc132, #loc134])
#loc250 = loc(fused[#loc131, #loc130])
#loc251 = loc(fused[#loc135, #loc136])
#loc252 = loc(fused[#loc137, #loc138])
#loc253 = loc(fused[#loc139, #loc136])
#loc254 = loc(fused[#loc147, #loc148])
#loc255 = loc(fused[#loc150, #loc149])
#loc256 = loc(fused[#loc155, #loc154])
#loc257 = loc(fused[#loc156, #loc157])
#loc258 = loc(fused[#loc158, #loc159])
#loc259 = loc(fused[#loc160, #loc161])
#loc260 = loc(fused[#loc162, #loc163])
#loc261 = loc(fused[#loc164, #loc165])
#loc262 = loc(fused[#loc166, #loc167])
#loc263 = loc(fused[#loc172, #loc173])
#loc264 = loc(fused[#loc177, #loc174])
#loc265 = loc(fused[#loc178, #loc179])
#loc266 = loc(fused[#loc181, #loc180])
#loc267 = loc(fused[#loc182, #loc183])
#loc268 = loc(fused[#loc185, #loc179])
#loc269 = loc(fused[#loc188, #loc191])
#loc270 = loc(fused[#loc193, #loc192])
#loc271 = loc(fused[#loc195, #loc194])
