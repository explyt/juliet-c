!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc157)
  cir.func private @printIntLine(!s32i) loc(#loc158)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc163)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc163)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc13)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc166)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc21)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc21)
          %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc167)
          %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc21)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc21)
          cir.store %9, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc166)
          %10 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc23)
          %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
          cir.store %11, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc167)
          %12 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc27)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc28)
          %15 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
          %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc31)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc32)
        } loc(#loc165)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc169)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc170)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc38)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc38)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc38)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc38)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc170)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc39)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc171)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc39)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc172)
          cir.store %13, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc173)
          cir.scope {
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc175)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc49)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc50)
              %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc51)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
            } loc(#loc176)
          } loc(#loc174)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc52)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc177)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc54)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc178)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
          %21 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc57)
          cir.store %20, %21 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc179)
          cir.scope {
            %22 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc181)
            %23 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc62)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
            cir.store %24, %22 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc181)
            %25 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
            %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
            %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc65)
            cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc66)
            %28 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
            %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
            %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc68)
            cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc69)
          } loc(#loc180)
        } loc(#loc168)
      } loc(#loc164)
    } loc(#loc162)
    cir.return loc(#loc10)
  } loc(#loc161)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    cir.return loc(#loc71)
  } loc(#loc182)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc186)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc186)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc78)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc78)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc189)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc190)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc88)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc88)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc88)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc88)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc190)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc89)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc191)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc192)
          cir.store %13, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc193)
          cir.scope {
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc195)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc99)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc100)
              %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc101)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
            } loc(#loc196)
          } loc(#loc194)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc102)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc197)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc104)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc198)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
          %21 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc107)
          cir.store %20, %21 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc199)
          cir.scope {
            %22 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc201)
            %23 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc112)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
            cir.store %24, %22 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc201)
            %25 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
            %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
            %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc116)
            %28 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
            %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
            %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc119)
          } loc(#loc200)
        } loc(#loc188)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc203)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc204)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc125)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc125)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc125)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc125)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc204)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc126)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc205)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc206)
          cir.store %13, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc207)
          cir.scope {
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc209)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc136)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc137)
              %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc138)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc136)
            } loc(#loc210)
          } loc(#loc208)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc139)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc211)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc141)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc212)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
          %21 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
          cir.store %20, %21 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc213)
          cir.scope {
            %22 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc215)
            %23 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc149)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
            cir.store %24, %22 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc215)
            %25 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
            %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
            %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc152)
            cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc153)
            %28 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
            %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
            %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc155)
            cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc156)
          } loc(#loc214)
        } loc(#loc202)
      } loc(#loc187)
    } loc(#loc185)
    cir.return loc(#loc75)
  } loc(#loc184)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":20:1)
#loc10 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":49:1)
#loc11 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":22:5)
#loc12 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":48:5)
#loc13 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":22:8)
#loc14 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":22:33)
#loc15 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":23:5)
#loc16 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":30:5)
#loc17 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":32:5)
#loc18 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":24:9)
#loc19 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":29:9)
#loc20 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":25:13)
#loc21 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":25:60)
#loc22 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":26:13)
#loc23 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":26:37)
#loc24 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":26:36)
#loc25 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":27:26)
#loc26 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc27 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":27:32)
#loc28 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":27:13)
#loc29 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":28:26)
#loc30 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc31 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":28:32)
#loc32 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":28:13)
#loc33 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":33:9)
#loc34 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":47:9)
#loc35 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":34:13)
#loc36 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":34:29)
#loc37 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":35:13)
#loc38 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":35:60)
#loc39 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":37:37)
#loc40 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":37:44)
#loc41 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":37:64)
#loc42 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":37:65)
#loc43 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":37:13)
#loc44 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":38:13)
#loc45 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":38:41)
#loc46 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":38:17)
#loc47 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":38:25)
#loc48 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":38:31)
#loc49 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":38:32)
#loc50 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":38:38)
#loc51 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":38:37)
#loc52 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":39:28)
#loc53 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":39:13)
#loc54 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":40:28)
#loc55 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":40:13)
#loc56 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":41:24)
#loc57 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":41:14)
#loc58 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":41:13)
#loc59 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":42:13)
#loc60 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":46:13)
#loc61 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":43:17)
#loc62 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":43:41)
#loc63 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":43:40)
#loc64 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":44:30)
#loc65 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":44:36)
#loc66 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":44:17)
#loc67 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":45:30)
#loc68 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":45:36)
#loc69 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":45:17)
#loc70 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":96:1)
#loc71 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":99:1)
#loc72 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":98:5)
#loc73 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":98:11)
#loc74 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":56:1)
#loc75 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":94:1)
#loc76 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":58:5)
#loc77 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":93:5)
#loc78 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":58:8)
#loc79 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":58:33)
#loc80 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":59:5)
#loc81 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":75:5)
#loc82 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":77:5)
#loc83 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":60:9)
#loc84 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":74:9)
#loc85 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":61:13)
#loc86 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":61:29)
#loc87 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":62:13)
#loc88 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":62:60)
#loc89 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":64:37)
#loc90 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":64:44)
#loc91 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":64:64)
#loc92 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":64:65)
#loc93 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":64:13)
#loc94 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":65:13)
#loc95 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":65:41)
#loc96 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":65:17)
#loc97 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":65:25)
#loc98 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":65:31)
#loc99 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":65:32)
#loc100 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":65:38)
#loc101 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":65:37)
#loc102 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":66:28)
#loc103 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":66:13)
#loc104 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":67:28)
#loc105 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":67:13)
#loc106 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":68:24)
#loc107 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":68:14)
#loc108 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":68:13)
#loc109 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":69:13)
#loc110 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":73:13)
#loc111 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":70:17)
#loc112 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":70:41)
#loc113 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":70:40)
#loc114 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":71:30)
#loc115 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":71:36)
#loc116 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":71:17)
#loc117 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":72:30)
#loc118 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":72:36)
#loc119 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":72:17)
#loc120 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":78:9)
#loc121 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":92:9)
#loc122 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":79:13)
#loc123 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":79:29)
#loc124 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":80:13)
#loc125 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":80:60)
#loc126 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":82:37)
#loc127 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":82:44)
#loc128 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":82:64)
#loc129 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":82:65)
#loc130 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":82:13)
#loc131 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":83:13)
#loc132 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":83:41)
#loc133 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":83:17)
#loc134 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":83:25)
#loc135 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":83:31)
#loc136 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":83:32)
#loc137 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":83:38)
#loc138 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":83:37)
#loc139 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":84:28)
#loc140 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":84:13)
#loc141 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":85:28)
#loc142 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":85:13)
#loc143 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":86:24)
#loc144 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":86:14)
#loc145 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":86:13)
#loc146 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":87:13)
#loc147 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":91:13)
#loc148 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":88:17)
#loc149 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":88:41)
#loc150 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":88:40)
#loc151 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":89:30)
#loc152 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":89:36)
#loc153 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":89:17)
#loc154 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":90:30)
#loc155 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":90:36)
#loc156 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_12.c":90:17)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc15, #loc16, #loc17, #loc12])
#loc165 = loc(fused[#loc18, #loc19])
#loc166 = loc(fused[#loc20, #loc21])
#loc167 = loc(fused[#loc22, #loc23])
#loc168 = loc(fused[#loc33, #loc34])
#loc169 = loc(fused[#loc35, #loc36])
#loc170 = loc(fused[#loc37, #loc38])
#loc171 = loc(fused[#loc40, #loc41])
#loc172 = loc(fused[#loc39, #loc42])
#loc173 = loc(fused[#loc43, #loc42])
#loc174 = loc(fused[#loc44, #loc45])
#loc175 = loc(fused[#loc46, #loc47])
#loc176 = loc(fused[#loc48, #loc45])
#loc177 = loc(fused[#loc53, #loc52])
#loc178 = loc(fused[#loc55, #loc54])
#loc179 = loc(fused[#loc58, #loc56])
#loc180 = loc(fused[#loc59, #loc60])
#loc181 = loc(fused[#loc61, #loc62])
#loc182 = loc(fused[#loc70, #loc71])
#loc183 = loc(fused[#loc72, #loc73])
#loc184 = loc(fused[#loc74, #loc75])
#loc185 = loc(fused[#loc76, #loc77])
#loc186 = loc(fused[#loc78, #loc79])
#loc187 = loc(fused[#loc80, #loc81, #loc82, #loc77])
#loc188 = loc(fused[#loc83, #loc84])
#loc189 = loc(fused[#loc85, #loc86])
#loc190 = loc(fused[#loc87, #loc88])
#loc191 = loc(fused[#loc90, #loc91])
#loc192 = loc(fused[#loc89, #loc92])
#loc193 = loc(fused[#loc93, #loc92])
#loc194 = loc(fused[#loc94, #loc95])
#loc195 = loc(fused[#loc96, #loc97])
#loc196 = loc(fused[#loc98, #loc95])
#loc197 = loc(fused[#loc103, #loc102])
#loc198 = loc(fused[#loc105, #loc104])
#loc199 = loc(fused[#loc108, #loc106])
#loc200 = loc(fused[#loc109, #loc110])
#loc201 = loc(fused[#loc111, #loc112])
#loc202 = loc(fused[#loc120, #loc121])
#loc203 = loc(fused[#loc122, #loc123])
#loc204 = loc(fused[#loc124, #loc125])
#loc205 = loc(fused[#loc127, #loc128])
#loc206 = loc(fused[#loc126, #loc129])
#loc207 = loc(fused[#loc130, #loc129])
#loc208 = loc(fused[#loc131, #loc132])
#loc209 = loc(fused[#loc133, #loc134])
#loc210 = loc(fused[#loc135, #loc132])
#loc211 = loc(fused[#loc140, #loc139])
#loc212 = loc(fused[#loc142, #loc141])
#loc213 = loc(fused[#loc145, #loc143])
#loc214 = loc(fused[#loc146, #loc147])
#loc215 = loc(fused[#loc148, #loc149])
