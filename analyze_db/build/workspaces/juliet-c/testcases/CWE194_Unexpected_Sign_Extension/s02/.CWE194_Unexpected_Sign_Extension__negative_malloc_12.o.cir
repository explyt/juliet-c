!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc117)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc118)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc121)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc123)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc15)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc124)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc126)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc126)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc19)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc19)
      cir.if %6 {
        %7 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc25)
        %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc25)
        cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc128)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc27)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc27)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc27)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc129)
      } loc(#loc127)
    } loc(#loc125)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc32)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc32)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc33)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc131)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc133)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc37)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc38)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc38)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc37)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc42)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc136)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc44)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc46)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc44)
          } loc(#loc137)
        } loc(#loc135)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc48)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc49)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc49)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc50)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc49)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc49)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc138)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc53)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc53)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc55)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc55)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc55)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc57)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc139)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc59)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc60)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
      } loc(#loc132)
    } loc(#loc130)
    cir.return loc(#loc12)
  } loc(#loc122)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc64)
    cir.return loc(#loc63)
  } loc(#loc140)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc143)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc70)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc144)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc146)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc146)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc74)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc74)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc79)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc79)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc79)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc148)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc82)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc82)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc82)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc149)
      } loc(#loc147)
    } loc(#loc145)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc87)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc87)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc88)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc151)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc153)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc92)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc93)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc93)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc92)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc154)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc97)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc156)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc99)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc100)
            %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc101)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
          } loc(#loc157)
        } loc(#loc155)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc103)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc104)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc104)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc104)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc104)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc158)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc108)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc108)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc110)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc110)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc111)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc110)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc112)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc159)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc115)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
      } loc(#loc152)
    } loc(#loc150)
    cir.return loc(#loc67)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":21:1)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":49:1)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":23:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":23:11)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":25:12)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":25:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":26:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":35:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":26:8)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":26:33)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":27:5)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":30:5)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":32:5)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":29:17)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":29:16)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":29:9)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":34:16)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":34:20)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":34:9)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":37:5)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":48:5)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":37:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":37:16)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":38:5)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":41:9)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":41:48)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":41:37)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":41:44)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":42:9)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":42:43)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":42:13)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":42:27)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":42:33)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":42:34)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":42:40)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":42:39)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":44:16)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":44:28)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":44:33)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":44:38)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":44:9)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":44:39)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":45:30)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":45:9)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":45:20)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":45:25)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":45:26)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":46:19)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":46:9)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":47:9)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":47:14)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":87:1)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":90:1)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":89:5)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":89:13)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":57:1)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":85:1)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":59:5)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":59:11)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":61:12)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":61:5)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":62:5)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":71:5)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":62:8)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":62:33)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":63:5)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":66:5)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":68:5)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":65:16)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":65:20)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":65:9)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":70:16)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":70:20)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":70:9)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":73:5)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":84:5)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":73:9)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":73:16)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":74:5)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":77:9)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":77:48)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":77:37)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":77:44)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":78:9)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":78:43)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":78:13)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":78:27)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":78:33)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":78:34)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":78:40)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":78:39)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":80:16)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":80:28)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":80:33)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":80:38)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":80:9)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":80:39)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":81:30)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":81:9)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":81:20)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":81:25)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":81:26)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":82:19)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":82:9)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":83:9)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_12.c":83:14)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc16, #loc15])
#loc125 = loc(fused[#loc17, #loc18])
#loc126 = loc(fused[#loc19, #loc20])
#loc127 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc128 = loc(fused[#loc26, #loc24])
#loc129 = loc(fused[#loc29, #loc28])
#loc130 = loc(fused[#loc30, #loc31])
#loc131 = loc(fused[#loc32, #loc33])
#loc132 = loc(fused[#loc34, #loc31])
#loc133 = loc(fused[#loc35, #loc36])
#loc134 = loc(fused[#loc37, #loc36])
#loc135 = loc(fused[#loc39, #loc40])
#loc136 = loc(fused[#loc41, #loc42])
#loc137 = loc(fused[#loc43, #loc40])
#loc138 = loc(fused[#loc51, #loc52])
#loc139 = loc(fused[#loc54, #loc53])
#loc140 = loc(fused[#loc62, #loc63])
#loc141 = loc(fused[#loc64, #loc65])
#loc142 = loc(fused[#loc66, #loc67])
#loc143 = loc(fused[#loc68, #loc69])
#loc144 = loc(fused[#loc71, #loc70])
#loc145 = loc(fused[#loc72, #loc73])
#loc146 = loc(fused[#loc74, #loc75])
#loc147 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc148 = loc(fused[#loc81, #loc80])
#loc149 = loc(fused[#loc84, #loc83])
#loc150 = loc(fused[#loc85, #loc86])
#loc151 = loc(fused[#loc87, #loc88])
#loc152 = loc(fused[#loc89, #loc86])
#loc153 = loc(fused[#loc90, #loc91])
#loc154 = loc(fused[#loc92, #loc91])
#loc155 = loc(fused[#loc94, #loc95])
#loc156 = loc(fused[#loc96, #loc97])
#loc157 = loc(fused[#loc98, #loc95])
#loc158 = loc(fused[#loc106, #loc107])
#loc159 = loc(fused[#loc109, #loc108])
