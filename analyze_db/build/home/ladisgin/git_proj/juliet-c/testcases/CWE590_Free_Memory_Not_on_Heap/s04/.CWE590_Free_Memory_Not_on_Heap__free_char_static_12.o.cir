!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_12_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc154)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc8)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc157)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc158)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc164)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc164)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %6 ^bb2, ^bb5 loc(#loc165)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc166)
  ^bb3:  // pred: ^bb2
    %7 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_12_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    %10 = cir.const #cir.int<65> : !s32i loc(#loc31)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc32)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc36)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc37)
    %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc39)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    %22 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
    cir.store %22, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    cir.br ^bb4 loc(#loc29)
  ^bb4:  // pred: ^bb3
    cir.br ^bb12 loc(#loc26)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc170)
  ^bb6:  // pred: ^bb5
    %23 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc44)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc45)
    %26 = cir.const #cir.int<1> : !u64i loc(#loc171)
    %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc172)
    %28 = cir.call @malloc(%27) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc44)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
    cir.store %29, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.br ^bb7 loc(#loc174)
  ^bb7:  // pred: ^bb6
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
    %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc175)
    cir.brcond %33 ^bb8, ^bb9 loc(#loc176)
  ^bb8:  // pred: ^bb7
    %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc8)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc54)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc55)
    cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
    cir.br ^bb9 loc(#loc49)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc49)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
    %40 = cir.const #cir.int<65> : !s32i loc(#loc57)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc58)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc58)
    cir.libc.memset %44 bytes from %39 set to %40 : !cir.ptr<!void>, !s32i, !u64i loc(#loc177)
    %45 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc62)
    %47 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %48 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %50 = cir.binop(sub, %48, %49) nsw : !s32i loc(#loc64)
    %51 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %46, %51 : !s8i, !cir.ptr<!s8i> loc(#loc178)
    %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.store %52, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.br ^bb11 loc(#loc43)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc22)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc22)
  ^bb13:  // pred: ^bb12
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
    cir.call @free(%55) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
    cir.return loc(#loc14)
  } loc(#loc159)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc74)
  } loc(#loc180)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc85)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc188)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc188)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc89)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc89)
    cir.brcond %7 ^bb2, ^bb9 loc(#loc189)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc190)
  ^bb3:  // pred: ^bb2
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc96)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc97)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc191)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc192)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc193)
    cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    cir.br ^bb4 loc(#loc194)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc195)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc196)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc105)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc108)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb6 loc(#loc101)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc101)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
    %25 = cir.const #cir.int<65> : !s32i loc(#loc110)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc111)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc111)
    cir.libc.memset %29 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc197)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc115)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc117)
    %36 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc119)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    cir.store %37, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.br ^bb8 loc(#loc95)
  ^bb8:  // pred: ^bb7
    cir.br ^bb16 loc(#loc92)
  ^bb9:  // pred: ^bb1
    cir.br ^bb10 loc(#loc200)
  ^bb10:  // pred: ^bb9
    %38 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc124)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc125)
    %41 = cir.const #cir.int<1> : !u64i loc(#loc201)
    %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc202)
    %43 = cir.call @malloc(%42) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc203)
    cir.store %44, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.br ^bb11 loc(#loc204)
  ^bb11:  // pred: ^bb10
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %46 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
    %48 = cir.cmp(eq, %45, %47) : !cir.ptr<!s8i>, !cir.bool loc(#loc205)
    cir.brcond %48 ^bb12, ^bb13 loc(#loc206)
  ^bb12:  // pred: ^bb11
    %49 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc133)
    %50 = cir.cast(array_to_ptrdecay, %49 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %51 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc135)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc136)
    cir.call @exit(%52) : (!s32i) -> () extra(#fn_attr) loc(#loc135)
    cir.br ^bb13 loc(#loc129)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc129)
  ^bb14:  // pred: ^bb13
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
    %55 = cir.const #cir.int<65> : !s32i loc(#loc138)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc139)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc139)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc139)
    cir.libc.memset %59 bytes from %54 set to %55 : !cir.ptr<!void>, !s32i, !u64i loc(#loc207)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc143)
    %62 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %63 = cir.const #cir.int<100> : !s32i loc(#loc145)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %65 = cir.binop(sub, %63, %64) nsw : !s32i loc(#loc145)
    %66 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %65 : !s32i), !cir.ptr<!s8i> loc(#loc147)
    cir.store %61, %66 : !s8i, !cir.ptr<!s8i> loc(#loc208)
    %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    cir.store %67, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.br ^bb15 loc(#loc123)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc88)
  ^bb16:  // 2 preds: ^bb8, ^bb15
    cir.br ^bb17 loc(#loc88)
  ^bb17:  // pred: ^bb16
    %68 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %69 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %70 = cir.cast(bitcast, %69 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
    cir.call @free(%70) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
    cir.return loc(#loc78)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":31:25)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc4 = loc("/usr/include/stdlib.h":672:1)
#loc5 = loc("/usr/include/stdlib.h":672:45)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":44:27)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":23:1)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":55:1)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":41:13)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":41:64)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":25:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":25:12)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":26:12)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":26:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":27:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":51:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":27:8)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":27:33)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":28:5)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":36:5)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":38:5)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":29:9)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":35:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":32:20)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":32:32)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":32:37)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":32:41)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":32:13)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":32:42)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":33:33)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":33:24)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":33:28)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":33:13)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":34:20)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":34:13)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":39:9)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":50:9)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":41:41)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":41:48)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":41:52)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":41:63)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":42:13)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":46:13)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":42:17)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":42:31)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":43:13)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":44:17)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":45:17)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":45:22)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":47:20)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":47:32)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":47:37)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":47:41)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":47:13)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":47:42)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":48:33)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":48:13)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":48:24)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":48:28)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":48:29)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":49:20)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":49:13)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":52:15)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":52:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":54:10)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":54:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":102:1)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":105:1)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":104:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":104:13)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":63:1)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":100:1)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":71:13)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":71:64)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":86:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":86:64)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":65:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":65:12)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":66:12)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":66:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":67:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":96:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":67:8)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":67:33)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":68:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":81:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":83:5)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":69:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":80:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":71:41)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":71:48)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":71:52)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":71:63)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":72:13)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":76:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":72:17)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":72:31)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":73:13)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":74:27)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":74:17)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":75:17)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":75:22)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":77:20)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":77:32)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":77:37)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":77:41)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":77:13)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":77:42)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":78:33)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":78:13)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":78:24)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":78:28)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":78:29)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":79:20)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":79:13)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":84:9)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":95:9)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":86:41)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":86:48)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":86:52)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":86:63)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":87:13)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":91:13)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":87:17)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":87:31)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":88:13)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":89:27)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":89:17)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":90:17)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":90:22)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":92:20)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":92:32)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":92:37)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":92:41)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":92:13)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":92:42)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":93:33)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":93:13)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":93:24)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":93:28)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":93:29)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":94:20)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":94:13)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":97:15)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":97:5)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":99:10)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_12.c":99:5)
#loc154 = loc(fused[#loc2, #loc3])
#loc155 = loc(fused[#loc4, #loc5])
#loc156 = loc(fused[#loc6, #loc7])
#loc157 = loc(fused[#loc9, #loc10])
#loc158 = loc(fused[#loc11, #loc12])
#loc159 = loc(fused[#loc13, #loc14])
#loc160 = loc(fused[#loc15, #loc16])
#loc161 = loc(fused[#loc17, #loc18])
#loc162 = loc(fused[#loc20, #loc19])
#loc163 = loc(fused[#loc21, #loc22])
#loc164 = loc(fused[#loc23, #loc24])
#loc165 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc166 = loc(fused[#loc28, #loc29])
#loc167 = loc(fused[#loc34, #loc35])
#loc168 = loc(fused[#loc39, #loc36])
#loc169 = loc(fused[#loc41, #loc40])
#loc170 = loc(fused[#loc42, #loc43])
#loc171 = loc(fused[#loc46, #loc47])
#loc172 = loc(fused[#loc45, #loc47])
#loc173 = loc(fused[#loc44, #loc16])
#loc174 = loc(fused[#loc48, #loc49])
#loc175 = loc(fused[#loc50, #loc51])
#loc176 = loc(fused[#loc52, #loc49])
#loc177 = loc(fused[#loc60, #loc61])
#loc178 = loc(fused[#loc63, #loc62])
#loc179 = loc(fused[#loc68, #loc67])
#loc180 = loc(fused[#loc73, #loc74])
#loc181 = loc(fused[#loc75, #loc76])
#loc182 = loc(fused[#loc77, #loc78])
#loc183 = loc(fused[#loc79, #loc80])
#loc184 = loc(fused[#loc81, #loc82])
#loc185 = loc(fused[#loc83, #loc84])
#loc186 = loc(fused[#loc86, #loc85])
#loc187 = loc(fused[#loc87, #loc88])
#loc188 = loc(fused[#loc89, #loc90])
#loc189 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc190 = loc(fused[#loc94, #loc95])
#loc191 = loc(fused[#loc98, #loc99])
#loc192 = loc(fused[#loc97, #loc99])
#loc193 = loc(fused[#loc96, #loc80])
#loc194 = loc(fused[#loc100, #loc101])
#loc195 = loc(fused[#loc102, #loc103])
#loc196 = loc(fused[#loc104, #loc101])
#loc197 = loc(fused[#loc113, #loc114])
#loc198 = loc(fused[#loc116, #loc115])
#loc199 = loc(fused[#loc121, #loc120])
#loc200 = loc(fused[#loc122, #loc123])
#loc201 = loc(fused[#loc126, #loc127])
#loc202 = loc(fused[#loc125, #loc127])
#loc203 = loc(fused[#loc124, #loc82])
#loc204 = loc(fused[#loc128, #loc129])
#loc205 = loc(fused[#loc130, #loc131])
#loc206 = loc(fused[#loc132, #loc129])
#loc207 = loc(fused[#loc141, #loc142])
#loc208 = loc(fused[#loc144, #loc143])
#loc209 = loc(fused[#loc149, #loc148])
