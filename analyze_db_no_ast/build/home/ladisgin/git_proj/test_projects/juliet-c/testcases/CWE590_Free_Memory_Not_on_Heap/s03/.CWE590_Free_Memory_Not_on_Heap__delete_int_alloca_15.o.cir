!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc96)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @printIntLine(!s32i) loc(#loc97)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc98)
  cir.func  @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
    cir.scope {
      %7 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%7 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc104)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc20)
          %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc20)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc20)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc20)
          cir.store %12, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc104)
          %13 = cir.const #cir.int<5> : !s32i loc(#loc21)
          %14 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
          cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc105)
          %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
          cir.store %15, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc106)
        } loc(#loc103)
        cir.break loc(#loc26)
      },
      case (default) {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc27)
        cir.break loc(#loc28)
      }
      ] loc(#loc14)
    } loc(#loc102)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc31)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc32)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc33)
    cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc33)
    cir.return loc(#loc9)
  } loc(#loc99)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc107)
  cir.func internal private  @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc40)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc110)
    cir.scope {
      %7 = cir.const #cir.int<5> : !s32i loc(#loc44)
      cir.switch (%7 : !s32i) [
      case (equal, 6) {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc45)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc45)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc46)
        cir.break loc(#loc47)
      },
      case (default) {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc113)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc114)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc113)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc114)
          cir.store %11, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc53)
          %13 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc115)
          %14 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
          cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc116)
        } loc(#loc112)
        cir.break loc(#loc58)
      }
      ] loc(#loc42)
    } loc(#loc111)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc61)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc62)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc63)
    cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc63)
    cir.return loc(#loc37)
  } loc(#loc108)
  cir.func internal private  @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc68)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
    cir.scope {
      %7 = cir.const #cir.int<6> : !s32i loc(#loc72)
      cir.switch (%7 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc122)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc123)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc122)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc123)
          cir.store %11, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc122)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc78)
          %13 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc124)
          %14 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
          cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc125)
        } loc(#loc121)
        cir.break loc(#loc83)
      },
      case (default) {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc84)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc84)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc85)
        cir.break loc(#loc86)
      }
      ] loc(#loc70)
    } loc(#loc120)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc89)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc90)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc91)
    cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc91)
    cir.return loc(#loc65)
  } loc(#loc117)
  cir.func  @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15L8goodG2B1Ev() : () -> () loc(#loc94)
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15L8goodG2B2Ev() : () -> () loc(#loc95)
    cir.return loc(#loc93)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":42:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":26:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":48:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":28:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":28:11)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":29:12)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":29:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":30:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":44:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":30:12)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":33:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":38:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":35:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":35:35)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":36:23)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":36:10)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":36:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":37:16)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":37:9)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":39:5)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":42:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":43:9)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":45:19)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":45:18)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":45:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":47:12)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":26:6)
#loc34 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc35 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":55:1)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":77:1)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":57:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":57:11)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":58:12)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":58:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":59:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":73:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":59:12)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":63:19)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":63:9)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":64:9)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":66:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":71:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":68:9)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":68:32)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":68:28)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":69:23)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":69:10)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":69:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":70:16)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":70:9)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":72:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":74:19)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":74:18)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":74:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":76:12)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":55:13)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":80:1)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":102:1)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":82:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":82:11)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":83:12)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":83:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":84:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":98:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":84:12)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":87:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":92:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":89:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":89:32)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":89:28)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":90:23)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":90:10)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":90:9)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":91:16)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":91:9)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":93:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":96:19)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":96:9)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":97:9)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":99:19)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":99:18)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":99:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":101:12)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":80:13)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":104:1)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":108:1)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":106:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_15.cpp":107:5)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc4, #loc5])
#loc98 = loc(fused[#loc6, #loc7])
#loc99 = loc(fused[#loc8, #loc9])
#loc100 = loc(fused[#loc10, #loc11])
#loc101 = loc(fused[#loc13, #loc12])
#loc102 = loc(fused[#loc14, #loc15])
#loc103 = loc(fused[#loc17, #loc18])
#loc104 = loc(fused[#loc19, #loc20])
#loc105 = loc(fused[#loc23, #loc21])
#loc106 = loc(fused[#loc25, #loc24])
#loc107 = loc(fused[#loc34, #loc35])
#loc108 = loc(fused[#loc36, #loc37])
#loc109 = loc(fused[#loc38, #loc39])
#loc110 = loc(fused[#loc41, #loc40])
#loc111 = loc(fused[#loc42, #loc43])
#loc112 = loc(fused[#loc48, #loc49])
#loc113 = loc(fused[#loc50, #loc51])
#loc114 = loc(fused[#loc52, #loc51])
#loc115 = loc(fused[#loc55, #loc53])
#loc116 = loc(fused[#loc57, #loc56])
#loc117 = loc(fused[#loc64, #loc65])
#loc118 = loc(fused[#loc66, #loc67])
#loc119 = loc(fused[#loc69, #loc68])
#loc120 = loc(fused[#loc70, #loc71])
#loc121 = loc(fused[#loc73, #loc74])
#loc122 = loc(fused[#loc75, #loc76])
#loc123 = loc(fused[#loc77, #loc76])
#loc124 = loc(fused[#loc80, #loc78])
#loc125 = loc(fused[#loc82, #loc81])
#loc126 = loc(fused[#loc92, #loc93])
