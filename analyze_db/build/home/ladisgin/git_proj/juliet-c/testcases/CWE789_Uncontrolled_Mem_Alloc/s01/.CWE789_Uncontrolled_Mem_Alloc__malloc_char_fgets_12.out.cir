!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":271:10)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":271:14)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":271:20)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":271:32)
#true = #cir.bool<true> : !cir.bool
#loc462 = loc(fused[#loc152, #loc153])
#loc463 = loc(fused[#loc154, #loc155])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc404)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc405)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc406)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc407)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc408)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc409)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc410)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc411)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc18)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc412)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc21)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc414)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc27)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc415)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc417)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc417)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc31)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc31)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc420)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc420)
          cir.store %8, %7 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc420)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc42)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc43)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc43)
            %12 = cir.const #cir.int<8> : !u64i loc(#loc43)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc43)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc43)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc43)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc43)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc43)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc406)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc45)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc422)
            cir.if %23 {
              %24 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc50)
              %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc51)
              %26 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc53)
              %28 = cir.call @strtoul(%25, %26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc50)
              cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc424)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc56)
            } loc(#loc423)
          } loc(#loc421)
        } loc(#loc419)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc57)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc57)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc425)
      } loc(#loc418)
    } loc(#loc416)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc427)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc427)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc61)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc61)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc430)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc72)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc432)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc433)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc78)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc79)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc435)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc436)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc78)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc437)
              cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc438)
              cir.scope {
                %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc440)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc89)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc90)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc91)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc89)
                } loc(#loc441)
              } loc(#loc439)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc92)
              %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
              %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc18)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc18)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
              %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc95)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc96)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc96)
            } else {
              %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc21)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc21)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc98)
            } loc(#loc434)
          } loc(#loc431)
        } loc(#loc429)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc443)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc105)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc445)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc446)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc109)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc110)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc110)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc447)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc108)
                cir.yield %17 : !cir.bool loc(#loc108)
              }, false {
                %17 = cir.const #false loc(#loc108)
                cir.yield %17 : !cir.bool loc(#loc108)
              }) : (!cir.bool) -> !cir.bool loc(#loc108)
              cir.yield %16 : !cir.bool loc(#loc108)
            }, false {
              %12 = cir.const #false loc(#loc108)
              cir.yield %12 : !cir.bool loc(#loc108)
            }) : (!cir.bool) -> !cir.bool loc(#loc108)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc114)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc115)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc449)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc450)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc451)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc452)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc454)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc125)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc126)
                  %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc127)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc125)
                } loc(#loc455)
              } loc(#loc453)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc128)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
              %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc130)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc130)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc132)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc133)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
            } else {
              %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc22)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc22)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc135)
            } loc(#loc448)
          } loc(#loc444)
        } loc(#loc442)
      } loc(#loc428)
    } loc(#loc426)
    cir.return loc(#loc24)
  } loc(#loc413)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc457)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc138)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc458)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc140)
    cir.return loc(#loc137)
  } loc(#loc456)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc459)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc460)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc149)
  cir.func @main(%arg0: !s32i loc(fused[#loc152, #loc153]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc154, #loc155])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc462)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc463)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc151)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc156)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc157)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc158)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc158)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc159)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc146)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc464)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12_good() : () -> () loc(#loc161)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc147)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc148)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc465)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12_bad() : () -> () loc(#loc165)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc149)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc168)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc466)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc466)
    cir.return %17 : !s32i loc(#loc466)
  } loc(#loc461)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc468)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc174)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc469)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc471)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc471)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc178)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc178)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc474)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc474)
          cir.store %8, %7 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc474)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc189)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc190)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc190)
            %12 = cir.const #cir.int<8> : !u64i loc(#loc190)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc190)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc190)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc190)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc190)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc190)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc406)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc191)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc192)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc193)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc193)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc476)
            cir.if %23 {
              %24 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc197)
              %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc198)
              %26 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc200)
              %28 = cir.call @strtoul(%25, %26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc197)
              cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc478)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc203)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc203)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc204)
            } loc(#loc477)
          } loc(#loc475)
        } loc(#loc473)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc480)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc480)
          cir.store %8, %7 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc480)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc211)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc212)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc212)
            %12 = cir.const #cir.int<8> : !u64i loc(#loc212)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc212)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc212)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc212)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc212)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc212)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc406)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc213)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc214)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc215)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc482)
            cir.if %23 {
              %24 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc219)
              %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc220)
              %26 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc222)
              %28 = cir.call @strtoul(%25, %26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc219)
              cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc484)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc225)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc225)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc226)
            } loc(#loc483)
          } loc(#loc481)
        } loc(#loc479)
      } loc(#loc472)
    } loc(#loc470)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc486)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc486)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc229)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc229)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc489)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc240)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc491)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc492)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc244)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc245)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc245)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc493)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc243)
                cir.yield %17 : !cir.bool loc(#loc243)
              }, false {
                %17 = cir.const #false loc(#loc243)
                cir.yield %17 : !cir.bool loc(#loc243)
              }) : (!cir.bool) -> !cir.bool loc(#loc243)
              cir.yield %16 : !cir.bool loc(#loc243)
            }, false {
              %12 = cir.const #false loc(#loc243)
              cir.yield %12 : !cir.bool loc(#loc243)
            }) : (!cir.bool) -> !cir.bool loc(#loc243)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc249)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc250)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc495)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc496)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc249)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc497)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc498)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc257)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc258)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc258)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc500)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc260)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc261)
                  %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc262)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc260)
                } loc(#loc501)
              } loc(#loc499)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc263)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc264)
              %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc265)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc265)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc263)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc266)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc267)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc268)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc269)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc268)
            } else {
              %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc270)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc270)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc271)
            } loc(#loc494)
          } loc(#loc490)
        } loc(#loc488)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc503)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc278)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc505)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc506)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc282)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc283)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc283)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc507)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc281)
                cir.yield %17 : !cir.bool loc(#loc281)
              }, false {
                %17 = cir.const #false loc(#loc281)
                cir.yield %17 : !cir.bool loc(#loc281)
              }) : (!cir.bool) -> !cir.bool loc(#loc281)
              cir.yield %16 : !cir.bool loc(#loc281)
            }, false {
              %12 = cir.const #false loc(#loc281)
              cir.yield %12 : !cir.bool loc(#loc281)
            }) : (!cir.bool) -> !cir.bool loc(#loc281)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc287)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc288)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc509)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc510)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc287)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc511)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc512)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc295)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc296)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc296)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc514)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc298)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc299)
                  %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc300)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc298)
                } loc(#loc515)
              } loc(#loc513)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc301)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc302)
              %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc303)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc303)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc301)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc304)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc305)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc306)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc307)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc307)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc306)
            } else {
              %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc308)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc308)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc309)
            } loc(#loc508)
          } loc(#loc504)
        } loc(#loc502)
      } loc(#loc487)
    } loc(#loc485)
    cir.return loc(#loc171)
  } loc(#loc467)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc517)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc314)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc314)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc518)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc520)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc520)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc318)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc318)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc323)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc323)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc522)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc325)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc325)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc523)
      } loc(#loc521)
    } loc(#loc519)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc525)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc525)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc329)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc329)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc528)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc340)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc530)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc531)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc346)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc347)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc533)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc534)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc346)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc535)
              cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc536)
              cir.scope {
                %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc354)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc355)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc355)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc538)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc357)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc358)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc359)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc357)
                } loc(#loc539)
              } loc(#loc537)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc360)
              %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc361)
              %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc362)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc362)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc360)
              %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc363)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc364)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc365)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc366)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc366)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc365)
            } else {
              %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc367)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc367)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc368)
            } loc(#loc532)
          } loc(#loc529)
        } loc(#loc527)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc541)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc375)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc543)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc544)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc381)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc382)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc546)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc547)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc381)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc548)
              cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc549)
              cir.scope {
                %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc389)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc390)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc390)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc551)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc392)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc393)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc394)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc392)
                } loc(#loc552)
              } loc(#loc550)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc395)
              %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc396)
              %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc397)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc397)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc395)
              %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc398)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc399)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc400)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc401)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc401)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc400)
            } else {
              %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc402)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc402)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc403)
            } loc(#loc545)
          } loc(#loc542)
        } loc(#loc540)
      } loc(#loc526)
    } loc(#loc524)
    cir.return loc(#loc311)
  } loc(#loc516)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":181:1)
#loc8 = loc("/usr/include/stdlib.h":183:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":47:27)
#loc12 = loc("/usr/include/stdlib.h":672:1)
#loc13 = loc("/usr/include/stdlib.h":672:45)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("/usr/include/string.h":141:1)
#loc17 = loc("/usr/include/string.h":142:14)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":68:34)
#loc19 = loc("/usr/include/stdlib.h":687:1)
#loc20 = loc("/usr/include/stdlib.h":687:32)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":74:27)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":96:27)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":30:1)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":100:1)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":32:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":32:12)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":34:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":34:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":35:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":55:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":35:8)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":35:33)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":36:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":50:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":52:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":37:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":49:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":38:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":38:49)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":40:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":48:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":40:23)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":40:36)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":40:53)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":40:17)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":40:63)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":41:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":44:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":46:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":43:24)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":43:32)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":43:45)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":43:51)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":43:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":43:52)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":47:17)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":54:16)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":54:9)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":56:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":99:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":56:8)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":56:33)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":57:5)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":77:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":79:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":58:9)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":76:9)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":59:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":59:20)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":63:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":75:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":63:17)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":63:24)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":63:43)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":64:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":71:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":73:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":65:36)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":65:43)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":65:48)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":65:59)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":65:60)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":65:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":66:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":66:49)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":66:21)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":66:33)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":66:39)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":66:40)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":66:46)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":66:45)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":68:17)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":68:24)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":69:27)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":69:17)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":70:17)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":70:22)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":74:17)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":80:9)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":98:9)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":81:13)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":81:20)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":85:13)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":97:13)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":85:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":85:24)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":85:43)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":85:45)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":85:48)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":85:55)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":86:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":93:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":95:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":87:36)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":87:43)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":87:48)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":87:59)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":87:60)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":87:17)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":88:17)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":88:49)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":88:21)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":88:33)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":88:39)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":88:40)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":88:46)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":88:45)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":90:17)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":90:24)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":90:34)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":91:27)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":91:17)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":92:17)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":92:22)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":96:17)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":256:1)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":260:1)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":258:5)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":258:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":259:5)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":259:13)
#loc142 = loc("/usr/include/stdlib.h":575:1)
#loc143 = loc("/usr/include/stdlib.h":575:41)
#loc144 = loc("/usr/include/time.h":76:1)
#loc145 = loc("/usr/include/time.h":76:38)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":276:15)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":278:15)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":281:15)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":283:15)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":271:1)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":286:1)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":272:1)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":274:27)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":274:22)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":274:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":276:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":277:5)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":277:62)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":278:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":281:5)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":282:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":282:61)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":283:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":285:12)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":285:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":109:1)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":190:1)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":111:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":111:12)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":113:12)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":113:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":114:5)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":145:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":114:8)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":114:33)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":115:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":129:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":131:5)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":116:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":128:9)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":117:13)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":117:49)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":119:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":127:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":119:23)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":119:36)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":119:53)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":119:17)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":119:63)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":120:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":123:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":125:13)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":122:24)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":122:32)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":122:45)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":122:51)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":122:17)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":122:52)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":126:27)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":126:17)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":132:9)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":144:9)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":133:13)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":133:49)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":135:13)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":143:13)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":135:23)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":135:36)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":135:53)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":135:17)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":135:63)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":136:13)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":139:13)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":141:13)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":138:24)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":138:32)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":138:45)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":138:51)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":138:17)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":138:52)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":142:27)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":142:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":146:5)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":189:5)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":146:8)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":146:33)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":147:5)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":167:5)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":169:5)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":148:9)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":166:9)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":149:13)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":149:20)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":153:13)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":165:13)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":153:17)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":153:24)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":153:43)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":153:45)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":153:48)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":153:55)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":154:13)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":161:13)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":163:13)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":155:36)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":155:43)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":155:48)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":155:59)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":155:60)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":155:17)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":156:17)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":156:49)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":156:21)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":156:33)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":156:39)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":156:40)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":156:46)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":156:45)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":158:17)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":158:24)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":158:34)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":159:27)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":159:17)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":160:17)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":160:22)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":164:27)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":164:17)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":170:9)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":188:9)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":171:13)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":171:20)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":175:13)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":187:13)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":175:17)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":175:24)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":175:43)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":175:45)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":175:48)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":175:55)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":176:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":183:13)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":185:13)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":177:36)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":177:43)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":177:48)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":177:59)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":177:60)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":177:17)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":178:17)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":178:49)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":178:21)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":178:33)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":178:39)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":178:40)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":178:46)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":178:45)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":180:17)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":180:24)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":180:34)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":181:27)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":181:17)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":182:17)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":182:22)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":186:27)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":186:17)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":195:1)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":254:1)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":197:5)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":197:12)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":199:12)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":199:5)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":200:5)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":209:5)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":200:8)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":200:33)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":201:5)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":204:5)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":206:5)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":203:16)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":203:9)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":208:16)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":208:9)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":210:5)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":253:5)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":210:8)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":210:33)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":211:5)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":231:5)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":233:5)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":212:9)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":230:9)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":213:13)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":213:20)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":217:13)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":229:13)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":217:17)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":217:24)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":217:43)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":218:13)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":225:13)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":227:13)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":219:36)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":219:43)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":219:48)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":219:59)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":219:60)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":219:17)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":220:17)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":220:49)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":220:21)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":220:33)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":220:39)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":220:40)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":220:46)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":220:45)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":222:17)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":222:24)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":222:34)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":223:27)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":223:17)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":224:17)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":224:22)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":228:27)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":228:17)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":234:9)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":252:9)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":235:13)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":235:20)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":239:13)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":251:13)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":239:17)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":239:24)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":239:43)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":240:13)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":247:13)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":249:13)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":241:36)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":241:43)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":241:48)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":241:59)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":241:60)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":241:17)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":242:17)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":242:49)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":242:21)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":242:33)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":242:39)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":242:40)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":242:46)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":242:45)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":244:17)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":244:24)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":244:34)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":245:27)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":245:17)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":246:17)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":246:22)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":250:27)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_12.c":250:17)
#loc404 = loc(fused[#loc1, #loc2])
#loc405 = loc(fused[#loc3, #loc4])
#loc406 = loc(fused[#loc5, #loc6])
#loc407 = loc(fused[#loc7, #loc8])
#loc408 = loc(fused[#loc9, #loc10])
#loc409 = loc(fused[#loc12, #loc13])
#loc410 = loc(fused[#loc14, #loc15])
#loc411 = loc(fused[#loc16, #loc17])
#loc412 = loc(fused[#loc19, #loc20])
#loc413 = loc(fused[#loc23, #loc24])
#loc414 = loc(fused[#loc25, #loc26])
#loc415 = loc(fused[#loc28, #loc27])
#loc416 = loc(fused[#loc29, #loc30])
#loc417 = loc(fused[#loc31, #loc32])
#loc418 = loc(fused[#loc33, #loc34, #loc35, #loc30])
#loc419 = loc(fused[#loc36, #loc37])
#loc420 = loc(fused[#loc38, #loc39])
#loc421 = loc(fused[#loc40, #loc41])
#loc422 = loc(fused[#loc45, #loc46])
#loc423 = loc(fused[#loc47, #loc48, #loc49, #loc41])
#loc424 = loc(fused[#loc54, #loc55])
#loc425 = loc(fused[#loc58, #loc57])
#loc426 = loc(fused[#loc59, #loc60])
#loc427 = loc(fused[#loc61, #loc62])
#loc428 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc429 = loc(fused[#loc66, #loc67])
#loc430 = loc(fused[#loc68, #loc69])
#loc431 = loc(fused[#loc70, #loc71])
#loc432 = loc(fused[#loc73, #loc74])
#loc433 = loc(fused[#loc72, #loc74])
#loc434 = loc(fused[#loc75, #loc76, #loc77, #loc71])
#loc435 = loc(fused[#loc80, #loc81])
#loc436 = loc(fused[#loc79, #loc81])
#loc437 = loc(fused[#loc78, #loc82])
#loc438 = loc(fused[#loc83, #loc82])
#loc439 = loc(fused[#loc84, #loc85])
#loc440 = loc(fused[#loc86, #loc87])
#loc441 = loc(fused[#loc88, #loc85])
#loc442 = loc(fused[#loc99, #loc100])
#loc443 = loc(fused[#loc101, #loc102])
#loc444 = loc(fused[#loc103, #loc104])
#loc445 = loc(fused[#loc106, #loc107])
#loc446 = loc(fused[#loc105, #loc107])
#loc447 = loc(fused[#loc109, #loc110])
#loc448 = loc(fused[#loc111, #loc112, #loc113, #loc104])
#loc449 = loc(fused[#loc116, #loc117])
#loc450 = loc(fused[#loc115, #loc117])
#loc451 = loc(fused[#loc114, #loc118])
#loc452 = loc(fused[#loc119, #loc118])
#loc453 = loc(fused[#loc120, #loc121])
#loc454 = loc(fused[#loc122, #loc123])
#loc455 = loc(fused[#loc124, #loc121])
#loc456 = loc(fused[#loc136, #loc137])
#loc457 = loc(fused[#loc138, #loc139])
#loc458 = loc(fused[#loc140, #loc141])
#loc459 = loc(fused[#loc142, #loc143])
#loc460 = loc(fused[#loc144, #loc145])
#loc461 = loc(fused[#loc150, #loc151])
#loc464 = loc(fused[#loc161, #loc162])
#loc465 = loc(fused[#loc165, #loc166])
#loc466 = loc(fused[#loc169, #loc168])
#loc467 = loc(fused[#loc170, #loc171])
#loc468 = loc(fused[#loc172, #loc173])
#loc469 = loc(fused[#loc175, #loc174])
#loc470 = loc(fused[#loc176, #loc177])
#loc471 = loc(fused[#loc178, #loc179])
#loc472 = loc(fused[#loc180, #loc181, #loc182, #loc177])
#loc473 = loc(fused[#loc183, #loc184])
#loc474 = loc(fused[#loc185, #loc186])
#loc475 = loc(fused[#loc187, #loc188])
#loc476 = loc(fused[#loc192, #loc193])
#loc477 = loc(fused[#loc194, #loc195, #loc196, #loc188])
#loc478 = loc(fused[#loc201, #loc202])
#loc479 = loc(fused[#loc205, #loc206])
#loc480 = loc(fused[#loc207, #loc208])
#loc481 = loc(fused[#loc209, #loc210])
#loc482 = loc(fused[#loc214, #loc215])
#loc483 = loc(fused[#loc216, #loc217, #loc218, #loc210])
#loc484 = loc(fused[#loc223, #loc224])
#loc485 = loc(fused[#loc227, #loc228])
#loc486 = loc(fused[#loc229, #loc230])
#loc487 = loc(fused[#loc231, #loc232, #loc233, #loc228])
#loc488 = loc(fused[#loc234, #loc235])
#loc489 = loc(fused[#loc236, #loc237])
#loc490 = loc(fused[#loc238, #loc239])
#loc491 = loc(fused[#loc241, #loc242])
#loc492 = loc(fused[#loc240, #loc242])
#loc493 = loc(fused[#loc244, #loc245])
#loc494 = loc(fused[#loc246, #loc247, #loc248, #loc239])
#loc495 = loc(fused[#loc251, #loc252])
#loc496 = loc(fused[#loc250, #loc252])
#loc497 = loc(fused[#loc249, #loc253])
#loc498 = loc(fused[#loc254, #loc253])
#loc499 = loc(fused[#loc255, #loc256])
#loc500 = loc(fused[#loc257, #loc258])
#loc501 = loc(fused[#loc259, #loc256])
#loc502 = loc(fused[#loc272, #loc273])
#loc503 = loc(fused[#loc274, #loc275])
#loc504 = loc(fused[#loc276, #loc277])
#loc505 = loc(fused[#loc279, #loc280])
#loc506 = loc(fused[#loc278, #loc280])
#loc507 = loc(fused[#loc282, #loc283])
#loc508 = loc(fused[#loc284, #loc285, #loc286, #loc277])
#loc509 = loc(fused[#loc289, #loc290])
#loc510 = loc(fused[#loc288, #loc290])
#loc511 = loc(fused[#loc287, #loc291])
#loc512 = loc(fused[#loc292, #loc291])
#loc513 = loc(fused[#loc293, #loc294])
#loc514 = loc(fused[#loc295, #loc296])
#loc515 = loc(fused[#loc297, #loc294])
#loc516 = loc(fused[#loc310, #loc311])
#loc517 = loc(fused[#loc312, #loc313])
#loc518 = loc(fused[#loc315, #loc314])
#loc519 = loc(fused[#loc316, #loc317])
#loc520 = loc(fused[#loc318, #loc319])
#loc521 = loc(fused[#loc320, #loc321, #loc322, #loc317])
#loc522 = loc(fused[#loc324, #loc323])
#loc523 = loc(fused[#loc326, #loc325])
#loc524 = loc(fused[#loc327, #loc328])
#loc525 = loc(fused[#loc329, #loc330])
#loc526 = loc(fused[#loc331, #loc332, #loc333, #loc328])
#loc527 = loc(fused[#loc334, #loc335])
#loc528 = loc(fused[#loc336, #loc337])
#loc529 = loc(fused[#loc338, #loc339])
#loc530 = loc(fused[#loc341, #loc342])
#loc531 = loc(fused[#loc340, #loc342])
#loc532 = loc(fused[#loc343, #loc344, #loc345, #loc339])
#loc533 = loc(fused[#loc348, #loc349])
#loc534 = loc(fused[#loc347, #loc349])
#loc535 = loc(fused[#loc346, #loc350])
#loc536 = loc(fused[#loc351, #loc350])
#loc537 = loc(fused[#loc352, #loc353])
#loc538 = loc(fused[#loc354, #loc355])
#loc539 = loc(fused[#loc356, #loc353])
#loc540 = loc(fused[#loc369, #loc370])
#loc541 = loc(fused[#loc371, #loc372])
#loc542 = loc(fused[#loc373, #loc374])
#loc543 = loc(fused[#loc376, #loc377])
#loc544 = loc(fused[#loc375, #loc377])
#loc545 = loc(fused[#loc378, #loc379, #loc380, #loc374])
#loc546 = loc(fused[#loc383, #loc384])
#loc547 = loc(fused[#loc382, #loc384])
#loc548 = loc(fused[#loc381, #loc385])
#loc549 = loc(fused[#loc386, #loc385])
#loc550 = loc(fused[#loc387, #loc388])
#loc551 = loc(fused[#loc389, #loc390])
#loc552 = loc(fused[#loc391, #loc388])
