!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":24:22)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":24:26)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":83:26)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":83:30)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":61:26)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":61:30)
#loc146 = loc(fused[#loc12, #loc13])
#loc166 = loc(fused[#loc64, #loc65])
#loc184 = loc(fused[#loc116, #loc117])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fgets_postinc_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc141)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc142)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc12, #loc13])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc147)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc146)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc11)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc16)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc147)
    cir.store %3, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc147)
    cir.br ^bb2 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc21)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc22)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc22)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc22)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc22)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc22)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc22)
    %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc22)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc142)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc24)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc150)
    cir.brcond %18 ^bb3, ^bb4 loc(#loc151)
  ^bb3:  // pred: ^bb2
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
    %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc30)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.br ^bb5 loc(#loc27)
  ^bb4:  // pred: ^bb2
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.return %24 : !s32i loc(#loc153)
  } loc(#loc145)
  cir.func private @printIntLine(!s32i) loc(#loc154)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_postinc_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc157)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc47)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc53)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc55)
    cir.br ^bb2 loc(#loc51)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc39)
  } loc(#loc155)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_postinc_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc162)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc64, #loc65])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc167)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc166)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.br ^bb1 loc(#loc168)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc167)
    cir.store %3, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc167)
    cir.br ^bb2 loc(#loc169)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc73)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc74)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc74)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc74)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc74)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc74)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc74)
    %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc74)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc142)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
    %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc76)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc170)
    cir.brcond %18 ^bb3, ^bb4 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc81)
    %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc82)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.br ^bb5 loc(#loc79)
  ^bb4:  // pred: ^bb2
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb5 loc(#loc72)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc72)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc70)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.return %24 : !s32i loc(#loc173)
  } loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc89)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc176)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc96)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc99)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc105)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc180)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc181)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %9 = cir.unary(inc, %8) nsw : !s32i, !s32i loc(#loc110)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc112)
    cir.br ^bb4 loc(#loc107)
  ^bb3:  // pred: ^bb1
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc89)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc103)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc91)
  } loc(#loc174)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc116, #loc117])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc115)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc119)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    cir.return %4 : !s32i loc(#loc186)
  } loc(#loc183)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc129)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc132)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc138)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc140)
    cir.br ^bb2 loc(#loc136)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc124)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fgets_postinc_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":36:23)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":24:1)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":40:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":27:9)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":27:45)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":25:1)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":26:5)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":38:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:9)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":37:9)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:19)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:32)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:49)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:13)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:59)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":30:9)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":33:9)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":35:9)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":32:25)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":32:20)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":32:13)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":32:36)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":36:13)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":39:12)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":39:5)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":42:1)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":54:1)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":51:9)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":51:22)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":44:5)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":44:9)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":46:12)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":46:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":47:22)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":47:12)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":47:5)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":47:26)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":48:5)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":53:5)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":50:13)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":50:9)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":52:22)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":52:9)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":120:1)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":124:1)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":122:5)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":122:13)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":123:5)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":123:13)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":83:1)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":99:1)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":86:9)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":86:45)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":84:1)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":85:5)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":97:5)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:9)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":96:9)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:19)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:32)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:49)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:13)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:59)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":89:9)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":92:9)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":94:9)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":91:25)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":91:20)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":91:13)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":91:36)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":95:23)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":95:13)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":98:12)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":98:5)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":116:19)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":101:1)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":118:1)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":111:9)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":111:22)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":103:5)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":103:9)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":105:12)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":105:5)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":106:26)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":106:12)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":106:5)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":106:30)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":108:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":117:5)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":108:9)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":108:16)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":109:5)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":113:5)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":115:5)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":110:13)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":110:9)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":112:22)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":112:9)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":116:9)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":61:1)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":66:1)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":62:1)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":64:12)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":64:5)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":65:12)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":65:5)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":68:1)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":80:1)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":77:9)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":77:22)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":70:5)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":70:9)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":72:12)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":72:5)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":73:26)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":73:12)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":73:5)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":73:30)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":74:5)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":79:5)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":76:13)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":76:9)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":78:22)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":78:9)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc10, #loc11])
#loc147 = loc(fused[#loc14, #loc15])
#loc148 = loc(fused[#loc17, #loc18])
#loc149 = loc(fused[#loc19, #loc20])
#loc150 = loc(fused[#loc24, #loc25])
#loc151 = loc(fused[#loc26, #loc27, #loc28, #loc20])
#loc152 = loc(fused[#loc31, #loc32])
#loc153 = loc(fused[#loc35, #loc34])
#loc154 = loc(fused[#loc36, #loc37])
#loc155 = loc(fused[#loc38, #loc39])
#loc156 = loc(fused[#loc40, #loc41])
#loc157 = loc(fused[#loc42, #loc43])
#loc158 = loc(fused[#loc45, #loc44])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc50, #loc51])
#loc161 = loc(fused[#loc53, #loc52])
#loc162 = loc(fused[#loc56, #loc57])
#loc163 = loc(fused[#loc58, #loc59])
#loc164 = loc(fused[#loc60, #loc61])
#loc165 = loc(fused[#loc62, #loc63])
#loc167 = loc(fused[#loc66, #loc67])
#loc168 = loc(fused[#loc69, #loc70])
#loc169 = loc(fused[#loc71, #loc72])
#loc170 = loc(fused[#loc76, #loc77])
#loc171 = loc(fused[#loc78, #loc79, #loc80, #loc72])
#loc172 = loc(fused[#loc83, #loc84])
#loc173 = loc(fused[#loc88, #loc87])
#loc174 = loc(fused[#loc90, #loc91])
#loc175 = loc(fused[#loc92, #loc93])
#loc176 = loc(fused[#loc94, #loc95])
#loc177 = loc(fused[#loc97, #loc96])
#loc178 = loc(fused[#loc100, #loc101])
#loc179 = loc(fused[#loc102, #loc103])
#loc180 = loc(fused[#loc104, #loc105])
#loc181 = loc(fused[#loc106, #loc107, #loc108, #loc103])
#loc182 = loc(fused[#loc110, #loc109])
#loc183 = loc(fused[#loc114, #loc115])
#loc185 = loc(fused[#loc120, #loc119])
#loc186 = loc(fused[#loc122, #loc121])
#loc187 = loc(fused[#loc123, #loc124])
#loc188 = loc(fused[#loc125, #loc126])
#loc189 = loc(fused[#loc127, #loc128])
#loc190 = loc(fused[#loc130, #loc129])
#loc191 = loc(fused[#loc133, #loc134])
#loc192 = loc(fused[#loc135, #loc136])
#loc193 = loc(fused[#loc138, #loc137])
