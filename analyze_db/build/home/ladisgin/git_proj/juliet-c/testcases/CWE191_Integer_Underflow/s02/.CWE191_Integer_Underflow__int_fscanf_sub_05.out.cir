!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc55 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":173:10)
#loc56 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":173:14)
#loc57 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":173:20)
#loc58 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":173:32)
#loc215 = loc(fused[#loc55, #loc56])
#loc216 = loc(fused[#loc57, #loc58])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_sub_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc193)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc194)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printIntLine(!s32i) loc(#loc196)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_sub_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc198)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc199)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc193)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc202)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc22)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc22)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc203)
  ^bb5:  // pred: ^bb4
    %12 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc193)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %14 ^bb6, ^bb9 loc(#loc204)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc205)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc30)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc32)
    cir.br ^bb8 loc(#loc29)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc25)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc25)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc11)
  } loc(#loc197)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_sub_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc34)
  } loc(#loc206)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc211)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc212)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc215)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc216)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc62)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fscanf_sub_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc217)
    cir.call @CWE191_Integer_Underflow__int_fscanf_sub_05_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fscanf_sub_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call @CWE191_Integer_Underflow__int_fscanf_sub_05_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    cir.return %17 : !s32i loc(#loc219)
  } loc(#loc214)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc76)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc223)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc193)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc87)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc226)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc89)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc90)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc91)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc91)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc89)
    cir.br ^bb3 loc(#loc86)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc227)
  ^bb5:  // pred: ^bb4
    %12 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc220)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc94)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc228)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb13 loc(#loc96)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc229)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %18 = cir.const #cir.int<2147483647> : !s32i loc(#loc102)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc102)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc102)
    %22 = cir.cmp(gt, %17, %21) : !s32i, !cir.bool loc(#loc230)
    cir.brcond %22 ^bb9, ^bb10 loc(#loc231)
  ^bb9:  // pred: ^bb8
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc106)
    cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc108)
    cir.br ^bb11 loc(#loc104)
  ^bb10:  // pred: ^bb8
    %27 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc76)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb11 loc(#loc100)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc100)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc93)
  ^bb13:  // 2 preds: ^bb6, ^bb12
    cir.br ^bb14 loc(#loc93)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc78)
  } loc(#loc221)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc233)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc234)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc116)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc193)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc120)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc237)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc122)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc123)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc124)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc124)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc122)
    cir.br ^bb3 loc(#loc119)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc119)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc238)
  ^bb5:  // pred: ^bb4
    %12 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc193)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc127)
    cir.brcond %14 ^bb6, ^bb12 loc(#loc239)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc240)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %16 = cir.const #cir.int<2147483647> : !s32i loc(#loc132)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc132)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc132)
    %20 = cir.cmp(gt, %15, %19) : !s32i, !cir.bool loc(#loc241)
    cir.brcond %20 ^bb8, ^bb9 loc(#loc242)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc136)
    cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc138)
    cir.br ^bb10 loc(#loc134)
  ^bb9:  // pred: ^bb7
    %25 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc139)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    cir.br ^bb10 loc(#loc130)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc130)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc126)
  ^bb12:  // 2 preds: ^bb5, ^bb11
    cir.br ^bb13 loc(#loc126)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc111)
  } loc(#loc232)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc244)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc245)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc147)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.br ^bb1 loc(#loc247)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc220)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc151)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc248)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc155)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb4 loc(#loc153)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc157)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc158)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb4 loc(#loc150)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc150)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc250)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc193)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %12 ^bb7, ^bb10 loc(#loc251)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc252)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc166)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc168)
    cir.br ^bb9 loc(#loc165)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc161)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc161)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc142)
  } loc(#loc243)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc254)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc255)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc175)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc193)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc179)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc258)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc181)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc182)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.br ^bb3 loc(#loc178)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc178)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc260)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc193)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc186)
    cir.brcond %10 ^bb6, ^bb9 loc(#loc261)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc262)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc190)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc192)
    cir.br ^bb8 loc(#loc189)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc185)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc185)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc170)
  } loc(#loc253)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_sub_05.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":23:1)
#loc2 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":23:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":36:23)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":28:1)
#loc11 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":46:1)
#loc12 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":42:13)
#loc13 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":42:33)
#loc14 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":30:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":30:9)
#loc16 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":32:12)
#loc17 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":32:5)
#loc18 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":33:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":37:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":33:8)
#loc21 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":34:5)
#loc22 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":36:9)
#loc23 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":36:16)
#loc24 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":38:5)
#loc25 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":45:5)
#loc26 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":38:8)
#loc27 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":39:5)
#loc28 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":40:9)
#loc29 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":44:9)
#loc30 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":42:26)
#loc31 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":43:26)
#loc32 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":43:13)
#loc33 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":156:1)
#loc34 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":162:1)
#loc35 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":158:5)
#loc36 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":158:14)
#loc37 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":159:5)
#loc38 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":159:14)
#loc39 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":160:5)
#loc40 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":160:14)
#loc41 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":161:5)
#loc42 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":161:14)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":178:15)
#loc50 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":180:15)
#loc51 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":183:15)
#loc52 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":185:15)
#loc53 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":173:1)
#loc54 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":188:1)
#loc59 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":174:1)
#loc60 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":176:27)
#loc61 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":176:22)
#loc62 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":176:5)
#loc63 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":178:5)
#loc64 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":179:5)
#loc65 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":179:54)
#loc66 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":180:5)
#loc67 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":183:5)
#loc68 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":184:5)
#loc69 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":184:53)
#loc70 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":185:5)
#loc71 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":187:12)
#loc72 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":187:5)
#loc73 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":24:1)
#loc74 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":24:26)
#loc75 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":66:19)
#loc76 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":78:23)
#loc77 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":53:1)
#loc78 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":81:1)
#loc79 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":73:13)
#loc80 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":73:33)
#loc81 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":55:5)
#loc82 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":55:9)
#loc83 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":57:12)
#loc84 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":57:5)
#loc85 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":58:5)
#loc86 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":62:5)
#loc87 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":58:8)
#loc88 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":59:5)
#loc89 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":61:9)
#loc90 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":61:16)
#loc91 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":61:23)
#loc92 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":63:5)
#loc93 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":80:5)
#loc94 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":63:8)
#loc95 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":64:5)
#loc96 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":67:5)
#loc97 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":69:5)
#loc98 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":66:9)
#loc99 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":71:9)
#loc100 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":79:9)
#loc101 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":71:13)
#loc102 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":71:20)
#loc103 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":72:9)
#loc104 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":75:9)
#loc105 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":77:9)
#loc106 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":73:26)
#loc107 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":74:26)
#loc108 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":74:13)
#loc109 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":78:13)
#loc110 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":84:1)
#loc111 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":107:1)
#loc112 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":99:13)
#loc113 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":99:33)
#loc114 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":86:5)
#loc115 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":86:9)
#loc116 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":88:12)
#loc117 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":88:5)
#loc118 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":89:5)
#loc119 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":93:5)
#loc120 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":89:8)
#loc121 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":90:5)
#loc122 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":92:9)
#loc123 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":92:16)
#loc124 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":92:23)
#loc125 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":94:5)
#loc126 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":106:5)
#loc127 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":94:8)
#loc128 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":95:5)
#loc129 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":97:9)
#loc130 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":105:9)
#loc131 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":97:13)
#loc132 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":97:20)
#loc133 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":98:9)
#loc134 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":101:9)
#loc135 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":103:9)
#loc136 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":99:26)
#loc137 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":100:26)
#loc138 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":100:13)
#loc139 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":104:23)
#loc140 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":104:13)
#loc141 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":110:1)
#loc142 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":133:1)
#loc143 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":129:13)
#loc144 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":129:33)
#loc145 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":112:5)
#loc146 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":112:9)
#loc147 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":114:12)
#loc148 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":114:5)
#loc149 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":115:5)
#loc150 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":124:5)
#loc151 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":115:8)
#loc152 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":116:5)
#loc153 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":119:5)
#loc154 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":121:5)
#loc155 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":118:19)
#loc156 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":118:9)
#loc157 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":123:17)
#loc158 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":123:16)
#loc159 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":123:9)
#loc160 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":125:5)
#loc161 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":132:5)
#loc162 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":125:8)
#loc163 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":126:5)
#loc164 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":127:9)
#loc165 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":131:9)
#loc166 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":129:26)
#loc167 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":130:26)
#loc168 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":130:13)
#loc169 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":136:1)
#loc170 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":154:1)
#loc171 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":150:13)
#loc172 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":150:33)
#loc173 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":138:5)
#loc174 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":138:9)
#loc175 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":140:12)
#loc176 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":140:5)
#loc177 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":141:5)
#loc178 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":145:5)
#loc179 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":141:8)
#loc180 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":142:5)
#loc181 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":144:17)
#loc182 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":144:16)
#loc183 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":144:9)
#loc184 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":146:5)
#loc185 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":153:5)
#loc186 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":146:8)
#loc187 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":147:5)
#loc188 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":148:9)
#loc189 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":152:9)
#loc190 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":150:26)
#loc191 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":151:26)
#loc192 = loc("CWE191_Integer_Underflow__int_fscanf_sub_05.c":151:13)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc5, #loc6])
#loc196 = loc(fused[#loc8, #loc9])
#loc197 = loc(fused[#loc10, #loc11])
#loc198 = loc(fused[#loc12, #loc13])
#loc199 = loc(fused[#loc14, #loc15])
#loc200 = loc(fused[#loc17, #loc16])
#loc201 = loc(fused[#loc18, #loc19])
#loc202 = loc(fused[#loc21, #loc19])
#loc203 = loc(fused[#loc24, #loc25])
#loc204 = loc(fused[#loc27, #loc25])
#loc205 = loc(fused[#loc28, #loc29])
#loc206 = loc(fused[#loc33, #loc34])
#loc207 = loc(fused[#loc35, #loc36])
#loc208 = loc(fused[#loc37, #loc38])
#loc209 = loc(fused[#loc39, #loc40])
#loc210 = loc(fused[#loc41, #loc42])
#loc211 = loc(fused[#loc43, #loc44])
#loc212 = loc(fused[#loc45, #loc46])
#loc213 = loc(fused[#loc47, #loc48])
#loc214 = loc(fused[#loc53, #loc54])
#loc217 = loc(fused[#loc64, #loc65])
#loc218 = loc(fused[#loc68, #loc69])
#loc219 = loc(fused[#loc72, #loc71])
#loc220 = loc(fused[#loc73, #loc74])
#loc221 = loc(fused[#loc77, #loc78])
#loc222 = loc(fused[#loc79, #loc80])
#loc223 = loc(fused[#loc81, #loc82])
#loc224 = loc(fused[#loc84, #loc83])
#loc225 = loc(fused[#loc85, #loc86])
#loc226 = loc(fused[#loc88, #loc86])
#loc227 = loc(fused[#loc92, #loc93])
#loc228 = loc(fused[#loc95, #loc96, #loc97, #loc93])
#loc229 = loc(fused[#loc99, #loc100])
#loc230 = loc(fused[#loc101, #loc102])
#loc231 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc232 = loc(fused[#loc110, #loc111])
#loc233 = loc(fused[#loc112, #loc113])
#loc234 = loc(fused[#loc114, #loc115])
#loc235 = loc(fused[#loc117, #loc116])
#loc236 = loc(fused[#loc118, #loc119])
#loc237 = loc(fused[#loc121, #loc119])
#loc238 = loc(fused[#loc125, #loc126])
#loc239 = loc(fused[#loc128, #loc126])
#loc240 = loc(fused[#loc129, #loc130])
#loc241 = loc(fused[#loc131, #loc132])
#loc242 = loc(fused[#loc133, #loc134, #loc135, #loc130])
#loc243 = loc(fused[#loc141, #loc142])
#loc244 = loc(fused[#loc143, #loc144])
#loc245 = loc(fused[#loc145, #loc146])
#loc246 = loc(fused[#loc148, #loc147])
#loc247 = loc(fused[#loc149, #loc150])
#loc248 = loc(fused[#loc152, #loc153, #loc154, #loc150])
#loc249 = loc(fused[#loc159, #loc157])
#loc250 = loc(fused[#loc160, #loc161])
#loc251 = loc(fused[#loc163, #loc161])
#loc252 = loc(fused[#loc164, #loc165])
#loc253 = loc(fused[#loc169, #loc170])
#loc254 = loc(fused[#loc171, #loc172])
#loc255 = loc(fused[#loc173, #loc174])
#loc256 = loc(fused[#loc176, #loc175])
#loc257 = loc(fused[#loc177, #loc178])
#loc258 = loc(fused[#loc180, #loc178])
#loc259 = loc(fused[#loc183, #loc181])
#loc260 = loc(fused[#loc184, #loc185])
#loc261 = loc(fused[#loc187, #loc185])
#loc262 = loc(fused[#loc188, #loc189])
