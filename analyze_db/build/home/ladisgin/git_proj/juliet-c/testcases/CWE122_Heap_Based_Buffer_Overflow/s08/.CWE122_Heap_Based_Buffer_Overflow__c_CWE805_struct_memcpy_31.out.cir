!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":98:10)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":98:14)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":98:20)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":98:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc208 = loc(fused[#loc90, #loc91])
#loc209 = loc(fused[#loc92, #loc93])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc172)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc173)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc174)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc178)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc179)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    cir.store %5, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc181)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc24)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc24)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc182)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc183)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc187)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc188)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc36)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
    cir.br ^bb3 loc(#loc30)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc30)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc189)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.store %20, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc176)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %21, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc177)
    cir.br ^bb6 loc(#loc190)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc191)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc192)
  ^bb8:  // pred: ^bb7
    %22 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc45)
    cir.store %23, %3 : !u64i, !cir.ptr<!u64i> loc(#loc193)
    cir.br ^bb9 loc(#loc192)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %24 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc48)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc194)
    cir.brcond %27 ^bb10, ^bb14 loc(#loc49)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc195)
  ^bb11:  // pred: ^bb10
    %28 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %30 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %32 = cir.get_member %31[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %34 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %35 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!ty__twoIntsStruct>, %34 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %37 = cir.get_member %36[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc58)
    cir.store %33, %37 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    cir.br ^bb12 loc(#loc44)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc44)
  ^bb13:  // pred: ^bb12
    %38 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc60)
    cir.store %39, %3 : !u64i, !cir.ptr<!u64i> loc(#loc198)
    cir.br ^bb9 loc(#loc192)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc44)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc42)
  ^bb16:  // pred: ^bb15
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc61)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc62)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc63)
    %46 = cir.const #cir.int<8> : !u64i loc(#loc199)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc200)
    cir.libc.memcpy %47 bytes from %43 to %41 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc201)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!ty__twoIntsStruct>, %49 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    cir.call @printStructLine(%50) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc71)
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc72)
    cir.call @free(%52) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
    cir.br ^bb17 loc(#loc40)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc38)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc10)
  } loc(#loc175)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc75)
  } loc(#loc202)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc204)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc205)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc87)
  cir.func @main(%arg0: !s32i loc(fused[#loc90, #loc91]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc92, #loc93])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc94)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc96)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc96)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc97)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc84)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31_good() : () -> () loc(#loc99)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc86)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31_bad() : () -> () loc(#loc103)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc87)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc106)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.return %17 : !s32i loc(#loc212)
  } loc(#loc207)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc215)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc216)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc217)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
    cir.store %5, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc219)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc122)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc123)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc123)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc220)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc221)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc222)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc223)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc225)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc226)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc133)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc135)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc133)
    cir.br ^bb3 loc(#loc129)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc129)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc227)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    cir.store %20, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc214)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
    cir.store %21, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc215)
    cir.br ^bb6 loc(#loc228)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc229)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc230)
  ^bb8:  // pred: ^bb7
    %22 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc144)
    cir.store %23, %3 : !u64i, !cir.ptr<!u64i> loc(#loc231)
    cir.br ^bb9 loc(#loc230)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %24 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc146)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc147)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc147)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc232)
    cir.brcond %27 ^bb10, ^bb14 loc(#loc148)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc233)
  ^bb11:  // pred: ^bb10
    %28 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc151)
    %30 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc152)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc152)
    %32 = cir.get_member %31[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %34 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc154)
    %35 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!ty__twoIntsStruct>, %34 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
    %37 = cir.get_member %36[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc58)
    cir.store %33, %37 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.br ^bb12 loc(#loc143)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc143)
  ^bb13:  // pred: ^bb12
    %38 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc157)
    cir.store %39, %3 : !u64i, !cir.ptr<!u64i> loc(#loc236)
    cir.br ^bb9 loc(#loc230)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc143)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc141)
  ^bb16:  // pred: ^bb15
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc158)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc159)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc159)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc160)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc160)
    %46 = cir.const #cir.int<8> : !u64i loc(#loc237)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc238)
    cir.libc.memcpy %47 bytes from %43 to %41 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc239)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc165)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc166)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!ty__twoIntsStruct>, %49 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc167)
    cir.call @printStructLine(%50) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc168)
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc169)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc169)
    cir.call @free(%52) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc170)
    cir.br ^bb17 loc(#loc139)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc137)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc109)
  } loc(#loc213)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":21:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":48:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":29:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":29:36)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":30:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":30:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":32:13)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":32:37)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":34:17)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":34:24)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":23:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":23:21)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":24:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":24:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":26:29)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":26:36)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":26:39)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":26:59)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":26:60)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":26:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":27:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":27:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":27:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":27:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":27:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":27:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":27:30)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":27:29)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":28:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":47:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":31:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":46:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":33:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":41:13)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":36:17)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":40:17)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":36:26)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":36:22)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":36:29)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":36:33)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":36:31)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":37:17)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":38:40)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":38:28)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":38:21)
#loc54 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":39:40)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":39:28)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":39:21)
#loc58 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":36:39)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":36:38)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":43:20)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":43:26)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":43:34)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":43:38)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":43:58)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":43:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":43:59)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":44:30)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":44:35)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":44:36)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":44:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":45:18)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":45:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":84:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":87:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":86:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":86:13)
#loc78 = loc("/usr/include/stdlib.h":575:1)
#loc79 = loc("/usr/include/stdlib.h":575:41)
#loc80 = loc("/usr/include/time.h":76:1)
#loc81 = loc("/usr/include/time.h":76:38)
#loc82 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc83 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":103:15)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":105:15)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":108:15)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":110:15)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":98:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":113:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":99:1)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":101:27)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":101:22)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":101:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":103:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":104:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":104:71)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":105:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":108:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":109:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":109:70)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":110:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":112:12)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":112:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":55:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":82:1)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":63:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":63:36)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":64:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":64:32)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":66:13)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":66:37)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":68:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":68:24)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":57:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":57:21)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":58:12)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":58:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":60:29)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":60:36)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":60:40)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":60:60)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":60:61)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":60:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":61:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":61:33)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":61:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":61:17)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":61:23)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":61:24)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":61:30)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":61:29)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":62:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":81:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":65:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":80:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":67:13)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":75:13)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":70:17)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":74:17)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":70:26)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":70:22)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":70:29)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":70:33)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":70:31)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":71:17)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":72:40)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":72:28)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":72:21)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":73:40)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":73:28)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":73:21)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":70:39)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":70:38)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":77:20)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":77:26)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":77:34)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":77:38)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":77:58)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":77:13)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":77:59)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":78:30)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":78:35)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":78:36)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":78:13)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":79:18)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_31.c":79:13)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc11, #loc12])
#loc177 = loc(fused[#loc13, #loc14])
#loc178 = loc(fused[#loc15, #loc16])
#loc179 = loc(fused[#loc17, #loc18])
#loc180 = loc(fused[#loc19, #loc20])
#loc181 = loc(fused[#loc22, #loc21])
#loc182 = loc(fused[#loc25, #loc26])
#loc183 = loc(fused[#loc24, #loc26])
#loc184 = loc(fused[#loc23, #loc27])
#loc185 = loc(fused[#loc28, #loc27])
#loc186 = loc(fused[#loc29, #loc30])
#loc187 = loc(fused[#loc31, #loc32])
#loc188 = loc(fused[#loc33, #loc30])
#loc189 = loc(fused[#loc37, #loc38])
#loc190 = loc(fused[#loc39, #loc40])
#loc191 = loc(fused[#loc41, #loc42])
#loc192 = loc(fused[#loc43, #loc44])
#loc193 = loc(fused[#loc46, #loc45])
#loc194 = loc(fused[#loc47, #loc48])
#loc195 = loc(fused[#loc50, #loc44])
#loc196 = loc(fused[#loc53, #loc51])
#loc197 = loc(fused[#loc57, #loc55])
#loc198 = loc(fused[#loc60, #loc59])
#loc199 = loc(fused[#loc64, #loc65])
#loc200 = loc(fused[#loc63, #loc65])
#loc201 = loc(fused[#loc66, #loc67])
#loc202 = loc(fused[#loc74, #loc75])
#loc203 = loc(fused[#loc76, #loc77])
#loc204 = loc(fused[#loc78, #loc79])
#loc205 = loc(fused[#loc80, #loc81])
#loc206 = loc(fused[#loc82, #loc83])
#loc207 = loc(fused[#loc88, #loc89])
#loc210 = loc(fused[#loc99, #loc100])
#loc211 = loc(fused[#loc103, #loc104])
#loc212 = loc(fused[#loc107, #loc106])
#loc213 = loc(fused[#loc108, #loc109])
#loc214 = loc(fused[#loc110, #loc111])
#loc215 = loc(fused[#loc112, #loc113])
#loc216 = loc(fused[#loc114, #loc115])
#loc217 = loc(fused[#loc116, #loc117])
#loc218 = loc(fused[#loc118, #loc119])
#loc219 = loc(fused[#loc121, #loc120])
#loc220 = loc(fused[#loc124, #loc125])
#loc221 = loc(fused[#loc123, #loc125])
#loc222 = loc(fused[#loc122, #loc126])
#loc223 = loc(fused[#loc127, #loc126])
#loc224 = loc(fused[#loc128, #loc129])
#loc225 = loc(fused[#loc130, #loc131])
#loc226 = loc(fused[#loc132, #loc129])
#loc227 = loc(fused[#loc136, #loc137])
#loc228 = loc(fused[#loc138, #loc139])
#loc229 = loc(fused[#loc140, #loc141])
#loc230 = loc(fused[#loc142, #loc143])
#loc231 = loc(fused[#loc145, #loc144])
#loc232 = loc(fused[#loc146, #loc147])
#loc233 = loc(fused[#loc149, #loc143])
#loc234 = loc(fused[#loc152, #loc150])
#loc235 = loc(fused[#loc155, #loc153])
#loc236 = loc(fused[#loc157, #loc156])
#loc237 = loc(fused[#loc161, #loc162])
#loc238 = loc(fused[#loc160, #loc162])
#loc239 = loc(fused[#loc163, #loc164])
