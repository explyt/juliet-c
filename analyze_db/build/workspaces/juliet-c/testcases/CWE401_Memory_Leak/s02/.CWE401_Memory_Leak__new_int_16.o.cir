!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc90)
  cir.func private @printIntLine(!s32i) loc(#loc91)
  cir.func @_ZN30CWE401_Memory_Leak__new_int_163badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc94)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
        cir.condition(%3) loc(#loc13)
      } do {
        cir.scope {
          %2 = cir.const #cir.int<4> : !u64i loc(#loc97)
          %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc17)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc97)
          cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc98)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc19)
          %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
          cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc99)
          %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
          %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc23)
          cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc24)
          cir.break loc(#loc25)
        } loc(#loc96)
        cir.yield loc(#loc12)
      } loc(#loc95)
    } loc(#loc95)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc28)
        cir.condition(%3) loc(#loc28)
      } do {
        cir.scope {
          cir.break loc(#loc30)
        } loc(#loc101)
        cir.yield loc(#loc27)
      } loc(#loc100)
    } loc(#loc100)
    cir.return loc(#loc6)
  } loc(#loc92)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc102)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_16L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc105)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc41)
        cir.condition(%3) loc(#loc41)
      } do {
        cir.scope {
          %2 = cir.const #cir.int<4> : !u64i loc(#loc108)
          %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc45)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc108)
          cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc109)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc47)
          %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
          cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc110)
          %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
          %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc52)
          cir.break loc(#loc53)
        } loc(#loc107)
        cir.yield loc(#loc40)
      } loc(#loc106)
    } loc(#loc106)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc56)
        cir.condition(%3) loc(#loc56)
      } do {
        cir.scope {
          %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
          %3 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc58)
          cir.call @_ZdlPv(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc45)
          cir.break loc(#loc59)
        } loc(#loc112)
        cir.yield loc(#loc55)
      } loc(#loc111)
    } loc(#loc111)
    cir.return loc(#loc34)
  } loc(#loc103)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_16L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc64)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc115)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc68)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc68)
        cir.condition(%3) loc(#loc68)
      } do {
        cir.scope {
          %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc118)
          cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
          %3 = cir.const #cir.int<5> : !s32i loc(#loc74)
          %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
          cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc120)
          %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc77)
          %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc78)
          cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc79)
          cir.break loc(#loc80)
        } loc(#loc117)
        cir.yield loc(#loc67)
      } loc(#loc116)
    } loc(#loc116)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc83)
        cir.condition(%3) loc(#loc83)
      } do {
        cir.scope {
          cir.break loc(#loc85)
        } loc(#loc122)
        cir.yield loc(#loc82)
      } loc(#loc121)
    } loc(#loc121)
    cir.return loc(#loc61)
  } loc(#loc113)
  cir.func @_ZN30CWE401_Memory_Leak__new_int_164goodEv() extra(#fn_attr) {
    cir.call @_ZN30CWE401_Memory_Leak__new_int_16L7goodB2GEv() : () -> () loc(#loc88)
    cir.call @_ZN30CWE401_Memory_Leak__new_int_16L7goodG2BEv() : () -> () loc(#loc89)
    cir.return loc(#loc87)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE401_Memory_Leak__new_int_16.cpp":28:1)
#loc6 = loc("CWE401_Memory_Leak__new_int_16.cpp":47:1)
#loc7 = loc("CWE401_Memory_Leak__new_int_16.cpp":30:5)
#loc8 = loc("CWE401_Memory_Leak__new_int_16.cpp":30:11)
#loc9 = loc("CWE401_Memory_Leak__new_int_16.cpp":31:12)
#loc10 = loc("CWE401_Memory_Leak__new_int_16.cpp":31:5)
#loc11 = loc("CWE401_Memory_Leak__new_int_16.cpp":32:5)
#loc12 = loc("CWE401_Memory_Leak__new_int_16.cpp":40:5)
#loc13 = loc("CWE401_Memory_Leak__new_int_16.cpp":32:11)
#loc14 = loc("CWE401_Memory_Leak__new_int_16.cpp":33:5)
#loc15 = loc("CWE401_Memory_Leak__new_int_16.cpp":35:16)
#loc16 = loc("CWE401_Memory_Leak__new_int_16.cpp":35:20)
#loc17 = loc("CWE401_Memory_Leak__new_int_16.cpp":28:6)
#loc18 = loc("CWE401_Memory_Leak__new_int_16.cpp":35:9)
#loc19 = loc("CWE401_Memory_Leak__new_int_16.cpp":37:17)
#loc20 = loc("CWE401_Memory_Leak__new_int_16.cpp":37:10)
#loc21 = loc("CWE401_Memory_Leak__new_int_16.cpp":37:9)
#loc22 = loc("CWE401_Memory_Leak__new_int_16.cpp":38:23)
#loc23 = loc("CWE401_Memory_Leak__new_int_16.cpp":38:22)
#loc24 = loc("CWE401_Memory_Leak__new_int_16.cpp":38:9)
#loc25 = loc("CWE401_Memory_Leak__new_int_16.cpp":39:9)
#loc26 = loc("CWE401_Memory_Leak__new_int_16.cpp":41:5)
#loc27 = loc("CWE401_Memory_Leak__new_int_16.cpp":46:5)
#loc28 = loc("CWE401_Memory_Leak__new_int_16.cpp":41:11)
#loc29 = loc("CWE401_Memory_Leak__new_int_16.cpp":42:5)
#loc30 = loc("CWE401_Memory_Leak__new_int_16.cpp":45:9)
#loc31 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc32 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc33 = loc("CWE401_Memory_Leak__new_int_16.cpp":54:1)
#loc34 = loc("CWE401_Memory_Leak__new_int_16.cpp":73:1)
#loc35 = loc("CWE401_Memory_Leak__new_int_16.cpp":56:5)
#loc36 = loc("CWE401_Memory_Leak__new_int_16.cpp":56:11)
#loc37 = loc("CWE401_Memory_Leak__new_int_16.cpp":57:12)
#loc38 = loc("CWE401_Memory_Leak__new_int_16.cpp":57:5)
#loc39 = loc("CWE401_Memory_Leak__new_int_16.cpp":58:5)
#loc40 = loc("CWE401_Memory_Leak__new_int_16.cpp":66:5)
#loc41 = loc("CWE401_Memory_Leak__new_int_16.cpp":58:11)
#loc42 = loc("CWE401_Memory_Leak__new_int_16.cpp":59:5)
#loc43 = loc("CWE401_Memory_Leak__new_int_16.cpp":61:16)
#loc44 = loc("CWE401_Memory_Leak__new_int_16.cpp":61:20)
#loc45 = loc("CWE401_Memory_Leak__new_int_16.cpp":54:13)
#loc46 = loc("CWE401_Memory_Leak__new_int_16.cpp":61:9)
#loc47 = loc("CWE401_Memory_Leak__new_int_16.cpp":63:17)
#loc48 = loc("CWE401_Memory_Leak__new_int_16.cpp":63:10)
#loc49 = loc("CWE401_Memory_Leak__new_int_16.cpp":63:9)
#loc50 = loc("CWE401_Memory_Leak__new_int_16.cpp":64:23)
#loc51 = loc("CWE401_Memory_Leak__new_int_16.cpp":64:22)
#loc52 = loc("CWE401_Memory_Leak__new_int_16.cpp":64:9)
#loc53 = loc("CWE401_Memory_Leak__new_int_16.cpp":65:9)
#loc54 = loc("CWE401_Memory_Leak__new_int_16.cpp":67:5)
#loc55 = loc("CWE401_Memory_Leak__new_int_16.cpp":72:5)
#loc56 = loc("CWE401_Memory_Leak__new_int_16.cpp":67:11)
#loc57 = loc("CWE401_Memory_Leak__new_int_16.cpp":68:5)
#loc58 = loc("CWE401_Memory_Leak__new_int_16.cpp":70:16)
#loc59 = loc("CWE401_Memory_Leak__new_int_16.cpp":71:9)
#loc60 = loc("CWE401_Memory_Leak__new_int_16.cpp":76:1)
#loc61 = loc("CWE401_Memory_Leak__new_int_16.cpp":96:1)
#loc62 = loc("CWE401_Memory_Leak__new_int_16.cpp":78:5)
#loc63 = loc("CWE401_Memory_Leak__new_int_16.cpp":78:11)
#loc64 = loc("CWE401_Memory_Leak__new_int_16.cpp":79:12)
#loc65 = loc("CWE401_Memory_Leak__new_int_16.cpp":79:5)
#loc66 = loc("CWE401_Memory_Leak__new_int_16.cpp":80:5)
#loc67 = loc("CWE401_Memory_Leak__new_int_16.cpp":89:5)
#loc68 = loc("CWE401_Memory_Leak__new_int_16.cpp":80:11)
#loc69 = loc("CWE401_Memory_Leak__new_int_16.cpp":81:5)
#loc70 = loc("CWE401_Memory_Leak__new_int_16.cpp":83:9)
#loc71 = loc("CWE401_Memory_Leak__new_int_16.cpp":83:13)
#loc72 = loc("CWE401_Memory_Leak__new_int_16.cpp":84:9)
#loc73 = loc("CWE401_Memory_Leak__new_int_16.cpp":84:17)
#loc74 = loc("CWE401_Memory_Leak__new_int_16.cpp":86:17)
#loc75 = loc("CWE401_Memory_Leak__new_int_16.cpp":86:10)
#loc76 = loc("CWE401_Memory_Leak__new_int_16.cpp":86:9)
#loc77 = loc("CWE401_Memory_Leak__new_int_16.cpp":87:23)
#loc78 = loc("CWE401_Memory_Leak__new_int_16.cpp":87:22)
#loc79 = loc("CWE401_Memory_Leak__new_int_16.cpp":87:9)
#loc80 = loc("CWE401_Memory_Leak__new_int_16.cpp":88:9)
#loc81 = loc("CWE401_Memory_Leak__new_int_16.cpp":90:5)
#loc82 = loc("CWE401_Memory_Leak__new_int_16.cpp":95:5)
#loc83 = loc("CWE401_Memory_Leak__new_int_16.cpp":90:11)
#loc84 = loc("CWE401_Memory_Leak__new_int_16.cpp":91:5)
#loc85 = loc("CWE401_Memory_Leak__new_int_16.cpp":94:9)
#loc86 = loc("CWE401_Memory_Leak__new_int_16.cpp":98:1)
#loc87 = loc("CWE401_Memory_Leak__new_int_16.cpp":102:1)
#loc88 = loc("CWE401_Memory_Leak__new_int_16.cpp":100:5)
#loc89 = loc("CWE401_Memory_Leak__new_int_16.cpp":101:5)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc7, #loc8])
#loc94 = loc(fused[#loc10, #loc9])
#loc95 = loc(fused[#loc11, #loc12])
#loc96 = loc(fused[#loc14, #loc12])
#loc97 = loc(fused[#loc15, #loc16])
#loc98 = loc(fused[#loc18, #loc16])
#loc99 = loc(fused[#loc21, #loc19])
#loc100 = loc(fused[#loc26, #loc27])
#loc101 = loc(fused[#loc29, #loc27])
#loc102 = loc(fused[#loc31, #loc32])
#loc103 = loc(fused[#loc33, #loc34])
#loc104 = loc(fused[#loc35, #loc36])
#loc105 = loc(fused[#loc38, #loc37])
#loc106 = loc(fused[#loc39, #loc40])
#loc107 = loc(fused[#loc42, #loc40])
#loc108 = loc(fused[#loc43, #loc44])
#loc109 = loc(fused[#loc46, #loc44])
#loc110 = loc(fused[#loc49, #loc47])
#loc111 = loc(fused[#loc54, #loc55])
#loc112 = loc(fused[#loc57, #loc55])
#loc113 = loc(fused[#loc60, #loc61])
#loc114 = loc(fused[#loc62, #loc63])
#loc115 = loc(fused[#loc65, #loc64])
#loc116 = loc(fused[#loc66, #loc67])
#loc117 = loc(fused[#loc69, #loc67])
#loc118 = loc(fused[#loc70, #loc71])
#loc119 = loc(fused[#loc72, #loc73])
#loc120 = loc(fused[#loc76, #loc74])
#loc121 = loc(fused[#loc81, #loc82])
#loc122 = loc(fused[#loc84, #loc82])
#loc123 = loc(fused[#loc86, #loc87])
