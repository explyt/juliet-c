!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc133)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_667badSinkEPPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc134)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_663badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc137)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc138)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc139)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc140)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc143)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc25)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc27)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc145)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.br ^bb5 loc(#loc147)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc34)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc148)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc149)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc38)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
    cir.br ^bb7 loc(#loc32)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc32)
  ^bb8:  // pred: ^bb7
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!cir.ptr<!s8i>>, %25 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    cir.store %24, %27 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc44)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_667badSinkEPPc(%28) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc45)
    cir.return loc(#loc8)
  } loc(#loc135)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_6611goodG2BSinkEPPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc152)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_66L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc155)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc156)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc157)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc58)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc158)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc64)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc161)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc162)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc68)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
    cir.br ^bb3 loc(#loc62)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc62)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc163)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.br ^bb5 loc(#loc165)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc75)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc166)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc167)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc77)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc79)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc73)
  ^bb8:  // pred: ^bb7
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc83)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!cir.ptr<!s8i>>, %25 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    cir.store %24, %27 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_6611goodG2BSinkEPPc(%28) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc86)
    cir.return loc(#loc49)
  } loc(#loc153)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_6611goodB2GSinkEPPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc170)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_66L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc173)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc174)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc175)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc99)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc176)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc177)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc105)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc179)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc109)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb3 loc(#loc103)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc181)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.br ^bb5 loc(#loc183)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc116)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc184)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc185)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc118)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc120)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc118)
    cir.br ^bb7 loc(#loc114)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc114)
  ^bb8:  // pred: ^bb7
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc124)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!cir.ptr<!s8i>>, %25 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.store %24, %27 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_6611goodB2GSinkEPPc(%28) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc127)
    cir.return loc(#loc90)
  } loc(#loc171)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_664goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_66L7goodG2BEv() : () -> () loc(#loc130)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_66L7goodB2GEv() : () -> () loc(#loc131)
    cir.return loc(#loc129)
  } loc(#loc188)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":26:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":28:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":41:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":30:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":30:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":31:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":31:23)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":32:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":32:62)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":34:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":34:64)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":32:36)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":32:43)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":32:61)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":33:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":33:42)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":33:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":33:26)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":33:32)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":33:33)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":33:39)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":33:38)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":34:44)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":34:63)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":34:37)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":35:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":35:43)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":35:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":35:27)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":35:33)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":35:34)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":35:40)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":35:39)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":37:12)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":37:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":39:20)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":39:15)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":39:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":40:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":40:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":48:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":48:36)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":50:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":62:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":52:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":52:12)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":53:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":53:23)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":54:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":54:62)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":56:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":56:64)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":54:36)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":54:43)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":54:61)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":55:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":55:42)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":55:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":55:26)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":55:32)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":55:33)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":55:39)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":55:38)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":56:44)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":56:63)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":56:37)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":57:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":57:43)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":57:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":57:27)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":57:33)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":57:34)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":57:40)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":57:39)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":59:12)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":59:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":60:20)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":60:15)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":60:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":61:17)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":61:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":65:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":65:36)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":67:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":79:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":69:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":69:12)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":70:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":70:23)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":71:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":71:62)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":73:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":73:64)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":71:36)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":71:43)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":71:61)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":72:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":72:42)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":72:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":72:26)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":72:32)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":72:33)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":72:39)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":72:38)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":73:44)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":73:63)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":73:37)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":74:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":74:43)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":74:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":74:27)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":74:33)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":74:34)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":74:40)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":74:39)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":76:12)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":76:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":77:20)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":77:15)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":77:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":78:17)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":78:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":81:1)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":85:1)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":83:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_66a.cpp":84:5)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc9, #loc10])
#loc137 = loc(fused[#loc11, #loc12])
#loc138 = loc(fused[#loc13, #loc14])
#loc139 = loc(fused[#loc15, #loc16])
#loc140 = loc(fused[#loc18, #loc19])
#loc141 = loc(fused[#loc17, #loc14])
#loc142 = loc(fused[#loc20, #loc21])
#loc143 = loc(fused[#loc22, #loc23])
#loc144 = loc(fused[#loc24, #loc21])
#loc145 = loc(fused[#loc28, #loc29])
#loc146 = loc(fused[#loc30, #loc16])
#loc147 = loc(fused[#loc31, #loc32])
#loc148 = loc(fused[#loc33, #loc34])
#loc149 = loc(fused[#loc35, #loc32])
#loc150 = loc(fused[#loc40, #loc39])
#loc151 = loc(fused[#loc43, #loc41])
#loc152 = loc(fused[#loc46, #loc47])
#loc153 = loc(fused[#loc48, #loc49])
#loc154 = loc(fused[#loc50, #loc51])
#loc155 = loc(fused[#loc52, #loc53])
#loc156 = loc(fused[#loc54, #loc55])
#loc157 = loc(fused[#loc56, #loc57])
#loc158 = loc(fused[#loc59, #loc60])
#loc159 = loc(fused[#loc58, #loc55])
#loc160 = loc(fused[#loc61, #loc62])
#loc161 = loc(fused[#loc63, #loc64])
#loc162 = loc(fused[#loc65, #loc62])
#loc163 = loc(fused[#loc69, #loc70])
#loc164 = loc(fused[#loc71, #loc57])
#loc165 = loc(fused[#loc72, #loc73])
#loc166 = loc(fused[#loc74, #loc75])
#loc167 = loc(fused[#loc76, #loc73])
#loc168 = loc(fused[#loc81, #loc80])
#loc169 = loc(fused[#loc84, #loc82])
#loc170 = loc(fused[#loc87, #loc88])
#loc171 = loc(fused[#loc89, #loc90])
#loc172 = loc(fused[#loc91, #loc92])
#loc173 = loc(fused[#loc93, #loc94])
#loc174 = loc(fused[#loc95, #loc96])
#loc175 = loc(fused[#loc97, #loc98])
#loc176 = loc(fused[#loc100, #loc101])
#loc177 = loc(fused[#loc99, #loc96])
#loc178 = loc(fused[#loc102, #loc103])
#loc179 = loc(fused[#loc104, #loc105])
#loc180 = loc(fused[#loc106, #loc103])
#loc181 = loc(fused[#loc110, #loc111])
#loc182 = loc(fused[#loc112, #loc98])
#loc183 = loc(fused[#loc113, #loc114])
#loc184 = loc(fused[#loc115, #loc116])
#loc185 = loc(fused[#loc117, #loc114])
#loc186 = loc(fused[#loc122, #loc121])
#loc187 = loc(fused[#loc125, #loc123])
#loc188 = loc(fused[#loc128, #loc129])
