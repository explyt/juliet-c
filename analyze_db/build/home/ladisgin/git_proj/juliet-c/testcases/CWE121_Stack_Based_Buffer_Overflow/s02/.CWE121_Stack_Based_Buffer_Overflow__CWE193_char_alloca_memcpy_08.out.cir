!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":132:10)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":132:14)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":132:20)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":132:32)
#loc181 = loc(fused[#loc60, #loc61])
#loc182 = loc(fused[#loc62, #loc63])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc156)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc157)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc158)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc163)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc16)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc16)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc164)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc18)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc18)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc18)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc18)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc18)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %19, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc166)
    %21 = cir.call %20() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %22 ^bb2, ^bb3 loc(#loc167)
  ^bb2:  // pred: ^bb1
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc26)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc169)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc170)
  ^bb5:  // pred: ^bb4
    %29 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc158)
    cir.copy %29 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc158)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc33)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc34)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc34)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc36)
    %39 = cir.binop(add, %36, %38) : !u64i loc(#loc171)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc172)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc173)
    cir.libc.memcpy %41 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc174)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc12)
  } loc(#loc161)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc175)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc178)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc57)
  cir.func @main(%arg0: !s32i loc(fused[#loc60, #loc61]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc62, #loc63])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc181)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc182)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc64)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc65)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc66)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc66)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc67)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc54)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08_good() : () -> () loc(#loc69)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc56)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08_bad() : () -> () loc(#loc73)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.return %17 : !s32i loc(#loc185)
  } loc(#loc180)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc79)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc80)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    cir.return %2 : !s32i loc(#loc187)
  } loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc82)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc190)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc88)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc88)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc88)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc88)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc88)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc191)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc88)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc88)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc90)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc90)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc90)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc90)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc90)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc90)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc90)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %19, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc193)
    %21 = cir.call %20() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc93)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %22 ^bb2, ^bb3 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %23 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc82)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb4 loc(#loc96)
  ^bb3:  // pred: ^bb1
    %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    cir.store %25, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc101)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %27, %30 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc92)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc197)
  ^bb6:  // pred: ^bb5
    %31 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc157)
    cir.copy %31 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc157)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc108)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %36 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc109)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc110)
    %38 = cir.call @strlen(%37) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc109)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc111)
    %41 = cir.binop(add, %38, %40) : !u64i loc(#loc198)
    %42 = cir.const #cir.int<1> : !u64i loc(#loc199)
    %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc200)
    cir.libc.memcpy %43 bytes from %35 to %33 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc201)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc84)
  } loc(#loc188)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc121)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.return %2 : !s32i loc(#loc203)
  } loc(#loc202)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc206)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc128)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc128)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc128)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc128)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc128)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc207)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc128)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc130)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc130)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc130)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc130)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc130)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc130)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc130)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
    cir.store %19, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.br ^bb1 loc(#loc208)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc209)
    %21 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc133)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc133)
    cir.brcond %22 ^bb2, ^bb3 loc(#loc210)
  ^bb2:  // pred: ^bb1
    %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc138)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc141)
    cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc212)
    cir.br ^bb3 loc(#loc132)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc132)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc213)
  ^bb5:  // pred: ^bb4
    %29 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc156)
    cir.copy %29 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc156)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc145)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc146)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc147)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc146)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc148)
    %39 = cir.binop(add, %36, %38) : !u64i loc(#loc214)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc215)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc216)
    cir.libc.memcpy %41 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc217)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    cir.br ^bb6 loc(#loc143)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc124)
  } loc(#loc204)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":108:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":108:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":86:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":86:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":55:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":55:29)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":42:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":61:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":44:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":44:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":45:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":45:36)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":46:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":46:37)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":47:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":53:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":47:8)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":47:26)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":48:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":51:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":51:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":52:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":52:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":52:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":52:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":54:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":60:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":58:16)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":58:22)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":58:31)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":58:38)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":58:48)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":58:53)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":58:64)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":58:30)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":58:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":58:65)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":59:19)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":59:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":116:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":120:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":118:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":118:14)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":119:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":119:14)
#loc50 = loc("/usr/include/stdlib.h":575:1)
#loc51 = loc("/usr/include/stdlib.h":575:41)
#loc52 = loc("/usr/include/time.h":76:1)
#loc53 = loc("/usr/include/time.h":76:38)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":137:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":139:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":142:15)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":144:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":132:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":147:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":133:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":135:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":135:22)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":135:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":137:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":138:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":138:75)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":139:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":142:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":143:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":143:74)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":144:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":146:12)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":146:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":30:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":33:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":32:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":32:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":76:19)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":68:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":92:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":70:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":70:12)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":71:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":71:36)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":72:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":72:37)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":73:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":84:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":73:8)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":73:27)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":74:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":77:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":79:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":76:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":82:16)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":82:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":83:19)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":83:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":83:14)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":83:15)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":85:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":91:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":89:16)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":89:22)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":89:31)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":89:38)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":89:48)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":89:53)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":89:64)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":89:30)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":89:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":89:65)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":90:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":90:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":35:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":38:1)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":37:12)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":37:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":95:1)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":114:1)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":97:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":97:12)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":98:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":98:36)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":99:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":99:37)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":100:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":106:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":100:8)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":100:26)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":101:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":104:16)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":104:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":105:19)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":105:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":105:14)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":105:15)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":107:5)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":113:5)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":111:16)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":111:22)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":111:31)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":111:38)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":111:48)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":111:53)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":111:64)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":111:30)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":111:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":111:65)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":112:19)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_08.c":112:9)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc159 = loc(fused[#loc7, #loc8])
#loc160 = loc(fused[#loc9, #loc10])
#loc161 = loc(fused[#loc11, #loc12])
#loc162 = loc(fused[#loc13, #loc14])
#loc163 = loc(fused[#loc15, #loc16])
#loc164 = loc(fused[#loc17, #loc18])
#loc165 = loc(fused[#loc19, #loc20])
#loc166 = loc(fused[#loc21, #loc22])
#loc167 = loc(fused[#loc23, #loc20])
#loc168 = loc(fused[#loc25, #loc24])
#loc169 = loc(fused[#loc27, #loc26])
#loc170 = loc(fused[#loc30, #loc31])
#loc171 = loc(fused[#loc34, #loc36])
#loc172 = loc(fused[#loc37, #loc38])
#loc173 = loc(fused[#loc39, #loc38])
#loc174 = loc(fused[#loc40, #loc41])
#loc175 = loc(fused[#loc44, #loc45])
#loc176 = loc(fused[#loc46, #loc47])
#loc177 = loc(fused[#loc48, #loc49])
#loc178 = loc(fused[#loc50, #loc51])
#loc179 = loc(fused[#loc52, #loc53])
#loc180 = loc(fused[#loc58, #loc59])
#loc183 = loc(fused[#loc69, #loc70])
#loc184 = loc(fused[#loc73, #loc74])
#loc185 = loc(fused[#loc77, #loc76])
#loc186 = loc(fused[#loc78, #loc79])
#loc187 = loc(fused[#loc81, #loc80])
#loc188 = loc(fused[#loc83, #loc84])
#loc189 = loc(fused[#loc85, #loc86])
#loc190 = loc(fused[#loc87, #loc88])
#loc191 = loc(fused[#loc89, #loc90])
#loc192 = loc(fused[#loc91, #loc92])
#loc193 = loc(fused[#loc93, #loc94])
#loc194 = loc(fused[#loc95, #loc96, #loc97, #loc92])
#loc195 = loc(fused[#loc100, #loc99])
#loc196 = loc(fused[#loc102, #loc101])
#loc197 = loc(fused[#loc105, #loc106])
#loc198 = loc(fused[#loc109, #loc111])
#loc199 = loc(fused[#loc112, #loc113])
#loc200 = loc(fused[#loc114, #loc113])
#loc201 = loc(fused[#loc115, #loc116])
#loc202 = loc(fused[#loc119, #loc120])
#loc203 = loc(fused[#loc122, #loc121])
#loc204 = loc(fused[#loc123, #loc124])
#loc205 = loc(fused[#loc125, #loc126])
#loc206 = loc(fused[#loc127, #loc128])
#loc207 = loc(fused[#loc129, #loc130])
#loc208 = loc(fused[#loc131, #loc132])
#loc209 = loc(fused[#loc133, #loc134])
#loc210 = loc(fused[#loc135, #loc132])
#loc211 = loc(fused[#loc137, #loc136])
#loc212 = loc(fused[#loc139, #loc138])
#loc213 = loc(fused[#loc142, #loc143])
#loc214 = loc(fused[#loc146, #loc148])
#loc215 = loc(fused[#loc149, #loc150])
#loc216 = loc(fused[#loc151, #loc150])
#loc217 = loc(fused[#loc152, #loc153])
