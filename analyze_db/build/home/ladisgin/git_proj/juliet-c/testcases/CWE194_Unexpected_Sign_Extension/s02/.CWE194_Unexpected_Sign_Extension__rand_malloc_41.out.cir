!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":21:63)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":21:69)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":52:67)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":52:73)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":95:10)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":95:14)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":95:20)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":95:32)
#loc143 = loc(fused[#loc11, #loc12])
#loc160 = loc(fused[#loc60, #loc61])
#loc176 = loc(fused[#loc109, #loc110])
#loc177 = loc(fused[#loc111, #loc112])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc139)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc141)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_malloc_41_badSink(%arg0: !s16i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc143)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc13)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc16)
      %2 = cir.cast(integral, %1 : !s16i), !s32i loc(#loc16)
      %3 = cir.const #cir.int<100> : !s32i loc(#loc17)
      %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc145)
      cir.if %4 {
        %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc147)
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
        %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc22)
        %8 = cir.cast(integral, %7 : !s16i), !u64i loc(#loc22)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
        cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
        cir.scope {
          %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
          %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc150)
          cir.if %34 {
            %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
            %36 = cir.const #cir.int<1> : !s32i loc(#loc29)
            %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc30)
            cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
          } loc(#loc151)
        } loc(#loc149)
        %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc32)
        %14 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc33)
        %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc33)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc34)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc33)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc33)
        cir.libc.memset %18 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc152)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc37)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc37)
        %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %22 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc39)
        %23 = cir.cast(integral, %22 : !s16i), !s32i loc(#loc39)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc39)
        %26 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc41)
        cir.store %20, %26 : !s8i, !cir.ptr<!s8i> loc(#loc153)
        %27 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
        cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc43)
        %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
        %29 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
        cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
      } loc(#loc146)
    } loc(#loc144)
    cir.return loc(#loc10)
  } loc(#loc142)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc154)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc156)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc52)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc157)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc54)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc54)
    %7 = cir.ternary(%6, true {
      %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
      %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc54)
      %13 = cir.const #cir.int<30> : !s32i loc(#loc54)
      %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc54)
      %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
      %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc54)
      %17 = cir.const #cir.int<15> : !s32i loc(#loc54)
      %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc54)
      %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc54)
      %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
      %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc54)
      %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc54)
      cir.yield %22 : !u32i loc(#loc54)
    }, false {
      %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
      %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc54)
      %13 = cir.const #cir.int<30> : !s32i loc(#loc54)
      %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc54)
      %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
      %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc54)
      %17 = cir.const #cir.int<15> : !s32i loc(#loc54)
      %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc54)
      %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc54)
      %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
      %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc54)
      %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc54)
      %23 = cir.unary(minus, %22) : !u32i, !u32i loc(#loc54)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc54)
      %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc54)
      %26 = cir.binop(sub, %23, %25) : !u32i loc(#loc54)
      cir.yield %26 : !u32i loc(#loc54)
    }) : (!cir.bool) -> !u32i loc(#loc54)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc54)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc54)
    cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc158)
    %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc56)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_41_badSink(%10) : (!s16i) -> () loc(#loc57)
    cir.return loc(#loc49)
  } loc(#loc155)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_malloc_41_goodG2BSink(%arg0: !s16i loc(fused[#loc60, #loc61])) extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc160)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc62)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc65)
      %2 = cir.cast(integral, %1 : !s16i), !s32i loc(#loc65)
      %3 = cir.const #cir.int<100> : !s32i loc(#loc66)
      %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc162)
      cir.if %4 {
        %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc164)
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
        %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc71)
        %8 = cir.cast(integral, %7 : !s16i), !u64i loc(#loc71)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc165)
        cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
        cir.scope {
          %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
          %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
          cir.if %34 {
            %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc77)
            %36 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc79)
            cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
          } loc(#loc168)
        } loc(#loc166)
        %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc81)
        %14 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc82)
        %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc82)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc82)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc82)
        cir.libc.memset %18 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc86)
        %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
        %22 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc88)
        %23 = cir.cast(integral, %22 : !s16i), !s32i loc(#loc88)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc88)
        %26 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc90)
        cir.store %20, %26 : !s8i, !cir.ptr<!s8i> loc(#loc170)
        %27 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc93)
        %29 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
        cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
      } loc(#loc163)
    } loc(#loc161)
    cir.return loc(#loc59)
  } loc(#loc159)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc171)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc173)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc106)
  cir.func @main(%arg0: !s32i loc(fused[#loc109, #loc110]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc111, #loc112])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc113)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc114)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc115)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc115)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc116)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc103)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_malloc_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_41_good() : () -> () loc(#loc118)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc104)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc105)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_malloc_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_41_bad() : () -> () loc(#loc122)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc106)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc125)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.return %17 : !s32i loc(#loc180)
  } loc(#loc175)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc182)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc131)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc183)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc133)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc133)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc133)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc184)
    %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc136)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_41_goodG2BSink(%7) : (!s16i) -> () loc(#loc137)
    cir.return loc(#loc128)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":21:1)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":36:1)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":22:1)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":24:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":35:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":24:9)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":24:16)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":25:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":28:9)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":28:48)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":28:37)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":28:44)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":29:9)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":29:43)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":29:13)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":29:27)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":29:33)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":29:34)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":29:40)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":29:39)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":31:16)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":31:28)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":31:33)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":31:38)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":31:9)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":31:39)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":32:30)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":32:9)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":32:20)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":32:25)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":32:26)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":33:19)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":33:9)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":34:9)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":34:14)
#loc46 = loc("/usr/include/stdlib.h":573:1)
#loc47 = loc("/usr/include/stdlib.h":573:24)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":38:1)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":46:1)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":40:5)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":40:11)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":42:12)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":42:5)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":44:19)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":44:5)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":45:62)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":45:5)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":52:1)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":67:1)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":53:1)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":55:5)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":66:5)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":55:9)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":55:16)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":56:5)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":59:9)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":59:48)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":59:37)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":59:44)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":60:9)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":60:43)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":60:13)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":60:27)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":60:33)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":60:34)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":60:40)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":60:39)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":62:16)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":62:28)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":62:33)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":62:38)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":62:9)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":62:39)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":63:30)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":63:9)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":63:20)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":63:25)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":63:26)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":64:19)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":64:9)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":65:9)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":65:14)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":80:1)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":83:1)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":82:5)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":82:13)
#loc99 = loc("/usr/include/stdlib.h":575:1)
#loc100 = loc("/usr/include/stdlib.h":575:41)
#loc101 = loc("/usr/include/time.h":76:1)
#loc102 = loc("/usr/include/time.h":76:38)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":100:15)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":102:15)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":105:15)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":107:15)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":95:1)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":110:1)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":96:1)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":98:27)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":98:22)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":98:5)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":100:5)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":101:5)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":101:59)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":102:5)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":105:5)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":106:5)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":106:58)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":107:5)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":109:12)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":109:5)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":70:1)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":78:1)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":72:5)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":72:11)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":74:12)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":74:5)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":76:12)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":76:16)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":76:5)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":77:66)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_41.c":77:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc14, #loc15])
#loc145 = loc(fused[#loc16, #loc17])
#loc146 = loc(fused[#loc18, #loc15])
#loc147 = loc(fused[#loc19, #loc20])
#loc148 = loc(fused[#loc21, #loc20])
#loc149 = loc(fused[#loc23, #loc24])
#loc150 = loc(fused[#loc25, #loc26])
#loc151 = loc(fused[#loc27, #loc24])
#loc152 = loc(fused[#loc35, #loc36])
#loc153 = loc(fused[#loc38, #loc37])
#loc154 = loc(fused[#loc46, #loc47])
#loc155 = loc(fused[#loc48, #loc49])
#loc156 = loc(fused[#loc50, #loc51])
#loc157 = loc(fused[#loc53, #loc52])
#loc158 = loc(fused[#loc55, #loc54])
#loc159 = loc(fused[#loc58, #loc59])
#loc161 = loc(fused[#loc63, #loc64])
#loc162 = loc(fused[#loc65, #loc66])
#loc163 = loc(fused[#loc67, #loc64])
#loc164 = loc(fused[#loc68, #loc69])
#loc165 = loc(fused[#loc70, #loc69])
#loc166 = loc(fused[#loc72, #loc73])
#loc167 = loc(fused[#loc74, #loc75])
#loc168 = loc(fused[#loc76, #loc73])
#loc169 = loc(fused[#loc84, #loc85])
#loc170 = loc(fused[#loc87, #loc86])
#loc171 = loc(fused[#loc95, #loc96])
#loc172 = loc(fused[#loc97, #loc98])
#loc173 = loc(fused[#loc99, #loc100])
#loc174 = loc(fused[#loc101, #loc102])
#loc175 = loc(fused[#loc107, #loc108])
#loc178 = loc(fused[#loc118, #loc119])
#loc179 = loc(fused[#loc122, #loc123])
#loc180 = loc(fused[#loc126, #loc125])
#loc181 = loc(fused[#loc127, #loc128])
#loc182 = loc(fused[#loc129, #loc130])
#loc183 = loc(fused[#loc132, #loc131])
#loc184 = loc(fused[#loc135, #loc134])
