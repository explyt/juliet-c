!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc49)
  cir.func no_proto @CWE843_Type_Confusion__char_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc51)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc7)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc52)
    cir.scope {
      cir.while {
        %5 = cir.const #cir.int<1> : !s32i loc(#loc11)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc11)
        cir.condition(%6) loc(#loc11)
      } do {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charBuffer", init] {alignment = 1 : i64} loc(#loc56)
            %6 = cir.const #cir.int<97> : !s32i loc(#loc16)
            %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc16)
            cir.store %7, %5 : !s8i, !cir.ptr<!s8i> loc(#loc56)
            %8 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
            cir.store %8, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc58)
          } loc(#loc55)
          cir.break loc(#loc20)
        } loc(#loc54)
        cir.yield loc(#loc10)
      } loc(#loc53)
    } loc(#loc53)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc21)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc21)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc23)
    cir.return loc(#loc4)
  } loc(#loc50)
  cir.func no_proto @CWE843_Type_Confusion__char_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc60)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    cir.return loc(#loc25)
  } loc(#loc59)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc62)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc63)
    cir.scope {
      cir.while {
        %5 = cir.const #cir.int<1> : !s32i loc(#loc36)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc36)
        cir.condition(%6) loc(#loc36)
      } do {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc67)
            %6 = cir.const #cir.int<8> : !s32i loc(#loc41)
            cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc67)
            %7 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc68)
            cir.store %7, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc69)
          } loc(#loc66)
          cir.break loc(#loc45)
        } loc(#loc65)
        cir.yield loc(#loc35)
      } loc(#loc64)
    } loc(#loc64)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc46)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc46)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc48)
    cir.return loc(#loc29)
  } loc(#loc61)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE843_Type_Confusion__char_16.c":21:1)
#loc4 = loc("CWE843_Type_Confusion__char_16.c":37:1)
#loc5 = loc("CWE843_Type_Confusion__char_16.c":23:5)
#loc6 = loc("CWE843_Type_Confusion__char_16.c":23:12)
#loc7 = loc("CWE843_Type_Confusion__char_16.c":25:12)
#loc8 = loc("CWE843_Type_Confusion__char_16.c":25:5)
#loc9 = loc("CWE843_Type_Confusion__char_16.c":26:5)
#loc10 = loc("CWE843_Type_Confusion__char_16.c":34:5)
#loc11 = loc("CWE843_Type_Confusion__char_16.c":26:11)
#loc12 = loc("CWE843_Type_Confusion__char_16.c":27:5)
#loc13 = loc("CWE843_Type_Confusion__char_16.c":28:9)
#loc14 = loc("CWE843_Type_Confusion__char_16.c":32:9)
#loc15 = loc("CWE843_Type_Confusion__char_16.c":30:13)
#loc16 = loc("CWE843_Type_Confusion__char_16.c":30:31)
#loc17 = loc("CWE843_Type_Confusion__char_16.c":31:20)
#loc18 = loc("CWE843_Type_Confusion__char_16.c":31:21)
#loc19 = loc("CWE843_Type_Confusion__char_16.c":31:13)
#loc20 = loc("CWE843_Type_Confusion__char_16.c":33:9)
#loc21 = loc("CWE843_Type_Confusion__char_16.c":36:26)
#loc22 = loc("CWE843_Type_Confusion__char_16.c":36:18)
#loc23 = loc("CWE843_Type_Confusion__char_16.c":36:5)
#loc24 = loc("CWE843_Type_Confusion__char_16.c":62:1)
#loc25 = loc("CWE843_Type_Confusion__char_16.c":65:1)
#loc26 = loc("CWE843_Type_Confusion__char_16.c":64:5)
#loc27 = loc("CWE843_Type_Confusion__char_16.c":64:13)
#loc28 = loc("CWE843_Type_Confusion__char_16.c":44:1)
#loc29 = loc("CWE843_Type_Confusion__char_16.c":60:1)
#loc30 = loc("CWE843_Type_Confusion__char_16.c":46:5)
#loc31 = loc("CWE843_Type_Confusion__char_16.c":46:12)
#loc32 = loc("CWE843_Type_Confusion__char_16.c":48:12)
#loc33 = loc("CWE843_Type_Confusion__char_16.c":48:5)
#loc34 = loc("CWE843_Type_Confusion__char_16.c":49:5)
#loc35 = loc("CWE843_Type_Confusion__char_16.c":57:5)
#loc36 = loc("CWE843_Type_Confusion__char_16.c":49:11)
#loc37 = loc("CWE843_Type_Confusion__char_16.c":50:5)
#loc38 = loc("CWE843_Type_Confusion__char_16.c":51:9)
#loc39 = loc("CWE843_Type_Confusion__char_16.c":55:9)
#loc40 = loc("CWE843_Type_Confusion__char_16.c":53:13)
#loc41 = loc("CWE843_Type_Confusion__char_16.c":53:29)
#loc42 = loc("CWE843_Type_Confusion__char_16.c":54:20)
#loc43 = loc("CWE843_Type_Confusion__char_16.c":54:21)
#loc44 = loc("CWE843_Type_Confusion__char_16.c":54:13)
#loc45 = loc("CWE843_Type_Confusion__char_16.c":56:9)
#loc46 = loc("CWE843_Type_Confusion__char_16.c":59:26)
#loc47 = loc("CWE843_Type_Confusion__char_16.c":59:18)
#loc48 = loc("CWE843_Type_Confusion__char_16.c":59:5)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc3, #loc4])
#loc51 = loc(fused[#loc5, #loc6])
#loc52 = loc(fused[#loc8, #loc7])
#loc53 = loc(fused[#loc9, #loc10])
#loc54 = loc(fused[#loc12, #loc10])
#loc55 = loc(fused[#loc13, #loc14])
#loc56 = loc(fused[#loc15, #loc16])
#loc57 = loc(fused[#loc17, #loc18])
#loc58 = loc(fused[#loc19, #loc18])
#loc59 = loc(fused[#loc24, #loc25])
#loc60 = loc(fused[#loc26, #loc27])
#loc61 = loc(fused[#loc28, #loc29])
#loc62 = loc(fused[#loc30, #loc31])
#loc63 = loc(fused[#loc33, #loc32])
#loc64 = loc(fused[#loc34, #loc35])
#loc65 = loc(fused[#loc37, #loc35])
#loc66 = loc(fused[#loc38, #loc39])
#loc67 = loc(fused[#loc40, #loc41])
#loc68 = loc(fused[#loc42, #loc43])
#loc69 = loc(fused[#loc44, #loc43])
