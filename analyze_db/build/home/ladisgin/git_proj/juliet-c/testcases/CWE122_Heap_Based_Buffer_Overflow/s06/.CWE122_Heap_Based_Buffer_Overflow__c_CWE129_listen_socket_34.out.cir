!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":324:10)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":324:14)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":324:20)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":324:32)
#true = #cir.bool<true> : !cir.bool
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType = !cir.struct<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType" {!s32i, !s32i}>
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc616 = loc(fused[#loc236, #loc237])
#loc617 = loc(fused[#loc238, #loc239])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc523)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc524)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc525)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc526)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc527)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc528)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc529)
  cir.func private @close(!s32i) -> !s32i loc(#loc530)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc531)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc532)
  cir.func private @printIntLine(!s32i) loc(#loc533)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc534)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc25)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc535)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc537)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc538)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc35)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc539)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc541)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc542)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc543)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc544)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc545)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc44)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc44)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc543)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc46)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc46)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc544)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc51)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc53)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc547)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc59)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc60)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc60)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc549)
            cir.if %63 {
              cir.break loc(#loc62)
            } loc(#loc550)
          } loc(#loc548)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc551)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc65)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc552)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc553)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc70)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc70)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc554)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc73)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc73)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc555)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc77)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc77)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc78)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc556)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc558)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc559)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc559)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc89)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc90)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc90)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc560)
            cir.if %67 {
              cir.break loc(#loc92)
            } loc(#loc561)
          } loc(#loc557)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc96)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc97)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc98)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc98)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc563)
            cir.if %65 {
              cir.break loc(#loc100)
            } loc(#loc564)
          } loc(#loc562)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc102)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc103)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc104)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc565)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc110)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc110)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc567)
            cir.if %63 {
              cir.break loc(#loc112)
            } loc(#loc568)
          } loc(#loc566)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc113)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc115)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc115)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc115)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc115)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc115)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc115)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc115)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc116)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc116)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc569)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc117)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc118)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc118)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc570)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc124)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc572)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc125)
              cir.yield %65 : !cir.bool loc(#loc125)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc126)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc127)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc573)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc125)
                cir.yield %69 : !cir.bool loc(#loc125)
              }, false {
                %69 = cir.const #false loc(#loc125)
                cir.yield %69 : !cir.bool loc(#loc125)
              }) : (!cir.bool) -> !cir.bool loc(#loc125)
              cir.yield %68 : !cir.bool loc(#loc125)
            }) : (!cir.bool) -> !cir.bool loc(#loc125)
            cir.if %64 {
              cir.break loc(#loc129)
            } loc(#loc574)
          } loc(#loc571)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc130)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc131)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc132)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc575)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc133)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc134)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc576)
          cir.yield loc(#loc50)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc137)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc137)
          cir.condition(%16) loc(#loc137)
        } loc(#loc546)
      } loc(#loc546)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc141)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc141)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc578)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc144)
        } loc(#loc579)
      } loc(#loc577)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc147)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc148)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc148)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc581)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc150)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc151)
        } loc(#loc582)
      } loc(#loc580)
    } loc(#loc540)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc153)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc583)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc585)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc159)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc585)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc587)
        %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc588)
        %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc166)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc167)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc167)
        %14 = cir.const #cir.int<4> : !u64i loc(#loc589)
        %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc590)
        %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc166)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc591)
        cir.store %17, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc588)
        cir.scope {
          %21 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc173)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc593)
          cir.if %24 {
            %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc177)
            cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
          } loc(#loc594)
        } loc(#loc592)
        cir.scope {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc180)
          cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc596)
          cir.for : cond {
            %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc182)
            %23 = cir.const #cir.int<10> : !s32i loc(#loc183)
            %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc597)
            cir.condition(%24) loc(#loc184)
          } body {
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc186)
              %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
              %24 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc188)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc189)
              cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc599)
            } loc(#loc598)
            cir.yield loc(#loc179)
          } step {
            %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc190)
            %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc191)
            cir.store %23, %9 : !s32i, !cir.ptr<!s32i> loc(#loc600)
            cir.yield loc(#loc595)
          } loc(#loc595)
        } loc(#loc595)
        cir.scope {
          %21 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc194)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc195)
          %23 = cir.cmp(ge, %21, %22) : !s32i, !cir.bool loc(#loc602)
          cir.if %23 {
            %24 = cir.const #cir.int<1> : !s32i loc(#loc199)
            %25 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc200)
            %26 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc201)
            %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc202)
            cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc604)
            cir.scope {
              %28 = cir.const #cir.int<0> : !s32i loc(#loc205)
              cir.store %28, %9 : !s32i, !cir.ptr<!s32i> loc(#loc606)
              cir.for : cond {
                %29 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                %30 = cir.const #cir.int<10> : !s32i loc(#loc208)
                %31 = cir.cmp(lt, %29, %30) : !s32i, !cir.bool loc(#loc607)
                cir.condition(%31) loc(#loc209)
              } body {
                cir.scope {
                  %29 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc211)
                  %30 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc212)
                  %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc213)
                  %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc211)
                  cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc214)
                } loc(#loc608)
                cir.yield loc(#loc204)
              } step {
                %29 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc215)
                %30 = cir.unary(inc, %29) : !s32i, !s32i loc(#loc216)
                cir.store %30, %9 : !s32i, !cir.ptr<!s32i> loc(#loc609)
                cir.yield loc(#loc605)
              } loc(#loc605)
            } loc(#loc605)
          } else {
            %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc25)
            %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc25)
            cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc217)
          } loc(#loc603)
        } loc(#loc601)
        %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc218)
        %19 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc219)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc219)
        cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc218)
      } loc(#loc586)
    } loc(#loc584)
    cir.return loc(#loc29)
  } loc(#loc536)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc611)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc222)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc612)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc224)
    cir.return loc(#loc221)
  } loc(#loc610)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc613)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc614)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc230)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc233)
  cir.func @main(%arg0: !s32i loc(fused[#loc236, #loc237]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc238, #loc239])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc616)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc617)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc235)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc240)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc241)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc242)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc242)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc243)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc230)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc230)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc244)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc618)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_good() : () -> () loc(#loc245)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc231)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc231)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc247)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc232)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc232)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc248)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc619)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_bad() : () -> () loc(#loc249)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc233)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc233)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc251)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc252)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc620)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc620)
    cir.return %17 : !s32i loc(#loc620)
  } loc(#loc615)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc622)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc623)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc260)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc261)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc624)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc263)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc625)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc153)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc626)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc628)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc159)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc270)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc628)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc630)
        %11 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc631)
        %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc277)
        %13 = cir.const #cir.int<10> : !s32i loc(#loc278)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc278)
        %15 = cir.const #cir.int<4> : !u64i loc(#loc632)
        %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc633)
        %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc277)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc634)
        cir.store %18, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc631)
        cir.scope {
          %22 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc283)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc284)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc284)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc636)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc286)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc287)
            %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc288)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc286)
          } loc(#loc637)
        } loc(#loc635)
        cir.scope {
          %22 = cir.const #cir.int<0> : !s32i loc(#loc291)
          cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc639)
          cir.for : cond {
            %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc293)
            %24 = cir.const #cir.int<10> : !s32i loc(#loc294)
            %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc640)
            cir.condition(%25) loc(#loc295)
          } body {
            cir.scope {
              %23 = cir.const #cir.int<0> : !s32i loc(#loc297)
              %24 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc298)
              %25 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc299)
              %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc300)
              cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc642)
            } loc(#loc641)
            cir.yield loc(#loc290)
          } step {
            %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc301)
            %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc302)
            cir.store %24, %10 : !s32i, !cir.ptr<!s32i> loc(#loc643)
            cir.yield loc(#loc638)
          } loc(#loc638)
        } loc(#loc638)
        cir.scope {
          %22 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc305)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc306)
          %24 = cir.cmp(ge, %22, %23) : !s32i, !cir.bool loc(#loc645)
          cir.if %24 {
            %25 = cir.const #cir.int<1> : !s32i loc(#loc310)
            %26 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc311)
            %27 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc312)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc313)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc647)
            cir.scope {
              %29 = cir.const #cir.int<0> : !s32i loc(#loc316)
              cir.store %29, %10 : !s32i, !cir.ptr<!s32i> loc(#loc649)
              cir.for : cond {
                %30 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc318)
                %31 = cir.const #cir.int<10> : !s32i loc(#loc319)
                %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc650)
                cir.condition(%32) loc(#loc320)
              } body {
                cir.scope {
                  %30 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc322)
                  %31 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc323)
                  %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc324)
                  %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc322)
                  cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc325)
                } loc(#loc651)
                cir.yield loc(#loc315)
              } step {
                %30 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc326)
                %31 = cir.unary(inc, %30) : !s32i, !s32i loc(#loc327)
                cir.store %31, %10 : !s32i, !cir.ptr<!s32i> loc(#loc652)
                cir.yield loc(#loc648)
              } loc(#loc648)
            } loc(#loc648)
          } else {
            %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc328)
            %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc328)
            cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc329)
          } loc(#loc646)
        } loc(#loc644)
        %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc330)
        %20 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc331)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc331)
        cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc330)
      } loc(#loc629)
    } loc(#loc627)
    cir.return loc(#loc255)
  } loc(#loc621)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc332)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc654)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc655)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc339)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc340)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc656)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc658)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc659)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc660)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc661)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc662)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc349)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc349)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc660)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc351)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc351)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc661)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc356)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc357)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc358)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc359)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc664)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc364)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc365)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc365)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc666)
            cir.if %63 {
              cir.break loc(#loc367)
            } loc(#loc667)
          } loc(#loc665)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc668)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc370)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc669)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc670)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc375)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc375)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc671)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc377)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc377)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc672)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc379)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc379)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc380)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc673)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc385)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc675)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc676)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc676)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc390)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc391)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc391)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc677)
            cir.if %67 {
              cir.break loc(#loc393)
            } loc(#loc678)
          } loc(#loc674)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc396)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc397)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc398)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc399)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc399)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc680)
            cir.if %65 {
              cir.break loc(#loc401)
            } loc(#loc681)
          } loc(#loc679)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc402)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc403)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc404)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc405)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc682)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc410)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc411)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc411)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc684)
            cir.if %63 {
              cir.break loc(#loc413)
            } loc(#loc685)
          } loc(#loc683)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc414)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc415)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc415)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc416)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc416)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc416)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc416)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc416)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc416)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc416)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc417)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc417)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc686)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc418)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc419)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc419)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc687)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc424)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc425)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc425)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc689)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc426)
              cir.yield %65 : !cir.bool loc(#loc426)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc427)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc428)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc690)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc426)
                cir.yield %69 : !cir.bool loc(#loc426)
              }, false {
                %69 = cir.const #false loc(#loc426)
                cir.yield %69 : !cir.bool loc(#loc426)
              }) : (!cir.bool) -> !cir.bool loc(#loc426)
              cir.yield %68 : !cir.bool loc(#loc426)
            }) : (!cir.bool) -> !cir.bool loc(#loc426)
            cir.if %64 {
              cir.break loc(#loc430)
            } loc(#loc691)
          } loc(#loc688)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc431)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc431)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc432)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc433)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc433)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc692)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc434)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc435)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc693)
          cir.yield loc(#loc355)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc438)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc438)
          cir.condition(%16) loc(#loc438)
        } loc(#loc663)
      } loc(#loc663)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc441)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc442)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc442)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc695)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc444)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc445)
        } loc(#loc696)
      } loc(#loc694)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc448)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc449)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc449)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc698)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc451)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc452)
        } loc(#loc699)
      } loc(#loc697)
    } loc(#loc657)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc453)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc153)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc700)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc702)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc159)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc458)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc702)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc704)
        %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc705)
        %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc465)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc466)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc466)
        %14 = cir.const #cir.int<4> : !u64i loc(#loc706)
        %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc707)
        %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc465)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc708)
        cir.store %17, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc705)
        cir.scope {
          %21 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc471)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc472)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc472)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc710)
          cir.if %24 {
            %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc474)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc475)
            %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc476)
            cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc474)
          } loc(#loc711)
        } loc(#loc709)
        cir.scope {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc479)
          cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc713)
          cir.for : cond {
            %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc481)
            %23 = cir.const #cir.int<10> : !s32i loc(#loc482)
            %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc714)
            cir.condition(%24) loc(#loc483)
          } body {
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc485)
              %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc486)
              %24 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc487)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc488)
              cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc716)
            } loc(#loc715)
            cir.yield loc(#loc478)
          } step {
            %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc489)
            %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc490)
            cir.store %23, %9 : !s32i, !cir.ptr<!s32i> loc(#loc717)
            cir.yield loc(#loc712)
          } loc(#loc712)
        } loc(#loc712)
        cir.scope {
          %21 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc493)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc494)
          %23 = cir.cmp(ge, %21, %22) : !s32i, !cir.bool loc(#loc719)
          %24 = cir.ternary(%23, true {
            %25 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc496)
            %26 = cir.const #cir.int<10> : !s32i loc(#loc497)
            %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc720)
            %28 = cir.ternary(%27, true {
              %29 = cir.const #true loc(#loc495)
              cir.yield %29 : !cir.bool loc(#loc495)
            }, false {
              %29 = cir.const #false loc(#loc495)
              cir.yield %29 : !cir.bool loc(#loc495)
            }) : (!cir.bool) -> !cir.bool loc(#loc495)
            cir.yield %28 : !cir.bool loc(#loc495)
          }, false {
            %25 = cir.const #false loc(#loc495)
            cir.yield %25 : !cir.bool loc(#loc495)
          }) : (!cir.bool) -> !cir.bool loc(#loc495)
          cir.if %24 {
            %25 = cir.const #cir.int<1> : !s32i loc(#loc502)
            %26 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc503)
            %27 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc504)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc505)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc722)
            cir.scope {
              %29 = cir.const #cir.int<0> : !s32i loc(#loc508)
              cir.store %29, %9 : !s32i, !cir.ptr<!s32i> loc(#loc724)
              cir.for : cond {
                %30 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc510)
                %31 = cir.const #cir.int<10> : !s32i loc(#loc511)
                %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc725)
                cir.condition(%32) loc(#loc512)
              } body {
                cir.scope {
                  %30 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc514)
                  %31 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc515)
                  %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc516)
                  %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc514)
                  cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc517)
                } loc(#loc726)
                cir.yield loc(#loc507)
              } step {
                %30 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc518)
                %31 = cir.unary(inc, %30) : !s32i, !s32i loc(#loc519)
                cir.store %31, %9 : !s32i, !cir.ptr<!s32i> loc(#loc727)
                cir.yield loc(#loc723)
              } loc(#loc723)
            } loc(#loc723)
          } else {
            %25 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc332)
            %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc332)
            cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc520)
          } loc(#loc721)
        } loc(#loc718)
        %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc521)
        %19 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc522)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc522)
        cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc521)
      } loc(#loc703)
    } loc(#loc701)
    cir.return loc(#loc334)
  } loc(#loc653)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":150:27)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":50:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":155:1)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":52:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":52:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":53:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":53:76)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":55:13)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":55:12)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":55:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":56:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":124:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":61:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":61:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":62:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":62:28)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":63:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":63:31)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":64:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":64:31)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":65:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":65:41)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":66:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":109:17)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":76:35)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":76:44)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":76:57)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":76:28)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":76:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":76:68)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":77:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":80:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":77:17)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":77:33)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":78:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":79:17)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":81:20)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":81:21)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":81:30)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":81:33)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":81:47)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":81:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":81:48)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":82:34)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":82:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":83:39)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":83:13)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":84:38)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":84:32)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":84:13)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":84:46)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":85:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":88:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":85:22)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":85:54)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":85:55)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":85:64)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":85:78)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":85:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":85:84)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":86:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":87:17)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":89:13)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":92:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":89:24)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":89:38)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":89:17)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":89:57)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":90:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":91:17)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":93:35)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":93:49)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":93:55)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":93:28)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":93:13)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":93:59)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":94:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":97:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":94:17)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":94:33)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":95:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":96:17)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":99:31)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":99:45)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":99:58)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":99:76)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":99:79)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":99:26)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":99:13)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":99:80)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":100:13)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":103:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":100:17)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":100:31)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":100:44)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":100:47)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":100:61)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":101:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":102:17)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":105:39)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":105:25)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":105:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":107:25)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":107:20)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":107:13)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":107:36)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":109:16)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":110:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":113:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":110:13)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":110:29)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":111:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":112:26)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":112:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":114:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":117:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":114:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":114:29)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":115:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":116:26)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":116:13)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":125:26)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":44:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":125:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":126:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":154:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":127:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":127:28)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":45:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":128:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":153:9)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":129:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":129:17)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":130:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":130:58)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":130:35)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":130:42)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":130:47)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":130:57)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":131:13)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":131:43)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":131:17)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":131:27)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":131:33)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":131:34)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":131:40)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":131:39)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":133:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":136:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":133:22)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":133:18)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":133:25)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":133:29)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":133:27)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":134:13)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":135:29)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":135:17)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":135:24)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":135:25)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":133:34)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":133:33)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":139:13)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":151:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":139:17)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":139:25)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":140:13)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":147:13)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":149:13)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":141:32)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":141:17)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":141:24)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":141:28)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":143:17)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":146:17)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":143:25)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":143:21)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":143:28)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":143:32)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":143:30)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":144:17)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":145:34)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":145:41)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":145:42)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":145:21)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":143:37)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":143:36)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":150:17)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":152:13)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":152:18)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":310:1)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":314:1)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":312:5)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":312:13)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":313:5)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":313:13)
#loc226 = loc("/usr/include/stdlib.h":575:1)
#loc227 = loc("/usr/include/stdlib.h":575:41)
#loc228 = loc("/usr/include/time.h":76:1)
#loc229 = loc("/usr/include/time.h":76:38)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":329:15)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":331:15)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":334:15)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":336:15)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":324:1)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":339:1)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":325:1)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":327:27)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":327:22)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":327:5)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":329:5)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":330:5)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":330:71)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":331:5)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":334:5)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":335:5)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":335:70)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":336:5)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":338:12)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":338:5)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":162:1)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":201:1)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":164:5)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":164:9)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":165:5)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":165:76)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":167:13)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":167:12)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":167:5)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":170:12)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":170:5)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":171:26)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":171:5)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":172:5)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":200:5)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":173:9)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":173:28)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":174:9)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":199:9)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":175:13)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":175:17)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":176:13)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":176:58)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":176:35)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":176:42)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":176:47)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":176:57)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":177:13)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":177:43)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":177:17)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":177:27)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":177:33)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":177:34)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":177:40)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":177:39)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":179:13)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":182:13)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":179:22)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":179:18)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":179:25)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":179:29)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":179:27)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":180:13)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":181:29)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":181:17)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":181:24)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":181:25)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":179:34)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":179:33)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":185:13)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":197:13)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":185:17)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":185:25)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":186:13)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":193:13)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":195:13)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":187:32)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":187:17)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":187:24)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":187:28)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":189:17)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":192:17)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":189:25)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":189:21)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":189:28)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":189:32)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":189:30)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":190:17)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":191:34)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":191:41)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":191:42)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":191:21)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":189:37)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":189:36)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":196:27)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":196:17)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":198:13)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":198:18)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":303:27)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":204:1)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":308:1)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":206:5)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":206:9)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":207:5)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":207:76)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":209:13)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":209:12)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":209:5)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":210:5)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":278:5)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":215:9)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":215:13)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":216:9)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":216:28)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":217:9)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":217:31)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":218:9)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":218:31)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":219:9)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":219:41)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":220:9)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":263:17)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":230:35)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":230:44)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":230:57)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":230:28)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":230:13)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":230:68)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":231:13)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":234:13)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":231:17)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":231:33)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":232:13)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":233:17)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":235:20)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":235:21)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":235:30)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":235:33)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":235:47)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":235:13)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":235:48)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":236:34)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":236:13)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":237:39)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":237:13)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":238:38)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":238:32)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":238:13)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":238:46)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":239:13)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":242:13)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":239:22)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":239:54)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":239:55)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":239:64)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":239:78)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":239:17)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":239:84)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":240:13)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":241:17)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":243:13)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":246:13)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":243:24)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":243:38)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":243:17)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":243:57)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":244:13)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":245:17)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":247:35)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":247:49)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":247:55)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":247:28)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":247:13)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":247:59)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":248:13)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":251:13)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":248:17)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":248:33)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":249:13)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":250:17)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":253:31)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":253:45)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":253:58)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":253:76)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":253:79)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":253:26)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":253:13)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":253:80)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":254:13)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":257:13)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":254:17)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":254:31)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":254:44)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":254:47)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":254:61)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":255:13)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":256:17)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":259:39)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":259:25)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":259:13)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":261:25)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":261:20)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":261:13)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":261:36)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":263:16)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":264:9)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":267:9)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":264:13)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":264:29)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":265:9)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":266:26)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":266:13)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":268:9)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":271:9)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":268:13)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":268:29)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":269:9)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":270:26)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":270:13)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":279:26)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":279:5)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":280:5)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":307:5)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":281:9)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":281:28)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":282:9)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":306:9)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":283:13)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":283:17)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":284:13)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":284:58)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":284:35)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":284:42)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":284:47)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":284:57)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":285:13)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":285:43)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":285:17)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":285:27)
#loc473 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":285:33)
#loc474 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":285:34)
#loc475 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":285:40)
#loc476 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":285:39)
#loc477 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":287:13)
#loc478 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":290:13)
#loc479 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":287:22)
#loc480 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":287:18)
#loc481 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":287:25)
#loc482 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":287:29)
#loc483 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":287:27)
#loc484 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":288:13)
#loc485 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":289:29)
#loc486 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":289:17)
#loc487 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":289:24)
#loc488 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":289:25)
#loc489 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":287:34)
#loc490 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":287:33)
#loc491 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":292:13)
#loc492 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":304:13)
#loc493 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":292:17)
#loc494 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":292:25)
#loc495 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":292:27)
#loc496 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":292:30)
#loc497 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":292:38)
#loc498 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":292:40)
#loc499 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":293:13)
#loc500 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":300:13)
#loc501 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":302:13)
#loc502 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":294:32)
#loc503 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":294:17)
#loc504 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":294:24)
#loc505 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":294:28)
#loc506 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":296:17)
#loc507 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":299:17)
#loc508 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":296:25)
#loc509 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":296:21)
#loc510 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":296:28)
#loc511 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":296:32)
#loc512 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":296:30)
#loc513 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":297:17)
#loc514 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":298:34)
#loc515 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":298:41)
#loc516 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":298:42)
#loc517 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":298:21)
#loc518 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":296:37)
#loc519 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":296:36)
#loc520 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":303:17)
#loc521 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":305:13)
#loc522 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_34.c":305:18)
#loc523 = loc(fused[#loc1, #loc2])
#loc524 = loc(fused[#loc3, #loc4])
#loc525 = loc(fused[#loc5, #loc6])
#loc526 = loc(fused[#loc7, #loc8])
#loc527 = loc(fused[#loc9, #loc10])
#loc528 = loc(fused[#loc11, #loc12])
#loc529 = loc(fused[#loc13, #loc14])
#loc530 = loc(fused[#loc15, #loc16])
#loc531 = loc(fused[#loc17, #loc18])
#loc532 = loc(fused[#loc19, #loc20])
#loc533 = loc(fused[#loc21, #loc22])
#loc534 = loc(fused[#loc23, #loc24])
#loc535 = loc(fused[#loc26, #loc27])
#loc536 = loc(fused[#loc28, #loc29])
#loc537 = loc(fused[#loc30, #loc31])
#loc538 = loc(fused[#loc32, #loc33])
#loc539 = loc(fused[#loc36, #loc34])
#loc540 = loc(fused[#loc37, #loc38])
#loc541 = loc(fused[#loc39, #loc40])
#loc542 = loc(fused[#loc41, #loc42])
#loc543 = loc(fused[#loc43, #loc44])
#loc544 = loc(fused[#loc45, #loc46])
#loc545 = loc(fused[#loc47, #loc48])
#loc546 = loc(fused[#loc49, #loc50])
#loc547 = loc(fused[#loc55, #loc56])
#loc548 = loc(fused[#loc57, #loc58])
#loc549 = loc(fused[#loc59, #loc60])
#loc550 = loc(fused[#loc61, #loc58])
#loc551 = loc(fused[#loc63, #loc64])
#loc552 = loc(fused[#loc66, #loc67])
#loc553 = loc(fused[#loc68, #loc69])
#loc554 = loc(fused[#loc72, #loc70])
#loc555 = loc(fused[#loc76, #loc73])
#loc556 = loc(fused[#loc80, #loc81])
#loc557 = loc(fused[#loc82, #loc83])
#loc558 = loc(fused[#loc85, #loc86])
#loc559 = loc(fused[#loc87, #loc88])
#loc560 = loc(fused[#loc89, #loc90])
#loc561 = loc(fused[#loc91, #loc83])
#loc562 = loc(fused[#loc93, #loc94])
#loc563 = loc(fused[#loc97, #loc98])
#loc564 = loc(fused[#loc99, #loc94])
#loc565 = loc(fused[#loc105, #loc106])
#loc566 = loc(fused[#loc107, #loc108])
#loc567 = loc(fused[#loc109, #loc110])
#loc568 = loc(fused[#loc111, #loc108])
#loc569 = loc(fused[#loc115, #loc116])
#loc570 = loc(fused[#loc119, #loc120])
#loc571 = loc(fused[#loc121, #loc122])
#loc572 = loc(fused[#loc123, #loc124])
#loc573 = loc(fused[#loc126, #loc127])
#loc574 = loc(fused[#loc128, #loc122])
#loc575 = loc(fused[#loc132, #loc130])
#loc576 = loc(fused[#loc135, #loc136])
#loc577 = loc(fused[#loc138, #loc139])
#loc578 = loc(fused[#loc140, #loc141])
#loc579 = loc(fused[#loc142, #loc139])
#loc580 = loc(fused[#loc145, #loc146])
#loc581 = loc(fused[#loc147, #loc148])
#loc582 = loc(fused[#loc149, #loc146])
#loc583 = loc(fused[#loc154, #loc152])
#loc584 = loc(fused[#loc155, #loc156])
#loc585 = loc(fused[#loc157, #loc158])
#loc586 = loc(fused[#loc160, #loc161])
#loc587 = loc(fused[#loc162, #loc163])
#loc588 = loc(fused[#loc164, #loc165])
#loc589 = loc(fused[#loc168, #loc169])
#loc590 = loc(fused[#loc167, #loc169])
#loc591 = loc(fused[#loc166, #loc165])
#loc592 = loc(fused[#loc170, #loc171])
#loc593 = loc(fused[#loc172, #loc173])
#loc594 = loc(fused[#loc174, #loc171])
#loc595 = loc(fused[#loc178, #loc179])
#loc596 = loc(fused[#loc181, #loc180])
#loc597 = loc(fused[#loc182, #loc183])
#loc598 = loc(fused[#loc185, #loc179])
#loc599 = loc(fused[#loc187, #loc186])
#loc600 = loc(fused[#loc191, #loc190])
#loc601 = loc(fused[#loc192, #loc193])
#loc602 = loc(fused[#loc194, #loc195])
#loc603 = loc(fused[#loc196, #loc197, #loc198, #loc193])
#loc604 = loc(fused[#loc200, #loc199])
#loc605 = loc(fused[#loc203, #loc204])
#loc606 = loc(fused[#loc206, #loc205])
#loc607 = loc(fused[#loc207, #loc208])
#loc608 = loc(fused[#loc210, #loc204])
#loc609 = loc(fused[#loc216, #loc215])
#loc610 = loc(fused[#loc220, #loc221])
#loc611 = loc(fused[#loc222, #loc223])
#loc612 = loc(fused[#loc224, #loc225])
#loc613 = loc(fused[#loc226, #loc227])
#loc614 = loc(fused[#loc228, #loc229])
#loc615 = loc(fused[#loc234, #loc235])
#loc618 = loc(fused[#loc245, #loc246])
#loc619 = loc(fused[#loc249, #loc250])
#loc620 = loc(fused[#loc253, #loc252])
#loc621 = loc(fused[#loc254, #loc255])
#loc622 = loc(fused[#loc256, #loc257])
#loc623 = loc(fused[#loc258, #loc259])
#loc624 = loc(fused[#loc262, #loc260])
#loc625 = loc(fused[#loc264, #loc263])
#loc626 = loc(fused[#loc266, #loc265])
#loc627 = loc(fused[#loc267, #loc268])
#loc628 = loc(fused[#loc269, #loc270])
#loc629 = loc(fused[#loc271, #loc272])
#loc630 = loc(fused[#loc273, #loc274])
#loc631 = loc(fused[#loc275, #loc276])
#loc632 = loc(fused[#loc279, #loc280])
#loc633 = loc(fused[#loc278, #loc280])
#loc634 = loc(fused[#loc277, #loc276])
#loc635 = loc(fused[#loc281, #loc282])
#loc636 = loc(fused[#loc283, #loc284])
#loc637 = loc(fused[#loc285, #loc282])
#loc638 = loc(fused[#loc289, #loc290])
#loc639 = loc(fused[#loc292, #loc291])
#loc640 = loc(fused[#loc293, #loc294])
#loc641 = loc(fused[#loc296, #loc290])
#loc642 = loc(fused[#loc298, #loc297])
#loc643 = loc(fused[#loc302, #loc301])
#loc644 = loc(fused[#loc303, #loc304])
#loc645 = loc(fused[#loc305, #loc306])
#loc646 = loc(fused[#loc307, #loc308, #loc309, #loc304])
#loc647 = loc(fused[#loc311, #loc310])
#loc648 = loc(fused[#loc314, #loc315])
#loc649 = loc(fused[#loc317, #loc316])
#loc650 = loc(fused[#loc318, #loc319])
#loc651 = loc(fused[#loc321, #loc315])
#loc652 = loc(fused[#loc327, #loc326])
#loc653 = loc(fused[#loc333, #loc334])
#loc654 = loc(fused[#loc335, #loc336])
#loc655 = loc(fused[#loc337, #loc338])
#loc656 = loc(fused[#loc341, #loc339])
#loc657 = loc(fused[#loc342, #loc343])
#loc658 = loc(fused[#loc344, #loc345])
#loc659 = loc(fused[#loc346, #loc347])
#loc660 = loc(fused[#loc348, #loc349])
#loc661 = loc(fused[#loc350, #loc351])
#loc662 = loc(fused[#loc352, #loc353])
#loc663 = loc(fused[#loc354, #loc355])
#loc664 = loc(fused[#loc360, #loc361])
#loc665 = loc(fused[#loc362, #loc363])
#loc666 = loc(fused[#loc364, #loc365])
#loc667 = loc(fused[#loc366, #loc363])
#loc668 = loc(fused[#loc368, #loc369])
#loc669 = loc(fused[#loc371, #loc372])
#loc670 = loc(fused[#loc373, #loc374])
#loc671 = loc(fused[#loc376, #loc375])
#loc672 = loc(fused[#loc378, #loc377])
#loc673 = loc(fused[#loc381, #loc382])
#loc674 = loc(fused[#loc383, #loc384])
#loc675 = loc(fused[#loc386, #loc387])
#loc676 = loc(fused[#loc388, #loc389])
#loc677 = loc(fused[#loc390, #loc391])
#loc678 = loc(fused[#loc392, #loc384])
#loc679 = loc(fused[#loc394, #loc395])
#loc680 = loc(fused[#loc398, #loc399])
#loc681 = loc(fused[#loc400, #loc395])
#loc682 = loc(fused[#loc406, #loc407])
#loc683 = loc(fused[#loc408, #loc409])
#loc684 = loc(fused[#loc410, #loc411])
#loc685 = loc(fused[#loc412, #loc409])
#loc686 = loc(fused[#loc416, #loc417])
#loc687 = loc(fused[#loc420, #loc421])
#loc688 = loc(fused[#loc422, #loc423])
#loc689 = loc(fused[#loc424, #loc425])
#loc690 = loc(fused[#loc427, #loc428])
#loc691 = loc(fused[#loc429, #loc423])
#loc692 = loc(fused[#loc433, #loc431])
#loc693 = loc(fused[#loc436, #loc437])
#loc694 = loc(fused[#loc439, #loc440])
#loc695 = loc(fused[#loc441, #loc442])
#loc696 = loc(fused[#loc443, #loc440])
#loc697 = loc(fused[#loc446, #loc447])
#loc698 = loc(fused[#loc448, #loc449])
#loc699 = loc(fused[#loc450, #loc447])
#loc700 = loc(fused[#loc454, #loc453])
#loc701 = loc(fused[#loc455, #loc456])
#loc702 = loc(fused[#loc457, #loc458])
#loc703 = loc(fused[#loc459, #loc460])
#loc704 = loc(fused[#loc461, #loc462])
#loc705 = loc(fused[#loc463, #loc464])
#loc706 = loc(fused[#loc467, #loc468])
#loc707 = loc(fused[#loc466, #loc468])
#loc708 = loc(fused[#loc465, #loc464])
#loc709 = loc(fused[#loc469, #loc470])
#loc710 = loc(fused[#loc471, #loc472])
#loc711 = loc(fused[#loc473, #loc470])
#loc712 = loc(fused[#loc477, #loc478])
#loc713 = loc(fused[#loc480, #loc479])
#loc714 = loc(fused[#loc481, #loc482])
#loc715 = loc(fused[#loc484, #loc478])
#loc716 = loc(fused[#loc486, #loc485])
#loc717 = loc(fused[#loc490, #loc489])
#loc718 = loc(fused[#loc491, #loc492])
#loc719 = loc(fused[#loc493, #loc494])
#loc720 = loc(fused[#loc496, #loc498])
#loc721 = loc(fused[#loc499, #loc500, #loc501, #loc492])
#loc722 = loc(fused[#loc503, #loc502])
#loc723 = loc(fused[#loc506, #loc507])
#loc724 = loc(fused[#loc509, #loc508])
#loc725 = loc(fused[#loc510, #loc511])
#loc726 = loc(fused[#loc513, #loc507])
#loc727 = loc(fused[#loc519, #loc518])
