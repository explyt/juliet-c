!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":28:70)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":28:77)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":53:74)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":53:81)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":90:10)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":90:14)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":90:20)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":90:32)
#loc127 = loc(fused[#loc13, #loc14])
#loc142 = loc(fused[#loc53, #loc54])
#loc149 = loc(fused[#loc79, #loc80])
#loc150 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc121)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc122)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc123)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc125)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc13, #loc14])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc122)
    cir.copy %2 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc122)
    %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc18)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc20)
    %6 = cir.call @strcpy(%4, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc18)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc22)
    %8 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc23)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc23)
    cir.br ^bb2 loc(#loc17)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc12)
  } loc(#loc126)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc130)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc33)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc35)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc36)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc36)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc134)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc135)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc35)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc139)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc46)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc48)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc46)
    cir.br ^bb3 loc(#loc42)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc42)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_badSink(%16) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.return loc(#loc30)
  } loc(#loc131)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc53, #loc54])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc121)
    cir.copy %2 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc121)
    %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc58)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
    %6 = cir.call @strcpy(%4, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc58)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc63)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
    cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
    cir.br ^bb2 loc(#loc57)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc52)
  } loc(#loc141)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc66)
  } loc(#loc144)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc146)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.return %17 : !s32i loc(#loc153)
  } loc(#loc148)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc101)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc103)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc104)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc104)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc104)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc157)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc158)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc162)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc116)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc118)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc116)
    cir.br ^bb3 loc(#loc112)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc112)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_goodG2BSink(%18) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.return loc(#loc98)
  } loc(#loc154)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":56:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":56:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":31:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":31:29)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":28:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":37:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":29:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":30:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":36:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":33:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":33:16)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":33:22)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":34:19)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":34:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":35:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":35:14)
#loc25 = loc("/usr/include/stdlib.h":672:1)
#loc26 = loc("/usr/include/stdlib.h":672:45)
#loc27 = loc("/usr/include/stdlib.h":756:1)
#loc28 = loc("/usr/include/stdlib.h":756:70)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":39:1)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":47:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":41:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":41:12)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":42:12)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":42:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:20)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:27)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:30)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:41)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:42)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:17)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:23)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:24)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:30)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":46:69)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":46:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":53:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":62:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":54:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":55:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":61:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":58:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":58:16)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":58:22)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":59:19)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":59:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":60:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":60:14)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":75:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":78:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":77:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":77:13)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":95:15)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":97:15)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":100:15)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":102:15)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":90:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":105:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":91:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":93:27)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":93:22)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":93:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":95:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":96:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":96:66)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":97:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":100:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":101:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":101:65)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":102:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":104:12)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":104:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":65:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":73:1)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":67:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":67:12)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":68:12)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":68:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:20)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:28)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:31)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:34)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:45)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:46)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:33)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:17)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:23)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:24)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:30)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:29)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":72:73)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":72:5)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc9, #loc10])
#loc126 = loc(fused[#loc11, #loc12])
#loc128 = loc(fused[#loc16, #loc17])
#loc129 = loc(fused[#loc25, #loc26])
#loc130 = loc(fused[#loc27, #loc28])
#loc131 = loc(fused[#loc29, #loc30])
#loc132 = loc(fused[#loc31, #loc32])
#loc133 = loc(fused[#loc34, #loc33])
#loc134 = loc(fused[#loc37, #loc38])
#loc135 = loc(fused[#loc36, #loc38])
#loc136 = loc(fused[#loc35, #loc39])
#loc137 = loc(fused[#loc40, #loc39])
#loc138 = loc(fused[#loc41, #loc42])
#loc139 = loc(fused[#loc43, #loc44])
#loc140 = loc(fused[#loc45, #loc42])
#loc141 = loc(fused[#loc51, #loc52])
#loc143 = loc(fused[#loc56, #loc57])
#loc144 = loc(fused[#loc65, #loc66])
#loc145 = loc(fused[#loc67, #loc68])
#loc146 = loc(fused[#loc69, #loc70])
#loc147 = loc(fused[#loc71, #loc72])
#loc148 = loc(fused[#loc77, #loc78])
#loc151 = loc(fused[#loc88, #loc89])
#loc152 = loc(fused[#loc92, #loc93])
#loc153 = loc(fused[#loc96, #loc95])
#loc154 = loc(fused[#loc97, #loc98])
#loc155 = loc(fused[#loc99, #loc100])
#loc156 = loc(fused[#loc102, #loc101])
#loc157 = loc(fused[#loc106, #loc107])
#loc158 = loc(fused[#loc108, #loc107])
#loc159 = loc(fused[#loc103, #loc109])
#loc160 = loc(fused[#loc110, #loc109])
#loc161 = loc(fused[#loc111, #loc112])
#loc162 = loc(fused[#loc113, #loc114])
#loc163 = loc(fused[#loc115, #loc112])
