!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc221)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc222)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc223)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc224)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc225)
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc226)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc14)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc227)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_char_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc230)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc230)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc21)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc233)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc30)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc31)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc31)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc234)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc235)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc236)
          cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
          cir.scope {
            %27 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc238)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc38)
            cir.if %31 {
              %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
              %33 = cir.const #cir.int<1> : !s32i loc(#loc41)
              %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc42)
              cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
            } loc(#loc239)
          } loc(#loc237)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc43)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc9)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc9)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc46)
          %18 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc47)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
          %21 = cir.const #cir.int<130000> : !s32i loc(#loc49)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc49)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc240)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc241)
          %25 = cir.call @realloc(%20, %24) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc242)
          cir.store %26, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
          cir.scope {
            %27 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc245)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc59)
            cir.if %31 {
              %32 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc61)
              %33 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
              %34 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc14)
              %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc14)
              %36 = cir.call @strcpy(%33, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc61)
              %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
              cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc64)
              %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc65)
              %39 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
              cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
            } loc(#loc246)
          } loc(#loc244)
        } loc(#loc232)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc248)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc249)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc73)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc74)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc74)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc250)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc251)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc73)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc252)
          cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
          cir.scope {
            %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc80)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !s32i loc(#loc254)
            %35 = cir.cast(int_to_bool, %34 : !s32i), !cir.bool loc(#loc81)
            cir.if %35 {
              %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc83)
              %37 = cir.const #cir.int<1> : !s32i loc(#loc84)
              %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc85)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc83)
            } loc(#loc255)
          } loc(#loc253)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc86)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc88)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc88)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc86)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc90)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc91)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc93)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc93)
          %24 = cir.const #cir.int<1> : !u64i loc(#loc256)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc257)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc258)
          cir.store %27, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc102)
            %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s8i>, !s32i loc(#loc261)
            %35 = cir.cast(int_to_bool, %34 : !s32i), !cir.bool loc(#loc103)
            cir.if %35 {
              %36 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
              cir.store %36, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc263)
              %37 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc107)
              %38 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
              %39 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc109)
              %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc109)
              %41 = cir.call @strcpy(%38, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
              %42 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
              cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc111)
            } loc(#loc262)
          } loc(#loc260)
          %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc112)
          %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
          cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
        } loc(#loc247)
      } loc(#loc231)
    } loc(#loc229)
    cir.return loc(#loc18)
  } loc(#loc228)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_char_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc265)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc116)
    cir.return loc(#loc115)
  } loc(#loc264)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc268)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc268)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc122)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc122)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc271)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc272)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc133)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc134)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc134)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc273)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc274)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc275)
          cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
          cir.scope {
            %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !s32i loc(#loc277)
            %35 = cir.cast(int_to_bool, %34 : !s32i), !cir.bool loc(#loc141)
            cir.if %35 {
              %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
              %37 = cir.const #cir.int<1> : !s32i loc(#loc144)
              %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc145)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc143)
            } loc(#loc278)
          } loc(#loc276)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc146)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc148)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc148)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc150)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc151)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc153)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc153)
          %24 = cir.const #cir.int<1> : !u64i loc(#loc279)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc280)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc281)
          cir.store %27, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc282)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc162)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
            %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s8i>, !s32i loc(#loc284)
            %35 = cir.cast(int_to_bool, %34 : !s32i), !cir.bool loc(#loc163)
            cir.if %35 {
              %36 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
              cir.store %36, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
              %37 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc167)
              %38 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
              %39 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc169)
              %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc169)
              %41 = cir.call @strcpy(%38, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc167)
              %42 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
              cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc171)
            } loc(#loc285)
          } loc(#loc283)
          %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc172)
          %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc173)
          cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc172)
        } loc(#loc270)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc288)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc289)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc180)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc181)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc181)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc290)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc291)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc180)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc292)
          cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
          cir.scope {
            %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc187)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc187)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !s32i loc(#loc294)
            %35 = cir.cast(int_to_bool, %34 : !s32i), !cir.bool loc(#loc188)
            cir.if %35 {
              %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc190)
              %37 = cir.const #cir.int<1> : !s32i loc(#loc191)
              %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc192)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc190)
            } loc(#loc295)
          } loc(#loc293)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc193)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc195)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc195)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc193)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc197)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc198)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc199)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc200)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc200)
          %24 = cir.const #cir.int<1> : !u64i loc(#loc296)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc297)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc198)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc298)
          cir.store %27, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc209)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
            %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s8i>, !s32i loc(#loc301)
            %35 = cir.cast(int_to_bool, %34 : !s32i), !cir.bool loc(#loc210)
            cir.if %35 {
              %36 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
              cir.store %36, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
              %37 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc214)
              %38 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
              %39 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc216)
              %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc216)
              %41 = cir.call @strcpy(%38, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc214)
              %42 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
              cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc218)
            } loc(#loc302)
          } loc(#loc300)
          %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc219)
          %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc220)
          cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc219)
        } loc(#loc287)
      } loc(#loc269)
    } loc(#loc267)
    cir.return loc(#loc119)
  } loc(#loc266)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":32:26)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":683:1)
#loc13 = loc("/usr/include/stdlib.h":684:14)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":39:30)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":24:1)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":67:1)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":26:5)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":66:5)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":26:8)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":26:33)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":27:5)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":44:5)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":46:5)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":28:9)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":43:9)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:13)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:58)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:35)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:42)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:46)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:57)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:13)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:41)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:17)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:25)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:22)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:31)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:32)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:38)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:37)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":32:13)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":32:20)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":33:23)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":33:13)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:28)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:36)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:43)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:51)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:62)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:42)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:63)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:13)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":36:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":42:13)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":36:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":36:25)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":36:22)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":37:13)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":39:17)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":39:24)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":40:27)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":40:17)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":41:17)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":41:22)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":47:9)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":65:9)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:13)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:58)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":50:13)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":50:20)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:35)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:42)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:46)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:57)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:13)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:41)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:17)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:25)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:22)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:31)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:32)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:38)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:37)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":52:13)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":52:20)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":52:26)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":53:23)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":53:13)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:31)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:39)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:46)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:54)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:65)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:45)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:66)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:13)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":57:13)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":63:13)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":57:17)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":57:28)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":57:25)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":58:13)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":59:24)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":59:17)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":61:17)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":61:24)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":61:30)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":62:27)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":62:17)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":64:13)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":64:18)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":122:1)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":125:1)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":124:5)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":124:11)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":74:1)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":120:1)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":76:5)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":119:5)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":76:8)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":76:33)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":77:5)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":97:5)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":99:5)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":78:9)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":96:9)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:13)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:58)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":81:13)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":81:20)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:35)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:42)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:46)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:57)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:13)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:41)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:17)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:25)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:22)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:31)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:32)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:38)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:37)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":83:13)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":83:20)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":83:26)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":84:23)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":84:13)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:31)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:39)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:46)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:54)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:65)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:45)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:66)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:13)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":88:13)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":94:13)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":88:17)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":88:28)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":88:25)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":89:13)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":90:24)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":90:17)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":92:17)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":92:24)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":92:30)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":93:27)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":93:17)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":95:13)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":95:18)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":100:9)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":118:9)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:13)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:58)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":103:13)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":103:20)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:35)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:42)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:46)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:57)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:13)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:41)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:17)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:25)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:22)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:31)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:32)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:38)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:37)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":105:13)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":105:20)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":105:26)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":106:23)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":106:13)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:31)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:39)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:46)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:54)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:65)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:45)
#loc204 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:66)
#loc205 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:13)
#loc206 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":110:13)
#loc207 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":116:13)
#loc208 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":110:17)
#loc209 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":110:28)
#loc210 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":110:25)
#loc211 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":111:13)
#loc212 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":112:24)
#loc213 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":112:17)
#loc214 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":114:17)
#loc215 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":114:24)
#loc216 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":114:30)
#loc217 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":115:27)
#loc218 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":115:17)
#loc219 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":117:13)
#loc220 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":117:18)
#loc221 = loc(fused[#loc1, #loc2])
#loc222 = loc(fused[#loc3, #loc4])
#loc223 = loc(fused[#loc5, #loc6])
#loc224 = loc(fused[#loc7, #loc8])
#loc225 = loc(fused[#loc10, #loc11])
#loc226 = loc(fused[#loc12, #loc13])
#loc227 = loc(fused[#loc15, #loc16])
#loc228 = loc(fused[#loc17, #loc18])
#loc229 = loc(fused[#loc19, #loc20])
#loc230 = loc(fused[#loc21, #loc22])
#loc231 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc232 = loc(fused[#loc26, #loc27])
#loc233 = loc(fused[#loc28, #loc29])
#loc234 = loc(fused[#loc32, #loc33])
#loc235 = loc(fused[#loc31, #loc33])
#loc236 = loc(fused[#loc30, #loc29])
#loc237 = loc(fused[#loc34, #loc35])
#loc238 = loc(fused[#loc36, #loc37])
#loc239 = loc(fused[#loc39, #loc35])
#loc240 = loc(fused[#loc50, #loc51])
#loc241 = loc(fused[#loc52, #loc51])
#loc242 = loc(fused[#loc47, #loc53])
#loc243 = loc(fused[#loc54, #loc53])
#loc244 = loc(fused[#loc55, #loc56])
#loc245 = loc(fused[#loc57, #loc58])
#loc246 = loc(fused[#loc60, #loc56])
#loc247 = loc(fused[#loc67, #loc68])
#loc248 = loc(fused[#loc69, #loc70])
#loc249 = loc(fused[#loc71, #loc72])
#loc250 = loc(fused[#loc75, #loc76])
#loc251 = loc(fused[#loc74, #loc76])
#loc252 = loc(fused[#loc73, #loc70])
#loc253 = loc(fused[#loc77, #loc78])
#loc254 = loc(fused[#loc79, #loc80])
#loc255 = loc(fused[#loc82, #loc78])
#loc256 = loc(fused[#loc94, #loc95])
#loc257 = loc(fused[#loc96, #loc95])
#loc258 = loc(fused[#loc91, #loc97])
#loc259 = loc(fused[#loc98, #loc97])
#loc260 = loc(fused[#loc99, #loc100])
#loc261 = loc(fused[#loc101, #loc102])
#loc262 = loc(fused[#loc104, #loc100])
#loc263 = loc(fused[#loc106, #loc105])
#loc264 = loc(fused[#loc114, #loc115])
#loc265 = loc(fused[#loc116, #loc117])
#loc266 = loc(fused[#loc118, #loc119])
#loc267 = loc(fused[#loc120, #loc121])
#loc268 = loc(fused[#loc122, #loc123])
#loc269 = loc(fused[#loc124, #loc125, #loc126, #loc121])
#loc270 = loc(fused[#loc127, #loc128])
#loc271 = loc(fused[#loc129, #loc130])
#loc272 = loc(fused[#loc131, #loc132])
#loc273 = loc(fused[#loc135, #loc136])
#loc274 = loc(fused[#loc134, #loc136])
#loc275 = loc(fused[#loc133, #loc130])
#loc276 = loc(fused[#loc137, #loc138])
#loc277 = loc(fused[#loc139, #loc140])
#loc278 = loc(fused[#loc142, #loc138])
#loc279 = loc(fused[#loc154, #loc155])
#loc280 = loc(fused[#loc156, #loc155])
#loc281 = loc(fused[#loc151, #loc157])
#loc282 = loc(fused[#loc158, #loc157])
#loc283 = loc(fused[#loc159, #loc160])
#loc284 = loc(fused[#loc161, #loc162])
#loc285 = loc(fused[#loc164, #loc160])
#loc286 = loc(fused[#loc166, #loc165])
#loc287 = loc(fused[#loc174, #loc175])
#loc288 = loc(fused[#loc176, #loc177])
#loc289 = loc(fused[#loc178, #loc179])
#loc290 = loc(fused[#loc182, #loc183])
#loc291 = loc(fused[#loc181, #loc183])
#loc292 = loc(fused[#loc180, #loc177])
#loc293 = loc(fused[#loc184, #loc185])
#loc294 = loc(fused[#loc186, #loc187])
#loc295 = loc(fused[#loc189, #loc185])
#loc296 = loc(fused[#loc201, #loc202])
#loc297 = loc(fused[#loc203, #loc202])
#loc298 = loc(fused[#loc198, #loc204])
#loc299 = loc(fused[#loc205, #loc204])
#loc300 = loc(fused[#loc206, #loc207])
#loc301 = loc(fused[#loc208, #loc209])
#loc302 = loc(fused[#loc211, #loc207])
#loc303 = loc(fused[#loc213, #loc212])
