!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc106)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc107)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_execlp_02_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc108)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc109)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc11)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc111)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc16)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc108)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_execlp_02_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc108)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc108)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %7 ^bb2, ^bb9 loc(#loc119)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc120)
  ^bb3:  // pred: ^bb2
    %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc34)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc34)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc114)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc11)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc11)
    %13 = cir.call @getenv(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
    %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc122)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc123)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc42)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc45)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc47)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %26 = cir.binop(sub, %24, %25) : !u64i loc(#loc124)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc49)
    %29 = cir.binop(sub, %26, %28) : !u64i loc(#loc125)
    %30 = cir.call @strncat(%21, %22, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc33)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc29)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc29)
  ^bb10:  // pred: ^bb9
    %31 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc16)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc16)
    %33 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc50)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc50)
    %35 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc17)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc17)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
    %39 = cir.call @execlp(%32, %34, %36, %37, %38) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc53)
    cir.return loc(#loc19)
  } loc(#loc113)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc128)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc62)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc107)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc107)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc107)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc135)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb4 loc(#loc76)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc79)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc65)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc65)
    %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc79)
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc81)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc81)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc82)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc82)
    %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc83)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc83)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
    %21 = cir.call @execlp(%14, %16, %18, %19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc86)
    cir.return loc(#loc67)
  } loc(#loc131)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc106)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc106)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc106)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc95)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc97)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc99)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc99)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
    cir.br ^bb3 loc(#loc94)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc94)
  ^bb4:  // pred: ^bb3
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc100)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc100)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc101)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc101)
    %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc102)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc102)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
    %19 = cir.call @execlp(%12, %14, %16, %17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc105)
    cir.return loc(#loc88)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_02.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":108:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":108:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":86:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":86:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":56:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":56:28)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdlib.h":773:1)
#loc10 = loc("/usr/include/stdlib.h":773:50)
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":63:41)
#loc12 = loc("/usr/include/string.h":152:1)
#loc13 = loc("/usr/include/string.h":153:29)
#loc14 = loc("/usr/include/unistd.h":605:1)
#loc15 = loc("/usr/include/unistd.h":606:14)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":75:12)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":75:38)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":53:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":76:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":62:13)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":62:41)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":63:13)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":63:53)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":55:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":55:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":57:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":57:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":58:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":71:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":58:8)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":59:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":60:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":70:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":62:30)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":62:37)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":63:34)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":65:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":69:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":65:17)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":65:32)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":66:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":68:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":68:25)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":68:30)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":68:29)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":68:39)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":68:52)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":68:56)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":68:64)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":75:25)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":75:52)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":75:66)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":75:5)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":121:1)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":125:1)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":123:5)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":123:14)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":124:5)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":124:14)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc61 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":91:19)
#loc63 = loc("/usr/include/string.h":149:1)
#loc64 = loc("/usr/include/string.h":150:14)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":96:22)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":83:1)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":102:1)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":85:5)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":85:12)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":87:12)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":87:5)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":88:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":97:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":88:8)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":89:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":92:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":94:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":91:9)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":96:9)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":96:16)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":101:12)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":101:25)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":101:38)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":101:52)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":101:66)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":101:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":105:1)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":119:1)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":107:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":107:12)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":109:12)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":109:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":110:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":114:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":110:8)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":111:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":113:9)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":113:16)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":113:22)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":118:12)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":118:25)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":118:38)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":118:52)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":118:66)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_execlp_02.c":118:5)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc5, #loc6])
#loc109 = loc(fused[#loc7, #loc8])
#loc110 = loc(fused[#loc9, #loc10])
#loc111 = loc(fused[#loc12, #loc13])
#loc112 = loc(fused[#loc14, #loc15])
#loc113 = loc(fused[#loc18, #loc19])
#loc114 = loc(fused[#loc20, #loc21])
#loc115 = loc(fused[#loc22, #loc23])
#loc116 = loc(fused[#loc24, #loc25])
#loc117 = loc(fused[#loc27, #loc26])
#loc118 = loc(fused[#loc28, #loc29])
#loc119 = loc(fused[#loc31, #loc29])
#loc120 = loc(fused[#loc32, #loc33])
#loc121 = loc(fused[#loc37, #loc38])
#loc122 = loc(fused[#loc39, #loc40])
#loc123 = loc(fused[#loc41, #loc38])
#loc124 = loc(fused[#loc47, #loc48])
#loc125 = loc(fused[#loc47, #loc49])
#loc126 = loc(fused[#loc54, #loc55])
#loc127 = loc(fused[#loc56, #loc57])
#loc128 = loc(fused[#loc58, #loc59])
#loc129 = loc(fused[#loc60, #loc61])
#loc130 = loc(fused[#loc63, #loc64])
#loc131 = loc(fused[#loc66, #loc67])
#loc132 = loc(fused[#loc68, #loc69])
#loc133 = loc(fused[#loc71, #loc70])
#loc134 = loc(fused[#loc72, #loc73])
#loc135 = loc(fused[#loc75, #loc76, #loc77, #loc73])
#loc136 = loc(fused[#loc87, #loc88])
#loc137 = loc(fused[#loc89, #loc90])
#loc138 = loc(fused[#loc92, #loc91])
#loc139 = loc(fused[#loc93, #loc94])
#loc140 = loc(fused[#loc96, #loc94])
