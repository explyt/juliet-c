!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":96:10)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":96:14)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":96:20)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":96:32)
#loc130 = loc(fused[#loc48, #loc49])
#loc131 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc113)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc116)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc117)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc15)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc18)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc119)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc19)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc20)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc120)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc21)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc25)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.store %17, %1 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc29)
    cir.br ^bb2 loc(#loc27)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc7)
  } loc(#loc114)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc123)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc126)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc127)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc45)
  cir.func @main(%arg0: !s32i loc(fused[#loc48, #loc49]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc50, #loc51])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc53)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc54)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc54)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc55)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc42)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_31_good() : () -> () loc(#loc57)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc44)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_31_bad() : () -> () loc(#loc61)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.return %17 : !s32i loc(#loc134)
  } loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc136)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc137)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc138)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc76)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc66)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc66)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc79)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc140)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc80)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc81)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc141)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc82)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc88)
    cir.br ^bb2 loc(#loc86)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc68)
  } loc(#loc135)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc145)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc146)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc147)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc98)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc100)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc100)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc101)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc102)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc149)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc103)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc104)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc150)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc105)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc109)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    cir.store %17, %1 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.br ^bb2 loc(#loc111)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc90)
  } loc(#loc144)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_31.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:17)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":31:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":44:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":39:9)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":39:24)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":40:9)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":40:20)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":33:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":33:9)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":34:13)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":34:12)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":34:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:39)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:46)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:55)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:63)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:12)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:5)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":35:71)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":37:11)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":37:5)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":38:5)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":43:5)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":42:15)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":42:9)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":82:1)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":86:1)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":84:5)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":84:13)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":85:5)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":85:13)
#loc36 = loc("/usr/include/stdlib.h":575:1)
#loc37 = loc("/usr/include/stdlib.h":575:41)
#loc38 = loc("/usr/include/time.h":76:1)
#loc39 = loc("/usr/include/time.h":76:38)
#loc40 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":101:15)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":103:15)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":106:15)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":108:15)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":96:1)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":111:1)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":97:1)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":99:27)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":99:22)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":99:5)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":101:5)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":102:5)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":102:59)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":103:5)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":106:5)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":107:5)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":107:58)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":108:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":110:12)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":110:5)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:17)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":51:1)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":63:1)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":58:9)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":58:24)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":59:9)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":59:20)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":53:5)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":53:9)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":54:13)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":54:12)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":54:5)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:40)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:47)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:56)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:64)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:12)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:5)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":56:72)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":57:5)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":62:5)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":61:15)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":61:9)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":66:1)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":80:1)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":74:9)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":74:24)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":75:9)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":75:20)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":68:5)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":68:9)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":69:13)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":69:12)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":69:5)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:17)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:39)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:46)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:55)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:63)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:12)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:5)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":70:71)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":72:11)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":72:5)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":73:5)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_31.c":79:5)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc4, #loc5])
#loc114 = loc(fused[#loc6, #loc7])
#loc115 = loc(fused[#loc8, #loc9])
#loc116 = loc(fused[#loc10, #loc11])
#loc117 = loc(fused[#loc12, #loc13])
#loc118 = loc(fused[#loc16, #loc14])
#loc119 = loc(fused[#loc17, #loc18])
#loc120 = loc(fused[#loc19, #loc20])
#loc121 = loc(fused[#loc22, #loc23])
#loc122 = loc(fused[#loc26, #loc27])
#loc123 = loc(fused[#loc30, #loc31])
#loc124 = loc(fused[#loc32, #loc33])
#loc125 = loc(fused[#loc34, #loc35])
#loc126 = loc(fused[#loc36, #loc37])
#loc127 = loc(fused[#loc38, #loc39])
#loc128 = loc(fused[#loc40, #loc41])
#loc129 = loc(fused[#loc46, #loc47])
#loc132 = loc(fused[#loc57, #loc58])
#loc133 = loc(fused[#loc61, #loc62])
#loc134 = loc(fused[#loc65, #loc64])
#loc135 = loc(fused[#loc67, #loc68])
#loc136 = loc(fused[#loc69, #loc70])
#loc137 = loc(fused[#loc71, #loc72])
#loc138 = loc(fused[#loc73, #loc74])
#loc139 = loc(fused[#loc77, #loc75])
#loc140 = loc(fused[#loc78, #loc79])
#loc141 = loc(fused[#loc80, #loc81])
#loc142 = loc(fused[#loc83, #loc84])
#loc143 = loc(fused[#loc85, #loc86])
#loc144 = loc(fused[#loc89, #loc90])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc93, #loc94])
#loc147 = loc(fused[#loc95, #loc96])
#loc148 = loc(fused[#loc99, #loc97])
#loc149 = loc(fused[#loc101, #loc102])
#loc150 = loc(fused[#loc103, #loc104])
#loc151 = loc(fused[#loc106, #loc107])
#loc152 = loc(fused[#loc110, #loc111])
