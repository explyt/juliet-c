!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc212)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc213)
  cir.func private  @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc214)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc215)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc216)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc217)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc16)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc219)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc222)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc223)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc28)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc224)
    cir.goto "source" loc(#loc225)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc32)
    %5 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc222)
    cir.store %5, %1 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc222)
    cir.scope {
      %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc35)
      %7 = cir.const #cir.int<3> : !s32i loc(#loc36)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc36)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc36)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc36)
      %11 = cir.const #cir.int<2> : !s32i loc(#loc36)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc36)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc36)
      %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc36)
      %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc213)
      %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
      %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
      %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc227)
      %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc40)
      cir.if %21 {
        %22 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc44)
        %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc45)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc47)
        %26 = cir.call @strtoul(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc44)
        cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc229)
      } else {
        %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
        cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc50)
      } loc(#loc228)
    } loc(#loc226)
    cir.goto "sink" loc(#loc230)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc53)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc56)
      %7 = cir.const #cir.int<5> : !u64i loc(#loc232)
      %8 = cir.cmp(gt, %6, %7) : !u64i, !s32i loc(#loc233)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc59)
      cir.if %9 {
        %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc63)
        %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
        %12 = cir.const #cir.int<1> : !u64i loc(#loc235)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc236)
        %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc63)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc237)
        cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
        cir.scope {
          %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc72)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc240)
          %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc73)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc75)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc76)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc77)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
          } loc(#loc241)
        } loc(#loc239)
        %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc78)
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
        %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc16)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc16)
        %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc78)
        %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
        cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc81)
        %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc82)
        %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
        cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc82)
      } else {
        %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc19)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc19)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc84)
      } loc(#loc234)
    } loc(#loc231)
    cir.return loc(#loc21)
  } loc(#loc220)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc244)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc86)
  } loc(#loc242)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc91)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc247)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc248)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc100)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    cir.goto "source" loc(#loc250)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc104)
    %5 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc247)
    cir.store %5, %1 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc247)
    cir.scope {
      %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc107)
      %7 = cir.const #cir.int<3> : !s32i loc(#loc108)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc108)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc108)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc108)
      %11 = cir.const #cir.int<2> : !s32i loc(#loc108)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc108)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc108)
      %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc108)
      %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc213)
      %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
      %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc110)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
      %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc252)
      %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc112)
      cir.if %21 {
        %22 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc116)
        %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc117)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc119)
        %26 = cir.call @strtoul(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc116)
        cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc254)
      } else {
        %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc122)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc122)
        cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc123)
      } loc(#loc253)
    } loc(#loc251)
    cir.goto "sink" loc(#loc255)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc126)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc129)
      %7 = cir.const #cir.int<5> : !u64i loc(#loc257)
      %8 = cir.cmp(gt, %6, %7) : !u64i, !s32i loc(#loc258)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc132)
      %10 = cir.ternary(%9, true {
        %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc134)
        %12 = cir.const #cir.int<100> : !s32i loc(#loc135)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc135)
        %14 = cir.cmp(lt, %11, %13) : !u64i, !s32i loc(#loc259)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc136)
        %16 = cir.ternary(%15, true {
          %17 = cir.const #true loc(#loc133)
          cir.yield %17 : !cir.bool loc(#loc133)
        }, false {
          %17 = cir.const #false loc(#loc133)
          cir.yield %17 : !cir.bool loc(#loc133)
        }) : (!cir.bool) -> !cir.bool loc(#loc133)
        cir.yield %16 : !cir.bool loc(#loc133)
      }, false {
        %11 = cir.const #false loc(#loc133)
        cir.yield %11 : !cir.bool loc(#loc133)
      }) : (!cir.bool) -> !cir.bool loc(#loc133)
      cir.if %10 {
        %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc140)
        %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc141)
        %13 = cir.const #cir.int<1> : !u64i loc(#loc261)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc262)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc140)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc263)
        cir.store %16, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
        cir.scope {
          %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !s32i loc(#loc266)
          %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc150)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc152)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc153)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc154)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc152)
          } loc(#loc267)
        } loc(#loc265)
        %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc155)
        %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
        %19 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc157)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc157)
        %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
        %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
        cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc159)
        %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc160)
        %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
        cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc160)
      } else {
        %11 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc91)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc162)
      } loc(#loc260)
    } loc(#loc256)
    cir.return loc(#loc93)
  } loc(#loc245)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc269)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc270)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc169)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc271)
    cir.goto "source" loc(#loc272)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc173)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc174)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc174)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc273)
    cir.goto "sink" loc(#loc274)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc178)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc181)
      %7 = cir.const #cir.int<5> : !u64i loc(#loc276)
      %8 = cir.cmp(gt, %6, %7) : !u64i, !s32i loc(#loc277)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc184)
      cir.if %9 {
        %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc188)
        %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc189)
        %12 = cir.const #cir.int<1> : !u64i loc(#loc279)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc280)
        %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc188)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc281)
        cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc282)
        cir.scope {
          %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc197)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc284)
          %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc198)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc200)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc201)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc202)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc200)
          } loc(#loc285)
        } loc(#loc283)
        %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc203)
        %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
        %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc205)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc205)
        %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc203)
        %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
        cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc207)
        %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc208)
        %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc209)
        cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc208)
      } else {
        %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc210)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc210)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc211)
      } loc(#loc278)
    } loc(#loc275)
    cir.return loc(#loc164)
  } loc(#loc268)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":181:1)
#loc6 = loc("/usr/include/stdlib.h":183:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":47:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/string.h":141:1)
#loc15 = loc("/usr/include/string.h":142:14)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":62:30)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":68:23)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":30:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":71:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":32:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":32:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":38:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":38:45)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":53:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":53:16)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":34:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":34:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":35:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":35:10)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":36:1)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":40:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":48:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":40:19)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":40:32)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":40:49)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":40:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":40:59)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":40:56)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":41:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":44:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":46:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":43:20)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":43:28)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":43:41)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":43:47)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":43:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":43:48)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":47:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":50:5)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":50:10)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":51:1)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":57:9)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":69:9)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":57:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":57:20)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":57:39)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":57:18)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":58:9)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":65:9)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":67:9)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":59:32)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":59:39)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":59:44)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":59:55)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":59:56)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":59:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":60:13)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":60:45)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":60:17)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":60:29)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":60:26)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":60:35)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":60:36)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":60:42)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":60:41)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":62:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":62:20)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":63:23)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":63:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":64:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":64:18)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":68:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":154:1)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":158:1)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":156:5)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":156:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":157:5)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":157:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":116:23)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":78:1)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":119:1)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":80:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":80:12)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":86:9)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":86:45)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":101:9)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":101:16)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":82:12)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":82:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":83:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":83:10)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":84:1)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":88:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":96:9)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":88:19)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":88:32)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":88:49)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":88:13)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":88:59)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":88:56)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":89:9)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":92:9)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":94:9)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":91:20)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":91:28)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":91:41)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":91:47)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":91:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":91:48)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":95:23)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":95:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":98:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":98:10)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":99:1)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":105:9)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":117:9)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":105:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":105:20)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":105:39)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":105:18)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":105:41)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":105:44)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":105:51)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":105:49)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":106:9)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":113:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":115:9)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":107:32)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":107:39)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":107:44)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":107:55)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":107:56)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":107:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":108:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":108:45)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":108:17)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":108:29)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":108:26)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":108:35)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":108:36)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":108:42)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":108:41)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":110:13)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":110:20)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":110:30)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":111:23)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":111:13)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":112:13)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":112:18)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":116:13)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":122:1)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":152:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":124:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":124:12)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":134:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":134:16)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":126:12)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":126:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":127:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":127:10)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":128:1)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":130:12)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":130:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":131:5)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":131:10)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":132:1)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":138:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":150:9)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":138:13)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":138:20)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":138:39)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":138:18)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":139:9)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":146:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":148:9)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":140:32)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":140:39)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":140:44)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":140:55)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":140:56)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":140:13)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":141:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":141:45)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":141:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":141:29)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":141:26)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":141:35)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":141:36)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":141:42)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":141:41)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":143:13)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":143:20)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":143:30)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":144:23)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":144:13)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":145:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":145:18)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":149:23)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_18.c":149:13)
#loc212 = loc(fused[#loc1, #loc2])
#loc213 = loc(fused[#loc3, #loc4])
#loc214 = loc(fused[#loc5, #loc6])
#loc215 = loc(fused[#loc7, #loc8])
#loc216 = loc(fused[#loc10, #loc11])
#loc217 = loc(fused[#loc12, #loc13])
#loc218 = loc(fused[#loc14, #loc15])
#loc219 = loc(fused[#loc17, #loc18])
#loc220 = loc(fused[#loc20, #loc21])
#loc221 = loc(fused[#loc22, #loc23])
#loc222 = loc(fused[#loc24, #loc25])
#loc223 = loc(fused[#loc26, #loc27])
#loc224 = loc(fused[#loc29, #loc28])
#loc225 = loc(fused[#loc30, #loc31])
#loc226 = loc(fused[#loc33, #loc34])
#loc227 = loc(fused[#loc38, #loc39])
#loc228 = loc(fused[#loc41, #loc42, #loc43, #loc34])
#loc229 = loc(fused[#loc48, #loc49])
#loc230 = loc(fused[#loc51, #loc52])
#loc231 = loc(fused[#loc54, #loc55])
#loc232 = loc(fused[#loc57, #loc58])
#loc233 = loc(fused[#loc56, #loc58])
#loc234 = loc(fused[#loc60, #loc61, #loc62, #loc55])
#loc235 = loc(fused[#loc65, #loc66])
#loc236 = loc(fused[#loc64, #loc66])
#loc237 = loc(fused[#loc63, #loc67])
#loc238 = loc(fused[#loc68, #loc67])
#loc239 = loc(fused[#loc69, #loc70])
#loc240 = loc(fused[#loc71, #loc72])
#loc241 = loc(fused[#loc74, #loc70])
#loc242 = loc(fused[#loc85, #loc86])
#loc243 = loc(fused[#loc87, #loc88])
#loc244 = loc(fused[#loc89, #loc90])
#loc245 = loc(fused[#loc92, #loc93])
#loc246 = loc(fused[#loc94, #loc95])
#loc247 = loc(fused[#loc96, #loc97])
#loc248 = loc(fused[#loc98, #loc99])
#loc249 = loc(fused[#loc101, #loc100])
#loc250 = loc(fused[#loc102, #loc103])
#loc251 = loc(fused[#loc105, #loc106])
#loc252 = loc(fused[#loc110, #loc111])
#loc253 = loc(fused[#loc113, #loc114, #loc115, #loc106])
#loc254 = loc(fused[#loc120, #loc121])
#loc255 = loc(fused[#loc124, #loc125])
#loc256 = loc(fused[#loc127, #loc128])
#loc257 = loc(fused[#loc130, #loc131])
#loc258 = loc(fused[#loc129, #loc131])
#loc259 = loc(fused[#loc134, #loc135])
#loc260 = loc(fused[#loc137, #loc138, #loc139, #loc128])
#loc261 = loc(fused[#loc142, #loc143])
#loc262 = loc(fused[#loc141, #loc143])
#loc263 = loc(fused[#loc140, #loc144])
#loc264 = loc(fused[#loc145, #loc144])
#loc265 = loc(fused[#loc146, #loc147])
#loc266 = loc(fused[#loc148, #loc149])
#loc267 = loc(fused[#loc151, #loc147])
#loc268 = loc(fused[#loc163, #loc164])
#loc269 = loc(fused[#loc165, #loc166])
#loc270 = loc(fused[#loc167, #loc168])
#loc271 = loc(fused[#loc170, #loc169])
#loc272 = loc(fused[#loc171, #loc172])
#loc273 = loc(fused[#loc175, #loc174])
#loc274 = loc(fused[#loc176, #loc177])
#loc275 = loc(fused[#loc179, #loc180])
#loc276 = loc(fused[#loc182, #loc183])
#loc277 = loc(fused[#loc181, #loc183])
#loc278 = loc(fused[#loc185, #loc186, #loc187, #loc180])
#loc279 = loc(fused[#loc190, #loc191])
#loc280 = loc(fused[#loc189, #loc191])
#loc281 = loc(fused[#loc188, #loc192])
#loc282 = loc(fused[#loc193, #loc192])
#loc283 = loc(fused[#loc194, #loc195])
#loc284 = loc(fused[#loc196, #loc197])
#loc285 = loc(fused[#loc199, #loc195])
