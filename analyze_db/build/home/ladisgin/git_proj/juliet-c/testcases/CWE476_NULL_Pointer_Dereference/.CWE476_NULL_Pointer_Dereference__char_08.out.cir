!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc45 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":166:10)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":166:14)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":166:20)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":166:32)
#loc196 = loc(fused[#loc45, #loc46])
#loc197 = loc(fused[#loc47, #loc48])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printHexCharLine(!s8i) loc(#loc177)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc181)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc9)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
      cir.if %3 {
        %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc12)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
      } loc(#loc182)
    } loc(#loc180)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc185)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc16)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc20)
        %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc21)
        %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc19)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc22)
      } loc(#loc186)
    } loc(#loc184)
    cir.return loc(#loc4)
  } loc(#loc178)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc24)
  } loc(#loc187)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc192)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc193)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc42)
  cir.func @main(%arg0: !s32i loc(fused[#loc45, #loc46]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc47, #loc48])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc197)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc49)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc50)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc51)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc51)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc52)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc39)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %8 = cir.get_global @CWE476_NULL_Pointer_Dereference__char_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call @CWE476_NULL_Pointer_Dereference__char_08_good() : () -> () loc(#loc54)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc40)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc41)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %13 = cir.get_global @CWE476_NULL_Pointer_Dereference__char_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call @CWE476_NULL_Pointer_Dereference__char_08_bad() : () -> () loc(#loc58)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    cir.return %17 : !s32i loc(#loc200)
  } loc(#loc195)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc65)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.return %2 : !s32i loc(#loc202)
  } loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc206)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc75)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc75)
      cir.if %3 {
        %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
      } loc(#loc207)
    } loc(#loc205)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc210)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc82)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc82)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc87)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
          %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!s8i>, !cir.bool loc(#loc213)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc96)
            %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc97)
            %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc95)
            cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc98)
          } else {
            %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc68)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc68)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc99)
          } loc(#loc214)
        } loc(#loc212)
      } loc(#loc211)
    } loc(#loc209)
    cir.return loc(#loc70)
  } loc(#loc203)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc101)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc102)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    cir.return %2 : !s32i loc(#loc216)
  } loc(#loc215)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc220)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc110)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc110)
      cir.if %3 {
        %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc113)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
      } loc(#loc221)
    } loc(#loc219)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc224)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc117)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc117)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
          %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!s8i>, !cir.bool loc(#loc227)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc128)
            %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc129)
            %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc127)
            cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc130)
          } else {
            %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc131)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc131)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          } loc(#loc228)
        } loc(#loc226)
      } loc(#loc225)
    } loc(#loc223)
    cir.return loc(#loc105)
  } loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Good\00" : !cir.array<!s8i x 5>> : !cir.array<!s8i x 5> {alignment = 1 : i64} loc(#loc133)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc230)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc232)
      %2 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc140)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc140)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc145)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc145)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc146)
      } else {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc133)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc133)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
      } loc(#loc233)
    } loc(#loc231)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc236)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc150)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc150)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc154)
        %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc155)
        %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc153)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc156)
      } loc(#loc237)
    } loc(#loc235)
    cir.return loc(#loc135)
  } loc(#loc229)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc241)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc163)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc163)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc166)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc166)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
      } loc(#loc242)
    } loc(#loc240)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc245)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc170)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc170)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc174)
        %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc175)
        %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc173)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc176)
      } loc(#loc246)
    } loc(#loc244)
    cir.return loc(#loc158)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":37:1)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":51:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":39:5)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":39:12)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":40:5)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":44:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":40:8)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":40:26)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":41:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":43:16)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":43:9)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":45:5)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":50:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":45:8)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":45:26)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":46:5)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":49:26)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":49:31)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":49:32)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":49:9)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":149:1)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":155:1)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":151:5)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":151:14)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":152:5)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":152:14)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":153:5)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":153:14)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":154:5)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":154:14)
#loc33 = loc("/usr/include/stdlib.h":575:1)
#loc34 = loc("/usr/include/stdlib.h":575:41)
#loc35 = loc("/usr/include/time.h":76:1)
#loc36 = loc("/usr/include/time.h":76:38)
#loc37 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":171:15)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":173:15)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":176:15)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":178:15)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":166:1)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":181:1)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":167:1)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":169:27)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":169:22)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":169:5)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":171:5)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":172:5)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":172:51)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":173:5)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":176:5)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":177:5)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":177:50)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":178:5)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":180:12)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":180:5)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":25:1)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":28:1)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":27:12)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":27:5)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":69:19)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":81:23)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":58:1)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":84:1)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":60:5)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":60:12)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":61:5)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":65:5)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":61:8)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":61:26)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":62:5)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":64:16)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":64:9)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":66:5)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":83:5)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":66:8)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":66:27)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":67:5)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":70:5)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":72:5)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":69:9)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":74:9)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":82:9)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":74:13)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":74:21)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":75:9)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":78:9)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":80:9)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":77:30)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":77:35)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":77:36)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":77:13)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":81:13)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":30:1)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":33:1)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":32:12)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":32:5)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":87:1)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":108:1)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":89:5)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":89:12)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":90:5)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":94:5)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":90:8)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":90:26)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":91:5)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":93:16)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":93:9)
#loc115 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":95:5)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":107:5)
#loc117 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":95:8)
#loc118 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":95:26)
#loc119 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":96:5)
#loc120 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":98:9)
#loc121 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":106:9)
#loc122 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":98:13)
#loc123 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":98:21)
#loc124 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":99:9)
#loc125 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":102:9)
#loc126 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":104:9)
#loc127 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":101:30)
#loc128 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":101:35)
#loc129 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":101:36)
#loc130 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":101:13)
#loc131 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":105:23)
#loc132 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":105:13)
#loc133 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":122:16)
#loc134 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":111:1)
#loc135 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":130:1)
#loc136 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":113:5)
#loc137 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":113:12)
#loc138 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":114:5)
#loc139 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":123:5)
#loc140 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":114:8)
#loc141 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":114:27)
#loc142 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":115:5)
#loc143 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":118:5)
#loc144 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":120:5)
#loc145 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":117:19)
#loc146 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":117:9)
#loc147 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":122:9)
#loc148 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":124:5)
#loc149 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":129:5)
#loc150 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":124:8)
#loc151 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":124:26)
#loc152 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":125:5)
#loc153 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":128:26)
#loc154 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":128:31)
#loc155 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":128:32)
#loc156 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":128:9)
#loc157 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":133:1)
#loc158 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":147:1)
#loc159 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":135:5)
#loc160 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":135:12)
#loc161 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":136:5)
#loc162 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":140:5)
#loc163 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":136:8)
#loc164 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":136:26)
#loc165 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":137:5)
#loc166 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":139:16)
#loc167 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":139:9)
#loc168 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":141:5)
#loc169 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":146:5)
#loc170 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":141:8)
#loc171 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":141:26)
#loc172 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":142:5)
#loc173 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":145:26)
#loc174 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":145:31)
#loc175 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":145:32)
#loc176 = loc("CWE476_NULL_Pointer_Dereference__char_08.c":145:9)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc3, #loc4])
#loc179 = loc(fused[#loc5, #loc6])
#loc180 = loc(fused[#loc7, #loc8])
#loc181 = loc(fused[#loc9, #loc10])
#loc182 = loc(fused[#loc11, #loc8])
#loc183 = loc(fused[#loc13, #loc12])
#loc184 = loc(fused[#loc14, #loc15])
#loc185 = loc(fused[#loc16, #loc17])
#loc186 = loc(fused[#loc18, #loc15])
#loc187 = loc(fused[#loc23, #loc24])
#loc188 = loc(fused[#loc25, #loc26])
#loc189 = loc(fused[#loc27, #loc28])
#loc190 = loc(fused[#loc29, #loc30])
#loc191 = loc(fused[#loc31, #loc32])
#loc192 = loc(fused[#loc33, #loc34])
#loc193 = loc(fused[#loc35, #loc36])
#loc194 = loc(fused[#loc37, #loc38])
#loc195 = loc(fused[#loc43, #loc44])
#loc198 = loc(fused[#loc54, #loc55])
#loc199 = loc(fused[#loc58, #loc59])
#loc200 = loc(fused[#loc62, #loc61])
#loc201 = loc(fused[#loc63, #loc64])
#loc202 = loc(fused[#loc66, #loc65])
#loc203 = loc(fused[#loc69, #loc70])
#loc204 = loc(fused[#loc71, #loc72])
#loc205 = loc(fused[#loc73, #loc74])
#loc206 = loc(fused[#loc75, #loc76])
#loc207 = loc(fused[#loc77, #loc74])
#loc208 = loc(fused[#loc79, #loc78])
#loc209 = loc(fused[#loc80, #loc81])
#loc210 = loc(fused[#loc82, #loc83])
#loc211 = loc(fused[#loc84, #loc85, #loc86, #loc81])
#loc212 = loc(fused[#loc88, #loc89])
#loc213 = loc(fused[#loc90, #loc91])
#loc214 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc215 = loc(fused[#loc100, #loc101])
#loc216 = loc(fused[#loc103, #loc102])
#loc217 = loc(fused[#loc104, #loc105])
#loc218 = loc(fused[#loc106, #loc107])
#loc219 = loc(fused[#loc108, #loc109])
#loc220 = loc(fused[#loc110, #loc111])
#loc221 = loc(fused[#loc112, #loc109])
#loc222 = loc(fused[#loc114, #loc113])
#loc223 = loc(fused[#loc115, #loc116])
#loc224 = loc(fused[#loc117, #loc118])
#loc225 = loc(fused[#loc119, #loc116])
#loc226 = loc(fused[#loc120, #loc121])
#loc227 = loc(fused[#loc122, #loc123])
#loc228 = loc(fused[#loc124, #loc125, #loc126, #loc121])
#loc229 = loc(fused[#loc134, #loc135])
#loc230 = loc(fused[#loc136, #loc137])
#loc231 = loc(fused[#loc138, #loc139])
#loc232 = loc(fused[#loc140, #loc141])
#loc233 = loc(fused[#loc142, #loc143, #loc144, #loc139])
#loc234 = loc(fused[#loc147, #loc133])
#loc235 = loc(fused[#loc148, #loc149])
#loc236 = loc(fused[#loc150, #loc151])
#loc237 = loc(fused[#loc152, #loc149])
#loc238 = loc(fused[#loc157, #loc158])
#loc239 = loc(fused[#loc159, #loc160])
#loc240 = loc(fused[#loc161, #loc162])
#loc241 = loc(fused[#loc163, #loc164])
#loc242 = loc(fused[#loc165, #loc162])
#loc243 = loc(fused[#loc167, #loc166])
#loc244 = loc(fused[#loc168, #loc169])
#loc245 = loc(fused[#loc170, #loc171])
#loc246 = loc(fused[#loc172, #loc169])
