!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":24:64)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":24:126)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":24:130)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":31:64)
#true = #cir.bool<true> : !cir.bool
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G = !cir.record<class "CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83::CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G" {!s32i} #cir.record.decl.ast>
#loc97 = loc(fused[#loc9, #loc10])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc94)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_8361CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2GC2Ei(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G> loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":24:64), %arg1: !s32i loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc8)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc97)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>> loc(#loc11)
    cir.store %arg1, %1 : !s32i, !cir.ptr<!s32i> loc(#loc11)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G> loc(#loc8)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G> -> !cir.ptr<!s32i> loc(#loc13)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %5 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc15)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc95)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc16)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G> -> !cir.ptr<!s32i> loc(#loc13)
    %11 = cir.call @__isoc23_fscanf(%7, %9, %10) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc15)
    cir.return loc(#loc7)
  } loc(#loc96)
  cir.func private @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_8361CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2GC1Ei(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>, !s32i) alias(@_ZN53CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_8361CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2GC2Ei) loc(#loc96)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc99)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc100)
  cir.func private @printIntLine(!s32i) loc(#loc101)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc25)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc103)
  cir.func @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_8361CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2GD2Ev(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G> loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":31:64)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc30)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>> loc(#loc31)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G> loc(#loc30)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc106)
      %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc107)
      %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc38)
      %5 = cir.const #cir.int<10> : !s32i loc(#loc39)
      %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc39)
      %7 = cir.const #cir.int<4> : !u64i loc(#loc108)
      %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc109)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc38)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc110)
      cir.store %10, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc107)
      cir.scope {
        %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc45)
        %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc112)
        cir.if %16 {
          %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc47)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc48)
          %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc49)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc47)
        } loc(#loc113)
      } loc(#loc111)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc52)
        cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc115)
        cir.for : cond {
          %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
          %16 = cir.const #cir.int<10> : !s32i loc(#loc55)
          %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc116)
          cir.condition(%17) loc(#loc116)
        } body {
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc57)
            %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
            %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc60)
            cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc118)
          } loc(#loc117)
          cir.yield loc(#loc51)
        } step {
          %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc61)
          %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc62)
          cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc119)
          cir.yield loc(#loc114)
        } loc(#loc114)
      } loc(#loc114)
      cir.scope {
        %14 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G> -> !cir.ptr<!s32i> loc(#loc13)
        %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc65)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc121)
        %18 = cir.ternary(%17, true {
          %19 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G> -> !cir.ptr<!s32i> loc(#loc13)
          %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc68)
          %21 = cir.const #cir.int<10> : !s32i loc(#loc69)
          %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc122)
          %23 = cir.ternary(%22, true {
            %24 = cir.const #true loc(#loc67)
            cir.yield %24 : !cir.bool loc(#loc67)
          }, false {
            %24 = cir.const #false loc(#loc67)
            cir.yield %24 : !cir.bool loc(#loc67)
          }) : (!cir.bool) -> !cir.bool loc(#loc67)
          cir.yield %23 : !cir.bool loc(#loc67)
        }, false {
          %19 = cir.const #false loc(#loc67)
          cir.yield %19 : !cir.bool loc(#loc67)
        }) : (!cir.bool) -> !cir.bool loc(#loc67)
        cir.if %18 {
          %19 = cir.const #cir.int<1> : !s32i loc(#loc74)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
          %21 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G> -> !cir.ptr<!s32i> loc(#loc13)
          %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc76)
          %23 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc77)
          cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc124)
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc80)
            cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc126)
            cir.for : cond {
              %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %26 = cir.const #cir.int<10> : !s32i loc(#loc83)
              %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc127)
              cir.condition(%27) loc(#loc127)
            } body {
              cir.scope {
                %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
                %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc87)
                %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc88)
              } loc(#loc128)
              cir.yield loc(#loc79)
            } step {
              %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %26 = cir.unary(inc, %25) nsw : !s32i, !s32i loc(#loc90)
              cir.store %26, %2 : !s32i, !cir.ptr<!s32i> loc(#loc129)
              cir.yield loc(#loc125)
            } loc(#loc125)
          } loc(#loc125)
        } else {
          %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc25)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc25)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc91)
        } loc(#loc123)
      } loc(#loc120)
      %11 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc92)
      %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc93)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc92)
    } loc(#loc105)
    cir.return loc(#loc29)
  } loc(#loc104)
  cir.func private @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_8361CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2GD1Ev(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G>) alias(@_ZN53CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_8361CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2GD2Ev) loc(#loc104)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":28:19)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":24:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":29:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":25:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":26:12)
#loc13 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83.h":56:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":26:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":28:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":28:12)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":54:23)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":31:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":58:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":32:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":33:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":57:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":34:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":34:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":35:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":35:54)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":35:31)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":35:38)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":35:43)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":35:53)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":36:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":36:39)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":36:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":36:23)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":36:29)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":36:30)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":36:36)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":36:35)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":38:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":41:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":38:18)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":38:14)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":38:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":38:25)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":39:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":40:25)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":40:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":40:20)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":40:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":38:30)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":38:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":43:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":55:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":43:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":43:21)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":43:23)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":43:26)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":43:34)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":43:36)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":44:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":51:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":53:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":45:28)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":45:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":45:20)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":45:24)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":47:13)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":50:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":47:21)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":47:17)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":47:24)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":47:28)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":48:13)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":49:30)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":49:37)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":49:38)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":49:17)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":47:33)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":47:32)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":54:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":56:9)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_83_goodB2G.cpp":56:14)
#loc94 = loc(fused[#loc1, #loc2])
#loc95 = loc(fused[#loc3, #loc4])
#loc96 = loc(fused[#loc6, #loc7])
#loc98 = loc(fused[#loc14, #loc12])
#loc99 = loc(fused[#loc17, #loc18])
#loc100 = loc(fused[#loc19, #loc20])
#loc101 = loc(fused[#loc21, #loc22])
#loc102 = loc(fused[#loc23, #loc24])
#loc103 = loc(fused[#loc26, #loc27])
#loc104 = loc(fused[#loc28, #loc29])
#loc105 = loc(fused[#loc32, #loc33])
#loc106 = loc(fused[#loc34, #loc35])
#loc107 = loc(fused[#loc36, #loc37])
#loc108 = loc(fused[#loc40, #loc41])
#loc109 = loc(fused[#loc39, #loc41])
#loc110 = loc(fused[#loc38, #loc37])
#loc111 = loc(fused[#loc42, #loc43])
#loc112 = loc(fused[#loc44, #loc45])
#loc113 = loc(fused[#loc46, #loc43])
#loc114 = loc(fused[#loc50, #loc51])
#loc115 = loc(fused[#loc53, #loc52])
#loc116 = loc(fused[#loc54, #loc55])
#loc117 = loc(fused[#loc56, #loc51])
#loc118 = loc(fused[#loc58, #loc57])
#loc119 = loc(fused[#loc62, #loc61])
#loc120 = loc(fused[#loc63, #loc64])
#loc121 = loc(fused[#loc65, #loc66])
#loc122 = loc(fused[#loc68, #loc70])
#loc123 = loc(fused[#loc71, #loc72, #loc73, #loc64])
#loc124 = loc(fused[#loc75, #loc74])
#loc125 = loc(fused[#loc78, #loc79])
#loc126 = loc(fused[#loc81, #loc80])
#loc127 = loc(fused[#loc82, #loc83])
#loc128 = loc(fused[#loc84, #loc79])
#loc129 = loc(fused[#loc90, #loc89])
