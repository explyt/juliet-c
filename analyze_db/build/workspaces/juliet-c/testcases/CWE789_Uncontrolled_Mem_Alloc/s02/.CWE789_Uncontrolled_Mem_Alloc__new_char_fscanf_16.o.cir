!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc149)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc151)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc10)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc13)
  cir.func @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc18)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc156)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc22)
        cir.condition(%4) loc(#loc22)
      } do {
        cir.scope {
          %3 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc24)
          %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc150)
          %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
          %8 = cir.call @__isoc23_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc24)
          cir.break loc(#loc26)
        } loc(#loc158)
        cir.yield loc(#loc21)
      } loc(#loc157)
    } loc(#loc157)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc29)
        cir.condition(%4) loc(#loc29)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc162)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc164)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc165)
              cir.if %6 {
                %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc43)
                %8 = cir.call @_Znam(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc44)
                %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
                cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
                %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc48)
                %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc10)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc10)
                %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
                %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc51)
                %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
                cir.delete.array %16 : <!s8i> loc(#loc52)
              } else {
                %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc13)
                %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc13)
                cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc53)
              } loc(#loc166)
            } loc(#loc163)
          } loc(#loc161)
          cir.break loc(#loc54)
        } loc(#loc160)
        cir.yield loc(#loc28)
      } loc(#loc159)
    } loc(#loc159)
    cir.return loc(#loc15)
  } loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc55)
  cir.func internal private @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc60)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc171)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc64)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc64)
        cir.condition(%4) loc(#loc64)
      } do {
        cir.scope {
          %3 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc66)
          %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc150)
          %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc68)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc68)
          %8 = cir.call @__isoc23_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc66)
          cir.break loc(#loc69)
        } loc(#loc173)
        cir.yield loc(#loc63)
      } loc(#loc172)
    } loc(#loc172)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc72)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc72)
        cir.condition(%4) loc(#loc72)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc177)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc80)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc179)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc180)
              %7 = cir.ternary(%6, true {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc84)
                %9 = cir.const #cir.int<100> : !s32i loc(#loc85)
                %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc85)
                %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc181)
                %12 = cir.ternary(%11, true {
                  %13 = cir.const #true loc(#loc83)
                  cir.yield %13 : !cir.bool loc(#loc83)
                }, false {
                  %13 = cir.const #false loc(#loc83)
                  cir.yield %13 : !cir.bool loc(#loc83)
                }) : (!cir.bool) -> !cir.bool loc(#loc83)
                cir.yield %12 : !cir.bool loc(#loc83)
              }, false {
                %8 = cir.const #false loc(#loc83)
                cir.yield %8 : !cir.bool loc(#loc83)
              }) : (!cir.bool) -> !cir.bool loc(#loc83)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc89)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc90)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
                cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc94)
                %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc96)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc96)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
                %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc98)
                %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
                cir.delete.array %17 : <!s8i> loc(#loc99)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc55)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc55)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc100)
              } loc(#loc182)
            } loc(#loc178)
          } loc(#loc176)
          cir.break loc(#loc101)
        } loc(#loc175)
        cir.yield loc(#loc71)
      } loc(#loc174)
    } loc(#loc174)
    cir.return loc(#loc57)
  } loc(#loc169)
  cir.func internal private @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc106)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc110)
        cir.condition(%4) loc(#loc110)
      } do {
        cir.scope {
          %3 = cir.const #cir.int<20> : !s32i loc(#loc112)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc112)
          cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc190)
          cir.break loc(#loc114)
        } loc(#loc189)
        cir.yield loc(#loc109)
      } loc(#loc188)
    } loc(#loc188)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc117)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc117)
        cir.condition(%4) loc(#loc117)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc194)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc125)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc196)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc197)
              cir.if %6 {
                %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc131)
                %8 = cir.call @_Znam(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc132)
                %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
                cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
                %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc136)
                %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc138)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc138)
                %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
                %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc140)
                %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
                cir.delete.array %16 : <!s8i> loc(#loc141)
              } else {
                %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc142)
                %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc142)
                cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc143)
              } loc(#loc198)
            } loc(#loc195)
          } loc(#loc193)
          cir.break loc(#loc144)
        } loc(#loc192)
        cir.yield loc(#loc116)
      } loc(#loc191)
    } loc(#loc191)
    cir.return loc(#loc103)
  } loc(#loc185)
  cir.func @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16L7goodB2GEv() : () -> () loc(#loc147)
    cir.call @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16L7goodG2BEv() : () -> () loc(#loc148)
    cir.return loc(#loc146)
  } loc(#loc201)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":38:23)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc8 = loc("/usr/include/string.h":141:1)
#loc9 = loc("/usr/include/string.h":142:14)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":52:34)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":58:27)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":30:1)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":63:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":32:5)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":32:12)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":34:12)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":34:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":35:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":40:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":35:11)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":36:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":38:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":38:16)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":39:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":41:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":62:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":41:11)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":42:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":43:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":60:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":44:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":44:20)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":48:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":59:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":48:17)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":48:24)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":48:43)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":49:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":55:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":57:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":50:37)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":30:6)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":50:28)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":50:41)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":50:17)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":52:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":52:24)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":53:27)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":53:17)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":54:27)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":58:17)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":61:9)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":98:27)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":70:1)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":103:1)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":72:5)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":72:12)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":74:12)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":74:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":75:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":80:5)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":75:11)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":76:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":78:9)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":78:16)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":78:23)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":79:9)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":81:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":102:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":81:11)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":82:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":83:9)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":100:9)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":84:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":84:20)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":88:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":99:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":88:17)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":88:24)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":88:43)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":88:45)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":88:48)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":88:55)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":89:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":95:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":97:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":90:37)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":70:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":90:28)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":90:41)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":90:17)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":92:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":92:24)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":92:34)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":93:27)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":93:17)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":94:27)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":98:17)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":101:9)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":106:1)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":139:1)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":108:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":108:12)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":110:12)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":110:5)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":111:5)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":116:5)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":111:11)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":112:5)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":114:16)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":114:9)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":115:9)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":117:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":138:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":117:11)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":118:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":119:9)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":136:9)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":120:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":120:20)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":124:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":135:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":124:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":124:24)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":124:43)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":125:13)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":131:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":133:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":126:37)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":106:13)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":126:28)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":126:41)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":126:17)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":128:17)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":128:24)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":128:34)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":129:27)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":129:17)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":130:27)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":134:27)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":134:17)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":137:9)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":141:1)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":145:1)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":143:5)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_16.cpp":144:5)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc6, #loc7])
#loc152 = loc(fused[#loc8, #loc9])
#loc153 = loc(fused[#loc11, #loc12])
#loc154 = loc(fused[#loc14, #loc15])
#loc155 = loc(fused[#loc16, #loc17])
#loc156 = loc(fused[#loc19, #loc18])
#loc157 = loc(fused[#loc20, #loc21])
#loc158 = loc(fused[#loc23, #loc21])
#loc159 = loc(fused[#loc27, #loc28])
#loc160 = loc(fused[#loc30, #loc28])
#loc161 = loc(fused[#loc31, #loc32])
#loc162 = loc(fused[#loc33, #loc34])
#loc163 = loc(fused[#loc35, #loc36])
#loc164 = loc(fused[#loc38, #loc39])
#loc165 = loc(fused[#loc37, #loc39])
#loc166 = loc(fused[#loc40, #loc41, #loc42, #loc36])
#loc167 = loc(fused[#loc45, #loc46])
#loc168 = loc(fused[#loc47, #loc46])
#loc169 = loc(fused[#loc56, #loc57])
#loc170 = loc(fused[#loc58, #loc59])
#loc171 = loc(fused[#loc61, #loc60])
#loc172 = loc(fused[#loc62, #loc63])
#loc173 = loc(fused[#loc65, #loc63])
#loc174 = loc(fused[#loc70, #loc71])
#loc175 = loc(fused[#loc73, #loc71])
#loc176 = loc(fused[#loc74, #loc75])
#loc177 = loc(fused[#loc76, #loc77])
#loc178 = loc(fused[#loc78, #loc79])
#loc179 = loc(fused[#loc81, #loc82])
#loc180 = loc(fused[#loc80, #loc82])
#loc181 = loc(fused[#loc84, #loc85])
#loc182 = loc(fused[#loc86, #loc87, #loc88, #loc79])
#loc183 = loc(fused[#loc91, #loc92])
#loc184 = loc(fused[#loc93, #loc92])
#loc185 = loc(fused[#loc102, #loc103])
#loc186 = loc(fused[#loc104, #loc105])
#loc187 = loc(fused[#loc107, #loc106])
#loc188 = loc(fused[#loc108, #loc109])
#loc189 = loc(fused[#loc111, #loc109])
#loc190 = loc(fused[#loc113, #loc112])
#loc191 = loc(fused[#loc115, #loc116])
#loc192 = loc(fused[#loc118, #loc116])
#loc193 = loc(fused[#loc119, #loc120])
#loc194 = loc(fused[#loc121, #loc122])
#loc195 = loc(fused[#loc123, #loc124])
#loc196 = loc(fused[#loc126, #loc127])
#loc197 = loc(fused[#loc125, #loc127])
#loc198 = loc(fused[#loc128, #loc129, #loc130, #loc124])
#loc199 = loc(fused[#loc133, #loc134])
#loc200 = loc(fused[#loc135, #loc134])
#loc201 = loc(fused[#loc145, #loc146])
