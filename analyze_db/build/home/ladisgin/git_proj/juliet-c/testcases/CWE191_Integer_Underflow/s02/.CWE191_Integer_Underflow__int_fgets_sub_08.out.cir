!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":215:10)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":215:14)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":215:20)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":215:32)
#loc290 = loc(fused[#loc74, #loc75])
#loc291 = loc(fused[#loc76, #loc77])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_sub_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc260)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc261)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc262)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc264)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_sub_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc266)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc269)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc20)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc20)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc272)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc272)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc272)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc30)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc30)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc30)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc30)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc30)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc30)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc30)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc274)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc276)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc41)
            } loc(#loc275)
          } loc(#loc273)
        } loc(#loc271)
      } loc(#loc270)
    } loc(#loc268)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc278)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc44)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc44)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc281)
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc51)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc281)
          %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc52)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc53)
        } loc(#loc280)
      } loc(#loc279)
    } loc(#loc277)
    cir.return loc(#loc13)
  } loc(#loc265)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_sub_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc283)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc284)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc285)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc286)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc55)
  } loc(#loc282)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc287)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc288)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc290)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc291)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_sub_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc292)
    cir.call @CWE191_Integer_Underflow__int_fgets_sub_08_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_sub_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc293)
    cir.call @CWE191_Integer_Underflow__int_fgets_sub_08_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    cir.return %17 : !s32i loc(#loc294)
  } loc(#loc289)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc93)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc94)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    cir.return %2 : !s32i loc(#loc296)
  } loc(#loc295)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc97)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc298)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc102)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc301)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc106)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc106)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc304)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc304)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc304)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc116)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc116)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc116)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc116)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc116)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc116)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc116)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc116)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc117)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc118)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc306)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc124)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc308)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc127)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc127)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc128)
            } loc(#loc307)
          } loc(#loc305)
        } loc(#loc303)
      } loc(#loc302)
    } loc(#loc300)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc310)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc131)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc131)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc96)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc96)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc136)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
          %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc140)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc140)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc140)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc140)
          %10 = cir.cmp(gt, %5, %9) : !s32i, !cir.bool loc(#loc313)
          cir.if %10 {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc315)
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc145)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc146)
            cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc315)
            %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc147)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc148)
          } else {
            %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc97)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc97)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc149)
          } loc(#loc314)
        } loc(#loc312)
      } loc(#loc311)
    } loc(#loc309)
    cir.return loc(#loc99)
  } loc(#loc297)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc152)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc317)
    cir.return %2 : !s32i loc(#loc317)
  } loc(#loc316)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc319)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc158)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc322)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc162)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc162)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc325)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc325)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc325)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc171)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc172)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc172)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc172)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc172)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc172)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc172)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc172)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc172)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc173)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc174)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc175)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc175)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc327)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc179)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc180)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc329)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc183)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc183)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc184)
            } loc(#loc328)
          } loc(#loc326)
        } loc(#loc324)
      } loc(#loc323)
    } loc(#loc321)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc331)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc187)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc187)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
          %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc193)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc193)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc193)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc193)
          %10 = cir.cmp(gt, %5, %9) : !s32i, !cir.bool loc(#loc334)
          cir.if %10 {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc336)
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc198)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc199)
            cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc336)
            %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc200)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc201)
          } else {
            %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc202)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc202)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc203)
          } loc(#loc335)
        } loc(#loc333)
      } loc(#loc332)
    } loc(#loc330)
    cir.return loc(#loc155)
  } loc(#loc318)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc338)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc208)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc341)
      %3 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc212)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc212)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc217)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc217)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc218)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc219)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc220)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc343)
      } loc(#loc342)
    } loc(#loc340)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc345)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc224)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc224)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc348)
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc230)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc231)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc348)
          %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc232)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc233)
        } loc(#loc347)
      } loc(#loc346)
    } loc(#loc344)
    cir.return loc(#loc205)
  } loc(#loc337)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc350)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc238)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc353)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc242)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc242)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc245)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc246)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc355)
      } loc(#loc354)
    } loc(#loc352)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc357)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc250)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc250)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc360)
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc257)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc256)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc257)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc360)
          %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc258)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc259)
        } loc(#loc359)
      } loc(#loc358)
    } loc(#loc356)
    cir.return loc(#loc235)
  } loc(#loc349)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_sub_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":54:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":37:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":66:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":39:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":39:9)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":41:12)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":41:5)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":42:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":57:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":42:8)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":42:26)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":43:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":44:9)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":56:9)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":45:13)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":45:49)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":47:13)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":55:13)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":47:23)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":47:36)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":47:53)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":47:17)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":47:63)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":48:13)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":51:13)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":53:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":50:29)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":50:24)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":50:17)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":50:40)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":54:17)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":58:5)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":65:5)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":58:8)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":58:26)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":59:5)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":60:9)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":64:9)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":62:13)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":62:33)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":62:26)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":63:26)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":63:13)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":198:1)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":204:1)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":200:5)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":200:14)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":201:5)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":201:14)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":202:5)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":202:14)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":203:5)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":203:14)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":220:15)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":222:15)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":225:15)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":227:15)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":215:1)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":230:1)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":216:1)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":218:27)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":218:22)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":218:5)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":220:5)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":221:5)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":221:53)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":222:5)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":225:5)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":226:5)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":226:52)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":227:5)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":229:12)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":229:5)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":25:1)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":28:1)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":27:12)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":27:5)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":97:19)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":109:23)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":73:1)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":112:1)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":75:5)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":75:9)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":77:12)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":77:5)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":78:5)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":93:5)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":78:8)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":78:26)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":79:5)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":80:9)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":92:9)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":81:13)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":81:49)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":83:13)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":91:13)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":83:23)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":83:36)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":83:53)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":83:17)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":83:63)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":84:13)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":87:13)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":89:13)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":86:29)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":86:24)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":86:17)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":86:40)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":90:27)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":90:17)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":94:5)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":111:5)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":94:8)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":94:27)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":95:5)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":98:5)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":100:5)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":97:9)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":102:9)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":110:9)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":102:13)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":102:20)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":103:9)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":106:9)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":108:9)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":104:13)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":104:33)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":104:26)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":105:26)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":105:13)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":109:13)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":30:1)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":33:1)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":32:12)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":32:5)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":115:1)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":149:1)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":117:5)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":117:9)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":119:12)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":119:5)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":120:5)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":135:5)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":120:8)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":120:26)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":121:5)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":122:9)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":134:9)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":123:13)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":123:49)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":125:13)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":133:13)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":125:23)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":125:36)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":125:53)
#loc174 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":125:17)
#loc175 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":125:63)
#loc176 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":126:13)
#loc177 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":129:13)
#loc178 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":131:13)
#loc179 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":128:29)
#loc180 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":128:24)
#loc181 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":128:17)
#loc182 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":128:40)
#loc183 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":132:27)
#loc184 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":132:17)
#loc185 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":136:5)
#loc186 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":148:5)
#loc187 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":136:8)
#loc188 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":136:26)
#loc189 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":137:5)
#loc190 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":139:9)
#loc191 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":147:9)
#loc192 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":139:13)
#loc193 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":139:20)
#loc194 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":140:9)
#loc195 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":143:9)
#loc196 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":145:9)
#loc197 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":141:13)
#loc198 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":141:33)
#loc199 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":141:26)
#loc200 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":142:26)
#loc201 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":142:13)
#loc202 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":146:23)
#loc203 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":146:13)
#loc204 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":152:1)
#loc205 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":175:1)
#loc206 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":154:5)
#loc207 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":154:9)
#loc208 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":156:12)
#loc209 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":156:5)
#loc210 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":157:5)
#loc211 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":166:5)
#loc212 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":157:8)
#loc213 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":157:27)
#loc214 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":158:5)
#loc215 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":161:5)
#loc216 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":163:5)
#loc217 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":160:19)
#loc218 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":160:9)
#loc219 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":165:17)
#loc220 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":165:16)
#loc221 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":165:9)
#loc222 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":167:5)
#loc223 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":174:5)
#loc224 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":167:8)
#loc225 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":167:26)
#loc226 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":168:5)
#loc227 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":169:9)
#loc228 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":173:9)
#loc229 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":171:13)
#loc230 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":171:33)
#loc231 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":171:26)
#loc232 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":172:26)
#loc233 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":172:13)
#loc234 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":178:1)
#loc235 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":196:1)
#loc236 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":180:5)
#loc237 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":180:9)
#loc238 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":182:12)
#loc239 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":182:5)
#loc240 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":183:5)
#loc241 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":187:5)
#loc242 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":183:8)
#loc243 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":183:26)
#loc244 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":184:5)
#loc245 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":186:17)
#loc246 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":186:16)
#loc247 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":186:9)
#loc248 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":188:5)
#loc249 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":195:5)
#loc250 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":188:8)
#loc251 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":188:26)
#loc252 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":189:5)
#loc253 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":190:9)
#loc254 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":194:9)
#loc255 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":192:13)
#loc256 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":192:33)
#loc257 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":192:26)
#loc258 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":193:26)
#loc259 = loc("CWE191_Integer_Underflow__int_fgets_sub_08.c":193:13)
#loc260 = loc(fused[#loc1, #loc2])
#loc261 = loc(fused[#loc3, #loc4])
#loc262 = loc(fused[#loc5, #loc6])
#loc263 = loc(fused[#loc7, #loc8])
#loc264 = loc(fused[#loc10, #loc11])
#loc265 = loc(fused[#loc12, #loc13])
#loc266 = loc(fused[#loc14, #loc15])
#loc267 = loc(fused[#loc17, #loc16])
#loc268 = loc(fused[#loc18, #loc19])
#loc269 = loc(fused[#loc20, #loc21])
#loc270 = loc(fused[#loc22, #loc19])
#loc271 = loc(fused[#loc23, #loc24])
#loc272 = loc(fused[#loc25, #loc26])
#loc273 = loc(fused[#loc27, #loc28])
#loc274 = loc(fused[#loc32, #loc33])
#loc275 = loc(fused[#loc34, #loc35, #loc36, #loc28])
#loc276 = loc(fused[#loc39, #loc40])
#loc277 = loc(fused[#loc42, #loc43])
#loc278 = loc(fused[#loc44, #loc45])
#loc279 = loc(fused[#loc46, #loc43])
#loc280 = loc(fused[#loc47, #loc48])
#loc281 = loc(fused[#loc49, #loc50])
#loc282 = loc(fused[#loc54, #loc55])
#loc283 = loc(fused[#loc56, #loc57])
#loc284 = loc(fused[#loc58, #loc59])
#loc285 = loc(fused[#loc60, #loc61])
#loc286 = loc(fused[#loc62, #loc63])
#loc287 = loc(fused[#loc64, #loc65])
#loc288 = loc(fused[#loc66, #loc67])
#loc289 = loc(fused[#loc72, #loc73])
#loc292 = loc(fused[#loc83, #loc84])
#loc293 = loc(fused[#loc87, #loc88])
#loc294 = loc(fused[#loc91, #loc90])
#loc295 = loc(fused[#loc92, #loc93])
#loc296 = loc(fused[#loc95, #loc94])
#loc297 = loc(fused[#loc98, #loc99])
#loc298 = loc(fused[#loc100, #loc101])
#loc299 = loc(fused[#loc103, #loc102])
#loc300 = loc(fused[#loc104, #loc105])
#loc301 = loc(fused[#loc106, #loc107])
#loc302 = loc(fused[#loc108, #loc105])
#loc303 = loc(fused[#loc109, #loc110])
#loc304 = loc(fused[#loc111, #loc112])
#loc305 = loc(fused[#loc113, #loc114])
#loc306 = loc(fused[#loc118, #loc119])
#loc307 = loc(fused[#loc120, #loc121, #loc122, #loc114])
#loc308 = loc(fused[#loc125, #loc126])
#loc309 = loc(fused[#loc129, #loc130])
#loc310 = loc(fused[#loc131, #loc132])
#loc311 = loc(fused[#loc133, #loc134, #loc135, #loc130])
#loc312 = loc(fused[#loc137, #loc138])
#loc313 = loc(fused[#loc139, #loc140])
#loc314 = loc(fused[#loc141, #loc142, #loc143, #loc138])
#loc315 = loc(fused[#loc144, #loc145])
#loc316 = loc(fused[#loc150, #loc151])
#loc317 = loc(fused[#loc153, #loc152])
#loc318 = loc(fused[#loc154, #loc155])
#loc319 = loc(fused[#loc156, #loc157])
#loc320 = loc(fused[#loc159, #loc158])
#loc321 = loc(fused[#loc160, #loc161])
#loc322 = loc(fused[#loc162, #loc163])
#loc323 = loc(fused[#loc164, #loc161])
#loc324 = loc(fused[#loc165, #loc166])
#loc325 = loc(fused[#loc167, #loc168])
#loc326 = loc(fused[#loc169, #loc170])
#loc327 = loc(fused[#loc174, #loc175])
#loc328 = loc(fused[#loc176, #loc177, #loc178, #loc170])
#loc329 = loc(fused[#loc181, #loc182])
#loc330 = loc(fused[#loc185, #loc186])
#loc331 = loc(fused[#loc187, #loc188])
#loc332 = loc(fused[#loc189, #loc186])
#loc333 = loc(fused[#loc190, #loc191])
#loc334 = loc(fused[#loc192, #loc193])
#loc335 = loc(fused[#loc194, #loc195, #loc196, #loc191])
#loc336 = loc(fused[#loc197, #loc198])
#loc337 = loc(fused[#loc204, #loc205])
#loc338 = loc(fused[#loc206, #loc207])
#loc339 = loc(fused[#loc209, #loc208])
#loc340 = loc(fused[#loc210, #loc211])
#loc341 = loc(fused[#loc212, #loc213])
#loc342 = loc(fused[#loc214, #loc215, #loc216, #loc211])
#loc343 = loc(fused[#loc221, #loc219])
#loc344 = loc(fused[#loc222, #loc223])
#loc345 = loc(fused[#loc224, #loc225])
#loc346 = loc(fused[#loc226, #loc223])
#loc347 = loc(fused[#loc227, #loc228])
#loc348 = loc(fused[#loc229, #loc230])
#loc349 = loc(fused[#loc234, #loc235])
#loc350 = loc(fused[#loc236, #loc237])
#loc351 = loc(fused[#loc239, #loc238])
#loc352 = loc(fused[#loc240, #loc241])
#loc353 = loc(fused[#loc242, #loc243])
#loc354 = loc(fused[#loc244, #loc241])
#loc355 = loc(fused[#loc247, #loc245])
#loc356 = loc(fused[#loc248, #loc249])
#loc357 = loc(fused[#loc250, #loc251])
#loc358 = loc(fused[#loc252, #loc249])
#loc359 = loc(fused[#loc253, #loc254])
#loc360 = loc(fused[#loc255, #loc256])
