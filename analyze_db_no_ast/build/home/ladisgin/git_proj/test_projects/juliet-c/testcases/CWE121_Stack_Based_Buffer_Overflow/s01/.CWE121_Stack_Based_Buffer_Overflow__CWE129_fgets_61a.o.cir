!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61b_badSource(!s32i) -> !s32i loc(#loc151)
  cir.func private  @printIntLine(!s32i) loc(#loc152)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %4 = cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61b_badSource(%3) : (!s32i) -> !s32i loc(#loc16)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc159)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc160)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc160)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc160)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc162)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc29)
        cir.if %11 {
          %12 = cir.const #cir.int<1> : !s32i loc(#loc33)
          %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
          %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc35)
          %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc35)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc164)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc38)
            cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc166)
            cir.for : cond {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc40)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc41)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc167)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc42)
              cir.condition(%20) loc(#loc42)
            } body {
              cir.scope {
                %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc44)
                %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc45)
                %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc45)
                %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc46)
              } loc(#loc168)
              cir.yield loc(#loc37)
            } step {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc47)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc48)
              cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc169)
              cir.yield loc(#loc165)
            } loc(#loc165)
          } loc(#loc165)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc7)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc49)
        } loc(#loc163)
      } loc(#loc161)
    } loc(#loc158)
    cir.return loc(#loc9)
  } loc(#loc154)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc170)
  cir.func private  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61b_goodG2BSource(!s32i) -> !s32i loc(#loc173)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc63)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %4 = cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61b_goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc66)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc179)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc180)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc180)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc180)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc78)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc182)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc79)
        cir.if %11 {
          %12 = cir.const #cir.int<1> : !s32i loc(#loc83)
          %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
          %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc85)
          %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc85)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc184)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
            cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc186)
            cir.for : cond {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc90)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc91)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc187)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc92)
              cir.condition(%20) loc(#loc92)
            } body {
              cir.scope {
                %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc95)
                %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc95)
                %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc96)
              } loc(#loc188)
              cir.yield loc(#loc87)
            } step {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc98)
              cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc189)
              cir.yield loc(#loc185)
            } loc(#loc185)
          } loc(#loc185)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc99)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc99)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc100)
        } loc(#loc183)
      } loc(#loc181)
    } loc(#loc178)
    cir.return loc(#loc59)
  } loc(#loc174)
  cir.func private  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61b_goodB2GSource(!s32i) -> !s32i loc(#loc190)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc103)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc109)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %4 = cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61b_goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc112)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc196)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc197)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc197)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc197)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc124)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc199)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc125)
        %12 = cir.ternary(%11, true {
          %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
          %14 = cir.const #cir.int<10> : !s32i loc(#loc128)
          %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc200)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc130)
          %17 = cir.ternary(%16, true {
            %18 = cir.const #true loc(#loc126)
            cir.yield %18 : !cir.bool loc(#loc126)
          }, false {
            %18 = cir.const #false loc(#loc126)
            cir.yield %18 : !cir.bool loc(#loc126)
          }) : (!cir.bool) -> !cir.bool loc(#loc126)
          cir.yield %17 : !cir.bool loc(#loc126)
        }, false {
          %13 = cir.const #false loc(#loc126)
          cir.yield %13 : !cir.bool loc(#loc126)
        }) : (!cir.bool) -> !cir.bool loc(#loc126)
        cir.if %12 {
          %13 = cir.const #cir.int<1> : !s32i loc(#loc134)
          %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %15 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc136)
          %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc136)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc202)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc139)
            cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc204)
            cir.for : cond {
              %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %19 = cir.const #cir.int<10> : !s32i loc(#loc142)
              %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc205)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc143)
              cir.condition(%21) loc(#loc143)
            } body {
              cir.scope {
                %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc146)
                %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc146)
                %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc147)
              } loc(#loc206)
              cir.yield loc(#loc138)
            } step {
              %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc148)
              %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc149)
              cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc207)
              cir.yield loc(#loc203)
            } loc(#loc203)
          } loc(#loc203)
        } else {
          %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc103)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc103)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc150)
        } loc(#loc201)
      } loc(#loc198)
    } loc(#loc195)
    cir.return loc(#loc105)
  } loc(#loc191)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":25:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":25:76)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":49:23)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":27:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":52:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":29:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":29:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":31:13)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":31:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":31:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":32:75)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":32:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":32:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":32:79)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":51:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":34:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":34:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":35:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":35:30)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":50:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":38:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":38:21)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":38:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":39:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":46:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":48:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":40:28)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":40:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":40:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":42:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":45:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":42:21)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":42:17)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":42:24)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":42:28)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":42:26)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":43:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":44:37)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":44:30)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":44:17)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":42:33)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":42:32)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":49:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":117:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":121:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":119:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":119:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":120:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":120:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":59:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":59:80)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":61:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":86:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":63:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":63:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":65:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":65:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":65:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":66:79)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":66:12)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":66:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":66:83)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":67:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":85:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":68:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":68:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":69:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":69:30)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":72:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":84:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":72:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":72:21)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":72:18)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":73:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":80:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":82:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":74:28)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":74:20)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":74:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":76:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":79:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":76:21)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":76:17)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":76:24)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":76:28)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":76:26)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":77:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":78:37)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":78:30)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":78:17)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":76:33)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":76:32)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":83:23)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":83:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":89:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":89:80)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":112:23)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":91:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":115:1)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":93:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":93:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":95:13)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":95:12)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":95:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":96:79)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":96:12)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":96:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":96:83)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":97:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":114:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":98:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":98:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":99:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":99:30)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":101:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":113:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":101:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":101:21)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":101:18)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":101:23)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":101:26)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":101:34)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":101:36)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":101:31)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":102:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":109:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":111:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":103:28)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":103:20)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":103:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":105:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":108:13)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":105:21)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":105:17)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":105:24)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":105:28)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":105:26)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":106:13)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":107:37)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":107:30)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":107:17)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":105:33)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":105:32)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c":112:13)
#loc151 = loc(fused[#loc1, #loc2])
#loc152 = loc(fused[#loc3, #loc4])
#loc153 = loc(fused[#loc5, #loc6])
#loc154 = loc(fused[#loc8, #loc9])
#loc155 = loc(fused[#loc10, #loc11])
#loc156 = loc(fused[#loc14, #loc12])
#loc157 = loc(fused[#loc17, #loc18])
#loc158 = loc(fused[#loc19, #loc20])
#loc159 = loc(fused[#loc21, #loc22])
#loc160 = loc(fused[#loc23, #loc24])
#loc161 = loc(fused[#loc25, #loc26])
#loc162 = loc(fused[#loc27, #loc28])
#loc163 = loc(fused[#loc30, #loc31, #loc32, #loc26])
#loc164 = loc(fused[#loc35, #loc33])
#loc165 = loc(fused[#loc36, #loc37])
#loc166 = loc(fused[#loc39, #loc38])
#loc167 = loc(fused[#loc40, #loc41])
#loc168 = loc(fused[#loc43, #loc37])
#loc169 = loc(fused[#loc48, #loc47])
#loc170 = loc(fused[#loc50, #loc51])
#loc171 = loc(fused[#loc52, #loc53])
#loc172 = loc(fused[#loc54, #loc55])
#loc173 = loc(fused[#loc56, #loc57])
#loc174 = loc(fused[#loc58, #loc59])
#loc175 = loc(fused[#loc60, #loc61])
#loc176 = loc(fused[#loc64, #loc62])
#loc177 = loc(fused[#loc67, #loc68])
#loc178 = loc(fused[#loc69, #loc70])
#loc179 = loc(fused[#loc71, #loc72])
#loc180 = loc(fused[#loc73, #loc74])
#loc181 = loc(fused[#loc75, #loc76])
#loc182 = loc(fused[#loc77, #loc78])
#loc183 = loc(fused[#loc80, #loc81, #loc82, #loc76])
#loc184 = loc(fused[#loc85, #loc83])
#loc185 = loc(fused[#loc86, #loc87])
#loc186 = loc(fused[#loc89, #loc88])
#loc187 = loc(fused[#loc90, #loc91])
#loc188 = loc(fused[#loc93, #loc87])
#loc189 = loc(fused[#loc98, #loc97])
#loc190 = loc(fused[#loc101, #loc102])
#loc191 = loc(fused[#loc104, #loc105])
#loc192 = loc(fused[#loc106, #loc107])
#loc193 = loc(fused[#loc110, #loc108])
#loc194 = loc(fused[#loc113, #loc114])
#loc195 = loc(fused[#loc115, #loc116])
#loc196 = loc(fused[#loc117, #loc118])
#loc197 = loc(fused[#loc119, #loc120])
#loc198 = loc(fused[#loc121, #loc122])
#loc199 = loc(fused[#loc123, #loc124])
#loc200 = loc(fused[#loc127, #loc129])
#loc201 = loc(fused[#loc131, #loc132, #loc133, #loc122])
#loc202 = loc(fused[#loc136, #loc134])
#loc203 = loc(fused[#loc137, #loc138])
#loc204 = loc(fused[#loc140, #loc139])
#loc205 = loc(fused[#loc141, #loc142])
#loc206 = loc(fused[#loc144, #loc138])
#loc207 = loc(fused[#loc149, #loc148])
