!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_memcpy_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @CWE126_Buffer_Overread__char_declare_memcpy_65b_badSink(!cir.ptr<!s8i>) loc(#loc77)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_memcpy_65_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc79)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc80)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc81)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc82)
    %4 = cir.get_global @CWE126_Buffer_Overread__char_declare_memcpy_65b_badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc8)
    cir.store %4, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc80)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc13)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc15)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc83)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc19)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc20)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc20)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc22)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc84)
    %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc24)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc25)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc25)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc85)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc29)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc30)
    %31 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc86)
    %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %33, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc35)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.call %34(%35) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc35)
    cir.return loc(#loc4)
  } loc(#loc78)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_memcpy_65_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc89)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc38)
  } loc(#loc88)
  cir.func private @CWE126_Buffer_Overread__char_declare_memcpy_65b_goodG2BSink(!cir.ptr<!s8i>) loc(#loc90)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc93)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc94)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc95)
    %4 = cir.get_global @CWE126_Buffer_Overread__char_declare_memcpy_65b_goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc48)
    cir.store %4, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc93)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc53)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc54)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc55)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc55)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc55)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc96)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc59)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc60)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc60)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc62)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc62)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc97)
    %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc64)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc65)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc65)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc98)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc69)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc70)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc70)
    %31 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc72)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc99)
    %33 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %33, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc75)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    cir.call %34(%35) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc75)
    cir.return loc(#loc44)
  } loc(#loc91)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_memcpy_65a.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":24:1)
#loc2 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":24:73)
#loc3 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":26:1)
#loc4 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":41:1)
#loc5 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":28:5)
#loc6 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":28:12)
#loc7 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":30:5)
#loc8 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":30:32)
#loc9 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":31:5)
#loc10 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":31:26)
#loc11 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":32:5)
#loc12 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":32:28)
#loc13 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":33:12)
#loc14 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":33:27)
#loc15 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":33:32)
#loc16 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":33:35)
#loc17 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":33:5)
#loc18 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":33:36)
#loc19 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":34:27)
#loc20 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":34:19)
#loc21 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":34:22)
#loc22 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":34:5)
#loc23 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":35:12)
#loc24 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":35:28)
#loc25 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":35:33)
#loc26 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":35:37)
#loc27 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":35:5)
#loc28 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":35:38)
#loc29 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":36:29)
#loc30 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":36:20)
#loc31 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":36:24)
#loc32 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":36:5)
#loc33 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":38:12)
#loc34 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":38:5)
#loc35 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":40:5)
#loc36 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":40:13)
#loc37 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":65:1)
#loc38 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":68:1)
#loc39 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":67:5)
#loc40 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":67:13)
#loc41 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":48:1)
#loc42 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":48:77)
#loc43 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":50:1)
#loc44 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":63:1)
#loc45 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":52:5)
#loc46 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":52:12)
#loc47 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":53:5)
#loc48 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":53:32)
#loc49 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":54:5)
#loc50 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":54:26)
#loc51 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":55:5)
#loc52 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":55:28)
#loc53 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":56:12)
#loc54 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":56:27)
#loc55 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":56:32)
#loc56 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":56:35)
#loc57 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":56:5)
#loc58 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":56:36)
#loc59 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":57:27)
#loc60 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":57:19)
#loc61 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":57:22)
#loc62 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":57:5)
#loc63 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":58:12)
#loc64 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":58:28)
#loc65 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":58:33)
#loc66 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":58:37)
#loc67 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":58:5)
#loc68 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":58:38)
#loc69 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":59:29)
#loc70 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":59:20)
#loc71 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":59:24)
#loc72 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":59:5)
#loc73 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":61:12)
#loc74 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":61:5)
#loc75 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":62:5)
#loc76 = loc("CWE126_Buffer_Overread__char_declare_memcpy_65a.c":62:13)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc11, #loc12])
#loc83 = loc(fused[#loc17, #loc18])
#loc84 = loc(fused[#loc22, #loc19])
#loc85 = loc(fused[#loc27, #loc28])
#loc86 = loc(fused[#loc32, #loc29])
#loc87 = loc(fused[#loc34, #loc33])
#loc88 = loc(fused[#loc37, #loc38])
#loc89 = loc(fused[#loc39, #loc40])
#loc90 = loc(fused[#loc41, #loc42])
#loc91 = loc(fused[#loc43, #loc44])
#loc92 = loc(fused[#loc45, #loc46])
#loc93 = loc(fused[#loc47, #loc48])
#loc94 = loc(fused[#loc49, #loc50])
#loc95 = loc(fused[#loc51, #loc52])
#loc96 = loc(fused[#loc57, #loc58])
#loc97 = loc(fused[#loc62, #loc59])
#loc98 = loc(fused[#loc67, #loc68])
#loc99 = loc(fused[#loc72, #loc69])
#loc100 = loc(fused[#loc74, #loc73])
