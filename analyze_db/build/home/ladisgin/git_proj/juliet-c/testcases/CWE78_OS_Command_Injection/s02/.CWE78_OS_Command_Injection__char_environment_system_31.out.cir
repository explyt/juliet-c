!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":110:10)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":110:14)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":110:20)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":110:32)
#loc151 = loc(fused[#loc76, #loc77])
#loc152 = loc(fused[#loc78, #loc79])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc121)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_system_31_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc122)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc123)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc16)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc128)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_system_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc132)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc133)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc122)
    %6 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_system_31_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc122)
    cir.copy %6 to %5 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc122)
    %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.br ^bb1 loc(#loc136)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc35)
    %9 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc35)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc130)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc9)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc9)
    %13 = cir.call @getenv(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
    %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc138)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc139)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc43)
    %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc46)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc48)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %26 = cir.binop(sub, %24, %25) : !u64i loc(#loc140)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc50)
    %29 = cir.binop(sub, %26, %28) : !u64i loc(#loc141)
    %30 = cir.call @strncat(%21, %22, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
    cir.br ^bb4 loc(#loc39)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc142)
  ^bb7:  // pred: ^bb6
    %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    cir.store %31, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    cir.store %32, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.br ^bb8 loc(#loc143)
  ^bb8:  // pred: ^bb7
    %33 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %34 = cir.call @system(%33) : (!cir.ptr<!s8i>) -> !s32i loc(#loc56)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %36 = cir.cmp(ne, %34, %35) : !s32i, !cir.bool loc(#loc144)
    cir.brcond %36 ^bb9, ^bb10 loc(#loc145)
  ^bb9:  // pred: ^bb8
    %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc16)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %39 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc60)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc61)
    cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc60)
    cir.br ^bb10 loc(#loc54)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc54)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc52)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc20)
  } loc(#loc129)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_system_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc63)
  } loc(#loc146)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc148)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc83)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_environment_system_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call @CWE78_OS_Command_Injection__char_environment_system_31_good() : () -> () loc(#loc85)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_environment_system_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call @CWE78_OS_Command_Injection__char_environment_system_31_bad() : () -> () loc(#loc89)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.return %17 : !s32i loc(#loc155)
  } loc(#loc150)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc121)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc107)
    %7 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc96)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc96)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb2 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %14 = cir.call @system(%13) : (!cir.ptr<!s8i>) -> !s32i loc(#loc114)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %16 = cir.cmp(ne, %14, %15) : !s32i, !cir.bool loc(#loc164)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc165)
  ^bb3:  // pred: ^bb2
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc117)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc119)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc120)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc119)
    cir.br ^bb4 loc(#loc112)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc110)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc98)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_31.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":80:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":80:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":47:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":47:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdlib.h":773:1)
#loc8 = loc("/usr/include/stdlib.h":773:50)
#loc9 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":52:37)
#loc10 = loc("/usr/include/string.h":152:1)
#loc11 = loc("/usr/include/string.h":153:29)
#loc12 = loc("/usr/include/stdlib.h":923:1)
#loc13 = loc("/usr/include/stdlib.h":923:41)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":66:23)
#loc17 = loc("/usr/include/stdlib.h":756:1)
#loc18 = loc("/usr/include/stdlib.h":756:70)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":44:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":70:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":51:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":51:37)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":52:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":52:49)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":61:9)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":61:27)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":62:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":62:23)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":46:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":46:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":48:12)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":48:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":49:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":59:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":51:26)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":51:33)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":52:30)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":54:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":58:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":54:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":54:28)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":55:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":57:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":57:21)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":57:26)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":57:25)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":57:35)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":57:48)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":57:52)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":57:60)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":60:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":69:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":64:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":68:9)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":64:20)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":64:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":64:29)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":65:9)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":66:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":67:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":67:18)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":96:1)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":99:1)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":98:5)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":98:13)
#loc66 = loc("/usr/include/stdlib.h":575:1)
#loc67 = loc("/usr/include/stdlib.h":575:41)
#loc68 = loc("/usr/include/time.h":76:1)
#loc69 = loc("/usr/include/time.h":76:38)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":115:15)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":117:15)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":120:15)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":122:15)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":110:1)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":125:1)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":111:1)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":113:27)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":113:22)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":113:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":115:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":116:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":116:65)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":117:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":120:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":121:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":121:64)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":122:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":124:12)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":124:5)
#loc94 = loc("/usr/include/string.h":149:1)
#loc95 = loc("/usr/include/string.h":150:14)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":83:18)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":77:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":94:1)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":85:9)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":85:27)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":86:9)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":86:23)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":79:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":79:12)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":81:12)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":81:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":83:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":83:12)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":84:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":93:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":88:9)
#loc112 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":92:9)
#loc113 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":88:20)
#loc114 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":88:13)
#loc115 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":88:29)
#loc116 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":89:9)
#loc117 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":90:23)
#loc118 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":90:13)
#loc119 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":91:13)
#loc120 = loc("CWE78_OS_Command_Injection__char_environment_system_31.c":91:18)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc10, #loc11])
#loc126 = loc(fused[#loc12, #loc13])
#loc127 = loc(fused[#loc14, #loc15])
#loc128 = loc(fused[#loc17, #loc18])
#loc129 = loc(fused[#loc19, #loc20])
#loc130 = loc(fused[#loc21, #loc22])
#loc131 = loc(fused[#loc23, #loc24])
#loc132 = loc(fused[#loc25, #loc26])
#loc133 = loc(fused[#loc27, #loc28])
#loc134 = loc(fused[#loc29, #loc30])
#loc135 = loc(fused[#loc32, #loc31])
#loc136 = loc(fused[#loc33, #loc34])
#loc137 = loc(fused[#loc38, #loc39])
#loc138 = loc(fused[#loc40, #loc41])
#loc139 = loc(fused[#loc42, #loc39])
#loc140 = loc(fused[#loc48, #loc49])
#loc141 = loc(fused[#loc48, #loc50])
#loc142 = loc(fused[#loc51, #loc52])
#loc143 = loc(fused[#loc53, #loc54])
#loc144 = loc(fused[#loc56, #loc57])
#loc145 = loc(fused[#loc58, #loc54])
#loc146 = loc(fused[#loc62, #loc63])
#loc147 = loc(fused[#loc64, #loc65])
#loc148 = loc(fused[#loc66, #loc67])
#loc149 = loc(fused[#loc68, #loc69])
#loc150 = loc(fused[#loc74, #loc75])
#loc153 = loc(fused[#loc85, #loc86])
#loc154 = loc(fused[#loc89, #loc90])
#loc155 = loc(fused[#loc93, #loc92])
#loc156 = loc(fused[#loc94, #loc95])
#loc157 = loc(fused[#loc97, #loc98])
#loc158 = loc(fused[#loc99, #loc100])
#loc159 = loc(fused[#loc101, #loc102])
#loc160 = loc(fused[#loc103, #loc104])
#loc161 = loc(fused[#loc106, #loc105])
#loc162 = loc(fused[#loc109, #loc110])
#loc163 = loc(fused[#loc111, #loc112])
#loc164 = loc(fused[#loc114, #loc115])
#loc165 = loc(fused[#loc116, #loc112])
