!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc87)
  cir.func private @printIntLine(!s32i) loc(#loc88)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_05_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc87)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc9)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc93)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc14)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
          %6 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc94)
          %7 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
          cir.store %8, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc93)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
          cir.copy %9 to %6 : !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
          %10 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc18)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc19)
          %12 = cir.get_member %6[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc21)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc22)
        } loc(#loc92)
      } loc(#loc91)
    } loc(#loc90)
    cir.return loc(#loc6)
  } loc(#loc89)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_05_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc96)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc97)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc95)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc98)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc98)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc38)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc42)
      } else {
        cir.scope {
          %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc104)
          %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc105)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc48)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc48)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc48)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
          cir.store %8, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc105)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %10 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc106)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc51)
          %12 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc107)
          %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
          cir.copy %3 to %13 : !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
          cir.scope {
            %14 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc109)
            %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
            cir.copy %15 to %14 : !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
            %16 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
            %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc58)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc59)
            %18 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc60)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc61)
          } loc(#loc108)
        } loc(#loc103)
      } loc(#loc102)
    } loc(#loc101)
    cir.return loc(#loc35)
  } loc(#loc100)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc87)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc66)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc114)
          %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc115)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc73)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc73)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc73)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
          cir.store %8, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc115)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc74)
          %10 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc116)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc76)
          %12 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc117)
          %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
          cir.copy %3 to %13 : !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
          cir.scope {
            %14 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc119)
            %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
            cir.copy %15 to %14 : !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
            %16 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
            %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc84)
            %18 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc86)
          } loc(#loc118)
        } loc(#loc113)
      } loc(#loc112)
    } loc(#loc111)
    cir.return loc(#loc63)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_05.c":0:0)
#loc1 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":21:1)
#loc2 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":21:25)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":26:1)
#loc6 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":37:1)
#loc7 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":28:5)
#loc8 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":36:5)
#loc9 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":28:8)
#loc10 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":29:5)
#loc11 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":30:9)
#loc12 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":35:9)
#loc13 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":31:13)
#loc14 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":31:56)
#loc15 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":32:13)
#loc16 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":32:35)
#loc17 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc18 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":33:31)
#loc19 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":33:13)
#loc20 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc21 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":34:31)
#loc22 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":34:13)
#loc23 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":88:1)
#loc24 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":92:1)
#loc25 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":90:5)
#loc26 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":90:11)
#loc27 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":91:5)
#loc28 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":91:11)
#loc29 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":22:1)
#loc30 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":22:26)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":49:19)
#loc34 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":44:1)
#loc35 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":66:1)
#loc36 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":46:5)
#loc37 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":65:5)
#loc38 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":46:8)
#loc39 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":47:5)
#loc40 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":50:5)
#loc41 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":52:5)
#loc42 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":49:9)
#loc43 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":53:9)
#loc44 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":64:9)
#loc45 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":54:13)
#loc46 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":54:27)
#loc47 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":55:13)
#loc48 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":55:56)
#loc49 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":56:27)
#loc50 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":56:13)
#loc51 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":57:27)
#loc52 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":57:13)
#loc53 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":58:14)
#loc54 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":59:13)
#loc55 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":63:13)
#loc56 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":60:17)
#loc57 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":60:39)
#loc58 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":61:35)
#loc59 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":61:17)
#loc60 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":62:35)
#loc61 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":62:17)
#loc62 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":69:1)
#loc63 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":86:1)
#loc64 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":71:5)
#loc65 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":85:5)
#loc66 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":71:8)
#loc67 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":72:5)
#loc68 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":73:9)
#loc69 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":84:9)
#loc70 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":74:13)
#loc71 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":74:27)
#loc72 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":75:13)
#loc73 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":75:56)
#loc74 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":76:27)
#loc75 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":76:13)
#loc76 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":77:27)
#loc77 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":77:13)
#loc78 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":78:14)
#loc79 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":79:13)
#loc80 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":83:13)
#loc81 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":80:17)
#loc82 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":80:39)
#loc83 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":81:35)
#loc84 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":81:17)
#loc85 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":82:35)
#loc86 = loc("CWE758_Undefined_Behavior__struct_alloca_use_05.c":82:17)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc89 = loc(fused[#loc5, #loc6])
#loc90 = loc(fused[#loc7, #loc8])
#loc91 = loc(fused[#loc10, #loc8])
#loc92 = loc(fused[#loc11, #loc12])
#loc93 = loc(fused[#loc13, #loc14])
#loc94 = loc(fused[#loc15, #loc16])
#loc95 = loc(fused[#loc23, #loc24])
#loc96 = loc(fused[#loc25, #loc26])
#loc97 = loc(fused[#loc27, #loc28])
#loc98 = loc(fused[#loc29, #loc30])
#loc99 = loc(fused[#loc31, #loc32])
#loc100 = loc(fused[#loc34, #loc35])
#loc101 = loc(fused[#loc36, #loc37])
#loc102 = loc(fused[#loc39, #loc40, #loc41, #loc37])
#loc103 = loc(fused[#loc43, #loc44])
#loc104 = loc(fused[#loc45, #loc46])
#loc105 = loc(fused[#loc47, #loc48])
#loc106 = loc(fused[#loc50, #loc49])
#loc107 = loc(fused[#loc52, #loc51])
#loc108 = loc(fused[#loc54, #loc55])
#loc109 = loc(fused[#loc56, #loc57])
#loc110 = loc(fused[#loc62, #loc63])
#loc111 = loc(fused[#loc64, #loc65])
#loc112 = loc(fused[#loc67, #loc65])
#loc113 = loc(fused[#loc68, #loc69])
#loc114 = loc(fused[#loc70, #loc71])
#loc115 = loc(fused[#loc72, #loc73])
#loc116 = loc(fused[#loc75, #loc74])
#loc117 = loc(fused[#loc77, #loc76])
#loc118 = loc(fused[#loc79, #loc80])
#loc119 = loc(fused[#loc81, #loc82])
