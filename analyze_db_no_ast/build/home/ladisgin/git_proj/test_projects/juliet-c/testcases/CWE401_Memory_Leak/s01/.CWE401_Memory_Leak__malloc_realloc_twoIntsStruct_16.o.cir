!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc148)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc149)
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%1) loc(#loc15)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc155)
          %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
          %2 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc21)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc156)
          %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc157)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
          cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
          cir.scope {
            %30 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
            %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc160)
            %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc28)
            cir.if %34 {
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc31)
              %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc32)
              cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
            } loc(#loc161)
          } loc(#loc159)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc33)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc35)
          %11 = cir.ptr_stride(%9 : !cir.ptr<!ty__twoIntsStruct>, %10 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %8, %12 : !s32i, !cir.ptr<!s32i> loc(#loc162)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc38)
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc40)
          %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
          cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc163)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
          cir.call @printStructLine(%20) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc46)
          %21 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc47)
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc48)
          %24 = cir.const #cir.int<130000> : !s32i loc(#loc49)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc49)
          %26 = cir.const #cir.int<8> : !u64i loc(#loc164)
          %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc165)
          %28 = cir.call @realloc(%23, %27) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
          cir.store %29, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc167)
          cir.scope {
            %30 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
            %33 = cir.cmp(ne, %30, %32) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc169)
            %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc59)
            cir.if %34 {
              %35 = cir.const #cir.int<1> : !s32i loc(#loc61)
              %36 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
              %37 = cir.const #cir.int<0> : !s32i loc(#loc63)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %37 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
              %39 = cir.get_member %38[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
              cir.store %35, %39 : !s32i, !cir.ptr<!s32i> loc(#loc171)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc65)
              %41 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
              %42 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %43 = cir.ptr_stride(%41 : !cir.ptr<!ty__twoIntsStruct>, %42 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
              %44 = cir.get_member %43[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
              cir.store %40, %44 : !s32i, !cir.ptr<!s32i> loc(#loc172)
              %45 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc70)
              %47 = cir.ptr_stride(%45 : !cir.ptr<!ty__twoIntsStruct>, %46 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
              cir.call @printStructLine(%47) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc72)
              %48 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc73)
              %49 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
              %50 = cir.cast(bitcast, %49 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc74)
              cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
            } loc(#loc170)
          } loc(#loc168)
        } loc(#loc154)
        cir.break loc(#loc75)
      } loc(#loc153)
    } loc(#loc153)
    cir.return loc(#loc12)
  } loc(#loc152)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    cir.return loc(#loc77)
  } loc(#loc173)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc84)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc84)
        cir.condition(%1) loc(#loc84)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc178)
          %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["tmpData"] {alignment = 8 : i64} loc(#loc179)
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc91)
          %3 = cir.const #cir.int<100> : !s32i loc(#loc92)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc92)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc180)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc181)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
          cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc178)
          cir.scope {
            %34 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
            %37 = cir.cmp(eq, %34, %36) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc184)
            %38 = cir.cast(int_to_bool, %37 : !s32i), !cir.bool loc(#loc99)
            cir.if %38 {
              %39 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc102)
              %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc103)
              cir.call @exit(%41) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
            } loc(#loc185)
          } loc(#loc183)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc186)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc108)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc110)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
          cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc187)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
          cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc115)
          %22 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc116)
          %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc117)
          %25 = cir.const #cir.int<130000> : !s32i loc(#loc118)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc118)
          %27 = cir.const #cir.int<8> : !u64i loc(#loc188)
          %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc189)
          %29 = cir.call @realloc(%24, %28) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
          cir.store %30, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc191)
          cir.scope {
            %34 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
            %37 = cir.cmp(ne, %34, %36) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc193)
            %38 = cir.cast(int_to_bool, %37 : !s32i), !cir.bool loc(#loc128)
            cir.if %38 {
              %39 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
              cir.store %39, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc195)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc132)
              %41 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
              %42 = cir.const #cir.int<0> : !s32i loc(#loc134)
              %43 = cir.ptr_stride(%41 : !cir.ptr<!ty__twoIntsStruct>, %42 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
              %44 = cir.get_member %43[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
              cir.store %40, %44 : !s32i, !cir.ptr<!s32i> loc(#loc196)
              %45 = cir.const #cir.int<1> : !s32i loc(#loc136)
              %46 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc138)
              %48 = cir.ptr_stride(%46 : !cir.ptr<!ty__twoIntsStruct>, %47 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
              %49 = cir.get_member %48[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
              cir.store %45, %49 : !s32i, !cir.ptr<!s32i> loc(#loc197)
              %50 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc141)
              %52 = cir.ptr_stride(%50 : !cir.ptr<!ty__twoIntsStruct>, %51 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
              cir.call @printStructLine(%52) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc143)
            } loc(#loc194)
          } loc(#loc192)
          %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc144)
          %32 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc145)
          cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
        } loc(#loc177)
        cir.break loc(#loc146)
      } loc(#loc176)
    } loc(#loc176)
    cir.return loc(#loc81)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":683:1)
#loc8 = loc("/usr/include/stdlib.h":684:14)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":24:1)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":48:1)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":26:5)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":47:5)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":26:11)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":28:9)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":45:9)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":29:13)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":29:85)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":29:53)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":29:60)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":29:64)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":29:84)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":30:13)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":30:41)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":30:17)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":30:25)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":30:22)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":30:31)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":30:32)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":30:38)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":30:37)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":32:30)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":32:13)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":32:18)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":32:19)
#loc37 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":33:30)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":33:13)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":33:18)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":33:19)
#loc42 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":34:30)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":34:35)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":34:36)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":34:13)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":36:37)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":36:45)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":36:52)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":36:60)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":36:80)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":36:51)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":36:81)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":36:13)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":37:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":44:13)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":37:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":37:25)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":37:22)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":38:13)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":40:34)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":40:17)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":40:22)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":40:23)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":41:34)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":41:17)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":41:22)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":41:23)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":42:34)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":42:39)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":42:40)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":42:17)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":43:17)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":43:22)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":46:9)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":84:1)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":87:1)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":86:5)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":86:11)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":55:1)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":82:1)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":57:5)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":81:5)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":57:11)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":59:9)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":79:9)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":60:13)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":60:85)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":62:13)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":62:29)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":60:53)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":60:60)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":60:64)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":60:84)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":61:13)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":61:41)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":61:17)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":61:25)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":61:22)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":61:31)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":61:32)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":61:38)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":61:37)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":64:30)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":64:13)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":64:18)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":64:19)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":65:30)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":65:13)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":65:18)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":65:19)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":66:30)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":66:35)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":66:36)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":66:13)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":67:40)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":67:48)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":67:55)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":67:63)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":67:83)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":67:54)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":67:84)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":67:13)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":70:13)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":77:13)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":70:17)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":70:28)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":70:25)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":71:13)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":72:24)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":72:17)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":74:34)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":74:17)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":74:22)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":74:23)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":75:34)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":75:17)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":75:22)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":75:23)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":76:34)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":76:39)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":76:40)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":76:17)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":78:13)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":78:18)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c":80:9)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc13, #loc14])
#loc154 = loc(fused[#loc16, #loc17])
#loc155 = loc(fused[#loc18, #loc19])
#loc156 = loc(fused[#loc22, #loc23])
#loc157 = loc(fused[#loc21, #loc23])
#loc158 = loc(fused[#loc20, #loc19])
#loc159 = loc(fused[#loc24, #loc25])
#loc160 = loc(fused[#loc26, #loc27])
#loc161 = loc(fused[#loc29, #loc25])
#loc162 = loc(fused[#loc34, #loc33])
#loc163 = loc(fused[#loc39, #loc38])
#loc164 = loc(fused[#loc50, #loc51])
#loc165 = loc(fused[#loc52, #loc51])
#loc166 = loc(fused[#loc47, #loc53])
#loc167 = loc(fused[#loc54, #loc53])
#loc168 = loc(fused[#loc55, #loc56])
#loc169 = loc(fused[#loc57, #loc58])
#loc170 = loc(fused[#loc60, #loc56])
#loc171 = loc(fused[#loc62, #loc61])
#loc172 = loc(fused[#loc66, #loc65])
#loc173 = loc(fused[#loc76, #loc77])
#loc174 = loc(fused[#loc78, #loc79])
#loc175 = loc(fused[#loc80, #loc81])
#loc176 = loc(fused[#loc82, #loc83])
#loc177 = loc(fused[#loc85, #loc86])
#loc178 = loc(fused[#loc87, #loc88])
#loc179 = loc(fused[#loc89, #loc90])
#loc180 = loc(fused[#loc93, #loc94])
#loc181 = loc(fused[#loc92, #loc94])
#loc182 = loc(fused[#loc91, #loc88])
#loc183 = loc(fused[#loc95, #loc96])
#loc184 = loc(fused[#loc97, #loc98])
#loc185 = loc(fused[#loc100, #loc96])
#loc186 = loc(fused[#loc105, #loc104])
#loc187 = loc(fused[#loc109, #loc108])
#loc188 = loc(fused[#loc119, #loc120])
#loc189 = loc(fused[#loc121, #loc120])
#loc190 = loc(fused[#loc116, #loc122])
#loc191 = loc(fused[#loc123, #loc122])
#loc192 = loc(fused[#loc124, #loc125])
#loc193 = loc(fused[#loc126, #loc127])
#loc194 = loc(fused[#loc129, #loc125])
#loc195 = loc(fused[#loc131, #loc130])
#loc196 = loc(fused[#loc133, #loc132])
#loc197 = loc(fused[#loc137, #loc136])
