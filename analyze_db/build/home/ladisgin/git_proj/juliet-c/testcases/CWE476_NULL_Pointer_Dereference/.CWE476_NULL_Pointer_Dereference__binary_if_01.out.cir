!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc37 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":64:10)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":64:14)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":64:20)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":64:32)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":43:44)
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc86 = loc(fused[#loc37, #loc38])
#loc87 = loc(fused[#loc39, #loc40])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc74)
    cir.br ^bb1 loc(#loc75)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc7)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc74)
    cir.br ^bb2 loc(#loc76)
  ^bb2:  // pred: ^bb1
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc77)
    %6 = cir.cast(bool_to_int, %5 : !cir.bool), !s32i loc(#loc77)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc17)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc78)
    %12 = cir.cast(bool_to_int, %11 : !cir.bool), !s32i loc(#loc78)
    %13 = cir.binop(and, %6, %12) : !s32i loc(#loc79)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc80)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc3)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc22)
    cir.br ^bb4 loc(#loc11)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc11)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc9)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc5)
  } loc(#loc73)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc82)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    cir.return loc(#loc24)
  } loc(#loc81)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc83)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc34)
  cir.func @main(%arg0: !s32i loc(fused[#loc37, #loc38]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc39, #loc40])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc86)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc87)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc36)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc41)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc42)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc43)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc43)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc44)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc31)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %8 = cir.get_global @CWE476_NULL_Pointer_Dereference__binary_if_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc88)
    cir.call @CWE476_NULL_Pointer_Dereference__binary_if_01_good() : () -> () loc(#loc46)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc32)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc33)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %13 = cir.get_global @CWE476_NULL_Pointer_Dereference__binary_if_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc89)
    cir.call @CWE476_NULL_Pointer_Dereference__binary_if_01_bad() : () -> () loc(#loc50)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc34)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc53)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.return %17 : !s32i loc(#loc90)
  } loc(#loc85)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc92)
    cir.br ^bb1 loc(#loc93)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc92)
    cir.br ^bb2 loc(#loc94)
  ^bb2:  // pred: ^bb1
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc64)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc95)
    cir.brcond %5 ^bb3, ^bb8 loc(#loc65)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc68)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc96)
    cir.brcond %10 ^bb4, ^bb5 loc(#loc65)
  ^bb4:  // pred: ^bb3
    %11 = cir.const #true loc(#loc65)
    cir.br ^bb6(%11 : !cir.bool) loc(#loc65)
  ^bb5:  // pred: ^bb3
    %12 = cir.const #false loc(#loc65)
    cir.br ^bb6(%12 : !cir.bool) loc(#loc65)
  ^bb6(%13: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":43:44)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc65)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%13 : !cir.bool) loc(#loc65)
  ^bb8:  // pred: ^bb2
    %14 = cir.const #false loc(#loc65)
    cir.br ^bb9(%14 : !cir.bool) loc(#loc65)
  ^bb9(%15: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":43:44)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc65)
  ^bb10:  // pred: ^bb9
    cir.brcond %15 ^bb11, ^bb12 loc(#loc97)
  ^bb11:  // pred: ^bb10
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc70)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb12 loc(#loc62)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc62)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc60)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc56)
  } loc(#loc91)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_01.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":28:23)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":20:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":31:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":23:9)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":23:47)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":22:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":30:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":26:9)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":29:9)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":26:14)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":26:38)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":26:47)
#loc15 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":26:69)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":26:79)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":26:13)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":26:80)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":26:44)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":27:9)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":28:13)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":50:1)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":53:1)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":52:5)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":52:11)
#loc27 = loc("/usr/include/stdlib.h":575:1)
#loc28 = loc("/usr/include/stdlib.h":575:41)
#loc29 = loc("/usr/include/time.h":76:1)
#loc30 = loc("/usr/include/time.h":76:38)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":69:15)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":71:15)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":74:15)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":76:15)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":64:1)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":79:1)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":65:1)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":67:27)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":67:22)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":67:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":69:5)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":70:5)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":70:56)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":71:5)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":74:5)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":75:5)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":75:55)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":76:5)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":78:12)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":78:5)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":37:1)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":48:1)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":40:9)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":40:47)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":39:5)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":47:5)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":43:9)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":46:9)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":43:14)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":43:38)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":43:48)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":43:70)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":43:80)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":44:9)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":45:23)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__binary_if_01.c":45:13)
#loc72 = loc(fused[#loc1, #loc2])
#loc73 = loc(fused[#loc4, #loc5])
#loc74 = loc(fused[#loc6, #loc7])
#loc75 = loc(fused[#loc8, #loc9])
#loc76 = loc(fused[#loc10, #loc11])
#loc77 = loc(fused[#loc12, #loc13])
#loc78 = loc(fused[#loc14, #loc17])
#loc79 = loc(fused[#loc18, #loc19])
#loc80 = loc(fused[#loc21, #loc11])
#loc81 = loc(fused[#loc23, #loc24])
#loc82 = loc(fused[#loc25, #loc26])
#loc83 = loc(fused[#loc27, #loc28])
#loc84 = loc(fused[#loc29, #loc30])
#loc85 = loc(fused[#loc35, #loc36])
#loc88 = loc(fused[#loc46, #loc47])
#loc89 = loc(fused[#loc50, #loc51])
#loc90 = loc(fused[#loc54, #loc53])
#loc91 = loc(fused[#loc55, #loc56])
#loc92 = loc(fused[#loc57, #loc58])
#loc93 = loc(fused[#loc59, #loc60])
#loc94 = loc(fused[#loc61, #loc62])
#loc95 = loc(fused[#loc63, #loc64])
#loc96 = loc(fused[#loc66, #loc68])
#loc97 = loc(fused[#loc69, #loc62])
