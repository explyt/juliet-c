!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc99)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc100)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc101)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc103)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc106)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc107)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc21)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc22)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc109)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc24)
        cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc26)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc26)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc29)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc112)
      } loc(#loc110)
    } loc(#loc108)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc101)
      %4 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc101)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc101)
      %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc32)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc34)
      %8 = cir.call @strcpy(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    } loc(#loc113)
    cir.return loc(#loc12)
  } loc(#loc104)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc115)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc116)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc43)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc119)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc120)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc54)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc55)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc122)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc43)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc43)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
      } else {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
        cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc62)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc62)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc64)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc65)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc125)
      } loc(#loc123)
    } loc(#loc121)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc100)
      %4 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc100)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc100)
      %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc68)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc70)
      %8 = cir.call @strcpy(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc68)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    } loc(#loc126)
    cir.return loc(#loc45)
  } loc(#loc117)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc129)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc130)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc83)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc84)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc132)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc86)
        cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc88)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc88)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc90)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc91)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc135)
      } loc(#loc133)
    } loc(#loc131)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc99)
      %4 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc99)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc99)
      %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc94)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc96)
      %8 = cir.call @strcpy(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    } loc(#loc136)
    cir.return loc(#loc74)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":96:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":96:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":75:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":75:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":45:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":45:29)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":32:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":50:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":34:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":34:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":35:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":35:26)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":36:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":36:29)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":37:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":43:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":37:8)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":37:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":38:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":41:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":41:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":42:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":42:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":42:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":42:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":44:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":49:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":47:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":47:16)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":47:22)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":48:19)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":48:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":103:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":107:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":105:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":105:14)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":106:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":106:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":65:19)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":57:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":80:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":59:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":59:12)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":60:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":60:26)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":61:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":61:29)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":62:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":73:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":62:8)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":62:27)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":63:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":66:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":68:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":65:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":71:16)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":71:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":72:19)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":72:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":72:14)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":72:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":74:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":79:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":77:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":77:16)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":77:22)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":78:19)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":78:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":83:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":101:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":85:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":85:12)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":86:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":86:26)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":87:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":87:29)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":88:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":94:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":88:8)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":88:27)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":89:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":92:16)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":92:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":93:19)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":93:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":93:14)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":93:15)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":95:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":100:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":98:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":98:16)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":98:22)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":99:19)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_06.c":99:9)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc11, #loc12])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc17, #loc18])
#loc108 = loc(fused[#loc19, #loc20])
#loc109 = loc(fused[#loc21, #loc22])
#loc110 = loc(fused[#loc23, #loc20])
#loc111 = loc(fused[#loc25, #loc24])
#loc112 = loc(fused[#loc27, #loc26])
#loc113 = loc(fused[#loc30, #loc31])
#loc114 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc39, #loc40])
#loc116 = loc(fused[#loc41, #loc42])
#loc117 = loc(fused[#loc44, #loc45])
#loc118 = loc(fused[#loc46, #loc47])
#loc119 = loc(fused[#loc48, #loc49])
#loc120 = loc(fused[#loc50, #loc51])
#loc121 = loc(fused[#loc52, #loc53])
#loc122 = loc(fused[#loc54, #loc55])
#loc123 = loc(fused[#loc56, #loc57, #loc58, #loc53])
#loc124 = loc(fused[#loc61, #loc60])
#loc125 = loc(fused[#loc63, #loc62])
#loc126 = loc(fused[#loc66, #loc67])
#loc127 = loc(fused[#loc73, #loc74])
#loc128 = loc(fused[#loc75, #loc76])
#loc129 = loc(fused[#loc77, #loc78])
#loc130 = loc(fused[#loc79, #loc80])
#loc131 = loc(fused[#loc81, #loc82])
#loc132 = loc(fused[#loc83, #loc84])
#loc133 = loc(fused[#loc85, #loc82])
#loc134 = loc(fused[#loc87, #loc86])
#loc135 = loc(fused[#loc89, #loc88])
#loc136 = loc(fused[#loc92, #loc93])
