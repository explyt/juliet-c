!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc222)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc223)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc224)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc225)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc226)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"We have a match!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc228)
  cir.func @_ZN59CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc230)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc231)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc22)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc23)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc24)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc232)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc233)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc234)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc32)
      %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc237)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc36)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
      } loc(#loc238)
    } loc(#loc236)
    %9 = cir.const #cir.int<0> : !s8i loc(#loc37)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc40)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc239)
    cir.scope {
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc241)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc45)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc45)
      cir.store %16, %13 : !u64i, !cir.ptr<!u64i> loc(#loc241)
      cir.scope {
        %17 = cir.const #cir.int<100> : !s32i loc(#loc49)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc49)
        %19 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc50)
        %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc243)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc51)
        %23 = cir.cmp(gt, %20, %22) : !u64i, !cir.bool loc(#loc244)
        cir.if %23 {
          cir.scope {
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %25 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc56)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc57)
            %27 = cir.const #cir.int<100> : !s32i loc(#loc58)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc58)
            %29 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc59)
            %30 = cir.binop(sub, %28, %29) : !u64i loc(#loc247)
            %31 = cir.cast(integral, %30 : !u64i), !s32i loc(#loc247)
            %32 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
            %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc60)
            %34 = cir.call @fgets(%26, %31, %33) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc61)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc62)
            %36 = cir.cmp(ne, %34, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc248)
            cir.if %36 {
              %37 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc66)
              %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
              %39 = cir.call @strlen(%38) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc66)
              cir.store %39, %13 : !u64i, !cir.ptr<!u64i> loc(#loc250)
              cir.scope {
                %40 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc72)
                %41 = cir.const #cir.int<0> : !s32i loc(#loc73)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc73)
                %43 = cir.cmp(gt, %40, %42) : !u64i, !cir.bool loc(#loc252)
                %44 = cir.ternary(%43, true {
                  %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                  %46 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                  %47 = cir.const #cir.int<1> : !s32i loc(#loc77)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc77)
                  %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc253)
                  %50 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc78)
                  %51 = cir.load %50 : !cir.ptr<!s8i>, !s8i loc(#loc75)
                  %52 = cir.cast(integral, %51 : !s8i), !s32i loc(#loc75)
                  %53 = cir.const #cir.int<10> : !s8i loc(#loc79)
                  %54 = cir.cast(integral, %53 : !s8i), !s32i loc(#loc79)
                  %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc254)
                  %56 = cir.ternary(%55, true {
                    %57 = cir.const #true loc(#loc74)
                    cir.yield %57 : !cir.bool loc(#loc74)
                  }, false {
                    %57 = cir.const #false loc(#loc74)
                    cir.yield %57 : !cir.bool loc(#loc74)
                  }) : (!cir.bool) -> !cir.bool loc(#loc74)
                  cir.yield %56 : !cir.bool loc(#loc74)
                }, false {
                  %45 = cir.const #false loc(#loc74)
                  cir.yield %45 : !cir.bool loc(#loc74)
                }) : (!cir.bool) -> !cir.bool loc(#loc74)
                cir.if %44 {
                  %45 = cir.const #cir.int<0> : !s8i loc(#loc81)
                  %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
                  %47 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc83)
                  %48 = cir.const #cir.int<1> : !s32i loc(#loc84)
                  %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc84)
                  %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc256)
                  %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc85)
                  cir.store %45, %51 : !s8i, !cir.ptr<!s8i> loc(#loc257)
                } loc(#loc255)
              } loc(#loc251)
            } else {
              %37 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
              %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
              cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc86)
              %39 = cir.const #cir.int<0> : !s8i loc(#loc87)
              %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
              %41 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc89)
              %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc90)
              cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc258)
            } loc(#loc249)
          } loc(#loc246)
        } loc(#loc245)
      } loc(#loc242)
    } loc(#loc240)
    cir.scope {
      %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc260)
      %14 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
      %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
      cir.store %15, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
      cir.scope {
        cir.for : cond {
          %19 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
          %20 = cir.load %19 : !cir.ptr<!s8i>, !s8i loc(#loc98)
          %21 = cir.cast(integral, %20 : !s8i), !s32i loc(#loc98)
          %22 = cir.const #cir.int<0> : !s8i loc(#loc99)
          %23 = cir.cast(integral, %22 : !s8i), !s32i loc(#loc99)
          %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc262)
          cir.condition(%24) loc(#loc262)
        } body {
          cir.scope {
            cir.scope {
              %19 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
              %20 = cir.load %19 : !cir.ptr<!s8i>, !s8i loc(#loc104)
              %21 = cir.cast(integral, %20 : !s8i), !s32i loc(#loc104)
              %22 = cir.const #cir.int<83> : !s8i loc(#loc105)
              %23 = cir.cast(integral, %22 : !s8i), !s32i loc(#loc105)
              %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc265)
              cir.if %24 {
                %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc14)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc14)
                cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc107)
                cir.break loc(#loc108)
              } loc(#loc266)
            } loc(#loc264)
          } loc(#loc263)
          cir.yield loc(#loc96)
        } step {
          %19 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc267)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc267)
          cir.store %21, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
          cir.yield loc(#loc261)
        } loc(#loc261)
      } loc(#loc261)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc111)
      %17 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
    } loc(#loc259)
    cir.return loc(#loc18)
  } loc(#loc229)
  cir.func internal private @_ZN59CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc269)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc270)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc118)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc119)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc120)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc271)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc272)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc119)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc273)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc128)
      %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc276)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc130)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc131)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc132)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc130)
      } loc(#loc277)
    } loc(#loc275)
    %9 = cir.const #cir.int<0> : !s8i loc(#loc133)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc278)
    cir.scope {
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc280)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc141)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc141)
      cir.store %16, %13 : !u64i, !cir.ptr<!u64i> loc(#loc280)
      cir.scope {
        %17 = cir.const #cir.int<100> : !s32i loc(#loc145)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc145)
        %19 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc146)
        %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc282)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc147)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc147)
        %23 = cir.cmp(gt, %20, %22) : !u64i, !cir.bool loc(#loc283)
        cir.if %23 {
          cir.scope {
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
            %25 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc152)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc153)
            %27 = cir.const #cir.int<100> : !s32i loc(#loc154)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc154)
            %29 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc155)
            %30 = cir.binop(sub, %28, %29) : !u64i loc(#loc286)
            %31 = cir.cast(integral, %30 : !u64i), !s32i loc(#loc286)
            %32 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
            %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc156)
            %34 = cir.call @fgets(%26, %31, %33) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc157)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc158)
            %36 = cir.cmp(ne, %34, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc287)
            cir.if %36 {
              %37 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc162)
              %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
              %39 = cir.call @strlen(%38) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc162)
              cir.store %39, %13 : !u64i, !cir.ptr<!u64i> loc(#loc289)
              cir.scope {
                %40 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc168)
                %41 = cir.const #cir.int<0> : !s32i loc(#loc169)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc169)
                %43 = cir.cmp(gt, %40, %42) : !u64i, !cir.bool loc(#loc291)
                %44 = cir.ternary(%43, true {
                  %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
                  %46 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc172)
                  %47 = cir.const #cir.int<1> : !s32i loc(#loc173)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc173)
                  %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc292)
                  %50 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc174)
                  %51 = cir.load %50 : !cir.ptr<!s8i>, !s8i loc(#loc171)
                  %52 = cir.cast(integral, %51 : !s8i), !s32i loc(#loc171)
                  %53 = cir.const #cir.int<10> : !s8i loc(#loc175)
                  %54 = cir.cast(integral, %53 : !s8i), !s32i loc(#loc175)
                  %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc293)
                  %56 = cir.ternary(%55, true {
                    %57 = cir.const #true loc(#loc170)
                    cir.yield %57 : !cir.bool loc(#loc170)
                  }, false {
                    %57 = cir.const #false loc(#loc170)
                    cir.yield %57 : !cir.bool loc(#loc170)
                  }) : (!cir.bool) -> !cir.bool loc(#loc170)
                  cir.yield %56 : !cir.bool loc(#loc170)
                }, false {
                  %45 = cir.const #false loc(#loc170)
                  cir.yield %45 : !cir.bool loc(#loc170)
                }) : (!cir.bool) -> !cir.bool loc(#loc170)
                cir.if %44 {
                  %45 = cir.const #cir.int<0> : !s8i loc(#loc177)
                  %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
                  %47 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc179)
                  %48 = cir.const #cir.int<1> : !s32i loc(#loc180)
                  %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc180)
                  %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc295)
                  %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc181)
                  cir.store %45, %51 : !s8i, !cir.ptr<!s8i> loc(#loc296)
                } loc(#loc294)
              } loc(#loc290)
            } else {
              %37 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc182)
              %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc182)
              cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc183)
              %39 = cir.const #cir.int<0> : !s8i loc(#loc184)
              %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
              %41 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc186)
              %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc187)
              cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc297)
            } loc(#loc288)
          } loc(#loc285)
        } loc(#loc284)
      } loc(#loc281)
    } loc(#loc279)
    cir.scope {
      %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc299)
      %14 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
      %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
      cir.store %15, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
      cir.scope {
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc301)
        cir.scope {
          %20 = cir.const #cir.int<0> : !s32i loc(#loc198)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc198)
          cir.store %21, %16 : !u64i, !cir.ptr<!u64i> loc(#loc303)
          cir.for : cond {
            %22 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc200)
            %23 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc201)
            %24 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
            %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc201)
            %26 = cir.cmp(lt, %22, %25) : !u64i, !cir.bool loc(#loc304)
            cir.condition(%26) loc(#loc304)
          } body {
            cir.scope {
              cir.scope {
                %22 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
                %23 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc208)
                %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc209)
                %25 = cir.load %24 : !cir.ptr<!s8i>, !s8i loc(#loc207)
                %26 = cir.cast(integral, %25 : !s8i), !s32i loc(#loc207)
                %27 = cir.const #cir.int<83> : !s8i loc(#loc210)
                %28 = cir.cast(integral, %27 : !s8i), !s32i loc(#loc210)
                %29 = cir.cmp(eq, %26, %28) : !s32i, !cir.bool loc(#loc307)
                cir.if %29 {
                  %30 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc212)
                  %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc212)
                  cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc213)
                  cir.break loc(#loc214)
                } loc(#loc308)
              } loc(#loc306)
            } loc(#loc305)
            cir.yield loc(#loc197)
          } step {
            %22 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc215)
            %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc216)
            cir.store %23, %16 : !u64i, !cir.ptr<!u64i> loc(#loc309)
            cir.yield loc(#loc302)
          } loc(#loc302)
        } loc(#loc302)
        %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc217)
        %18 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc218)
        cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc217)
      } loc(#loc300)
    } loc(#loc298)
    cir.return loc(#loc114)
  } loc(#loc268)
  cir.func @_ZN59CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33L7goodB2GEv() : () -> () loc(#loc221)
    cir.return loc(#loc220)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":54:27)
#loc14 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":68:27)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":28:1)
#loc18 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":74:1)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":30:5)
#loc20 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":30:12)
#loc21 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":31:5)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":31:23)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":32:20)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":32:27)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":32:31)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":32:42)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":32:43)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":32:5)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":33:5)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":33:33)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":33:9)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":33:17)
#loc33 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":33:23)
#loc34 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":33:24)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":33:30)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":33:29)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":34:15)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":34:5)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":34:10)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":34:11)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":35:5)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":59:5)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":37:9)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":37:37)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":37:26)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":37:33)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":39:9)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":58:9)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":39:13)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":39:17)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":39:27)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":40:9)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":42:13)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":57:13)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":42:23)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":42:28)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":42:27)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":42:43)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":42:47)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":42:57)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":42:17)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":42:67)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":43:13)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":51:13)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":53:13)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":46:27)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":46:34)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":46:17)
#loc69 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":46:38)
#loc70 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":47:17)
#loc71 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":50:17)
#loc72 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":47:21)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":47:31)
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":47:33)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":47:36)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":47:41)
#loc77 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":47:49)
#loc78 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":47:50)
#loc79 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":47:55)
#loc80 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":48:17)
#loc81 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":49:39)
#loc82 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":49:21)
#loc83 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":49:26)
#loc84 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":49:34)
#loc85 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":49:35)
#loc86 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":54:17)
#loc87 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":56:33)
#loc88 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":56:17)
#loc89 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":56:22)
#loc90 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":56:29)
#loc91 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":60:5)
#loc92 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":73:5)
#loc93 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":61:9)
#loc94 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":61:23)
#loc95 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":64:9)
#loc96 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":71:9)
#loc97 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":64:17)
#loc98 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":64:16)
#loc99 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":64:25)
#loc100 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":65:9)
#loc101 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":66:13)
#loc102 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":70:13)
#loc103 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":66:18)
#loc104 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":66:17)
#loc105 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":66:26)
#loc106 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":67:13)
#loc107 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":68:17)
#loc108 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":69:17)
#loc109 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":64:35)
#loc110 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":64:31)
#loc111 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":72:9)
#loc112 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":72:14)
#loc113 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":81:1)
#loc114 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":129:1)
#loc115 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":83:5)
#loc116 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":83:12)
#loc117 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":84:5)
#loc118 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":84:23)
#loc119 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":85:20)
#loc120 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":85:27)
#loc121 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":85:31)
#loc122 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":85:42)
#loc123 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":85:43)
#loc124 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":85:5)
#loc125 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":86:5)
#loc126 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":86:33)
#loc127 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":86:9)
#loc128 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":86:17)
#loc129 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":86:23)
#loc130 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":86:24)
#loc131 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":86:30)
#loc132 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":86:29)
#loc133 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":87:15)
#loc134 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":87:5)
#loc135 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":87:10)
#loc136 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":87:11)
#loc137 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":88:5)
#loc138 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":112:5)
#loc139 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":90:9)
#loc140 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":90:37)
#loc141 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":90:26)
#loc142 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":90:33)
#loc143 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":92:9)
#loc144 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":111:9)
#loc145 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":92:13)
#loc146 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":92:17)
#loc147 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":92:27)
#loc148 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":93:9)
#loc149 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":95:13)
#loc150 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":110:13)
#loc151 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":95:23)
#loc152 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":95:28)
#loc153 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":95:27)
#loc154 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":95:43)
#loc155 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":95:47)
#loc156 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":95:57)
#loc157 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":95:17)
#loc158 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":95:67)
#loc159 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":96:13)
#loc160 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":104:13)
#loc161 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":106:13)
#loc162 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":99:27)
#loc163 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":99:34)
#loc164 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":99:17)
#loc165 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":99:38)
#loc166 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":100:17)
#loc167 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":103:17)
#loc168 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":100:21)
#loc169 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":100:31)
#loc170 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":100:33)
#loc171 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":100:36)
#loc172 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":100:41)
#loc173 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":100:49)
#loc174 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":100:50)
#loc175 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":100:55)
#loc176 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":101:17)
#loc177 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":102:39)
#loc178 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":102:21)
#loc179 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":102:26)
#loc180 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":102:34)
#loc181 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":102:35)
#loc182 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":107:27)
#loc183 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":107:17)
#loc184 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":109:33)
#loc185 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":109:17)
#loc186 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":109:22)
#loc187 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":109:29)
#loc188 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":113:5)
#loc189 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":128:5)
#loc190 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":114:9)
#loc191 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":114:23)
#loc192 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":115:9)
#loc193 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":127:9)
#loc194 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":116:13)
#loc195 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":116:20)
#loc196 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":118:13)
#loc197 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":125:13)
#loc198 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":118:20)
#loc199 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":118:18)
#loc200 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":118:23)
#loc201 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":118:27)
#loc202 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":118:34)
#loc203 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":118:38)
#loc204 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":119:13)
#loc205 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":120:17)
#loc206 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":124:17)
#loc207 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":120:21)
#loc208 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":120:26)
#loc209 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":120:27)
#loc210 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":120:32)
#loc211 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":121:17)
#loc212 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":122:31)
#loc213 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":122:21)
#loc214 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":123:21)
#loc215 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":118:42)
#loc216 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":118:41)
#loc217 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":126:13)
#loc218 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":126:18)
#loc219 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":131:1)
#loc220 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":134:1)
#loc221 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_33.cpp":133:5)
#loc222 = loc(fused[#loc1, #loc2])
#loc223 = loc(fused[#loc3, #loc4])
#loc224 = loc(fused[#loc5, #loc6])
#loc225 = loc(fused[#loc7, #loc8])
#loc226 = loc(fused[#loc9, #loc10])
#loc227 = loc(fused[#loc11, #loc12])
#loc228 = loc(fused[#loc15, #loc16])
#loc229 = loc(fused[#loc17, #loc18])
#loc230 = loc(fused[#loc19, #loc20])
#loc231 = loc(fused[#loc21, #loc22])
#loc232 = loc(fused[#loc25, #loc26])
#loc233 = loc(fused[#loc24, #loc26])
#loc234 = loc(fused[#loc23, #loc27])
#loc235 = loc(fused[#loc28, #loc27])
#loc236 = loc(fused[#loc29, #loc30])
#loc237 = loc(fused[#loc31, #loc32])
#loc238 = loc(fused[#loc33, #loc30])
#loc239 = loc(fused[#loc38, #loc37])
#loc240 = loc(fused[#loc41, #loc42])
#loc241 = loc(fused[#loc43, #loc44])
#loc242 = loc(fused[#loc47, #loc48])
#loc243 = loc(fused[#loc49, #loc50])
#loc244 = loc(fused[#loc49, #loc51])
#loc245 = loc(fused[#loc52, #loc48])
#loc246 = loc(fused[#loc53, #loc54])
#loc247 = loc(fused[#loc58, #loc59])
#loc248 = loc(fused[#loc61, #loc62])
#loc249 = loc(fused[#loc63, #loc64, #loc65, #loc54])
#loc250 = loc(fused[#loc68, #loc69])
#loc251 = loc(fused[#loc70, #loc71])
#loc252 = loc(fused[#loc72, #loc73])
#loc253 = loc(fused[#loc76, #loc77])
#loc254 = loc(fused[#loc75, #loc79])
#loc255 = loc(fused[#loc80, #loc71])
#loc256 = loc(fused[#loc83, #loc84])
#loc257 = loc(fused[#loc82, #loc81])
#loc258 = loc(fused[#loc88, #loc87])
#loc259 = loc(fused[#loc91, #loc92])
#loc260 = loc(fused[#loc93, #loc94])
#loc261 = loc(fused[#loc95, #loc96])
#loc262 = loc(fused[#loc98, #loc99])
#loc263 = loc(fused[#loc100, #loc96])
#loc264 = loc(fused[#loc101, #loc102])
#loc265 = loc(fused[#loc104, #loc105])
#loc266 = loc(fused[#loc106, #loc102])
#loc267 = loc(fused[#loc110, #loc109])
#loc268 = loc(fused[#loc113, #loc114])
#loc269 = loc(fused[#loc115, #loc116])
#loc270 = loc(fused[#loc117, #loc118])
#loc271 = loc(fused[#loc121, #loc122])
#loc272 = loc(fused[#loc120, #loc122])
#loc273 = loc(fused[#loc119, #loc123])
#loc274 = loc(fused[#loc124, #loc123])
#loc275 = loc(fused[#loc125, #loc126])
#loc276 = loc(fused[#loc127, #loc128])
#loc277 = loc(fused[#loc129, #loc126])
#loc278 = loc(fused[#loc134, #loc133])
#loc279 = loc(fused[#loc137, #loc138])
#loc280 = loc(fused[#loc139, #loc140])
#loc281 = loc(fused[#loc143, #loc144])
#loc282 = loc(fused[#loc145, #loc146])
#loc283 = loc(fused[#loc145, #loc147])
#loc284 = loc(fused[#loc148, #loc144])
#loc285 = loc(fused[#loc149, #loc150])
#loc286 = loc(fused[#loc154, #loc155])
#loc287 = loc(fused[#loc157, #loc158])
#loc288 = loc(fused[#loc159, #loc160, #loc161, #loc150])
#loc289 = loc(fused[#loc164, #loc165])
#loc290 = loc(fused[#loc166, #loc167])
#loc291 = loc(fused[#loc168, #loc169])
#loc292 = loc(fused[#loc172, #loc173])
#loc293 = loc(fused[#loc171, #loc175])
#loc294 = loc(fused[#loc176, #loc167])
#loc295 = loc(fused[#loc179, #loc180])
#loc296 = loc(fused[#loc178, #loc177])
#loc297 = loc(fused[#loc185, #loc184])
#loc298 = loc(fused[#loc188, #loc189])
#loc299 = loc(fused[#loc190, #loc191])
#loc300 = loc(fused[#loc192, #loc193])
#loc301 = loc(fused[#loc194, #loc195])
#loc302 = loc(fused[#loc196, #loc197])
#loc303 = loc(fused[#loc199, #loc198])
#loc304 = loc(fused[#loc200, #loc203])
#loc305 = loc(fused[#loc204, #loc197])
#loc306 = loc(fused[#loc205, #loc206])
#loc307 = loc(fused[#loc207, #loc210])
#loc308 = loc(fused[#loc211, #loc206])
#loc309 = loc(fused[#loc216, #loc215])
#loc310 = loc(fused[#loc219, #loc220])
