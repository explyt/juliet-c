!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":149:10)
#loc59 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":149:14)
#loc60 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":149:20)
#loc61 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":149:32)
#loc114 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":87:40)
#loc156 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":122:40)
#true = #cir.bool<true> : !cir.bool
#loc188 = loc(fused[#loc58, #loc59])
#loc189 = loc(fused[#loc60, #loc61])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc166)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc167)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc168)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printFloatLine(!cir.float) loc(#loc170)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc172)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc20)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc21)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc175)
    cir.brcond %4 ^bb2, ^bb10 loc(#loc176)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc177)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %6 = cir.cast(int_to_float, %5 : !s32i), !cir.double loc(#loc17)
    cir.store %6, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc173)
    cir.br ^bb4 loc(#loc178)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc27)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc28)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
    %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc179)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc180)
  ^bb5:  // pred: ^bb4
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc35)
    %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc36)
    cir.store %16, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc181)
    cir.br ^bb7 loc(#loc33)
  ^bb6:  // pred: ^bb4
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc40)
    %20 = cir.cast(floating, %19 : !cir.double), !cir.float loc(#loc40)
    cir.call @printFloatLine(%20) : (!cir.float) -> () loc(#loc41)
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc19)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc13)
  } loc(#loc171)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc182)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc185)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    cir.return %17 : !s32i loc(#loc192)
  } loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Value is too small or large to be represented as a float\00" : !cir.array<!s8i x 57>> : !cir.array<!s8i x 57> {alignment = 1 : i64} loc(#loc77)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc194)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc86)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc87)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc198)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb24 loc(#loc89)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc199)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %8 = cir.cast(int_to_float, %7 : !s32i), !cir.double loc(#loc83)
    cir.store %8, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc195)
    cir.br ^bb5 loc(#loc200)
  ^bb5:  // pred: ^bb4
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc96)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc97)
    %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc98)
    %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc99)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc100)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc201)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc202)
  ^bb6:  // pred: ^bb5
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc104)
    %18 = cir.call @atof(%17) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc105)
    cir.store %18, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc203)
    cir.br ^bb8 loc(#loc102)
  ^bb7:  // pred: ^bb5
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc108)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb8 loc(#loc95)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc95)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc204)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc112)
    %22 = cir.const #cir.fp<3.40282347E+38> : !cir.float loc(#loc113)
    %23 = cir.cast(floating, %22 : !cir.float), !cir.double loc(#loc113)
    %24 = cir.cmp(gt, %21, %23) : !cir.double, !cir.bool loc(#loc205)
    cir.brcond %24 ^bb11, ^bb12 loc(#loc114)
  ^bb11:  // pred: ^bb10
    %25 = cir.const #true loc(#loc114)
    cir.br ^bb17(%25 : !cir.bool) loc(#loc114)
  ^bb12:  // pred: ^bb10
    %26 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc115)
    %27 = cir.const #cir.fp<1.17549435E-38> : !cir.float loc(#loc116)
    %28 = cir.cast(floating, %27 : !cir.float), !cir.double loc(#loc116)
    %29 = cir.cmp(lt, %26, %28) : !cir.double, !cir.bool loc(#loc206)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc114)
  ^bb13:  // pred: ^bb12
    %30 = cir.const #true loc(#loc114)
    cir.br ^bb15(%30 : !cir.bool) loc(#loc114)
  ^bb14:  // pred: ^bb12
    %31 = cir.const #false loc(#loc114)
    cir.br ^bb15(%31 : !cir.bool) loc(#loc114)
  ^bb15(%32: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":87:40)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc114)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17(%32 : !cir.bool) loc(#loc114)
  ^bb17(%33: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":87:40)):  // 2 preds: ^bb11, ^bb16
    cir.br ^bb18 loc(#loc114)
  ^bb18:  // pred: ^bb17
    cir.brcond %33 ^bb19, ^bb20 loc(#loc207)
  ^bb19:  // pred: ^bb18
    %34 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 57>> loc(#loc77)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 57>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb21 loc(#loc118)
  ^bb20:  // pred: ^bb18
    %36 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc121)
    %37 = cir.cast(floating, %36 : !cir.double), !cir.float loc(#loc121)
    cir.call @printFloatLine(%37) : (!cir.float) -> () loc(#loc122)
    cir.br ^bb21 loc(#loc111)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc111)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc93)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc85)
  ^bb24:  // 2 preds: ^bb2, ^bb23
    cir.br ^bb25 loc(#loc85)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc79)
  } loc(#loc193)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc209)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc131)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc132)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc212)
    cir.brcond %4 ^bb2, ^bb23 loc(#loc213)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc214)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %6 = cir.cast(int_to_float, %5 : !s32i), !cir.double loc(#loc128)
    cir.store %6, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc210)
    cir.br ^bb4 loc(#loc215)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc138)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc139)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc140)
    %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc141)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc216)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc217)
  ^bb5:  // pred: ^bb4
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc146)
    %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc147)
    cir.store %16, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc218)
    cir.br ^bb7 loc(#loc144)
  ^bb6:  // pred: ^bb4
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc150)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    cir.br ^bb7 loc(#loc137)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc137)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc219)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc154)
    %20 = cir.const #cir.fp<3.40282347E+38> : !cir.float loc(#loc155)
    %21 = cir.cast(floating, %20 : !cir.float), !cir.double loc(#loc155)
    %22 = cir.cmp(gt, %19, %21) : !cir.double, !cir.bool loc(#loc220)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc156)
  ^bb10:  // pred: ^bb9
    %23 = cir.const #true loc(#loc156)
    cir.br ^bb16(%23 : !cir.bool) loc(#loc156)
  ^bb11:  // pred: ^bb9
    %24 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc157)
    %25 = cir.const #cir.fp<1.17549435E-38> : !cir.float loc(#loc158)
    %26 = cir.cast(floating, %25 : !cir.float), !cir.double loc(#loc158)
    %27 = cir.cmp(lt, %24, %26) : !cir.double, !cir.bool loc(#loc221)
    cir.brcond %27 ^bb12, ^bb13 loc(#loc156)
  ^bb12:  // pred: ^bb11
    %28 = cir.const #true loc(#loc156)
    cir.br ^bb14(%28 : !cir.bool) loc(#loc156)
  ^bb13:  // pred: ^bb11
    %29 = cir.const #false loc(#loc156)
    cir.br ^bb14(%29 : !cir.bool) loc(#loc156)
  ^bb14(%30: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":122:40)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc156)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16(%30 : !cir.bool) loc(#loc156)
  ^bb16(%31: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":122:40)):  // 2 preds: ^bb10, ^bb15
    cir.br ^bb17 loc(#loc156)
  ^bb17:  // pred: ^bb16
    cir.brcond %31 ^bb18, ^bb19 loc(#loc222)
  ^bb18:  // pred: ^bb17
    %32 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 57>> loc(#loc162)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 57>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    cir.br ^bb20 loc(#loc160)
  ^bb19:  // pred: ^bb17
    %34 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc164)
    %35 = cir.cast(floating, %34 : !cir.double), !cir.float loc(#loc164)
    cir.call @printFloatLine(%35) : (!cir.float) -> () loc(#loc165)
    cir.br ^bb20 loc(#loc153)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc153)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc135)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc130)
  ^bb23:  // 2 preds: ^bb1, ^bb22
    cir.br ^bb24 loc(#loc130)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc124)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":47:27)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":22:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":22:39)
#loc12 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":28:1)
#loc13 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":53:1)
#loc14 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":33:13)
#loc15 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":33:45)
#loc16 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":34:13)
#loc17 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":34:35)
#loc18 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":30:5)
#loc19 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":52:5)
#loc20 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":30:8)
#loc21 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":30:27)
#loc22 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":31:5)
#loc23 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":32:9)
#loc24 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":51:9)
#loc25 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":40:13)
#loc26 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":48:13)
#loc27 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":40:23)
#loc28 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":40:36)
#loc29 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":40:53)
#loc30 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":40:17)
#loc31 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":40:63)
#loc32 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":41:13)
#loc33 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":44:13)
#loc34 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":46:13)
#loc35 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":43:37)
#loc36 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":43:32)
#loc37 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":43:17)
#loc38 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":43:48)
#loc39 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":47:17)
#loc40 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":50:35)
#loc41 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":50:13)
#loc42 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":134:1)
#loc43 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":138:1)
#loc44 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":136:5)
#loc45 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":136:11)
#loc46 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":137:5)
#loc47 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":137:11)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":154:15)
#loc53 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":156:15)
#loc54 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":159:15)
#loc55 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":161:15)
#loc56 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":149:1)
#loc57 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":164:1)
#loc62 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":150:1)
#loc63 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":152:27)
#loc64 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":152:22)
#loc65 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":152:5)
#loc66 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":154:5)
#loc67 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":155:5)
#loc68 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":155:77)
#loc69 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":156:5)
#loc70 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":159:5)
#loc71 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":160:5)
#loc72 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":160:76)
#loc73 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":161:5)
#loc74 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":163:12)
#loc75 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":163:5)
#loc76 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":65:19)
#loc77 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":89:27)
#loc78 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":60:1)
#loc79 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":97:1)
#loc80 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":70:13)
#loc81 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":70:45)
#loc82 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":71:13)
#loc83 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":71:35)
#loc84 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":62:5)
#loc85 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":96:5)
#loc86 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":62:8)
#loc87 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":62:27)
#loc88 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":63:5)
#loc89 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":66:5)
#loc90 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":68:5)
#loc91 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":65:9)
#loc92 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":69:9)
#loc93 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":95:9)
#loc94 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":77:13)
#loc95 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":85:13)
#loc96 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":77:23)
#loc97 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":77:36)
#loc98 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":77:53)
#loc99 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":77:17)
#loc100 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":77:63)
#loc101 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":78:13)
#loc102 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":81:13)
#loc103 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":83:13)
#loc104 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":80:37)
#loc105 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":80:32)
#loc106 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":80:17)
#loc107 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":80:48)
#loc108 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":84:27)
#loc109 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":84:17)
#loc110 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":87:13)
#loc111 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":94:13)
#loc112 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":87:17)
#loc113 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":87:32)
#loc115 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":87:43)
#loc116 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":87:58)
#loc117 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":88:13)
#loc118 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":90:13)
#loc119 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":92:13)
#loc120 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":89:17)
#loc121 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":93:39)
#loc122 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":93:17)
#loc123 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":100:1)
#loc124 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":132:1)
#loc125 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":105:13)
#loc126 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":105:45)
#loc127 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":106:13)
#loc128 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":106:35)
#loc129 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":102:5)
#loc130 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":131:5)
#loc131 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":102:8)
#loc132 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":102:27)
#loc133 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":103:5)
#loc134 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":104:9)
#loc135 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":130:9)
#loc136 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":112:13)
#loc137 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":120:13)
#loc138 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":112:23)
#loc139 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":112:36)
#loc140 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":112:53)
#loc141 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":112:17)
#loc142 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":112:63)
#loc143 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":113:13)
#loc144 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":116:13)
#loc145 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":118:13)
#loc146 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":115:37)
#loc147 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":115:32)
#loc148 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":115:17)
#loc149 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":115:48)
#loc150 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":119:27)
#loc151 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":119:17)
#loc152 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":122:13)
#loc153 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":129:13)
#loc154 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":122:17)
#loc155 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":122:32)
#loc157 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":122:43)
#loc158 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":122:58)
#loc159 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":123:13)
#loc160 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":125:13)
#loc161 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":127:13)
#loc162 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":124:27)
#loc163 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":124:17)
#loc164 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":128:39)
#loc165 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_06.c":128:17)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc7, #loc8])
#loc170 = loc(fused[#loc10, #loc11])
#loc171 = loc(fused[#loc12, #loc13])
#loc172 = loc(fused[#loc14, #loc15])
#loc173 = loc(fused[#loc16, #loc17])
#loc174 = loc(fused[#loc18, #loc19])
#loc175 = loc(fused[#loc20, #loc21])
#loc176 = loc(fused[#loc22, #loc19])
#loc177 = loc(fused[#loc23, #loc24])
#loc178 = loc(fused[#loc25, #loc26])
#loc179 = loc(fused[#loc30, #loc31])
#loc180 = loc(fused[#loc32, #loc33, #loc34, #loc26])
#loc181 = loc(fused[#loc37, #loc38])
#loc182 = loc(fused[#loc42, #loc43])
#loc183 = loc(fused[#loc44, #loc45])
#loc184 = loc(fused[#loc46, #loc47])
#loc185 = loc(fused[#loc48, #loc49])
#loc186 = loc(fused[#loc50, #loc51])
#loc187 = loc(fused[#loc56, #loc57])
#loc190 = loc(fused[#loc67, #loc68])
#loc191 = loc(fused[#loc71, #loc72])
#loc192 = loc(fused[#loc75, #loc74])
#loc193 = loc(fused[#loc78, #loc79])
#loc194 = loc(fused[#loc80, #loc81])
#loc195 = loc(fused[#loc82, #loc83])
#loc196 = loc(fused[#loc84, #loc85])
#loc197 = loc(fused[#loc86, #loc87])
#loc198 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc199 = loc(fused[#loc92, #loc93])
#loc200 = loc(fused[#loc94, #loc95])
#loc201 = loc(fused[#loc99, #loc100])
#loc202 = loc(fused[#loc101, #loc102, #loc103, #loc95])
#loc203 = loc(fused[#loc106, #loc107])
#loc204 = loc(fused[#loc110, #loc111])
#loc205 = loc(fused[#loc112, #loc113])
#loc206 = loc(fused[#loc115, #loc116])
#loc207 = loc(fused[#loc117, #loc118, #loc119, #loc111])
#loc208 = loc(fused[#loc123, #loc124])
#loc209 = loc(fused[#loc125, #loc126])
#loc210 = loc(fused[#loc127, #loc128])
#loc211 = loc(fused[#loc129, #loc130])
#loc212 = loc(fused[#loc131, #loc132])
#loc213 = loc(fused[#loc133, #loc130])
#loc214 = loc(fused[#loc134, #loc135])
#loc215 = loc(fused[#loc136, #loc137])
#loc216 = loc(fused[#loc141, #loc142])
#loc217 = loc(fused[#loc143, #loc144, #loc145, #loc137])
#loc218 = loc(fused[#loc148, #loc149])
#loc219 = loc(fused[#loc152, #loc153])
#loc220 = loc(fused[#loc154, #loc155])
#loc221 = loc(fused[#loc157, #loc158])
#loc222 = loc(fused[#loc159, #loc160, #loc161, #loc153])
