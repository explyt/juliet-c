!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE391_Unchecked_Error_Condition/CWE391_Unchecked_Error_Condition__wcstombs_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @wcstombs(!cir.ptr<!s8i>, !cir.ptr<!s32i>, !u64i) -> !u64i extra(#fn_attr) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<[#cir.int<65535> : !s32i, #cir.int<0> : !s32i]> : !cir.array<!s32i x 2> {alignment = 4 : i64} loc(#loc3)
  cir.func private @printUnsignedLine(!u32i) loc(#loc133)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE391_Unchecked_Error_Condition__wcstombs_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc13)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["bytesTranslated", init] {alignment = 8 : i64} loc(#loc138)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["charString"] {alignment = 16 : i64} loc(#loc139)
            %3 = cir.const #cir.int<0> : !s32i loc(#loc18)
            %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc18)
            cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc138)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc21)
            %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc21)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc22)
            %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
            %9 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc23)
            cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc140)
            %10 = cir.cast(bitcast, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
            %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 2>> loc(#loc3)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s32i x 2>>), !cir.ptr<!s32i> loc(#loc3)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc26)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc26)
            %15 = cir.call @wcstombs(%10, %12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s32i>, !u64i) -> !u64i extra(#fn_attr) loc(#loc27)
            cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc142)
            %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %17 = cir.cast(integral, %16 : !u64i), !u32i loc(#loc30)
            cir.call @printUnsignedLine(%17) : (!u32i) -> () loc(#loc31)
            %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
            cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc33)
          } loc(#loc137)
          cir.break loc(#loc34)
        } loc(#loc14)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc36)
          cir.break loc(#loc37)
        } loc(#loc35)
        cir.yield loc(#loc11)
      } loc(#loc11)
    } loc(#loc136)
    cir.return loc(#loc10)
  } loc(#loc135)
  cir.func no_proto @CWE391_Unchecked_Error_Condition__wcstombs_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc145)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc143)
  cir.func private @__errno_location() -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"wcstombs() failed\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc147)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc53)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc56)
          cir.break loc(#loc57)
        } loc(#loc54)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["bytesTranslated", init] {alignment = 8 : i64} loc(#loc151)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["charString"] {alignment = 16 : i64} loc(#loc152)
            %3 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc62)
            cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc151)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc65)
            %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc65)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc66)
            %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
            %9 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc67)
            cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc153)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc68)
            %11 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc69)
            cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc154)
            %12 = cir.cast(bitcast, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
            %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 2>> loc(#loc72)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s32i x 2>>), !cir.ptr<!s32i> loc(#loc72)
            %15 = cir.const #cir.int<100> : !s32i loc(#loc73)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc73)
            %17 = cir.call @wcstombs(%12, %14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s32i>, !u64i) -> !u64i extra(#fn_attr) loc(#loc74)
            cir.store %17, %1 : !u64i, !cir.ptr<!u64i> loc(#loc156)
            cir.scope {
              %21 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc79)
              %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc79)
              %23 = cir.const #cir.int<84> : !s32i loc(#loc80)
              %24 = cir.cmp(eq, %22, %23) : !s32i, !cir.bool loc(#loc158)
              cir.if %24 {
                %25 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
                cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc82)
                %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc83)
                %28 = cir.const #cir.int<1> : !s32i loc(#loc84)
                cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc83)
              } loc(#loc159)
            } loc(#loc157)
            %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc85)
            %19 = cir.cast(integral, %18 : !u64i), !u32i loc(#loc85)
            cir.call @printUnsignedLine(%19) : (!u32i) -> () loc(#loc86)
            %20 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc88)
          } loc(#loc150)
          cir.break loc(#loc89)
        } loc(#loc58)
        cir.yield loc(#loc51)
      } loc(#loc51)
    } loc(#loc149)
    cir.return loc(#loc50)
  } loc(#loc148)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc94)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["bytesTranslated", init] {alignment = 8 : i64} loc(#loc163)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["charString"] {alignment = 16 : i64} loc(#loc164)
            %3 = cir.const #cir.int<0> : !s32i loc(#loc99)
            %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc99)
            cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc163)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc102)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc103)
            %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
            %9 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc104)
            cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc165)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc105)
            %11 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc106)
            cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc166)
            %12 = cir.cast(bitcast, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
            %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 2>> loc(#loc109)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s32i x 2>>), !cir.ptr<!s32i> loc(#loc109)
            %15 = cir.const #cir.int<100> : !s32i loc(#loc110)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc110)
            %17 = cir.call @wcstombs(%12, %14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s32i>, !u64i) -> !u64i extra(#fn_attr) loc(#loc111)
            cir.store %17, %1 : !u64i, !cir.ptr<!u64i> loc(#loc168)
            cir.scope {
              %21 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc116)
              %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %23 = cir.const #cir.int<84> : !s32i loc(#loc117)
              %24 = cir.cmp(eq, %22, %23) : !s32i, !cir.bool loc(#loc170)
              cir.if %24 {
                %25 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc119)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc119)
                cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc120)
                %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc121)
                %28 = cir.const #cir.int<1> : !s32i loc(#loc122)
                cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
              } loc(#loc171)
            } loc(#loc169)
            %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %19 = cir.cast(integral, %18 : !u64i), !u32i loc(#loc123)
            cir.call @printUnsignedLine(%19) : (!u32i) -> () loc(#loc124)
            %20 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc126)
          } loc(#loc162)
          cir.break loc(#loc127)
        } loc(#loc95)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc129)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc129)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          cir.break loc(#loc131)
        } loc(#loc128)
        cir.yield loc(#loc92)
      } loc(#loc92)
    } loc(#loc161)
    cir.return loc(#loc91)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE391_Unchecked_Error_Condition/CWE391_Unchecked_Error_Condition__wcstombs_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":1077:1)
#loc2 = loc("/usr/include/stdlib.h":1079:6)
#loc3 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":31:57)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":34:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":34:47)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":39:19)
#loc9 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":22:1)
#loc10 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":42:1)
#loc11 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":24:5)
#loc12 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":41:5)
#loc13 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":24:12)
#loc14 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":26:5)
#loc15 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":27:5)
#loc16 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":35:5)
#loc17 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":28:9)
#loc18 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":28:34)
#loc19 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":29:9)
#loc20 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":29:28)
#loc21 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":30:25)
#loc22 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":30:20)
#loc23 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":30:9)
#loc24 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":31:44)
#loc25 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":31:45)
#loc26 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":31:68)
#loc27 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":31:27)
#loc28 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":31:9)
#loc29 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":31:71)
#loc30 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":33:27)
#loc31 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":33:9)
#loc32 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":34:19)
#loc33 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":34:9)
#loc34 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":36:5)
#loc35 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":37:5)
#loc36 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":39:9)
#loc37 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":40:9)
#loc38 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":106:1)
#loc39 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":110:1)
#loc40 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":108:5)
#loc41 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":108:11)
#loc42 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":109:5)
#loc43 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":109:11)
#loc44 = loc("/usr/include/errno.h":37:1)
#loc45 = loc("/usr/include/errno.h":37:45)
#loc46 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":67:23)
#loc47 = loc("/usr/include/stdlib.h":756:1)
#loc48 = loc("/usr/include/stdlib.h":756:70)
#loc49 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":49:1)
#loc50 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":75:1)
#loc51 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":51:5)
#loc52 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":74:5)
#loc53 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":51:12)
#loc54 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":53:5)
#loc55 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":55:19)
#loc56 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":55:9)
#loc57 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":56:9)
#loc58 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":57:5)
#loc59 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":58:5)
#loc60 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":72:5)
#loc61 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":59:9)
#loc62 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":59:34)
#loc63 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":60:9)
#loc64 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":60:28)
#loc65 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":61:25)
#loc66 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":61:20)
#loc67 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":61:9)
#loc68 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":62:17)
#loc69 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":62:9)
#loc70 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":63:44)
#loc71 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":63:45)
#loc72 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":63:57)
#loc73 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":63:68)
#loc74 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":63:27)
#loc75 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":63:9)
#loc76 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":63:71)
#loc77 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":65:9)
#loc78 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":69:9)
#loc79 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":65:13)
#loc80 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":65:22)
#loc81 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":66:9)
#loc82 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":67:13)
#loc83 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":68:13)
#loc84 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":68:18)
#loc85 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":70:27)
#loc86 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":70:9)
#loc87 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":71:19)
#loc88 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":71:9)
#loc89 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":73:5)
#loc90 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":78:1)
#loc91 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":104:1)
#loc92 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":80:5)
#loc93 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":103:5)
#loc94 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":80:12)
#loc95 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":82:5)
#loc96 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":83:5)
#loc97 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":97:5)
#loc98 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":84:9)
#loc99 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":84:34)
#loc100 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":85:9)
#loc101 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":85:28)
#loc102 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":86:25)
#loc103 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":86:20)
#loc104 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":86:9)
#loc105 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":87:17)
#loc106 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":87:9)
#loc107 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":88:44)
#loc108 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":88:45)
#loc109 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":88:57)
#loc110 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":88:68)
#loc111 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":88:27)
#loc112 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":88:9)
#loc113 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":88:71)
#loc114 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":90:9)
#loc115 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":94:9)
#loc116 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":90:13)
#loc117 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":90:22)
#loc118 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":91:9)
#loc119 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":92:23)
#loc120 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":92:13)
#loc121 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":93:13)
#loc122 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":93:18)
#loc123 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":95:27)
#loc124 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":95:9)
#loc125 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":96:19)
#loc126 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":96:9)
#loc127 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":98:5)
#loc128 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":99:5)
#loc129 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":101:19)
#loc130 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":101:9)
#loc131 = loc("CWE391_Unchecked_Error_Condition__wcstombs_15.c":102:9)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc4, #loc5])
#loc134 = loc(fused[#loc6, #loc7])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc11, #loc12])
#loc137 = loc(fused[#loc15, #loc16])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc19, #loc20])
#loc140 = loc(fused[#loc23, #loc21])
#loc141 = loc(fused[#loc24, #loc25])
#loc142 = loc(fused[#loc28, #loc29])
#loc143 = loc(fused[#loc38, #loc39])
#loc144 = loc(fused[#loc40, #loc41])
#loc145 = loc(fused[#loc42, #loc43])
#loc146 = loc(fused[#loc44, #loc45])
#loc147 = loc(fused[#loc47, #loc48])
#loc148 = loc(fused[#loc49, #loc50])
#loc149 = loc(fused[#loc51, #loc52])
#loc150 = loc(fused[#loc59, #loc60])
#loc151 = loc(fused[#loc61, #loc62])
#loc152 = loc(fused[#loc63, #loc64])
#loc153 = loc(fused[#loc67, #loc65])
#loc154 = loc(fused[#loc69, #loc68])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc75, #loc76])
#loc157 = loc(fused[#loc77, #loc78])
#loc158 = loc(fused[#loc79, #loc80])
#loc159 = loc(fused[#loc81, #loc78])
#loc160 = loc(fused[#loc90, #loc91])
#loc161 = loc(fused[#loc92, #loc93])
#loc162 = loc(fused[#loc96, #loc97])
#loc163 = loc(fused[#loc98, #loc99])
#loc164 = loc(fused[#loc100, #loc101])
#loc165 = loc(fused[#loc104, #loc102])
#loc166 = loc(fused[#loc106, #loc105])
#loc167 = loc(fused[#loc107, #loc108])
#loc168 = loc(fused[#loc112, #loc113])
#loc169 = loc(fused[#loc114, #loc115])
#loc170 = loc(fused[#loc116, #loc117])
#loc171 = loc(fused[#loc118, #loc115])
