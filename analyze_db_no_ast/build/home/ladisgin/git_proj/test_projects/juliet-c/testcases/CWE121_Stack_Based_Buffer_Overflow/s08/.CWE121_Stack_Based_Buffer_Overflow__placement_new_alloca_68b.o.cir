!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc46 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_687badDataE : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc63)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private  @printIntLine(!s32i) loc(#loc64)
  cir.func  @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_687badSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc66)
    %1 = cir.get_global @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_687badDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc66)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc68)
      %4 = cir.const #cir.int<8> : !u64i loc(#loc69)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
      cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc13)
      cir.store %7, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc68)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %9 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc17)
      %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc18)
      cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc70)
      %11 = cir.const #cir.int<10> : !s32i loc(#loc19)
      %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc20)
      %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
      cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc71)
      %14 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc22)
      %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc18)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc24)
    } loc(#loc67)
    cir.return loc(#loc7)
  } loc(#loc65)
  cir.global "private"  external @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_6811goodG2BDataE : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc72)
  cir.func  @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_6811goodG2BSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc74)
    %1 = cir.get_global @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_6811goodG2BDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc72)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc74)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc76)
      %4 = cir.const #cir.int<8> : !u64i loc(#loc77)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc77)
      cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc34)
      cir.store %7, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc76)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc37)
      %9 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
      %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc18)
      cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc78)
      %11 = cir.const #cir.int<10> : !s32i loc(#loc39)
      %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
      %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
      cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc79)
      %14 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc41)
      %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc18)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc43)
    } loc(#loc75)
    cir.return loc(#loc28)
  } loc(#loc73)
  cir.global "private"  external @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_6811goodB2GDataE : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc80)
  cir.func linkonce_odr  @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc46)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc46)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc46)
    cir.return loc(#loc46)
  } loc(#loc46)
  cir.func  @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_6811goodB2GSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc82)
    %1 = cir.get_global @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_6811goodB2GDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc84)
      %4 = cir.const #cir.int<4> : !u64i loc(#loc85)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc85)
      cir.call @_ZN11OneIntClassC2Ev(%7) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc54)
      cir.store %7, %3 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc84)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc57)
      %9 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc58)
      %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc59)
      cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc86)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc60)
      %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc59)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc61)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc62)
    } loc(#loc83)
    cir.return loc(#loc48)
  } loc(#loc81)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":23:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":23:15)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":29:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":45:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":31:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":31:19)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":32:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":44:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":38:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":38:45)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":38:35)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":38:39)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":40:28)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":40:9)
#loc18 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":41:28)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":41:9)
#loc21 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":42:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":42:32)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":42:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":24:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":24:15)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":52:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":68:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":54:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":54:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":55:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":67:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":61:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":61:45)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":61:35)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":61:39)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":63:28)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":63:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":64:28)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":64:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":65:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":65:32)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":65:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":25:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":25:15)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":71:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":85:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":73:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":73:19)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":74:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":84:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":80:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":80:44)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":80:34)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":80:38)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":82:28)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":82:9)
#loc59 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":83:22)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":83:32)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_68b.cpp":83:9)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc4, #loc5])
#loc65 = loc(fused[#loc6, #loc7])
#loc66 = loc(fused[#loc8, #loc9])
#loc67 = loc(fused[#loc10, #loc11])
#loc68 = loc(fused[#loc12, #loc13])
#loc69 = loc(fused[#loc14, #loc13])
#loc70 = loc(fused[#loc17, #loc16])
#loc71 = loc(fused[#loc20, #loc19])
#loc72 = loc(fused[#loc25, #loc26])
#loc73 = loc(fused[#loc27, #loc28])
#loc74 = loc(fused[#loc29, #loc30])
#loc75 = loc(fused[#loc31, #loc32])
#loc76 = loc(fused[#loc33, #loc34])
#loc77 = loc(fused[#loc35, #loc34])
#loc78 = loc(fused[#loc38, #loc37])
#loc79 = loc(fused[#loc40, #loc39])
#loc80 = loc(fused[#loc44, #loc45])
#loc81 = loc(fused[#loc47, #loc48])
#loc82 = loc(fused[#loc49, #loc50])
#loc83 = loc(fused[#loc51, #loc52])
#loc84 = loc(fused[#loc53, #loc54])
#loc85 = loc(fused[#loc55, #loc54])
#loc86 = loc(fused[#loc58, #loc57])
