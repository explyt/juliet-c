!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc113)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc114)
  cir.func private @printIntLine(!s32i) loc(#loc115)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc116)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc120)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc18)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc20)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc21)
    %7 = cir.binop(div, %5, %6) : !s32i loc(#loc122)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc122)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc27)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc125)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc126)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc127)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc128)
    cir.br ^bb2 loc(#loc129)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc35)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc130)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc131)
  ^bb3:  // pred: ^bb2
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc39)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
    cir.br ^bb4 loc(#loc33)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc33)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc132)
  ^bb6:  // pred: ^bb5
    %24 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc42)
    cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc133)
    cir.br ^bb7 loc(#loc132)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc45)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc134)
    cir.brcond %29 ^bb8, ^bb12 loc(#loc46)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc135)
  ^bb9:  // pred: ^bb8
    %30 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc51)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.br ^bb10 loc(#loc41)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc41)
  ^bb11:  // pred: ^bb10
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc53)
    cir.store %35, %0 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    cir.br ^bb7 loc(#loc132)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc41)
  ^bb13:  // pred: ^bb12
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc56)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc57)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc58)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
    cir.br ^bb14 loc(#loc25)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc10)
  } loc(#loc117)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc138)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc143)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc73)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc75)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc79)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc80)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc147)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc148)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc149)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    cir.br ^bb2 loc(#loc151)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc88)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc152)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc153)
  ^bb3:  // pred: ^bb2
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc92)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc86)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc154)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc95)
    cir.store %21, %0 : !u64i, !cir.ptr<!u64i> loc(#loc155)
    cir.br ^bb7 loc(#loc154)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc97)
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc98)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc156)
    cir.brcond %25 ^bb8, ^bb12 loc(#loc99)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc157)
  ^bb9:  // pred: ^bb8
    %26 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc104)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.br ^bb10 loc(#loc94)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc94)
  ^bb11:  // pred: ^bb10
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc105)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc106)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc159)
    cir.br ^bb7 loc(#loc154)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc94)
  ^bb13:  // pred: ^bb12
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc109)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc110)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc111)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
    cir.br ^bb14 loc(#loc78)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc65)
  } loc(#loc140)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":21:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":44:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":31:9)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":31:16)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":32:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":32:14)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":23:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":23:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":25:13)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":25:12)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":25:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":27:12)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":27:22)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":27:26)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":27:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":30:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":43:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":35:28)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":35:35)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":35:42)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":35:52)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":35:53)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":35:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":36:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":36:43)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":36:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":36:27)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":36:33)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":36:34)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":36:40)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":36:39)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":37:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":40:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":37:18)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":37:14)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":37:21)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":37:33)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":37:23)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":38:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":39:29)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":39:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":39:24)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":39:25)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":37:40)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":37:39)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":41:22)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":41:33)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":41:34)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":41:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":42:14)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":42:9)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":74:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":77:1)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":76:5)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":76:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":51:1)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":72:1)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":59:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":59:16)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":60:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":60:14)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":53:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":53:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":55:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":55:12)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":55:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":57:12)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":57:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":58:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":71:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":63:28)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":63:35)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":63:42)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":63:52)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":63:53)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":63:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":64:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":64:43)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":64:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":64:27)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":64:33)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":64:34)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":64:40)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":64:39)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":65:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":68:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":65:18)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":65:14)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":65:21)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":65:33)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":65:23)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":66:9)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":67:29)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":67:13)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":67:24)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":67:25)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":65:40)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":65:39)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":69:22)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":69:33)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":69:34)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":69:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":70:14)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_01.c":70:9)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc19, #loc17])
#loc122 = loc(fused[#loc20, #loc21])
#loc123 = loc(fused[#loc23, #loc22])
#loc124 = loc(fused[#loc24, #loc25])
#loc125 = loc(fused[#loc28, #loc29])
#loc126 = loc(fused[#loc27, #loc29])
#loc127 = loc(fused[#loc26, #loc30])
#loc128 = loc(fused[#loc31, #loc30])
#loc129 = loc(fused[#loc32, #loc33])
#loc130 = loc(fused[#loc34, #loc35])
#loc131 = loc(fused[#loc36, #loc33])
#loc132 = loc(fused[#loc40, #loc41])
#loc133 = loc(fused[#loc43, #loc42])
#loc134 = loc(fused[#loc44, #loc45])
#loc135 = loc(fused[#loc47, #loc41])
#loc136 = loc(fused[#loc49, #loc48])
#loc137 = loc(fused[#loc53, #loc52])
#loc138 = loc(fused[#loc60, #loc61])
#loc139 = loc(fused[#loc62, #loc63])
#loc140 = loc(fused[#loc64, #loc65])
#loc141 = loc(fused[#loc66, #loc67])
#loc142 = loc(fused[#loc68, #loc69])
#loc143 = loc(fused[#loc70, #loc71])
#loc144 = loc(fused[#loc74, #loc72])
#loc145 = loc(fused[#loc76, #loc75])
#loc146 = loc(fused[#loc77, #loc78])
#loc147 = loc(fused[#loc81, #loc82])
#loc148 = loc(fused[#loc80, #loc82])
#loc149 = loc(fused[#loc79, #loc83])
#loc150 = loc(fused[#loc84, #loc83])
#loc151 = loc(fused[#loc85, #loc86])
#loc152 = loc(fused[#loc87, #loc88])
#loc153 = loc(fused[#loc89, #loc86])
#loc154 = loc(fused[#loc93, #loc94])
#loc155 = loc(fused[#loc96, #loc95])
#loc156 = loc(fused[#loc97, #loc98])
#loc157 = loc(fused[#loc100, #loc94])
#loc158 = loc(fused[#loc102, #loc101])
#loc159 = loc(fused[#loc106, #loc105])
