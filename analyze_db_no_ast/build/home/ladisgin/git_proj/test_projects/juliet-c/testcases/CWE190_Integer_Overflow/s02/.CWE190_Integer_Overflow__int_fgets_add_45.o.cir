!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_fgets_add_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc138)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc139)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc140)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  internal dsolocal @CWE190_Integer_Overflow__int_fgets_add_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc142)
  cir.func no_proto  @CWE190_Integer_Overflow__int_fgets_add_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc147)
      %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc147)
      cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc147)
      cir.scope {
        %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc24)
        %8 = cir.const #cir.int<3> : !s32i loc(#loc25)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc25)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc25)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc25)
        %12 = cir.const #cir.int<2> : !s32i loc(#loc25)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc25)
        %14 = cir.binop(add, %11, %13) : !u64i loc(#loc25)
        %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc25)
        %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc139)
        %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc27)
        %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
        %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc149)
        %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc29)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc34)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc150)
      } loc(#loc148)
    } loc(#loc146)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %3 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_badData : !cir.ptr<!s32i> loc(#loc142)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %4 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %4() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc13)
  } loc(#loc143)
  cir.func no_proto  @CWE190_Integer_Overflow__int_fgets_add_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc154)
  cir.func private  @printIntLine(!s32i) loc(#loc157)
  cir.func no_proto internal private  @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc159)
    %1 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_badData : !cir.ptr<!s32i> loc(#loc142)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc161)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc58)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc161)
      %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc60)
    } loc(#loc160)
    cir.return loc(#loc51)
  } loc(#loc158)
  cir.global "private"  internal dsolocal @CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc162)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc164)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc67)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc69)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData : !cir.ptr<!s32i> loc(#loc162)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %5 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc64)
  } loc(#loc163)
  cir.func no_proto internal private  @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData : !cir.ptr<!s32i> loc(#loc162)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc172)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc82)
      %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc83)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc172)
      %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc85)
    } loc(#loc171)
    cir.return loc(#loc76)
  } loc(#loc169)
  cir.global "private"  internal dsolocal @CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc173)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc178)
      %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc178)
      cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc178)
      cir.scope {
        %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
        %8 = cir.const #cir.int<3> : !s32i loc(#loc101)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc101)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc101)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc101)
        %12 = cir.const #cir.int<2> : !s32i loc(#loc101)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc101)
        %14 = cir.binop(add, %11, %13) : !u64i loc(#loc101)
        %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc101)
        %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc139)
        %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc102)
        %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc103)
        %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
        %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc180)
        %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc105)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc110)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc113)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc113)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        } loc(#loc181)
      } loc(#loc179)
    } loc(#loc177)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %3 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData : !cir.ptr<!s32i> loc(#loc173)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %4 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %4() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc117)
    cir.return loc(#loc89)
  } loc(#loc174)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc119)
  cir.func no_proto internal private  @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData : !cir.ptr<!s32i> loc(#loc173)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc127)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !s32i loc(#loc188)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc128)
      cir.if %6 {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc190)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc134)
        cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc190)
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc135)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc136)
      } else {
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc119)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc119)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc137)
      } loc(#loc189)
    } loc(#loc187)
    cir.return loc(#loc121)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_fgets_add_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":53:23)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":22:1)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":22:12)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":38:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":58:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":40:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":40:9)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":42:12)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":42:5)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":43:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":55:5)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":44:9)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":44:45)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:9)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":54:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:19)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:32)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:49)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:13)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:59)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:56)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":47:9)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":50:9)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":52:9)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":49:25)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":49:20)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":49:13)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":49:36)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":53:13)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":56:57)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":56:5)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":57:5)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":57:13)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":124:1)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":128:1)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":126:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":126:13)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":127:5)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":127:13)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":28:1)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":36:1)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":30:5)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":30:16)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":31:5)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":35:5)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":33:9)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":33:29)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":33:22)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":34:22)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":34:9)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":23:1)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":23:12)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":75:1)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":84:1)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":77:5)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":77:9)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":79:12)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":79:5)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":81:12)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":81:5)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":82:61)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":82:5)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":83:5)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":83:17)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":65:1)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":73:1)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":67:5)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":67:16)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":68:5)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":72:5)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":70:9)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":70:29)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":70:22)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":71:22)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":71:9)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":24:1)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":24:12)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":102:1)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":122:1)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":104:5)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":104:9)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":106:12)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":106:5)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":107:5)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":119:5)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":108:9)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":108:45)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:9)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":118:9)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:19)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:32)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:49)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:13)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:59)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:56)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":111:9)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":114:9)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":116:9)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":113:25)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":113:20)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":113:13)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":113:36)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":117:23)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":117:13)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":120:61)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":120:5)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":121:5)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":121:17)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":98:19)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":87:1)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":100:1)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":89:5)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":89:16)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":91:5)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":99:5)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":91:9)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":91:16)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":91:14)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":92:5)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":95:5)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":97:5)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":93:9)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":93:29)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":93:22)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":94:22)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":94:9)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":98:9)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc10, #loc11])
#loc143 = loc(fused[#loc12, #loc13])
#loc144 = loc(fused[#loc14, #loc15])
#loc145 = loc(fused[#loc17, #loc16])
#loc146 = loc(fused[#loc18, #loc19])
#loc147 = loc(fused[#loc20, #loc21])
#loc148 = loc(fused[#loc22, #loc23])
#loc149 = loc(fused[#loc27, #loc28])
#loc150 = loc(fused[#loc30, #loc31, #loc32, #loc23])
#loc151 = loc(fused[#loc35, #loc36])
#loc152 = loc(fused[#loc39, #loc38])
#loc153 = loc(fused[#loc40, #loc41])
#loc154 = loc(fused[#loc42, #loc43])
#loc155 = loc(fused[#loc44, #loc45])
#loc156 = loc(fused[#loc46, #loc47])
#loc157 = loc(fused[#loc48, #loc49])
#loc158 = loc(fused[#loc50, #loc51])
#loc159 = loc(fused[#loc52, #loc53])
#loc160 = loc(fused[#loc54, #loc55])
#loc161 = loc(fused[#loc56, #loc57])
#loc162 = loc(fused[#loc61, #loc62])
#loc163 = loc(fused[#loc63, #loc64])
#loc164 = loc(fused[#loc65, #loc66])
#loc165 = loc(fused[#loc68, #loc67])
#loc166 = loc(fused[#loc70, #loc69])
#loc167 = loc(fused[#loc72, #loc71])
#loc168 = loc(fused[#loc73, #loc74])
#loc169 = loc(fused[#loc75, #loc76])
#loc170 = loc(fused[#loc77, #loc78])
#loc171 = loc(fused[#loc79, #loc80])
#loc172 = loc(fused[#loc81, #loc82])
#loc173 = loc(fused[#loc86, #loc87])
#loc174 = loc(fused[#loc88, #loc89])
#loc175 = loc(fused[#loc90, #loc91])
#loc176 = loc(fused[#loc93, #loc92])
#loc177 = loc(fused[#loc94, #loc95])
#loc178 = loc(fused[#loc96, #loc97])
#loc179 = loc(fused[#loc98, #loc99])
#loc180 = loc(fused[#loc103, #loc104])
#loc181 = loc(fused[#loc106, #loc107, #loc108, #loc99])
#loc182 = loc(fused[#loc111, #loc112])
#loc183 = loc(fused[#loc116, #loc115])
#loc184 = loc(fused[#loc117, #loc118])
#loc185 = loc(fused[#loc120, #loc121])
#loc186 = loc(fused[#loc122, #loc123])
#loc187 = loc(fused[#loc124, #loc125])
#loc188 = loc(fused[#loc126, #loc127])
#loc189 = loc(fused[#loc129, #loc130, #loc131, #loc125])
#loc190 = loc(fused[#loc132, #loc133])
