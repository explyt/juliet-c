!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc115 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc168)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc169)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc170)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc171)
  cir.func  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_133badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc174)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc168)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc18)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc176)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc21)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc21)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc178)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc179)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc180)
        cir.store %12, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc181)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
          %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc183)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc33)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
          } loc(#loc184)
        } loc(#loc182)
      } loc(#loc177)
    } loc(#loc175)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc168)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc36)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc37)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc186)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc39)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc39)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc40)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc40)
      } loc(#loc187)
    } loc(#loc185)
    cir.return loc(#loc10)
  } loc(#loc172)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc188)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc43)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc189)
  cir.func internal private  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc50)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc192)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc168)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc55)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc194)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc57)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc58)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc58)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc196)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc197)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc198)
        cir.store %12, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc199)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc65)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
          %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc201)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc68)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc69)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc70)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
          } loc(#loc202)
        } loc(#loc200)
      } loc(#loc195)
    } loc(#loc193)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc168)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc73)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc74)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc204)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc43)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc43)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc79)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc80)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
      } loc(#loc205)
    } loc(#loc203)
    cir.return loc(#loc47)
  } loc(#loc190)
  cir.func internal private  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc85)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc208)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc168)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc90)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc210)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc92)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc93)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc93)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc212)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc213)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc92)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc214)
        cir.store %12, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc215)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc100)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc101)
          %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc217)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc103)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc105)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc103)
          } loc(#loc218)
        } loc(#loc216)
      } loc(#loc211)
    } loc(#loc209)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc168)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc108)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc109)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc220)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc111)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc112)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc112)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc82)
  } loc(#loc206)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc222)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc115)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc115)
    cir.return loc(#loc115)
  } loc(#loc115)
  cir.func internal private  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc120)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc225)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc168)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc125)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc227)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc129)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc129)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc130)
      } else {
        %6 = cir.const #cir.int<8> : !u64i loc(#loc229)
        %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc133)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc229)
        cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc132)
        cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc230)
      } loc(#loc228)
    } loc(#loc226)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc168)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc138)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc232)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc140)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc140)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc133)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc133)
      } loc(#loc233)
    } loc(#loc231)
    cir.return loc(#loc117)
  } loc(#loc223)
  cir.func internal private  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc145)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc236)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc168)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc150)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc238)
      cir.if %5 {
        %6 = cir.const #cir.int<8> : !u64i loc(#loc240)
        %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc154)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc240)
        cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc153)
        cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc241)
      } loc(#loc239)
    } loc(#loc237)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc168)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc159)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc243)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc161)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc161)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc154)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc154)
      } loc(#loc244)
    } loc(#loc242)
    cir.return loc(#loc142)
  } loc(#loc234)
  cir.func  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_134goodEv() extra(#fn_attr1) {
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13L8goodB2G1Ev() : () -> () loc(#loc164)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13L8goodB2G2Ev() : () -> () loc(#loc165)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13L8goodG2B1Ev() : () -> () loc(#loc166)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13L8goodG2B2Ev() : () -> () loc(#loc167)
    cir.return loc(#loc163)
  } loc(#loc245)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":24:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":41:1)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":26:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":26:20)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":28:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":28:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":29:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":34:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":29:8)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":29:27)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":30:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":32:32)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":32:39)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":32:43)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":32:62)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":32:63)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":32:9)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":33:9)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":33:37)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":33:13)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":33:21)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":33:27)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":33:28)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":33:34)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":33:33)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":35:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":40:5)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":35:8)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":35:27)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":36:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":39:16)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":24:6)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":62:19)
#loc44 = loc("/usr/include/stdlib.h":687:1)
#loc45 = loc("/usr/include/stdlib.h":687:32)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":48:1)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":69:1)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":50:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":50:20)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":52:12)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":52:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":53:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":58:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":53:8)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":53:27)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":54:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":56:32)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":56:39)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":56:43)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":56:62)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":56:63)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":56:9)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":57:9)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":57:37)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":57:13)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":57:21)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":57:27)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":57:28)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":57:34)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":57:33)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":59:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":68:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":59:8)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":59:27)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":60:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":63:5)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":65:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":62:9)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":67:9)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":67:14)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":72:1)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":88:1)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":74:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":74:20)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":76:12)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":76:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":77:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":82:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":77:8)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":77:27)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":78:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":80:32)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":80:39)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":80:43)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":80:62)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":80:63)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":80:9)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":81:9)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":81:37)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":81:13)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":81:21)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":81:27)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":81:28)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":81:34)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":81:33)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":83:5)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":87:5)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":83:8)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":83:27)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":84:5)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":86:9)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":86:14)
#loc113 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc114 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":91:1)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":112:1)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":93:5)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":93:20)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":95:12)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":95:5)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":96:5)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":105:5)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":96:8)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":96:27)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":97:5)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":100:5)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":102:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":99:19)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":99:9)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":104:16)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":104:20)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":91:13)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":104:9)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":106:5)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":111:5)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":106:8)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":106:27)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":107:5)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":110:16)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":115:1)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":131:1)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":117:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":117:20)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":119:12)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":119:5)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":120:5)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":124:5)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":120:8)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":120:27)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":121:5)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":123:16)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":123:20)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":115:13)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":123:9)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":125:5)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":130:5)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":125:8)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":125:27)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":126:5)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":129:16)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":133:1)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":139:1)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":135:5)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":136:5)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":137:5)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_13.cpp":138:5)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc3, #loc4])
#loc170 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc7, #loc8])
#loc172 = loc(fused[#loc9, #loc10])
#loc173 = loc(fused[#loc11, #loc12])
#loc174 = loc(fused[#loc14, #loc13])
#loc175 = loc(fused[#loc15, #loc16])
#loc176 = loc(fused[#loc17, #loc18])
#loc177 = loc(fused[#loc19, #loc16])
#loc178 = loc(fused[#loc22, #loc23])
#loc179 = loc(fused[#loc21, #loc23])
#loc180 = loc(fused[#loc20, #loc24])
#loc181 = loc(fused[#loc25, #loc24])
#loc182 = loc(fused[#loc26, #loc27])
#loc183 = loc(fused[#loc28, #loc29])
#loc184 = loc(fused[#loc30, #loc27])
#loc185 = loc(fused[#loc34, #loc35])
#loc186 = loc(fused[#loc36, #loc37])
#loc187 = loc(fused[#loc38, #loc35])
#loc188 = loc(fused[#loc41, #loc42])
#loc189 = loc(fused[#loc44, #loc45])
#loc190 = loc(fused[#loc46, #loc47])
#loc191 = loc(fused[#loc48, #loc49])
#loc192 = loc(fused[#loc51, #loc50])
#loc193 = loc(fused[#loc52, #loc53])
#loc194 = loc(fused[#loc54, #loc55])
#loc195 = loc(fused[#loc56, #loc53])
#loc196 = loc(fused[#loc59, #loc60])
#loc197 = loc(fused[#loc58, #loc60])
#loc198 = loc(fused[#loc57, #loc61])
#loc199 = loc(fused[#loc62, #loc61])
#loc200 = loc(fused[#loc63, #loc64])
#loc201 = loc(fused[#loc65, #loc66])
#loc202 = loc(fused[#loc67, #loc64])
#loc203 = loc(fused[#loc71, #loc72])
#loc204 = loc(fused[#loc73, #loc74])
#loc205 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc206 = loc(fused[#loc81, #loc82])
#loc207 = loc(fused[#loc83, #loc84])
#loc208 = loc(fused[#loc86, #loc85])
#loc209 = loc(fused[#loc87, #loc88])
#loc210 = loc(fused[#loc89, #loc90])
#loc211 = loc(fused[#loc91, #loc88])
#loc212 = loc(fused[#loc94, #loc95])
#loc213 = loc(fused[#loc93, #loc95])
#loc214 = loc(fused[#loc92, #loc96])
#loc215 = loc(fused[#loc97, #loc96])
#loc216 = loc(fused[#loc98, #loc99])
#loc217 = loc(fused[#loc100, #loc101])
#loc218 = loc(fused[#loc102, #loc99])
#loc219 = loc(fused[#loc106, #loc107])
#loc220 = loc(fused[#loc108, #loc109])
#loc221 = loc(fused[#loc110, #loc107])
#loc222 = loc(fused[#loc113, #loc114])
#loc223 = loc(fused[#loc116, #loc117])
#loc224 = loc(fused[#loc118, #loc119])
#loc225 = loc(fused[#loc121, #loc120])
#loc226 = loc(fused[#loc122, #loc123])
#loc227 = loc(fused[#loc124, #loc125])
#loc228 = loc(fused[#loc126, #loc127, #loc128, #loc123])
#loc229 = loc(fused[#loc131, #loc132])
#loc230 = loc(fused[#loc134, #loc132])
#loc231 = loc(fused[#loc135, #loc136])
#loc232 = loc(fused[#loc137, #loc138])
#loc233 = loc(fused[#loc139, #loc136])
#loc234 = loc(fused[#loc141, #loc142])
#loc235 = loc(fused[#loc143, #loc144])
#loc236 = loc(fused[#loc146, #loc145])
#loc237 = loc(fused[#loc147, #loc148])
#loc238 = loc(fused[#loc149, #loc150])
#loc239 = loc(fused[#loc151, #loc148])
#loc240 = loc(fused[#loc152, #loc153])
#loc241 = loc(fused[#loc155, #loc153])
#loc242 = loc(fused[#loc156, #loc157])
#loc243 = loc(fused[#loc158, #loc159])
#loc244 = loc(fused[#loc160, #loc157])
#loc245 = loc(fused[#loc162, #loc163])
