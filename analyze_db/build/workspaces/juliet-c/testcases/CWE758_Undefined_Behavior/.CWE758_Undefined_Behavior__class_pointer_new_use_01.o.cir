!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc27 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc63)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc64)
  cir.func private @printIntLine(!s32i) loc(#loc65)
  cir.func @_ZN51CWE758_Undefined_Behavior__class_pointer_new_use_013badEv() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc68)
      %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc69)
      %2 = cir.const #cir.int<8> : !u64i loc(#loc70)
      %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc68)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc70)
      cir.store %4, %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc68)
      %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc14)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc16)
      cir.store %6, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc69)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc17)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>), !cir.ptr<!void> loc(#loc17)
      cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc18)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc19)
      %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
      %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc22)
      %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc23)
      %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc26)
    } loc(#loc67)
    cir.return loc(#loc8)
  } loc(#loc66)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc27)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc27)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc27)
    cir.return loc(#loc27)
  } loc(#loc27)
  cir.func internal private @_ZN51CWE758_Undefined_Behavior__class_pointer_new_use_01L5good1Ev() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc73)
      %1 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc74)
      %2 = cir.const #cir.int<8> : !u64i loc(#loc75)
      %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc38)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc75)
      cir.call @_ZN12TwoIntsClassC2Ev(%4) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc37)
      cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc76)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc40)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc41)
      %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
      cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc77)
      %8 = cir.const #cir.int<6> : !s32i loc(#loc42)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
      %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
      cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc78)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc79)
      %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc74)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc79)
      cir.store %13, %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc74)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc46)
      cir.store %14, %15 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc80)
      cir.scope {
        %18 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc82)
        %19 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc51)
        %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc52)
        cir.store %20, %18 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc82)
        %21 = cir.load %18 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc53)
        %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
        %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc54)
        cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc55)
        %24 = cir.load %18 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc56)
        %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
        %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc57)
        cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc58)
      } loc(#loc81)
      %16 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc59)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>), !cir.ptr<!void> loc(#loc59)
      cir.call @_ZdlPv(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc38)
    } loc(#loc72)
    cir.return loc(#loc29)
  } loc(#loc71)
  cir.func @_ZN51CWE758_Undefined_Behavior__class_pointer_new_use_014goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE758_Undefined_Behavior__class_pointer_new_use_01L5good1Ev() : () -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc83)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":23:1)
#loc8 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":32:1)
#loc9 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":25:5)
#loc10 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":31:5)
#loc11 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":26:9)
#loc12 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":26:53)
#loc13 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":27:9)
#loc14 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":27:32)
#loc15 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":26:36)
#loc16 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":27:31)
#loc17 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":28:16)
#loc18 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":23:6)
#loc19 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":29:22)
#loc20 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc21 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":29:28)
#loc22 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":29:9)
#loc23 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":30:22)
#loc24 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc25 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":30:28)
#loc26 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":30:9)
#loc28 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":38:1)
#loc29 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":55:1)
#loc30 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":40:5)
#loc31 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":54:5)
#loc32 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":41:9)
#loc33 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":41:24)
#loc34 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":46:9)
#loc35 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":46:53)
#loc36 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":43:16)
#loc37 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":43:20)
#loc38 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":38:13)
#loc39 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":43:9)
#loc40 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":44:24)
#loc41 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":44:9)
#loc42 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":45:24)
#loc43 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":45:9)
#loc44 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":46:36)
#loc45 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":47:20)
#loc46 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":47:10)
#loc47 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":47:9)
#loc48 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":48:9)
#loc49 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":52:9)
#loc50 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":49:13)
#loc51 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":49:36)
#loc52 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":49:35)
#loc53 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":50:26)
#loc54 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":50:32)
#loc55 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":50:13)
#loc56 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":51:26)
#loc57 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":51:32)
#loc58 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":51:13)
#loc59 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":53:16)
#loc60 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":57:1)
#loc61 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":60:1)
#loc62 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_01.cpp":59:5)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc3, #loc4])
#loc65 = loc(fused[#loc5, #loc6])
#loc66 = loc(fused[#loc7, #loc8])
#loc67 = loc(fused[#loc9, #loc10])
#loc68 = loc(fused[#loc11, #loc12])
#loc69 = loc(fused[#loc13, #loc14])
#loc70 = loc(fused[#loc15, #loc12])
#loc71 = loc(fused[#loc28, #loc29])
#loc72 = loc(fused[#loc30, #loc31])
#loc73 = loc(fused[#loc32, #loc33])
#loc74 = loc(fused[#loc34, #loc35])
#loc75 = loc(fused[#loc36, #loc37])
#loc76 = loc(fused[#loc39, #loc37])
#loc77 = loc(fused[#loc41, #loc40])
#loc78 = loc(fused[#loc43, #loc42])
#loc79 = loc(fused[#loc44, #loc35])
#loc80 = loc(fused[#loc47, #loc45])
#loc81 = loc(fused[#loc48, #loc49])
#loc82 = loc(fused[#loc50, #loc51])
#loc83 = loc(fused[#loc60, #loc61])
