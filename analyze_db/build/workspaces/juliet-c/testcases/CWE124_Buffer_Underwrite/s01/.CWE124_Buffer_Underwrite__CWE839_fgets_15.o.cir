!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc373)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc374)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc375)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc376)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private @printIntLine(!s32i) loc(#loc377)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc379)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc23)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc383)
            %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc383)
            cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc383)
            cir.scope {
              %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
              %7 = cir.const #cir.int<3> : !s32i loc(#loc32)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc32)
              %9 = cir.const #cir.int<4> : !u64i loc(#loc32)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc32)
              %11 = cir.const #cir.int<2> : !s32i loc(#loc32)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc32)
              %13 = cir.binop(add, %10, %12) : !u64i loc(#loc32)
              %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc32)
              %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc374)
              %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
              %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
              %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc385)
              cir.if %20 {
                %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
                %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc40)
                cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc387)
              } else {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc43)
              } loc(#loc386)
            } loc(#loc384)
          } loc(#loc382)
          cir.break loc(#loc44)
        } loc(#loc24)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc46)
          cir.break loc(#loc47)
        } loc(#loc45)
        cir.yield loc(#loc21)
      } loc(#loc21)
    } loc(#loc381)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc50)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc390)
            %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc391)
            %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc391)
            cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc391)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
              %8 = cir.const #cir.int<10> : !s32i loc(#loc61)
              %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc393)
              cir.if %9 {
                %10 = cir.const #cir.int<1> : !s32i loc(#loc65)
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
                %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc67)
                %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc67)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc395)
                cir.scope {
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc70)
                  cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc397)
                  cir.for : cond {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc72)
                    %16 = cir.const #cir.int<10> : !s32i loc(#loc73)
                    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc398)
                    cir.condition(%17) loc(#loc74)
                  } body {
                    cir.scope {
                      %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                      %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc77)
                      %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc77)
                      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc77)
                      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc78)
                    } loc(#loc399)
                    cir.yield loc(#loc69)
                  } step {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                    %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc80)
                    cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc400)
                    cir.yield loc(#loc396)
                  } loc(#loc396)
                } loc(#loc396)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc13)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc13)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc81)
              } loc(#loc394)
            } loc(#loc392)
          } loc(#loc389)
          cir.break loc(#loc82)
        } loc(#loc51)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc84)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc84)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc85)
          cir.break loc(#loc86)
        } loc(#loc83)
        cir.yield loc(#loc48)
      } loc(#loc48)
    } loc(#loc388)
    cir.return loc(#loc15)
  } loc(#loc378)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc402)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc89)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc403)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc91)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc404)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc93)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc405)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc95)
    cir.return loc(#loc88)
  } loc(#loc401)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc97)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc407)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc103)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc107)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc411)
            %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc411)
            cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc411)
            cir.scope {
              %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
              %7 = cir.const #cir.int<3> : !s32i loc(#loc116)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc116)
              %9 = cir.const #cir.int<4> : !u64i loc(#loc116)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc116)
              %11 = cir.const #cir.int<2> : !s32i loc(#loc116)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc116)
              %13 = cir.binop(add, %10, %12) : !u64i loc(#loc116)
              %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc116)
              %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc374)
              %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc117)
              %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc118)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
              %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc413)
              cir.if %20 {
                %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
                %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc124)
                cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc415)
              } else {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc127)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc127)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc128)
              } loc(#loc414)
            } loc(#loc412)
          } loc(#loc410)
          cir.break loc(#loc129)
        } loc(#loc108)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc131)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc131)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          cir.break loc(#loc133)
        } loc(#loc130)
        cir.yield loc(#loc105)
      } loc(#loc105)
    } loc(#loc409)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc136)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc138)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc138)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc139)
          cir.break loc(#loc140)
        } loc(#loc137)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc418)
            %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc419)
            %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc419)
            cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc419)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %8 = cir.const #cir.int<0> : !s32i loc(#loc151)
              %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc421)
              %10 = cir.ternary(%9, true {
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
                %12 = cir.const #cir.int<10> : !s32i loc(#loc154)
                %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc422)
                %14 = cir.ternary(%13, true {
                  %15 = cir.const #true loc(#loc152)
                  cir.yield %15 : !cir.bool loc(#loc152)
                }, false {
                  %15 = cir.const #false loc(#loc152)
                  cir.yield %15 : !cir.bool loc(#loc152)
                }) : (!cir.bool) -> !cir.bool loc(#loc152)
                cir.yield %14 : !cir.bool loc(#loc152)
              }, false {
                %11 = cir.const #false loc(#loc152)
                cir.yield %11 : !cir.bool loc(#loc152)
              }) : (!cir.bool) -> !cir.bool loc(#loc152)
              cir.if %10 {
                %11 = cir.const #cir.int<1> : !s32i loc(#loc159)
                %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
                %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc161)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc161)
                cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc424)
                cir.scope {
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc164)
                  cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc426)
                  cir.for : cond {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc166)
                    %17 = cir.const #cir.int<10> : !s32i loc(#loc167)
                    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc427)
                    cir.condition(%18) loc(#loc168)
                  } body {
                    cir.scope {
                      %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc170)
                      %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc171)
                      %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc171)
                      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc171)
                      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc172)
                    } loc(#loc428)
                    cir.yield loc(#loc163)
                  } step {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc173)
                    %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc174)
                    cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc429)
                    cir.yield loc(#loc425)
                  } loc(#loc425)
                } loc(#loc425)
              } else {
                %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc97)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc97)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc175)
              } loc(#loc423)
            } loc(#loc420)
          } loc(#loc417)
          cir.break loc(#loc176)
        } loc(#loc141)
        cir.yield loc(#loc134)
      } loc(#loc134)
    } loc(#loc416)
    cir.return loc(#loc99)
  } loc(#loc406)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc431)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc182)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc432)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc186)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc435)
            %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc435)
            cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc435)
            cir.scope {
              %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc194)
              %7 = cir.const #cir.int<3> : !s32i loc(#loc195)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc195)
              %9 = cir.const #cir.int<4> : !u64i loc(#loc195)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc195)
              %11 = cir.const #cir.int<2> : !s32i loc(#loc195)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc195)
              %13 = cir.binop(add, %10, %12) : !u64i loc(#loc195)
              %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc195)
              %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc374)
              %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc196)
              %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc197)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc198)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
              %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc437)
              cir.if %20 {
                %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc202)
                %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc203)
                cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc439)
              } else {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc206)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc206)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc207)
              } loc(#loc438)
            } loc(#loc436)
          } loc(#loc434)
          cir.break loc(#loc208)
        } loc(#loc187)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc210)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc210)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc211)
          cir.break loc(#loc212)
        } loc(#loc209)
        cir.yield loc(#loc184)
      } loc(#loc184)
    } loc(#loc433)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc215)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc442)
            %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc443)
            %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc443)
            cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc443)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
              %8 = cir.const #cir.int<0> : !s32i loc(#loc226)
              %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc445)
              %10 = cir.ternary(%9, true {
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                %12 = cir.const #cir.int<10> : !s32i loc(#loc229)
                %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc446)
                %14 = cir.ternary(%13, true {
                  %15 = cir.const #true loc(#loc227)
                  cir.yield %15 : !cir.bool loc(#loc227)
                }, false {
                  %15 = cir.const #false loc(#loc227)
                  cir.yield %15 : !cir.bool loc(#loc227)
                }) : (!cir.bool) -> !cir.bool loc(#loc227)
                cir.yield %14 : !cir.bool loc(#loc227)
              }, false {
                %11 = cir.const #false loc(#loc227)
                cir.yield %11 : !cir.bool loc(#loc227)
              }) : (!cir.bool) -> !cir.bool loc(#loc227)
              cir.if %10 {
                %11 = cir.const #cir.int<1> : !s32i loc(#loc234)
                %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc236)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc236)
                cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc448)
                cir.scope {
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc239)
                  cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc450)
                  cir.for : cond {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                    %17 = cir.const #cir.int<10> : !s32i loc(#loc242)
                    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc451)
                    cir.condition(%18) loc(#loc243)
                  } body {
                    cir.scope {
                      %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                      %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc246)
                      %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc246)
                      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc247)
                    } loc(#loc452)
                    cir.yield loc(#loc238)
                  } step {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc248)
                    %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc249)
                    cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc453)
                    cir.yield loc(#loc449)
                  } loc(#loc449)
                } loc(#loc449)
              } else {
                %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc250)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc250)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc251)
              } loc(#loc447)
            } loc(#loc444)
          } loc(#loc441)
          cir.break loc(#loc252)
        } loc(#loc216)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc254)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc254)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc255)
          cir.break loc(#loc256)
        } loc(#loc253)
        cir.yield loc(#loc213)
      } loc(#loc213)
    } loc(#loc440)
    cir.return loc(#loc178)
  } loc(#loc430)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc455)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc262)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc456)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc266)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc268)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc268)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc269)
          cir.break loc(#loc270)
        } loc(#loc267)
        cir.case(default, []) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc272)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc458)
          cir.break loc(#loc274)
        } loc(#loc271)
        cir.yield loc(#loc264)
      } loc(#loc264)
    } loc(#loc457)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc277)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc461)
            %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc462)
            %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc462)
            cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc462)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
              %8 = cir.const #cir.int<10> : !s32i loc(#loc288)
              %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc464)
              cir.if %9 {
                %10 = cir.const #cir.int<1> : !s32i loc(#loc292)
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc294)
                %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc294)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc466)
                cir.scope {
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc297)
                  cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc468)
                  cir.for : cond {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                    %16 = cir.const #cir.int<10> : !s32i loc(#loc300)
                    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc469)
                    cir.condition(%17) loc(#loc301)
                  } body {
                    cir.scope {
                      %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc303)
                      %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc304)
                      %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc304)
                      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc305)
                    } loc(#loc470)
                    cir.yield loc(#loc296)
                  } step {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc306)
                    %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc307)
                    cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc471)
                    cir.yield loc(#loc467)
                  } loc(#loc467)
                } loc(#loc467)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc308)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc308)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc309)
              } loc(#loc465)
            } loc(#loc463)
          } loc(#loc460)
          cir.break loc(#loc310)
        } loc(#loc278)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc312)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc312)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc313)
          cir.break loc(#loc314)
        } loc(#loc311)
        cir.yield loc(#loc275)
      } loc(#loc275)
    } loc(#loc459)
    cir.return loc(#loc258)
  } loc(#loc454)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc473)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc319)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc320)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc474)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc324)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc326)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc476)
          cir.break loc(#loc328)
        } loc(#loc325)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc330)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc330)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc331)
          cir.break loc(#loc332)
        } loc(#loc329)
        cir.yield loc(#loc322)
      } loc(#loc322)
    } loc(#loc475)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc335)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc479)
            %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc480)
            %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc480)
            cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc480)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc345)
              %8 = cir.const #cir.int<10> : !s32i loc(#loc346)
              %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc482)
              cir.if %9 {
                %10 = cir.const #cir.int<1> : !s32i loc(#loc350)
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc351)
                %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc352)
                %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc352)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc484)
                cir.scope {
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc355)
                  cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc486)
                  cir.for : cond {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc357)
                    %16 = cir.const #cir.int<10> : !s32i loc(#loc358)
                    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc487)
                    cir.condition(%17) loc(#loc359)
                  } body {
                    cir.scope {
                      %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc361)
                      %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc362)
                      %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc362)
                      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc362)
                      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc363)
                    } loc(#loc488)
                    cir.yield loc(#loc354)
                  } step {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc364)
                    %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc365)
                    cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc489)
                    cir.yield loc(#loc485)
                  } loc(#loc485)
                } loc(#loc485)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc366)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc366)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc367)
              } loc(#loc483)
            } loc(#loc481)
          } loc(#loc478)
          cir.break loc(#loc368)
        } loc(#loc336)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc370)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc370)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc371)
          cir.break loc(#loc372)
        } loc(#loc369)
        cir.yield loc(#loc333)
      } loc(#loc333)
    } loc(#loc477)
    cir.return loc(#loc316)
  } loc(#loc472)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":42:23)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":48:19)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":70:23)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":24:1)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":79:1)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":26:5)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":26:9)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":28:13)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":28:12)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":28:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":29:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":50:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":29:12)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":31:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":32:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":44:5)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":33:9)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":33:45)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":35:9)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":43:9)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":35:19)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":35:32)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":35:49)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":35:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":35:59)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":36:9)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":39:9)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":41:9)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":38:25)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":38:20)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":38:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":38:36)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":42:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":45:5)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":46:5)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":48:9)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":49:9)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":51:5)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":78:5)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":51:12)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":53:5)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":54:5)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":72:5)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":55:9)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":55:13)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":56:9)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":56:30)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":59:9)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":71:9)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":59:13)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":59:20)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":60:9)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":67:9)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":69:9)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":61:28)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":61:20)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":61:13)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":63:13)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":66:13)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":63:21)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":63:17)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":63:24)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":63:28)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":63:26)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":64:13)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":65:37)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":65:30)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":65:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":63:33)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":63:32)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":70:13)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":73:5)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":74:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":76:19)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":76:9)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":77:9)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":295:1)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":301:1)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":297:5)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":297:14)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":298:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":298:14)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":299:5)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":299:14)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":300:5)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":300:14)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":135:23)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":86:1)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":140:1)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":88:5)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":88:9)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":90:13)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":90:12)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":90:5)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":91:5)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":112:5)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":91:12)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":93:5)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":94:5)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":106:5)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":95:9)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":95:45)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":97:9)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":105:9)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":97:19)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":97:32)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":97:49)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":97:13)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":97:59)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":98:9)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":101:9)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":103:9)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":100:25)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":100:20)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":100:13)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":100:36)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":104:23)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":104:13)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":107:5)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":108:5)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":110:19)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":110:9)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":111:9)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":113:5)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":139:5)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":113:12)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":115:5)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":117:19)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":117:9)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":118:9)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":119:5)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":120:5)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":137:5)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":121:9)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":121:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":122:9)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":122:30)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":124:9)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":136:9)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":124:13)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":124:21)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":124:23)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":124:26)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":124:34)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":124:36)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":125:9)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":132:9)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":134:9)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":126:28)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":126:20)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":126:13)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":128:13)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":131:13)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":128:21)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":128:17)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":128:24)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":128:28)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":128:26)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":129:13)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":130:37)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":130:30)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":130:17)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":128:33)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":128:32)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":135:13)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":138:5)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":143:1)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":197:1)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":145:5)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":145:9)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":147:13)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":147:12)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":147:5)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":148:5)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":169:5)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":148:12)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":150:5)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":151:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":163:5)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":152:9)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":152:45)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":154:9)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":162:9)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":154:19)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":154:32)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":154:49)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":154:13)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":154:59)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":155:9)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":158:9)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":160:9)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":157:25)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":157:20)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":157:13)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":157:36)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":161:23)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":161:13)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":164:5)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":165:5)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":167:19)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":167:9)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":168:9)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":170:5)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":196:5)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":170:12)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":172:5)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":173:5)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":190:5)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":174:9)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":174:13)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":175:9)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":175:30)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":177:9)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":189:9)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":177:13)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":177:21)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":177:23)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":177:26)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":177:34)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":177:36)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":178:9)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":185:9)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":187:9)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":179:28)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":179:20)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":179:13)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":181:13)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":184:13)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":181:21)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":181:17)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":181:24)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":181:28)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":181:26)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":182:13)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":183:37)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":183:30)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":183:17)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":181:33)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":181:32)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":188:23)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":188:13)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":191:5)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":192:5)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":194:19)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":194:9)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":195:9)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":200:1)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":245:1)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":202:5)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":202:9)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":204:13)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":204:12)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":204:5)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":205:5)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":216:5)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":205:12)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":207:5)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":209:19)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":209:9)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":210:9)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":211:5)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":214:16)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":214:9)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":215:9)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":217:5)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":244:5)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":217:12)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":219:5)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":220:5)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":238:5)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":221:9)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":221:13)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":222:9)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":222:30)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":225:9)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":237:9)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":225:13)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":225:20)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":226:9)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":233:9)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":235:9)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":227:28)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":227:20)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":227:13)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":229:13)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":232:13)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":229:21)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":229:17)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":229:24)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":229:28)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":229:26)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":230:13)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":231:37)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":231:30)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":231:17)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":229:33)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":229:32)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":236:23)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":236:13)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":239:5)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":240:5)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":242:19)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":242:9)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":243:9)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":248:1)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":293:1)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":250:5)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":250:9)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":252:13)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":252:12)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":252:5)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":253:5)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":264:5)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":253:12)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":255:5)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":258:16)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":258:9)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":259:9)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":260:5)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":262:19)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":262:9)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":263:9)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":265:5)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":292:5)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":265:12)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":267:5)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":268:5)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":286:5)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":269:9)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":269:13)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":270:9)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":270:30)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":273:9)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":285:9)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":273:13)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":273:20)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":274:9)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":281:9)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":283:9)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":275:28)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":275:20)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":275:13)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":277:13)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":280:13)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":277:21)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":277:17)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":277:24)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":277:28)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":277:26)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":278:13)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":279:37)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":279:30)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":279:17)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":277:33)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":277:32)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":284:23)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":284:13)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":287:5)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":288:5)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":290:19)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":290:9)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_15.c":291:9)
#loc373 = loc(fused[#loc1, #loc2])
#loc374 = loc(fused[#loc3, #loc4])
#loc375 = loc(fused[#loc5, #loc6])
#loc376 = loc(fused[#loc7, #loc8])
#loc377 = loc(fused[#loc11, #loc12])
#loc378 = loc(fused[#loc14, #loc15])
#loc379 = loc(fused[#loc16, #loc17])
#loc380 = loc(fused[#loc20, #loc18])
#loc381 = loc(fused[#loc21, #loc22])
#loc382 = loc(fused[#loc25, #loc26])
#loc383 = loc(fused[#loc27, #loc28])
#loc384 = loc(fused[#loc29, #loc30])
#loc385 = loc(fused[#loc34, #loc35])
#loc386 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc387 = loc(fused[#loc41, #loc42])
#loc388 = loc(fused[#loc48, #loc49])
#loc389 = loc(fused[#loc52, #loc53])
#loc390 = loc(fused[#loc54, #loc55])
#loc391 = loc(fused[#loc56, #loc57])
#loc392 = loc(fused[#loc58, #loc59])
#loc393 = loc(fused[#loc60, #loc61])
#loc394 = loc(fused[#loc62, #loc63, #loc64, #loc59])
#loc395 = loc(fused[#loc67, #loc65])
#loc396 = loc(fused[#loc68, #loc69])
#loc397 = loc(fused[#loc71, #loc70])
#loc398 = loc(fused[#loc72, #loc73])
#loc399 = loc(fused[#loc75, #loc69])
#loc400 = loc(fused[#loc80, #loc79])
#loc401 = loc(fused[#loc87, #loc88])
#loc402 = loc(fused[#loc89, #loc90])
#loc403 = loc(fused[#loc91, #loc92])
#loc404 = loc(fused[#loc93, #loc94])
#loc405 = loc(fused[#loc95, #loc96])
#loc406 = loc(fused[#loc98, #loc99])
#loc407 = loc(fused[#loc100, #loc101])
#loc408 = loc(fused[#loc104, #loc102])
#loc409 = loc(fused[#loc105, #loc106])
#loc410 = loc(fused[#loc109, #loc110])
#loc411 = loc(fused[#loc111, #loc112])
#loc412 = loc(fused[#loc113, #loc114])
#loc413 = loc(fused[#loc118, #loc119])
#loc414 = loc(fused[#loc120, #loc121, #loc122, #loc114])
#loc415 = loc(fused[#loc125, #loc126])
#loc416 = loc(fused[#loc134, #loc135])
#loc417 = loc(fused[#loc142, #loc143])
#loc418 = loc(fused[#loc144, #loc145])
#loc419 = loc(fused[#loc146, #loc147])
#loc420 = loc(fused[#loc148, #loc149])
#loc421 = loc(fused[#loc150, #loc151])
#loc422 = loc(fused[#loc153, #loc155])
#loc423 = loc(fused[#loc156, #loc157, #loc158, #loc149])
#loc424 = loc(fused[#loc161, #loc159])
#loc425 = loc(fused[#loc162, #loc163])
#loc426 = loc(fused[#loc165, #loc164])
#loc427 = loc(fused[#loc166, #loc167])
#loc428 = loc(fused[#loc169, #loc163])
#loc429 = loc(fused[#loc174, #loc173])
#loc430 = loc(fused[#loc177, #loc178])
#loc431 = loc(fused[#loc179, #loc180])
#loc432 = loc(fused[#loc183, #loc181])
#loc433 = loc(fused[#loc184, #loc185])
#loc434 = loc(fused[#loc188, #loc189])
#loc435 = loc(fused[#loc190, #loc191])
#loc436 = loc(fused[#loc192, #loc193])
#loc437 = loc(fused[#loc197, #loc198])
#loc438 = loc(fused[#loc199, #loc200, #loc201, #loc193])
#loc439 = loc(fused[#loc204, #loc205])
#loc440 = loc(fused[#loc213, #loc214])
#loc441 = loc(fused[#loc217, #loc218])
#loc442 = loc(fused[#loc219, #loc220])
#loc443 = loc(fused[#loc221, #loc222])
#loc444 = loc(fused[#loc223, #loc224])
#loc445 = loc(fused[#loc225, #loc226])
#loc446 = loc(fused[#loc228, #loc230])
#loc447 = loc(fused[#loc231, #loc232, #loc233, #loc224])
#loc448 = loc(fused[#loc236, #loc234])
#loc449 = loc(fused[#loc237, #loc238])
#loc450 = loc(fused[#loc240, #loc239])
#loc451 = loc(fused[#loc241, #loc242])
#loc452 = loc(fused[#loc244, #loc238])
#loc453 = loc(fused[#loc249, #loc248])
#loc454 = loc(fused[#loc257, #loc258])
#loc455 = loc(fused[#loc259, #loc260])
#loc456 = loc(fused[#loc263, #loc261])
#loc457 = loc(fused[#loc264, #loc265])
#loc458 = loc(fused[#loc273, #loc272])
#loc459 = loc(fused[#loc275, #loc276])
#loc460 = loc(fused[#loc279, #loc280])
#loc461 = loc(fused[#loc281, #loc282])
#loc462 = loc(fused[#loc283, #loc284])
#loc463 = loc(fused[#loc285, #loc286])
#loc464 = loc(fused[#loc287, #loc288])
#loc465 = loc(fused[#loc289, #loc290, #loc291, #loc286])
#loc466 = loc(fused[#loc294, #loc292])
#loc467 = loc(fused[#loc295, #loc296])
#loc468 = loc(fused[#loc298, #loc297])
#loc469 = loc(fused[#loc299, #loc300])
#loc470 = loc(fused[#loc302, #loc296])
#loc471 = loc(fused[#loc307, #loc306])
#loc472 = loc(fused[#loc315, #loc316])
#loc473 = loc(fused[#loc317, #loc318])
#loc474 = loc(fused[#loc321, #loc319])
#loc475 = loc(fused[#loc322, #loc323])
#loc476 = loc(fused[#loc327, #loc326])
#loc477 = loc(fused[#loc333, #loc334])
#loc478 = loc(fused[#loc337, #loc338])
#loc479 = loc(fused[#loc339, #loc340])
#loc480 = loc(fused[#loc341, #loc342])
#loc481 = loc(fused[#loc343, #loc344])
#loc482 = loc(fused[#loc345, #loc346])
#loc483 = loc(fused[#loc347, #loc348, #loc349, #loc344])
#loc484 = loc(fused[#loc352, #loc350])
#loc485 = loc(fused[#loc353, #loc354])
#loc486 = loc(fused[#loc356, #loc355])
#loc487 = loc(fused[#loc357, #loc358])
#loc488 = loc(fused[#loc360, #loc354])
#loc489 = loc(fused[#loc365, #loc364])
