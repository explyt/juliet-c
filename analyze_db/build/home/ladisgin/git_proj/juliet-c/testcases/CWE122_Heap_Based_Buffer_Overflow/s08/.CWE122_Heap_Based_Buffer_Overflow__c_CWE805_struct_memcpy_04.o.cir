!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc206)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc207)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc208)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc209)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc211)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc216)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc24)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc24)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc217)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc218)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc219)
    cir.store %12, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc220)
    cir.br ^bb3 loc(#loc221)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc222)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc223)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc36)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
    cir.br ^bb5 loc(#loc30)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc20)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc224)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc225)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc226)
  ^bb11:  // pred: ^bb10
    %20 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc43)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.br ^bb12 loc(#loc226)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc46)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc228)
    cir.brcond %25 ^bb13, ^bb17 loc(#loc47)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc229)
  ^bb14:  // pred: ^bb13
    %26 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %29 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc52)
    cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    %35 = cir.get_member %34[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc56)
    cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.br ^bb15 loc(#loc42)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc42)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc58)
    cir.store %37, %1 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    cir.br ^bb12 loc(#loc226)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc42)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc40)
  ^bb19:  // pred: ^bb18
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc59)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc60)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc61)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc61)
    %44 = cir.const #cir.int<8> : !u64i loc(#loc233)
    %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc234)
    cir.libc.memcpy %45 bytes from %41 to %39 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc235)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!ty__twoIntsStruct>, %47 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    cir.call @printStructLine(%48) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc69)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc70)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc71)
    cir.br ^bb20 loc(#loc38)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc10)
  } loc(#loc210)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc73)
  } loc(#loc236)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc239)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc241)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc242)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc244)
    cir.br ^bb1 loc(#loc245)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc246)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb8 loc(#loc95)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc99)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc247)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc248)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc249)
    cir.store %14, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc250)
    cir.br ^bb4 loc(#loc251)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc252)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc253)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc109)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc111)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc92)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc92)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc254)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc255)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc256)
  ^bb12:  // pred: ^bb11
    %22 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc118)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc257)
    cir.br ^bb13 loc(#loc256)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc121)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc258)
    cir.brcond %27 ^bb14, ^bb18 loc(#loc122)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc259)
  ^bb15:  // pred: ^bb14
    %28 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
    %32 = cir.get_member %31[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc52)
    cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!ty__twoIntsStruct>, %34 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
    %37 = cir.get_member %36[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc56)
    cir.store %33, %37 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.br ^bb16 loc(#loc117)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc117)
  ^bb17:  // pred: ^bb16
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc130)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc131)
    cir.store %39, %1 : !u64i, !cir.ptr<!u64i> loc(#loc262)
    cir.br ^bb13 loc(#loc256)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc117)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc115)
  ^bb20:  // pred: ^bb19
    %40 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc132)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc133)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc134)
    %46 = cir.const #cir.int<8> : !u64i loc(#loc263)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc264)
    cir.libc.memcpy %47 bytes from %43 to %41 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc265)
    %48 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!ty__twoIntsStruct>, %49 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
    cir.call @printStructLine(%50) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc142)
    %51 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc143)
    cir.call @free(%52) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
    cir.br ^bb21 loc(#loc113)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc82)
  } loc(#loc240)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc267)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc268)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc269)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc270)
    cir.br ^bb1 loc(#loc271)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc157)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc272)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc159)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc160)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc160)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc273)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc274)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc275)
    cir.store %12, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc276)
    cir.br ^bb3 loc(#loc277)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc167)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc168)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc168)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc278)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc279)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc170)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc172)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc170)
    cir.br ^bb5 loc(#loc166)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc166)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc156)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc156)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc280)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc281)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc282)
  ^bb11:  // pred: ^bb10
    %20 = cir.const #cir.int<0> : !s32i loc(#loc179)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc179)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc283)
    cir.br ^bb12 loc(#loc282)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc181)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc182)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc182)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc284)
    cir.brcond %25 ^bb13, ^bb17 loc(#loc183)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc285)
  ^bb14:  // pred: ^bb13
    %26 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc186)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc187)
    %29 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc187)
    %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc52)
    cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc188)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc189)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
    %35 = cir.get_member %34[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc56)
    cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.br ^bb15 loc(#loc178)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc178)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc191)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc192)
    cir.store %37, %1 : !u64i, !cir.ptr<!u64i> loc(#loc288)
    cir.br ^bb12 loc(#loc282)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc178)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc176)
  ^bb19:  // pred: ^bb18
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc193)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc193)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc194)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc195)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc195)
    %44 = cir.const #cir.int<8> : !u64i loc(#loc289)
    %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc290)
    cir.libc.memcpy %45 bytes from %41 to %39 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc291)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc200)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc201)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!ty__twoIntsStruct>, %47 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc202)
    cir.call @printStructLine(%48) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc203)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc204)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc204)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc205)
    cir.br ^bb20 loc(#loc174)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc146)
  } loc(#loc266)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":28:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":54:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":39:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":39:33)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":41:13)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":41:20)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":30:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":30:21)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":31:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":31:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":32:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":37:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":32:8)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":33:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":35:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":35:40)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":35:43)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":35:63)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":35:64)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":35:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":36:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":36:37)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":36:13)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":36:21)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":36:27)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":36:28)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":36:34)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":36:33)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":38:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":53:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":40:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":48:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":43:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":47:13)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":43:22)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":43:18)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":43:25)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":43:29)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":43:27)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":44:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":45:36)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":45:24)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":45:17)
#loc52 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":46:36)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":46:24)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":46:17)
#loc56 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":43:35)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":43:34)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":50:16)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":50:22)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":50:30)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":50:34)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":50:54)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":50:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":50:55)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":51:26)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":51:31)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":51:32)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":51:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":52:14)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":52:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":123:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":127:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":125:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":125:14)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":126:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":126:14)
#loc78 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc79 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":68:19)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":61:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":92:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":77:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":77:33)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":79:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":79:20)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":63:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":63:21)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":64:12)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":64:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":65:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":75:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":65:8)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":66:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":69:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":71:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":68:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":73:33)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":73:40)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":73:44)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":73:64)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":73:65)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":73:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":74:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":74:37)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":74:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":74:21)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":74:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":74:28)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":74:34)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":74:33)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":76:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":91:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":78:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":86:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":81:13)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":85:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":81:22)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":81:18)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":81:25)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":81:29)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":81:27)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":82:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":83:36)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":83:24)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":83:17)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":84:36)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":84:24)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":84:17)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":81:35)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":81:34)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":88:16)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":88:22)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":88:30)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":88:34)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":88:54)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":88:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":88:55)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":89:26)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":89:31)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":89:32)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":89:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":90:14)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":90:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":95:1)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":121:1)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":106:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":106:33)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":108:13)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":108:20)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":97:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":97:21)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":98:12)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":98:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":99:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":104:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":99:8)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":100:5)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":102:33)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":102:40)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":102:44)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":102:64)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":102:65)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":102:9)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":103:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":103:37)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":103:13)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":103:21)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":103:27)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":103:28)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":103:34)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":103:33)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":105:5)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":120:5)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":107:9)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":115:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":110:13)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":114:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":110:22)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":110:18)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":110:25)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":110:29)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":110:27)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":111:13)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":112:36)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":112:24)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":112:17)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":113:36)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":113:24)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":113:17)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":110:35)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":110:34)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":117:16)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":117:22)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":117:30)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":117:34)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":117:54)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":117:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":117:55)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":118:26)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":118:31)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":118:32)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":118:9)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":119:14)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_04.c":119:9)
#loc206 = loc(fused[#loc1, #loc2])
#loc207 = loc(fused[#loc3, #loc4])
#loc208 = loc(fused[#loc5, #loc6])
#loc209 = loc(fused[#loc7, #loc8])
#loc210 = loc(fused[#loc9, #loc10])
#loc211 = loc(fused[#loc11, #loc12])
#loc212 = loc(fused[#loc13, #loc14])
#loc213 = loc(fused[#loc15, #loc16])
#loc214 = loc(fused[#loc18, #loc17])
#loc215 = loc(fused[#loc19, #loc20])
#loc216 = loc(fused[#loc22, #loc20])
#loc217 = loc(fused[#loc25, #loc26])
#loc218 = loc(fused[#loc24, #loc26])
#loc219 = loc(fused[#loc23, #loc27])
#loc220 = loc(fused[#loc28, #loc27])
#loc221 = loc(fused[#loc29, #loc30])
#loc222 = loc(fused[#loc31, #loc32])
#loc223 = loc(fused[#loc33, #loc30])
#loc224 = loc(fused[#loc37, #loc38])
#loc225 = loc(fused[#loc39, #loc40])
#loc226 = loc(fused[#loc41, #loc42])
#loc227 = loc(fused[#loc44, #loc43])
#loc228 = loc(fused[#loc45, #loc46])
#loc229 = loc(fused[#loc48, #loc42])
#loc230 = loc(fused[#loc51, #loc49])
#loc231 = loc(fused[#loc55, #loc53])
#loc232 = loc(fused[#loc58, #loc57])
#loc233 = loc(fused[#loc62, #loc63])
#loc234 = loc(fused[#loc61, #loc63])
#loc235 = loc(fused[#loc64, #loc65])
#loc236 = loc(fused[#loc72, #loc73])
#loc237 = loc(fused[#loc74, #loc75])
#loc238 = loc(fused[#loc76, #loc77])
#loc239 = loc(fused[#loc78, #loc79])
#loc240 = loc(fused[#loc81, #loc82])
#loc241 = loc(fused[#loc83, #loc84])
#loc242 = loc(fused[#loc85, #loc86])
#loc243 = loc(fused[#loc87, #loc88])
#loc244 = loc(fused[#loc90, #loc89])
#loc245 = loc(fused[#loc91, #loc92])
#loc246 = loc(fused[#loc94, #loc95, #loc96, #loc92])
#loc247 = loc(fused[#loc100, #loc101])
#loc248 = loc(fused[#loc99, #loc101])
#loc249 = loc(fused[#loc98, #loc102])
#loc250 = loc(fused[#loc103, #loc102])
#loc251 = loc(fused[#loc104, #loc105])
#loc252 = loc(fused[#loc106, #loc107])
#loc253 = loc(fused[#loc108, #loc105])
#loc254 = loc(fused[#loc112, #loc113])
#loc255 = loc(fused[#loc114, #loc115])
#loc256 = loc(fused[#loc116, #loc117])
#loc257 = loc(fused[#loc119, #loc118])
#loc258 = loc(fused[#loc120, #loc121])
#loc259 = loc(fused[#loc123, #loc117])
#loc260 = loc(fused[#loc126, #loc124])
#loc261 = loc(fused[#loc129, #loc127])
#loc262 = loc(fused[#loc131, #loc130])
#loc263 = loc(fused[#loc135, #loc136])
#loc264 = loc(fused[#loc134, #loc136])
#loc265 = loc(fused[#loc137, #loc138])
#loc266 = loc(fused[#loc145, #loc146])
#loc267 = loc(fused[#loc147, #loc148])
#loc268 = loc(fused[#loc149, #loc150])
#loc269 = loc(fused[#loc151, #loc152])
#loc270 = loc(fused[#loc154, #loc153])
#loc271 = loc(fused[#loc155, #loc156])
#loc272 = loc(fused[#loc158, #loc156])
#loc273 = loc(fused[#loc161, #loc162])
#loc274 = loc(fused[#loc160, #loc162])
#loc275 = loc(fused[#loc159, #loc163])
#loc276 = loc(fused[#loc164, #loc163])
#loc277 = loc(fused[#loc165, #loc166])
#loc278 = loc(fused[#loc167, #loc168])
#loc279 = loc(fused[#loc169, #loc166])
#loc280 = loc(fused[#loc173, #loc174])
#loc281 = loc(fused[#loc175, #loc176])
#loc282 = loc(fused[#loc177, #loc178])
#loc283 = loc(fused[#loc180, #loc179])
#loc284 = loc(fused[#loc181, #loc182])
#loc285 = loc(fused[#loc184, #loc178])
#loc286 = loc(fused[#loc187, #loc185])
#loc287 = loc(fused[#loc190, #loc188])
#loc288 = loc(fused[#loc192, #loc191])
#loc289 = loc(fused[#loc196, #loc197])
#loc290 = loc(fused[#loc195, #loc197])
#loc291 = loc(fused[#loc198, #loc199])
