!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc135)
  cir.func private @printHexCharLine(!s8i) loc(#loc136)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_10_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.br ^bb3 loc(#loc10)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc10)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc142)
  ^bb5:  // pred: ^bb4
    %5 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %7 ^bb6, ^bb7 loc(#loc143)
  ^bb6:  // pred: ^bb5
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc19)
    cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc22)
    cir.br ^bb7 loc(#loc16)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc16)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc6)
  } loc(#loc137)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_10_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc146)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc147)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc148)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc24)
  } loc(#loc144)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc47)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.br ^bb3 loc(#loc44)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc44)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %5 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc149)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %7 ^bb6, ^bb7 loc(#loc157)
  ^bb6:  // pred: ^bb5
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb13 loc(#loc53)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc158)
  ^bb8:  // pred: ^bb7
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
    %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc159)
    cir.brcond %13 ^bb9, ^bb10 loc(#loc160)
  ^bb9:  // pred: ^bb8
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc65)
    %17 = cir.load %16 : !cir.ptr<!s8i>, !s8i loc(#loc63)
    cir.call @printHexCharLine(%17) : (!s8i) -> () loc(#loc66)
    cir.br ^bb11 loc(#loc61)
  ^bb10:  // pred: ^bb8
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc38)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.br ^bb11 loc(#loc57)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc57)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc50)
  ^bb13:  // 2 preds: ^bb6, ^bb12
    cir.br ^bb14 loc(#loc50)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc40)
  } loc(#loc151)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc76)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb3 loc(#loc73)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %5 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc80)
    cir.brcond %7 ^bb6, ^bb12 loc(#loc167)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc168)
  ^bb7:  // pred: ^bb6
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc169)
    cir.brcond %11 ^bb8, ^bb9 loc(#loc170)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc91)
    %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc89)
    cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc92)
    cir.br ^bb10 loc(#loc87)
  ^bb9:  // pred: ^bb7
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc93)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb10 loc(#loc83)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc83)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc79)
  ^bb12:  // 2 preds: ^bb5, ^bb11
    cir.br ^bb13 loc(#loc79)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc69)
  } loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Good\00" : !cir.array<!s8i x 5>> : !cir.array<!s8i x 5> {alignment = 1 : i64} loc(#loc95)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc149)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc102)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc106)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.br ^bb4 loc(#loc104)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc95)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc95)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc101)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc176)
  ^bb6:  // pred: ^bb5
    %8 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc111)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc177)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc113)
    cir.call @printHexCharLine(%14) : (!s8i) -> () loc(#loc116)
    cir.br ^bb8 loc(#loc110)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc110)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc97)
  } loc(#loc171)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc123)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc181)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc125)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc125)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    cir.br ^bb3 loc(#loc122)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc122)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc183)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc129)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc184)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    %12 = cir.load %11 : !cir.ptr<!s8i>, !s8i loc(#loc131)
    cir.call @printHexCharLine(%12) : (!s8i) -> () loc(#loc134)
    cir.br ^bb7 loc(#loc128)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc128)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc118)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":24:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":38:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":26:5)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":26:12)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":27:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":31:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":27:8)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":28:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":30:16)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":30:9)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":32:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":37:5)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":32:8)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":33:5)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":36:26)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":36:31)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":36:32)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":36:9)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":136:1)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":142:1)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":138:5)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":138:14)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":139:5)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":139:14)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":140:5)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":140:14)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":141:5)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":141:14)
#loc33 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc34 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":56:19)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":68:23)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":45:1)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":71:1)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":47:5)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":47:12)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":48:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":52:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":48:8)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":49:5)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":51:16)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":51:9)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":53:5)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":70:5)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":53:8)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":54:5)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":57:5)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":59:5)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":56:9)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":61:9)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":69:9)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":61:13)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":61:21)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":62:9)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":65:9)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":67:9)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":64:30)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":64:35)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":64:36)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":64:13)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":68:13)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":74:1)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":95:1)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":76:5)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":76:12)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":77:5)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":81:5)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":77:8)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":78:5)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":80:16)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":80:9)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":82:5)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":94:5)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":82:8)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":83:5)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":85:9)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":93:9)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":85:13)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":85:21)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":86:9)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":89:9)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":91:9)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":88:30)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":88:35)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":88:36)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":88:13)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":92:23)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":92:13)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":109:16)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":98:1)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":117:1)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":100:5)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":100:12)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":101:5)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":110:5)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":101:8)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":102:5)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":105:5)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":107:5)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":104:19)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":104:9)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":109:9)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":111:5)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":116:5)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":111:8)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":112:5)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":115:26)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":115:31)
#loc115 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":115:32)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":115:9)
#loc117 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":120:1)
#loc118 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":134:1)
#loc119 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":122:5)
#loc120 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":122:12)
#loc121 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":123:5)
#loc122 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":127:5)
#loc123 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":123:8)
#loc124 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":124:5)
#loc125 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":126:16)
#loc126 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":126:9)
#loc127 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":128:5)
#loc128 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":133:5)
#loc129 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":128:8)
#loc130 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":129:5)
#loc131 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":132:26)
#loc132 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":132:31)
#loc133 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":132:32)
#loc134 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":132:9)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc12, #loc10])
#loc141 = loc(fused[#loc14, #loc13])
#loc142 = loc(fused[#loc15, #loc16])
#loc143 = loc(fused[#loc18, #loc16])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc27, #loc28])
#loc147 = loc(fused[#loc29, #loc30])
#loc148 = loc(fused[#loc31, #loc32])
#loc149 = loc(fused[#loc33, #loc34])
#loc150 = loc(fused[#loc35, #loc36])
#loc151 = loc(fused[#loc39, #loc40])
#loc152 = loc(fused[#loc41, #loc42])
#loc153 = loc(fused[#loc43, #loc44])
#loc154 = loc(fused[#loc46, #loc44])
#loc155 = loc(fused[#loc48, #loc47])
#loc156 = loc(fused[#loc49, #loc50])
#loc157 = loc(fused[#loc52, #loc53, #loc54, #loc50])
#loc158 = loc(fused[#loc56, #loc57])
#loc159 = loc(fused[#loc58, #loc59])
#loc160 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc161 = loc(fused[#loc68, #loc69])
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc72, #loc73])
#loc164 = loc(fused[#loc75, #loc73])
#loc165 = loc(fused[#loc77, #loc76])
#loc166 = loc(fused[#loc78, #loc79])
#loc167 = loc(fused[#loc81, #loc79])
#loc168 = loc(fused[#loc82, #loc83])
#loc169 = loc(fused[#loc84, #loc85])
#loc170 = loc(fused[#loc86, #loc87, #loc88, #loc83])
#loc171 = loc(fused[#loc96, #loc97])
#loc172 = loc(fused[#loc98, #loc99])
#loc173 = loc(fused[#loc100, #loc101])
#loc174 = loc(fused[#loc103, #loc104, #loc105, #loc101])
#loc175 = loc(fused[#loc108, #loc95])
#loc176 = loc(fused[#loc109, #loc110])
#loc177 = loc(fused[#loc112, #loc110])
#loc178 = loc(fused[#loc117, #loc118])
#loc179 = loc(fused[#loc119, #loc120])
#loc180 = loc(fused[#loc121, #loc122])
#loc181 = loc(fused[#loc124, #loc122])
#loc182 = loc(fused[#loc126, #loc125])
#loc183 = loc(fused[#loc127, #loc128])
#loc184 = loc(fused[#loc130, #loc128])
