!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":104:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc257)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc258)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_15_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc259)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc260)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc261)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc263)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc264)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc265)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc266)
  cir.func private @close(!s32i) -> !s32i loc(#loc267)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc268)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc269)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc29)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc270)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc272)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc273)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc274)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc275)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc276)
    %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc277)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc278)
    %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc259)
    %8 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_15_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc259)
    cir.copy %8 to %7 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc259)
    %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    cir.store %9, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
    cir.br ^bb1 loc(#loc280)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<6> : !s32i loc(#loc52)
    cir.br ^bb2 loc(#loc50)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %10 : !s32i, ^bb44 [
      6: ^bb4
    ] loc(#loc50)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc53)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc281)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc41)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
    %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
    cir.store %15, %4 : !u64i, !cir.ptr<!u64i> loc(#loc276)
    cir.br ^bb6 loc(#loc282)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc282)
  ^bb7:  // pred: ^bb36
    %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc60)
    cir.brcond %17 ^bb8, ^bb37 loc(#loc60)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %18 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %20 = cir.const #cir.int<6> : !s32i loc(#loc63)
    %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc64)
    cir.store %21, %3 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb9 loc(#loc284)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc70)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc285)
    cir.brcond %25 ^bb10, ^bb11 loc(#loc286)
  ^bb10:  // pred: ^bb9
    cir.br ^bb37 loc(#loc72)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc68)
  ^bb12:  // pred: ^bb11
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc287)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc288)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc289)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc80)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc80)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc290)
    %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
    %34 = cir.call @inet_addr(%33) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc83)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc84)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc85)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc291)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc88)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc88)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc89)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc292)
    cir.br ^bb13 loc(#loc293)
  ^bb13:  // pred: ^bb12
    %41 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc294)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc295)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc295)
    %45 = cir.call @connect(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc100)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc101)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc296)
    cir.brcond %48 ^bb14, ^bb15 loc(#loc297)
  ^bb14:  // pred: ^bb13
    cir.br ^bb37 loc(#loc103)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc94)
  ^bb16:  // pred: ^bb15
    %49 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %50 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %51 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc107)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc298)
    %54 = cir.const #cir.int<1> : !u64i loc(#loc299)
    %55 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc112)
    %57 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %58 = cir.binop(sub, %56, %57) : !u64i loc(#loc300)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc114)
    %61 = cir.binop(sub, %58, %60) : !u64i loc(#loc301)
    %62 = cir.binop(mul, %54, %61) : !u64i loc(#loc302)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %64 = cir.call @recv(%49, %53, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc117)
    %65 = cir.cast(integral, %64 : !s64i), !s32i loc(#loc117)
    cir.store %65, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.br ^bb17 loc(#loc304)
  ^bb17:  // pred: ^bb16
    %66 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %68 = cir.unary(minus, %67) : !s32i, !s32i loc(#loc123)
    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %69 ^bb18, ^bb19 loc(#loc124)
  ^bb18:  // pred: ^bb17
    %70 = cir.const #true loc(#loc124)
    cir.br ^bb24(%70 : !cir.bool) loc(#loc124)
  ^bb19:  // pred: ^bb17
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %73 = cir.cmp(eq, %71, %72) : !s32i, !cir.bool loc(#loc306)
    cir.brcond %73 ^bb20, ^bb21 loc(#loc124)
  ^bb20:  // pred: ^bb19
    %74 = cir.const #true loc(#loc124)
    cir.br ^bb22(%74 : !cir.bool) loc(#loc124)
  ^bb21:  // pred: ^bb19
    %75 = cir.const #false loc(#loc124)
    cir.br ^bb22(%75 : !cir.bool) loc(#loc124)
  ^bb22(%76: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":104:44)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc124)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24(%76 : !cir.bool) loc(#loc124)
  ^bb24(%77: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":104:44)):  // 2 preds: ^bb18, ^bb23
    cir.br ^bb25 loc(#loc124)
  ^bb25:  // pred: ^bb24
    cir.brcond %77 ^bb26, ^bb27 loc(#loc307)
  ^bb26:  // pred: ^bb25
    cir.br ^bb37 loc(#loc128)
  ^bb27:  // pred: ^bb25
    cir.br ^bb28 loc(#loc121)
  ^bb28:  // pred: ^bb27
    %78 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc129)
    %80 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %81 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %83 = cir.cast(integral, %82 : !s32i), !u64i loc(#loc132)
    %84 = cir.const #cir.int<1> : !u64i loc(#loc308)
    %85 = cir.binop(div, %83, %84) : !u64i loc(#loc309)
    %86 = cir.binop(add, %81, %85) : !u64i loc(#loc310)
    %87 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %86 : !u64i), !cir.ptr<!s8i> loc(#loc135)
    cir.store %79, %87 : !s8i, !cir.ptr<!s8i> loc(#loc311)
    %88 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %89 = cir.const #cir.int<13> : !s32i loc(#loc137)
    %90 = cir.call @strchr(%88, %89) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
    cir.store %90, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc312)
    cir.br ^bb29 loc(#loc313)
  ^bb29:  // pred: ^bb28
    %91 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %92 = cir.cast(ptr_to_bool, %91 : !cir.ptr<!s8i>), !cir.bool loc(#loc143)
    cir.brcond %92 ^bb30, ^bb31 loc(#loc314)
  ^bb30:  // pred: ^bb29
    %93 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %94 = cir.cast(integral, %93 : !s32i), !s8i loc(#loc145)
    %95 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    cir.store %94, %95 : !s8i, !cir.ptr<!s8i> loc(#loc315)
    cir.br ^bb31 loc(#loc142)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc142)
  ^bb32:  // pred: ^bb31
    %96 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    %97 = cir.const #cir.int<10> : !s32i loc(#loc149)
    %98 = cir.call @strchr(%96, %97) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
    cir.store %98, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
    cir.br ^bb33 loc(#loc317)
  ^bb33:  // pred: ^bb32
    %99 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    %100 = cir.cast(ptr_to_bool, %99 : !cir.ptr<!s8i>), !cir.bool loc(#loc155)
    cir.brcond %100 ^bb34, ^bb35 loc(#loc318)
  ^bb34:  // pred: ^bb33
    %101 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %102 = cir.cast(integral, %101 : !s32i), !s8i loc(#loc157)
    %103 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    cir.store %102, %103 : !s8i, !cir.ptr<!s8i> loc(#loc319)
    cir.br ^bb35 loc(#loc154)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc154)
  ^bb36:  // pred: ^bb35
    cir.br ^bb7 loc(#loc59)
  ^bb37:  // 4 preds: ^bb7, ^bb10, ^bb14, ^bb26
    cir.br ^bb38 loc(#loc59)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc320)
  ^bb39:  // pred: ^bb38
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %106 = cir.unary(minus, %105) : !s32i, !s32i loc(#loc163)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc321)
    cir.brcond %107 ^bb40, ^bb41 loc(#loc322)
  ^bb40:  // pred: ^bb39
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc166)
    cir.br ^bb41 loc(#loc161)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc161)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc55)
  ^bb43:  // pred: ^bb42
    cir.br ^bb45 loc(#loc167)
  ^bb44:  // pred: ^bb2
    %110 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
    %111 = cir.cast(array_to_ptrdecay, %110 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%111) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    cir.br ^bb45 loc(#loc169)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc51)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc323)
  ^bb47:  // pred: ^bb46
    %112 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    %113 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc29)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc29)
    %115 = cir.call @popen(%112, %114) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc173)
    cir.store %115, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc324)
    cir.br ^bb48 loc(#loc325)
  ^bb48:  // pred: ^bb47
    %116 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc178)
    %117 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc179)
    %118 = cir.cast(bitcast, %117 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc179)
    %119 = cir.cmp(ne, %116, %118) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc326)
    cir.brcond %119 ^bb49, ^bb50 loc(#loc327)
  ^bb49:  // pred: ^bb48
    %120 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc181)
    %121 = cir.call @pclose(%120) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc182)
    cir.br ^bb50 loc(#loc177)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc177)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc171)
  ^bb52:  // pred: ^bb51
    cir.return loc(#loc33)
  } loc(#loc271)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc329)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc185)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc330)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc187)
    cir.return loc(#loc184)
  } loc(#loc328)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc331)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc191)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc333)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc334)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc258)
    %3 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc258)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc258)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc198)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc335)
    cir.br ^bb1 loc(#loc336)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc202)
    cir.br ^bb2 loc(#loc200)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc200)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc203)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc204)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    cir.br ^bb6 loc(#loc206)
  ^bb5:  // pred: ^bb2
    %8 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc207)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc191)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc191)
    %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc207)
    cir.br ^bb6 loc(#loc209)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc201)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc337)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc213)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc213)
    %16 = cir.call @popen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc214)
    cir.store %16, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc338)
    cir.br ^bb9 loc(#loc339)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc219)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc220)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc220)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc340)
    cir.brcond %20 ^bb10, ^bb11 loc(#loc341)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc222)
    %22 = cir.call @pclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc223)
    cir.br ^bb11 loc(#loc218)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc218)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc211)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc193)
  } loc(#loc332)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc343)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc344)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc257)
    %3 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc257)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc257)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc230)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc345)
    cir.br ^bb1 loc(#loc346)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<6> : !s32i loc(#loc234)
    cir.br ^bb2 loc(#loc232)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc232)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc235)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc236)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc238)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc238)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc236)
    cir.br ^bb6 loc(#loc239)
  ^bb5:  // pred: ^bb2
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc240)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc240)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc241)
    cir.br ^bb6 loc(#loc242)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc233)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc347)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc245)
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc246)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc246)
    %16 = cir.call @popen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc247)
    cir.store %16, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc348)
    cir.br ^bb9 loc(#loc349)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc252)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc253)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc253)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc350)
    cir.brcond %20 ^bb10, ^bb11 loc(#loc351)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc255)
    %22 = cir.call @pclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc256)
    cir.br ^bb11 loc(#loc251)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc251)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc244)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc225)
  } loc(#loc342)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":187:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":187:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":159:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":159:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":62:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":62:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/sys/socket.h":102:1)
#loc10 = loc("/usr/include/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":94:49)
#loc14 = loc("/usr/include/netinet/in.h":404:1)
#loc15 = loc("/usr/include/netinet/in.h":405:40)
#loc16 = loc("/usr/include/sys/socket.h":126:1)
#loc17 = loc("/usr/include/sys/socket.h":126:75)
#loc18 = loc("/usr/include/sys/socket.h":145:1)
#loc19 = loc("/usr/include/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":137:19)
#loc27 = loc("/usr/include/stdio.h":893:1)
#loc28 = loc("/usr/include/stdio.h":894:3)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":143:28)
#loc30 = loc("/usr/include/stdio.h":887:1)
#loc31 = loc("/usr/include/stdio.h":887:36)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":59:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":149:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":72:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":72:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":73:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":73:28)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":74:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":74:15)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":75:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":75:32)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":76:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":76:37)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":141:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":141:15)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":61:5)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":61:12)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":63:12)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":63:5)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":64:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":139:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":64:12)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":66:5)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":67:5)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":133:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":76:26)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":76:33)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":77:9)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":122:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":122:16)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":87:36)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":87:45)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":87:58)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":87:29)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":87:13)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":87:69)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":88:13)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":91:13)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":88:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":88:34)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":89:13)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":90:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":92:20)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":92:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":92:30)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":92:33)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":92:47)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":92:13)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":92:48)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":93:34)
#loc81 = loc("/usr/include/netinet/in.h":249:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":93:13)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":94:39)
#loc84 = loc("/usr/include/netinet/in.h":251:20)
#loc85 = loc("/usr/include/netinet/in.h":33:15)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":94:13)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":94:59)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":95:38)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":95:32)
#loc90 = loc("/usr/include/netinet/in.h":250:15)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":95:13)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":95:46)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":96:13)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":99:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":96:25)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":96:58)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":96:59)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":96:68)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":96:82)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":96:17)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":96:88)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":97:13)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":98:17)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:31)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:55)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:62)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:60)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:46)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:69)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:72)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:83)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:88)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:94)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:104)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:105)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:108)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:26)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:13)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":103:109)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":104:13)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":107:13)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":104:17)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":104:31)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":104:47)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":104:61)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":105:13)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":106:17)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":109:57)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":109:13)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":109:18)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":109:28)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":109:41)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":109:52)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":109:53)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":111:30)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":111:36)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":111:23)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":111:13)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":111:40)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":112:13)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":115:13)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":112:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":113:13)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":114:28)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":114:18)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":114:17)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":116:30)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":116:36)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":116:23)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":116:13)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":116:40)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":117:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":120:13)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":117:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":118:13)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":119:28)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":119:18)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":119:17)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":123:9)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":126:9)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":123:13)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":123:30)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":124:9)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":125:26)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":125:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":134:5)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":137:9)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":138:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":140:5)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":148:5)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":143:22)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":143:16)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":143:9)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":143:31)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":144:9)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":147:9)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":144:13)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":144:21)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":145:9)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":146:20)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":146:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":211:1)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":215:1)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":213:5)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":213:14)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":214:5)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":214:14)
#loc189 = loc("/usr/include/string.h":149:1)
#loc190 = loc("/usr/include/string.h":150:14)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":169:22)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":156:1)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":181:1)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":173:9)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":173:15)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":158:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":158:12)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":160:12)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":160:5)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":161:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":171:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":161:12)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":163:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":165:19)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":165:9)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":166:9)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":169:9)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":169:16)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":170:9)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":172:5)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":180:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":175:22)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":175:28)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":175:16)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":175:9)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":175:31)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":176:9)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":179:9)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":176:13)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":176:21)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":177:9)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":178:20)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":178:13)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":184:1)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":209:1)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":201:9)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":201:15)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":186:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":186:12)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":188:12)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":188:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":189:5)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":199:5)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":189:12)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":191:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":193:9)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":193:16)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":193:22)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":194:9)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":197:19)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":197:9)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":198:9)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":200:5)
#loc244 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":208:5)
#loc245 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":203:22)
#loc246 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":203:28)
#loc247 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":203:16)
#loc248 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":203:9)
#loc249 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":203:31)
#loc250 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":204:9)
#loc251 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":207:9)
#loc252 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":204:13)
#loc253 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":204:21)
#loc254 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":205:9)
#loc255 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":206:20)
#loc256 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_15.c":206:13)
#loc257 = loc(fused[#loc1, #loc2])
#loc258 = loc(fused[#loc3, #loc4])
#loc259 = loc(fused[#loc5, #loc6])
#loc260 = loc(fused[#loc7, #loc8])
#loc261 = loc(fused[#loc9, #loc10])
#loc262 = loc(fused[#loc11, #loc12])
#loc263 = loc(fused[#loc14, #loc15])
#loc264 = loc(fused[#loc16, #loc17])
#loc265 = loc(fused[#loc18, #loc19])
#loc266 = loc(fused[#loc20, #loc21])
#loc267 = loc(fused[#loc22, #loc23])
#loc268 = loc(fused[#loc24, #loc25])
#loc269 = loc(fused[#loc27, #loc28])
#loc270 = loc(fused[#loc30, #loc31])
#loc271 = loc(fused[#loc32, #loc33])
#loc272 = loc(fused[#loc34, #loc35])
#loc273 = loc(fused[#loc36, #loc37])
#loc274 = loc(fused[#loc38, #loc39])
#loc275 = loc(fused[#loc40, #loc41])
#loc276 = loc(fused[#loc42, #loc43])
#loc277 = loc(fused[#loc44, #loc45])
#loc278 = loc(fused[#loc46, #loc47])
#loc279 = loc(fused[#loc49, #loc48])
#loc280 = loc(fused[#loc50, #loc51])
#loc281 = loc(fused[#loc54, #loc55])
#loc282 = loc(fused[#loc58, #loc59])
#loc283 = loc(fused[#loc65, #loc66])
#loc284 = loc(fused[#loc67, #loc68])
#loc285 = loc(fused[#loc69, #loc70])
#loc286 = loc(fused[#loc71, #loc68])
#loc287 = loc(fused[#loc73, #loc74])
#loc288 = loc(fused[#loc76, #loc77])
#loc289 = loc(fused[#loc78, #loc79])
#loc290 = loc(fused[#loc82, #loc80])
#loc291 = loc(fused[#loc86, #loc87])
#loc292 = loc(fused[#loc91, #loc92])
#loc293 = loc(fused[#loc93, #loc94])
#loc294 = loc(fused[#loc96, #loc97])
#loc295 = loc(fused[#loc98, #loc99])
#loc296 = loc(fused[#loc100, #loc101])
#loc297 = loc(fused[#loc102, #loc94])
#loc298 = loc(fused[#loc108, #loc109])
#loc299 = loc(fused[#loc110, #loc111])
#loc300 = loc(fused[#loc112, #loc113])
#loc301 = loc(fused[#loc112, #loc114])
#loc302 = loc(fused[#loc110, #loc115])
#loc303 = loc(fused[#loc118, #loc119])
#loc304 = loc(fused[#loc120, #loc121])
#loc305 = loc(fused[#loc122, #loc123])
#loc306 = loc(fused[#loc125, #loc126])
#loc307 = loc(fused[#loc127, #loc121])
#loc308 = loc(fused[#loc133, #loc134])
#loc309 = loc(fused[#loc132, #loc134])
#loc310 = loc(fused[#loc131, #loc134])
#loc311 = loc(fused[#loc130, #loc129])
#loc312 = loc(fused[#loc139, #loc140])
#loc313 = loc(fused[#loc141, #loc142])
#loc314 = loc(fused[#loc144, #loc142])
#loc315 = loc(fused[#loc147, #loc145])
#loc316 = loc(fused[#loc151, #loc152])
#loc317 = loc(fused[#loc153, #loc154])
#loc318 = loc(fused[#loc156, #loc154])
#loc319 = loc(fused[#loc159, #loc157])
#loc320 = loc(fused[#loc160, #loc161])
#loc321 = loc(fused[#loc162, #loc163])
#loc322 = loc(fused[#loc164, #loc161])
#loc323 = loc(fused[#loc170, #loc171])
#loc324 = loc(fused[#loc174, #loc175])
#loc325 = loc(fused[#loc176, #loc177])
#loc326 = loc(fused[#loc178, #loc179])
#loc327 = loc(fused[#loc180, #loc177])
#loc328 = loc(fused[#loc183, #loc184])
#loc329 = loc(fused[#loc185, #loc186])
#loc330 = loc(fused[#loc187, #loc188])
#loc331 = loc(fused[#loc189, #loc190])
#loc332 = loc(fused[#loc192, #loc193])
#loc333 = loc(fused[#loc194, #loc195])
#loc334 = loc(fused[#loc196, #loc197])
#loc335 = loc(fused[#loc199, #loc198])
#loc336 = loc(fused[#loc200, #loc201])
#loc337 = loc(fused[#loc210, #loc211])
#loc338 = loc(fused[#loc215, #loc216])
#loc339 = loc(fused[#loc217, #loc218])
#loc340 = loc(fused[#loc219, #loc220])
#loc341 = loc(fused[#loc221, #loc218])
#loc342 = loc(fused[#loc224, #loc225])
#loc343 = loc(fused[#loc226, #loc227])
#loc344 = loc(fused[#loc228, #loc229])
#loc345 = loc(fused[#loc231, #loc230])
#loc346 = loc(fused[#loc232, #loc233])
#loc347 = loc(fused[#loc243, #loc244])
#loc348 = loc(fused[#loc248, #loc249])
#loc349 = loc(fused[#loc250, #loc251])
#loc350 = loc(fused[#loc252, #loc253])
#loc351 = loc(fused[#loc254, #loc251])
