!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":24:22)
#loc8 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":24:26)
#loc52 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":57:27)
#loc53 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":57:31)
#loc90 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":87:27)
#loc91 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":87:31)
#loc124 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc52, #loc53])
#loc157 = loc(fused[#loc90, #loc91])
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc121)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc122)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc7, #loc8])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc6)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc9)
    cir.scope {
      %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc121)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc12)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc14)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc14)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc14)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc14)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc14)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc14)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc14)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc14)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc14)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc14)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc14)
          cir.yield %24 : !u32i loc(#loc14)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc14)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc14)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc14)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc14)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc14)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc14)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc14)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc14)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc14)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc14)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc14)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc14)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc14)
          cir.yield %28 : !u32i loc(#loc14)
        }) : (!cir.bool) -> !u32i loc(#loc14)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc14)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
      } loc(#loc126)
    } loc(#loc125)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.return %3 : !s32i loc(#loc128)
  } loc(#loc123)
  cir.func private @printShortLine(!s16i) loc(#loc129)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_rand_to_short_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc25)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc121)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %6 = cir.call @badSource(%5) : (!s32i) -> !s32i loc(#loc30)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    cir.scope {
      %7 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortData", init] {alignment = 2 : i64} loc(#loc136)
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
      %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc36)
      cir.store %9, %7 : !s16i, !cir.ptr<!s16i> loc(#loc136)
      %10 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc37)
      cir.call @printShortLine(%10) : (!s16i) -> () loc(#loc38)
    } loc(#loc135)
    cir.return loc(#loc21)
  } loc(#loc130)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_rand_to_short_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc138)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc139)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    cir.return loc(#loc40)
  } loc(#loc137)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc140)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc49)
  cir.func internal private @goodG2B1Source(%arg0: !s32i loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc143)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.scope {
      %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc140)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc57)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc57)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc49)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      } else {
        %7 = cir.const #cir.int<127> : !s32i loc(#loc62)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc63)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc62)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc146)
      } loc(#loc145)
    } loc(#loc144)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    cir.return %3 : !s32i loc(#loc147)
  } loc(#loc142)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc72)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc140)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %6 = cir.call @goodG2B1Source(%5) : (!s32i) -> !s32i loc(#loc77)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.scope {
      %7 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortData", init] {alignment = 2 : i64} loc(#loc154)
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc83)
      cir.store %9, %7 : !s16i, !cir.ptr<!s16i> loc(#loc154)
      %10 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc84)
      cir.call @printShortLine(%10) : (!s16i) -> () loc(#loc85)
    } loc(#loc153)
    cir.return loc(#loc68)
  } loc(#loc148)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc155)
  cir.func internal private @goodG2B2Source(%arg0: !s32i loc(fused[#loc90, #loc91])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.scope {
      %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc155)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc95)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc95)
      cir.if %6 {
        %7 = cir.const #cir.int<127> : !s32i loc(#loc97)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc98)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc97)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
      } loc(#loc159)
    } loc(#loc158)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.return %3 : !s32i loc(#loc161)
  } loc(#loc156)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc107)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc155)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %6 = cir.call @goodG2B2Source(%5) : (!s32i) -> !s32i loc(#loc112)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.scope {
      %7 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortData", init] {alignment = 2 : i64} loc(#loc168)
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc118)
      cir.store %9, %7 : !s16i, !cir.ptr<!s16i> loc(#loc168)
      %10 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc119)
      cir.call @printShortLine(%10) : (!s16i) -> () loc(#loc120)
    } loc(#loc167)
    cir.return loc(#loc103)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":0:0)
#loc1 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":22:1)
#loc2 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":22:24)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":24:1)
#loc6 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":32:1)
#loc9 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":25:1)
#loc10 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":26:5)
#loc11 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":30:5)
#loc12 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":26:8)
#loc13 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":27:5)
#loc14 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":29:16)
#loc15 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":29:9)
#loc16 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":31:12)
#loc17 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":31:5)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":20:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":20:39)
#loc20 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":34:1)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":46:1)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":36:5)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":36:9)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":38:13)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":38:12)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":38:5)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":39:17)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":39:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":40:22)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":40:12)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":40:5)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":40:26)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":41:5)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":45:5)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":43:9)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":43:34)
#loc37 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":44:24)
#loc38 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":44:9)
#loc39 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":111:1)
#loc40 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":115:1)
#loc41 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":113:5)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":113:14)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":114:5)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":114:14)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":53:1)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":53:29)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":62:19)
#loc50 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":57:1)
#loc51 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":70:1)
#loc54 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":58:1)
#loc55 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":59:5)
#loc56 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":68:5)
#loc57 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":59:8)
#loc58 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":60:5)
#loc59 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":63:5)
#loc60 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":65:5)
#loc61 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":62:9)
#loc62 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":67:16)
#loc63 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":67:25)
#loc64 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":67:9)
#loc65 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":69:12)
#loc66 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":69:5)
#loc67 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":72:1)
#loc68 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":84:1)
#loc69 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":74:5)
#loc70 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":74:9)
#loc71 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":76:13)
#loc72 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":76:12)
#loc73 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":76:5)
#loc74 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":77:22)
#loc75 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":77:5)
#loc76 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":78:27)
#loc77 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":78:12)
#loc78 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":78:5)
#loc79 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":78:31)
#loc80 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":79:5)
#loc81 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":83:5)
#loc82 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":81:9)
#loc83 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":81:34)
#loc84 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":82:24)
#loc85 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":82:9)
#loc86 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":54:1)
#loc87 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":54:29)
#loc88 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":87:1)
#loc89 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":95:1)
#loc92 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":88:1)
#loc93 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":89:5)
#loc94 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":93:5)
#loc95 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":89:8)
#loc96 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":90:5)
#loc97 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":92:16)
#loc98 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":92:25)
#loc99 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":92:9)
#loc100 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":94:12)
#loc101 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":94:5)
#loc102 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":97:1)
#loc103 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":109:1)
#loc104 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":99:5)
#loc105 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":99:9)
#loc106 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":101:13)
#loc107 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":101:12)
#loc108 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":101:5)
#loc109 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":102:22)
#loc110 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":102:5)
#loc111 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":103:27)
#loc112 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":103:12)
#loc113 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":103:5)
#loc114 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":103:31)
#loc115 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":104:5)
#loc116 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":108:5)
#loc117 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":106:9)
#loc118 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":106:34)
#loc119 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":107:24)
#loc120 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_21.c":107:9)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc125 = loc(fused[#loc10, #loc11])
#loc126 = loc(fused[#loc13, #loc11])
#loc127 = loc(fused[#loc15, #loc14])
#loc128 = loc(fused[#loc17, #loc16])
#loc129 = loc(fused[#loc18, #loc19])
#loc130 = loc(fused[#loc20, #loc21])
#loc131 = loc(fused[#loc22, #loc23])
#loc132 = loc(fused[#loc26, #loc24])
#loc133 = loc(fused[#loc28, #loc27])
#loc134 = loc(fused[#loc31, #loc32])
#loc135 = loc(fused[#loc33, #loc34])
#loc136 = loc(fused[#loc35, #loc36])
#loc137 = loc(fused[#loc39, #loc40])
#loc138 = loc(fused[#loc41, #loc42])
#loc139 = loc(fused[#loc43, #loc44])
#loc140 = loc(fused[#loc45, #loc46])
#loc141 = loc(fused[#loc47, #loc48])
#loc142 = loc(fused[#loc50, #loc51])
#loc144 = loc(fused[#loc55, #loc56])
#loc145 = loc(fused[#loc58, #loc59, #loc60, #loc56])
#loc146 = loc(fused[#loc64, #loc63])
#loc147 = loc(fused[#loc66, #loc65])
#loc148 = loc(fused[#loc67, #loc68])
#loc149 = loc(fused[#loc69, #loc70])
#loc150 = loc(fused[#loc73, #loc71])
#loc151 = loc(fused[#loc75, #loc74])
#loc152 = loc(fused[#loc78, #loc79])
#loc153 = loc(fused[#loc80, #loc81])
#loc154 = loc(fused[#loc82, #loc83])
#loc155 = loc(fused[#loc86, #loc87])
#loc156 = loc(fused[#loc88, #loc89])
#loc158 = loc(fused[#loc93, #loc94])
#loc159 = loc(fused[#loc96, #loc94])
#loc160 = loc(fused[#loc99, #loc98])
#loc161 = loc(fused[#loc101, #loc100])
#loc162 = loc(fused[#loc102, #loc103])
#loc163 = loc(fused[#loc104, #loc105])
#loc164 = loc(fused[#loc108, #loc106])
#loc165 = loc(fused[#loc110, #loc109])
#loc166 = loc(fused[#loc113, #loc114])
#loc167 = loc(fused[#loc115, #loc116])
#loc168 = loc(fused[#loc117, #loc118])
