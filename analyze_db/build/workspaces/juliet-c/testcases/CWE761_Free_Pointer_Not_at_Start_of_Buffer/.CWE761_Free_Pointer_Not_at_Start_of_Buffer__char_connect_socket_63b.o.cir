!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":46:82)
#loc9 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":46:91)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":67:86)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":67:95)
#loc74 = loc(fused[#loc8, #loc9])
#loc85 = loc(fused[#loc37, #loc38])
module @"/workspaces/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"We have a match!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc3)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc72)
  cir.func @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc74)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc75)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc12)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    cir.scope {
      cir.for : cond {
        %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
        %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc17)
        %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc17)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc18)
        %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc77)
        cir.condition(%11) loc(#loc19)
      } body {
        cir.scope {
          cir.scope {
            %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
            %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc24)
            %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc24)
            %10 = cir.const #cir.int<83> : !s32i loc(#loc25)
            %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc80)
            cir.if %11 {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc3)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc3)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc27)
              cir.break loc(#loc28)
            } loc(#loc81)
          } loc(#loc79)
        } loc(#loc78)
        cir.yield loc(#loc15)
      } step {
        %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc82)
        cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
        cir.yield loc(#loc76)
      } loc(#loc76)
    } loc(#loc76)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc31)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
    cir.return loc(#loc7)
  } loc(#loc73)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc83)
  cir.func @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b_goodB2GSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc37, #loc38])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc85)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc86)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc41)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc88)
      cir.scope {
        %8 = cir.const #cir.int<0> : !s32i loc(#loc49)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc49)
        cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc90)
        cir.for : cond {
          %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc51)
          %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc52)
          %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
          %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc52)
          %14 = cir.cmp(lt, %10, %13) : !u64i, !cir.bool loc(#loc91)
          cir.condition(%14) loc(#loc55)
        } body {
          cir.scope {
            cir.scope {
              %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
              %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
              %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !u64i), !cir.ptr<!s8i> loc(#loc61)
              %13 = cir.load %12 : !cir.ptr<!s8i>, !s8i loc(#loc59)
              %14 = cir.cast(integral, %13 : !s8i), !s32i loc(#loc59)
              %15 = cir.const #cir.int<83> : !s32i loc(#loc62)
              %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc94)
              cir.if %16 {
                %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc65)
                cir.break loc(#loc66)
              } loc(#loc95)
            } loc(#loc93)
          } loc(#loc92)
          cir.yield loc(#loc48)
        } step {
          %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc67)
          %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc68)
          cir.store %11, %4 : !u64i, !cir.ptr<!u64i> loc(#loc96)
          cir.yield loc(#loc89)
        } loc(#loc89)
      } loc(#loc89)
      %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc69)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
      cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
    } loc(#loc87)
    cir.return loc(#loc36)
  } loc(#loc84)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":55:23)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":46:1)
#loc7 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":60:1)
#loc10 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":48:5)
#loc11 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":48:20)
#loc12 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":47:1)
#loc13 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":48:19)
#loc14 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":51:5)
#loc15 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":58:5)
#loc16 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":51:13)
#loc17 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":51:12)
#loc18 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":51:21)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":51:18)
#loc20 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":52:5)
#loc21 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":53:9)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":57:9)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":53:14)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":53:13)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":53:22)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":54:9)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":55:13)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":56:13)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":51:31)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":51:27)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":59:5)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":59:10)
#loc33 = loc("/usr/include/string.h":407:1)
#loc34 = loc("/usr/include/string.h":408:33)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":67:1)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":83:1)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":69:5)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":69:20)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":68:1)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":69:19)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":70:5)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":82:5)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":71:9)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":71:16)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":73:9)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":80:9)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":73:16)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":73:14)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":73:19)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":73:23)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":73:30)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":73:34)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":73:21)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":74:9)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":75:13)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":79:13)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":75:17)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":75:22)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":75:23)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":75:28)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":76:13)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":77:27)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":77:17)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":78:17)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":73:38)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":73:37)
#loc69 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":81:9)
#loc70 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_63b.c":81:14)
#loc71 = loc(fused[#loc1, #loc2])
#loc72 = loc(fused[#loc4, #loc5])
#loc73 = loc(fused[#loc6, #loc7])
#loc75 = loc(fused[#loc10, #loc11])
#loc76 = loc(fused[#loc14, #loc15])
#loc77 = loc(fused[#loc17, #loc18])
#loc78 = loc(fused[#loc20, #loc15])
#loc79 = loc(fused[#loc21, #loc22])
#loc80 = loc(fused[#loc24, #loc25])
#loc81 = loc(fused[#loc26, #loc22])
#loc82 = loc(fused[#loc30, #loc29])
#loc83 = loc(fused[#loc33, #loc34])
#loc84 = loc(fused[#loc35, #loc36])
#loc86 = loc(fused[#loc39, #loc40])
#loc87 = loc(fused[#loc43, #loc44])
#loc88 = loc(fused[#loc45, #loc46])
#loc89 = loc(fused[#loc47, #loc48])
#loc90 = loc(fused[#loc50, #loc49])
#loc91 = loc(fused[#loc51, #loc54])
#loc92 = loc(fused[#loc56, #loc48])
#loc93 = loc(fused[#loc57, #loc58])
#loc94 = loc(fused[#loc59, #loc62])
#loc95 = loc(fused[#loc63, #loc58])
#loc96 = loc(fused[#loc68, #loc67])
