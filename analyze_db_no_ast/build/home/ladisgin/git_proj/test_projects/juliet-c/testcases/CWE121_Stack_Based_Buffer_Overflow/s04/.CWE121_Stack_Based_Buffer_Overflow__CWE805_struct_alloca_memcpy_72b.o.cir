!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:18)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:28)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":27:14)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":27:38)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":53:18)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":53:42)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc104 = loc(fused[#loc4, #loc5])
#loc108 = loc(fused[#loc19, #loc20])
#loc124 = loc(fused[#loc63, #loc64])
!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E3A3A_Vector_impl_data = !cir.struct<struct "std::_Vector_base<_twoIntsStruct *, std::allocator<_twoIntsStruct *>>::_Vector_impl_data" {!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E3A3A_Vector_impl = !cir.struct<struct "std::_Vector_base<_twoIntsStruct *, std::allocator<_twoIntsStruct *>>::_Vector_impl" {!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E = !cir.struct<struct "std::_Vector_base<_twoIntsStruct *, std::allocator<_twoIntsStruct *>>" {!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E = !cir.struct<class "std::vector<_twoIntsStruct *, std::allocator<_twoIntsStruct *>>" {!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func linkonce_odr  @_ZNSt6vectorIP14_twoIntsStructSaIS1_EEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E> loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc104)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E>>, !cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, %9 : !u64i), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc105)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc105)
    cir.return %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc105)
  } loc(#loc103)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc106)
  cir.func  @_ZN66CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_727badSinkESt6vectorIP14_twoIntsStructSaIS2_EE(%arg0: !ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E, !cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc109)
    cir.store %arg0, %0 : !ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E, !cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E> loc(#loc23)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc24)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc24)
    %4 = cir.call @_ZNSt6vectorIP14_twoIntsStructSaIS1_EEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> extra(#fn_attr2) loc(#loc25)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
    cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc109)
    cir.scope {
      %6 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc111)
      cir.scope {
        %18 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc113)
        cir.scope {
          %19 = cir.const #cir.int<0> : !s32i loc(#loc36)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc36)
          cir.store %20, %18 : !u64i, !cir.ptr<!u64i> loc(#loc115)
          cir.for : cond {
            %21 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc38)
            %22 = cir.const #cir.int<100> : !s32i loc(#loc39)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc39)
            %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc116)
            cir.condition(%24) loc(#loc116)
          } body {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc40)
            %22 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc41)
            %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
            %24 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
            %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
            cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc117)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc44)
            %27 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc45)
            %28 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
            %29 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
            %30 = cir.get_member %29[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
            cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc118)
            cir.yield loc(#loc35)
          } step {
            %21 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc48)
            %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc49)
            cir.store %22, %18 : !u64i, !cir.ptr<!u64i> loc(#loc119)
            cir.yield loc(#loc114)
          } loc(#loc114)
        } loc(#loc114)
      } loc(#loc112)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc50)
      %9 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc51)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc52)
      %13 = cir.const #cir.int<8> : !u64i loc(#loc120)
      %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc121)
      cir.libc.memcpy %14 bytes from %10 to %8 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc122)
      %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
      cir.call @printStructLine(%17) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc60)
    } loc(#loc110)
    cir.return loc(#loc18)
  } loc(#loc107)
  cir.func  @_ZN66CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_7211goodG2BSinkESt6vectorIP14_twoIntsStructSaIS2_EE(%arg0: !ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E loc(fused[#loc63, #loc64])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E, !cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc125)
    cir.store %arg0, %0 : !ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E, !cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E> loc(#loc67)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc68)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc68)
    %4 = cir.call @_ZNSt6vectorIP14_twoIntsStructSaIS1_EEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3C_twoIntsStruct_2A2C_std3A3Aallocator3C_twoIntsStruct_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> extra(#fn_attr2) loc(#loc69)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc125)
    cir.scope {
      %6 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc127)
      cir.scope {
        %18 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc129)
        cir.scope {
          %19 = cir.const #cir.int<0> : !s32i loc(#loc80)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc80)
          cir.store %20, %18 : !u64i, !cir.ptr<!u64i> loc(#loc131)
          cir.for : cond {
            %21 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc82)
            %22 = cir.const #cir.int<100> : !s32i loc(#loc83)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc83)
            %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc132)
            cir.condition(%24) loc(#loc132)
          } body {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc84)
            %22 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc85)
            %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
            %24 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
            %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
            cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc133)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc87)
            %27 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc88)
            %28 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
            %29 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
            %30 = cir.get_member %29[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
            cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc134)
            cir.yield loc(#loc79)
          } step {
            %21 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc90)
            %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc91)
            cir.store %22, %18 : !u64i, !cir.ptr<!u64i> loc(#loc135)
            cir.yield loc(#loc130)
          } loc(#loc130)
        } loc(#loc130)
      } loc(#loc128)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc92)
      %9 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc93)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc94)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc94)
      %13 = cir.const #cir.int<8> : !u64i loc(#loc136)
      %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc137)
      cir.libc.memcpy %14 bytes from %10 to %8 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc138)
      %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc100)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
      cir.call @printStructLine(%17) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc102)
    } loc(#loc126)
    cir.return loc(#loc62)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1127:7)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1132:7)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1129:7)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:11)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":373:20)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":93:10)
#loc10 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:25)
#loc11 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:36)
#loc12 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:34)
#loc13 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:2)
#loc14 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:39)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":27:1)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":46:1)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":30:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":30:40)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":28:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":30:39)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":30:28)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":31:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":45:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":32:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":32:33)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":33:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":41:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":34:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":34:20)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":36:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":40:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":36:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":36:18)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":36:25)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":36:29)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":38:36)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":38:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":38:17)
#loc43 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":39:36)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":39:24)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":39:17)
#loc47 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":36:35)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":36:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":43:16)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":43:22)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":43:30)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":43:34)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":43:54)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":43:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":43:55)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":44:26)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":44:31)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":44:32)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":44:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":53:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":71:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":55:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":55:40)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":54:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":55:39)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":55:28)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":56:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":70:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":57:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":57:33)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":58:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":66:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":59:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":59:20)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":61:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":65:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":61:22)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":61:18)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":61:25)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":61:29)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":63:36)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":63:24)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":63:17)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":64:36)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":64:24)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":64:17)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":61:35)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":61:34)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":68:16)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":68:22)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":68:30)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":68:34)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":68:54)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":68:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":68:55)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":69:26)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":69:31)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":69:32)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_72b.cpp":69:9)
#loc103 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc17, #loc18])
#loc109 = loc(fused[#loc21, #loc22])
#loc110 = loc(fused[#loc26, #loc27])
#loc111 = loc(fused[#loc28, #loc29])
#loc112 = loc(fused[#loc30, #loc31])
#loc113 = loc(fused[#loc32, #loc33])
#loc114 = loc(fused[#loc34, #loc35])
#loc115 = loc(fused[#loc37, #loc36])
#loc116 = loc(fused[#loc38, #loc39])
#loc117 = loc(fused[#loc42, #loc40])
#loc118 = loc(fused[#loc46, #loc44])
#loc119 = loc(fused[#loc49, #loc48])
#loc120 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc52, #loc54])
#loc122 = loc(fused[#loc55, #loc56])
#loc123 = loc(fused[#loc61, #loc62])
#loc125 = loc(fused[#loc65, #loc66])
#loc126 = loc(fused[#loc70, #loc71])
#loc127 = loc(fused[#loc72, #loc73])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc76, #loc77])
#loc130 = loc(fused[#loc78, #loc79])
#loc131 = loc(fused[#loc81, #loc80])
#loc132 = loc(fused[#loc82, #loc83])
#loc133 = loc(fused[#loc86, #loc84])
#loc134 = loc(fused[#loc89, #loc87])
#loc135 = loc(fused[#loc91, #loc90])
#loc136 = loc(fused[#loc95, #loc96])
#loc137 = loc(fused[#loc94, #loc96])
#loc138 = loc(fused[#loc97, #loc98])
