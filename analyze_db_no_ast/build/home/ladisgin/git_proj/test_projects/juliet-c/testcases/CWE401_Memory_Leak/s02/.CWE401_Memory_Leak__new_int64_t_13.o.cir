!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_13.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc157)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc158)
  cir.func private  @printLongLongLine(!s64i) loc(#loc159)
  cir.func  @_ZN34CWE401_Memory_Leak__new_int64_t_133badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc162)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc164)
      cir.if %5 {
        %6 = cir.const #cir.int<8> : !u64i loc(#loc166)
        %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc20)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc166)
        cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc167)
        %9 = cir.const #cir.int<5> : !s64i loc(#loc22)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
        cir.store %9, %10 : !s64i, !cir.ptr<!s64i> loc(#loc168)
        %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
        %12 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc26)
        cir.call @printLongLongLine(%12) : (!s64i) -> () loc(#loc27)
      } loc(#loc165)
    } loc(#loc163)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc31)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc170)
      cir.if %5 {
      } loc(#loc171)
    } loc(#loc169)
    cir.return loc(#loc8)
  } loc(#loc160)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr1) loc(#loc173)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__new_int64_t_13L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc176)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc47)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc178)
      cir.if %5 {
        %6 = cir.const #cir.int<8> : !u64i loc(#loc180)
        %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc51)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc180)
        cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc181)
        %9 = cir.const #cir.int<5> : !s64i loc(#loc53)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc54)
        cir.store %9, %10 : !s64i, !cir.ptr<!s64i> loc(#loc182)
        %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc56)
        %12 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc57)
        cir.call @printLongLongLine(%12) : (!s64i) -> () loc(#loc58)
      } loc(#loc179)
    } loc(#loc177)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc61)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc62)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc184)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } else {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc67)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc67)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc51)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc51)
      } loc(#loc185)
    } loc(#loc183)
    cir.return loc(#loc39)
  } loc(#loc174)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__new_int64_t_13L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc188)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc77)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc190)
      cir.if %5 {
        %6 = cir.const #cir.int<8> : !u64i loc(#loc192)
        %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc81)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc192)
        cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc193)
        %9 = cir.const #cir.int<5> : !s64i loc(#loc83)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc84)
        cir.store %9, %10 : !s64i, !cir.ptr<!s64i> loc(#loc194)
        %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc86)
        %12 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc87)
        cir.call @printLongLongLine(%12) : (!s64i) -> () loc(#loc88)
      } loc(#loc191)
    } loc(#loc189)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc92)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc196)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc94)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc94)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc81)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc81)
      } loc(#loc197)
    } loc(#loc195)
    cir.return loc(#loc69)
  } loc(#loc186)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__new_int64_t_13L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc99)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc200)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc104)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc202)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc108)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc108)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc109)
      } else {
        %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["dataGoodBuffer"] {alignment = 8 : i64} loc(#loc204)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc205)
        %7 = cir.const #cir.int<5> : !s64i loc(#loc114)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc115)
        cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc206)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc117)
        %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc118)
        cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc119)
      } loc(#loc203)
    } loc(#loc201)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc123)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc208)
      cir.if %5 {
      } loc(#loc209)
    } loc(#loc207)
    cir.return loc(#loc96)
  } loc(#loc198)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__new_int64_t_13L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc129)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc212)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc134)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc214)
      cir.if %5 {
        %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["dataGoodBuffer"] {alignment = 8 : i64} loc(#loc216)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc217)
        %7 = cir.const #cir.int<5> : !s64i loc(#loc140)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc141)
        cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc218)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc143)
        %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc144)
        cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc145)
      } loc(#loc215)
    } loc(#loc213)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc149)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc220)
      cir.if %5 {
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc126)
  } loc(#loc210)
  cir.func  @_ZN34CWE401_Memory_Leak__new_int64_t_134goodEv() extra(#fn_attr) {
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_13L8goodB2G1Ev() : () -> () loc(#loc153)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_13L8goodB2G2Ev() : () -> () loc(#loc154)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_13L8goodG2B1Ev() : () -> () loc(#loc155)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_13L8goodG2B2Ev() : () -> () loc(#loc156)
    cir.return loc(#loc152)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_13.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":28:1)
#loc8 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":45:1)
#loc9 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":30:5)
#loc10 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":30:15)
#loc11 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":31:12)
#loc12 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":31:5)
#loc13 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":32:5)
#loc14 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":39:5)
#loc15 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":32:8)
#loc16 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":32:27)
#loc17 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":33:5)
#loc18 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":35:16)
#loc19 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":35:20)
#loc20 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":28:6)
#loc21 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":35:9)
#loc22 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":37:17)
#loc23 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":37:10)
#loc24 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":37:9)
#loc25 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":38:28)
#loc26 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":38:27)
#loc27 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":38:9)
#loc28 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":40:5)
#loc29 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":44:5)
#loc30 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":40:8)
#loc31 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":40:27)
#loc32 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":41:5)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":67:19)
#loc36 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc38 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":52:1)
#loc39 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":74:1)
#loc40 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":54:5)
#loc41 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":54:15)
#loc42 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":55:12)
#loc43 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":55:5)
#loc44 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":56:5)
#loc45 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":63:5)
#loc46 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":56:8)
#loc47 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":56:27)
#loc48 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":57:5)
#loc49 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":59:16)
#loc50 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":59:20)
#loc51 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":52:13)
#loc52 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":59:9)
#loc53 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":61:17)
#loc54 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":61:10)
#loc55 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":61:9)
#loc56 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":62:28)
#loc57 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":62:27)
#loc58 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":62:9)
#loc59 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":64:5)
#loc60 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":73:5)
#loc61 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":64:8)
#loc62 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":64:27)
#loc63 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":65:5)
#loc64 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":68:5)
#loc65 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":70:5)
#loc66 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":67:9)
#loc67 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":72:16)
#loc68 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":77:1)
#loc69 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":94:1)
#loc70 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":79:5)
#loc71 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":79:15)
#loc72 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":80:12)
#loc73 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":80:5)
#loc74 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":81:5)
#loc75 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":88:5)
#loc76 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":81:8)
#loc77 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":81:27)
#loc78 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":82:5)
#loc79 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":84:16)
#loc80 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":84:20)
#loc81 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":77:13)
#loc82 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":84:9)
#loc83 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":86:17)
#loc84 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":86:10)
#loc85 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":86:9)
#loc86 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":87:28)
#loc87 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":87:27)
#loc88 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":87:9)
#loc89 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":89:5)
#loc90 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":93:5)
#loc91 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":89:8)
#loc92 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":89:27)
#loc93 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":90:5)
#loc94 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":92:16)
#loc95 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":97:1)
#loc96 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":120:1)
#loc97 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":99:5)
#loc98 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":99:15)
#loc99 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":100:12)
#loc100 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":100:5)
#loc101 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":101:5)
#loc102 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":114:5)
#loc103 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":101:8)
#loc104 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":101:27)
#loc105 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":102:5)
#loc106 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":105:5)
#loc107 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":107:5)
#loc108 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":104:19)
#loc109 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":104:9)
#loc110 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":109:9)
#loc111 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":109:17)
#loc112 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":110:9)
#loc113 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":110:17)
#loc114 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":112:17)
#loc115 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":112:10)
#loc116 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":112:9)
#loc117 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":113:28)
#loc118 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":113:27)
#loc119 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":113:9)
#loc120 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":115:5)
#loc121 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":119:5)
#loc122 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":115:8)
#loc123 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":115:27)
#loc124 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":116:5)
#loc125 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":123:1)
#loc126 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":141:1)
#loc127 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":125:5)
#loc128 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":125:15)
#loc129 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":126:12)
#loc130 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":126:5)
#loc131 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":127:5)
#loc132 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":135:5)
#loc133 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":127:8)
#loc134 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":127:27)
#loc135 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":128:5)
#loc136 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":130:9)
#loc137 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":130:17)
#loc138 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":131:9)
#loc139 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":131:17)
#loc140 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":133:17)
#loc141 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":133:10)
#loc142 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":133:9)
#loc143 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":134:28)
#loc144 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":134:27)
#loc145 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":134:9)
#loc146 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":136:5)
#loc147 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":140:5)
#loc148 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":136:8)
#loc149 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":136:27)
#loc150 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":137:5)
#loc151 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":143:1)
#loc152 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":149:1)
#loc153 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":145:5)
#loc154 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":146:5)
#loc155 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":147:5)
#loc156 = loc("CWE401_Memory_Leak__new_int64_t_13.cpp":148:5)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc12, #loc11])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc15, #loc16])
#loc165 = loc(fused[#loc17, #loc14])
#loc166 = loc(fused[#loc18, #loc19])
#loc167 = loc(fused[#loc21, #loc19])
#loc168 = loc(fused[#loc24, #loc22])
#loc169 = loc(fused[#loc28, #loc29])
#loc170 = loc(fused[#loc30, #loc31])
#loc171 = loc(fused[#loc32, #loc29])
#loc172 = loc(fused[#loc33, #loc34])
#loc173 = loc(fused[#loc36, #loc37])
#loc174 = loc(fused[#loc38, #loc39])
#loc175 = loc(fused[#loc40, #loc41])
#loc176 = loc(fused[#loc43, #loc42])
#loc177 = loc(fused[#loc44, #loc45])
#loc178 = loc(fused[#loc46, #loc47])
#loc179 = loc(fused[#loc48, #loc45])
#loc180 = loc(fused[#loc49, #loc50])
#loc181 = loc(fused[#loc52, #loc50])
#loc182 = loc(fused[#loc55, #loc53])
#loc183 = loc(fused[#loc59, #loc60])
#loc184 = loc(fused[#loc61, #loc62])
#loc185 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc186 = loc(fused[#loc68, #loc69])
#loc187 = loc(fused[#loc70, #loc71])
#loc188 = loc(fused[#loc73, #loc72])
#loc189 = loc(fused[#loc74, #loc75])
#loc190 = loc(fused[#loc76, #loc77])
#loc191 = loc(fused[#loc78, #loc75])
#loc192 = loc(fused[#loc79, #loc80])
#loc193 = loc(fused[#loc82, #loc80])
#loc194 = loc(fused[#loc85, #loc83])
#loc195 = loc(fused[#loc89, #loc90])
#loc196 = loc(fused[#loc91, #loc92])
#loc197 = loc(fused[#loc93, #loc90])
#loc198 = loc(fused[#loc95, #loc96])
#loc199 = loc(fused[#loc97, #loc98])
#loc200 = loc(fused[#loc100, #loc99])
#loc201 = loc(fused[#loc101, #loc102])
#loc202 = loc(fused[#loc103, #loc104])
#loc203 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc204 = loc(fused[#loc110, #loc111])
#loc205 = loc(fused[#loc112, #loc113])
#loc206 = loc(fused[#loc116, #loc114])
#loc207 = loc(fused[#loc120, #loc121])
#loc208 = loc(fused[#loc122, #loc123])
#loc209 = loc(fused[#loc124, #loc121])
#loc210 = loc(fused[#loc125, #loc126])
#loc211 = loc(fused[#loc127, #loc128])
#loc212 = loc(fused[#loc130, #loc129])
#loc213 = loc(fused[#loc131, #loc132])
#loc214 = loc(fused[#loc133, #loc134])
#loc215 = loc(fused[#loc135, #loc132])
#loc216 = loc(fused[#loc136, #loc137])
#loc217 = loc(fused[#loc138, #loc139])
#loc218 = loc(fused[#loc142, #loc140])
#loc219 = loc(fused[#loc146, #loc147])
#loc220 = loc(fused[#loc148, #loc149])
#loc221 = loc(fused[#loc150, #loc147])
#loc222 = loc(fused[#loc151, #loc152])
