!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc12 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":56:21)
#loc13 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":56:28)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":196:10)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":196:14)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":196:20)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":196:32)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":161:25)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":161:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc272 = loc(fused[#loc12, #loc13])
#loc353 = loc(fused[#loc219, #loc220])
#loc354 = loc(fused[#loc221, #loc222])
#loc359 = loc(fused[#loc239, #loc240])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc267)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_system_44_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc268)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc269)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc7)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc270)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc272)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
      %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc18)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc19)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc274)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc7)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc7)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc21)
        %7 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc22)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc23)
        cir.call @exit(%8) : (!s32i) -> () extra(#fn_attr) loc(#loc22)
      } loc(#loc275)
    } loc(#loc273)
    cir.return loc(#loc11)
  } loc(#loc271)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc276)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc277)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc278)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc279)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc280)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc281)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc282)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc283)
  cir.func private @close(!s32i) -> !s32i loc(#loc284)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc286)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc287)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc268)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc47)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc287)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_system_44_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc268)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc268)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc290)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc291)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc292)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc293)
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc294)
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc295)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc59)
      %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc59)
      cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc293)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc61)
      cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc294)
      %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc64)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc64)
      cir.store %20, %13 : !u64i, !cir.ptr<!u64i> loc(#loc295)
      cir.scope {
        cir.do {
          %21 = cir.const #cir.int<2> : !s32i loc(#loc68)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc69)
          %23 = cir.const #cir.int<6> : !s32i loc(#loc70)
          %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc71)
          cir.store %24, %11 : !s32i, !cir.ptr<!s32i> loc(#loc297)
          cir.scope {
            %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc76)
            %79 = cir.const #cir.int<1> : !s32i loc(#loc77)
            %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc77)
            %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc299)
            cir.if %81 {
              cir.break loc(#loc79)
            } loc(#loc300)
          } loc(#loc298)
          %25 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc301)
          %26 = cir.const #cir.int<0> : !s32i loc(#loc82)
          %27 = cir.const #cir.int<16> : !u64i loc(#loc302)
          cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc303)
          %28 = cir.const #cir.int<2> : !s32i loc(#loc87)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc87)
          %30 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc304)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc90)
          %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc90)
          %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc91)
          %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc92)
          cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc305)
          %35 = cir.const #cir.int<27015> : !s32i loc(#loc94)
          %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc94)
          %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc95)
          %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
          cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc306)
          cir.scope {
            %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            %79 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc308)
            %80 = cir.const #cir.int<16> : !u64i loc(#loc309)
            %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc309)
            %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc106)
            %83 = cir.const #cir.int<1> : !s32i loc(#loc107)
            %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc107)
            %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc310)
            cir.if %85 {
              cir.break loc(#loc109)
            } loc(#loc311)
          } loc(#loc307)
          cir.scope {
            %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %79 = cir.const #cir.int<5> : !s32i loc(#loc113)
            %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc114)
            %81 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc115)
            %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc313)
            cir.if %83 {
              cir.break loc(#loc117)
            } loc(#loc314)
          } loc(#loc312)
          %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc118)
          %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc119)
          %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc120)
          %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc121)
          cir.store %42, %12 : !s32i, !cir.ptr<!s32i> loc(#loc315)
          cir.scope {
            %78 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc126)
            %79 = cir.const #cir.int<1> : !s32i loc(#loc127)
            %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc127)
            %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc317)
            cir.if %81 {
              cir.break loc(#loc129)
            } loc(#loc318)
          } loc(#loc316)
          %43 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc130)
          %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
          %45 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc132)
          %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc133)
          %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc319)
          %48 = cir.const #cir.int<1> : !u64i loc(#loc320)
          %49 = cir.const #cir.int<100> : !s32i loc(#loc138)
          %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc138)
          %51 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc139)
          %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc321)
          %53 = cir.const #cir.int<1> : !s32i loc(#loc140)
          %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc140)
          %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc322)
          %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc323)
          %57 = cir.const #cir.int<0> : !s32i loc(#loc142)
          %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc143)
          %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc143)
          cir.store %59, %8 : !s32i, !cir.ptr<!s32i> loc(#loc324)
          cir.scope {
            %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %79 = cir.const #cir.int<1> : !s32i loc(#loc149)
            %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc149)
            %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc326)
            %82 = cir.ternary(%81, true {
              %83 = cir.const #true loc(#loc150)
              cir.yield %83 : !cir.bool loc(#loc150)
            }, false {
              %83 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              %84 = cir.const #cir.int<0> : !s32i loc(#loc152)
              %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc327)
              %86 = cir.ternary(%85, true {
                %87 = cir.const #true loc(#loc150)
                cir.yield %87 : !cir.bool loc(#loc150)
              }, false {
                %87 = cir.const #false loc(#loc150)
                cir.yield %87 : !cir.bool loc(#loc150)
              }) : (!cir.bool) -> !cir.bool loc(#loc150)
              cir.yield %86 : !cir.bool loc(#loc150)
            }) : (!cir.bool) -> !cir.bool loc(#loc150)
            cir.if %82 {
              cir.break loc(#loc154)
            } loc(#loc328)
          } loc(#loc325)
          %60 = cir.const #cir.int<0> : !s32i loc(#loc155)
          %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc155)
          %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
          %63 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc157)
          %64 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc158)
          %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc158)
          %66 = cir.const #cir.int<1> : !u64i loc(#loc329)
          %67 = cir.binop(div, %65, %66) : !u64i loc(#loc330)
          %68 = cir.binop(add, %63, %67) : !u64i loc(#loc331)
          %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc161)
          cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc332)
          %70 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc162)
          %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
          %72 = cir.const #cir.int<13> : !s32i loc(#loc164)
          %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc162)
          cir.store %73, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
          cir.scope {
            %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
            %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc169)
            cir.if %79 {
              %80 = cir.const #cir.int<0> : !s32i loc(#loc171)
              %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc171)
              %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
              cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc336)
            } loc(#loc335)
          } loc(#loc334)
          %74 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc174)
          %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
          %76 = cir.const #cir.int<10> : !s32i loc(#loc176)
          %77 = cir.call @strchr(%75, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc174)
          cir.store %77, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc337)
          cir.scope {
            %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
            %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc181)
            cir.if %79 {
              %80 = cir.const #cir.int<0> : !s32i loc(#loc183)
              %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc183)
              %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
              cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc340)
            } loc(#loc339)
          } loc(#loc338)
          cir.yield loc(#loc67)
        } while {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc186)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc186)
          cir.condition(%22) loc(#loc186)
        } loc(#loc296)
      } loc(#loc296)
      cir.scope {
        %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc189)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc190)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc190)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc342)
        cir.if %24 {
          %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc192)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc193)
        } loc(#loc343)
      } loc(#loc341)
      cir.scope {
        %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc196)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc197)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc197)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc345)
        cir.if %24 {
          %25 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc199)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc200)
        } loc(#loc346)
      } loc(#loc344)
    } loc(#loc289)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc201)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc201)
    cir.return loc(#loc43)
  } loc(#loc285)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc348)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc205)
    cir.return loc(#loc204)
  } loc(#loc347)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc349)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc350)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc351)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc216)
  cir.func @main(%arg0: !s32i loc(fused[#loc219, #loc220]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc221, #loc222])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc353)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc354)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc218)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc223)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc224)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc225)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc225)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc226)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc213)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc213)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc227)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_system_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc355)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_system_44_good() : () -> () loc(#loc228)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc214)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc214)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc230)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc215)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc215)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc231)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_system_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc356)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_system_44_bad() : () -> () loc(#loc232)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc216)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc216)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc234)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc235)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc357)
    cir.return %17 : !s32i loc(#loc357)
  } loc(#loc352)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc239, #loc240])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc359)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
      %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc245)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc246)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc361)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc248)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc248)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc249)
        %7 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc250)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc251)
        cir.call @exit(%8) : (!s32i) -> () extra(#fn_attr) loc(#loc250)
      } loc(#loc362)
    } loc(#loc360)
    cir.return loc(#loc238)
  } loc(#loc358)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc363)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc254)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc365)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc366)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc267)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc260)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc366)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc267)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc267)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc261)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc367)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc263)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc264)
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc254)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc254)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc263)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc265)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc266)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc265)
    cir.return loc(#loc256)
  } loc(#loc364)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_44.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":175:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":175:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":71:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":71:26)
#loc5 = loc("/usr/include/stdlib.h":923:1)
#loc6 = loc("/usr/include/stdlib.h":923:41)
#loc7 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":61:19)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":56:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":64:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":57:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":59:5)
#loc16 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":63:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":59:16)
#loc18 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":59:9)
#loc19 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":59:25)
#loc20 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":60:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":61:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":62:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":62:14)
#loc24 = loc("/usr/include/string.h":407:1)
#loc25 = loc("/usr/include/string.h":408:33)
#loc26 = loc("/usr/include/sys/socket.h":102:1)
#loc27 = loc("/usr/include/sys/socket.h":102:62)
#loc28 = loc("/usr/include/netinet/in.h":404:1)
#loc29 = loc("/usr/include/netinet/in.h":405:40)
#loc30 = loc("/usr/include/sys/socket.h":112:1)
#loc31 = loc("/usr/include/sys/socket.h":113:6)
#loc32 = loc("/usr/include/sys/socket.h":296:1)
#loc33 = loc("/usr/include/sys/socket.h":296:39)
#loc34 = loc("/usr/include/sys/socket.h":306:1)
#loc35 = loc("/usr/include/sys/socket.h":307:38)
#loc36 = loc("/usr/include/sys/socket.h":145:1)
#loc37 = loc("/usr/include/sys/socket.h":145:68)
#loc38 = loc("/usr/include/string.h":246:1)
#loc39 = loc("/usr/include/string.h":247:33)
#loc40 = loc("/usr/include/unistd.h":358:1)
#loc41 = loc("/usr/include/unistd.h":358:27)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":66:1)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":154:1)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":68:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":68:12)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":70:5)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":70:32)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":72:12)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":72:5)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":73:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":151:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":78:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":78:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":79:9)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":79:28)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":80:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":80:15)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":81:9)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":81:31)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":82:9)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":82:31)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":83:9)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":83:37)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":83:26)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":83:33)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":84:9)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":136:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":94:35)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":94:44)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":94:57)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":94:28)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":94:13)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":94:68)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":95:13)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":98:13)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":95:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":95:33)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":96:13)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":97:17)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":99:20)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":99:21)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":99:30)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":99:33)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":99:47)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":99:13)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":99:48)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":100:34)
#loc88 = loc("/usr/include/netinet/in.h":249:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":100:13)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":101:39)
#loc91 = loc("/usr/include/netinet/in.h":251:20)
#loc92 = loc("/usr/include/netinet/in.h":33:15)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":101:13)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":102:38)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":102:32)
#loc96 = loc("/usr/include/netinet/in.h":250:15)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":102:13)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":102:46)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":103:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":106:13)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":103:22)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":103:54)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":103:55)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":103:64)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":103:78)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":103:17)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":103:84)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":104:13)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":105:17)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":107:13)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":110:13)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":107:24)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":107:38)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":107:17)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":107:57)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":108:13)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":109:17)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":111:35)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":111:49)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":111:55)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":111:28)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":111:13)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":111:59)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":112:13)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":115:13)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":112:17)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":112:33)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":113:13)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":114:17)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:31)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:54)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:61)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:59)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:45)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:68)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:71)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:82)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:87)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:93)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:103)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:104)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:107)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:26)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:13)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":117:108)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":118:13)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":121:13)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":118:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":118:31)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":118:44)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":118:47)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":118:61)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":119:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":120:17)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":123:57)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":123:13)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":123:18)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":123:28)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":123:41)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":123:52)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":123:53)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":125:23)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":125:30)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":125:36)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":125:13)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":125:40)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":126:13)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":129:13)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":126:17)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":127:13)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":128:28)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":128:18)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":128:17)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":130:23)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":130:30)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":130:36)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":130:13)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":130:40)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":131:13)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":134:13)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":131:17)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":132:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":133:28)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":133:18)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":133:17)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":136:16)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":137:9)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":140:9)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":137:13)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":137:29)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":138:9)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":139:26)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":139:13)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":141:9)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":144:9)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":141:13)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":141:29)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":142:9)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":143:26)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":143:13)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":153:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":153:13)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":182:1)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":185:1)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":184:5)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":184:13)
#loc207 = loc("/usr/include/stdlib.h":575:1)
#loc208 = loc("/usr/include/stdlib.h":575:41)
#loc209 = loc("/usr/include/time.h":76:1)
#loc210 = loc("/usr/include/time.h":76:38)
#loc211 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc212 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":201:15)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":203:15)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":206:15)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":208:15)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":196:1)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":211:1)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":197:1)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":199:27)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":199:22)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":199:5)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":201:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":202:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":202:67)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":203:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":206:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":207:5)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":207:66)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":208:5)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":210:12)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":210:5)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":161:1)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":169:1)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":162:1)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":164:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":168:5)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":164:16)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":164:9)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":164:25)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":165:5)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":166:19)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":166:9)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":167:9)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":167:14)
#loc252 = loc("/usr/include/string.h":149:1)
#loc253 = loc("/usr/include/string.h":150:14)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":178:18)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":171:1)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":180:1)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":173:5)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":173:12)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":174:5)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":174:32)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":176:12)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":176:5)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":178:5)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":178:12)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":179:5)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_44.c":179:13)
#loc267 = loc(fused[#loc1, #loc2])
#loc268 = loc(fused[#loc3, #loc4])
#loc269 = loc(fused[#loc5, #loc6])
#loc270 = loc(fused[#loc8, #loc9])
#loc271 = loc(fused[#loc10, #loc11])
#loc273 = loc(fused[#loc15, #loc16])
#loc274 = loc(fused[#loc18, #loc19])
#loc275 = loc(fused[#loc20, #loc16])
#loc276 = loc(fused[#loc24, #loc25])
#loc277 = loc(fused[#loc26, #loc27])
#loc278 = loc(fused[#loc28, #loc29])
#loc279 = loc(fused[#loc30, #loc31])
#loc280 = loc(fused[#loc32, #loc33])
#loc281 = loc(fused[#loc34, #loc35])
#loc282 = loc(fused[#loc36, #loc37])
#loc283 = loc(fused[#loc38, #loc39])
#loc284 = loc(fused[#loc40, #loc41])
#loc285 = loc(fused[#loc42, #loc43])
#loc286 = loc(fused[#loc44, #loc45])
#loc287 = loc(fused[#loc46, #loc47])
#loc288 = loc(fused[#loc49, #loc48])
#loc289 = loc(fused[#loc50, #loc51])
#loc290 = loc(fused[#loc52, #loc53])
#loc291 = loc(fused[#loc54, #loc55])
#loc292 = loc(fused[#loc56, #loc57])
#loc293 = loc(fused[#loc58, #loc59])
#loc294 = loc(fused[#loc60, #loc61])
#loc295 = loc(fused[#loc62, #loc63])
#loc296 = loc(fused[#loc66, #loc67])
#loc297 = loc(fused[#loc72, #loc73])
#loc298 = loc(fused[#loc74, #loc75])
#loc299 = loc(fused[#loc76, #loc77])
#loc300 = loc(fused[#loc78, #loc75])
#loc301 = loc(fused[#loc80, #loc81])
#loc302 = loc(fused[#loc83, #loc84])
#loc303 = loc(fused[#loc85, #loc86])
#loc304 = loc(fused[#loc89, #loc87])
#loc305 = loc(fused[#loc93, #loc90])
#loc306 = loc(fused[#loc97, #loc98])
#loc307 = loc(fused[#loc99, #loc100])
#loc308 = loc(fused[#loc102, #loc103])
#loc309 = loc(fused[#loc104, #loc105])
#loc310 = loc(fused[#loc106, #loc107])
#loc311 = loc(fused[#loc108, #loc100])
#loc312 = loc(fused[#loc110, #loc111])
#loc313 = loc(fused[#loc114, #loc115])
#loc314 = loc(fused[#loc116, #loc111])
#loc315 = loc(fused[#loc122, #loc123])
#loc316 = loc(fused[#loc124, #loc125])
#loc317 = loc(fused[#loc126, #loc127])
#loc318 = loc(fused[#loc128, #loc125])
#loc319 = loc(fused[#loc134, #loc135])
#loc320 = loc(fused[#loc136, #loc137])
#loc321 = loc(fused[#loc138, #loc139])
#loc322 = loc(fused[#loc138, #loc140])
#loc323 = loc(fused[#loc136, #loc141])
#loc324 = loc(fused[#loc144, #loc145])
#loc325 = loc(fused[#loc146, #loc147])
#loc326 = loc(fused[#loc148, #loc149])
#loc327 = loc(fused[#loc151, #loc152])
#loc328 = loc(fused[#loc153, #loc147])
#loc329 = loc(fused[#loc159, #loc160])
#loc330 = loc(fused[#loc158, #loc160])
#loc331 = loc(fused[#loc157, #loc160])
#loc332 = loc(fused[#loc156, #loc155])
#loc333 = loc(fused[#loc165, #loc166])
#loc334 = loc(fused[#loc167, #loc168])
#loc335 = loc(fused[#loc170, #loc168])
#loc336 = loc(fused[#loc173, #loc171])
#loc337 = loc(fused[#loc177, #loc178])
#loc338 = loc(fused[#loc179, #loc180])
#loc339 = loc(fused[#loc182, #loc180])
#loc340 = loc(fused[#loc185, #loc183])
#loc341 = loc(fused[#loc187, #loc188])
#loc342 = loc(fused[#loc189, #loc190])
#loc343 = loc(fused[#loc191, #loc188])
#loc344 = loc(fused[#loc194, #loc195])
#loc345 = loc(fused[#loc196, #loc197])
#loc346 = loc(fused[#loc198, #loc195])
#loc347 = loc(fused[#loc203, #loc204])
#loc348 = loc(fused[#loc205, #loc206])
#loc349 = loc(fused[#loc207, #loc208])
#loc350 = loc(fused[#loc209, #loc210])
#loc351 = loc(fused[#loc211, #loc212])
#loc352 = loc(fused[#loc217, #loc218])
#loc355 = loc(fused[#loc228, #loc229])
#loc356 = loc(fused[#loc232, #loc233])
#loc357 = loc(fused[#loc236, #loc235])
#loc358 = loc(fused[#loc237, #loc238])
#loc360 = loc(fused[#loc242, #loc243])
#loc361 = loc(fused[#loc245, #loc246])
#loc362 = loc(fused[#loc247, #loc243])
#loc363 = loc(fused[#loc252, #loc253])
#loc364 = loc(fused[#loc255, #loc256])
#loc365 = loc(fused[#loc257, #loc258])
#loc366 = loc(fused[#loc259, #loc260])
#loc367 = loc(fused[#loc262, #loc261])
