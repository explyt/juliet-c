!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc119)
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc120)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc122)
  cir.func private @printIntLine(!s32i) loc(#loc123)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_123badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc126)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc127)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc128)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc22)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %6 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc26)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc131)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc31)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc121)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %13 = cir.call @__isoc23_fscanf(%10, %12, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc31)
    cir.br ^bb4 loc(#loc29)
  ^bb3:  // pred: ^bb1
    %14 = cir.const #cir.int<20> : !s32i loc(#loc33)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc134)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc37)
    %17 = cir.const #cir.int<4> : !u64i loc(#loc135)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc136)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %20 = cir.call @_Znam(%19) : (!u64i) -> !cir.ptr<!void> loc(#loc42)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc138)
    cir.store %22, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
    cir.br ^bb7 loc(#loc140)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc48)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    cir.br ^bb8 loc(#loc140)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %26 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc51)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc142)
    cir.brcond %28 ^bb9, ^bb13 loc(#loc142)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc143)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc56)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.br ^bb11 loc(#loc47)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc47)
  ^bb12:  // pred: ^bb11
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc58)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc145)
    cir.br ^bb8 loc(#loc140)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc47)
  ^bb14:  // pred: ^bb13
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc61)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc62)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    cir.delete.array %39 : <!s32i> loc(#loc63)
    cir.br ^bb15 loc(#loc36)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc13)
  } loc(#loc124)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc149)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc150)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc74)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %6 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc78)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc153)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc83)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb4 loc(#loc81)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc85)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.br ^bb4 loc(#loc77)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc77)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc157)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc89)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc158)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc159)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc94)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc161)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc161)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc162)
    cir.br ^bb7 loc(#loc163)
  ^bb7:  // pred: ^bb6
    %18 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc100)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc164)
    cir.br ^bb8 loc(#loc163)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc103)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc165)
    cir.brcond %23 ^bb9, ^bb13 loc(#loc165)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc166)
  ^bb10:  // pred: ^bb9
    %24 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc107)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc108)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.br ^bb11 loc(#loc99)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc99)
  ^bb12:  // pred: ^bb11
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc110)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc168)
    cir.br ^bb8 loc(#loc163)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc99)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc113)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc114)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
    cir.delete.array %34 : <!s32i> loc(#loc115)
    cir.br ^bb15 loc(#loc88)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc65)
  } loc(#loc146)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_124goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12L7goodG2BEv() : () -> () loc(#loc118)
    cir.return loc(#loc117)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":442:1)
#loc4 = loc("/usr/include/stdio.h":444:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":32:23)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":24:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":52:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":40:9)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":40:16)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":40:26)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":41:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":41:14)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":26:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":26:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":28:13)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":28:12)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":28:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":29:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":38:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":29:8)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":29:33)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":30:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":33:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":35:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":32:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":32:16)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":37:16)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":37:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":39:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":51:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":43:21)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":43:28)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":43:38)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":43:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":44:37)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":24:6)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":44:28)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":44:46)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":44:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":45:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":48:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":45:18)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":45:14)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":45:21)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":45:33)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":46:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":47:29)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":47:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":47:24)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":47:25)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":45:40)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":45:39)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":49:22)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":49:33)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":49:34)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":49:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":50:19)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":60:1)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":88:1)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":76:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":76:16)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":76:26)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":77:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":77:14)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":62:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":62:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":64:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":64:12)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":64:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":65:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":74:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":65:8)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":65:33)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":66:5)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":69:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":71:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":68:16)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":68:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":73:16)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":73:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":75:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":87:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":79:21)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":79:28)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":79:38)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":79:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":80:37)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":60:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":80:28)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":80:46)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":80:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":81:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":84:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":81:18)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":81:14)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":81:21)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":81:33)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":82:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":83:29)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":83:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":83:24)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":83:25)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":81:40)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":81:39)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":85:22)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":85:33)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":85:34)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":85:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":86:19)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":90:1)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":93:1)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_12.cpp":92:5)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc8, #loc9])
#loc123 = loc(fused[#loc10, #loc11])
#loc124 = loc(fused[#loc12, #loc13])
#loc125 = loc(fused[#loc14, #loc15])
#loc126 = loc(fused[#loc14, #loc16])
#loc127 = loc(fused[#loc17, #loc18])
#loc128 = loc(fused[#loc19, #loc20])
#loc129 = loc(fused[#loc23, #loc21])
#loc130 = loc(fused[#loc24, #loc25])
#loc131 = loc(fused[#loc26, #loc27])
#loc132 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc133 = loc(fused[#loc34, #loc33])
#loc134 = loc(fused[#loc35, #loc36])
#loc135 = loc(fused[#loc38, #loc39])
#loc136 = loc(fused[#loc37, #loc39])
#loc137 = loc(fused[#loc40, #loc39])
#loc138 = loc(fused[#loc43, #loc44])
#loc139 = loc(fused[#loc45, #loc44])
#loc140 = loc(fused[#loc46, #loc47])
#loc141 = loc(fused[#loc49, #loc48])
#loc142 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc52, #loc47])
#loc144 = loc(fused[#loc54, #loc53])
#loc145 = loc(fused[#loc58, #loc57])
#loc146 = loc(fused[#loc64, #loc65])
#loc147 = loc(fused[#loc66, #loc67])
#loc148 = loc(fused[#loc66, #loc68])
#loc149 = loc(fused[#loc69, #loc70])
#loc150 = loc(fused[#loc71, #loc72])
#loc151 = loc(fused[#loc75, #loc73])
#loc152 = loc(fused[#loc76, #loc77])
#loc153 = loc(fused[#loc78, #loc79])
#loc154 = loc(fused[#loc80, #loc81, #loc82, #loc77])
#loc155 = loc(fused[#loc84, #loc83])
#loc156 = loc(fused[#loc86, #loc85])
#loc157 = loc(fused[#loc87, #loc88])
#loc158 = loc(fused[#loc90, #loc91])
#loc159 = loc(fused[#loc89, #loc91])
#loc160 = loc(fused[#loc92, #loc91])
#loc161 = loc(fused[#loc95, #loc96])
#loc162 = loc(fused[#loc97, #loc96])
#loc163 = loc(fused[#loc98, #loc99])
#loc164 = loc(fused[#loc101, #loc100])
#loc165 = loc(fused[#loc102, #loc103])
#loc166 = loc(fused[#loc104, #loc99])
#loc167 = loc(fused[#loc106, #loc105])
#loc168 = loc(fused[#loc110, #loc109])
#loc169 = loc(fused[#loc116, #loc117])
