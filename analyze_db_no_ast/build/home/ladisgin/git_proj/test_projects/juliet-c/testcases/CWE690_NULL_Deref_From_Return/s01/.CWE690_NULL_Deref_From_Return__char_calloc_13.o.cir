!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
  cir.global "private"  constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc109)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc112)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__char_calloc_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc18)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc19)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc19)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc116)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc109)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc27)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !s32i loc(#loc120)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc28)
      cir.if %12 {
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc30)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc7)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc7)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc30)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc33)
        %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc34)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
        cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
      } loc(#loc121)
    } loc(#loc119)
    cir.return loc(#loc13)
  } loc(#loc113)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__char_calloc_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc122)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc42)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc47)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc49)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc50)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc50)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc128)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc129)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc109)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc57)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc58)
      %11 = cir.cmp(ne, %9, %10) : !s32i, !s32i loc(#loc132)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc59)
      cir.if %12 {
        %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      } else {
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc67)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !s32i loc(#loc135)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc68)
          cir.if %17 {
            %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc70)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc72)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc72)
            %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc70)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
            cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc74)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc75)
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
          } loc(#loc136)
        } loc(#loc134)
      } loc(#loc133)
    } loc(#loc131)
    cir.return loc(#loc44)
  } loc(#loc125)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc81)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc83)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc84)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc84)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc140)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc109)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc91)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc92)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !s32i loc(#loc144)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc93)
      cir.if %12 {
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !s32i loc(#loc147)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc99)
          cir.if %17 {
            %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc101)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc103)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc103)
            %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc101)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
            cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc105)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc106)
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc106)
          } loc(#loc148)
        } loc(#loc146)
      } loc(#loc145)
    } loc(#loc143)
    cir.return loc(#loc78)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_13.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc4 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":32:22)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":23:1)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":36:1)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":25:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":25:12)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":26:12)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":26:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":28:20)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":28:27)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":28:31)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":28:42)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":28:43)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":28:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":29:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":35:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":29:8)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":29:27)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":29:25)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":30:5)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":32:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":32:16)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":33:19)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":33:9)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":34:9)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":34:14)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":85:1)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":89:1)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":87:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":87:14)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":88:5)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":88:14)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":52:19)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":43:1)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":64:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":45:5)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":45:12)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":46:12)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":46:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":48:20)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":48:27)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":48:31)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":48:42)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":48:43)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":48:5)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":49:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":63:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":49:8)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":49:27)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":49:25)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":50:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":53:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":55:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":52:9)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":57:9)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":62:9)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":57:13)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":57:21)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":57:18)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":58:9)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":59:13)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":59:20)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":59:26)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":60:23)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":60:13)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":61:13)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":61:18)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":67:1)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":83:1)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":69:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":69:12)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":70:12)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":70:5)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":72:20)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":72:27)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":72:31)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":72:42)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":72:43)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":72:5)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":73:5)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":82:5)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":73:8)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":73:27)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":73:25)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":74:5)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":76:9)
#loc96 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":81:9)
#loc97 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":76:13)
#loc98 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":76:21)
#loc99 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":76:18)
#loc100 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":77:9)
#loc101 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":78:13)
#loc102 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":78:20)
#loc103 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":78:26)
#loc104 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":79:23)
#loc105 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":79:13)
#loc106 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":80:13)
#loc107 = loc("CWE690_NULL_Deref_From_Return__char_calloc_13.c":80:18)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc8, #loc9])
#loc112 = loc(fused[#loc10, #loc11])
#loc113 = loc(fused[#loc12, #loc13])
#loc114 = loc(fused[#loc14, #loc15])
#loc115 = loc(fused[#loc17, #loc16])
#loc116 = loc(fused[#loc20, #loc21])
#loc117 = loc(fused[#loc18, #loc22])
#loc118 = loc(fused[#loc23, #loc22])
#loc119 = loc(fused[#loc24, #loc25])
#loc120 = loc(fused[#loc26, #loc27])
#loc121 = loc(fused[#loc29, #loc25])
#loc122 = loc(fused[#loc36, #loc37])
#loc123 = loc(fused[#loc38, #loc39])
#loc124 = loc(fused[#loc40, #loc41])
#loc125 = loc(fused[#loc43, #loc44])
#loc126 = loc(fused[#loc45, #loc46])
#loc127 = loc(fused[#loc48, #loc47])
#loc128 = loc(fused[#loc51, #loc52])
#loc129 = loc(fused[#loc49, #loc53])
#loc130 = loc(fused[#loc54, #loc53])
#loc131 = loc(fused[#loc55, #loc56])
#loc132 = loc(fused[#loc57, #loc58])
#loc133 = loc(fused[#loc60, #loc61, #loc62, #loc56])
#loc134 = loc(fused[#loc64, #loc65])
#loc135 = loc(fused[#loc66, #loc67])
#loc136 = loc(fused[#loc69, #loc65])
#loc137 = loc(fused[#loc77, #loc78])
#loc138 = loc(fused[#loc79, #loc80])
#loc139 = loc(fused[#loc82, #loc81])
#loc140 = loc(fused[#loc85, #loc86])
#loc141 = loc(fused[#loc83, #loc87])
#loc142 = loc(fused[#loc88, #loc87])
#loc143 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc91, #loc92])
#loc145 = loc(fused[#loc94, #loc90])
#loc146 = loc(fused[#loc95, #loc96])
#loc147 = loc(fused[#loc97, #loc98])
#loc148 = loc(fused[#loc100, #loc96])
