!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc170)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc171)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc172)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc172)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc177)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc179)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc19)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc19)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc19)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc19)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc19)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc180)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc19)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc21)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc21)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc21)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc21)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc21)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc21)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %22 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc182)
    %23 = cir.call %22() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc24)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %24 ^bb2, ^bb3 loc(#loc183)
  ^bb2:  // pred: ^bb1
    %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    cir.store %25, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc29)
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %27, %30 : !s8i, !cir.ptr<!s8i> loc(#loc185)
    cir.br ^bb3 loc(#loc23)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    %31 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc172)
    cir.copy %31 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc172)
    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc35)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc36)
    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc35)
    cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.br ^bb6 loc(#loc188)
  ^bb6:  // pred: ^bb5
    %35 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc41)
    cir.store %36, %1 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb7 loc(#loc188)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc45)
    %41 = cir.binop(add, %38, %40) : !u64i loc(#loc190)
    %42 = cir.cmp(lt, %37, %41) : !u64i, !cir.bool loc(#loc191)
    cir.brcond %42 ^bb8, ^bb12 loc(#loc46)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc192)
  ^bb9:  // pred: ^bb8
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc49)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc49)
    %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc49)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %48 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc193)
    cir.br ^bb10 loc(#loc40)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc40)
  ^bb11:  // pred: ^bb10
    %50 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %51 = cir.unary(inc, %50) : !u64i, !u64i loc(#loc55)
    cir.store %51, %1 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb7 loc(#loc188)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc40)
  ^bb13:  // pred: ^bb12
    %52 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb14 loc(#loc34)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc12)
  } loc(#loc175)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc196)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc197)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc62)
    cir.return loc(#loc59)
  } loc(#loc195)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc66)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    cir.return %2 : !s32i loc(#loc199)
  } loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc171)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc201)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc202)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc203)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc204)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc77)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc77)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc77)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc77)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc205)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc79)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc79)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc79)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc79)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc79)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc79)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc79)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    cir.br ^bb1 loc(#loc206)
  ^bb1:  // pred: ^bb0
    %22 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc207)
    %23 = cir.call %22() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc82)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc82)
    cir.brcond %24 ^bb2, ^bb3 loc(#loc208)
  ^bb2:  // pred: ^bb1
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb4 loc(#loc85)
  ^bb3:  // pred: ^bb1
    %27 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %27, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc90)
    %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc93)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc210)
    cir.br ^bb4 loc(#loc81)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc81)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc211)
  ^bb6:  // pred: ^bb5
    %33 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc171)
    cir.copy %33 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc171)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc96)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc97)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc96)
    cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc212)
    cir.br ^bb7 loc(#loc213)
  ^bb7:  // pred: ^bb6
    %37 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc102)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc214)
    cir.br ^bb8 loc(#loc213)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc105)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc106)
    %43 = cir.binop(add, %40, %42) : !u64i loc(#loc215)
    %44 = cir.cmp(lt, %39, %43) : !u64i, !cir.bool loc(#loc216)
    cir.brcond %44 ^bb9, ^bb13 loc(#loc107)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc217)
  ^bb10:  // pred: ^bb9
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc110)
    %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc110)
    %48 = cir.load %47 : !cir.ptr<!s8i>, !s8i loc(#loc110)
    %49 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %50 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc112)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc218)
    cir.br ^bb11 loc(#loc101)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc101)
  ^bb12:  // pred: ^bb11
    %52 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %53 = cir.unary(inc, %52) : !u64i, !u64i loc(#loc116)
    cir.store %53, %1 : !u64i, !cir.ptr<!u64i> loc(#loc219)
    cir.br ^bb8 loc(#loc213)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc101)
  ^bb14:  // pred: ^bb13
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb15 loc(#loc95)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc70)
  } loc(#loc200)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc121)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    cir.return %2 : !s32i loc(#loc221)
  } loc(#loc220)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc170)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc224)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc226)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc131)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc131)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc131)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc131)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc131)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc227)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc131)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc133)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc133)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc133)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc133)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc133)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc133)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc133)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %22 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc229)
    %23 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc136)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc136)
    cir.brcond %24 ^bb2, ^bb3 loc(#loc230)
  ^bb2:  // pred: ^bb1
    %25 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.store %25, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc141)
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc144)
    cir.store %27, %30 : !s8i, !cir.ptr<!s8i> loc(#loc232)
    cir.br ^bb3 loc(#loc135)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc135)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc233)
  ^bb5:  // pred: ^bb4
    %31 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc170)
    cir.copy %31 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc170)
    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc147)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc148)
    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc147)
    cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc234)
    cir.br ^bb6 loc(#loc235)
  ^bb6:  // pred: ^bb5
    %35 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc153)
    cir.store %36, %1 : !u64i, !cir.ptr<!u64i> loc(#loc236)
    cir.br ^bb7 loc(#loc235)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc155)
    %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc157)
    %41 = cir.binop(add, %38, %40) : !u64i loc(#loc237)
    %42 = cir.cmp(lt, %37, %41) : !u64i, !cir.bool loc(#loc238)
    cir.brcond %42 ^bb8, ^bb12 loc(#loc158)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc239)
  ^bb9:  // pred: ^bb8
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc160)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc161)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc161)
    %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc161)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %48 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc163)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc164)
    cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc240)
    cir.br ^bb10 loc(#loc152)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc152)
  ^bb11:  // pred: ^bb10
    %50 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc166)
    %51 = cir.unary(inc, %50) : !u64i, !u64i loc(#loc167)
    cir.store %51, %1 : !u64i, !cir.ptr<!u64i> loc(#loc241)
    cir.br ^bb7 loc(#loc235)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc152)
  ^bb13:  // pred: ^bb12
    %52 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    cir.br ^bb14 loc(#loc146)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc124)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":118:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":118:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":91:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":91:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":55:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":55:29)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":42:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":66:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":56:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":56:16)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":56:19)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":44:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":44:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":45:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":45:36)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":46:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":46:37)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":47:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":53:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":47:8)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":47:26)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":48:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":51:16)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":51:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":52:19)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":52:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":52:14)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":52:15)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":54:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":65:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":57:21)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":57:28)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":57:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":57:34)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":60:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":63:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":60:18)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":60:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":60:21)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":60:25)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":60:37)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":60:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":61:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":62:30)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":62:23)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":62:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":62:18)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":62:19)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":62:31)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":60:41)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":60:40)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":64:19)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":64:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":131:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":135:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":133:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":133:14)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":134:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":134:14)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":30:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":33:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":32:12)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":32:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":81:19)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":73:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":102:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":92:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":92:16)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":92:19)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":75:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":75:12)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":76:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":76:36)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":77:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":77:37)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":78:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":89:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":78:8)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":78:27)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":79:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":82:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":84:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":81:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":87:16)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":87:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":88:19)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":88:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":88:14)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":88:15)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":90:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":101:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":93:21)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":93:28)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":93:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":93:34)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":96:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":99:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":96:18)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":96:14)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":96:21)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":96:25)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":96:37)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":96:23)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":97:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":98:30)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":98:23)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":98:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":98:18)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":98:19)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":98:31)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":96:41)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":96:40)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":100:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":100:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":35:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":38:1)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":37:12)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":37:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":105:1)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":129:1)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":119:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":119:16)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":119:19)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":107:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":107:12)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":108:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":108:36)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":109:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":109:37)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":110:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":116:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":110:8)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":110:26)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":111:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":114:16)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":114:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":115:19)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":115:9)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":115:14)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":115:15)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":117:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":128:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":120:21)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":120:28)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":120:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":120:34)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":123:9)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":126:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":123:18)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":123:14)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":123:21)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":123:25)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":123:37)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":123:23)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":124:9)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":125:30)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":125:23)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":125:13)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":125:18)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":125:19)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":125:31)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":123:41)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":123:40)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":127:19)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_08.c":127:9)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc7, #loc8])
#loc174 = loc(fused[#loc9, #loc10])
#loc175 = loc(fused[#loc11, #loc12])
#loc176 = loc(fused[#loc13, #loc14])
#loc177 = loc(fused[#loc13, #loc15])
#loc178 = loc(fused[#loc16, #loc17])
#loc179 = loc(fused[#loc18, #loc19])
#loc180 = loc(fused[#loc20, #loc21])
#loc181 = loc(fused[#loc22, #loc23])
#loc182 = loc(fused[#loc24, #loc25])
#loc183 = loc(fused[#loc26, #loc23])
#loc184 = loc(fused[#loc28, #loc27])
#loc185 = loc(fused[#loc30, #loc29])
#loc186 = loc(fused[#loc33, #loc34])
#loc187 = loc(fused[#loc37, #loc38])
#loc188 = loc(fused[#loc39, #loc40])
#loc189 = loc(fused[#loc42, #loc41])
#loc190 = loc(fused[#loc44, #loc45])
#loc191 = loc(fused[#loc43, #loc45])
#loc192 = loc(fused[#loc47, #loc40])
#loc193 = loc(fused[#loc50, #loc53])
#loc194 = loc(fused[#loc55, #loc54])
#loc195 = loc(fused[#loc58, #loc59])
#loc196 = loc(fused[#loc60, #loc61])
#loc197 = loc(fused[#loc62, #loc63])
#loc198 = loc(fused[#loc64, #loc65])
#loc199 = loc(fused[#loc67, #loc66])
#loc200 = loc(fused[#loc69, #loc70])
#loc201 = loc(fused[#loc71, #loc72])
#loc202 = loc(fused[#loc71, #loc73])
#loc203 = loc(fused[#loc74, #loc75])
#loc204 = loc(fused[#loc76, #loc77])
#loc205 = loc(fused[#loc78, #loc79])
#loc206 = loc(fused[#loc80, #loc81])
#loc207 = loc(fused[#loc82, #loc83])
#loc208 = loc(fused[#loc84, #loc85, #loc86, #loc81])
#loc209 = loc(fused[#loc89, #loc88])
#loc210 = loc(fused[#loc91, #loc90])
#loc211 = loc(fused[#loc94, #loc95])
#loc212 = loc(fused[#loc98, #loc99])
#loc213 = loc(fused[#loc100, #loc101])
#loc214 = loc(fused[#loc103, #loc102])
#loc215 = loc(fused[#loc105, #loc106])
#loc216 = loc(fused[#loc104, #loc106])
#loc217 = loc(fused[#loc108, #loc101])
#loc218 = loc(fused[#loc111, #loc114])
#loc219 = loc(fused[#loc116, #loc115])
#loc220 = loc(fused[#loc119, #loc120])
#loc221 = loc(fused[#loc122, #loc121])
#loc222 = loc(fused[#loc123, #loc124])
#loc223 = loc(fused[#loc125, #loc126])
#loc224 = loc(fused[#loc125, #loc127])
#loc225 = loc(fused[#loc128, #loc129])
#loc226 = loc(fused[#loc130, #loc131])
#loc227 = loc(fused[#loc132, #loc133])
#loc228 = loc(fused[#loc134, #loc135])
#loc229 = loc(fused[#loc136, #loc137])
#loc230 = loc(fused[#loc138, #loc135])
#loc231 = loc(fused[#loc140, #loc139])
#loc232 = loc(fused[#loc142, #loc141])
#loc233 = loc(fused[#loc145, #loc146])
#loc234 = loc(fused[#loc149, #loc150])
#loc235 = loc(fused[#loc151, #loc152])
#loc236 = loc(fused[#loc154, #loc153])
#loc237 = loc(fused[#loc156, #loc157])
#loc238 = loc(fused[#loc155, #loc157])
#loc239 = loc(fused[#loc159, #loc152])
#loc240 = loc(fused[#loc162, #loc165])
#loc241 = loc(fused[#loc167, #loc166])
