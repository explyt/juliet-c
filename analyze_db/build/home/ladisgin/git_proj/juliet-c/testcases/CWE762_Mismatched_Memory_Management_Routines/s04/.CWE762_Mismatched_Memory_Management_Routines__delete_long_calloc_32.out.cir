!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":113:10)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":113:14)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":113:20)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":113:32)
#loc203 = loc(fused[#loc133, #loc134])
#loc204 = loc(fused[#loc135, #loc136])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s04/CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc149)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc150)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func @_ZN67CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc156)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc157)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc156)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc157)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc19)
    cir.store %5, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc10)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
    cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc153)
    %8 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc24)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc25)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc160)
    %12 = cir.call @calloc(%10, %11) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc161)
    cir.store %13, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc162)
    cir.br ^bb2 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc32)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc33)
    %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s64i>, !cir.bool loc(#loc164)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc165)
  ^bb3:  // pred: ^bb2
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc37)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc38)
    %21 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc39)
    cir.store %20, %21 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc166)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc167)
  ^bb7:  // pred: ^bb6
    %22 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc12)
    %23 = cir.load %22 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc43)
    cir.store %23, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc154)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc44)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc44)
    cir.call @_ZdlPv(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
    cir.br ^bb8 loc(#loc42)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc152)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc168)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc173)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc174)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc173)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc174)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    cir.store %5, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc51)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc64)
    cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc170)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc177)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc67)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc177)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc178)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc69)
    %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc70)
    cir.store %11, %12 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc179)
    cir.br ^bb2 loc(#loc63)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc180)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc53)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc74)
    cir.store %14, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc171)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc75)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc75)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc49)
  } loc(#loc169)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc181)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc186)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc187)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc186)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc187)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    cir.store %5, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc188)
    cir.br ^bb1 loc(#loc189)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc81)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc94)
    cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc183)
    %8 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc95)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc96)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc190)
    %12 = cir.call @calloc(%10, %11) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc191)
    cir.store %13, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc192)
    cir.br ^bb2 loc(#loc193)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc103)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc104)
    %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s64i>, !cir.bool loc(#loc194)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc195)
  ^bb3:  // pred: ^bb2
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc106)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc108)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc106)
    cir.br ^bb4 loc(#loc102)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc102)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
    %21 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc110)
    cir.store %20, %21 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc196)
    cir.br ^bb6 loc(#loc93)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc197)
  ^bb7:  // pred: ^bb6
    %22 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc83)
    %23 = cir.load %22 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc114)
    cir.store %23, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc184)
    %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc115)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc116)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc116)
    cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb8 loc(#loc113)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc79)
  } loc(#loc182)
  cir.func @_ZN67CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32L7goodG2BEv() : () -> () loc(#loc119)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32L7goodB2GEv() : () -> () loc(#loc120)
    cir.return loc(#loc118)
  } loc(#loc198)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc199)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc200)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc130)
  cir.func @main(%arg0: !s32i loc(fused[#loc133, #loc134]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc135, #loc136])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc132)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc137)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc138)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc139)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc139)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc140)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc127)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_324goodEv() : () -> () loc(#loc142)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc128)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc129)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_323badEv() : () -> () loc(#loc145)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc130)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc147)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.return %15 : !s32i loc(#loc205)
  } loc(#loc202)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s04/CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":25:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":45:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":33:9)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":33:24)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":40:9)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":40:24)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":27:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":27:12)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":28:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":28:25)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":29:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":29:25)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":31:12)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":31:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":32:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":38:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":33:23)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":35:24)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":35:31)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":35:36)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":35:47)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":35:48)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":35:9)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":36:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":36:37)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":36:13)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":36:21)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":36:27)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":36:28)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":36:34)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":36:33)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":37:21)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":37:10)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":37:9)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":39:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":44:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":40:23)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":43:16)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":25:6)
#loc46 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc47 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":52:1)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":71:1)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":60:9)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":60:24)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":66:9)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":66:24)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":54:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":54:12)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":55:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":55:25)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":56:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":56:25)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":58:12)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":58:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":59:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":64:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":60:23)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":62:16)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":62:20)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":52:13)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":62:9)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":63:21)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":63:10)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":63:9)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":65:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":70:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":66:23)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":69:16)
#loc76 = loc("/usr/include/stdlib.h":687:1)
#loc77 = loc("/usr/include/stdlib.h":687:32)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":74:1)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":93:1)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":82:9)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":82:24)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":89:9)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":89:24)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":76:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":76:12)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":77:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":77:25)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":78:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":78:25)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":80:12)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":80:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":81:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":87:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":82:23)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":84:24)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":84:31)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":84:36)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":84:47)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":84:48)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":84:9)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":85:9)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":85:37)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":85:13)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":85:21)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":85:27)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":85:28)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":85:34)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":85:33)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":86:21)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":86:10)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":86:9)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":88:5)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":92:5)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":89:23)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":91:9)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":91:14)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":95:1)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":99:1)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":97:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":98:5)
#loc121 = loc("/usr/include/stdlib.h":575:1)
#loc122 = loc("/usr/include/stdlib.h":575:41)
#loc123 = loc("/usr/include/time.h":76:1)
#loc124 = loc("/usr/include/time.h":76:38)
#loc125 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc126 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":118:15)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":120:15)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":123:15)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":125:15)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":113:1)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":128:1)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":114:1)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":116:27)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":116:22)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":116:5)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":118:5)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":119:5)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":120:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":123:5)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":124:5)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":125:5)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":127:12)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_long_calloc_32.cpp":127:5)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc11, #loc12])
#loc155 = loc(fused[#loc13, #loc14])
#loc156 = loc(fused[#loc15, #loc16])
#loc157 = loc(fused[#loc17, #loc18])
#loc158 = loc(fused[#loc20, #loc19])
#loc159 = loc(fused[#loc21, #loc22])
#loc160 = loc(fused[#loc26, #loc27])
#loc161 = loc(fused[#loc24, #loc28])
#loc162 = loc(fused[#loc29, #loc28])
#loc163 = loc(fused[#loc30, #loc31])
#loc164 = loc(fused[#loc32, #loc33])
#loc165 = loc(fused[#loc34, #loc31])
#loc166 = loc(fused[#loc40, #loc38])
#loc167 = loc(fused[#loc41, #loc42])
#loc168 = loc(fused[#loc46, #loc47])
#loc169 = loc(fused[#loc48, #loc49])
#loc170 = loc(fused[#loc50, #loc51])
#loc171 = loc(fused[#loc52, #loc53])
#loc172 = loc(fused[#loc54, #loc55])
#loc173 = loc(fused[#loc56, #loc57])
#loc174 = loc(fused[#loc58, #loc59])
#loc175 = loc(fused[#loc61, #loc60])
#loc176 = loc(fused[#loc62, #loc63])
#loc177 = loc(fused[#loc65, #loc66])
#loc178 = loc(fused[#loc68, #loc66])
#loc179 = loc(fused[#loc71, #loc69])
#loc180 = loc(fused[#loc72, #loc73])
#loc181 = loc(fused[#loc76, #loc77])
#loc182 = loc(fused[#loc78, #loc79])
#loc183 = loc(fused[#loc80, #loc81])
#loc184 = loc(fused[#loc82, #loc83])
#loc185 = loc(fused[#loc84, #loc85])
#loc186 = loc(fused[#loc86, #loc87])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc91, #loc90])
#loc189 = loc(fused[#loc92, #loc93])
#loc190 = loc(fused[#loc97, #loc98])
#loc191 = loc(fused[#loc95, #loc99])
#loc192 = loc(fused[#loc100, #loc99])
#loc193 = loc(fused[#loc101, #loc102])
#loc194 = loc(fused[#loc103, #loc104])
#loc195 = loc(fused[#loc105, #loc102])
#loc196 = loc(fused[#loc111, #loc109])
#loc197 = loc(fused[#loc112, #loc113])
#loc198 = loc(fused[#loc117, #loc118])
#loc199 = loc(fused[#loc121, #loc122])
#loc200 = loc(fused[#loc123, #loc124])
#loc201 = loc(fused[#loc125, #loc126])
#loc202 = loc(fused[#loc131, #loc132])
#loc205 = loc(fused[#loc148, #loc147])
