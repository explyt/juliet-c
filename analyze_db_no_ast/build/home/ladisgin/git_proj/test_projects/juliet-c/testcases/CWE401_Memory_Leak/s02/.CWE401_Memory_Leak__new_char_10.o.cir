!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_10.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc149)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc150)
  cir.func private  @printHexCharLine(!s8i) loc(#loc151)
  cir.func  @_ZN31CWE401_Memory_Leak__new_char_103badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.scope {
      %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
      cir.if %4 {
        %5 = cir.const #cir.int<1> : !u64i loc(#loc157)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc19)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
        %8 = cir.const #cir.int<65> : !s8i loc(#loc21)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
        cir.store %8, %9 : !s8i, !cir.ptr<!s8i> loc(#loc159)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
        %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc25)
        cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc26)
      } loc(#loc156)
    } loc(#loc155)
    cir.scope {
      %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc29)
      cir.if %4 {
      } loc(#loc161)
    } loc(#loc160)
    cir.return loc(#loc8)
  } loc(#loc152)
  cir.global "private"  external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc162)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr1) loc(#loc164)
  cir.func internal private  @_ZN31CWE401_Memory_Leak__new_char_10L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.scope {
      %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc46)
      cir.if %4 {
        %5 = cir.const #cir.int<1> : !u64i loc(#loc170)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc50)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
        %8 = cir.const #cir.int<65> : !s8i loc(#loc52)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        cir.store %8, %9 : !s8i, !cir.ptr<!s8i> loc(#loc172)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc56)
        cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc57)
      } loc(#loc169)
    } loc(#loc168)
    cir.scope {
      %2 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc162)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc60)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc60)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc64)
      } else {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc50)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc50)
      } loc(#loc174)
    } loc(#loc173)
    cir.return loc(#loc39)
  } loc(#loc165)
  cir.func internal private  @_ZN31CWE401_Memory_Leak__new_char_10L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc70)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.scope {
      %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc74)
      cir.if %4 {
        %5 = cir.const #cir.int<1> : !u64i loc(#loc180)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc78)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
        %8 = cir.const #cir.int<65> : !s8i loc(#loc80)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
        cir.store %8, %9 : !s8i, !cir.ptr<!s8i> loc(#loc182)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
        %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc84)
        cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc85)
      } loc(#loc179)
    } loc(#loc178)
    cir.scope {
      %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc88)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc78)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc78)
      } loc(#loc184)
    } loc(#loc183)
    cir.return loc(#loc67)
  } loc(#loc175)
  cir.func internal private  @_ZN31CWE401_Memory_Leak__new_char_10L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc95)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.scope {
      %2 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc162)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc99)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc104)
      } else {
        %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc190)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
        %6 = cir.const #cir.int<65> : !s8i loc(#loc109)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        cir.store %6, %7 : !s8i, !cir.ptr<!s8i> loc(#loc192)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
        %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc113)
        cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc114)
      } loc(#loc189)
    } loc(#loc188)
    cir.scope {
      %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc117)
      cir.if %4 {
      } loc(#loc194)
    } loc(#loc193)
    cir.return loc(#loc92)
  } loc(#loc185)
  cir.func internal private  @_ZN31CWE401_Memory_Leak__new_char_10L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc123)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.scope {
      %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc127)
      cir.if %4 {
        %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc200)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
        %6 = cir.const #cir.int<65> : !s8i loc(#loc133)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
        cir.store %6, %7 : !s8i, !cir.ptr<!s8i> loc(#loc202)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
        %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc137)
        cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc138)
      } loc(#loc199)
    } loc(#loc198)
    cir.scope {
      %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc141)
      cir.if %4 {
      } loc(#loc204)
    } loc(#loc203)
    cir.return loc(#loc120)
  } loc(#loc195)
  cir.func  @_ZN31CWE401_Memory_Leak__new_char_104goodEv() extra(#fn_attr) {
    cir.call @_ZN31CWE401_Memory_Leak__new_char_10L8goodB2G1Ev() : () -> () loc(#loc145)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_10L8goodB2G2Ev() : () -> () loc(#loc146)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_10L8goodG2B1Ev() : () -> () loc(#loc147)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_10L8goodG2B2Ev() : () -> () loc(#loc148)
    cir.return loc(#loc144)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_10.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc7 = loc("CWE401_Memory_Leak__new_char_10.cpp":29:1)
#loc8 = loc("CWE401_Memory_Leak__new_char_10.cpp":46:1)
#loc9 = loc("CWE401_Memory_Leak__new_char_10.cpp":31:5)
#loc10 = loc("CWE401_Memory_Leak__new_char_10.cpp":31:12)
#loc11 = loc("CWE401_Memory_Leak__new_char_10.cpp":32:12)
#loc12 = loc("CWE401_Memory_Leak__new_char_10.cpp":32:5)
#loc13 = loc("CWE401_Memory_Leak__new_char_10.cpp":33:5)
#loc14 = loc("CWE401_Memory_Leak__new_char_10.cpp":40:5)
#loc15 = loc("CWE401_Memory_Leak__new_char_10.cpp":33:8)
#loc16 = loc("CWE401_Memory_Leak__new_char_10.cpp":34:5)
#loc17 = loc("CWE401_Memory_Leak__new_char_10.cpp":36:16)
#loc18 = loc("CWE401_Memory_Leak__new_char_10.cpp":36:20)
#loc19 = loc("CWE401_Memory_Leak__new_char_10.cpp":29:6)
#loc20 = loc("CWE401_Memory_Leak__new_char_10.cpp":36:9)
#loc21 = loc("CWE401_Memory_Leak__new_char_10.cpp":38:17)
#loc22 = loc("CWE401_Memory_Leak__new_char_10.cpp":38:10)
#loc23 = loc("CWE401_Memory_Leak__new_char_10.cpp":38:9)
#loc24 = loc("CWE401_Memory_Leak__new_char_10.cpp":39:27)
#loc25 = loc("CWE401_Memory_Leak__new_char_10.cpp":39:26)
#loc26 = loc("CWE401_Memory_Leak__new_char_10.cpp":39:9)
#loc27 = loc("CWE401_Memory_Leak__new_char_10.cpp":41:5)
#loc28 = loc("CWE401_Memory_Leak__new_char_10.cpp":45:5)
#loc29 = loc("CWE401_Memory_Leak__new_char_10.cpp":41:8)
#loc30 = loc("CWE401_Memory_Leak__new_char_10.cpp":42:5)
#loc31 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc32 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE401_Memory_Leak__new_char_10.cpp":68:19)
#loc36 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc38 = loc("CWE401_Memory_Leak__new_char_10.cpp":53:1)
#loc39 = loc("CWE401_Memory_Leak__new_char_10.cpp":75:1)
#loc40 = loc("CWE401_Memory_Leak__new_char_10.cpp":55:5)
#loc41 = loc("CWE401_Memory_Leak__new_char_10.cpp":55:12)
#loc42 = loc("CWE401_Memory_Leak__new_char_10.cpp":56:12)
#loc43 = loc("CWE401_Memory_Leak__new_char_10.cpp":56:5)
#loc44 = loc("CWE401_Memory_Leak__new_char_10.cpp":57:5)
#loc45 = loc("CWE401_Memory_Leak__new_char_10.cpp":64:5)
#loc46 = loc("CWE401_Memory_Leak__new_char_10.cpp":57:8)
#loc47 = loc("CWE401_Memory_Leak__new_char_10.cpp":58:5)
#loc48 = loc("CWE401_Memory_Leak__new_char_10.cpp":60:16)
#loc49 = loc("CWE401_Memory_Leak__new_char_10.cpp":60:20)
#loc50 = loc("CWE401_Memory_Leak__new_char_10.cpp":53:13)
#loc51 = loc("CWE401_Memory_Leak__new_char_10.cpp":60:9)
#loc52 = loc("CWE401_Memory_Leak__new_char_10.cpp":62:17)
#loc53 = loc("CWE401_Memory_Leak__new_char_10.cpp":62:10)
#loc54 = loc("CWE401_Memory_Leak__new_char_10.cpp":62:9)
#loc55 = loc("CWE401_Memory_Leak__new_char_10.cpp":63:27)
#loc56 = loc("CWE401_Memory_Leak__new_char_10.cpp":63:26)
#loc57 = loc("CWE401_Memory_Leak__new_char_10.cpp":63:9)
#loc58 = loc("CWE401_Memory_Leak__new_char_10.cpp":65:5)
#loc59 = loc("CWE401_Memory_Leak__new_char_10.cpp":74:5)
#loc60 = loc("CWE401_Memory_Leak__new_char_10.cpp":65:8)
#loc61 = loc("CWE401_Memory_Leak__new_char_10.cpp":66:5)
#loc62 = loc("CWE401_Memory_Leak__new_char_10.cpp":69:5)
#loc63 = loc("CWE401_Memory_Leak__new_char_10.cpp":71:5)
#loc64 = loc("CWE401_Memory_Leak__new_char_10.cpp":68:9)
#loc65 = loc("CWE401_Memory_Leak__new_char_10.cpp":73:16)
#loc66 = loc("CWE401_Memory_Leak__new_char_10.cpp":78:1)
#loc67 = loc("CWE401_Memory_Leak__new_char_10.cpp":95:1)
#loc68 = loc("CWE401_Memory_Leak__new_char_10.cpp":80:5)
#loc69 = loc("CWE401_Memory_Leak__new_char_10.cpp":80:12)
#loc70 = loc("CWE401_Memory_Leak__new_char_10.cpp":81:12)
#loc71 = loc("CWE401_Memory_Leak__new_char_10.cpp":81:5)
#loc72 = loc("CWE401_Memory_Leak__new_char_10.cpp":82:5)
#loc73 = loc("CWE401_Memory_Leak__new_char_10.cpp":89:5)
#loc74 = loc("CWE401_Memory_Leak__new_char_10.cpp":82:8)
#loc75 = loc("CWE401_Memory_Leak__new_char_10.cpp":83:5)
#loc76 = loc("CWE401_Memory_Leak__new_char_10.cpp":85:16)
#loc77 = loc("CWE401_Memory_Leak__new_char_10.cpp":85:20)
#loc78 = loc("CWE401_Memory_Leak__new_char_10.cpp":78:13)
#loc79 = loc("CWE401_Memory_Leak__new_char_10.cpp":85:9)
#loc80 = loc("CWE401_Memory_Leak__new_char_10.cpp":87:17)
#loc81 = loc("CWE401_Memory_Leak__new_char_10.cpp":87:10)
#loc82 = loc("CWE401_Memory_Leak__new_char_10.cpp":87:9)
#loc83 = loc("CWE401_Memory_Leak__new_char_10.cpp":88:27)
#loc84 = loc("CWE401_Memory_Leak__new_char_10.cpp":88:26)
#loc85 = loc("CWE401_Memory_Leak__new_char_10.cpp":88:9)
#loc86 = loc("CWE401_Memory_Leak__new_char_10.cpp":90:5)
#loc87 = loc("CWE401_Memory_Leak__new_char_10.cpp":94:5)
#loc88 = loc("CWE401_Memory_Leak__new_char_10.cpp":90:8)
#loc89 = loc("CWE401_Memory_Leak__new_char_10.cpp":91:5)
#loc90 = loc("CWE401_Memory_Leak__new_char_10.cpp":93:16)
#loc91 = loc("CWE401_Memory_Leak__new_char_10.cpp":98:1)
#loc92 = loc("CWE401_Memory_Leak__new_char_10.cpp":121:1)
#loc93 = loc("CWE401_Memory_Leak__new_char_10.cpp":100:5)
#loc94 = loc("CWE401_Memory_Leak__new_char_10.cpp":100:12)
#loc95 = loc("CWE401_Memory_Leak__new_char_10.cpp":101:12)
#loc96 = loc("CWE401_Memory_Leak__new_char_10.cpp":101:5)
#loc97 = loc("CWE401_Memory_Leak__new_char_10.cpp":102:5)
#loc98 = loc("CWE401_Memory_Leak__new_char_10.cpp":115:5)
#loc99 = loc("CWE401_Memory_Leak__new_char_10.cpp":102:8)
#loc100 = loc("CWE401_Memory_Leak__new_char_10.cpp":103:5)
#loc101 = loc("CWE401_Memory_Leak__new_char_10.cpp":106:5)
#loc102 = loc("CWE401_Memory_Leak__new_char_10.cpp":108:5)
#loc103 = loc("CWE401_Memory_Leak__new_char_10.cpp":105:19)
#loc104 = loc("CWE401_Memory_Leak__new_char_10.cpp":105:9)
#loc105 = loc("CWE401_Memory_Leak__new_char_10.cpp":110:9)
#loc106 = loc("CWE401_Memory_Leak__new_char_10.cpp":110:14)
#loc107 = loc("CWE401_Memory_Leak__new_char_10.cpp":111:9)
#loc108 = loc("CWE401_Memory_Leak__new_char_10.cpp":111:17)
#loc109 = loc("CWE401_Memory_Leak__new_char_10.cpp":113:17)
#loc110 = loc("CWE401_Memory_Leak__new_char_10.cpp":113:10)
#loc111 = loc("CWE401_Memory_Leak__new_char_10.cpp":113:9)
#loc112 = loc("CWE401_Memory_Leak__new_char_10.cpp":114:27)
#loc113 = loc("CWE401_Memory_Leak__new_char_10.cpp":114:26)
#loc114 = loc("CWE401_Memory_Leak__new_char_10.cpp":114:9)
#loc115 = loc("CWE401_Memory_Leak__new_char_10.cpp":116:5)
#loc116 = loc("CWE401_Memory_Leak__new_char_10.cpp":120:5)
#loc117 = loc("CWE401_Memory_Leak__new_char_10.cpp":116:8)
#loc118 = loc("CWE401_Memory_Leak__new_char_10.cpp":117:5)
#loc119 = loc("CWE401_Memory_Leak__new_char_10.cpp":124:1)
#loc120 = loc("CWE401_Memory_Leak__new_char_10.cpp":142:1)
#loc121 = loc("CWE401_Memory_Leak__new_char_10.cpp":126:5)
#loc122 = loc("CWE401_Memory_Leak__new_char_10.cpp":126:12)
#loc123 = loc("CWE401_Memory_Leak__new_char_10.cpp":127:12)
#loc124 = loc("CWE401_Memory_Leak__new_char_10.cpp":127:5)
#loc125 = loc("CWE401_Memory_Leak__new_char_10.cpp":128:5)
#loc126 = loc("CWE401_Memory_Leak__new_char_10.cpp":136:5)
#loc127 = loc("CWE401_Memory_Leak__new_char_10.cpp":128:8)
#loc128 = loc("CWE401_Memory_Leak__new_char_10.cpp":129:5)
#loc129 = loc("CWE401_Memory_Leak__new_char_10.cpp":131:9)
#loc130 = loc("CWE401_Memory_Leak__new_char_10.cpp":131:14)
#loc131 = loc("CWE401_Memory_Leak__new_char_10.cpp":132:9)
#loc132 = loc("CWE401_Memory_Leak__new_char_10.cpp":132:17)
#loc133 = loc("CWE401_Memory_Leak__new_char_10.cpp":134:17)
#loc134 = loc("CWE401_Memory_Leak__new_char_10.cpp":134:10)
#loc135 = loc("CWE401_Memory_Leak__new_char_10.cpp":134:9)
#loc136 = loc("CWE401_Memory_Leak__new_char_10.cpp":135:27)
#loc137 = loc("CWE401_Memory_Leak__new_char_10.cpp":135:26)
#loc138 = loc("CWE401_Memory_Leak__new_char_10.cpp":135:9)
#loc139 = loc("CWE401_Memory_Leak__new_char_10.cpp":137:5)
#loc140 = loc("CWE401_Memory_Leak__new_char_10.cpp":141:5)
#loc141 = loc("CWE401_Memory_Leak__new_char_10.cpp":137:8)
#loc142 = loc("CWE401_Memory_Leak__new_char_10.cpp":138:5)
#loc143 = loc("CWE401_Memory_Leak__new_char_10.cpp":144:1)
#loc144 = loc("CWE401_Memory_Leak__new_char_10.cpp":150:1)
#loc145 = loc("CWE401_Memory_Leak__new_char_10.cpp":146:5)
#loc146 = loc("CWE401_Memory_Leak__new_char_10.cpp":147:5)
#loc147 = loc("CWE401_Memory_Leak__new_char_10.cpp":148:5)
#loc148 = loc("CWE401_Memory_Leak__new_char_10.cpp":149:5)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc12, #loc11])
#loc155 = loc(fused[#loc13, #loc14])
#loc156 = loc(fused[#loc16, #loc14])
#loc157 = loc(fused[#loc17, #loc18])
#loc158 = loc(fused[#loc20, #loc18])
#loc159 = loc(fused[#loc23, #loc21])
#loc160 = loc(fused[#loc27, #loc28])
#loc161 = loc(fused[#loc30, #loc28])
#loc162 = loc(fused[#loc31, #loc32])
#loc163 = loc(fused[#loc33, #loc34])
#loc164 = loc(fused[#loc36, #loc37])
#loc165 = loc(fused[#loc38, #loc39])
#loc166 = loc(fused[#loc40, #loc41])
#loc167 = loc(fused[#loc43, #loc42])
#loc168 = loc(fused[#loc44, #loc45])
#loc169 = loc(fused[#loc47, #loc45])
#loc170 = loc(fused[#loc48, #loc49])
#loc171 = loc(fused[#loc51, #loc49])
#loc172 = loc(fused[#loc54, #loc52])
#loc173 = loc(fused[#loc58, #loc59])
#loc174 = loc(fused[#loc61, #loc62, #loc63, #loc59])
#loc175 = loc(fused[#loc66, #loc67])
#loc176 = loc(fused[#loc68, #loc69])
#loc177 = loc(fused[#loc71, #loc70])
#loc178 = loc(fused[#loc72, #loc73])
#loc179 = loc(fused[#loc75, #loc73])
#loc180 = loc(fused[#loc76, #loc77])
#loc181 = loc(fused[#loc79, #loc77])
#loc182 = loc(fused[#loc82, #loc80])
#loc183 = loc(fused[#loc86, #loc87])
#loc184 = loc(fused[#loc89, #loc87])
#loc185 = loc(fused[#loc91, #loc92])
#loc186 = loc(fused[#loc93, #loc94])
#loc187 = loc(fused[#loc96, #loc95])
#loc188 = loc(fused[#loc97, #loc98])
#loc189 = loc(fused[#loc100, #loc101, #loc102, #loc98])
#loc190 = loc(fused[#loc105, #loc106])
#loc191 = loc(fused[#loc107, #loc108])
#loc192 = loc(fused[#loc111, #loc109])
#loc193 = loc(fused[#loc115, #loc116])
#loc194 = loc(fused[#loc118, #loc116])
#loc195 = loc(fused[#loc119, #loc120])
#loc196 = loc(fused[#loc121, #loc122])
#loc197 = loc(fused[#loc124, #loc123])
#loc198 = loc(fused[#loc125, #loc126])
#loc199 = loc(fused[#loc128, #loc126])
#loc200 = loc(fused[#loc129, #loc130])
#loc201 = loc(fused[#loc131, #loc132])
#loc202 = loc(fused[#loc135, #loc133])
#loc203 = loc(fused[#loc139, #loc140])
#loc204 = loc(fused[#loc142, #loc140])
#loc205 = loc(fused[#loc143, #loc144])
