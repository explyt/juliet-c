!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":26:21)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":26:27)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":54:25)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":54:31)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":93:10)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":93:14)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":93:20)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":93:32)
#loc99 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc35, #loc36])
#loc125 = loc(fused[#loc80, #loc81])
#loc126 = loc(fused[#loc82, #loc83])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc96)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc97)
  cir.func internal private @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44L7badSinkEPi(%arg0: !cir.ptr<!s32i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc99)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    %1 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc10)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.call @printIntLine(%2) : (!s32i) -> () loc(#loc12)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc13)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc14)
    cir.return loc(#loc6)
  } loc(#loc98)
  cir.func @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_int_declare_443badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc102)
    %2 = cir.get_global @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44L7badSinkEPi : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc20)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>> loc(#loc102)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc21)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc103)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataBuffer"] {alignment = 4 : i64} loc(#loc105)
      %7 = cir.const #cir.int<5> : !s32i loc(#loc27)
      cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc106)
      cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc107)
    } loc(#loc104)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc31)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!s32i>) -> () loc(#loc31)
    cir.return loc(#loc16)
  } loc(#loc100)
  cir.func internal private @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44L11goodG2BSinkEPi(%arg0: !cir.ptr<!s32i> loc(fused[#loc35, #loc36])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc109)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc37)
    %1 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.call @printIntLine(%2) : (!s32i) -> () loc(#loc40)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc41)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc42)
    cir.return loc(#loc34)
  } loc(#loc108)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc110)
  cir.func internal private @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc113)
    %2 = cir.get_global @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44L11goodG2BSinkEPi : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc50)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>> loc(#loc113)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc51)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc114)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc116)
      %7 = cir.const #cir.int<4> : !u64i loc(#loc117)
      %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc116)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc117)
      cir.store %9, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc116)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc58)
      %11 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
      cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc118)
      %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
      cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
    } loc(#loc115)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc63)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!s32i>) -> () loc(#loc63)
    cir.return loc(#loc46)
  } loc(#loc111)
  cir.func @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_int_declare_444goodEv() extra(#fn_attr1) {
    cir.call @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44L7goodG2BEv() : () -> () loc(#loc67)
    cir.return loc(#loc66)
  } loc(#loc120)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc121)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc122)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc77)
  cir.func @main(%arg0: !s32i loc(fused[#loc80, #loc81]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc82, #loc83])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc126)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc79)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc84)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc85)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc86)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc86)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc87)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc74)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.call @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_int_declare_444goodEv() : () -> () loc(#loc89)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc75)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc76)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.call @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_int_declare_443badEv() : () -> () loc(#loc92)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc77)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.return %15 : !s32i loc(#loc127)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":26:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":31:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":27:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":28:19)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":28:18)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":28:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":30:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":26:13)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":33:1)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":47:1)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":35:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":35:11)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":37:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":37:31)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":38:12)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":38:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":39:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":44:5)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":41:9)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":41:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":42:22)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":42:9)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":43:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":43:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":46:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":46:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":54:1)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":59:1)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":55:1)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":56:19)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":56:18)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":56:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":58:12)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":54:13)
#loc43 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc44 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":61:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":73:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":63:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":63:11)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":64:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":64:31)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":65:12)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":65:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":66:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":71:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":68:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":68:32)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":68:28)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":69:23)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":69:10)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":69:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":70:16)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":70:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":72:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":72:13)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":75:1)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":78:1)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":77:5)
#loc68 = loc("/usr/include/stdlib.h":575:1)
#loc69 = loc("/usr/include/stdlib.h":575:41)
#loc70 = loc("/usr/include/time.h":76:1)
#loc71 = loc("/usr/include/time.h":76:38)
#loc72 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":98:15)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":100:15)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":103:15)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":105:15)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":93:1)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":108:1)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":94:1)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":96:27)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":96:22)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":96:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":98:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":99:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":100:5)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":103:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":104:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":105:5)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":107:12)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_declare_44.cpp":107:5)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc5, #loc6])
#loc100 = loc(fused[#loc15, #loc16])
#loc101 = loc(fused[#loc17, #loc18])
#loc102 = loc(fused[#loc19, #loc20])
#loc103 = loc(fused[#loc22, #loc21])
#loc104 = loc(fused[#loc23, #loc24])
#loc105 = loc(fused[#loc25, #loc26])
#loc106 = loc(fused[#loc28, #loc27])
#loc107 = loc(fused[#loc29, #loc30])
#loc108 = loc(fused[#loc33, #loc34])
#loc110 = loc(fused[#loc43, #loc44])
#loc111 = loc(fused[#loc45, #loc46])
#loc112 = loc(fused[#loc47, #loc48])
#loc113 = loc(fused[#loc49, #loc50])
#loc114 = loc(fused[#loc52, #loc51])
#loc115 = loc(fused[#loc53, #loc54])
#loc116 = loc(fused[#loc55, #loc56])
#loc117 = loc(fused[#loc57, #loc56])
#loc118 = loc(fused[#loc60, #loc58])
#loc119 = loc(fused[#loc62, #loc61])
#loc120 = loc(fused[#loc65, #loc66])
#loc121 = loc(fused[#loc68, #loc69])
#loc122 = loc(fused[#loc70, #loc71])
#loc123 = loc(fused[#loc72, #loc73])
#loc124 = loc(fused[#loc78, #loc79])
#loc127 = loc(fused[#loc95, #loc94])
