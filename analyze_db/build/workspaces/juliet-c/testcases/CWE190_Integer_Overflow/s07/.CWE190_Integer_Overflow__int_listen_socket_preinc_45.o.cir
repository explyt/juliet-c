!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:44)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_listen_socket_preinc_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc338)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc339)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc340)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc341)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc342)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc343)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc344)
  cir.func private @close(!s32i) -> !s32i loc(#loc345)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc346)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_preinc_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc348)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc349)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc350)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc351)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc352)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc353)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.br ^bb1 loc(#loc355)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc26)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc28)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.br ^bb2 loc(#loc356)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc356)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc39)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc357)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc44)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.br ^bb6 loc(#loc359)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc51)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc360)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc361)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc53)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc49)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc362)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc363)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc364)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc61)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc365)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc64)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc366)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc68)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc68)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc69)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc367)
    cir.br ^bb10 loc(#loc368)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc369)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc370)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc370)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc80)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc81)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc371)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc372)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc83)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc74)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc373)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc87)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc88)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc89)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc374)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc375)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc91)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc85)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc93)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc94)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc95)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    cir.br ^bb18 loc(#loc377)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc101)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc378)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc379)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc103)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc99)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    %60 = cir.const #cir.int<3> : !s32i loc(#loc106)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc106)
    %62 = cir.const #cir.int<4> : !u64i loc(#loc106)
    %63 = cir.binop(mul, %61, %62) : !u64i loc(#loc106)
    %64 = cir.const #cir.int<2> : !s32i loc(#loc106)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc106)
    %66 = cir.binop(add, %63, %65) : !u64i loc(#loc106)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc107)
    %69 = cir.binop(sub, %66, %68) : !u64i loc(#loc380)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %71 = cir.call @recv(%57, %59, %69, %70) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
    %72 = cir.cast(integral, %71 : !s64i), !s32i loc(#loc109)
    cir.store %72, %0 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    cir.br ^bb22 loc(#loc382)
  ^bb22:  // pred: ^bb21
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc115)
    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc383)
    cir.brcond %76 ^bb23, ^bb24 loc(#loc116)
  ^bb23:  // pred: ^bb22
    %77 = cir.const #true loc(#loc116)
    cir.br ^bb29(%77 : !cir.bool) loc(#loc116)
  ^bb24:  // pred: ^bb22
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %79 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc384)
    cir.brcond %80 ^bb25, ^bb26 loc(#loc116)
  ^bb25:  // pred: ^bb24
    %81 = cir.const #true loc(#loc116)
    cir.br ^bb27(%81 : !cir.bool) loc(#loc116)
  ^bb26:  // pred: ^bb24
    %82 = cir.const #false loc(#loc116)
    cir.br ^bb27(%82 : !cir.bool) loc(#loc116)
  ^bb27(%83: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc116)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%83 : !cir.bool) loc(#loc116)
  ^bb29(%84: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc116)
  ^bb30:  // pred: ^bb29
    cir.brcond %84 ^bb31, ^bb32 loc(#loc385)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc120)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc113)
  ^bb33:  // pred: ^bb32
    %85 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %86 = cir.cast(integral, %85 : !s32i), !s8i loc(#loc121)
    %87 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %88 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
    %89 = cir.ptr_stride(%88 : !cir.ptr<!s8i>, %87 : !s32i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %86, %89 : !s8i, !cir.ptr<!s8i> loc(#loc386)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
    %91 = cir.call @atoi(%90) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc125)
    cir.store %91, %5 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    cir.br ^bb34 loc(#loc41)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc38)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc38)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc388)
  ^bb37:  // pred: ^bb36
    %92 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %93 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %94 = cir.unary(minus, %93) nsw : !s32i, !s32i loc(#loc131)
    %95 = cir.cmp(ne, %92, %94) : !s32i, !cir.bool loc(#loc389)
    cir.brcond %95 ^bb38, ^bb39 loc(#loc390)
  ^bb38:  // pred: ^bb37
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %97 = cir.call @close(%96) : (!s32i) -> !s32i loc(#loc134)
    cir.br ^bb39 loc(#loc129)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc129)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc391)
  ^bb41:  // pred: ^bb40
    %98 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %100 = cir.unary(minus, %99) nsw : !s32i, !s32i loc(#loc138)
    %101 = cir.cmp(ne, %98, %100) : !s32i, !cir.bool loc(#loc392)
    cir.brcond %101 ^bb42, ^bb43 loc(#loc393)
  ^bb42:  // pred: ^bb41
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %103 = cir.call @close(%102) : (!s32i) -> !s32i loc(#loc141)
    cir.br ^bb43 loc(#loc136)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc136)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc36)
  ^bb45:  // pred: ^bb44
    %104 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %105 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData : !cir.ptr<!s32i> loc(#loc346)
    cir.store %104, %105 : !s32i, !cir.ptr<!s32i> loc(#loc394)
    %106 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc395)
    cir.call %106() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc144)
    cir.return loc(#loc20)
  } loc(#loc347)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_preinc_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc397)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc148)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc398)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc150)
    cir.return loc(#loc147)
  } loc(#loc396)
  cir.func private @printIntLine(!s32i) loc(#loc399)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc401)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc402)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData : !cir.ptr<!s32i> loc(#loc346)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc402)
    cir.br ^bb1 loc(#loc403)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc162)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc401)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc165)
    cir.br ^bb2 loc(#loc161)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc155)
  } loc(#loc400)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc405)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc407)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc172)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc174)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData : !cir.ptr<!s32i> loc(#loc405)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    %5 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc411)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc178)
    cir.return loc(#loc169)
  } loc(#loc406)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc413)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc414)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData : !cir.ptr<!s32i> loc(#loc405)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    cir.br ^bb1 loc(#loc415)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc188)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc416)
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc191)
    cir.br ^bb2 loc(#loc187)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc181)
  } loc(#loc412)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc417)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc419)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc420)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc421)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc422)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc423)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc424)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc208)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.br ^bb1 loc(#loc426)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc201)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc421)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc203)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    cir.br ^bb2 loc(#loc427)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc427)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc214)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc214)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc428)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc217)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc219)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc220)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    cir.br ^bb6 loc(#loc430)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc226)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc226)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc431)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc432)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc228)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc224)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc433)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc231)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc434)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc435)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc236)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc236)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc436)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc238)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc238)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc437)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc240)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc240)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc241)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc438)
    cir.br ^bb10 loc(#loc439)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc440)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc441)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc441)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc251)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc252)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc252)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc442)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc443)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc254)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc245)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc444)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc258)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc259)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc260)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc260)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc445)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc446)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc262)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc256)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc264)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc265)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc266)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    cir.br ^bb18 loc(#loc448)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc272)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc449)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc450)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc274)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc270)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc276)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc276)
    %60 = cir.const #cir.int<3> : !s32i loc(#loc277)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc277)
    %62 = cir.const #cir.int<4> : !u64i loc(#loc277)
    %63 = cir.binop(mul, %61, %62) : !u64i loc(#loc277)
    %64 = cir.const #cir.int<2> : !s32i loc(#loc277)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc277)
    %66 = cir.binop(add, %63, %65) : !u64i loc(#loc277)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc278)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc278)
    %69 = cir.binop(sub, %66, %68) : !u64i loc(#loc451)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc279)
    %71 = cir.call @recv(%57, %59, %69, %70) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc280)
    %72 = cir.cast(integral, %71 : !s64i), !s32i loc(#loc280)
    cir.store %72, %0 : !s32i, !cir.ptr<!s32i> loc(#loc452)
    cir.br ^bb22 loc(#loc453)
  ^bb22:  // pred: ^bb21
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc286)
    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc286)
    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc454)
    cir.brcond %76 ^bb23, ^bb24 loc(#loc287)
  ^bb23:  // pred: ^bb22
    %77 = cir.const #true loc(#loc287)
    cir.br ^bb29(%77 : !cir.bool) loc(#loc287)
  ^bb24:  // pred: ^bb22
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %79 = cir.const #cir.int<0> : !s32i loc(#loc289)
    %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc455)
    cir.brcond %80 ^bb25, ^bb26 loc(#loc287)
  ^bb25:  // pred: ^bb24
    %81 = cir.const #true loc(#loc287)
    cir.br ^bb27(%81 : !cir.bool) loc(#loc287)
  ^bb26:  // pred: ^bb24
    %82 = cir.const #false loc(#loc287)
    cir.br ^bb27(%82 : !cir.bool) loc(#loc287)
  ^bb27(%83: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc287)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%83 : !cir.bool) loc(#loc287)
  ^bb29(%84: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc287)
  ^bb30:  // pred: ^bb29
    cir.brcond %84 ^bb31, ^bb32 loc(#loc456)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc291)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc284)
  ^bb33:  // pred: ^bb32
    %85 = cir.const #cir.int<0> : !s32i loc(#loc292)
    %86 = cir.cast(integral, %85 : !s32i), !s8i loc(#loc292)
    %87 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %88 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc294)
    %89 = cir.ptr_stride(%88 : !cir.ptr<!s8i>, %87 : !s32i), !cir.ptr<!s8i> loc(#loc294)
    cir.store %86, %89 : !s8i, !cir.ptr<!s8i> loc(#loc457)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc295)
    %91 = cir.call @atoi(%90) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc296)
    cir.store %91, %5 : !s32i, !cir.ptr<!s32i> loc(#loc458)
    cir.br ^bb34 loc(#loc216)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc213)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc213)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc459)
  ^bb37:  // pred: ^bb36
    %92 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %93 = cir.const #cir.int<1> : !s32i loc(#loc302)
    %94 = cir.unary(minus, %93) nsw : !s32i, !s32i loc(#loc302)
    %95 = cir.cmp(ne, %92, %94) : !s32i, !cir.bool loc(#loc460)
    cir.brcond %95 ^bb38, ^bb39 loc(#loc461)
  ^bb38:  // pred: ^bb37
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    %97 = cir.call @close(%96) : (!s32i) -> !s32i loc(#loc305)
    cir.br ^bb39 loc(#loc300)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc300)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc462)
  ^bb41:  // pred: ^bb40
    %98 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc309)
    %100 = cir.unary(minus, %99) nsw : !s32i, !s32i loc(#loc309)
    %101 = cir.cmp(ne, %98, %100) : !s32i, !cir.bool loc(#loc463)
    cir.brcond %101 ^bb42, ^bb43 loc(#loc464)
  ^bb42:  // pred: ^bb41
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc311)
    %103 = cir.call @close(%102) : (!s32i) -> !s32i loc(#loc312)
    cir.br ^bb43 loc(#loc307)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc307)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc211)
  ^bb45:  // pred: ^bb44
    %104 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    %105 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData : !cir.ptr<!s32i> loc(#loc417)
    cir.store %104, %105 : !s32i, !cir.ptr<!s32i> loc(#loc465)
    %106 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<()>> loc(#loc466)
    cir.call %106() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc315)
    cir.return loc(#loc195)
  } loc(#loc418)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc467)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc319)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc469)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc470)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData : !cir.ptr<!s32i> loc(#loc417)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc325)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc470)
    cir.br ^bb1 loc(#loc471)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc328)
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc329)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc472)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc473)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc333)
    %8 = cir.unary(inc, %7) nsw : !s32i, !s32i loc(#loc333)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc474)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc469)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc335)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc336)
    cir.br ^bb4 loc(#loc331)
  ^bb3:  // pred: ^bb1
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc319)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc319)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc337)
    cir.br ^bb4 loc(#loc327)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc327)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc321)
  } loc(#loc468)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":42:1)
#loc18 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":42:12)
#loc19 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":59:1)
#loc20 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":135:1)
#loc21 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":69:9)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":69:13)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":70:9)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":70:28)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":71:9)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":71:31)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":72:9)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":72:31)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":73:9)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":73:41)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":61:5)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":61:9)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":63:12)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":63:5)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":64:5)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":132:5)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":74:9)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":117:17)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":117:16)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":75:9)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":116:9)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:35)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:44)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:57)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:28)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:13)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:68)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":85:13)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":88:13)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":85:17)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":85:33)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":86:13)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":87:17)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:20)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:21)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:30)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:33)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:47)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:13)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:48)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":90:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":90:13)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":91:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":91:13)
#loc68 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":92:38)
#loc69 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":92:32)
#loc70 = loc("/usr/include/netinet/in.h":250:15)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":92:13)
#loc72 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":92:46)
#loc73 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:13)
#loc74 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":96:13)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:22)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:54)
#loc77 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:55)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:64)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:78)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:17)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:84)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":94:13)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":95:17)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":97:13)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":100:13)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":97:24)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":97:38)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":97:17)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":97:57)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":98:13)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":99:17)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:35)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:49)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:55)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:28)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:13)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:59)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":102:13)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":105:13)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":102:17)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":102:33)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":103:13)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":104:17)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:31)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:45)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:58)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:76)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:79)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:26)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:13)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:80)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:13)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":111:13)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:17)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:31)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:47)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:61)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":109:13)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":110:17)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":113:39)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":113:25)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":113:13)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":115:25)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":115:20)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":115:13)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":115:36)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":118:9)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":121:9)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":118:13)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":118:29)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":119:9)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":120:26)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":120:13)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":122:9)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":125:9)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":122:13)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":122:29)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":123:9)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":124:26)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":124:13)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":133:68)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":133:5)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":134:5)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":134:13)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":259:1)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":263:1)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":261:5)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":261:13)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":262:5)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":262:13)
#loc152 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc153 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":48:1)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":57:1)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":54:9)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":54:22)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":50:5)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":50:16)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":51:5)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":56:5)
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":53:9)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":53:11)
#loc164 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":55:22)
#loc165 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":55:9)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":43:1)
#loc167 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":43:12)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":153:1)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":162:1)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":155:5)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":155:9)
#loc172 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":157:12)
#loc173 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":157:5)
#loc174 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":159:12)
#loc175 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":159:5)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":160:72)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":160:5)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":161:5)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":161:17)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":142:1)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":151:1)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":148:9)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":148:22)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":144:5)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":144:16)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":145:5)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":150:5)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":147:9)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":147:11)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":149:22)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":149:9)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":44:1)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":44:12)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":181:1)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":257:1)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":191:9)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":191:13)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":192:9)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":192:28)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":193:9)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":193:31)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":194:9)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":194:31)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":195:9)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":195:41)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":183:5)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":183:9)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":185:12)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":185:5)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":186:5)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":254:5)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":196:9)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":239:17)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":239:16)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":197:9)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":238:9)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:35)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:44)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:57)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:28)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:13)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:68)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":207:13)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":210:13)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":207:17)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":207:33)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":208:13)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":209:17)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:20)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:21)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:30)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:33)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:47)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:13)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:48)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":212:34)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":212:13)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":213:39)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":213:13)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":214:38)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":214:32)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":214:13)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":214:46)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:13)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":218:13)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:22)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:54)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:55)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:64)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:78)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:17)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:84)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":216:13)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":217:17)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":219:13)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":222:13)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":219:24)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":219:38)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":219:17)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":219:57)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":220:13)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":221:17)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:35)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:49)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:55)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:28)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:13)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:59)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":224:13)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":227:13)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":224:17)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":224:33)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":225:13)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":226:17)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:31)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:45)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:58)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:76)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:79)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:26)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:13)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:80)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:13)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":233:13)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:17)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:31)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:47)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:61)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":231:13)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":232:17)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":235:39)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":235:25)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":235:13)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":237:25)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":237:20)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":237:13)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":237:36)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":240:9)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":243:9)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":240:13)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":240:29)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":241:9)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":242:26)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":242:13)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":244:9)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":247:9)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":244:13)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":244:29)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":245:9)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":246:26)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":246:13)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":255:72)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":255:5)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":256:5)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":256:17)
#loc317 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc318 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":177:19)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":165:1)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":179:1)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":172:9)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":172:22)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":167:5)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":167:16)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":169:5)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":178:5)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":169:9)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":169:16)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":170:5)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":174:5)
#loc332 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":176:5)
#loc333 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":171:9)
#loc334 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":171:11)
#loc335 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":173:22)
#loc336 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":173:9)
#loc337 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":177:9)
#loc338 = loc(fused[#loc1, #loc2])
#loc339 = loc(fused[#loc3, #loc4])
#loc340 = loc(fused[#loc5, #loc6])
#loc341 = loc(fused[#loc7, #loc8])
#loc342 = loc(fused[#loc9, #loc10])
#loc343 = loc(fused[#loc11, #loc12])
#loc344 = loc(fused[#loc13, #loc14])
#loc345 = loc(fused[#loc15, #loc16])
#loc346 = loc(fused[#loc17, #loc18])
#loc347 = loc(fused[#loc19, #loc20])
#loc348 = loc(fused[#loc21, #loc22])
#loc349 = loc(fused[#loc23, #loc24])
#loc350 = loc(fused[#loc25, #loc26])
#loc351 = loc(fused[#loc27, #loc28])
#loc352 = loc(fused[#loc29, #loc30])
#loc353 = loc(fused[#loc31, #loc32])
#loc354 = loc(fused[#loc34, #loc33])
#loc355 = loc(fused[#loc35, #loc36])
#loc356 = loc(fused[#loc37, #loc38])
#loc357 = loc(fused[#loc40, #loc41])
#loc358 = loc(fused[#loc46, #loc47])
#loc359 = loc(fused[#loc48, #loc49])
#loc360 = loc(fused[#loc50, #loc51])
#loc361 = loc(fused[#loc52, #loc49])
#loc362 = loc(fused[#loc54, #loc55])
#loc363 = loc(fused[#loc57, #loc58])
#loc364 = loc(fused[#loc59, #loc60])
#loc365 = loc(fused[#loc63, #loc61])
#loc366 = loc(fused[#loc67, #loc64])
#loc367 = loc(fused[#loc71, #loc72])
#loc368 = loc(fused[#loc73, #loc74])
#loc369 = loc(fused[#loc76, #loc77])
#loc370 = loc(fused[#loc78, #loc79])
#loc371 = loc(fused[#loc80, #loc81])
#loc372 = loc(fused[#loc82, #loc74])
#loc373 = loc(fused[#loc84, #loc85])
#loc374 = loc(fused[#loc88, #loc89])
#loc375 = loc(fused[#loc90, #loc85])
#loc376 = loc(fused[#loc96, #loc97])
#loc377 = loc(fused[#loc98, #loc99])
#loc378 = loc(fused[#loc100, #loc101])
#loc379 = loc(fused[#loc102, #loc99])
#loc380 = loc(fused[#loc106, #loc107])
#loc381 = loc(fused[#loc110, #loc111])
#loc382 = loc(fused[#loc112, #loc113])
#loc383 = loc(fused[#loc114, #loc115])
#loc384 = loc(fused[#loc117, #loc118])
#loc385 = loc(fused[#loc119, #loc113])
#loc386 = loc(fused[#loc123, #loc121])
#loc387 = loc(fused[#loc126, #loc127])
#loc388 = loc(fused[#loc128, #loc129])
#loc389 = loc(fused[#loc130, #loc131])
#loc390 = loc(fused[#loc132, #loc129])
#loc391 = loc(fused[#loc135, #loc136])
#loc392 = loc(fused[#loc137, #loc138])
#loc393 = loc(fused[#loc139, #loc136])
#loc394 = loc(fused[#loc143, #loc142])
#loc395 = loc(fused[#loc144, #loc145])
#loc396 = loc(fused[#loc146, #loc147])
#loc397 = loc(fused[#loc148, #loc149])
#loc398 = loc(fused[#loc150, #loc151])
#loc399 = loc(fused[#loc152, #loc153])
#loc400 = loc(fused[#loc154, #loc155])
#loc401 = loc(fused[#loc156, #loc157])
#loc402 = loc(fused[#loc158, #loc159])
#loc403 = loc(fused[#loc160, #loc161])
#loc404 = loc(fused[#loc162, #loc163])
#loc405 = loc(fused[#loc166, #loc167])
#loc406 = loc(fused[#loc168, #loc169])
#loc407 = loc(fused[#loc170, #loc171])
#loc408 = loc(fused[#loc173, #loc172])
#loc409 = loc(fused[#loc175, #loc174])
#loc410 = loc(fused[#loc177, #loc176])
#loc411 = loc(fused[#loc178, #loc179])
#loc412 = loc(fused[#loc180, #loc181])
#loc413 = loc(fused[#loc182, #loc183])
#loc414 = loc(fused[#loc184, #loc185])
#loc415 = loc(fused[#loc186, #loc187])
#loc416 = loc(fused[#loc188, #loc189])
#loc417 = loc(fused[#loc192, #loc193])
#loc418 = loc(fused[#loc194, #loc195])
#loc419 = loc(fused[#loc196, #loc197])
#loc420 = loc(fused[#loc198, #loc199])
#loc421 = loc(fused[#loc200, #loc201])
#loc422 = loc(fused[#loc202, #loc203])
#loc423 = loc(fused[#loc204, #loc205])
#loc424 = loc(fused[#loc206, #loc207])
#loc425 = loc(fused[#loc209, #loc208])
#loc426 = loc(fused[#loc210, #loc211])
#loc427 = loc(fused[#loc212, #loc213])
#loc428 = loc(fused[#loc215, #loc216])
#loc429 = loc(fused[#loc221, #loc222])
#loc430 = loc(fused[#loc223, #loc224])
#loc431 = loc(fused[#loc225, #loc226])
#loc432 = loc(fused[#loc227, #loc224])
#loc433 = loc(fused[#loc229, #loc230])
#loc434 = loc(fused[#loc232, #loc233])
#loc435 = loc(fused[#loc234, #loc235])
#loc436 = loc(fused[#loc237, #loc236])
#loc437 = loc(fused[#loc239, #loc238])
#loc438 = loc(fused[#loc242, #loc243])
#loc439 = loc(fused[#loc244, #loc245])
#loc440 = loc(fused[#loc247, #loc248])
#loc441 = loc(fused[#loc249, #loc250])
#loc442 = loc(fused[#loc251, #loc252])
#loc443 = loc(fused[#loc253, #loc245])
#loc444 = loc(fused[#loc255, #loc256])
#loc445 = loc(fused[#loc259, #loc260])
#loc446 = loc(fused[#loc261, #loc256])
#loc447 = loc(fused[#loc267, #loc268])
#loc448 = loc(fused[#loc269, #loc270])
#loc449 = loc(fused[#loc271, #loc272])
#loc450 = loc(fused[#loc273, #loc270])
#loc451 = loc(fused[#loc277, #loc278])
#loc452 = loc(fused[#loc281, #loc282])
#loc453 = loc(fused[#loc283, #loc284])
#loc454 = loc(fused[#loc285, #loc286])
#loc455 = loc(fused[#loc288, #loc289])
#loc456 = loc(fused[#loc290, #loc284])
#loc457 = loc(fused[#loc294, #loc292])
#loc458 = loc(fused[#loc297, #loc298])
#loc459 = loc(fused[#loc299, #loc300])
#loc460 = loc(fused[#loc301, #loc302])
#loc461 = loc(fused[#loc303, #loc300])
#loc462 = loc(fused[#loc306, #loc307])
#loc463 = loc(fused[#loc308, #loc309])
#loc464 = loc(fused[#loc310, #loc307])
#loc465 = loc(fused[#loc314, #loc313])
#loc466 = loc(fused[#loc315, #loc316])
#loc467 = loc(fused[#loc317, #loc318])
#loc468 = loc(fused[#loc320, #loc321])
#loc469 = loc(fused[#loc322, #loc323])
#loc470 = loc(fused[#loc324, #loc325])
#loc471 = loc(fused[#loc326, #loc327])
#loc472 = loc(fused[#loc328, #loc329])
#loc473 = loc(fused[#loc330, #loc331, #loc332, #loc327])
#loc474 = loc(fused[#loc333, #loc334])
