!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":74:23)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc147)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc153)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc154)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc20)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc24)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc148)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc24)
    cir.br ^bb2 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc154)
    cir.store %11, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc154)
    cir.br ^bb3 loc(#loc158)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %14 = cir.cmp(ge, %12, %13) : !s32i, !cir.bool loc(#loc159)
    cir.brcond %14 ^bb4, ^bb13 loc(#loc160)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc37)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc37)
    cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb5 loc(#loc162)
  ^bb5:  // pred: ^bb4
    %19 = cir.const #cir.int<0> : !s32i loc(#loc40)
    cir.store %19, %1 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.br ^bb6 loc(#loc162)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc43)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc164)
    cir.brcond %22 ^bb7, ^bb11 loc(#loc44)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc165)
  ^bb8:  // pred: ^bb7
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc47)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc47)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc48)
    cir.br ^bb9 loc(#loc39)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc50)
    cir.store %28, %1 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb6 loc(#loc162)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc39)
  ^bb12:  // pred: ^bb11
    cir.br ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb3
    %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc10)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb14 loc(#loc29)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc29)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc12)
  } loc(#loc151)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc58)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc172)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc173)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc68)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc72)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc148)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc74)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc74)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc72)
    cir.br ^bb2 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc173)
    cir.store %11, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc173)
    cir.br ^bb3 loc(#loc177)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %14 = cir.cmp(ge, %12, %13) : !s32i, !cir.bool loc(#loc178)
    cir.brcond %14 ^bb4, ^bb9 loc(#loc81)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc83)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc179)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc81)
  ^bb5:  // pred: ^bb4
    %18 = cir.const #true loc(#loc81)
    cir.br ^bb7(%18 : !cir.bool) loc(#loc81)
  ^bb6:  // pred: ^bb4
    %19 = cir.const #false loc(#loc81)
    cir.br ^bb7(%19 : !cir.bool) loc(#loc81)
  ^bb7(%20: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":74:23)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc81)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10(%20 : !cir.bool) loc(#loc81)
  ^bb9:  // pred: ^bb3
    %21 = cir.const #false loc(#loc81)
    cir.br ^bb10(%21 : !cir.bool) loc(#loc81)
  ^bb10(%22: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":74:23)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc81)
  ^bb11:  // pred: ^bb10
    cir.brcond %22 ^bb12, ^bb21 loc(#loc180)
  ^bb12:  // pred: ^bb11
    %23 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %25 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc90)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc90)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.br ^bb13 loc(#loc182)
  ^bb13:  // pred: ^bb12
    %27 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %27, %1 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb14 loc(#loc182)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %29 = cir.const #cir.int<10> : !s32i loc(#loc96)
    %30 = cir.cmp(lt, %28, %29) : !s32i, !cir.bool loc(#loc184)
    cir.brcond %30 ^bb15, ^bb19 loc(#loc97)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc185)
  ^bb16:  // pred: ^bb15
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc100)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc100)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc101)
    cir.br ^bb17 loc(#loc92)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc92)
  ^bb18:  // pred: ^bb17
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %36 = cir.unary(inc, %35) : !s32i, !s32i loc(#loc103)
    cir.store %36, %1 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.br ^bb14 loc(#loc182)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc92)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22 loc(#loc86)
  ^bb21:  // pred: ^bb11
    %37 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc58)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb22 loc(#loc78)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc78)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc60)
  } loc(#loc170)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc189)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc190)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc114)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<7> : !s32i loc(#loc118)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb2 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc190)
    cir.store %6, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc190)
    cir.br ^bb3 loc(#loc195)
  ^bb3:  // pred: ^bb2
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc196)
    cir.brcond %9 ^bb4, ^bb13 loc(#loc197)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %12 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc131)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc131)
    cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb5 loc(#loc199)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<0> : !s32i loc(#loc134)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb6 loc(#loc199)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc137)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc201)
    cir.brcond %17 ^bb7, ^bb11 loc(#loc138)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc202)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc141)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc141)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc142)
    cir.br ^bb9 loc(#loc133)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc133)
  ^bb10:  // pred: ^bb9
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc144)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.br ^bb6 loc(#loc199)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc133)
  ^bb12:  // pred: ^bb11
    cir.br ^bb14 loc(#loc127)
  ^bb13:  // pred: ^bb3
    %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc145)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    cir.br ^bb14 loc(#loc123)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc123)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc106)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":30:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":49:23)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":22:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":52:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":24:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":24:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":34:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":34:13)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":35:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":35:30)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":26:13)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":26:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":26:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":27:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":27:10)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":30:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":30:12)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":31:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":31:10)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":38:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":50:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":38:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":38:21)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":39:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":46:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":48:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":40:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":40:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":40:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":42:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":45:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":42:21)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":42:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":42:24)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":42:28)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":42:26)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":43:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":44:37)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":44:30)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":44:17)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":42:33)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":42:32)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":49:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":124:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":128:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":126:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":126:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":127:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":127:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":85:23)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":59:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":88:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":61:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":61:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":71:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":71:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":72:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":72:30)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":63:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":63:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":63:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":64:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":64:10)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":67:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":67:12)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":67:19)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":68:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":68:10)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":74:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":86:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":74:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":74:21)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":74:26)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":74:34)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":74:36)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":75:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":82:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":84:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":76:28)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":76:20)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":76:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":78:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":81:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":78:21)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":78:17)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":78:24)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":78:28)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":78:26)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":79:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":80:37)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":80:30)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":80:17)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":78:33)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":78:32)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":85:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":91:1)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":122:1)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":93:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":93:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":104:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":104:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":105:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":105:30)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":95:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":95:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":95:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":96:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":96:10)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":100:12)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":100:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":101:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":101:10)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":108:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":120:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":108:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":108:21)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":109:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":116:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":118:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":110:28)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":110:20)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":110:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":112:13)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":115:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":112:21)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":112:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":112:24)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":112:28)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":112:26)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":113:13)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":114:37)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":114:30)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":114:17)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":112:33)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":112:32)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":119:23)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c":119:13)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc6, #loc7])
#loc150 = loc(fused[#loc8, #loc9])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc13, #loc14])
#loc153 = loc(fused[#loc15, #loc16])
#loc154 = loc(fused[#loc17, #loc18])
#loc155 = loc(fused[#loc21, #loc19])
#loc156 = loc(fused[#loc22, #loc23])
#loc157 = loc(fused[#loc26, #loc27])
#loc158 = loc(fused[#loc28, #loc29])
#loc159 = loc(fused[#loc30, #loc31])
#loc160 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc161 = loc(fused[#loc37, #loc35])
#loc162 = loc(fused[#loc38, #loc39])
#loc163 = loc(fused[#loc41, #loc40])
#loc164 = loc(fused[#loc42, #loc43])
#loc165 = loc(fused[#loc45, #loc39])
#loc166 = loc(fused[#loc50, #loc49])
#loc167 = loc(fused[#loc52, #loc53])
#loc168 = loc(fused[#loc54, #loc55])
#loc169 = loc(fused[#loc56, #loc57])
#loc170 = loc(fused[#loc59, #loc60])
#loc171 = loc(fused[#loc61, #loc62])
#loc172 = loc(fused[#loc63, #loc64])
#loc173 = loc(fused[#loc65, #loc66])
#loc174 = loc(fused[#loc69, #loc67])
#loc175 = loc(fused[#loc70, #loc71])
#loc176 = loc(fused[#loc75, #loc76])
#loc177 = loc(fused[#loc77, #loc78])
#loc178 = loc(fused[#loc79, #loc80])
#loc179 = loc(fused[#loc82, #loc84])
#loc180 = loc(fused[#loc85, #loc86, #loc87, #loc78])
#loc181 = loc(fused[#loc90, #loc88])
#loc182 = loc(fused[#loc91, #loc92])
#loc183 = loc(fused[#loc94, #loc93])
#loc184 = loc(fused[#loc95, #loc96])
#loc185 = loc(fused[#loc98, #loc92])
#loc186 = loc(fused[#loc103, #loc102])
#loc187 = loc(fused[#loc105, #loc106])
#loc188 = loc(fused[#loc107, #loc108])
#loc189 = loc(fused[#loc109, #loc110])
#loc190 = loc(fused[#loc111, #loc112])
#loc191 = loc(fused[#loc115, #loc113])
#loc192 = loc(fused[#loc116, #loc117])
#loc193 = loc(fused[#loc119, #loc118])
#loc194 = loc(fused[#loc120, #loc121])
#loc195 = loc(fused[#loc122, #loc123])
#loc196 = loc(fused[#loc124, #loc125])
#loc197 = loc(fused[#loc126, #loc127, #loc128, #loc123])
#loc198 = loc(fused[#loc131, #loc129])
#loc199 = loc(fused[#loc132, #loc133])
#loc200 = loc(fused[#loc135, #loc134])
#loc201 = loc(fused[#loc136, #loc137])
#loc202 = loc(fused[#loc139, #loc133])
#loc203 = loc(fused[#loc144, #loc143])
