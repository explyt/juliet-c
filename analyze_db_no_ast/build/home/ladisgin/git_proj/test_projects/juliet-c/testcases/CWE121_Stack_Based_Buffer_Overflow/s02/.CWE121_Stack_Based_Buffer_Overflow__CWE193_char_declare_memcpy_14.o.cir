!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @globalFive : !s32i {alignment = 4 : i64} loc(#loc125)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc126)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc130)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc131)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc125)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc18)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc133)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc19)
      cir.if %7 {
        %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc21)
        cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc23)
        %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc23)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc26)
        cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc136)
      } loc(#loc134)
    } loc(#loc132)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc138)
      %4 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc138)
      cir.store %4, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc138)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc32)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc33)
      %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc34)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc33)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc35)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc139)
      %15 = cir.const #cir.int<1> : !u64i loc(#loc140)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc141)
      cir.libc.memcpy %16 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc142)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    } loc(#loc137)
    cir.return loc(#loc8)
  } loc(#loc128)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc143)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc148)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc149)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc125)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc60)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc61)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc151)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc62)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc49)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } else {
        %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc67)
        cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc69)
        %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc69)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc72)
        cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc154)
      } loc(#loc152)
    } loc(#loc150)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc156)
      %4 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc156)
      cir.store %4, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc156)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc78)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc79)
      %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc80)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc79)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc81)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc81)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc157)
      %15 = cir.const #cir.int<1> : !u64i loc(#loc158)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc159)
      cir.libc.memcpy %16 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc160)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    } loc(#loc155)
    cir.return loc(#loc51)
  } loc(#loc146)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc163)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc164)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc125)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc100)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc166)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc101)
      cir.if %7 {
        %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc103)
        cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc105)
        %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc105)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc107)
        %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc108)
        cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc169)
      } loc(#loc167)
    } loc(#loc165)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc171)
      %4 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc171)
      cir.store %4, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc171)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc114)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc115)
      %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc116)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc115)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc117)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc117)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc172)
      %15 = cir.const #cir.int<1> : !u64i loc(#loc173)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc174)
      cir.libc.memcpy %16 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc175)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    } loc(#loc170)
    cir.return loc(#loc90)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":28:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":47:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":30:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":30:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":31:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":31:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":32:29)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":33:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":39:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":33:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":33:20)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":33:18)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":37:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":37:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":38:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":38:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":38:14)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":38:15)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":40:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":46:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":41:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":41:29)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":44:16)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":44:22)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":44:31)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":44:38)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":44:48)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":44:53)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":44:64)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":44:30)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":44:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":44:65)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":45:19)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":45:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":102:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":106:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":104:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":104:14)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":105:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":105:14)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":62:19)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":54:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":78:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":56:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":56:12)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":57:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":57:26)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":58:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":58:29)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":59:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":70:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":59:8)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":59:20)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":59:18)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":60:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":63:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":65:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":62:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":68:16)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":68:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":69:19)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":69:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":69:14)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":69:15)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":71:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":77:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":72:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":72:29)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":75:16)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":75:22)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":75:31)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":75:38)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":75:48)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":75:53)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":75:64)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":75:30)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":75:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":75:65)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":76:19)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":76:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":81:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":100:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":83:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":83:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":84:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":84:26)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":85:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":85:29)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":86:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":92:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":86:8)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":86:20)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":86:18)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":87:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":90:16)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":90:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":91:19)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":91:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":91:14)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":91:15)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":93:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":99:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":94:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":94:29)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":97:16)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":97:22)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":97:31)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":97:38)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":97:48)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":97:53)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":97:64)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":97:30)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":97:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":97:65)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":98:19)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_14.c":98:9)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc15, #loc16])
#loc133 = loc(fused[#loc17, #loc18])
#loc134 = loc(fused[#loc20, #loc16])
#loc135 = loc(fused[#loc22, #loc21])
#loc136 = loc(fused[#loc24, #loc23])
#loc137 = loc(fused[#loc27, #loc28])
#loc138 = loc(fused[#loc29, #loc30])
#loc139 = loc(fused[#loc33, #loc35])
#loc140 = loc(fused[#loc36, #loc37])
#loc141 = loc(fused[#loc38, #loc37])
#loc142 = loc(fused[#loc39, #loc40])
#loc143 = loc(fused[#loc43, #loc44])
#loc144 = loc(fused[#loc45, #loc46])
#loc145 = loc(fused[#loc47, #loc48])
#loc146 = loc(fused[#loc50, #loc51])
#loc147 = loc(fused[#loc52, #loc53])
#loc148 = loc(fused[#loc54, #loc55])
#loc149 = loc(fused[#loc56, #loc57])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc60, #loc61])
#loc152 = loc(fused[#loc63, #loc64, #loc65, #loc59])
#loc153 = loc(fused[#loc68, #loc67])
#loc154 = loc(fused[#loc70, #loc69])
#loc155 = loc(fused[#loc73, #loc74])
#loc156 = loc(fused[#loc75, #loc76])
#loc157 = loc(fused[#loc79, #loc81])
#loc158 = loc(fused[#loc82, #loc83])
#loc159 = loc(fused[#loc84, #loc83])
#loc160 = loc(fused[#loc85, #loc86])
#loc161 = loc(fused[#loc89, #loc90])
#loc162 = loc(fused[#loc91, #loc92])
#loc163 = loc(fused[#loc93, #loc94])
#loc164 = loc(fused[#loc95, #loc96])
#loc165 = loc(fused[#loc97, #loc98])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc102, #loc98])
#loc168 = loc(fused[#loc104, #loc103])
#loc169 = loc(fused[#loc106, #loc105])
#loc170 = loc(fused[#loc109, #loc110])
#loc171 = loc(fused[#loc111, #loc112])
#loc172 = loc(fused[#loc115, #loc117])
#loc173 = loc(fused[#loc118, #loc119])
#loc174 = loc(fused[#loc120, #loc119])
#loc175 = loc(fused[#loc121, #loc122])
