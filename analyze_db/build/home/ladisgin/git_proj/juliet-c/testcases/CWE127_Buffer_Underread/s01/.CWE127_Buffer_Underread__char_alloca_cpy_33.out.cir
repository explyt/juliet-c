!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc112 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":93:10)
#loc113 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":93:14)
#loc114 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":93:20)
#loc115 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":93:32)
#loc160 = loc(fused[#loc112, #loc113])
#loc161 = loc(fused[#loc114, #loc115])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_cpy_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.func @_ZN43CWE127_Buffer_Underread__char_alloca_cpy_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc133)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc10)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %12 = cir.const #cir.int<65> : !s8i loc(#loc14)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc14)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc15)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc134)
    %18 = cir.const #cir.int<0> : !s8i loc(#loc19)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc21)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc135)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %25 = cir.const #cir.int<8> : !s32i loc(#loc25)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc25)
    %27 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc26)
    cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.scope {
      %28 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
      %29 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
      %30 = cir.load %29 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      cir.store %30, %28 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
      cir.scope {
        %31 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc140)
        %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc36)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
        %34 = cir.const #cir.int<67> : !s8i loc(#loc37)
        %35 = cir.cast(integral, %34 : !s8i), !s32i loc(#loc37)
        %36 = cir.const #cir.int<100> : !s32i loc(#loc38)
        %37 = cir.const #cir.int<2> : !s32i loc(#loc39)
        %38 = cir.binop(mul, %36, %37) nsw : !s32i loc(#loc38)
        %39 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc38)
        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc38)
        cir.libc.memset %41 bytes from %33 set to %35 : !cir.ptr<!void>, !s32i, !u64i loc(#loc141)
        %42 = cir.const #cir.int<0> : !s8i loc(#loc43)
        %43 = cir.const #cir.int<100> : !s32i loc(#loc44)
        %44 = cir.const #cir.int<2> : !s32i loc(#loc45)
        %45 = cir.binop(mul, %43, %44) nsw : !s32i loc(#loc44)
        %46 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc44)
        %48 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc47)
        %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc47)
        cir.store %42, %49 : !s8i, !cir.ptr<!s8i> loc(#loc142)
        %50 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc48)
        %51 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc49)
        %52 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        %53 = cir.call @strcpy(%51, %52) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
        %54 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc52)
      } loc(#loc139)
    } loc(#loc137)
    cir.return loc(#loc6)
  } loc(#loc130)
  cir.func internal private @_ZN43CWE127_Buffer_Underread__char_alloca_cpy_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc146)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc60)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc60)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc60)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
    %12 = cir.const #cir.int<65> : !s8i loc(#loc62)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc62)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc63)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc63)
    cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc147)
    %18 = cir.const #cir.int<0> : !s8i loc(#loc67)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc69)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc71)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc148)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
      %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc153)
        %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc82)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
        %31 = cir.const #cir.int<67> : !s8i loc(#loc83)
        %32 = cir.cast(integral, %31 : !s8i), !s32i loc(#loc83)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc84)
        %34 = cir.const #cir.int<2> : !s32i loc(#loc85)
        %35 = cir.binop(mul, %33, %34) nsw : !s32i loc(#loc84)
        %36 = cir.const #cir.int<1> : !s32i loc(#loc86)
        %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc84)
        %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc84)
        cir.libc.memset %38 bytes from %30 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
        %39 = cir.const #cir.int<0> : !s8i loc(#loc89)
        %40 = cir.const #cir.int<100> : !s32i loc(#loc90)
        %41 = cir.const #cir.int<2> : !s32i loc(#loc91)
        %42 = cir.binop(mul, %40, %41) nsw : !s32i loc(#loc90)
        %43 = cir.const #cir.int<1> : !s32i loc(#loc92)
        %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc90)
        %45 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc93)
        %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc93)
        cir.store %39, %46 : !s8i, !cir.ptr<!s8i> loc(#loc155)
        %47 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc94)
        %48 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc95)
        %49 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
        %50 = cir.call @strcpy(%48, %49) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
        %51 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc98)
      } loc(#loc152)
    } loc(#loc150)
    cir.return loc(#loc54)
  } loc(#loc143)
  cir.func @_ZN43CWE127_Buffer_Underread__char_alloca_cpy_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN43CWE127_Buffer_Underread__char_alloca_cpy_33L7goodG2BEv() : () -> () loc(#loc101)
    cir.return loc(#loc100)
  } loc(#loc156)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc157)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc109)
  cir.func @main(%arg0: !s32i loc(fused[#loc112, #loc113]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc114, #loc115])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc111)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc116)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc117)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc118)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc118)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc119)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc106)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.call @_ZN43CWE127_Buffer_Underread__char_alloca_cpy_334goodEv() : () -> () loc(#loc121)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc107)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc108)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.call @_ZN43CWE127_Buffer_Underread__char_alloca_cpy_333badEv() : () -> () loc(#loc124)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc109)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc126)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.return %15 : !s32i loc(#loc162)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":26:1)
#loc6 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":46:1)
#loc7 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":28:5)
#loc8 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":28:12)
#loc9 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":29:5)
#loc10 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":29:23)
#loc11 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":30:5)
#loc12 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":30:33)
#loc13 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":31:12)
#loc14 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":31:24)
#loc15 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":31:29)
#loc16 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":31:33)
#loc17 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":31:5)
#loc18 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":31:34)
#loc19 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":32:25)
#loc20 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":32:5)
#loc21 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":32:16)
#loc22 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":32:20)
#loc23 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":32:21)
#loc24 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":34:12)
#loc25 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":34:25)
#loc26 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":34:23)
#loc27 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":34:5)
#loc28 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":35:5)
#loc29 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":45:5)
#loc30 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":36:9)
#loc31 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":36:23)
#loc32 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":37:9)
#loc33 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":44:9)
#loc34 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":38:13)
#loc35 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":38:28)
#loc36 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":39:20)
#loc37 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":39:26)
#loc38 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":39:31)
#loc39 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":39:35)
#loc40 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":39:37)
#loc41 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":39:13)
#loc42 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":39:38)
#loc43 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":40:29)
#loc44 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":40:18)
#loc45 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":40:22)
#loc46 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":40:24)
#loc47 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":40:13)
#loc48 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":42:13)
#loc49 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":42:20)
#loc50 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":42:26)
#loc51 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":43:23)
#loc52 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":43:13)
#loc53 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":53:1)
#loc54 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":73:1)
#loc55 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":55:5)
#loc56 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":55:12)
#loc57 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":56:5)
#loc58 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":56:23)
#loc59 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":57:5)
#loc60 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":57:33)
#loc61 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":58:12)
#loc62 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":58:24)
#loc63 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":58:29)
#loc64 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":58:33)
#loc65 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":58:5)
#loc66 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":58:34)
#loc67 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":59:25)
#loc68 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":59:5)
#loc69 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":59:16)
#loc70 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":59:20)
#loc71 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":59:21)
#loc72 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":61:12)
#loc73 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":61:5)
#loc74 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":62:5)
#loc75 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":72:5)
#loc76 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":63:9)
#loc77 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":63:23)
#loc78 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":64:9)
#loc79 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":71:9)
#loc80 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":65:13)
#loc81 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":65:28)
#loc82 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":66:20)
#loc83 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":66:26)
#loc84 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":66:31)
#loc85 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":66:35)
#loc86 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":66:37)
#loc87 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":66:13)
#loc88 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":66:38)
#loc89 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":67:29)
#loc90 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":67:18)
#loc91 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":67:22)
#loc92 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":67:24)
#loc93 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":67:13)
#loc94 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":69:13)
#loc95 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":69:20)
#loc96 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":69:26)
#loc97 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":70:23)
#loc98 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":70:13)
#loc99 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":75:1)
#loc100 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":78:1)
#loc101 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":77:5)
#loc102 = loc("/usr/include/stdlib.h":575:1)
#loc103 = loc("/usr/include/stdlib.h":575:41)
#loc104 = loc("/usr/include/time.h":76:1)
#loc105 = loc("/usr/include/time.h":76:38)
#loc106 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":98:15)
#loc107 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":100:15)
#loc108 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":103:15)
#loc109 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":105:15)
#loc110 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":93:1)
#loc111 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":108:1)
#loc116 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":94:1)
#loc117 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":96:27)
#loc118 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":96:22)
#loc119 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":96:5)
#loc120 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":98:5)
#loc121 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":99:5)
#loc122 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":100:5)
#loc123 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":103:5)
#loc124 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":104:5)
#loc125 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":105:5)
#loc126 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":107:12)
#loc127 = loc("CWE127_Buffer_Underread__char_alloca_cpy_33.cpp":107:5)
#loc128 = loc(fused[#loc1, #loc2])
#loc129 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc7, #loc8])
#loc132 = loc(fused[#loc9, #loc10])
#loc133 = loc(fused[#loc11, #loc12])
#loc134 = loc(fused[#loc17, #loc18])
#loc135 = loc(fused[#loc20, #loc19])
#loc136 = loc(fused[#loc27, #loc25])
#loc137 = loc(fused[#loc28, #loc29])
#loc138 = loc(fused[#loc30, #loc31])
#loc139 = loc(fused[#loc32, #loc33])
#loc140 = loc(fused[#loc34, #loc35])
#loc141 = loc(fused[#loc41, #loc42])
#loc142 = loc(fused[#loc47, #loc43])
#loc143 = loc(fused[#loc53, #loc54])
#loc144 = loc(fused[#loc55, #loc56])
#loc145 = loc(fused[#loc57, #loc58])
#loc146 = loc(fused[#loc59, #loc60])
#loc147 = loc(fused[#loc65, #loc66])
#loc148 = loc(fused[#loc68, #loc67])
#loc149 = loc(fused[#loc73, #loc72])
#loc150 = loc(fused[#loc74, #loc75])
#loc151 = loc(fused[#loc76, #loc77])
#loc152 = loc(fused[#loc78, #loc79])
#loc153 = loc(fused[#loc80, #loc81])
#loc154 = loc(fused[#loc87, #loc88])
#loc155 = loc(fused[#loc93, #loc89])
#loc156 = loc(fused[#loc99, #loc100])
#loc157 = loc(fused[#loc102, #loc103])
#loc158 = loc(fused[#loc104, #loc105])
#loc159 = loc(fused[#loc110, #loc111])
#loc162 = loc(fused[#loc127, #loc126])
