!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc93)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc98)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc100)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %11 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %12 ^bb3, ^bb6 loc(#loc17)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
    %15 = cir.const #cir.int<65> : !s32i loc(#loc20)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc21)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc21)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc102)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc25)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc27)
    %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc103)
    cir.br ^bb6 loc(#loc30)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc16)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc16)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc104)
  ^bb8:  // pred: ^bb7
    %27 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc96)
    cir.store %27, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc96)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc33)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc35)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc35)
    %35 = cir.const #cir.int<1> : !u64i loc(#loc105)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc106)
    cir.libc.memcpy %36 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc107)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc41)
    %39 = cir.const #cir.int<50> : !s32i loc(#loc42)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc42)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc44)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc108)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc6)
  } loc(#loc95)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc110)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    cir.return loc(#loc48)
  } loc(#loc109)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc112)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc114)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc58)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc58)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc58)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc58)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc58)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc116)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %11 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc63)
    cir.brcond %12 ^bb3, ^bb6 loc(#loc63)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc117)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
    %15 = cir.const #cir.int<65> : !s32i loc(#loc66)
    %16 = cir.const #cir.int<50> : !s32i loc(#loc67)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc67)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc67)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc118)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc71)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %23 = cir.const #cir.int<50> : !s32i loc(#loc73)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc73)
    %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc75)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc119)
    cir.br ^bb6 loc(#loc76)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc62)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc62)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc120)
  ^bb8:  // pred: ^bb7
    %27 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc112)
    cir.store %27, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc112)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc79)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc81)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc81)
    %35 = cir.const #cir.int<1> : !u64i loc(#loc121)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc122)
    cir.libc.memcpy %36 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc123)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc87)
    %39 = cir.const #cir.int<50> : !s32i loc(#loc88)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc88)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc90)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc90)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc124)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb9 loc(#loc78)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc52)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":42:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":36:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":36:25)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":25:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":26:33)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":27:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":27:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":28:11)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":29:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":31:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":31:22)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":31:27)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":31:31)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":31:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":31:32)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":32:23)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":32:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":32:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":32:18)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":32:19)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":33:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":35:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":41:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":38:16)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":38:22)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":38:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":38:35)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":38:41)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":38:52)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":38:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":38:53)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":39:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":39:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":39:17)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":39:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":40:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":40:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":70:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":73:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":72:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":72:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":49:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":68:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":62:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":62:25)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":51:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":51:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":52:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":52:33)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":53:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":53:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":54:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":60:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":54:11)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":55:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":57:16)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":57:22)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":57:27)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":57:30)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":57:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":57:31)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":58:22)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":58:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":58:14)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":58:17)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":58:18)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":59:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":61:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":67:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":64:16)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":64:22)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":64:28)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":64:35)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":64:41)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":64:52)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":64:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":64:53)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":65:22)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":65:14)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":65:17)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":65:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":66:19)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_16.c":66:9)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc5, #loc6])
#loc96 = loc(fused[#loc7, #loc8])
#loc97 = loc(fused[#loc9, #loc10])
#loc98 = loc(fused[#loc11, #loc12])
#loc99 = loc(fused[#loc14, #loc13])
#loc100 = loc(fused[#loc15, #loc16])
#loc101 = loc(fused[#loc18, #loc16])
#loc102 = loc(fused[#loc23, #loc24])
#loc103 = loc(fused[#loc26, #loc25])
#loc104 = loc(fused[#loc31, #loc32])
#loc105 = loc(fused[#loc37, #loc38])
#loc106 = loc(fused[#loc35, #loc38])
#loc107 = loc(fused[#loc39, #loc40])
#loc108 = loc(fused[#loc44, #loc41])
#loc109 = loc(fused[#loc47, #loc48])
#loc110 = loc(fused[#loc49, #loc50])
#loc111 = loc(fused[#loc51, #loc52])
#loc112 = loc(fused[#loc53, #loc54])
#loc113 = loc(fused[#loc55, #loc56])
#loc114 = loc(fused[#loc57, #loc58])
#loc115 = loc(fused[#loc60, #loc59])
#loc116 = loc(fused[#loc61, #loc62])
#loc117 = loc(fused[#loc64, #loc62])
#loc118 = loc(fused[#loc69, #loc70])
#loc119 = loc(fused[#loc72, #loc71])
#loc120 = loc(fused[#loc77, #loc78])
#loc121 = loc(fused[#loc83, #loc84])
#loc122 = loc(fused[#loc81, #loc84])
#loc123 = loc(fused[#loc85, #loc86])
#loc124 = loc(fused[#loc90, #loc87])
