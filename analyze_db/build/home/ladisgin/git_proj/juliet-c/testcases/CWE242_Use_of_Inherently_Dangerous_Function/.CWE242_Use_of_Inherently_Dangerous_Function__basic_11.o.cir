!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc123)
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc5)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc125)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc128)
    cir.br ^bb1 loc(#loc129)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc130)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc130)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc16)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc131)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc132)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc21)
    %7 = cir.get_global @gets : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc133)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>> loc(#loc133)
    %9 = cir.call %8(%6) : (!cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> !s32i loc(#loc22)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc22)
    %11 = cir.cast(int_to_ptr, %10 : !u64i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.br ^bb4 loc(#loc135)
  ^bb4:  // pred: ^bb3
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc136)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc137)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc5)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc32)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc33)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc34)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc34)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc36)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc138)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc15)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc9)
  } loc(#loc126)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc40)
  } loc(#loc139)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc47)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc143)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc144)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc149)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc149)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc60)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc60)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.br ^bb10 loc(#loc63)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc151)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc68)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc69)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc144)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
    %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc71)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb5 loc(#loc153)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc154)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc155)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc79)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc81)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc82)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc81)
    cir.br ^bb7 loc(#loc75)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc75)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc83)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc84)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc84)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc86)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc86)
    cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb9 loc(#loc67)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc59)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc59)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc53)
  } loc(#loc145)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc161)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc161)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc97)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc97)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc162)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc163)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc102)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc103)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc144)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc105)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.br ^bb4 loc(#loc165)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc166)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc167)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc113)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc115)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc116)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb6 loc(#loc109)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc117)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc118)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc118)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc120)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc120)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb8 loc(#loc101)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc96)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc96)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc90)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":37:27)
#loc6 = loc("/usr/include/stdlib.h":756:1)
#loc7 = loc("/usr/include/stdlib.h":756:70)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":22:1)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":44:1)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":27:13)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":27:32)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":28:13)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":28:19)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":24:5)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":43:5)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":24:8)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":24:26)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":25:5)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":26:9)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":42:9)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":32:27)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":32:22)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":32:31)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":32:13)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":34:13)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":39:13)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":34:17)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":34:27)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":35:13)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":37:17)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":38:17)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":38:22)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":40:33)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":40:18)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":40:28)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":40:13)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":41:23)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":41:13)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":101:1)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":105:1)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":103:5)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":103:11)
#loc43 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":104:5)
#loc44 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":104:11)
#loc45 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":56:19)
#loc48 = loc("/usr/include/stdio.h":654:1)
#loc49 = loc("/usr/include/stdio.h":655:59)
#loc50 = loc("/usr/include/stdio.h":149:1)
#loc51 = loc("/usr/include/stdio.h":149:14)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":51:1)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":76:1)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":61:13)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":61:32)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":62:13)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":62:19)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":53:5)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":75:5)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":53:8)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":53:27)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":54:5)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":57:5)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":59:5)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":56:9)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":60:9)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":74:9)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":64:28)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":64:34)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":64:45)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":64:22)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":64:13)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":64:50)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":66:13)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":71:13)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":66:17)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":66:27)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":67:13)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":69:27)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":69:17)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":70:17)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":70:22)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":72:33)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":72:18)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":72:28)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":72:13)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":73:23)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":73:13)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":79:1)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":99:1)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":84:13)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":84:32)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":85:13)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":85:19)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":81:5)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":98:5)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":81:8)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":81:26)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":82:5)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":83:9)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":97:9)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":87:28)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":87:34)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":87:45)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":87:22)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":87:13)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":87:50)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":89:13)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":94:13)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":89:17)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":89:27)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":90:13)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":92:27)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":92:17)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":93:17)
#loc116 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":93:22)
#loc117 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":95:33)
#loc118 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":95:18)
#loc119 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":95:28)
#loc120 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":95:13)
#loc121 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":96:23)
#loc122 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_11.c":96:13)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc6, #loc7])
#loc126 = loc(fused[#loc8, #loc9])
#loc127 = loc(fused[#loc10, #loc11])
#loc128 = loc(fused[#loc12, #loc13])
#loc129 = loc(fused[#loc14, #loc15])
#loc130 = loc(fused[#loc16, #loc17])
#loc131 = loc(fused[#loc18, #loc15])
#loc132 = loc(fused[#loc19, #loc20])
#loc133 = loc(fused[#loc22, #loc23])
#loc134 = loc(fused[#loc24, #loc23])
#loc135 = loc(fused[#loc25, #loc26])
#loc136 = loc(fused[#loc27, #loc28])
#loc137 = loc(fused[#loc29, #loc26])
#loc138 = loc(fused[#loc36, #loc33])
#loc139 = loc(fused[#loc39, #loc40])
#loc140 = loc(fused[#loc41, #loc42])
#loc141 = loc(fused[#loc43, #loc44])
#loc142 = loc(fused[#loc45, #loc46])
#loc143 = loc(fused[#loc48, #loc49])
#loc144 = loc(fused[#loc50, #loc51])
#loc145 = loc(fused[#loc52, #loc53])
#loc146 = loc(fused[#loc54, #loc55])
#loc147 = loc(fused[#loc56, #loc57])
#loc148 = loc(fused[#loc58, #loc59])
#loc149 = loc(fused[#loc60, #loc61])
#loc150 = loc(fused[#loc62, #loc63, #loc64, #loc59])
#loc151 = loc(fused[#loc66, #loc67])
#loc152 = loc(fused[#loc72, #loc73])
#loc153 = loc(fused[#loc74, #loc75])
#loc154 = loc(fused[#loc76, #loc77])
#loc155 = loc(fused[#loc78, #loc75])
#loc156 = loc(fused[#loc86, #loc83])
#loc157 = loc(fused[#loc89, #loc90])
#loc158 = loc(fused[#loc91, #loc92])
#loc159 = loc(fused[#loc93, #loc94])
#loc160 = loc(fused[#loc95, #loc96])
#loc161 = loc(fused[#loc97, #loc98])
#loc162 = loc(fused[#loc99, #loc96])
#loc163 = loc(fused[#loc100, #loc101])
#loc164 = loc(fused[#loc106, #loc107])
#loc165 = loc(fused[#loc108, #loc109])
#loc166 = loc(fused[#loc110, #loc111])
#loc167 = loc(fused[#loc112, #loc109])
#loc168 = loc(fused[#loc120, #loc117])
