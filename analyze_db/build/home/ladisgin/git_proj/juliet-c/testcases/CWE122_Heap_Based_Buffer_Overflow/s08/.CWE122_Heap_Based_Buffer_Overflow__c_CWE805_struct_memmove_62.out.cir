!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":99:10)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":99:14)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":99:20)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":99:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc167 = loc(fused[#loc110, #loc111])
#loc168 = loc(fused[#loc112, #loc113])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_629badSourceERP14_twoIntsStruct(!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) loc(#loc126)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc127)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc128)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc130)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_629badSourceERP14_twoIntsStruct(%2) : (!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) -> () loc(#loc17)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc135)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc136)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc24)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // 2 preds: ^bb3, ^bb6
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc26)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc27)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc138)
    cir.brcond %9 ^bb5, ^bb7 loc(#loc138)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc37)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    cir.br ^bb4 loc(#loc136)
  ^bb7:  // pred: ^bb4
    cir.br ^bb8 loc(#loc23)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc21)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc38)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc39)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc40)
    %28 = cir.const #cir.int<8> : !u64i loc(#loc142)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc143)
    cir.libc.memmove %29 bytes from %25 to %23 : !cir.ptr<!void>, !u64i loc(#loc144)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %31 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    cir.call @printStructLine(%32) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc48)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc49)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc8)
  } loc(#loc129)
  cir.func private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_6213goodG2BSourceERP14_twoIntsStruct(!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) loc(#loc145)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc147)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_6213goodG2BSourceERP14_twoIntsStruct(%2) : (!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) -> () loc(#loc63)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc153)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc70)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc154)
    cir.br ^bb4 loc(#loc153)
  ^bb4:  // 2 preds: ^bb3, ^bb6
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc73)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc73)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc155)
    cir.brcond %9 ^bb5, ^bb7 loc(#loc155)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb6 loc(#loc69)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc81)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.br ^bb4 loc(#loc153)
  ^bb7:  // pred: ^bb4
    cir.br ^bb8 loc(#loc69)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc67)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc82)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc83)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc84)
    %28 = cir.const #cir.int<8> : !u64i loc(#loc159)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc160)
    cir.libc.memmove %29 bytes from %25 to %23 : !cir.ptr<!void>, !u64i loc(#loc161)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %31 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
    cir.call @printStructLine(%32) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc92)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc93)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
    cir.br ^bb10 loc(#loc65)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc54)
  } loc(#loc146)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62L7goodG2BEv() : () -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc162)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc163)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc164)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc107)
  cir.func @main(%arg0: !s32i loc(fused[#loc110, #loc111]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc112, #loc113])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc109)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc114)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc115)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc116)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc116)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc117)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc104)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_624goodEv() : () -> () loc(#loc119)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc105)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc106)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_623badEv() : () -> () loc(#loc122)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc107)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc124)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.return %15 : !s32i loc(#loc169)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":25:37)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":27:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":48:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":33:9)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":33:33)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":35:13)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":35:20)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":29:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":29:21)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":30:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":30:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":31:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":32:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":47:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":34:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":42:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":41:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:22)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:18)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:25)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:29)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":39:36)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":39:24)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":39:17)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":40:36)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":40:24)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":40:17)
#loc35 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:35)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:34)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:17)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:23)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:31)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:35)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:55)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:56)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":45:26)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":45:31)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":45:32)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":45:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":46:14)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":46:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":55:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":55:41)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":57:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":78:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":63:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":63:33)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":65:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":65:20)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":59:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":59:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":60:12)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":60:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":61:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":62:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":77:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":64:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":72:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":71:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:22)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:18)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:25)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:29)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":69:36)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":69:24)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":69:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":70:36)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":70:24)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":70:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:35)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:34)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:23)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:31)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:35)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:55)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:56)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":75:26)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":75:31)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":75:32)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":75:9)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":76:14)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":76:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":80:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":83:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":82:5)
#loc98 = loc("/usr/include/stdlib.h":575:1)
#loc99 = loc("/usr/include/stdlib.h":575:41)
#loc100 = loc("/usr/include/time.h":76:1)
#loc101 = loc("/usr/include/time.h":76:38)
#loc102 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc103 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":104:15)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":106:15)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":109:15)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":111:15)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":99:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":114:1)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":100:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":102:27)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":102:22)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":102:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":104:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":105:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":106:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":109:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":110:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":111:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":113:12)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":113:5)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc5, #loc6])
#loc129 = loc(fused[#loc7, #loc8])
#loc130 = loc(fused[#loc9, #loc10])
#loc131 = loc(fused[#loc11, #loc12])
#loc132 = loc(fused[#loc13, #loc14])
#loc133 = loc(fused[#loc16, #loc15])
#loc134 = loc(fused[#loc18, #loc19])
#loc135 = loc(fused[#loc20, #loc21])
#loc136 = loc(fused[#loc22, #loc23])
#loc137 = loc(fused[#loc25, #loc24])
#loc138 = loc(fused[#loc26, #loc27])
#loc139 = loc(fused[#loc30, #loc28])
#loc140 = loc(fused[#loc34, #loc32])
#loc141 = loc(fused[#loc37, #loc36])
#loc142 = loc(fused[#loc41, #loc42])
#loc143 = loc(fused[#loc40, #loc42])
#loc144 = loc(fused[#loc43, #loc44])
#loc145 = loc(fused[#loc51, #loc52])
#loc146 = loc(fused[#loc53, #loc54])
#loc147 = loc(fused[#loc55, #loc56])
#loc148 = loc(fused[#loc57, #loc58])
#loc149 = loc(fused[#loc59, #loc60])
#loc150 = loc(fused[#loc62, #loc61])
#loc151 = loc(fused[#loc64, #loc65])
#loc152 = loc(fused[#loc66, #loc67])
#loc153 = loc(fused[#loc68, #loc69])
#loc154 = loc(fused[#loc71, #loc70])
#loc155 = loc(fused[#loc72, #loc73])
#loc156 = loc(fused[#loc76, #loc74])
#loc157 = loc(fused[#loc79, #loc77])
#loc158 = loc(fused[#loc81, #loc80])
#loc159 = loc(fused[#loc85, #loc86])
#loc160 = loc(fused[#loc84, #loc86])
#loc161 = loc(fused[#loc87, #loc88])
#loc162 = loc(fused[#loc95, #loc96])
#loc163 = loc(fused[#loc98, #loc99])
#loc164 = loc(fused[#loc100, #loc101])
#loc165 = loc(fused[#loc102, #loc103])
#loc166 = loc(fused[#loc108, #loc109])
#loc169 = loc(fused[#loc125, #loc124])
