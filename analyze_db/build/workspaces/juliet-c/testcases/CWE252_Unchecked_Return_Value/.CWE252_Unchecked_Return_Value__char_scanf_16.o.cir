!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc8)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc8)
        cir.condition(%1) loc(#loc8)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc52)
            %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc53)
            %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc52)
            cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc52)
            %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
            cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
            %4 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc16)
            %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
            %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
            %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
            %8 = cir.call @__isoc99_scanf(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc16)
          } loc(#loc51)
          cir.break loc(#loc18)
        } loc(#loc50)
        cir.yield loc(#loc7)
      } loc(#loc49)
    } loc(#loc49)
    cir.return loc(#loc5)
  } loc(#loc48)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc55)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    cir.return loc(#loc20)
  } loc(#loc54)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc25)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc30)
        cir.condition(%1) loc(#loc30)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc61)
            %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc62)
            %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc61)
            cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc61)
            %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
            cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
            cir.scope {
              %4 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc40)
              %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc41)
              %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc41)
              %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
              %8 = cir.call @__isoc99_scanf(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc40)
              %9 = cir.const #cir.int<1> : !s32i loc(#loc43)
              %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc43)
              %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc64)
              cir.if %11 {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc25)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc45)
              } loc(#loc65)
            } loc(#loc63)
          } loc(#loc60)
          cir.break loc(#loc46)
        } loc(#loc59)
        cir.yield loc(#loc29)
      } loc(#loc58)
    } loc(#loc58)
    cir.return loc(#loc27)
  } loc(#loc57)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":34:19)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":24:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":38:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":26:5)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":37:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":26:11)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":27:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":28:9)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":35:9)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":31:13)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":31:36)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":32:13)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":32:27)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":34:13)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":34:29)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":36:9)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":64:1)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":67:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":66:5)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":66:11)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":57:27)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":45:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":62:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":47:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":61:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":47:11)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":48:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":49:9)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":59:9)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":52:13)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":52:36)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":53:13)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":53:27)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":55:13)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":58:13)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":55:17)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":55:23)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":55:33)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":55:42)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":56:13)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":57:17)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":60:9)
#loc47 = loc(fused[#loc1, #loc2])
#loc48 = loc(fused[#loc4, #loc5])
#loc49 = loc(fused[#loc6, #loc7])
#loc50 = loc(fused[#loc9, #loc7])
#loc51 = loc(fused[#loc10, #loc11])
#loc52 = loc(fused[#loc12, #loc13])
#loc53 = loc(fused[#loc14, #loc15])
#loc54 = loc(fused[#loc19, #loc20])
#loc55 = loc(fused[#loc21, #loc22])
#loc56 = loc(fused[#loc23, #loc24])
#loc57 = loc(fused[#loc26, #loc27])
#loc58 = loc(fused[#loc28, #loc29])
#loc59 = loc(fused[#loc31, #loc29])
#loc60 = loc(fused[#loc32, #loc33])
#loc61 = loc(fused[#loc34, #loc35])
#loc62 = loc(fused[#loc36, #loc37])
#loc63 = loc(fused[#loc38, #loc39])
#loc64 = loc(fused[#loc40, #loc43])
#loc65 = loc(fused[#loc44, #loc39])
