!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc18 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":48:25)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":48:32)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":104:30)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":104:37)
#loc168 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":138:30)
#loc169 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":138:37)
#loc218 = loc(fused[#loc18, #loc19])
#loc258 = loc(fused[#loc119, #loc120])
#loc276 = loc(fused[#loc168, #loc169])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_popen_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc211)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc212)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc213)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc7)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc8)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc214)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc215)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc216)
  cir.func internal private  @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc18, #loc19])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc17)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
    cir.scope {
      %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc211)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc23)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc222)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc223)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc31)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc31)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc222)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc35)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc35)
            %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc36)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc225)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc37)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc37)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !s32i loc(#loc226)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc38)
            cir.if %19 {
              %20 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc40)
              %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc7)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc7)
              %23 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc8)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc8)
              %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc40)
              cir.store %25, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc228)
              cir.scope {
                %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc46)
                %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc230)
                %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc47)
                cir.if %30 {
                  cir.scope {
                    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
                    %34 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                    %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc53)
                    %36 = cir.const #cir.int<100> : !s32i loc(#loc54)
                    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc54)
                    %38 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc55)
                    %39 = cir.binop(sub, %37, %38) : !u64i loc(#loc233)
                    %40 = cir.cast(integral, %39 : !u64i), !s32i loc(#loc233)
                    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
                    %42 = cir.call @fgets(%35, %40, %41) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc57)
                    %43 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
                    %44 = cir.cast(bitcast, %43 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
                    %45 = cir.cmp(eq, %42, %44) : !cir.ptr<!s8i>, !s32i loc(#loc234)
                    %46 = cir.cast(int_to_bool, %45 : !s32i), !cir.bool loc(#loc59)
                    cir.if %46 {
                      %47 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                      %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                      cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc61)
                      %49 = cir.const #cir.int<0> : !s32i loc(#loc62)
                      %50 = cir.cast(integral, %49 : !s32i), !s8i loc(#loc62)
                      %51 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
                      %52 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                      %53 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %52 : !u64i), !cir.ptr<!s8i> loc(#loc65)
                      cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc236)
                    } loc(#loc235)
                  } loc(#loc232)
                  %31 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc66)
                  %32 = cir.call @fclose(%31) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc67)
                } loc(#loc231)
              } loc(#loc229)
            } loc(#loc227)
          } loc(#loc224)
        } loc(#loc221)
      } loc(#loc220)
    } loc(#loc219)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc237)
  } loc(#loc217)
  cir.func private  @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc238)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc72)
  cir.func private  @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc239)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_popen_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc242)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc242)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc242)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %5 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc211)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %7 = cir.call @badSource(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc86)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    cir.scope {
      %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc247)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc72)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc72)
      %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc94)
      cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc248)
      cir.scope {
        %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc99)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc100)
        %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc250)
        %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc101)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc103)
          %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc104)
        } loc(#loc251)
      } loc(#loc249)
    } loc(#loc246)
    cir.return loc(#loc76)
  } loc(#loc240)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_popen_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc107)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc109)
    cir.return loc(#loc106)
  } loc(#loc252)
  cir.global "private"  internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc255)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc113)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc256)
  cir.global "private"  constant internal dsolocal @".str5" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc116)
  cir.func internal private  @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc119, #loc120])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc258)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc118)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.scope {
      %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc255)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc124)
      cir.if %6 {
        %7 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc113)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc128)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc129)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
        %9 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc116)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc116)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
      } loc(#loc260)
    } loc(#loc259)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc261)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc261)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc261)
  } loc(#loc257)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc264)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc264)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc264)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %5 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc255)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %7 = cir.call @goodG2B1Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc144)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    cir.scope {
      %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc269)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc152)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc152)
      %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc153)
      cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc270)
      cir.scope {
        %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc158)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc159)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc159)
        %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc272)
        %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc160)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc162)
          %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc163)
        } loc(#loc273)
      } loc(#loc271)
    } loc(#loc268)
    cir.return loc(#loc134)
  } loc(#loc262)
  cir.global "private"  internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc274)
  cir.func internal private  @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc168, #loc169])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc276)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc167)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.scope {
      %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc274)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc173)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc173)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc175)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
        %9 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc177)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc177)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc175)
      } loc(#loc278)
    } loc(#loc277)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc279)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc279)
  } loc(#loc275)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc281)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc282)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc282)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc282)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc186)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %5 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc274)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
    %7 = cir.call @goodG2B2Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc191)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
    cir.scope {
      %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc287)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc199)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc199)
      %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc200)
      cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc288)
      cir.scope {
        %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc205)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc206)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc206)
        %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc290)
        %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc207)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc209)
          %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc210)
        } loc(#loc291)
      } loc(#loc289)
    } loc(#loc286)
    cir.return loc(#loc181)
  } loc(#loc280)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_popen_21.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":46:1)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":46:24)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":264:1)
#loc6 = loc("/usr/include/stdio.h":266:3)
#loc7 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":59:31)
#loc8 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":59:41)
#loc9 = loc("/usr/include/stdio.h":654:1)
#loc10 = loc("/usr/include/stdio.h":655:59)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":65:35)
#loc14 = loc("/usr/include/stdio.h":184:1)
#loc15 = loc("/usr/include/stdio.h":184:36)
#loc16 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":48:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":75:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":49:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":50:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":73:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":50:8)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":51:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":52:9)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":72:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":54:13)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":54:41)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":55:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":55:20)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":54:30)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":54:37)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":57:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":71:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":57:17)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":57:21)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":57:31)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":57:29)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":58:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":59:25)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":59:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":59:44)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":60:17)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":70:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":60:21)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":60:30)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":60:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":61:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":63:21)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":68:21)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":63:31)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":63:36)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":63:35)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":63:51)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":63:55)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":63:65)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":63:25)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":63:75)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":63:72)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":64:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":65:25)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":67:41)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":67:25)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":67:30)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":67:37)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":69:28)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":69:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":74:12)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":74:5)
#loc70 = loc("/usr/include/stdio.h":903:1)
#loc71 = loc("/usr/include/stdio.h":904:3)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":87:28)
#loc73 = loc("/usr/include/stdio.h":897:1)
#loc74 = loc("/usr/include/stdio.h":897:36)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":77:1)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":93:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":79:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":79:12)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":80:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":80:26)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":81:12)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":81:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":82:17)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":82:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":83:22)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":83:12)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":83:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":83:26)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":84:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":92:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":85:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":85:15)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":87:22)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":87:16)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":87:9)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":87:31)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":88:9)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":91:9)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":88:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":88:21)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":88:18)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":89:9)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":90:20)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":90:13)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":166:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":170:1)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":168:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":168:14)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":169:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":169:14)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":100:1)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":100:29)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":109:19)
#loc114 = loc("/usr/include/string.h":149:1)
#loc115 = loc("/usr/include/string.h":150:14)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":114:22)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":104:1)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":117:1)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":105:1)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":106:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":115:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":106:8)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":107:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":110:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":112:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":109:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":114:9)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":114:16)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":116:12)
#loc132 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":116:5)
#loc133 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":119:1)
#loc134 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":135:1)
#loc135 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":121:5)
#loc136 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":121:12)
#loc137 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":122:5)
#loc138 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":122:26)
#loc139 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":123:12)
#loc140 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":123:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":124:22)
#loc142 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":124:5)
#loc143 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":125:27)
#loc144 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":125:12)
#loc145 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":125:5)
#loc146 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":125:31)
#loc147 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":126:5)
#loc148 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":134:5)
#loc149 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":127:9)
#loc150 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":127:15)
#loc151 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":129:22)
#loc152 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":129:28)
#loc153 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":129:16)
#loc154 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":129:9)
#loc155 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":129:31)
#loc156 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":130:9)
#loc157 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":133:9)
#loc158 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":130:13)
#loc159 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":130:21)
#loc160 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":130:18)
#loc161 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":131:9)
#loc162 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":132:20)
#loc163 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":132:13)
#loc164 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":101:1)
#loc165 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":101:29)
#loc166 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":138:1)
#loc167 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":146:1)
#loc170 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":139:1)
#loc171 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":140:5)
#loc172 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":144:5)
#loc173 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":140:8)
#loc174 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":141:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":143:9)
#loc176 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":143:16)
#loc177 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":143:22)
#loc178 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":145:12)
#loc179 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":145:5)
#loc180 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":148:1)
#loc181 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":164:1)
#loc182 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":150:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":150:12)
#loc184 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":151:5)
#loc185 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":151:26)
#loc186 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":152:12)
#loc187 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":152:5)
#loc188 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":153:22)
#loc189 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":153:5)
#loc190 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":154:27)
#loc191 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":154:12)
#loc192 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":154:5)
#loc193 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":154:31)
#loc194 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":155:5)
#loc195 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":163:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":156:9)
#loc197 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":156:15)
#loc198 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":158:22)
#loc199 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":158:28)
#loc200 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":158:16)
#loc201 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":158:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":158:31)
#loc203 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":159:9)
#loc204 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":162:9)
#loc205 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":159:13)
#loc206 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":159:21)
#loc207 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":159:18)
#loc208 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":160:9)
#loc209 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":161:20)
#loc210 = loc("CWE78_OS_Command_Injection__char_file_popen_21.c":161:13)
#loc211 = loc(fused[#loc1, #loc2])
#loc212 = loc(fused[#loc3, #loc4])
#loc213 = loc(fused[#loc5, #loc6])
#loc214 = loc(fused[#loc9, #loc10])
#loc215 = loc(fused[#loc11, #loc12])
#loc216 = loc(fused[#loc14, #loc15])
#loc217 = loc(fused[#loc16, #loc17])
#loc219 = loc(fused[#loc21, #loc22])
#loc220 = loc(fused[#loc24, #loc22])
#loc221 = loc(fused[#loc25, #loc26])
#loc222 = loc(fused[#loc27, #loc28])
#loc223 = loc(fused[#loc29, #loc30])
#loc224 = loc(fused[#loc33, #loc34])
#loc225 = loc(fused[#loc35, #loc36])
#loc226 = loc(fused[#loc35, #loc37])
#loc227 = loc(fused[#loc39, #loc34])
#loc228 = loc(fused[#loc41, #loc42])
#loc229 = loc(fused[#loc43, #loc44])
#loc230 = loc(fused[#loc45, #loc46])
#loc231 = loc(fused[#loc48, #loc44])
#loc232 = loc(fused[#loc49, #loc50])
#loc233 = loc(fused[#loc54, #loc55])
#loc234 = loc(fused[#loc57, #loc58])
#loc235 = loc(fused[#loc60, #loc50])
#loc236 = loc(fused[#loc63, #loc62])
#loc237 = loc(fused[#loc69, #loc68])
#loc238 = loc(fused[#loc70, #loc71])
#loc239 = loc(fused[#loc73, #loc74])
#loc240 = loc(fused[#loc75, #loc76])
#loc241 = loc(fused[#loc77, #loc78])
#loc242 = loc(fused[#loc79, #loc80])
#loc243 = loc(fused[#loc82, #loc81])
#loc244 = loc(fused[#loc84, #loc83])
#loc245 = loc(fused[#loc87, #loc88])
#loc246 = loc(fused[#loc89, #loc90])
#loc247 = loc(fused[#loc91, #loc92])
#loc248 = loc(fused[#loc95, #loc96])
#loc249 = loc(fused[#loc97, #loc98])
#loc250 = loc(fused[#loc99, #loc100])
#loc251 = loc(fused[#loc102, #loc98])
#loc252 = loc(fused[#loc105, #loc106])
#loc253 = loc(fused[#loc107, #loc108])
#loc254 = loc(fused[#loc109, #loc110])
#loc255 = loc(fused[#loc111, #loc112])
#loc256 = loc(fused[#loc114, #loc115])
#loc257 = loc(fused[#loc117, #loc118])
#loc259 = loc(fused[#loc122, #loc123])
#loc260 = loc(fused[#loc125, #loc126, #loc127, #loc123])
#loc261 = loc(fused[#loc132, #loc131])
#loc262 = loc(fused[#loc133, #loc134])
#loc263 = loc(fused[#loc135, #loc136])
#loc264 = loc(fused[#loc137, #loc138])
#loc265 = loc(fused[#loc140, #loc139])
#loc266 = loc(fused[#loc142, #loc141])
#loc267 = loc(fused[#loc145, #loc146])
#loc268 = loc(fused[#loc147, #loc148])
#loc269 = loc(fused[#loc149, #loc150])
#loc270 = loc(fused[#loc154, #loc155])
#loc271 = loc(fused[#loc156, #loc157])
#loc272 = loc(fused[#loc158, #loc159])
#loc273 = loc(fused[#loc161, #loc157])
#loc274 = loc(fused[#loc164, #loc165])
#loc275 = loc(fused[#loc166, #loc167])
#loc277 = loc(fused[#loc171, #loc172])
#loc278 = loc(fused[#loc174, #loc172])
#loc279 = loc(fused[#loc179, #loc178])
#loc280 = loc(fused[#loc180, #loc181])
#loc281 = loc(fused[#loc182, #loc183])
#loc282 = loc(fused[#loc184, #loc185])
#loc283 = loc(fused[#loc187, #loc186])
#loc284 = loc(fused[#loc189, #loc188])
#loc285 = loc(fused[#loc192, #loc193])
#loc286 = loc(fused[#loc194, #loc195])
#loc287 = loc(fused[#loc196, #loc197])
#loc288 = loc(fused[#loc201, #loc202])
#loc289 = loc(fused[#loc203, #loc204])
#loc290 = loc(fused[#loc205, #loc206])
#loc291 = loc(fused[#loc208, #loc204])
