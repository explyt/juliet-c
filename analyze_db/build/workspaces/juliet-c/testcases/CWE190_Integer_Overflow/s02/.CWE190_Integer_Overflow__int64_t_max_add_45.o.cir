!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_max_add_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int64_t_max_add_45_badData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc93)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_max_add_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc95)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc7)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc96)
    %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc9)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc97)
    %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc11)
    %4 = cir.get_global @CWE190_Integer_Overflow__int64_t_max_add_45_badData : !cir.ptr<!s64i> loc(#loc93)
    cir.store %3, %4 : !s64i, !cir.ptr<!s64i> loc(#loc98)
    %5 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc99)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc13)
    cir.return loc(#loc4)
  } loc(#loc94)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_max_add_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc101)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc17)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc102)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    cir.return loc(#loc16)
  } loc(#loc100)
  cir.func private @printLongLongLine(!s64i) loc(#loc103)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.get_global @CWE190_Integer_Overflow__int64_t_max_add_45_badData : !cir.ptr<!s64i> loc(#loc93)
    %3 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc28)
    cir.store %3, %1 : !s64i, !cir.ptr<!s64i> loc(#loc106)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc31)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc26)
    %7 = cir.binop(add, %4, %6) nsw : !s64i loc(#loc31)
    cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc105)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc32)
    cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc33)
    cir.br ^bb2 loc(#loc30)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc24)
  } loc(#loc104)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int64_t_max_add_45_goodG2BData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc108)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc40)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc111)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc42)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc112)
    %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc44)
    %5 = cir.get_global @CWE190_Integer_Overflow__int64_t_max_add_45_goodG2BData : !cir.ptr<!s64i> loc(#loc108)
    cir.store %4, %5 : !s64i, !cir.ptr<!s64i> loc(#loc113)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc114)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    cir.return loc(#loc37)
  } loc(#loc109)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc117)
    %2 = cir.get_global @CWE190_Integer_Overflow__int64_t_max_add_45_goodG2BData : !cir.ptr<!s64i> loc(#loc108)
    %3 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc53)
    cir.store %3, %1 : !s64i, !cir.ptr<!s64i> loc(#loc117)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc56)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc51)
    %7 = cir.binop(add, %4, %6) nsw : !s64i loc(#loc56)
    cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc116)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc57)
    cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc58)
    cir.br ^bb2 loc(#loc55)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc49)
  } loc(#loc115)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int64_t_max_add_45_goodB2GData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc119)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc65)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc122)
    %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc67)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc123)
    %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc69)
    %4 = cir.get_global @CWE190_Integer_Overflow__int64_t_max_add_45_goodB2GData : !cir.ptr<!s64i> loc(#loc119)
    cir.store %3, %4 : !s64i, !cir.ptr<!s64i> loc(#loc124)
    %5 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<()>> loc(#loc125)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc71)
    cir.return loc(#loc62)
  } loc(#loc120)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc75)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.get_global @CWE190_Integer_Overflow__int64_t_max_add_45_goodB2GData : !cir.ptr<!s64i> loc(#loc119)
    %3 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc81)
    cir.store %3, %1 : !s64i, !cir.ptr<!s64i> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc84)
    %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc85)
    %6 = cir.cmp(lt, %4, %5) : !s64i, !cir.bool loc(#loc131)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc89)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc79)
    %10 = cir.binop(add, %7, %9) nsw : !s64i loc(#loc89)
    cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc128)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc90)
    cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc91)
    cir.br ^bb4 loc(#loc87)
  ^bb3:  // pred: ^bb1
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc75)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc83)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc77)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_max_add_45.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":20:1)
#loc2 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":20:16)
#loc3 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":36:1)
#loc4 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":44:1)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":38:5)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":38:13)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":39:12)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":39:5)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":41:12)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":41:5)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":42:59)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":42:5)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":43:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":43:13)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":97:1)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":101:1)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":99:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":99:13)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":100:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":100:13)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":26:1)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":34:1)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":31:9)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":31:33)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":28:5)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":28:20)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":29:5)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":33:5)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":31:26)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":32:27)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":32:9)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":21:1)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":21:16)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":61:1)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":69:1)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":63:5)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":63:13)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":64:12)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":64:5)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":66:12)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":66:5)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":67:63)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":67:5)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":68:5)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":68:17)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":51:1)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":59:1)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":56:9)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":56:33)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":53:5)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":53:20)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":54:5)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":58:5)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":56:26)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":57:27)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":57:9)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":22:1)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":22:16)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":87:1)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":95:1)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":89:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":89:13)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":90:12)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":90:5)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":92:12)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":92:5)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":93:63)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":93:5)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":94:5)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":94:17)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":83:19)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":72:1)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":85:1)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":78:9)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":78:33)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":74:5)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":74:20)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":76:5)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":84:5)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":76:9)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":76:16)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":77:5)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":80:5)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":82:5)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":78:26)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":79:27)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":79:9)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_max_add_45.c":83:9)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc5, #loc6])
#loc96 = loc(fused[#loc8, #loc7])
#loc97 = loc(fused[#loc10, #loc9])
#loc98 = loc(fused[#loc12, #loc11])
#loc99 = loc(fused[#loc13, #loc14])
#loc100 = loc(fused[#loc15, #loc16])
#loc101 = loc(fused[#loc17, #loc18])
#loc102 = loc(fused[#loc19, #loc20])
#loc103 = loc(fused[#loc21, #loc22])
#loc104 = loc(fused[#loc23, #loc24])
#loc105 = loc(fused[#loc25, #loc26])
#loc106 = loc(fused[#loc27, #loc28])
#loc107 = loc(fused[#loc29, #loc30])
#loc108 = loc(fused[#loc34, #loc35])
#loc109 = loc(fused[#loc36, #loc37])
#loc110 = loc(fused[#loc38, #loc39])
#loc111 = loc(fused[#loc41, #loc40])
#loc112 = loc(fused[#loc43, #loc42])
#loc113 = loc(fused[#loc45, #loc44])
#loc114 = loc(fused[#loc46, #loc47])
#loc115 = loc(fused[#loc48, #loc49])
#loc116 = loc(fused[#loc50, #loc51])
#loc117 = loc(fused[#loc52, #loc53])
#loc118 = loc(fused[#loc54, #loc55])
#loc119 = loc(fused[#loc59, #loc60])
#loc120 = loc(fused[#loc61, #loc62])
#loc121 = loc(fused[#loc63, #loc64])
#loc122 = loc(fused[#loc66, #loc65])
#loc123 = loc(fused[#loc68, #loc67])
#loc124 = loc(fused[#loc70, #loc69])
#loc125 = loc(fused[#loc71, #loc72])
#loc126 = loc(fused[#loc73, #loc74])
#loc127 = loc(fused[#loc76, #loc77])
#loc128 = loc(fused[#loc78, #loc79])
#loc129 = loc(fused[#loc80, #loc81])
#loc130 = loc(fused[#loc82, #loc83])
#loc131 = loc(fused[#loc84, #loc85])
#loc132 = loc(fused[#loc86, #loc87, #loc88, #loc83])
