!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc167)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto  @CWE401_Memory_Leak__strdup_char_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc14)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc174)
          %4 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc174)
          cir.store %4, %3 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc174)
          %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc19)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc20)
          %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc19)
          cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc24)
        } loc(#loc173)
        cir.break loc(#loc25)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc26)
        cir.break loc(#loc27)
      }
      ] loc(#loc12)
    } loc(#loc172)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc30)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        cir.break loc(#loc31)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc32)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc32)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc33)
        cir.break loc(#loc34)
      }
      ] loc(#loc28)
    } loc(#loc176)
    cir.return loc(#loc7)
  } loc(#loc169)
  cir.func no_proto  @CWE401_Memory_Leak__strdup_char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc36)
  } loc(#loc177)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc182)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc51)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc55)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc188)
          %4 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc188)
          cir.store %4, %3 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc188)
          %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc60)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc61)
          %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc60)
          cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc65)
        } loc(#loc187)
        cir.break loc(#loc66)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc68)
        cir.break loc(#loc69)
      }
      ] loc(#loc53)
    } loc(#loc186)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc72)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc74)
        cir.break loc(#loc75)
      },
      case (default) {
        %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc76)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
        cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
        cir.break loc(#loc78)
      }
      ] loc(#loc70)
    } loc(#loc190)
    cir.return loc(#loc48)
  } loc(#loc183)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc87)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc196)
          %4 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc196)
          cir.store %4, %3 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc196)
          %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc92)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc93)
          %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
          cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc97)
        } loc(#loc195)
        cir.break loc(#loc98)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc100)
        cir.break loc(#loc101)
      }
      ] loc(#loc85)
    } loc(#loc194)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc104)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc105)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
        cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
        cir.break loc(#loc107)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc108)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc108)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc109)
        cir.break loc(#loc110)
      }
      ] loc(#loc102)
    } loc(#loc198)
    cir.return loc(#loc80)
  } loc(#loc191)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc199)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc113)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc118)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc122)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc124)
        cir.break loc(#loc125)
      },
      case (default) {
        %3 = cir.const #cir.int<100> : !s32i loc(#loc126)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc126)
        %5 = cir.const #cir.int<1> : !u64i loc(#loc126)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc126)
        %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc126)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc126)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
        cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
        %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc128)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
        %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc113)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc113)
        %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc131)
        cir.break loc(#loc132)
      }
      ] loc(#loc120)
    } loc(#loc203)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc135)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        cir.break loc(#loc136)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc137)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc137)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc138)
        cir.break loc(#loc139)
      }
      ] loc(#loc133)
    } loc(#loc205)
    cir.return loc(#loc115)
  } loc(#loc200)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc144)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc148)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<100> : !s32i loc(#loc149)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc149)
        %5 = cir.const #cir.int<1> : !u64i loc(#loc149)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc149)
        %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc149)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc149)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
        cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
        %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc151)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
        %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc153)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc153)
        %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc155)
        cir.break loc(#loc156)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc157)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc157)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc158)
        cir.break loc(#loc159)
      }
      ] loc(#loc146)
    } loc(#loc209)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc162)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        cir.break loc(#loc163)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc164)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc164)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc165)
        cir.break loc(#loc166)
      }
      ] loc(#loc160)
    } loc(#loc211)
    cir.return loc(#loc141)
  } loc(#loc206)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_15.c":0:0)
#loc1 = loc("/usr/include/string.h":187:1)
#loc2 = loc("/usr/include/string.h":188:35)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE401_Memory_Leak__strdup_char_15.c":41:19)
#loc6 = loc("CWE401_Memory_Leak__strdup_char_15.c":24:1)
#loc7 = loc("CWE401_Memory_Leak__strdup_char_15.c":56:1)
#loc8 = loc("CWE401_Memory_Leak__strdup_char_15.c":26:5)
#loc9 = loc("CWE401_Memory_Leak__strdup_char_15.c":26:12)
#loc10 = loc("CWE401_Memory_Leak__strdup_char_15.c":27:12)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_15.c":27:5)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_15.c":28:5)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_15.c":43:5)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_15.c":28:12)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_15.c":31:5)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_15.c":37:5)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_15.c":32:9)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_15.c":32:27)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:16)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:23)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:9)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:31)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_15.c":36:19)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_15.c":36:9)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_15.c":38:5)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_15.c":41:9)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_15.c":42:9)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_15.c":44:5)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_15.c":55:5)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_15.c":44:12)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_15.c":50:9)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_15.c":53:19)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_15.c":53:9)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_15.c":54:9)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_15.c":196:1)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_15.c":202:1)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_15.c":198:5)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_15.c":198:14)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_15.c":199:5)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_15.c":199:14)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_15.c":200:5)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_15.c":200:14)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_15.c":201:5)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_15.c":201:14)
#loc45 = loc("/usr/include/stdlib.h":687:1)
#loc46 = loc("/usr/include/stdlib.h":687:32)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_15.c":63:1)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_15.c":94:1)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_15.c":65:5)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_15.c":65:12)
#loc51 = loc("CWE401_Memory_Leak__strdup_char_15.c":66:12)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_15.c":66:5)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_15.c":67:5)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_15.c":82:5)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_15.c":67:12)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_15.c":70:5)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_15.c":76:5)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_15.c":71:9)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_15.c":71:27)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:16)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:23)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:9)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:31)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_15.c":75:19)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_15.c":75:9)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_15.c":77:5)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_15.c":80:19)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_15.c":80:9)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_15.c":81:9)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_15.c":83:5)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_15.c":93:5)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_15.c":83:12)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_15.c":87:19)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_15.c":87:9)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_15.c":88:9)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_15.c":91:9)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_15.c":91:14)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_15.c":92:9)
#loc79 = loc("CWE401_Memory_Leak__strdup_char_15.c":97:1)
#loc80 = loc("CWE401_Memory_Leak__strdup_char_15.c":128:1)
#loc81 = loc("CWE401_Memory_Leak__strdup_char_15.c":99:5)
#loc82 = loc("CWE401_Memory_Leak__strdup_char_15.c":99:12)
#loc83 = loc("CWE401_Memory_Leak__strdup_char_15.c":100:12)
#loc84 = loc("CWE401_Memory_Leak__strdup_char_15.c":100:5)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_15.c":101:5)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_15.c":116:5)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_15.c":101:12)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_15.c":104:5)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_15.c":110:5)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_15.c":105:9)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_15.c":105:27)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:16)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:23)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:9)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:31)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_15.c":109:19)
#loc97 = loc("CWE401_Memory_Leak__strdup_char_15.c":109:9)
#loc98 = loc("CWE401_Memory_Leak__strdup_char_15.c":111:5)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_15.c":114:19)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_15.c":114:9)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_15.c":115:9)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_15.c":117:5)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_15.c":127:5)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_15.c":117:12)
#loc105 = loc("CWE401_Memory_Leak__strdup_char_15.c":121:9)
#loc106 = loc("CWE401_Memory_Leak__strdup_char_15.c":121:14)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_15.c":122:9)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_15.c":125:19)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_15.c":125:9)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_15.c":126:9)
#loc111 = loc("/usr/include/string.h":141:1)
#loc112 = loc("/usr/include/string.h":142:14)
#loc113 = loc("CWE401_Memory_Leak__strdup_char_15.c":145:22)
#loc114 = loc("CWE401_Memory_Leak__strdup_char_15.c":131:1)
#loc115 = loc("CWE401_Memory_Leak__strdup_char_15.c":161:1)
#loc116 = loc("CWE401_Memory_Leak__strdup_char_15.c":133:5)
#loc117 = loc("CWE401_Memory_Leak__strdup_char_15.c":133:12)
#loc118 = loc("CWE401_Memory_Leak__strdup_char_15.c":134:12)
#loc119 = loc("CWE401_Memory_Leak__strdup_char_15.c":134:5)
#loc120 = loc("CWE401_Memory_Leak__strdup_char_15.c":135:5)
#loc121 = loc("CWE401_Memory_Leak__strdup_char_15.c":148:5)
#loc122 = loc("CWE401_Memory_Leak__strdup_char_15.c":135:12)
#loc123 = loc("CWE401_Memory_Leak__strdup_char_15.c":139:19)
#loc124 = loc("CWE401_Memory_Leak__strdup_char_15.c":139:9)
#loc125 = loc("CWE401_Memory_Leak__strdup_char_15.c":140:9)
#loc126 = loc("CWE401_Memory_Leak__strdup_char_15.c":143:24)
#loc127 = loc("CWE401_Memory_Leak__strdup_char_15.c":143:9)
#loc128 = loc("CWE401_Memory_Leak__strdup_char_15.c":145:9)
#loc129 = loc("CWE401_Memory_Leak__strdup_char_15.c":145:16)
#loc130 = loc("CWE401_Memory_Leak__strdup_char_15.c":146:19)
#loc131 = loc("CWE401_Memory_Leak__strdup_char_15.c":146:9)
#loc132 = loc("CWE401_Memory_Leak__strdup_char_15.c":147:9)
#loc133 = loc("CWE401_Memory_Leak__strdup_char_15.c":149:5)
#loc134 = loc("CWE401_Memory_Leak__strdup_char_15.c":160:5)
#loc135 = loc("CWE401_Memory_Leak__strdup_char_15.c":149:12)
#loc136 = loc("CWE401_Memory_Leak__strdup_char_15.c":155:9)
#loc137 = loc("CWE401_Memory_Leak__strdup_char_15.c":158:19)
#loc138 = loc("CWE401_Memory_Leak__strdup_char_15.c":158:9)
#loc139 = loc("CWE401_Memory_Leak__strdup_char_15.c":159:9)
#loc140 = loc("CWE401_Memory_Leak__strdup_char_15.c":164:1)
#loc141 = loc("CWE401_Memory_Leak__strdup_char_15.c":194:1)
#loc142 = loc("CWE401_Memory_Leak__strdup_char_15.c":166:5)
#loc143 = loc("CWE401_Memory_Leak__strdup_char_15.c":166:12)
#loc144 = loc("CWE401_Memory_Leak__strdup_char_15.c":167:12)
#loc145 = loc("CWE401_Memory_Leak__strdup_char_15.c":167:5)
#loc146 = loc("CWE401_Memory_Leak__strdup_char_15.c":168:5)
#loc147 = loc("CWE401_Memory_Leak__strdup_char_15.c":181:5)
#loc148 = loc("CWE401_Memory_Leak__strdup_char_15.c":168:12)
#loc149 = loc("CWE401_Memory_Leak__strdup_char_15.c":172:24)
#loc150 = loc("CWE401_Memory_Leak__strdup_char_15.c":172:9)
#loc151 = loc("CWE401_Memory_Leak__strdup_char_15.c":174:9)
#loc152 = loc("CWE401_Memory_Leak__strdup_char_15.c":174:16)
#loc153 = loc("CWE401_Memory_Leak__strdup_char_15.c":174:22)
#loc154 = loc("CWE401_Memory_Leak__strdup_char_15.c":175:19)
#loc155 = loc("CWE401_Memory_Leak__strdup_char_15.c":175:9)
#loc156 = loc("CWE401_Memory_Leak__strdup_char_15.c":176:9)
#loc157 = loc("CWE401_Memory_Leak__strdup_char_15.c":179:19)
#loc158 = loc("CWE401_Memory_Leak__strdup_char_15.c":179:9)
#loc159 = loc("CWE401_Memory_Leak__strdup_char_15.c":180:9)
#loc160 = loc("CWE401_Memory_Leak__strdup_char_15.c":182:5)
#loc161 = loc("CWE401_Memory_Leak__strdup_char_15.c":193:5)
#loc162 = loc("CWE401_Memory_Leak__strdup_char_15.c":182:12)
#loc163 = loc("CWE401_Memory_Leak__strdup_char_15.c":188:9)
#loc164 = loc("CWE401_Memory_Leak__strdup_char_15.c":191:19)
#loc165 = loc("CWE401_Memory_Leak__strdup_char_15.c":191:9)
#loc166 = loc("CWE401_Memory_Leak__strdup_char_15.c":192:9)
#loc167 = loc(fused[#loc1, #loc2])
#loc168 = loc(fused[#loc3, #loc4])
#loc169 = loc(fused[#loc6, #loc7])
#loc170 = loc(fused[#loc8, #loc9])
#loc171 = loc(fused[#loc11, #loc10])
#loc172 = loc(fused[#loc12, #loc13])
#loc173 = loc(fused[#loc15, #loc16])
#loc174 = loc(fused[#loc17, #loc18])
#loc175 = loc(fused[#loc21, #loc22])
#loc176 = loc(fused[#loc28, #loc29])
#loc177 = loc(fused[#loc35, #loc36])
#loc178 = loc(fused[#loc37, #loc38])
#loc179 = loc(fused[#loc39, #loc40])
#loc180 = loc(fused[#loc41, #loc42])
#loc181 = loc(fused[#loc43, #loc44])
#loc182 = loc(fused[#loc45, #loc46])
#loc183 = loc(fused[#loc47, #loc48])
#loc184 = loc(fused[#loc49, #loc50])
#loc185 = loc(fused[#loc52, #loc51])
#loc186 = loc(fused[#loc53, #loc54])
#loc187 = loc(fused[#loc56, #loc57])
#loc188 = loc(fused[#loc58, #loc59])
#loc189 = loc(fused[#loc62, #loc63])
#loc190 = loc(fused[#loc70, #loc71])
#loc191 = loc(fused[#loc79, #loc80])
#loc192 = loc(fused[#loc81, #loc82])
#loc193 = loc(fused[#loc84, #loc83])
#loc194 = loc(fused[#loc85, #loc86])
#loc195 = loc(fused[#loc88, #loc89])
#loc196 = loc(fused[#loc90, #loc91])
#loc197 = loc(fused[#loc94, #loc95])
#loc198 = loc(fused[#loc102, #loc103])
#loc199 = loc(fused[#loc111, #loc112])
#loc200 = loc(fused[#loc114, #loc115])
#loc201 = loc(fused[#loc116, #loc117])
#loc202 = loc(fused[#loc119, #loc118])
#loc203 = loc(fused[#loc120, #loc121])
#loc204 = loc(fused[#loc127, #loc126])
#loc205 = loc(fused[#loc133, #loc134])
#loc206 = loc(fused[#loc140, #loc141])
#loc207 = loc(fused[#loc142, #loc143])
#loc208 = loc(fused[#loc145, #loc144])
#loc209 = loc(fused[#loc146, #loc147])
#loc210 = loc(fused[#loc150, #loc149])
#loc211 = loc(fused[#loc160, #loc161])
