!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc146)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc147)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc148)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc150)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc153)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc154)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc22)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.goto "source" loc(#loc156)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc26)
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc153)
    cir.store %5, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc153)
    cir.scope {
      %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
      %8 = cir.const #cir.int<3> : !s32i loc(#loc30)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc30)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc30)
      %12 = cir.const #cir.int<2> : !s32i loc(#loc30)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc30)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc30)
      %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc30)
      %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc147)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
      %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
      %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc158)
      %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc34)
      cir.if %22 {
        %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
        %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
        cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
      } else {
        %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
        %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
        cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc42)
      } loc(#loc159)
    } loc(#loc157)
    cir.goto "sink" loc(#loc161)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc45)
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc154)
    cir.store %6, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc154)
    cir.scope {
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc49)
      %9 = cir.cmp(ge, %7, %8) : !s32i, !s32i loc(#loc163)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc50)
      cir.if %10 {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
        %12 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc55)
        %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc55)
        %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc55)
        cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc56)
      } else {
        %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } loc(#loc164)
    } loc(#loc162)
    cir.return loc(#loc14)
  } loc(#loc151)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc59)
  } loc(#loc165)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc64)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc170)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc171)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc74)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.goto "source" loc(#loc173)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc78)
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc170)
    cir.store %5, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc170)
    cir.scope {
      %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc81)
      %8 = cir.const #cir.int<3> : !s32i loc(#loc82)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc82)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc82)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc82)
      %12 = cir.const #cir.int<2> : !s32i loc(#loc82)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc82)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc82)
      %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc82)
      %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc147)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
      %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc84)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
      %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc175)
      %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc86)
      cir.if %22 {
        %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
        %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc91)
        cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
      } else {
        %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
        %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
        cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc95)
      } loc(#loc176)
    } loc(#loc174)
    cir.goto "sink" loc(#loc178)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc98)
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc171)
    cir.store %6, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc171)
    cir.scope {
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc102)
      %9 = cir.cmp(ge, %7, %8) : !s32i, !s32i loc(#loc180)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc103)
      %11 = cir.ternary(%10, true {
        %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %13 = cir.const #cir.int<10> : !s32i loc(#loc106)
        %14 = cir.cmp(lt, %12, %13) : !s32i, !s32i loc(#loc181)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc108)
        %16 = cir.ternary(%15, true {
          %17 = cir.const #true loc(#loc104)
          cir.yield %17 : !cir.bool loc(#loc104)
        }, false {
          %17 = cir.const #false loc(#loc104)
          cir.yield %17 : !cir.bool loc(#loc104)
        }) : (!cir.bool) -> !cir.bool loc(#loc104)
        cir.yield %16 : !cir.bool loc(#loc104)
      }, false {
        %12 = cir.const #false loc(#loc104)
        cir.yield %12 : !cir.bool loc(#loc104)
      }) : (!cir.bool) -> !cir.bool loc(#loc104)
      cir.if %11 {
        %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc113)
        %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc113)
        %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc113)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc114)
      } else {
        %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc64)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc64)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc115)
      } loc(#loc182)
    } loc(#loc179)
    cir.return loc(#loc66)
  } loc(#loc168)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc185)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc123)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.goto "source" loc(#loc187)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc127)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc128)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    cir.goto "sink" loc(#loc189)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc132)
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc185)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc185)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc136)
      %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc191)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc137)
      cir.if %9 {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
        %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc142)
        %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc142)
        %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc142)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc143)
      } else {
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc144)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc144)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc145)
      } loc(#loc192)
    } loc(#loc190)
    cir.return loc(#loc117)
  } loc(#loc183)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":41:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":56:23)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":59:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":26:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":32:9)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":32:45)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":47:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":47:30)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":28:13)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":28:12)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":28:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":29:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":29:10)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":30:1)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":42:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:19)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:32)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:49)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:59)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:56)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":35:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":38:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":40:9)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":37:25)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":37:20)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":37:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":37:36)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":41:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":44:5)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":44:10)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":45:1)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":50:9)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":57:9)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":50:13)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":50:21)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":50:18)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":51:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":53:9)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":55:9)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":52:33)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":52:26)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":52:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":56:13)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":130:1)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":134:1)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":132:5)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":132:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":133:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":133:13)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":97:23)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":66:1)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":100:1)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":68:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":68:9)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":74:9)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":74:45)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":89:9)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":89:30)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":70:13)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":70:12)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":70:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":71:5)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":71:10)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":72:1)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:9)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":84:9)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:19)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:32)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:49)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:13)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:59)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:56)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":77:9)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":80:9)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":82:9)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":79:25)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":79:20)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":79:13)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":79:36)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":83:23)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":83:13)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":86:5)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":86:10)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":87:1)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:9)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":98:9)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:13)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:21)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:18)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:23)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:26)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:34)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:36)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:31)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":92:9)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":94:9)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":96:9)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":93:33)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":93:26)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":93:13)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":97:13)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":103:1)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":128:1)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":105:5)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":105:9)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":116:9)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":116:30)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":107:13)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":107:12)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":107:5)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":108:5)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":108:10)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":109:1)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":112:12)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":112:5)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":113:5)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":113:10)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":114:1)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":119:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":126:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":119:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":119:21)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":119:18)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":120:9)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":122:9)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":124:9)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":121:33)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":121:26)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":121:13)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":125:23)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":125:13)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc10, #loc11])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc15, #loc16])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc19, #loc20])
#loc155 = loc(fused[#loc23, #loc21])
#loc156 = loc(fused[#loc24, #loc25])
#loc157 = loc(fused[#loc27, #loc28])
#loc158 = loc(fused[#loc32, #loc33])
#loc159 = loc(fused[#loc35, #loc36, #loc37, #loc28])
#loc160 = loc(fused[#loc40, #loc41])
#loc161 = loc(fused[#loc43, #loc44])
#loc162 = loc(fused[#loc46, #loc47])
#loc163 = loc(fused[#loc48, #loc49])
#loc164 = loc(fused[#loc51, #loc52, #loc53, #loc47])
#loc165 = loc(fused[#loc58, #loc59])
#loc166 = loc(fused[#loc60, #loc61])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc65, #loc66])
#loc169 = loc(fused[#loc67, #loc68])
#loc170 = loc(fused[#loc69, #loc70])
#loc171 = loc(fused[#loc71, #loc72])
#loc172 = loc(fused[#loc75, #loc73])
#loc173 = loc(fused[#loc76, #loc77])
#loc174 = loc(fused[#loc79, #loc80])
#loc175 = loc(fused[#loc84, #loc85])
#loc176 = loc(fused[#loc87, #loc88, #loc89, #loc80])
#loc177 = loc(fused[#loc92, #loc93])
#loc178 = loc(fused[#loc96, #loc97])
#loc179 = loc(fused[#loc99, #loc100])
#loc180 = loc(fused[#loc101, #loc102])
#loc181 = loc(fused[#loc105, #loc107])
#loc182 = loc(fused[#loc109, #loc110, #loc111, #loc100])
#loc183 = loc(fused[#loc116, #loc117])
#loc184 = loc(fused[#loc118, #loc119])
#loc185 = loc(fused[#loc120, #loc121])
#loc186 = loc(fused[#loc124, #loc122])
#loc187 = loc(fused[#loc125, #loc126])
#loc188 = loc(fused[#loc129, #loc128])
#loc189 = loc(fused[#loc130, #loc131])
#loc190 = loc(fused[#loc133, #loc134])
#loc191 = loc(fused[#loc135, #loc136])
#loc192 = loc(fused[#loc138, #loc139, #loc140, #loc134])
