!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc12 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":56:25)
#loc13 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":56:32)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":97:30)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":97:37)
#loc120 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":126:30)
#loc121 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":126:37)
#loc157 = loc(fused[#loc12, #loc13])
#loc183 = loc(fused[#loc82, #loc83])
#loc195 = loc(fused[#loc120, #loc121])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc152)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc153)
  cir.func private  @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc154)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
  cir.func internal private  @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc11)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.scope {
      %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc152)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc17)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc161)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc162)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc25)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc25)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc161)
          %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc7)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc7)
          %14 = cir.call @getenv(%13) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
          cir.store %14, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
            %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !s32i loc(#loc164)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc32)
            cir.if %19 {
              %20 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc34)
              %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc36)
              %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc37)
              %24 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
              %25 = cir.const #cir.int<100> : !s32i loc(#loc39)
              %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc39)
              %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc40)
              %28 = cir.binop(sub, %26, %27) : !u64i loc(#loc166)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc41)
              %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc41)
              %31 = cir.binop(sub, %28, %30) : !u64i loc(#loc167)
              %32 = cir.call @strncat(%23, %24, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
            } loc(#loc165)
          } loc(#loc163)
        } loc(#loc160)
      } loc(#loc159)
    } loc(#loc158)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc168)
  } loc(#loc156)
  cir.func private  @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc169)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc46)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execlp_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc172)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc172)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc172)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %5 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc152)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %7 = cir.call @badSource(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc59)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc46)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc46)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc62)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc62)
    %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc47)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc47)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc64)
    %16 = cir.call @execlp(%9, %11, %13, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc65)
    cir.return loc(#loc49)
  } loc(#loc170)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execlp_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc67)
  } loc(#loc176)
  cir.global "private"  internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc179)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc76)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc181)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc79)
  cir.func internal private  @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc82, #loc83])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc81)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    cir.scope {
      %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc179)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc87)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc87)
      cir.if %6 {
        %7 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc91)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc92)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
        %9 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc79)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc79)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
      } loc(#loc185)
    } loc(#loc184)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc186)
  } loc(#loc182)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc189)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc189)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc189)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc102)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %5 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc179)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %7 = cir.call @goodG2B1Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc107)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc110)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc110)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc111)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc111)
    %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc112)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc112)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
    %16 = cir.call @execlp(%9, %11, %13, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc115)
    cir.return loc(#loc97)
  } loc(#loc187)
  cir.global "private"  internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc193)
  cir.func internal private  @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc120, #loc121])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc195)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc119)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.scope {
      %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc193)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc125)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc127)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
        %9 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc129)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc129)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
      } loc(#loc197)
    } loc(#loc196)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc198)
  } loc(#loc194)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc200)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc201)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc201)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc201)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %5 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc193)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %7 = cir.call @goodG2B2Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc143)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc146)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc146)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc147)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc147)
    %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc148)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc148)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
    %16 = cir.call @execlp(%9, %11, %13, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc151)
    cir.return loc(#loc133)
  } loc(#loc199)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_21.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":54:1)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":54:24)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdlib.h":773:1)
#loc6 = loc("/usr/include/stdlib.h":773:50)
#loc7 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":63:41)
#loc8 = loc("/usr/include/string.h":152:1)
#loc9 = loc("/usr/include/string.h":153:29)
#loc10 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":56:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":73:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":57:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":58:5)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":71:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":58:8)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":59:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":60:9)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":70:9)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":62:13)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":62:41)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":63:13)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":63:53)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":62:30)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":62:37)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":63:34)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":65:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":69:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":65:17)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":65:32)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":65:29)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":66:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":68:17)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":68:25)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":68:30)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":68:29)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":68:39)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":68:52)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":68:56)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":68:64)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":72:12)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":72:5)
#loc44 = loc("/usr/include/unistd.h":605:1)
#loc45 = loc("/usr/include/unistd.h":606:14)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":85:12)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":85:38)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":75:1)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":86:1)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":77:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":77:12)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":78:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":78:28)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":79:12)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":79:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":80:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":80:5)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":81:22)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":81:12)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":81:5)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":81:26)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":85:25)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":85:52)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":85:66)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":85:5)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":149:1)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":153:1)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":151:5)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":151:14)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":152:5)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":152:14)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":93:1)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":93:29)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":102:19)
#loc77 = loc("/usr/include/string.h":149:1)
#loc78 = loc("/usr/include/string.h":150:14)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":107:22)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":97:1)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":110:1)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":98:1)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":99:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":108:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":99:8)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":100:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":103:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":105:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":102:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":107:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":107:16)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":109:12)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":109:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":112:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":123:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":114:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":114:12)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":115:5)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":115:28)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":116:12)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":116:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":117:22)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":117:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":118:27)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":118:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":118:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":118:31)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":122:12)
#loc111 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":122:25)
#loc112 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":122:38)
#loc113 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":122:52)
#loc114 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":122:66)
#loc115 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":122:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":94:1)
#loc117 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":94:29)
#loc118 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":126:1)
#loc119 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":134:1)
#loc122 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":127:1)
#loc123 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":128:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":132:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":128:8)
#loc126 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":129:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":131:9)
#loc128 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":131:16)
#loc129 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":131:22)
#loc130 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":133:12)
#loc131 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":133:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":136:1)
#loc133 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":147:1)
#loc134 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":138:5)
#loc135 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":138:12)
#loc136 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":139:5)
#loc137 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":139:28)
#loc138 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":140:12)
#loc139 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":140:5)
#loc140 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":141:22)
#loc141 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":141:5)
#loc142 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":142:27)
#loc143 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":142:12)
#loc144 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":142:5)
#loc145 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":142:31)
#loc146 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":146:12)
#loc147 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":146:25)
#loc148 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":146:38)
#loc149 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":146:52)
#loc150 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":146:66)
#loc151 = loc("CWE78_OS_Command_Injection__char_environment_execlp_21.c":146:5)
#loc152 = loc(fused[#loc1, #loc2])
#loc153 = loc(fused[#loc3, #loc4])
#loc154 = loc(fused[#loc5, #loc6])
#loc155 = loc(fused[#loc8, #loc9])
#loc156 = loc(fused[#loc10, #loc11])
#loc158 = loc(fused[#loc15, #loc16])
#loc159 = loc(fused[#loc18, #loc16])
#loc160 = loc(fused[#loc19, #loc20])
#loc161 = loc(fused[#loc21, #loc22])
#loc162 = loc(fused[#loc23, #loc24])
#loc163 = loc(fused[#loc28, #loc29])
#loc164 = loc(fused[#loc30, #loc31])
#loc165 = loc(fused[#loc33, #loc29])
#loc166 = loc(fused[#loc39, #loc40])
#loc167 = loc(fused[#loc39, #loc41])
#loc168 = loc(fused[#loc43, #loc42])
#loc169 = loc(fused[#loc44, #loc45])
#loc170 = loc(fused[#loc48, #loc49])
#loc171 = loc(fused[#loc50, #loc51])
#loc172 = loc(fused[#loc52, #loc53])
#loc173 = loc(fused[#loc55, #loc54])
#loc174 = loc(fused[#loc57, #loc56])
#loc175 = loc(fused[#loc60, #loc61])
#loc176 = loc(fused[#loc66, #loc67])
#loc177 = loc(fused[#loc68, #loc69])
#loc178 = loc(fused[#loc70, #loc71])
#loc179 = loc(fused[#loc72, #loc73])
#loc180 = loc(fused[#loc74, #loc75])
#loc181 = loc(fused[#loc77, #loc78])
#loc182 = loc(fused[#loc80, #loc81])
#loc184 = loc(fused[#loc85, #loc86])
#loc185 = loc(fused[#loc88, #loc89, #loc90, #loc86])
#loc186 = loc(fused[#loc95, #loc94])
#loc187 = loc(fused[#loc96, #loc97])
#loc188 = loc(fused[#loc98, #loc99])
#loc189 = loc(fused[#loc100, #loc101])
#loc190 = loc(fused[#loc103, #loc102])
#loc191 = loc(fused[#loc105, #loc104])
#loc192 = loc(fused[#loc108, #loc109])
#loc193 = loc(fused[#loc116, #loc117])
#loc194 = loc(fused[#loc118, #loc119])
#loc196 = loc(fused[#loc123, #loc124])
#loc197 = loc(fused[#loc126, #loc124])
#loc198 = loc(fused[#loc131, #loc130])
#loc199 = loc(fused[#loc132, #loc133])
#loc200 = loc(fused[#loc134, #loc135])
#loc201 = loc(fused[#loc136, #loc137])
#loc202 = loc(fused[#loc139, #loc138])
#loc203 = loc(fused[#loc141, #loc140])
#loc204 = loc(fused[#loc144, #loc145])
