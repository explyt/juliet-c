!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc95)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc96)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc101)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc101)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc104)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc104)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc104)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
          cir.scope {
            %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc28)
            %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
            %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
            %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
            %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
            %14 = cir.call @__isoc99_fscanf(%10, %12, %13) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc28)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc31)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc107)
            cir.if %16 {
              %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc10)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc10)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc33)
            } loc(#loc108)
          } loc(#loc106)
        } loc(#loc103)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc110)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc110)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc110)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
          cir.scope {
            %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc42)
            %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
            %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
            %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc44)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc44)
            %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
            %14 = cir.call @__isoc99_fscanf(%10, %12, %13) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc42)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc46)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc113)
            cir.if %17 {
              %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc48)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc48)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc49)
            } loc(#loc114)
          } loc(#loc112)
        } loc(#loc109)
      } loc(#loc102)
    } loc(#loc100)
    cir.return loc(#loc12)
  } loc(#loc99)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc115)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc119)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc119)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc58)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc58)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc122)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc122)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc122)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
          cir.scope {
            %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc71)
            %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
            %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc72)
            %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc73)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc73)
            %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
            %14 = cir.call @__isoc99_fscanf(%10, %12, %13) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc71)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc75)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc75)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc125)
            cir.if %17 {
              %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc77)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc77)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc78)
            } loc(#loc126)
          } loc(#loc124)
        } loc(#loc121)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc128)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc128)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc128)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
          cir.scope {
            %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc87)
            %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
            %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
            %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc89)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc89)
            %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
            %14 = cir.call @__isoc99_fscanf(%10, %12, %13) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc87)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc91)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc91)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc131)
            cir.if %17 {
              %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc93)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc93)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc94)
            } loc(#loc132)
          } loc(#loc130)
        } loc(#loc127)
      } loc(#loc120)
    } loc(#loc118)
    cir.return loc(#loc55)
  } loc(#loc117)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":35:31)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":37:27)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":24:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":55:1)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":26:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":54:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":26:8)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":26:33)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":27:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":40:5)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":42:5)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":28:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":39:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":31:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":31:36)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":32:13)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":32:27)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":35:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":38:13)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":35:17)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":35:24)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":35:41)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":35:50)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":36:13)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":37:17)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":43:9)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":53:9)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":46:13)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":46:36)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":47:13)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":47:27)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":49:13)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":52:13)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":49:17)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":49:24)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":49:31)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":49:41)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":49:50)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":50:13)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":51:27)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":51:17)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":94:1)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":97:1)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":96:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":96:11)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":62:1)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":92:1)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":64:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":91:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":64:8)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":64:33)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":65:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":77:5)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":79:5)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":66:9)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":76:9)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":69:13)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":69:36)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":70:13)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":70:27)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":72:13)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":75:13)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":72:17)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":72:24)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":72:31)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":72:41)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":72:50)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":73:13)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":74:27)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":74:17)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":80:9)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":90:9)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":83:13)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":83:36)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":84:13)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":84:27)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":86:13)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":89:13)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":86:17)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":86:24)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":86:31)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":86:41)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":86:50)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":87:13)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":88:27)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_12.c":88:17)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc8, #loc9])
#loc99 = loc(fused[#loc11, #loc12])
#loc100 = loc(fused[#loc13, #loc14])
#loc101 = loc(fused[#loc15, #loc16])
#loc102 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc103 = loc(fused[#loc20, #loc21])
#loc104 = loc(fused[#loc22, #loc23])
#loc105 = loc(fused[#loc24, #loc25])
#loc106 = loc(fused[#loc26, #loc27])
#loc107 = loc(fused[#loc28, #loc31])
#loc108 = loc(fused[#loc32, #loc27])
#loc109 = loc(fused[#loc34, #loc35])
#loc110 = loc(fused[#loc36, #loc37])
#loc111 = loc(fused[#loc38, #loc39])
#loc112 = loc(fused[#loc40, #loc41])
#loc113 = loc(fused[#loc42, #loc46])
#loc114 = loc(fused[#loc47, #loc41])
#loc115 = loc(fused[#loc50, #loc51])
#loc116 = loc(fused[#loc52, #loc53])
#loc117 = loc(fused[#loc54, #loc55])
#loc118 = loc(fused[#loc56, #loc57])
#loc119 = loc(fused[#loc58, #loc59])
#loc120 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc121 = loc(fused[#loc63, #loc64])
#loc122 = loc(fused[#loc65, #loc66])
#loc123 = loc(fused[#loc67, #loc68])
#loc124 = loc(fused[#loc69, #loc70])
#loc125 = loc(fused[#loc71, #loc75])
#loc126 = loc(fused[#loc76, #loc70])
#loc127 = loc(fused[#loc79, #loc80])
#loc128 = loc(fused[#loc81, #loc82])
#loc129 = loc(fused[#loc83, #loc84])
#loc130 = loc(fused[#loc85, #loc86])
#loc131 = loc(fused[#loc87, #loc91])
#loc132 = loc(fused[#loc92, #loc86])
