!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":162:10)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":162:14)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":162:20)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":162:32)
#true = #cir.bool<true> : !cir.bool
#loc258 = loc(fused[#loc91, #loc92])
#loc259 = loc(fused[#loc93, #loc94])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc223)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc224)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc225)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc229)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc232)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc232)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc232)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc26)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc27)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc27)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc27)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc27)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc27)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc27)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc224)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc234)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc35)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc38)
        } loc(#loc235)
      } loc(#loc233)
    } loc(#loc231)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc238)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc239)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc238)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc44)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc239)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc241)
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc242)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc242)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc242)
        cir.scope {
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc53)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc54)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc244)
          cir.if %12 {
            %13 = cir.const #cir.int<1> : !s32i loc(#loc58)
            %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc59)
            %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc60)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc60)
            cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc246)
            cir.scope {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc63)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc248)
              cir.for : cond {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc65)
                %19 = cir.const #cir.int<10> : !s32i loc(#loc66)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc249)
                cir.condition(%20) loc(#loc67)
              } body {
                cir.scope {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc69)
                  %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc70)
                  %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc70)
                  %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc70)
                  cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc71)
                } loc(#loc250)
                cir.yield loc(#loc62)
              } step {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc72)
                %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc73)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc251)
                cir.yield loc(#loc247)
              } loc(#loc247)
            } loc(#loc247)
          } else {
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc74)
          } loc(#loc245)
        } loc(#loc243)
      } loc(#loc240)
    } loc(#loc237)
    cir.return loc(#loc14)
  } loc(#loc228)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    cir.return loc(#loc76)
  } loc(#loc252)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc255)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc256)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc88)
  cir.func @main(%arg0: !s32i loc(fused[#loc91, #loc92]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc93, #loc94])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc259)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc95)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc96)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc97)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc97)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc98)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31_good() : () -> () loc(#loc100)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc87)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31_bad() : () -> () loc(#loc104)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc88)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc107)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    cir.return %17 : !s32i loc(#loc262)
  } loc(#loc257)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc264)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc114)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc116)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc268)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc269)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc268)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc269)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc271)
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc272)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc272)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc272)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc132)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc133)
          %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc274)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc137)
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc139)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc139)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc276)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc142)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc278)
              cir.for : cond {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc145)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc279)
                cir.condition(%21) loc(#loc146)
              } body {
                cir.scope {
                  %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                  %20 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc149)
                  %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc149)
                  %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc150)
                } loc(#loc280)
                cir.yield loc(#loc141)
              } step {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc152)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc281)
                cir.yield loc(#loc277)
              } loc(#loc277)
            } loc(#loc277)
          } else {
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc153)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc153)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc154)
          } loc(#loc275)
        } loc(#loc273)
      } loc(#loc270)
    } loc(#loc267)
    cir.return loc(#loc110)
  } loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc155)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc283)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc161)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc286)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc286)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc286)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc169)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc170)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc170)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc170)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc170)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc170)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc170)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc170)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc170)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc224)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc171)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc172)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc288)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc177)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc178)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc181)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc181)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc182)
        } loc(#loc289)
      } loc(#loc287)
    } loc(#loc285)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc292)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc293)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc292)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc188)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc293)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc295)
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc296)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc296)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc296)
        cir.scope {
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc197)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc198)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc298)
          %13 = cir.ternary(%12, true {
            %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc200)
            %15 = cir.const #cir.int<10> : !s32i loc(#loc201)
            %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc299)
            %17 = cir.ternary(%16, true {
              %18 = cir.const #true loc(#loc199)
              cir.yield %18 : !cir.bool loc(#loc199)
            }, false {
              %18 = cir.const #false loc(#loc199)
              cir.yield %18 : !cir.bool loc(#loc199)
            }) : (!cir.bool) -> !cir.bool loc(#loc199)
            cir.yield %17 : !cir.bool loc(#loc199)
          }, false {
            %14 = cir.const #false loc(#loc199)
            cir.yield %14 : !cir.bool loc(#loc199)
          }) : (!cir.bool) -> !cir.bool loc(#loc199)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc206)
            %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc207)
            %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc208)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc208)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc301)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc211)
              cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc303)
              cir.for : cond {
                %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc213)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc214)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc304)
                cir.condition(%21) loc(#loc215)
              } body {
                cir.scope {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc217)
                  %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc218)
                  %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc218)
                  %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc219)
                } loc(#loc305)
                cir.yield loc(#loc210)
              } step {
                %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc221)
                cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc306)
                cir.yield loc(#loc302)
              } loc(#loc302)
            } loc(#loc302)
          } else {
            %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc155)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc155)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc222)
          } loc(#loc300)
        } loc(#loc297)
      } loc(#loc294)
    } loc(#loc291)
    cir.return loc(#loc157)
  } loc(#loc282)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":61:27)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":24:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":65:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":26:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":26:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":28:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":28:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":28:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":29:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":41:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":30:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":30:45)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":32:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":40:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":32:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":32:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":32:49)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":32:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":32:59)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":33:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":36:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":38:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":35:25)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":35:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":35:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":35:36)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":39:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":42:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":64:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":43:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":43:24)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":44:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":44:20)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":45:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":63:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":46:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":46:17)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":47:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":47:34)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":50:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":62:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":50:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":50:25)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":51:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":58:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":60:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":52:32)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":52:24)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":52:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":54:17)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":57:17)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":54:25)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":54:21)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":54:28)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":54:32)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":54:30)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":55:17)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":56:41)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":56:34)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":56:21)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":54:37)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":54:36)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":61:17)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":148:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":152:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":150:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":150:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":151:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":151:13)
#loc81 = loc("/usr/include/stdlib.h":575:1)
#loc82 = loc("/usr/include/stdlib.h":575:41)
#loc83 = loc("/usr/include/time.h":76:1)
#loc84 = loc("/usr/include/time.h":76:38)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":167:15)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":169:15)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":172:15)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":174:15)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":162:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":177:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":163:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":165:27)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":165:22)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":165:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":167:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":168:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":168:62)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":169:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":172:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":173:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":173:61)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":174:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":176:12)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":176:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":72:1)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":103:1)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":74:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":74:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":76:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":76:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":76:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":79:12)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":79:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":80:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":102:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":81:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":81:24)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":82:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":82:20)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":83:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":101:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":84:13)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":84:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":85:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":85:34)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":88:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":100:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":88:17)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":88:25)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":89:13)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":96:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":98:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":90:32)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":90:24)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":90:17)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":92:17)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":95:17)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":92:25)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":92:21)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":92:28)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":92:32)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":92:30)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":93:17)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":94:41)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":94:34)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":94:21)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":92:37)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":92:36)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":99:27)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":99:17)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":142:27)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":106:1)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":146:1)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":108:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":108:9)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":110:13)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":110:12)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":110:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":111:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":123:5)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":112:9)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":112:45)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":114:9)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":122:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":114:19)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":114:32)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":114:49)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":114:13)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":114:59)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":115:9)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":118:9)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":120:9)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":117:25)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":117:20)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":117:13)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":117:36)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":121:23)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":121:13)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":124:5)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":145:5)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":125:9)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":125:24)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":126:9)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":126:20)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":127:9)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":144:9)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":128:13)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":128:17)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":129:13)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":129:34)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":131:13)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":143:13)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":131:17)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":131:25)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":131:27)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":131:30)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":131:38)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":131:40)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":132:13)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":139:13)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":141:13)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":133:32)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":133:24)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":133:17)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":135:17)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":138:17)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":135:25)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":135:21)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":135:28)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":135:32)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":135:30)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":136:17)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":137:41)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":137:34)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":137:21)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":135:37)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":135:36)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c":142:17)
#loc223 = loc(fused[#loc1, #loc2])
#loc224 = loc(fused[#loc3, #loc4])
#loc225 = loc(fused[#loc5, #loc6])
#loc226 = loc(fused[#loc7, #loc8])
#loc227 = loc(fused[#loc10, #loc11])
#loc228 = loc(fused[#loc13, #loc14])
#loc229 = loc(fused[#loc15, #loc16])
#loc230 = loc(fused[#loc19, #loc17])
#loc231 = loc(fused[#loc20, #loc21])
#loc232 = loc(fused[#loc22, #loc23])
#loc233 = loc(fused[#loc24, #loc25])
#loc234 = loc(fused[#loc29, #loc30])
#loc235 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc236 = loc(fused[#loc36, #loc37])
#loc237 = loc(fused[#loc39, #loc40])
#loc238 = loc(fused[#loc41, #loc42])
#loc239 = loc(fused[#loc43, #loc44])
#loc240 = loc(fused[#loc45, #loc46])
#loc241 = loc(fused[#loc47, #loc48])
#loc242 = loc(fused[#loc49, #loc50])
#loc243 = loc(fused[#loc51, #loc52])
#loc244 = loc(fused[#loc53, #loc54])
#loc245 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc246 = loc(fused[#loc60, #loc58])
#loc247 = loc(fused[#loc61, #loc62])
#loc248 = loc(fused[#loc64, #loc63])
#loc249 = loc(fused[#loc65, #loc66])
#loc250 = loc(fused[#loc68, #loc62])
#loc251 = loc(fused[#loc73, #loc72])
#loc252 = loc(fused[#loc75, #loc76])
#loc253 = loc(fused[#loc77, #loc78])
#loc254 = loc(fused[#loc79, #loc80])
#loc255 = loc(fused[#loc81, #loc82])
#loc256 = loc(fused[#loc83, #loc84])
#loc257 = loc(fused[#loc89, #loc90])
#loc260 = loc(fused[#loc100, #loc101])
#loc261 = loc(fused[#loc104, #loc105])
#loc262 = loc(fused[#loc108, #loc107])
#loc263 = loc(fused[#loc109, #loc110])
#loc264 = loc(fused[#loc111, #loc112])
#loc265 = loc(fused[#loc115, #loc113])
#loc266 = loc(fused[#loc117, #loc116])
#loc267 = loc(fused[#loc118, #loc119])
#loc268 = loc(fused[#loc120, #loc121])
#loc269 = loc(fused[#loc122, #loc123])
#loc270 = loc(fused[#loc124, #loc125])
#loc271 = loc(fused[#loc126, #loc127])
#loc272 = loc(fused[#loc128, #loc129])
#loc273 = loc(fused[#loc130, #loc131])
#loc274 = loc(fused[#loc132, #loc133])
#loc275 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc276 = loc(fused[#loc139, #loc137])
#loc277 = loc(fused[#loc140, #loc141])
#loc278 = loc(fused[#loc143, #loc142])
#loc279 = loc(fused[#loc144, #loc145])
#loc280 = loc(fused[#loc147, #loc141])
#loc281 = loc(fused[#loc152, #loc151])
#loc282 = loc(fused[#loc156, #loc157])
#loc283 = loc(fused[#loc158, #loc159])
#loc284 = loc(fused[#loc162, #loc160])
#loc285 = loc(fused[#loc163, #loc164])
#loc286 = loc(fused[#loc165, #loc166])
#loc287 = loc(fused[#loc167, #loc168])
#loc288 = loc(fused[#loc172, #loc173])
#loc289 = loc(fused[#loc174, #loc175, #loc176, #loc168])
#loc290 = loc(fused[#loc179, #loc180])
#loc291 = loc(fused[#loc183, #loc184])
#loc292 = loc(fused[#loc185, #loc186])
#loc293 = loc(fused[#loc187, #loc188])
#loc294 = loc(fused[#loc189, #loc190])
#loc295 = loc(fused[#loc191, #loc192])
#loc296 = loc(fused[#loc193, #loc194])
#loc297 = loc(fused[#loc195, #loc196])
#loc298 = loc(fused[#loc197, #loc198])
#loc299 = loc(fused[#loc200, #loc202])
#loc300 = loc(fused[#loc203, #loc204, #loc205, #loc196])
#loc301 = loc(fused[#loc208, #loc206])
#loc302 = loc(fused[#loc209, #loc210])
#loc303 = loc(fused[#loc212, #loc211])
#loc304 = loc(fused[#loc213, #loc214])
#loc305 = loc(fused[#loc216, #loc210])
#loc306 = loc(fused[#loc221, #loc220])
