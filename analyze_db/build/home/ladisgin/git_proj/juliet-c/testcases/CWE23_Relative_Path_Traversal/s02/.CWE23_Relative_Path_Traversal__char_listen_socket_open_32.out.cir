!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc282 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":213:10)
#loc283 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":213:14)
#loc284 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":213:20)
#loc285 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":213:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc410 = loc(fused[#loc282, #loc283])
#loc411 = loc(fused[#loc284, #loc285])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_32L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc298)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_323badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc299)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc300)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc301)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc302)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc303)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc304)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc305)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc306)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc307)
  cir.func private @close(!s32i) -> !s32i loc(#loc308)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc309)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc311)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc312)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc313)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc299)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc312)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc313)
    %4 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_323badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc299)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc299)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc314)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc316)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc318)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc319)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc320)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc321)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc322)
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc323)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc49)
        cir.store %18, %14 : !s32i, !cir.ptr<!s32i> loc(#loc321)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc51)
        cir.store %20, %15 : !s32i, !cir.ptr<!s32i> loc(#loc322)
        %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
        %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
        cir.store %23, %16 : !u64i, !cir.ptr<!u64i> loc(#loc323)
        cir.scope {
          cir.do {
            %24 = cir.const #cir.int<2> : !s32i loc(#loc58)
            %25 = cir.const #cir.int<1> : !u32i loc(#loc59)
            %26 = cir.cast(integral, %25 : !u32i), !s32i loc(#loc59)
            %27 = cir.const #cir.int<6> : !u32i loc(#loc60)
            %28 = cir.cast(integral, %27 : !u32i), !s32i loc(#loc60)
            %29 = cir.call @socket(%24, %26, %28) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc61)
            cir.store %29, %14 : !s32i, !cir.ptr<!s32i> loc(#loc325)
            cir.scope {
              %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc66)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc67)
              %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc67)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc327)
              cir.if %85 {
                cir.break loc(#loc69)
              } loc(#loc328)
            } loc(#loc326)
            %30 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc329)
            %31 = cir.const #cir.int<0> : !s32i loc(#loc72)
            %32 = cir.const #cir.int<16> : !u64i loc(#loc330)
            cir.libc.memset %32 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc331)
            %33 = cir.const #cir.int<2> : !s32i loc(#loc77)
            %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc77)
            %35 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc332)
            %36 = cir.const #cir.int<0> : !s32i loc(#loc80)
            %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc80)
            %38 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
            %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
            cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc333)
            %40 = cir.const #cir.int<27015> : !s32i loc(#loc84)
            %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc84)
            %42 = cir.call @htons(%41) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc85)
            %43 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
            cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc334)
            cir.scope {
              %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc91)
              %83 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc336)
              %84 = cir.const #cir.int<16> : !u64i loc(#loc337)
              %85 = cir.cast(integral, %84 : !u64i), !u32i loc(#loc337)
              %86 = cir.call @bind(%82, %83, %85) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc96)
              %87 = cir.const #cir.int<1> : !s32i loc(#loc97)
              %88 = cir.unary(minus, %87) : !s32i, !s32i loc(#loc97)
              %89 = cir.cmp(eq, %86, %88) : !s32i, !cir.bool loc(#loc338)
              cir.if %89 {
                cir.break loc(#loc99)
              } loc(#loc339)
            } loc(#loc335)
            cir.scope {
              %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %83 = cir.const #cir.int<5> : !s32i loc(#loc103)
              %84 = cir.call @listen(%82, %83) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc104)
              %85 = cir.const #cir.int<1> : !s32i loc(#loc105)
              %86 = cir.unary(minus, %85) : !s32i, !s32i loc(#loc105)
              %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc341)
              cir.if %87 {
                cir.break loc(#loc107)
              } loc(#loc342)
            } loc(#loc340)
            %44 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %45 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc109)
            %46 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc110)
            %47 = cir.call @accept(%44, %45, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc111)
            cir.store %47, %15 : !s32i, !cir.ptr<!s32i> loc(#loc343)
            cir.scope {
              %82 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc117)
              %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc117)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc345)
              cir.if %85 {
                cir.break loc(#loc119)
              } loc(#loc346)
            } loc(#loc344)
            %48 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %49 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
            %50 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc122)
            %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc123)
            %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc347)
            %53 = cir.const #cir.int<1> : !u64i loc(#loc348)
            %54 = cir.const #cir.int<4096> : !s32i loc(#loc128)
            %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc128)
            %56 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc129)
            %57 = cir.binop(sub, %55, %56) : !u64i loc(#loc349)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc130)
            %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc130)
            %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc350)
            %61 = cir.binop(mul, %53, %60) : !u64i loc(#loc351)
            %62 = cir.const #cir.int<0> : !s32i loc(#loc132)
            %63 = cir.call @recv(%48, %52, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc133)
            %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc133)
            cir.store %64, %11 : !s32i, !cir.ptr<!s32i> loc(#loc352)
            cir.scope {
              %82 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc138)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc139)
              %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc139)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc354)
              %86 = cir.ternary(%85, true {
                %87 = cir.const #true loc(#loc140)
                cir.yield %87 : !cir.bool loc(#loc140)
              }, false {
                %87 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                %88 = cir.const #cir.int<0> : !s32i loc(#loc142)
                %89 = cir.cmp(eq, %87, %88) : !s32i, !cir.bool loc(#loc355)
                %90 = cir.ternary(%89, true {
                  %91 = cir.const #true loc(#loc140)
                  cir.yield %91 : !cir.bool loc(#loc140)
                }, false {
                  %91 = cir.const #false loc(#loc140)
                  cir.yield %91 : !cir.bool loc(#loc140)
                }) : (!cir.bool) -> !cir.bool loc(#loc140)
                cir.yield %90 : !cir.bool loc(#loc140)
              }) : (!cir.bool) -> !cir.bool loc(#loc140)
              cir.if %86 {
                cir.break loc(#loc144)
              } loc(#loc356)
            } loc(#loc353)
            %65 = cir.const #cir.int<0> : !s8i loc(#loc145)
            %66 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
            %67 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc147)
            %68 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc148)
            %70 = cir.const #cir.int<1> : !u64i loc(#loc357)
            %71 = cir.binop(div, %69, %70) : !u64i loc(#loc358)
            %72 = cir.binop(add, %67, %71) : !u64i loc(#loc359)
            %73 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %72 : !u64i), !cir.ptr<!s8i> loc(#loc151)
            cir.store %65, %73 : !s8i, !cir.ptr<!s8i> loc(#loc360)
            %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
            %75 = cir.const #cir.int<13> : !s8i loc(#loc153)
            %76 = cir.cast(integral, %75 : !s8i), !s32i loc(#loc153)
            %77 = cir.call @strchr(%74, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc154)
            cir.store %77, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc361)
            cir.scope {
              %82 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
              %83 = cir.cast(ptr_to_bool, %82 : !cir.ptr<!s8i>), !cir.bool loc(#loc159)
              cir.if %83 {
                %84 = cir.const #cir.int<0> : !s8i loc(#loc161)
                %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
                cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc364)
              } loc(#loc363)
            } loc(#loc362)
            %78 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
            %79 = cir.const #cir.int<10> : !s8i loc(#loc165)
            %80 = cir.cast(integral, %79 : !s8i), !s32i loc(#loc165)
            %81 = cir.call @strchr(%78, %80) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
            cir.store %81, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc365)
            cir.scope {
              %82 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
              %83 = cir.cast(ptr_to_bool, %82 : !cir.ptr<!s8i>), !cir.bool loc(#loc171)
              cir.if %83 {
                %84 = cir.const #cir.int<0> : !s8i loc(#loc173)
                %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
                cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc368)
              } loc(#loc367)
            } loc(#loc366)
            cir.yield loc(#loc57)
          } while {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc176)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc176)
            cir.condition(%25) loc(#loc176)
          } loc(#loc324)
        } loc(#loc324)
        cir.scope {
          %24 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc179)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc180)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc180)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc370)
          cir.if %27 {
            %28 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc182)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc183)
          } loc(#loc371)
        } loc(#loc369)
        cir.scope {
          %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc186)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc187)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc187)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc373)
          cir.if %27 {
            %28 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc189)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc190)
          } loc(#loc374)
        } loc(#loc372)
      } loc(#loc317)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc375)
    } loc(#loc315)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc377)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc377)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc379)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc204)
        %12 = cir.const #cir.int<64> : !s32i loc(#loc205)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc380)
        %14 = cir.const #cir.int<256> : !s32i loc(#loc206)
        %15 = cir.const #cir.int<128> : !s32i loc(#loc207)
        %16 = cir.binop(or, %14, %15) : !s32i loc(#loc381)
        %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc208)
        cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc382)
        cir.scope {
          %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc213)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc214)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc215)
          %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc384)
          cir.if %21 {
            %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc217)
            %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc218)
          } loc(#loc385)
        } loc(#loc383)
      } loc(#loc378)
    } loc(#loc376)
    cir.return loc(#loc26)
  } loc(#loc310)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc386)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc221)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc388)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc389)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc390)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc298)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc389)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc390)
    %4 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_32L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc298)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc298)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc230)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc391)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc393)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc393)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc237)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
      %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc221)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc221)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc237)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc394)
    } loc(#loc392)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc396)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc396)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc398)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc251)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc252)
        %12 = cir.const #cir.int<64> : !s32i loc(#loc253)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc399)
        %14 = cir.const #cir.int<256> : !s32i loc(#loc254)
        %15 = cir.const #cir.int<128> : !s32i loc(#loc255)
        %16 = cir.binop(or, %14, %15) : !s32i loc(#loc400)
        %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc256)
        cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc401)
        cir.scope {
          %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc261)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc262)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc263)
          %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc403)
          cir.if %21 {
            %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc265)
            %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc266)
          } loc(#loc404)
        } loc(#loc402)
      } loc(#loc397)
    } loc(#loc395)
    cir.return loc(#loc223)
  } loc(#loc387)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_32L7goodG2BEv() : () -> () loc(#loc269)
    cir.return loc(#loc268)
  } loc(#loc405)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc406)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc407)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc408)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc277)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc279)
  cir.func @main(%arg0: !s32i loc(fused[#loc282, #loc283]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc284, #loc285])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc410)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc411)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc281)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc286)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc287)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc288)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc288)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc289)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc276)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc276)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc290)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_324goodEv() : () -> () loc(#loc291)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc277)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc277)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc292)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc278)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc278)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc293)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_323badEv() : () -> () loc(#loc294)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc279)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc279)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc295)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc296)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc412)
    cir.return %15 : !s32i loc(#loc412)
  } loc(#loc409)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":174:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":174:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":65:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":65:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":226:1)
#loc20 = loc("/usr/include/string.h":227:50)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/fcntl.h":209:1)
#loc24 = loc("/usr/include/fcntl.h":209:56)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":60:1)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":162:1)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":62:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":62:12)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":63:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":63:25)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":64:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":64:25)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":66:12)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":66:5)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":67:5)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":149:5)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":68:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":68:24)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":68:23)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":69:9)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":147:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":74:13)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":74:17)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":75:13)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":75:32)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":76:13)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":76:19)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":77:13)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":77:35)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":78:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":78:35)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":79:13)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":79:41)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":79:30)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":79:37)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":80:13)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":132:21)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:39)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:48)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:61)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:32)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:17)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:72)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":91:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":94:17)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":91:21)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":91:37)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":92:17)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":93:21)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:24)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:25)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:34)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:37)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:51)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:17)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:52)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":96:38)
#loc78 = loc("/usr/include/netinet/in.h":249:5)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":96:17)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":97:43)
#loc81 = loc("/usr/include/netinet/in.h":251:20)
#loc82 = loc("/usr/include/netinet/in.h":33:15)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":97:17)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":98:42)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":98:36)
#loc86 = loc("/usr/include/netinet/in.h":250:15)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":98:17)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":98:50)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:17)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":102:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:26)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:58)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:59)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:68)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:82)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:21)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:88)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":100:17)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":101:21)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":103:17)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":106:17)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":103:28)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":103:42)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":103:21)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":103:61)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":104:17)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":105:21)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:39)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:53)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:59)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:32)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:17)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:63)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":108:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":111:17)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":108:21)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":108:37)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":109:17)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":110:21)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:35)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:58)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:65)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:63)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:49)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:72)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:75)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:86)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:91)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:106)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:116)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:117)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:120)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:30)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:17)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:121)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:17)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":117:17)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:21)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:35)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:48)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:51)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:65)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":115:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":116:21)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:61)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:17)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:22)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:32)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:45)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:56)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:57)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":121:34)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":121:40)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":121:27)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":121:17)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":121:44)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":122:17)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":125:17)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":122:21)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":123:17)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":124:32)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":124:22)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":124:21)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":126:34)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":126:40)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":126:27)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":126:17)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":126:44)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":127:17)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":130:17)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":127:21)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":128:17)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":129:32)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":129:22)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":129:21)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":132:20)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":133:13)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":136:13)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":133:17)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":133:33)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":134:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":135:30)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":135:17)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":137:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":140:13)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":137:17)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":137:33)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":138:13)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":139:30)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":139:17)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":148:21)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":148:10)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":148:9)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":150:5)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":161:5)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":151:9)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":151:24)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":151:23)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":152:9)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":160:9)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":153:13)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":153:17)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:29)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:35)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:42)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:51)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:59)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:24)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:13)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:67)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":156:13)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":159:13)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":156:17)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":156:30)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":156:29)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":157:13)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":158:23)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":158:17)
#loc219 = loc("/usr/include/string.h":149:1)
#loc220 = loc("/usr/include/string.h":150:14)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":179:22)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":169:1)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":194:1)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":171:5)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":171:12)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":172:5)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":172:25)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":173:5)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":173:25)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":175:12)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":175:5)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":176:5)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":181:5)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":177:9)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":177:24)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":177:23)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":179:9)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":179:16)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":180:21)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":180:10)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":180:9)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":182:5)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":193:5)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":183:9)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":183:24)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":183:23)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":184:9)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":192:9)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":185:13)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":185:17)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:29)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:35)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:42)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:51)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:59)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:24)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:13)
#loc258 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:67)
#loc259 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":188:13)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":191:13)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":188:17)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":188:30)
#loc263 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":188:29)
#loc264 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":189:13)
#loc265 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":190:23)
#loc266 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":190:17)
#loc267 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":196:1)
#loc268 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":199:1)
#loc269 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":198:5)
#loc270 = loc("/usr/include/stdlib.h":575:1)
#loc271 = loc("/usr/include/stdlib.h":575:41)
#loc272 = loc("/usr/include/time.h":76:1)
#loc273 = loc("/usr/include/time.h":76:38)
#loc274 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc275 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc276 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":218:15)
#loc277 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":220:15)
#loc278 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":223:15)
#loc279 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":225:15)
#loc280 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":213:1)
#loc281 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":228:1)
#loc286 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":214:1)
#loc287 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":216:27)
#loc288 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":216:22)
#loc289 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":216:5)
#loc290 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":218:5)
#loc291 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":219:5)
#loc292 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":220:5)
#loc293 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":223:5)
#loc294 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":224:5)
#loc295 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":225:5)
#loc296 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":227:12)
#loc297 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":227:5)
#loc298 = loc(fused[#loc1, #loc2])
#loc299 = loc(fused[#loc3, #loc4])
#loc300 = loc(fused[#loc5, #loc6])
#loc301 = loc(fused[#loc7, #loc8])
#loc302 = loc(fused[#loc9, #loc10])
#loc303 = loc(fused[#loc11, #loc12])
#loc304 = loc(fused[#loc13, #loc14])
#loc305 = loc(fused[#loc15, #loc16])
#loc306 = loc(fused[#loc17, #loc18])
#loc307 = loc(fused[#loc19, #loc20])
#loc308 = loc(fused[#loc21, #loc22])
#loc309 = loc(fused[#loc23, #loc24])
#loc310 = loc(fused[#loc25, #loc26])
#loc311 = loc(fused[#loc27, #loc28])
#loc312 = loc(fused[#loc29, #loc30])
#loc313 = loc(fused[#loc31, #loc32])
#loc314 = loc(fused[#loc34, #loc33])
#loc315 = loc(fused[#loc35, #loc36])
#loc316 = loc(fused[#loc37, #loc38])
#loc317 = loc(fused[#loc40, #loc41])
#loc318 = loc(fused[#loc42, #loc43])
#loc319 = loc(fused[#loc44, #loc45])
#loc320 = loc(fused[#loc46, #loc47])
#loc321 = loc(fused[#loc48, #loc49])
#loc322 = loc(fused[#loc50, #loc51])
#loc323 = loc(fused[#loc52, #loc53])
#loc324 = loc(fused[#loc56, #loc57])
#loc325 = loc(fused[#loc62, #loc63])
#loc326 = loc(fused[#loc64, #loc65])
#loc327 = loc(fused[#loc66, #loc67])
#loc328 = loc(fused[#loc68, #loc65])
#loc329 = loc(fused[#loc70, #loc71])
#loc330 = loc(fused[#loc73, #loc74])
#loc331 = loc(fused[#loc75, #loc76])
#loc332 = loc(fused[#loc79, #loc77])
#loc333 = loc(fused[#loc83, #loc80])
#loc334 = loc(fused[#loc87, #loc88])
#loc335 = loc(fused[#loc89, #loc90])
#loc336 = loc(fused[#loc92, #loc93])
#loc337 = loc(fused[#loc94, #loc95])
#loc338 = loc(fused[#loc96, #loc97])
#loc339 = loc(fused[#loc98, #loc90])
#loc340 = loc(fused[#loc100, #loc101])
#loc341 = loc(fused[#loc104, #loc105])
#loc342 = loc(fused[#loc106, #loc101])
#loc343 = loc(fused[#loc112, #loc113])
#loc344 = loc(fused[#loc114, #loc115])
#loc345 = loc(fused[#loc116, #loc117])
#loc346 = loc(fused[#loc118, #loc115])
#loc347 = loc(fused[#loc124, #loc125])
#loc348 = loc(fused[#loc126, #loc127])
#loc349 = loc(fused[#loc128, #loc129])
#loc350 = loc(fused[#loc128, #loc130])
#loc351 = loc(fused[#loc126, #loc131])
#loc352 = loc(fused[#loc134, #loc135])
#loc353 = loc(fused[#loc136, #loc137])
#loc354 = loc(fused[#loc138, #loc139])
#loc355 = loc(fused[#loc141, #loc142])
#loc356 = loc(fused[#loc143, #loc137])
#loc357 = loc(fused[#loc149, #loc150])
#loc358 = loc(fused[#loc148, #loc150])
#loc359 = loc(fused[#loc147, #loc150])
#loc360 = loc(fused[#loc146, #loc145])
#loc361 = loc(fused[#loc155, #loc156])
#loc362 = loc(fused[#loc157, #loc158])
#loc363 = loc(fused[#loc160, #loc158])
#loc364 = loc(fused[#loc163, #loc161])
#loc365 = loc(fused[#loc167, #loc168])
#loc366 = loc(fused[#loc169, #loc170])
#loc367 = loc(fused[#loc172, #loc170])
#loc368 = loc(fused[#loc175, #loc173])
#loc369 = loc(fused[#loc177, #loc178])
#loc370 = loc(fused[#loc179, #loc180])
#loc371 = loc(fused[#loc181, #loc178])
#loc372 = loc(fused[#loc184, #loc185])
#loc373 = loc(fused[#loc186, #loc187])
#loc374 = loc(fused[#loc188, #loc185])
#loc375 = loc(fused[#loc193, #loc191])
#loc376 = loc(fused[#loc194, #loc195])
#loc377 = loc(fused[#loc196, #loc197])
#loc378 = loc(fused[#loc199, #loc200])
#loc379 = loc(fused[#loc201, #loc202])
#loc380 = loc(fused[#loc204, #loc205])
#loc381 = loc(fused[#loc206, #loc207])
#loc382 = loc(fused[#loc209, #loc210])
#loc383 = loc(fused[#loc211, #loc212])
#loc384 = loc(fused[#loc213, #loc214])
#loc385 = loc(fused[#loc216, #loc212])
#loc386 = loc(fused[#loc219, #loc220])
#loc387 = loc(fused[#loc222, #loc223])
#loc388 = loc(fused[#loc224, #loc225])
#loc389 = loc(fused[#loc226, #loc227])
#loc390 = loc(fused[#loc228, #loc229])
#loc391 = loc(fused[#loc231, #loc230])
#loc392 = loc(fused[#loc232, #loc233])
#loc393 = loc(fused[#loc234, #loc235])
#loc394 = loc(fused[#loc241, #loc239])
#loc395 = loc(fused[#loc242, #loc243])
#loc396 = loc(fused[#loc244, #loc245])
#loc397 = loc(fused[#loc247, #loc248])
#loc398 = loc(fused[#loc249, #loc250])
#loc399 = loc(fused[#loc252, #loc253])
#loc400 = loc(fused[#loc254, #loc255])
#loc401 = loc(fused[#loc257, #loc258])
#loc402 = loc(fused[#loc259, #loc260])
#loc403 = loc(fused[#loc261, #loc262])
#loc404 = loc(fused[#loc264, #loc260])
#loc405 = loc(fused[#loc267, #loc268])
#loc406 = loc(fused[#loc270, #loc271])
#loc407 = loc(fused[#loc272, #loc273])
#loc408 = loc(fused[#loc274, #loc275])
#loc409 = loc(fused[#loc280, #loc281])
#loc412 = loc(fused[#loc297, #loc296])
