!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":105:10)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":105:14)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":105:20)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":105:32)
#loc150 = loc(fused[#loc51, #loc52])
#loc151 = loc(fused[#loc53, #loc54])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc130)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc132)
  cir.func private @printLongLongLine(!s64i) loc(#loc133)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_multiply_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc13)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc136)
    cir.goto "source" loc(#loc137)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc17)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc131)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc132)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc132)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc18)
    cir.goto "sink" loc(#loc138)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc22)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc25)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc26)
      %10 = cir.cast(integral, %9 : !s32i), !s64i loc(#loc26)
      %11 = cir.cmp(gt, %8, %10) : !s64i, !cir.bool loc(#loc140)
      cir.if %11 {
        %12 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc142)
        %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc30)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc29)
        %16 = cir.binop(mul, %13, %15) nsw : !s64i loc(#loc30)
        cir.store %16, %12 : !s64i, !cir.ptr<!s64i> loc(#loc142)
        %17 = cir.load %12 : !cir.ptr<!s64i>, !s64i loc(#loc31)
        cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc32)
      } loc(#loc141)
    } loc(#loc139)
    cir.return loc(#loc10)
  } loc(#loc134)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_multiply_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc143)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc146)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc147)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc48)
  cir.func @main(%arg0: !s32i loc(fused[#loc51, #loc52]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc53, #loc54])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc50)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc55)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc56)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc57)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc57)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc58)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc45)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %8 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_multiply_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_multiply_18_good() : () -> () loc(#loc60)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc46)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc47)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %13 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_multiply_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_multiply_18_bad() : () -> () loc(#loc64)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc48)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.return %17 : !s32i loc(#loc154)
  } loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc69)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc74)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc157)
    cir.goto "source" loc(#loc158)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc78)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc79)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc131)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc159)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc159)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc79)
    cir.goto "sink" loc(#loc160)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc85)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc88)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc89)
      %10 = cir.cast(integral, %9 : !s32i), !s64i loc(#loc89)
      %11 = cir.cmp(gt, %8, %10) : !s64i, !cir.bool loc(#loc162)
      cir.if %11 {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc93)
          %13 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc94)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc95)
          %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc95)
          %16 = cir.binop(div, %13, %15) : !s64i loc(#loc165)
          %17 = cir.cmp(lt, %12, %16) : !s64i, !cir.bool loc(#loc166)
          cir.if %17 {
            %18 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc168)
            %19 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc102)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc101)
            %21 = cir.cast(integral, %20 : !s32i), !s64i loc(#loc101)
            %22 = cir.binop(mul, %19, %21) nsw : !s64i loc(#loc102)
            cir.store %22, %18 : !s64i, !cir.ptr<!s64i> loc(#loc168)
            %23 = cir.load %18 : !cir.ptr<!s64i>, !s64i loc(#loc103)
            cir.call @printLongLongLine(%23) : (!s64i) -> () loc(#loc104)
          } else {
            %18 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc69)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc69)
            cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc105)
          } loc(#loc167)
        } loc(#loc164)
      } loc(#loc163)
    } loc(#loc161)
    cir.return loc(#loc71)
  } loc(#loc155)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc110)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc171)
    cir.goto "source" loc(#loc172)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc114)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc115)
    %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc115)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc173)
    cir.goto "sink" loc(#loc174)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc119)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc122)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc123)
      %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc123)
      %7 = cir.cmp(gt, %4, %6) : !s64i, !cir.bool loc(#loc176)
      cir.if %7 {
        %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc178)
        %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc127)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc126)
        %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc126)
        %12 = cir.binop(mul, %9, %11) nsw : !s64i loc(#loc127)
        cir.store %12, %8 : !s64i, !cir.ptr<!s64i> loc(#loc178)
        %13 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc128)
        cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc129)
      } loc(#loc177)
    } loc(#loc175)
    cir.return loc(#loc107)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":30:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":30:24)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":23:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":39:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":25:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":25:13)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":26:12)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":26:5)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":27:5)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":27:10)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":28:1)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":30:5)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":30:13)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":31:5)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":31:10)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":32:1)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":33:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":38:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":33:8)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":33:15)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":34:5)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":36:9)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":36:33)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":36:26)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":37:27)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":37:9)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":90:1)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":94:1)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":92:5)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":92:13)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":93:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":93:13)
#loc39 = loc("/usr/include/stdlib.h":575:1)
#loc40 = loc("/usr/include/stdlib.h":575:41)
#loc41 = loc("/usr/include/time.h":76:1)
#loc42 = loc("/usr/include/time.h":76:38)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":110:15)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":112:15)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":115:15)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":117:15)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":105:1)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":120:1)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":106:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":108:27)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":108:22)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":108:5)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":110:5)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":111:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":111:62)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":112:5)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":115:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":116:5)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":116:61)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":117:5)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":119:12)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":119:5)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":66:23)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":46:1)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":69:1)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":48:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":48:13)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":49:12)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":49:5)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":50:5)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":50:10)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":51:1)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":53:5)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":53:13)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":53:20)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":53:24)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":54:5)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":54:10)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":55:1)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":56:5)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":68:5)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":56:8)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":56:15)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":57:5)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":59:9)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":67:9)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":59:13)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":59:21)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":59:31)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":59:32)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":60:9)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":63:9)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":65:9)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":61:13)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":61:37)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":61:30)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":62:31)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":62:13)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":66:13)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":72:1)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":88:1)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":74:5)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":74:13)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":75:12)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":75:5)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":76:5)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":76:10)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":77:1)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":79:12)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":79:5)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":80:5)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":80:10)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":81:1)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":82:5)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":87:5)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":82:8)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":82:15)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":83:5)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":85:9)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":85:33)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":85:26)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":86:27)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_18.c":86:9)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc7, #loc8])
#loc134 = loc(fused[#loc9, #loc10])
#loc135 = loc(fused[#loc11, #loc12])
#loc136 = loc(fused[#loc14, #loc13])
#loc137 = loc(fused[#loc15, #loc16])
#loc138 = loc(fused[#loc20, #loc21])
#loc139 = loc(fused[#loc23, #loc24])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc27, #loc24])
#loc142 = loc(fused[#loc28, #loc29])
#loc143 = loc(fused[#loc33, #loc34])
#loc144 = loc(fused[#loc35, #loc36])
#loc145 = loc(fused[#loc37, #loc38])
#loc146 = loc(fused[#loc39, #loc40])
#loc147 = loc(fused[#loc41, #loc42])
#loc148 = loc(fused[#loc43, #loc44])
#loc149 = loc(fused[#loc49, #loc50])
#loc152 = loc(fused[#loc60, #loc61])
#loc153 = loc(fused[#loc64, #loc65])
#loc154 = loc(fused[#loc68, #loc67])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc72, #loc73])
#loc157 = loc(fused[#loc75, #loc74])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc81, #loc82])
#loc160 = loc(fused[#loc83, #loc84])
#loc161 = loc(fused[#loc86, #loc87])
#loc162 = loc(fused[#loc88, #loc89])
#loc163 = loc(fused[#loc90, #loc87])
#loc164 = loc(fused[#loc91, #loc92])
#loc165 = loc(fused[#loc94, #loc95])
#loc166 = loc(fused[#loc93, #loc96])
#loc167 = loc(fused[#loc97, #loc98, #loc99, #loc92])
#loc168 = loc(fused[#loc100, #loc101])
#loc169 = loc(fused[#loc106, #loc107])
#loc170 = loc(fused[#loc108, #loc109])
#loc171 = loc(fused[#loc111, #loc110])
#loc172 = loc(fused[#loc112, #loc113])
#loc173 = loc(fused[#loc116, #loc115])
#loc174 = loc(fused[#loc117, #loc118])
#loc175 = loc(fused[#loc120, #loc121])
#loc176 = loc(fused[#loc122, #loc123])
#loc177 = loc(fused[#loc124, #loc121])
#loc178 = loc(fused[#loc125, #loc126])
