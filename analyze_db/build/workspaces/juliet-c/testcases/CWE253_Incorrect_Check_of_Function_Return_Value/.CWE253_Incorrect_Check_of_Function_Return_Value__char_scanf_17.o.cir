!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc70)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc13)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc73)
        cir.condition(%4) loc(#loc17)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc76)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc77)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc76)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc76)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
            cir.scope {
              %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc27)
              %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
              %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
              %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc27)
              %11 = cir.const #cir.int<0> : !s32i loc(#loc29)
              %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc79)
              cir.if %12 {
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc6)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc6)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc31)
              } loc(#loc80)
            } loc(#loc78)
          } loc(#loc75)
        } loc(#loc74)
        cir.yield loc(#loc12)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc33)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
        cir.yield loc(#loc71)
      } loc(#loc71)
    } loc(#loc71)
    cir.return loc(#loc8)
  } loc(#loc69)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc83)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc82)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc85)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc44)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc88)
        cir.condition(%4) loc(#loc48)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc91)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc92)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc91)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc91)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
            cir.scope {
              %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc58)
              %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc59)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc59)
              %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
              %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc58)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc61)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc61)
              %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc94)
              cir.if %13 {
                %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc63)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc63)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
              } loc(#loc95)
            } loc(#loc93)
          } loc(#loc90)
        } loc(#loc89)
        cir.yield loc(#loc43)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc66)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
        cir.yield loc(#loc86)
      } loc(#loc86)
    } loc(#loc86)
    cir.return loc(#loc39)
  } loc(#loc84)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":36:23)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":38:27)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":24:1)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":42:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":26:5)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":26:9)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":41:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:13)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:9)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:16)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:20)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:18)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":28:5)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":29:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":40:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":32:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":32:36)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":33:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":33:27)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":36:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":39:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":36:17)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":36:33)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":36:42)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":37:13)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":38:17)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:24)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:23)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":68:1)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":71:1)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":70:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":70:11)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":49:1)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":66:1)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":51:5)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":51:9)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:5)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":65:5)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:13)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:9)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:16)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:20)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:18)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":53:5)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":54:9)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":64:9)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":57:13)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":57:36)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":58:13)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":58:27)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":60:13)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":63:13)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":60:17)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":60:23)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":60:33)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":60:42)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":61:13)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":62:27)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":62:17)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:24)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:23)
#loc67 = loc(fused[#loc1, #loc2])
#loc68 = loc(fused[#loc4, #loc5])
#loc69 = loc(fused[#loc7, #loc8])
#loc70 = loc(fused[#loc9, #loc10])
#loc71 = loc(fused[#loc11, #loc12])
#loc72 = loc(fused[#loc14, #loc13])
#loc73 = loc(fused[#loc15, #loc16])
#loc74 = loc(fused[#loc18, #loc12])
#loc75 = loc(fused[#loc19, #loc20])
#loc76 = loc(fused[#loc21, #loc22])
#loc77 = loc(fused[#loc23, #loc24])
#loc78 = loc(fused[#loc25, #loc26])
#loc79 = loc(fused[#loc27, #loc29])
#loc80 = loc(fused[#loc30, #loc26])
#loc81 = loc(fused[#loc33, #loc32])
#loc82 = loc(fused[#loc34, #loc35])
#loc83 = loc(fused[#loc36, #loc37])
#loc84 = loc(fused[#loc38, #loc39])
#loc85 = loc(fused[#loc40, #loc41])
#loc86 = loc(fused[#loc42, #loc43])
#loc87 = loc(fused[#loc45, #loc44])
#loc88 = loc(fused[#loc46, #loc47])
#loc89 = loc(fused[#loc49, #loc43])
#loc90 = loc(fused[#loc50, #loc51])
#loc91 = loc(fused[#loc52, #loc53])
#loc92 = loc(fused[#loc54, #loc55])
#loc93 = loc(fused[#loc56, #loc57])
#loc94 = loc(fused[#loc58, #loc61])
#loc95 = loc(fused[#loc62, #loc57])
#loc96 = loc(fused[#loc66, #loc65])
