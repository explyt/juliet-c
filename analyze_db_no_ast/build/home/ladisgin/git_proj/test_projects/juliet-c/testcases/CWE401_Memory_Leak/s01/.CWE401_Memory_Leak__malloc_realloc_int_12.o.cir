!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc243)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc244)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc245)
  cir.func private  @printIntLine(!s32i) loc(#loc246)
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc247)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc248)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_int_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc251)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc251)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc254)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc27)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc255)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc256)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc257)
          cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc254)
          cir.scope {
            %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc33)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s32i>, !s32i loc(#loc259)
            %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc34)
            cir.if %33 {
              %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
              %35 = cir.const #cir.int<1> : !s32i loc(#loc37)
              %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc38)
              cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
            } loc(#loc260)
          } loc(#loc258)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc39)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc41)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc42)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc261)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc45)
          %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc46)
          %20 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc47)
          %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc48)
          %23 = cir.const #cir.int<130000> : !s32i loc(#loc49)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc49)
          %25 = cir.const #cir.int<4> : !u64i loc(#loc262)
          %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc263)
          %27 = cir.call @realloc(%22, %26) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc264)
          cir.store %28, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc265)
          cir.scope {
            %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc58)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s32i>, !s32i loc(#loc267)
            %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc59)
            cir.if %33 {
              %34 = cir.const #cir.int<10> : !s32i loc(#loc61)
              %35 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
              %36 = cir.const #cir.int<0> : !s32i loc(#loc63)
              %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc64)
              cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc269)
              %38 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
              %39 = cir.const #cir.int<0> : !s32i loc(#loc66)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc67)
              %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc65)
              cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc68)
              %42 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc69)
              %43 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
              %44 = cir.cast(bitcast, %43 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc70)
              cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
            } loc(#loc268)
          } loc(#loc266)
        } loc(#loc253)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc271)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc272)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc77)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc78)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc78)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc273)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc274)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc275)
          cir.store %12, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc271)
          cir.scope {
            %33 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc84)
            %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s32i>, !s32i loc(#loc277)
            %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc85)
            cir.if %37 {
              %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc87)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc88)
              %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc89)
              cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc87)
            } loc(#loc278)
          } loc(#loc276)
          %13 = cir.const #cir.int<5> : !s32i loc(#loc90)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc92)
          %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc93)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc279)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc95)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc96)
          %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc97)
          %21 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc98)
          %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc99)
          %24 = cir.const #cir.int<130000> : !s32i loc(#loc100)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc100)
          %26 = cir.const #cir.int<4> : !u64i loc(#loc280)
          %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc281)
          %28 = cir.call @realloc(%23, %27) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc282)
          cir.store %29, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc283)
          cir.scope {
            %33 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc109)
            %36 = cir.cmp(ne, %33, %35) : !cir.ptr<!s32i>, !s32i loc(#loc285)
            %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc110)
            cir.if %37 {
              %38 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
              cir.store %38, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc287)
              %39 = cir.const #cir.int<10> : !s32i loc(#loc114)
              %40 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
              %41 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc117)
              cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc288)
              %43 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc119)
              %45 = cir.ptr_stride(%43 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc120)
              %46 = cir.load %45 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              cir.call @printIntLine(%46) : (!s32i) -> () loc(#loc121)
            } loc(#loc286)
          } loc(#loc284)
          %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc122)
          %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc123)
          cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc122)
        } loc(#loc270)
      } loc(#loc252)
    } loc(#loc250)
    cir.return loc(#loc14)
  } loc(#loc249)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_int_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc290)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc126)
    cir.return loc(#loc125)
  } loc(#loc289)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc293)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc293)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc132)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc132)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc296)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc297)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc143)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc144)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc144)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc298)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc299)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc300)
          cir.store %12, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc296)
          cir.scope {
            %33 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc150)
            %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s32i>, !s32i loc(#loc302)
            %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc151)
            cir.if %37 {
              %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc153)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc154)
              %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc155)
              cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc153)
            } loc(#loc303)
          } loc(#loc301)
          %13 = cir.const #cir.int<5> : !s32i loc(#loc156)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc158)
          %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc159)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc304)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc161)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc162)
          %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc160)
          cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc163)
          %21 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc164)
          %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc165)
          %24 = cir.const #cir.int<130000> : !s32i loc(#loc166)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc166)
          %26 = cir.const #cir.int<4> : !u64i loc(#loc305)
          %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc306)
          %28 = cir.call @realloc(%23, %27) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc164)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc307)
          cir.store %29, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc308)
          cir.scope {
            %33 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc175)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc175)
            %36 = cir.cmp(ne, %33, %35) : !cir.ptr<!s32i>, !s32i loc(#loc310)
            %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc176)
            cir.if %37 {
              %38 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc178)
              cir.store %38, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc312)
              %39 = cir.const #cir.int<10> : !s32i loc(#loc180)
              %40 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
              %41 = cir.const #cir.int<0> : !s32i loc(#loc182)
              %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc183)
              cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc313)
              %43 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc184)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc185)
              %45 = cir.ptr_stride(%43 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc186)
              %46 = cir.load %45 : !cir.ptr<!s32i>, !s32i loc(#loc184)
              cir.call @printIntLine(%46) : (!s32i) -> () loc(#loc187)
            } loc(#loc311)
          } loc(#loc309)
          %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc188)
          %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc189)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc189)
          cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc188)
        } loc(#loc295)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc315)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc316)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc196)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc197)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc197)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc317)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc318)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc196)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc319)
          cir.store %12, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc315)
          cir.scope {
            %33 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc202)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc203)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc203)
            %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s32i>, !s32i loc(#loc321)
            %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc204)
            cir.if %37 {
              %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc206)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc207)
              %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc208)
              cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc206)
            } loc(#loc322)
          } loc(#loc320)
          %13 = cir.const #cir.int<5> : !s32i loc(#loc209)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc210)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc211)
          %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc212)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc323)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc214)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc215)
          %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc213)
          cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc216)
          %21 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc217)
          %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc218)
          %24 = cir.const #cir.int<130000> : !s32i loc(#loc219)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc219)
          %26 = cir.const #cir.int<4> : !u64i loc(#loc324)
          %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc325)
          %28 = cir.call @realloc(%23, %27) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc217)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc326)
          cir.store %29, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc327)
          cir.scope {
            %33 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc227)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc228)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc228)
            %36 = cir.cmp(ne, %33, %35) : !cir.ptr<!s32i>, !s32i loc(#loc329)
            %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc229)
            cir.if %37 {
              %38 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc231)
              cir.store %38, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc331)
              %39 = cir.const #cir.int<10> : !s32i loc(#loc233)
              %40 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc234)
              %41 = cir.const #cir.int<0> : !s32i loc(#loc235)
              %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc236)
              cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc332)
              %43 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc237)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc238)
              %45 = cir.ptr_stride(%43 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc239)
              %46 = cir.load %45 : !cir.ptr<!s32i>, !s32i loc(#loc237)
              cir.call @printIntLine(%46) : (!s32i) -> () loc(#loc240)
            } loc(#loc330)
          } loc(#loc328)
          %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc241)
          %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc242)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc242)
          cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc241)
        } loc(#loc314)
      } loc(#loc294)
    } loc(#loc292)
    cir.return loc(#loc129)
  } loc(#loc291)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("/usr/include/stdlib.h":683:1)
#loc10 = loc("/usr/include/stdlib.h":684:14)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":24:1)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":67:1)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":26:5)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":66:5)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":26:8)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":26:33)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":27:5)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":44:5)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":46:5)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":28:9)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":43:9)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":29:13)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":29:55)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":29:33)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":29:40)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":29:44)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":29:54)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":30:13)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":30:41)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":30:17)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":30:25)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":30:22)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":30:31)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":30:32)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":30:38)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":30:37)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":32:23)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":32:13)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":32:18)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":32:19)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":33:26)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":33:31)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":33:32)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":33:13)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":35:27)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":35:35)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":35:42)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":35:50)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":35:60)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":35:41)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":35:61)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":35:13)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":36:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":42:13)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":36:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":36:25)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":36:22)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":37:13)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":39:27)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":39:17)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":39:22)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":39:23)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":40:30)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":40:35)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":40:36)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":40:17)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":41:17)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":41:22)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":47:9)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":65:9)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":48:13)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":48:55)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":50:13)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":50:19)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":48:33)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":48:40)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":48:44)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":48:54)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":49:13)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":49:41)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":49:17)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":49:25)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":49:22)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":49:31)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":49:32)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":49:38)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":49:37)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":52:23)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":52:13)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":52:18)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":52:19)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":53:26)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":53:31)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":53:32)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":53:13)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":54:30)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":54:38)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":54:45)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":54:53)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":54:63)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":54:44)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":54:64)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":54:13)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":57:13)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":63:13)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":57:17)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":57:28)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":57:25)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":58:13)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":59:24)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":59:17)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":61:27)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":61:17)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":61:22)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":61:23)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":62:30)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":62:35)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":62:36)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":62:17)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":64:13)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":64:18)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":122:1)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":125:1)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":124:5)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":124:11)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":74:1)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":120:1)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":76:5)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":119:5)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":76:8)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":76:33)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":77:5)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":97:5)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":99:5)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":78:9)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":96:9)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":79:13)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":79:55)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":81:13)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":81:19)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":79:33)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":79:40)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":79:44)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":79:54)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":80:13)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":80:41)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":80:17)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":80:25)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":80:22)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":80:31)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":80:32)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":80:38)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":80:37)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":83:23)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":83:13)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":83:18)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":83:19)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":84:26)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":84:31)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":84:32)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":84:13)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":85:30)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":85:38)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":85:45)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":85:53)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":85:63)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":85:44)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":85:64)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":85:13)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":88:13)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":94:13)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":88:17)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":88:28)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":88:25)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":89:13)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":90:24)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":90:17)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":92:27)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":92:17)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":92:22)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":92:23)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":93:30)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":93:35)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":93:36)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":93:17)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":95:13)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":95:18)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":100:9)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":118:9)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":101:13)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":101:55)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":103:13)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":103:19)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":101:33)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":101:40)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":101:44)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":101:54)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":102:13)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":102:41)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":102:17)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":102:25)
#loc204 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":102:22)
#loc205 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":102:31)
#loc206 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":102:32)
#loc207 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":102:38)
#loc208 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":102:37)
#loc209 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":105:23)
#loc210 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":105:13)
#loc211 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":105:18)
#loc212 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":105:19)
#loc213 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":106:26)
#loc214 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":106:31)
#loc215 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":106:32)
#loc216 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":106:13)
#loc217 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":107:30)
#loc218 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":107:38)
#loc219 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":107:45)
#loc220 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":107:53)
#loc221 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":107:63)
#loc222 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":107:44)
#loc223 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":107:64)
#loc224 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":107:13)
#loc225 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":110:13)
#loc226 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":116:13)
#loc227 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":110:17)
#loc228 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":110:28)
#loc229 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":110:25)
#loc230 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":111:13)
#loc231 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":112:24)
#loc232 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":112:17)
#loc233 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":114:27)
#loc234 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":114:17)
#loc235 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":114:22)
#loc236 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":114:23)
#loc237 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":115:30)
#loc238 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":115:35)
#loc239 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":115:36)
#loc240 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":115:17)
#loc241 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":117:13)
#loc242 = loc("CWE401_Memory_Leak__malloc_realloc_int_12.c":117:18)
#loc243 = loc(fused[#loc1, #loc2])
#loc244 = loc(fused[#loc3, #loc4])
#loc245 = loc(fused[#loc5, #loc6])
#loc246 = loc(fused[#loc7, #loc8])
#loc247 = loc(fused[#loc9, #loc10])
#loc248 = loc(fused[#loc11, #loc12])
#loc249 = loc(fused[#loc13, #loc14])
#loc250 = loc(fused[#loc15, #loc16])
#loc251 = loc(fused[#loc17, #loc18])
#loc252 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc253 = loc(fused[#loc22, #loc23])
#loc254 = loc(fused[#loc24, #loc25])
#loc255 = loc(fused[#loc28, #loc29])
#loc256 = loc(fused[#loc27, #loc29])
#loc257 = loc(fused[#loc26, #loc25])
#loc258 = loc(fused[#loc30, #loc31])
#loc259 = loc(fused[#loc32, #loc33])
#loc260 = loc(fused[#loc35, #loc31])
#loc261 = loc(fused[#loc40, #loc39])
#loc262 = loc(fused[#loc50, #loc51])
#loc263 = loc(fused[#loc52, #loc51])
#loc264 = loc(fused[#loc47, #loc53])
#loc265 = loc(fused[#loc54, #loc53])
#loc266 = loc(fused[#loc55, #loc56])
#loc267 = loc(fused[#loc57, #loc58])
#loc268 = loc(fused[#loc60, #loc56])
#loc269 = loc(fused[#loc62, #loc61])
#loc270 = loc(fused[#loc71, #loc72])
#loc271 = loc(fused[#loc73, #loc74])
#loc272 = loc(fused[#loc75, #loc76])
#loc273 = loc(fused[#loc79, #loc80])
#loc274 = loc(fused[#loc78, #loc80])
#loc275 = loc(fused[#loc77, #loc74])
#loc276 = loc(fused[#loc81, #loc82])
#loc277 = loc(fused[#loc83, #loc84])
#loc278 = loc(fused[#loc86, #loc82])
#loc279 = loc(fused[#loc91, #loc90])
#loc280 = loc(fused[#loc101, #loc102])
#loc281 = loc(fused[#loc103, #loc102])
#loc282 = loc(fused[#loc98, #loc104])
#loc283 = loc(fused[#loc105, #loc104])
#loc284 = loc(fused[#loc106, #loc107])
#loc285 = loc(fused[#loc108, #loc109])
#loc286 = loc(fused[#loc111, #loc107])
#loc287 = loc(fused[#loc113, #loc112])
#loc288 = loc(fused[#loc115, #loc114])
#loc289 = loc(fused[#loc124, #loc125])
#loc290 = loc(fused[#loc126, #loc127])
#loc291 = loc(fused[#loc128, #loc129])
#loc292 = loc(fused[#loc130, #loc131])
#loc293 = loc(fused[#loc132, #loc133])
#loc294 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc295 = loc(fused[#loc137, #loc138])
#loc296 = loc(fused[#loc139, #loc140])
#loc297 = loc(fused[#loc141, #loc142])
#loc298 = loc(fused[#loc145, #loc146])
#loc299 = loc(fused[#loc144, #loc146])
#loc300 = loc(fused[#loc143, #loc140])
#loc301 = loc(fused[#loc147, #loc148])
#loc302 = loc(fused[#loc149, #loc150])
#loc303 = loc(fused[#loc152, #loc148])
#loc304 = loc(fused[#loc157, #loc156])
#loc305 = loc(fused[#loc167, #loc168])
#loc306 = loc(fused[#loc169, #loc168])
#loc307 = loc(fused[#loc164, #loc170])
#loc308 = loc(fused[#loc171, #loc170])
#loc309 = loc(fused[#loc172, #loc173])
#loc310 = loc(fused[#loc174, #loc175])
#loc311 = loc(fused[#loc177, #loc173])
#loc312 = loc(fused[#loc179, #loc178])
#loc313 = loc(fused[#loc181, #loc180])
#loc314 = loc(fused[#loc190, #loc191])
#loc315 = loc(fused[#loc192, #loc193])
#loc316 = loc(fused[#loc194, #loc195])
#loc317 = loc(fused[#loc198, #loc199])
#loc318 = loc(fused[#loc197, #loc199])
#loc319 = loc(fused[#loc196, #loc193])
#loc320 = loc(fused[#loc200, #loc201])
#loc321 = loc(fused[#loc202, #loc203])
#loc322 = loc(fused[#loc205, #loc201])
#loc323 = loc(fused[#loc210, #loc209])
#loc324 = loc(fused[#loc220, #loc221])
#loc325 = loc(fused[#loc222, #loc221])
#loc326 = loc(fused[#loc217, #loc223])
#loc327 = loc(fused[#loc224, #loc223])
#loc328 = loc(fused[#loc225, #loc226])
#loc329 = loc(fused[#loc227, #loc228])
#loc330 = loc(fused[#loc230, #loc226])
#loc331 = loc(fused[#loc232, #loc231])
#loc332 = loc(fused[#loc234, #loc233])
