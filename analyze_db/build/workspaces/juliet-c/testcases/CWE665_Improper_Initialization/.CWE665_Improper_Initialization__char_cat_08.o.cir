!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc131)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc134)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc15)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc15)
      cir.if %5 {
      } loc(#loc135)
    } loc(#loc133)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc137)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc23)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc24)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc25)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc24)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc24)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc138)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc28)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc28)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc29)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc29)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc31)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc139)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc32)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    } loc(#loc136)
    cir.return loc(#loc6)
  } loc(#loc129)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc142)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc140)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc45)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %2 : !s32i loc(#loc144)
  } loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc147)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc150)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc58)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc58)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      } else {
        %6 = cir.const #cir.int<0> : !s32i loc(#loc64)
        %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc64)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc66)
        %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc67)
        cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc152)
      } loc(#loc151)
    } loc(#loc149)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc154)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc73)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc74)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc75)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc74)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc74)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc78)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc78)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc79)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc80)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc79)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc81)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc156)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc82)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    } loc(#loc153)
    cir.return loc(#loc49)
  } loc(#loc145)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc88)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.return %2 : !s32i loc(#loc158)
  } loc(#loc157)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc164)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc101)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc101)
      cir.if %5 {
        %6 = cir.const #cir.int<0> : !s32i loc(#loc104)
        %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc104)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc106)
        %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc107)
        cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc166)
      } loc(#loc165)
    } loc(#loc163)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc168)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc113)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc114)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc115)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc114)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc114)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc118)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc118)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc119)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc120)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc119)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc121)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc170)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc122)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    } loc(#loc167)
    cir.return loc(#loc92)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_08.c":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE665_Improper_Initialization__char_cat_08.c":37:1)
#loc6 = loc("CWE665_Improper_Initialization__char_cat_08.c":55:1)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_08.c":39:5)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_08.c":39:12)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_08.c":40:5)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_08.c":40:24)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_08.c":41:12)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_08.c":41:5)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_08.c":42:5)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_08.c":46:5)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_08.c":42:8)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_08.c":42:26)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_08.c":43:5)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_08.c":47:5)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_08.c":54:5)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_08.c":48:9)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_08.c":48:24)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_08.c":49:16)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_08.c":49:24)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_08.c":49:29)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_08.c":49:33)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_08.c":49:9)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_08.c":49:34)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_08.c":50:25)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_08.c":50:16)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_08.c":50:20)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_08.c":50:9)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_08.c":52:9)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_08.c":52:16)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_08.c":52:22)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_08.c":53:19)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_08.c":53:9)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_08.c":108:1)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_08.c":112:1)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_08.c":110:5)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_08.c":110:14)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_08.c":111:5)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_08.c":111:14)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_08.c":25:1)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_08.c":28:1)
#loc45 = loc("CWE665_Improper_Initialization__char_cat_08.c":27:12)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_08.c":27:5)
#loc47 = loc("CWE665_Improper_Initialization__char_cat_08.c":70:19)
#loc48 = loc("CWE665_Improper_Initialization__char_cat_08.c":62:1)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_08.c":85:1)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_08.c":64:5)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_08.c":64:12)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_08.c":65:5)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_08.c":65:24)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_08.c":66:12)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_08.c":66:5)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_08.c":67:5)
#loc57 = loc("CWE665_Improper_Initialization__char_cat_08.c":76:5)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_08.c":67:8)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_08.c":67:27)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_08.c":68:5)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_08.c":71:5)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_08.c":73:5)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_08.c":70:9)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_08.c":75:19)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_08.c":75:9)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_08.c":75:14)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_08.c":75:15)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_08.c":77:5)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_08.c":84:5)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_08.c":78:9)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_08.c":78:24)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_08.c":79:16)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_08.c":79:24)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_08.c":79:29)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_08.c":79:33)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_08.c":79:9)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_08.c":79:34)
#loc78 = loc("CWE665_Improper_Initialization__char_cat_08.c":80:25)
#loc79 = loc("CWE665_Improper_Initialization__char_cat_08.c":80:16)
#loc80 = loc("CWE665_Improper_Initialization__char_cat_08.c":80:20)
#loc81 = loc("CWE665_Improper_Initialization__char_cat_08.c":80:9)
#loc82 = loc("CWE665_Improper_Initialization__char_cat_08.c":82:9)
#loc83 = loc("CWE665_Improper_Initialization__char_cat_08.c":82:16)
#loc84 = loc("CWE665_Improper_Initialization__char_cat_08.c":82:22)
#loc85 = loc("CWE665_Improper_Initialization__char_cat_08.c":83:19)
#loc86 = loc("CWE665_Improper_Initialization__char_cat_08.c":83:9)
#loc87 = loc("CWE665_Improper_Initialization__char_cat_08.c":30:1)
#loc88 = loc("CWE665_Improper_Initialization__char_cat_08.c":33:1)
#loc89 = loc("CWE665_Improper_Initialization__char_cat_08.c":32:12)
#loc90 = loc("CWE665_Improper_Initialization__char_cat_08.c":32:5)
#loc91 = loc("CWE665_Improper_Initialization__char_cat_08.c":88:1)
#loc92 = loc("CWE665_Improper_Initialization__char_cat_08.c":106:1)
#loc93 = loc("CWE665_Improper_Initialization__char_cat_08.c":90:5)
#loc94 = loc("CWE665_Improper_Initialization__char_cat_08.c":90:12)
#loc95 = loc("CWE665_Improper_Initialization__char_cat_08.c":91:5)
#loc96 = loc("CWE665_Improper_Initialization__char_cat_08.c":91:24)
#loc97 = loc("CWE665_Improper_Initialization__char_cat_08.c":92:12)
#loc98 = loc("CWE665_Improper_Initialization__char_cat_08.c":92:5)
#loc99 = loc("CWE665_Improper_Initialization__char_cat_08.c":93:5)
#loc100 = loc("CWE665_Improper_Initialization__char_cat_08.c":97:5)
#loc101 = loc("CWE665_Improper_Initialization__char_cat_08.c":93:8)
#loc102 = loc("CWE665_Improper_Initialization__char_cat_08.c":93:26)
#loc103 = loc("CWE665_Improper_Initialization__char_cat_08.c":94:5)
#loc104 = loc("CWE665_Improper_Initialization__char_cat_08.c":96:19)
#loc105 = loc("CWE665_Improper_Initialization__char_cat_08.c":96:9)
#loc106 = loc("CWE665_Improper_Initialization__char_cat_08.c":96:14)
#loc107 = loc("CWE665_Improper_Initialization__char_cat_08.c":96:15)
#loc108 = loc("CWE665_Improper_Initialization__char_cat_08.c":98:5)
#loc109 = loc("CWE665_Improper_Initialization__char_cat_08.c":105:5)
#loc110 = loc("CWE665_Improper_Initialization__char_cat_08.c":99:9)
#loc111 = loc("CWE665_Improper_Initialization__char_cat_08.c":99:24)
#loc112 = loc("CWE665_Improper_Initialization__char_cat_08.c":100:16)
#loc113 = loc("CWE665_Improper_Initialization__char_cat_08.c":100:24)
#loc114 = loc("CWE665_Improper_Initialization__char_cat_08.c":100:29)
#loc115 = loc("CWE665_Improper_Initialization__char_cat_08.c":100:33)
#loc116 = loc("CWE665_Improper_Initialization__char_cat_08.c":100:9)
#loc117 = loc("CWE665_Improper_Initialization__char_cat_08.c":100:34)
#loc118 = loc("CWE665_Improper_Initialization__char_cat_08.c":101:25)
#loc119 = loc("CWE665_Improper_Initialization__char_cat_08.c":101:16)
#loc120 = loc("CWE665_Improper_Initialization__char_cat_08.c":101:20)
#loc121 = loc("CWE665_Improper_Initialization__char_cat_08.c":101:9)
#loc122 = loc("CWE665_Improper_Initialization__char_cat_08.c":103:9)
#loc123 = loc("CWE665_Improper_Initialization__char_cat_08.c":103:16)
#loc124 = loc("CWE665_Improper_Initialization__char_cat_08.c":103:22)
#loc125 = loc("CWE665_Improper_Initialization__char_cat_08.c":104:19)
#loc126 = loc("CWE665_Improper_Initialization__char_cat_08.c":104:9)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc9, #loc10])
#loc132 = loc(fused[#loc12, #loc11])
#loc133 = loc(fused[#loc13, #loc14])
#loc134 = loc(fused[#loc15, #loc16])
#loc135 = loc(fused[#loc17, #loc14])
#loc136 = loc(fused[#loc18, #loc19])
#loc137 = loc(fused[#loc20, #loc21])
#loc138 = loc(fused[#loc26, #loc27])
#loc139 = loc(fused[#loc31, #loc28])
#loc140 = loc(fused[#loc37, #loc38])
#loc141 = loc(fused[#loc39, #loc40])
#loc142 = loc(fused[#loc41, #loc42])
#loc143 = loc(fused[#loc43, #loc44])
#loc144 = loc(fused[#loc46, #loc45])
#loc145 = loc(fused[#loc48, #loc49])
#loc146 = loc(fused[#loc50, #loc51])
#loc147 = loc(fused[#loc52, #loc53])
#loc148 = loc(fused[#loc55, #loc54])
#loc149 = loc(fused[#loc56, #loc57])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc152 = loc(fused[#loc65, #loc64])
#loc153 = loc(fused[#loc68, #loc69])
#loc154 = loc(fused[#loc70, #loc71])
#loc155 = loc(fused[#loc76, #loc77])
#loc156 = loc(fused[#loc81, #loc78])
#loc157 = loc(fused[#loc87, #loc88])
#loc158 = loc(fused[#loc90, #loc89])
#loc159 = loc(fused[#loc91, #loc92])
#loc160 = loc(fused[#loc93, #loc94])
#loc161 = loc(fused[#loc95, #loc96])
#loc162 = loc(fused[#loc98, #loc97])
#loc163 = loc(fused[#loc99, #loc100])
#loc164 = loc(fused[#loc101, #loc102])
#loc165 = loc(fused[#loc103, #loc100])
#loc166 = loc(fused[#loc105, #loc104])
#loc167 = loc(fused[#loc108, #loc109])
#loc168 = loc(fused[#loc110, #loc111])
#loc169 = loc(fused[#loc116, #loc117])
#loc170 = loc(fused[#loc121, #loc118])
