!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc113)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc114)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc115)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc117)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc120)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc121)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc20)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc124)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc26)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc27)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc114)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc125)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc126)
  ^bb3:  // pred: ^bb2
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc34)
    %13 = cir.call @atof(%12) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc35)
    %14 = cir.cast(floating, %13 : !cir.double), !cir.float loc(#loc35)
    cir.store %14, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc127)
    cir.br ^bb5 loc(#loc32)
  ^bb4:  // pred: ^bb2
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc128)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc41)
    %18 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc42)
    %19 = cir.cast(floating, %18 : !cir.float), !cir.double loc(#loc42)
    %20 = cir.binop(div, %17, %19) : !cir.double loc(#loc129)
    %21 = cir.cast(float_to_int, %20 : !cir.double), !s32i loc(#loc129)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc44)
    cir.return loc(#loc13)
  } loc(#loc118)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc51)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc135)
    %2 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc136)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc60)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc139)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc66)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc67)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc114)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
    %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc69)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc70)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc140)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc141)
  ^bb3:  // pred: ^bb2
    %12 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc74)
    %13 = cir.call @atof(%12) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc75)
    %14 = cir.cast(floating, %13 : !cir.double), !cir.float loc(#loc75)
    cir.store %14, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc142)
    cir.br ^bb5 loc(#loc72)
  ^bb4:  // pred: ^bb2
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb5 loc(#loc65)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc65)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc143)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc144)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc84)
    %18 = cir.cast(floating, %17 : !cir.float), !cir.double loc(#loc84)
    %19 = cir.fabs %18 : !cir.double loc(#loc84)
    %20 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc85)
    %21 = cir.cmp(gt, %19, %20) : !cir.double, !cir.bool loc(#loc145)
    cir.brcond %21 ^bb9, ^bb10 loc(#loc146)
  ^bb9:  // pred: ^bb8
    %22 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc90)
    %23 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc91)
    %24 = cir.cast(floating, %23 : !cir.float), !cir.double loc(#loc91)
    %25 = cir.binop(div, %22, %24) : !cir.double loc(#loc147)
    %26 = cir.cast(float_to_int, %25 : !cir.double), !s32i loc(#loc147)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc93)
    cir.br ^bb11 loc(#loc88)
  ^bb10:  // pred: ^bb8
    %28 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc51)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb11 loc(#loc83)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc83)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc53)
  } loc(#loc133)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc150)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc101)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc105)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc153)
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc109)
    %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc110)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc110)
    %7 = cir.binop(div, %4, %6) : !cir.double loc(#loc155)
    %8 = cir.cast(float_to_int, %7 : !cir.double), !s32i loc(#loc155)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc112)
    cir.return loc(#loc96)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":43:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":26:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":53:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":28:5)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":28:11)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":34:9)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":34:41)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":50:9)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":50:40)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":30:12)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":30:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":31:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":31:10)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":36:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":44:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":36:19)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":36:32)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":36:49)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":36:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":36:59)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":37:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":40:9)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":42:9)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":39:32)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":39:27)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":39:13)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":39:43)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":43:13)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":46:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":46:10)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":50:28)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":50:36)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":51:22)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":51:9)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":113:1)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":117:1)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":115:5)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":115:13)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":116:5)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":116:13)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":90:19)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":60:1)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":92:1)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":85:9)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":85:40)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":62:5)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":62:11)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":68:9)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":68:41)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":64:12)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":64:5)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":65:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":65:10)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":70:9)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":78:9)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":70:19)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":70:32)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":70:49)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":70:13)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":70:59)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":71:9)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":74:9)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":76:9)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":73:32)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":73:27)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":73:13)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":73:43)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":77:23)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":77:13)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":80:5)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":80:10)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":83:5)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":91:5)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":83:13)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":83:21)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":83:8)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":84:5)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":87:5)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":89:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":85:28)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":85:36)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":86:22)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":86:9)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":90:9)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":95:1)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":111:1)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":97:5)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":97:11)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":108:9)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":108:40)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":99:12)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":99:5)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":100:5)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":100:10)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":103:12)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":103:5)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":104:5)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":104:10)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":108:28)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":108:36)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":109:22)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_18.c":109:9)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc10, #loc11])
#loc118 = loc(fused[#loc12, #loc13])
#loc119 = loc(fused[#loc14, #loc15])
#loc120 = loc(fused[#loc16, #loc17])
#loc121 = loc(fused[#loc18, #loc19])
#loc122 = loc(fused[#loc21, #loc20])
#loc123 = loc(fused[#loc22, #loc23])
#loc124 = loc(fused[#loc24, #loc25])
#loc125 = loc(fused[#loc29, #loc30])
#loc126 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc127 = loc(fused[#loc36, #loc37])
#loc128 = loc(fused[#loc39, #loc40])
#loc129 = loc(fused[#loc41, #loc42])
#loc130 = loc(fused[#loc45, #loc46])
#loc131 = loc(fused[#loc47, #loc48])
#loc132 = loc(fused[#loc49, #loc50])
#loc133 = loc(fused[#loc52, #loc53])
#loc134 = loc(fused[#loc54, #loc55])
#loc135 = loc(fused[#loc56, #loc57])
#loc136 = loc(fused[#loc58, #loc59])
#loc137 = loc(fused[#loc61, #loc60])
#loc138 = loc(fused[#loc62, #loc63])
#loc139 = loc(fused[#loc64, #loc65])
#loc140 = loc(fused[#loc69, #loc70])
#loc141 = loc(fused[#loc71, #loc72, #loc73, #loc65])
#loc142 = loc(fused[#loc76, #loc77])
#loc143 = loc(fused[#loc80, #loc81])
#loc144 = loc(fused[#loc82, #loc83])
#loc145 = loc(fused[#loc86, #loc85])
#loc146 = loc(fused[#loc87, #loc88, #loc89, #loc83])
#loc147 = loc(fused[#loc90, #loc91])
#loc148 = loc(fused[#loc95, #loc96])
#loc149 = loc(fused[#loc97, #loc98])
#loc150 = loc(fused[#loc99, #loc100])
#loc151 = loc(fused[#loc102, #loc101])
#loc152 = loc(fused[#loc103, #loc104])
#loc153 = loc(fused[#loc106, #loc105])
#loc154 = loc(fused[#loc107, #loc108])
#loc155 = loc(fused[#loc109, #loc110])
