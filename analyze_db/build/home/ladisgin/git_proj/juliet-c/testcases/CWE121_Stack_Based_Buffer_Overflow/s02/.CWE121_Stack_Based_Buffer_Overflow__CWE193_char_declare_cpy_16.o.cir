!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc63)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc64)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc65)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc66)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc64)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc68)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc69)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc70)
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc19)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc72)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc22)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc73)
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc18)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc64)
    cir.copy %12 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc64)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc29)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc31)
    %16 = cir.call @strcpy(%14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc29)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc10)
  } loc(#loc67)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc76)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc75)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc63)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc78)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc79)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc80)
    cir.br ^bb1 loc(#loc81)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc81)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc48)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc48)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc49)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc51)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc54)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc83)
    cir.br ^bb4 loc(#loc55)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc47)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc84)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc63)
    cir.copy %12 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc63)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc58)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
    %16 = cir.call @strcpy(%14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc58)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb7 loc(#loc57)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc39)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":68:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":68:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":42:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":42:29)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":47:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":30:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":31:26)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":32:29)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":40:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":33:11)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":37:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":37:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":38:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":38:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":38:14)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":38:15)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":39:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":41:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":46:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":44:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":44:16)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":44:22)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":45:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":45:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":75:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":78:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":77:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":77:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":54:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":73:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":56:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":56:12)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":57:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":57:26)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":58:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":58:29)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":59:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":66:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":59:11)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":63:16)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":63:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":64:19)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":64:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":64:14)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":64:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":65:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":67:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":72:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":70:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":70:16)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":70:22)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":71:19)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_16.c":71:9)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc3, #loc4])
#loc65 = loc(fused[#loc5, #loc6])
#loc66 = loc(fused[#loc7, #loc8])
#loc67 = loc(fused[#loc9, #loc10])
#loc68 = loc(fused[#loc11, #loc12])
#loc69 = loc(fused[#loc13, #loc14])
#loc70 = loc(fused[#loc15, #loc16])
#loc71 = loc(fused[#loc17, #loc18])
#loc72 = loc(fused[#loc21, #loc20])
#loc73 = loc(fused[#loc23, #loc22])
#loc74 = loc(fused[#loc27, #loc28])
#loc75 = loc(fused[#loc34, #loc35])
#loc76 = loc(fused[#loc36, #loc37])
#loc77 = loc(fused[#loc38, #loc39])
#loc78 = loc(fused[#loc40, #loc41])
#loc79 = loc(fused[#loc42, #loc43])
#loc80 = loc(fused[#loc44, #loc45])
#loc81 = loc(fused[#loc46, #loc47])
#loc82 = loc(fused[#loc50, #loc49])
#loc83 = loc(fused[#loc52, #loc51])
#loc84 = loc(fused[#loc56, #loc57])
