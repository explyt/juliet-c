!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc478)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc479)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc480)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc481)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc482)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc483)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc484)
  cir.func private @close(!s32i) -> !s32i loc(#loc485)
  cir.func private @printIntLine(!s32i) loc(#loc486)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc487)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_14_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc489)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc28)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc490)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc478)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc33)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc492)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc495)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc496)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc497)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc498)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc42)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc497)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc49)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc50)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc51)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc501)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc58)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc503)
                  cir.if %58 {
                    cir.break loc(#loc60)
                  } loc(#loc504)
                } loc(#loc502)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc505)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc63)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc506)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc507)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc68)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc68)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc508)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc509)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc76)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc76)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc510)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                  %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc512)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc513)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc513)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc89)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc89)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc514)
                  cir.if %62 {
                    cir.break loc(#loc91)
                  } loc(#loc515)
                } loc(#loc511)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc94)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc94)
                %37 = cir.const #cir.int<4> : !u64i loc(#loc94)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc94)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc94)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc94)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc94)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc95)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc95)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc516)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc96)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc97)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc97)
                cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc517)
                cir.scope {
                  %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc103)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc103)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc519)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc104)
                    cir.yield %60 : !cir.bool loc(#loc104)
                  }, false {
                    %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc106)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc520)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc104)
                      cir.yield %64 : !cir.bool loc(#loc104)
                    }, false {
                      %64 = cir.const #false loc(#loc104)
                      cir.yield %64 : !cir.bool loc(#loc104)
                    }) : (!cir.bool) -> !cir.bool loc(#loc104)
                    cir.yield %63 : !cir.bool loc(#loc104)
                  }) : (!cir.bool) -> !cir.bool loc(#loc104)
                  cir.if %59 {
                    cir.break loc(#loc108)
                  } loc(#loc521)
                } loc(#loc518)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc109)
                %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc109)
                %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc111)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc522)
                %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
                %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc113)
                cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc523)
              } loc(#loc500)
              cir.yield loc(#loc46)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc116)
              cir.condition(%14) loc(#loc116)
            } loc(#loc499)
          } loc(#loc499)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc119)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc120)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc525)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc122)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc123)
            } loc(#loc526)
          } loc(#loc524)
        } loc(#loc494)
      } loc(#loc493)
    } loc(#loc491)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc478)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc127)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc528)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc531)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc531)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc531)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc136)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc533)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc141)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc141)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc142)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc22)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc22)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc143)
            } loc(#loc534)
          } loc(#loc532)
        } loc(#loc530)
      } loc(#loc529)
    } loc(#loc527)
    cir.return loc(#loc24)
  } loc(#loc488)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc536)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc146)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc537)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc148)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc538)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc150)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc539)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc152)
    cir.return loc(#loc145)
  } loc(#loc535)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc155)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc541)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc161)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc542)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc478)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc165)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc166)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc544)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc547)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc548)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc549)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc550)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc175)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc175)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc549)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc182)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc183)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc184)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc185)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc553)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc190)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc191)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc191)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc555)
                  cir.if %58 {
                    cir.break loc(#loc193)
                  } loc(#loc556)
                } loc(#loc554)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc557)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc196)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc558)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc559)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc201)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc201)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc560)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc203)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc203)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc204)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc561)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc207)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc207)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc208)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc562)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc213)
                  %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc564)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc565)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc565)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc218)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc219)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc219)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc566)
                  cir.if %62 {
                    cir.break loc(#loc221)
                  } loc(#loc567)
                } loc(#loc563)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc222)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc223)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc223)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc224)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc224)
                %37 = cir.const #cir.int<4> : !u64i loc(#loc224)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc224)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc224)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc224)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc224)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc225)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc225)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc568)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc226)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc227)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc227)
                cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc569)
                cir.scope {
                  %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc233)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc233)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc571)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc234)
                    cir.yield %60 : !cir.bool loc(#loc234)
                  }, false {
                    %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc236)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc572)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc234)
                      cir.yield %64 : !cir.bool loc(#loc234)
                    }, false {
                      %64 = cir.const #false loc(#loc234)
                      cir.yield %64 : !cir.bool loc(#loc234)
                    }) : (!cir.bool) -> !cir.bool loc(#loc234)
                    cir.yield %63 : !cir.bool loc(#loc234)
                  }) : (!cir.bool) -> !cir.bool loc(#loc234)
                  cir.if %59 {
                    cir.break loc(#loc238)
                  } loc(#loc573)
                } loc(#loc570)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc239)
                %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc239)
                %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc240)
                %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc241)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc241)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc574)
                %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc242)
                %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc243)
                cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc575)
              } loc(#loc552)
              cir.yield loc(#loc179)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc246)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc246)
              cir.condition(%14) loc(#loc246)
            } loc(#loc551)
          } loc(#loc551)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc249)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc250)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc250)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc577)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc252)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc253)
            } loc(#loc578)
          } loc(#loc576)
        } loc(#loc546)
      } loc(#loc545)
    } loc(#loc543)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc478)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc256)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc257)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc580)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc154)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc154)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc261)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc583)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc583)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc583)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc269)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc585)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc272)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc586)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc270)
                cir.yield %17 : !cir.bool loc(#loc270)
              }, false {
                %17 = cir.const #false loc(#loc270)
                cir.yield %17 : !cir.bool loc(#loc270)
              }) : (!cir.bool) -> !cir.bool loc(#loc270)
              cir.yield %16 : !cir.bool loc(#loc270)
            }, false {
              %13 = cir.const #false loc(#loc270)
              cir.yield %13 : !cir.bool loc(#loc270)
            }) : (!cir.bool) -> !cir.bool loc(#loc270)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc278)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc278)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc278)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc279)
            } else {
              %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc155)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc155)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc280)
            } loc(#loc587)
          } loc(#loc584)
        } loc(#loc582)
      } loc(#loc581)
    } loc(#loc579)
    cir.return loc(#loc157)
  } loc(#loc540)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc589)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc285)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc286)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc590)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc478)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc290)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc291)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc592)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc595)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc596)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc597)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc598)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc300)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc300)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc597)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc307)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc308)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc309)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc310)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc601)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc315)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc316)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc316)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc603)
                  cir.if %58 {
                    cir.break loc(#loc318)
                  } loc(#loc604)
                } loc(#loc602)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc605)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc321)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc606)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc607)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc326)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc326)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc608)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc328)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc328)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc329)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc609)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc332)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc332)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc333)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc610)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc338)
                  %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc612)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc613)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc613)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc343)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc344)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc344)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc614)
                  cir.if %62 {
                    cir.break loc(#loc346)
                  } loc(#loc615)
                } loc(#loc611)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc347)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc348)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc348)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc349)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc349)
                %37 = cir.const #cir.int<4> : !u64i loc(#loc349)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc349)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc349)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc349)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc349)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc350)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc350)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc616)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc351)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc352)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc352)
                cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc617)
                cir.scope {
                  %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc357)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc358)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc358)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc619)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc359)
                    cir.yield %60 : !cir.bool loc(#loc359)
                  }, false {
                    %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc360)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc361)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc620)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc359)
                      cir.yield %64 : !cir.bool loc(#loc359)
                    }, false {
                      %64 = cir.const #false loc(#loc359)
                      cir.yield %64 : !cir.bool loc(#loc359)
                    }) : (!cir.bool) -> !cir.bool loc(#loc359)
                    cir.yield %63 : !cir.bool loc(#loc359)
                  }) : (!cir.bool) -> !cir.bool loc(#loc359)
                  cir.if %59 {
                    cir.break loc(#loc363)
                  } loc(#loc621)
                } loc(#loc618)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc364)
                %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc364)
                %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc365)
                %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc366)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc366)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc622)
                %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc367)
                %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc368)
                cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc623)
              } loc(#loc600)
              cir.yield loc(#loc304)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc371)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc371)
              cir.condition(%14) loc(#loc371)
            } loc(#loc599)
          } loc(#loc599)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc374)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc375)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc375)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc625)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc377)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc378)
            } loc(#loc626)
          } loc(#loc624)
        } loc(#loc594)
      } loc(#loc593)
    } loc(#loc591)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc478)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc381)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc382)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc628)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc631)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc631)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc631)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc390)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc391)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc633)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc393)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc394)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc634)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc392)
                cir.yield %17 : !cir.bool loc(#loc392)
              }, false {
                %17 = cir.const #false loc(#loc392)
                cir.yield %17 : !cir.bool loc(#loc392)
              }) : (!cir.bool) -> !cir.bool loc(#loc392)
              cir.yield %16 : !cir.bool loc(#loc392)
            }, false {
              %13 = cir.const #false loc(#loc392)
              cir.yield %13 : !cir.bool loc(#loc392)
            }) : (!cir.bool) -> !cir.bool loc(#loc392)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc399)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc400)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc400)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc400)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc401)
            } else {
              %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc402)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc402)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc403)
            } loc(#loc635)
          } loc(#loc632)
        } loc(#loc630)
      } loc(#loc629)
    } loc(#loc627)
    cir.return loc(#loc282)
  } loc(#loc588)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc637)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc408)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc409)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc638)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc478)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc413)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc414)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc640)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc418)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc418)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc419)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc420)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc642)
      } loc(#loc641)
    } loc(#loc639)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc478)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc424)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc425)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc644)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc647)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc647)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc647)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc433)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc434)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc649)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc438)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc439)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc439)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc439)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc440)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc441)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc441)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc442)
            } loc(#loc650)
          } loc(#loc648)
        } loc(#loc646)
      } loc(#loc645)
    } loc(#loc643)
    cir.return loc(#loc405)
  } loc(#loc636)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc652)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc447)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc448)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc653)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc478)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc452)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc453)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc655)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc455)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc657)
      } loc(#loc656)
    } loc(#loc654)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc478)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc459)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc460)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc659)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc662)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc662)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc662)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc468)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc469)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc664)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc473)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc474)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc474)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc474)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc475)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc476)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc476)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc477)
            } loc(#loc665)
          } loc(#loc663)
        } loc(#loc661)
      } loc(#loc660)
    } loc(#loc658)
    cir.return loc(#loc444)
  } loc(#loc651)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_14.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":77:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":120:27)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":44:1)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":124:1)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":46:5)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":46:9)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":48:13)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":48:12)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":48:5)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":49:5)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":107:5)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":49:8)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":49:20)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":50:5)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":51:9)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":106:9)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":56:13)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":56:17)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":57:13)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":57:32)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":58:13)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":58:36)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":59:13)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":59:45)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":60:13)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":95:21)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":61:13)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":94:13)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":70:40)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":70:49)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":70:62)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":70:33)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":70:17)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":70:73)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":71:17)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":74:17)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":71:21)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":71:38)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":72:17)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":73:21)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":75:24)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":75:25)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":75:34)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":75:37)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":75:51)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":75:17)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":75:52)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":76:38)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":76:17)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":77:43)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":77:17)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":77:63)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":78:42)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":78:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":78:17)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":78:50)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":79:17)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":82:17)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":79:29)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":79:62)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":79:63)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":79:72)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":79:86)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":79:21)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":79:92)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":80:17)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":81:21)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":85:35)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":85:50)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":85:63)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":85:81)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":85:84)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":85:30)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":85:17)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":85:85)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":86:17)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":89:17)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":86:21)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":86:35)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":86:48)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":86:51)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":86:65)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":87:17)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":88:21)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":91:43)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":91:29)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":91:17)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":93:29)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":93:24)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":93:17)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":93:40)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":95:20)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":96:13)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":99:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":96:17)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":96:34)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":97:13)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":98:30)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":98:17)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":108:5)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":123:5)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":108:8)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":108:20)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":109:5)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":110:9)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":122:9)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":111:13)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":111:34)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":114:13)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":121:13)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":114:17)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":114:24)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":115:13)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":117:13)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":119:13)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":116:37)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":116:30)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":116:17)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":120:17)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":364:1)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":370:1)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":366:5)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":366:14)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":367:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":367:14)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":368:5)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":368:14)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":369:5)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":369:14)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":198:19)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":211:27)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":131:1)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":215:1)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":133:5)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":133:9)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":135:13)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":135:12)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":135:5)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":136:5)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":194:5)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":136:8)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":136:20)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":137:5)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":138:9)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":193:9)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":143:13)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":143:17)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":144:13)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":144:32)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":145:13)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":145:36)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":146:13)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":146:45)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":147:13)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":182:21)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":148:13)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":181:13)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":157:40)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":157:49)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":157:62)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":157:33)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":157:17)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":157:73)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":158:17)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":161:17)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":158:21)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":158:38)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":159:17)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":160:21)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":162:24)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":162:25)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":162:34)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":162:37)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":162:51)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":162:17)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":162:52)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":163:38)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":163:17)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":164:53)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":164:43)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":164:17)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":164:63)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":165:42)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":165:36)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":165:17)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":165:50)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":166:17)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":169:17)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":166:29)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":166:62)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":166:63)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":166:72)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":166:86)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":166:21)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":166:92)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":167:17)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":168:21)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":172:35)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":172:50)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":172:63)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":172:81)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":172:84)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":172:30)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":172:17)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":172:85)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":173:17)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":176:17)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":173:21)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":173:35)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":173:48)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":173:51)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":173:65)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":174:17)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":175:21)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":178:43)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":178:29)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":178:17)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":180:29)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":180:24)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":180:17)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":180:40)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":182:20)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":183:13)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":186:13)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":183:17)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":183:34)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":184:13)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":185:30)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":185:17)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":195:5)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":214:5)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":195:8)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":195:20)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":196:5)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":199:5)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":201:5)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":198:9)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":202:9)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":213:9)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":203:13)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":203:34)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":205:13)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":212:13)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":205:17)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":205:25)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":205:27)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":205:30)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":205:38)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":205:40)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":206:13)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":208:13)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":210:13)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":207:37)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":207:30)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":207:17)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":211:17)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":218:1)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":297:1)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":220:5)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":220:9)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":222:13)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":222:12)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":222:5)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":223:5)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":281:5)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":223:8)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":223:20)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":224:5)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":225:9)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":280:9)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":230:13)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":230:17)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":231:13)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":231:32)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":232:13)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":232:36)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":233:13)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":233:45)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":234:13)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":269:21)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":235:13)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":268:13)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":244:40)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":244:49)
#loc309 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":244:62)
#loc310 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":244:33)
#loc311 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":244:17)
#loc312 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":244:73)
#loc313 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":245:17)
#loc314 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":248:17)
#loc315 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":245:21)
#loc316 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":245:38)
#loc317 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":246:17)
#loc318 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":247:21)
#loc319 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":249:24)
#loc320 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":249:25)
#loc321 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":249:34)
#loc322 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":249:37)
#loc323 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":249:51)
#loc324 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":249:17)
#loc325 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":249:52)
#loc326 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":250:38)
#loc327 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":250:17)
#loc328 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":251:53)
#loc329 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":251:43)
#loc330 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":251:17)
#loc331 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":251:63)
#loc332 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":252:42)
#loc333 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":252:36)
#loc334 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":252:17)
#loc335 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":252:50)
#loc336 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":253:17)
#loc337 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":256:17)
#loc338 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":253:29)
#loc339 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":253:62)
#loc340 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":253:63)
#loc341 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":253:72)
#loc342 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":253:86)
#loc343 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":253:21)
#loc344 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":253:92)
#loc345 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":254:17)
#loc346 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":255:21)
#loc347 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":259:35)
#loc348 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":259:50)
#loc349 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":259:63)
#loc350 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":259:81)
#loc351 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":259:84)
#loc352 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":259:30)
#loc353 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":259:17)
#loc354 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":259:85)
#loc355 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":260:17)
#loc356 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":263:17)
#loc357 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":260:21)
#loc358 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":260:35)
#loc359 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":260:48)
#loc360 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":260:51)
#loc361 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":260:65)
#loc362 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":261:17)
#loc363 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":262:21)
#loc364 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":265:43)
#loc365 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":265:29)
#loc366 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":265:17)
#loc367 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":267:29)
#loc368 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":267:24)
#loc369 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":267:17)
#loc370 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":267:40)
#loc371 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":269:20)
#loc372 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":270:13)
#loc373 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":273:13)
#loc374 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":270:17)
#loc375 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":270:34)
#loc376 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":271:13)
#loc377 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":272:30)
#loc378 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":272:17)
#loc379 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":282:5)
#loc380 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":296:5)
#loc381 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":282:8)
#loc382 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":282:20)
#loc383 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":283:5)
#loc384 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":284:9)
#loc385 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":295:9)
#loc386 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":285:13)
#loc387 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":285:34)
#loc388 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":287:13)
#loc389 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":294:13)
#loc390 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":287:17)
#loc391 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":287:25)
#loc392 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":287:27)
#loc393 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":287:30)
#loc394 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":287:38)
#loc395 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":287:40)
#loc396 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":288:13)
#loc397 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":290:13)
#loc398 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":292:13)
#loc399 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":289:37)
#loc400 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":289:30)
#loc401 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":289:17)
#loc402 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":293:27)
#loc403 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":293:17)
#loc404 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":300:1)
#loc405 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":332:1)
#loc406 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":302:5)
#loc407 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":302:9)
#loc408 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":304:13)
#loc409 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":304:12)
#loc410 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":304:5)
#loc411 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":305:5)
#loc412 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":315:5)
#loc413 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":305:8)
#loc414 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":305:20)
#loc415 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":306:5)
#loc416 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":309:5)
#loc417 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":311:5)
#loc418 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":308:19)
#loc419 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":308:9)
#loc420 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":314:16)
#loc421 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":314:9)
#loc422 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":316:5)
#loc423 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":331:5)
#loc424 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":316:8)
#loc425 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":316:20)
#loc426 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":317:5)
#loc427 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":318:9)
#loc428 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":330:9)
#loc429 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":319:13)
#loc430 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":319:34)
#loc431 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":322:13)
#loc432 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":329:13)
#loc433 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":322:17)
#loc434 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":322:24)
#loc435 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":323:13)
#loc436 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":325:13)
#loc437 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":327:13)
#loc438 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":324:37)
#loc439 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":324:30)
#loc440 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":324:17)
#loc441 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":328:27)
#loc442 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":328:17)
#loc443 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":335:1)
#loc444 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":362:1)
#loc445 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":337:5)
#loc446 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":337:9)
#loc447 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":339:13)
#loc448 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":339:12)
#loc449 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":339:5)
#loc450 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":340:5)
#loc451 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":345:5)
#loc452 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":340:8)
#loc453 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":340:20)
#loc454 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":341:5)
#loc455 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":344:16)
#loc456 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":344:9)
#loc457 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":346:5)
#loc458 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":361:5)
#loc459 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":346:8)
#loc460 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":346:20)
#loc461 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":347:5)
#loc462 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":348:9)
#loc463 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":360:9)
#loc464 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":349:13)
#loc465 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":349:34)
#loc466 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":352:13)
#loc467 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":359:13)
#loc468 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":352:17)
#loc469 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":352:24)
#loc470 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":353:13)
#loc471 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":355:13)
#loc472 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":357:13)
#loc473 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":354:37)
#loc474 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":354:30)
#loc475 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":354:17)
#loc476 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":358:27)
#loc477 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_14.c":358:17)
#loc478 = loc(fused[#loc1, #loc2])
#loc479 = loc(fused[#loc3, #loc4])
#loc480 = loc(fused[#loc5, #loc6])
#loc481 = loc(fused[#loc8, #loc9])
#loc482 = loc(fused[#loc10, #loc11])
#loc483 = loc(fused[#loc12, #loc13])
#loc484 = loc(fused[#loc14, #loc15])
#loc485 = loc(fused[#loc16, #loc17])
#loc486 = loc(fused[#loc18, #loc19])
#loc487 = loc(fused[#loc20, #loc21])
#loc488 = loc(fused[#loc23, #loc24])
#loc489 = loc(fused[#loc25, #loc26])
#loc490 = loc(fused[#loc29, #loc27])
#loc491 = loc(fused[#loc30, #loc31])
#loc492 = loc(fused[#loc32, #loc33])
#loc493 = loc(fused[#loc34, #loc31])
#loc494 = loc(fused[#loc35, #loc36])
#loc495 = loc(fused[#loc37, #loc38])
#loc496 = loc(fused[#loc39, #loc40])
#loc497 = loc(fused[#loc41, #loc42])
#loc498 = loc(fused[#loc43, #loc44])
#loc499 = loc(fused[#loc45, #loc46])
#loc500 = loc(fused[#loc47, #loc48])
#loc501 = loc(fused[#loc53, #loc54])
#loc502 = loc(fused[#loc55, #loc56])
#loc503 = loc(fused[#loc57, #loc58])
#loc504 = loc(fused[#loc59, #loc56])
#loc505 = loc(fused[#loc61, #loc62])
#loc506 = loc(fused[#loc64, #loc65])
#loc507 = loc(fused[#loc66, #loc67])
#loc508 = loc(fused[#loc70, #loc68])
#loc509 = loc(fused[#loc74, #loc75])
#loc510 = loc(fused[#loc79, #loc80])
#loc511 = loc(fused[#loc81, #loc82])
#loc512 = loc(fused[#loc84, #loc85])
#loc513 = loc(fused[#loc86, #loc87])
#loc514 = loc(fused[#loc88, #loc89])
#loc515 = loc(fused[#loc90, #loc82])
#loc516 = loc(fused[#loc94, #loc95])
#loc517 = loc(fused[#loc98, #loc99])
#loc518 = loc(fused[#loc100, #loc101])
#loc519 = loc(fused[#loc102, #loc103])
#loc520 = loc(fused[#loc105, #loc106])
#loc521 = loc(fused[#loc107, #loc101])
#loc522 = loc(fused[#loc111, #loc109])
#loc523 = loc(fused[#loc114, #loc115])
#loc524 = loc(fused[#loc117, #loc118])
#loc525 = loc(fused[#loc119, #loc120])
#loc526 = loc(fused[#loc121, #loc118])
#loc527 = loc(fused[#loc124, #loc125])
#loc528 = loc(fused[#loc126, #loc127])
#loc529 = loc(fused[#loc128, #loc125])
#loc530 = loc(fused[#loc129, #loc130])
#loc531 = loc(fused[#loc131, #loc132])
#loc532 = loc(fused[#loc133, #loc134])
#loc533 = loc(fused[#loc135, #loc136])
#loc534 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc535 = loc(fused[#loc144, #loc145])
#loc536 = loc(fused[#loc146, #loc147])
#loc537 = loc(fused[#loc148, #loc149])
#loc538 = loc(fused[#loc150, #loc151])
#loc539 = loc(fused[#loc152, #loc153])
#loc540 = loc(fused[#loc156, #loc157])
#loc541 = loc(fused[#loc158, #loc159])
#loc542 = loc(fused[#loc162, #loc160])
#loc543 = loc(fused[#loc163, #loc164])
#loc544 = loc(fused[#loc165, #loc166])
#loc545 = loc(fused[#loc167, #loc164])
#loc546 = loc(fused[#loc168, #loc169])
#loc547 = loc(fused[#loc170, #loc171])
#loc548 = loc(fused[#loc172, #loc173])
#loc549 = loc(fused[#loc174, #loc175])
#loc550 = loc(fused[#loc176, #loc177])
#loc551 = loc(fused[#loc178, #loc179])
#loc552 = loc(fused[#loc180, #loc181])
#loc553 = loc(fused[#loc186, #loc187])
#loc554 = loc(fused[#loc188, #loc189])
#loc555 = loc(fused[#loc190, #loc191])
#loc556 = loc(fused[#loc192, #loc189])
#loc557 = loc(fused[#loc194, #loc195])
#loc558 = loc(fused[#loc197, #loc198])
#loc559 = loc(fused[#loc199, #loc200])
#loc560 = loc(fused[#loc202, #loc201])
#loc561 = loc(fused[#loc205, #loc206])
#loc562 = loc(fused[#loc209, #loc210])
#loc563 = loc(fused[#loc211, #loc212])
#loc564 = loc(fused[#loc214, #loc215])
#loc565 = loc(fused[#loc216, #loc217])
#loc566 = loc(fused[#loc218, #loc219])
#loc567 = loc(fused[#loc220, #loc212])
#loc568 = loc(fused[#loc224, #loc225])
#loc569 = loc(fused[#loc228, #loc229])
#loc570 = loc(fused[#loc230, #loc231])
#loc571 = loc(fused[#loc232, #loc233])
#loc572 = loc(fused[#loc235, #loc236])
#loc573 = loc(fused[#loc237, #loc231])
#loc574 = loc(fused[#loc241, #loc239])
#loc575 = loc(fused[#loc244, #loc245])
#loc576 = loc(fused[#loc247, #loc248])
#loc577 = loc(fused[#loc249, #loc250])
#loc578 = loc(fused[#loc251, #loc248])
#loc579 = loc(fused[#loc254, #loc255])
#loc580 = loc(fused[#loc256, #loc257])
#loc581 = loc(fused[#loc258, #loc259, #loc260, #loc255])
#loc582 = loc(fused[#loc262, #loc263])
#loc583 = loc(fused[#loc264, #loc265])
#loc584 = loc(fused[#loc266, #loc267])
#loc585 = loc(fused[#loc268, #loc269])
#loc586 = loc(fused[#loc271, #loc273])
#loc587 = loc(fused[#loc274, #loc275, #loc276, #loc267])
#loc588 = loc(fused[#loc281, #loc282])
#loc589 = loc(fused[#loc283, #loc284])
#loc590 = loc(fused[#loc287, #loc285])
#loc591 = loc(fused[#loc288, #loc289])
#loc592 = loc(fused[#loc290, #loc291])
#loc593 = loc(fused[#loc292, #loc289])
#loc594 = loc(fused[#loc293, #loc294])
#loc595 = loc(fused[#loc295, #loc296])
#loc596 = loc(fused[#loc297, #loc298])
#loc597 = loc(fused[#loc299, #loc300])
#loc598 = loc(fused[#loc301, #loc302])
#loc599 = loc(fused[#loc303, #loc304])
#loc600 = loc(fused[#loc305, #loc306])
#loc601 = loc(fused[#loc311, #loc312])
#loc602 = loc(fused[#loc313, #loc314])
#loc603 = loc(fused[#loc315, #loc316])
#loc604 = loc(fused[#loc317, #loc314])
#loc605 = loc(fused[#loc319, #loc320])
#loc606 = loc(fused[#loc322, #loc323])
#loc607 = loc(fused[#loc324, #loc325])
#loc608 = loc(fused[#loc327, #loc326])
#loc609 = loc(fused[#loc330, #loc331])
#loc610 = loc(fused[#loc334, #loc335])
#loc611 = loc(fused[#loc336, #loc337])
#loc612 = loc(fused[#loc339, #loc340])
#loc613 = loc(fused[#loc341, #loc342])
#loc614 = loc(fused[#loc343, #loc344])
#loc615 = loc(fused[#loc345, #loc337])
#loc616 = loc(fused[#loc349, #loc350])
#loc617 = loc(fused[#loc353, #loc354])
#loc618 = loc(fused[#loc355, #loc356])
#loc619 = loc(fused[#loc357, #loc358])
#loc620 = loc(fused[#loc360, #loc361])
#loc621 = loc(fused[#loc362, #loc356])
#loc622 = loc(fused[#loc366, #loc364])
#loc623 = loc(fused[#loc369, #loc370])
#loc624 = loc(fused[#loc372, #loc373])
#loc625 = loc(fused[#loc374, #loc375])
#loc626 = loc(fused[#loc376, #loc373])
#loc627 = loc(fused[#loc379, #loc380])
#loc628 = loc(fused[#loc381, #loc382])
#loc629 = loc(fused[#loc383, #loc380])
#loc630 = loc(fused[#loc384, #loc385])
#loc631 = loc(fused[#loc386, #loc387])
#loc632 = loc(fused[#loc388, #loc389])
#loc633 = loc(fused[#loc390, #loc391])
#loc634 = loc(fused[#loc393, #loc395])
#loc635 = loc(fused[#loc396, #loc397, #loc398, #loc389])
#loc636 = loc(fused[#loc404, #loc405])
#loc637 = loc(fused[#loc406, #loc407])
#loc638 = loc(fused[#loc410, #loc408])
#loc639 = loc(fused[#loc411, #loc412])
#loc640 = loc(fused[#loc413, #loc414])
#loc641 = loc(fused[#loc415, #loc416, #loc417, #loc412])
#loc642 = loc(fused[#loc421, #loc420])
#loc643 = loc(fused[#loc422, #loc423])
#loc644 = loc(fused[#loc424, #loc425])
#loc645 = loc(fused[#loc426, #loc423])
#loc646 = loc(fused[#loc427, #loc428])
#loc647 = loc(fused[#loc429, #loc430])
#loc648 = loc(fused[#loc431, #loc432])
#loc649 = loc(fused[#loc433, #loc434])
#loc650 = loc(fused[#loc435, #loc436, #loc437, #loc432])
#loc651 = loc(fused[#loc443, #loc444])
#loc652 = loc(fused[#loc445, #loc446])
#loc653 = loc(fused[#loc449, #loc447])
#loc654 = loc(fused[#loc450, #loc451])
#loc655 = loc(fused[#loc452, #loc453])
#loc656 = loc(fused[#loc454, #loc451])
#loc657 = loc(fused[#loc456, #loc455])
#loc658 = loc(fused[#loc457, #loc458])
#loc659 = loc(fused[#loc459, #loc460])
#loc660 = loc(fused[#loc461, #loc458])
#loc661 = loc(fused[#loc462, #loc463])
#loc662 = loc(fused[#loc464, #loc465])
#loc663 = loc(fused[#loc466, #loc467])
#loc664 = loc(fused[#loc468, #loc469])
#loc665 = loc(fused[#loc470, #loc471, #loc472, #loc467])
