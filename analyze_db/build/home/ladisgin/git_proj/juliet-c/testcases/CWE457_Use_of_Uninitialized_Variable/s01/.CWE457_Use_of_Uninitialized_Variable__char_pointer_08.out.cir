!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":149:10)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":149:14)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":149:20)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":149:32)
#loc162 = loc(fused[#loc39, #loc40])
#loc163 = loc(fused[#loc41, #loc42])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__char_pointer_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc149)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc9)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc150)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc8)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc8)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc151)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc152)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc14)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc153)
  ^bb6:  // pred: ^bb5
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc18)
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc4)
  } loc(#loc146)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__char_pointer_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc20)
  } loc(#loc154)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc36)
  cir.func @main(%arg0: !s32i loc(fused[#loc39, #loc40]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc41, #loc42])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc38)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc43)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc43)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc44)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc45)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc45)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc46)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc33)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__char_pointer_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE457_Use_of_Uninitialized_Variable__char_pointer_08_good() : () -> () loc(#loc48)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc34)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc35)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__char_pointer_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE457_Use_of_Uninitialized_Variable__char_pointer_08_bad() : () -> () loc(#loc52)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc36)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc55)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %17 : !s32i loc(#loc166)
  } loc(#loc161)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc59)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    cir.return %2 : !s32i loc(#loc168)
  } loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc62)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc172)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc69)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc173)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc68)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc68)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc174)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc175)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc74)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc176)
  ^bb6:  // pred: ^bb5
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc61)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb8 loc(#loc77)
  ^bb7:  // pred: ^bb5
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc62)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc62)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb8 loc(#loc73)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc73)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc64)
  } loc(#loc169)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc85)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.return %2 : !s32i loc(#loc179)
  } loc(#loc178)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc183)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc93)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc184)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc92)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc185)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc186)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc98)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc98)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc187)
  ^bb6:  // pred: ^bb5
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc101)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb7 loc(#loc97)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc97)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc88)
  } loc(#loc180)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    cir.br ^bb1 loc(#loc191)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc192)
    %2 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc111)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc111)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc193)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc116)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb4 loc(#loc114)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc118)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc118)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc110)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc195)
  ^bb6:  // pred: ^bb5
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc196)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc122)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc197)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc121)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc106)
  } loc(#loc189)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc201)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc133)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc133)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc202)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc136)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc136)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
    cir.br ^bb3 loc(#loc132)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc132)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc204)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc205)
    %7 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc140)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc140)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc206)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.br ^bb7 loc(#loc139)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc139)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc128)
  } loc(#loc198)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":37:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":50:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":39:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":39:12)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":40:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":44:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":40:8)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":40:26)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":41:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":45:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":49:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":45:8)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":45:26)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":46:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":48:19)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":48:9)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":132:1)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":138:1)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":134:5)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":134:14)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":135:5)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":135:14)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":136:5)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":136:14)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":137:5)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":137:14)
#loc29 = loc("/usr/include/stdlib.h":575:1)
#loc30 = loc("/usr/include/stdlib.h":575:41)
#loc31 = loc("/usr/include/time.h":76:1)
#loc32 = loc("/usr/include/time.h":76:38)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":154:15)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":156:15)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":159:15)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":161:15)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":149:1)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":164:1)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":150:1)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":152:27)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":152:22)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":152:5)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":154:5)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":155:5)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":155:64)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":156:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":159:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":160:5)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":160:63)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":161:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":163:12)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":163:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":25:1)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":28:1)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":27:12)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":27:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":68:19)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":73:16)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":57:1)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":76:1)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":59:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":59:12)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":60:5)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":64:5)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":60:8)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":60:26)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":61:5)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":65:5)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":75:5)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":65:8)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":65:27)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":66:5)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":69:5)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":71:5)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":68:9)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":73:9)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":74:19)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":74:9)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":30:1)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":33:1)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":32:12)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":32:5)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":79:1)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":93:1)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":81:5)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":81:12)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":82:5)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":86:5)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":82:8)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":82:26)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":83:5)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":87:5)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":92:5)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":87:8)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":87:26)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":88:5)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":90:16)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":90:9)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":91:19)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":91:9)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":96:1)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":114:1)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":98:5)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":98:12)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":99:5)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":108:5)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":99:8)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":99:27)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":100:5)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":103:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":105:5)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":102:19)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":102:9)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":107:16)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":107:9)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":109:5)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":113:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":109:8)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":109:26)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":110:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":112:19)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":112:9)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":117:1)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":130:1)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":119:5)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":119:12)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":120:5)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":124:5)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":120:8)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":120:26)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":121:5)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":123:16)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":123:9)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":125:5)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":129:5)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":125:8)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":125:26)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":126:5)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":128:19)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":128:9)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc8])
#loc151 = loc(fused[#loc12, #loc13])
#loc152 = loc(fused[#loc14, #loc15])
#loc153 = loc(fused[#loc16, #loc13])
#loc154 = loc(fused[#loc19, #loc20])
#loc155 = loc(fused[#loc21, #loc22])
#loc156 = loc(fused[#loc23, #loc24])
#loc157 = loc(fused[#loc25, #loc26])
#loc158 = loc(fused[#loc27, #loc28])
#loc159 = loc(fused[#loc29, #loc30])
#loc160 = loc(fused[#loc31, #loc32])
#loc161 = loc(fused[#loc37, #loc38])
#loc164 = loc(fused[#loc48, #loc49])
#loc165 = loc(fused[#loc52, #loc53])
#loc166 = loc(fused[#loc56, #loc55])
#loc167 = loc(fused[#loc57, #loc58])
#loc168 = loc(fused[#loc60, #loc59])
#loc169 = loc(fused[#loc63, #loc64])
#loc170 = loc(fused[#loc65, #loc66])
#loc171 = loc(fused[#loc67, #loc68])
#loc172 = loc(fused[#loc69, #loc70])
#loc173 = loc(fused[#loc71, #loc68])
#loc174 = loc(fused[#loc72, #loc73])
#loc175 = loc(fused[#loc74, #loc75])
#loc176 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc177 = loc(fused[#loc80, #loc62])
#loc178 = loc(fused[#loc83, #loc84])
#loc179 = loc(fused[#loc86, #loc85])
#loc180 = loc(fused[#loc87, #loc88])
#loc181 = loc(fused[#loc89, #loc90])
#loc182 = loc(fused[#loc91, #loc92])
#loc183 = loc(fused[#loc93, #loc94])
#loc184 = loc(fused[#loc95, #loc92])
#loc185 = loc(fused[#loc96, #loc97])
#loc186 = loc(fused[#loc98, #loc99])
#loc187 = loc(fused[#loc100, #loc97])
#loc188 = loc(fused[#loc102, #loc101])
#loc189 = loc(fused[#loc105, #loc106])
#loc190 = loc(fused[#loc107, #loc108])
#loc191 = loc(fused[#loc109, #loc110])
#loc192 = loc(fused[#loc111, #loc112])
#loc193 = loc(fused[#loc113, #loc114, #loc115, #loc110])
#loc194 = loc(fused[#loc119, #loc118])
#loc195 = loc(fused[#loc120, #loc121])
#loc196 = loc(fused[#loc122, #loc123])
#loc197 = loc(fused[#loc124, #loc121])
#loc198 = loc(fused[#loc127, #loc128])
#loc199 = loc(fused[#loc129, #loc130])
#loc200 = loc(fused[#loc131, #loc132])
#loc201 = loc(fused[#loc133, #loc134])
#loc202 = loc(fused[#loc135, #loc132])
#loc203 = loc(fused[#loc137, #loc136])
#loc204 = loc(fused[#loc138, #loc139])
#loc205 = loc(fused[#loc140, #loc141])
#loc206 = loc(fused[#loc142, #loc139])
