!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc137 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":225:10)
#loc138 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":225:14)
#loc139 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":225:20)
#loc140 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":225:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc332 = loc(fused[#loc137, #loc138])
#loc333 = loc(fused[#loc139, #loc140])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc280)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc281)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc282)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc283)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc284)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @close(!s32i) -> !s32i loc(#loc286)
  cir.func private @printIntLine(!s32i) loc(#loc287)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_modulo_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc289)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc290)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc291)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc292)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc293)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc31)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.goto "source" loc(#loc295)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc35)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc27)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    cir.scope {
      cir.do {
        %12 = cir.const #cir.int<2> : !s32i loc(#loc38)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %14 = cir.const #cir.int<6> : !s32i loc(#loc40)
        %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc41)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc297)
        cir.scope {
          %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc46)
          %55 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc47)
          %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc299)
          cir.if %57 {
            cir.break loc(#loc49)
          } loc(#loc300)
        } loc(#loc298)
        %16 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc301)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc52)
        %18 = cir.const #cir.int<16> : !u64i loc(#loc302)
        cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc303)
        %19 = cir.const #cir.int<2> : !s32i loc(#loc57)
        %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc57)
        %21 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
        cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc304)
        %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
        %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc60)
        %25 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
        %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
        cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc305)
        %27 = cir.const #cir.int<27015> : !s32i loc(#loc65)
        %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc65)
        %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc66)
        %30 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
        cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc306)
        cir.scope {
          %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc72)
          %55 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc308)
          %56 = cir.const #cir.int<16> : !u64i loc(#loc309)
          %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc309)
          %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc77)
          %59 = cir.const #cir.int<1> : !s32i loc(#loc78)
          %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc78)
          %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc310)
          cir.if %61 {
            cir.break loc(#loc80)
          } loc(#loc311)
        } loc(#loc307)
        %31 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc81)
        %32 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc82)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
        %34 = cir.const #cir.int<3> : !s32i loc(#loc83)
        %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc83)
        %36 = cir.const #cir.int<4> : !u64i loc(#loc83)
        %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc83)
        %38 = cir.const #cir.int<2> : !s32i loc(#loc83)
        %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc83)
        %40 = cir.binop(add, %37, %39) : !u64i loc(#loc83)
        %41 = cir.const #cir.int<1> : !s32i loc(#loc84)
        %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc84)
        %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc312)
        %44 = cir.const #cir.int<0> : !s32i loc(#loc85)
        %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc86)
        %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc86)
        cir.store %46, %1 : !s32i, !cir.ptr<!s32i> loc(#loc313)
        cir.scope {
          %54 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc91)
          %55 = cir.const #cir.int<1> : !s32i loc(#loc92)
          %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc92)
          %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc315)
          %58 = cir.ternary(%57, true {
            %59 = cir.const #true loc(#loc93)
            cir.yield %59 : !cir.bool loc(#loc93)
          }, false {
            %59 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %60 = cir.const #cir.int<0> : !s32i loc(#loc95)
            %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc316)
            %62 = cir.ternary(%61, true {
              %63 = cir.const #true loc(#loc93)
              cir.yield %63 : !cir.bool loc(#loc93)
            }, false {
              %63 = cir.const #false loc(#loc93)
              cir.yield %63 : !cir.bool loc(#loc93)
            }) : (!cir.bool) -> !cir.bool loc(#loc93)
            cir.yield %62 : !cir.bool loc(#loc93)
          }) : (!cir.bool) -> !cir.bool loc(#loc93)
          cir.if %58 {
            cir.break loc(#loc97)
          } loc(#loc317)
        } loc(#loc314)
        %47 = cir.const #cir.int<0> : !s32i loc(#loc98)
        %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc98)
        %49 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc99)
        %50 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
        %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc100)
        cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc318)
        %52 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
        %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc102)
        cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc319)
        cir.yield loc(#loc37)
      } while {
        %12 = cir.const #cir.int<0> : !s32i loc(#loc105)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc105)
        cir.condition(%13) loc(#loc105)
      } loc(#loc296)
    } loc(#loc296)
    cir.scope {
      %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc108)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc109)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc109)
      %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc321)
      cir.if %15 {
        %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc111)
        %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc112)
      } loc(#loc322)
    } loc(#loc320)
    cir.goto "sink" loc(#loc323)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc115)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc116)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc324)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc118)
    cir.return loc(#loc19)
  } loc(#loc288)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_modulo_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc326)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc121)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc327)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc123)
    cir.return loc(#loc120)
  } loc(#loc325)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc328)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc329)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc134)
  cir.func @main(%arg0: !s32i loc(fused[#loc137, #loc138]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc139, #loc140])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc332)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc333)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc136)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc141)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc142)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc143)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc143)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc144)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc131)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_modulo_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc334)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_modulo_18_good() : () -> () loc(#loc146)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc132)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc133)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_modulo_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc335)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_modulo_18_bad() : () -> () loc(#loc150)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc134)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc153)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc336)
    cir.return %17 : !s32i loc(#loc336)
  } loc(#loc331)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc155)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc338)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc339)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc340)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc341)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc342)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc169)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.goto "source" loc(#loc344)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc173)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc165)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.scope {
      cir.do {
        %9 = cir.const #cir.int<2> : !s32i loc(#loc176)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %11 = cir.const #cir.int<6> : !s32i loc(#loc178)
        %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc179)
        cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc346)
        cir.scope {
          %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc184)
          %52 = cir.const #cir.int<1> : !s32i loc(#loc185)
          %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc185)
          %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc348)
          cir.if %54 {
            cir.break loc(#loc187)
          } loc(#loc349)
        } loc(#loc347)
        %13 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc350)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc190)
        %15 = cir.const #cir.int<16> : !u64i loc(#loc351)
        cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc352)
        %16 = cir.const #cir.int<2> : !s32i loc(#loc195)
        %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc195)
        %18 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
        cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc353)
        %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc197)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc197)
        %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc198)
        %22 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
        %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
        cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc354)
        %24 = cir.const #cir.int<27015> : !s32i loc(#loc201)
        %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc201)
        %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc202)
        %27 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
        cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc355)
        cir.scope {
          %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc207)
          %52 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc357)
          %53 = cir.const #cir.int<16> : !u64i loc(#loc358)
          %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc358)
          %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc212)
          %56 = cir.const #cir.int<1> : !s32i loc(#loc213)
          %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc213)
          %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc359)
          cir.if %58 {
            cir.break loc(#loc215)
          } loc(#loc360)
        } loc(#loc356)
        %28 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc216)
        %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc217)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc217)
        %31 = cir.const #cir.int<3> : !s32i loc(#loc218)
        %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc218)
        %33 = cir.const #cir.int<4> : !u64i loc(#loc218)
        %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc218)
        %35 = cir.const #cir.int<2> : !s32i loc(#loc218)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc218)
        %37 = cir.binop(add, %34, %36) : !u64i loc(#loc218)
        %38 = cir.const #cir.int<1> : !s32i loc(#loc219)
        %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc219)
        %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc361)
        %41 = cir.const #cir.int<0> : !s32i loc(#loc220)
        %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc221)
        %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc221)
        cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc362)
        cir.scope {
          %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc226)
          %52 = cir.const #cir.int<1> : !s32i loc(#loc227)
          %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc227)
          %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc364)
          %55 = cir.ternary(%54, true {
            %56 = cir.const #true loc(#loc228)
            cir.yield %56 : !cir.bool loc(#loc228)
          }, false {
            %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc229)
            %57 = cir.const #cir.int<0> : !s32i loc(#loc230)
            %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc365)
            %59 = cir.ternary(%58, true {
              %60 = cir.const #true loc(#loc228)
              cir.yield %60 : !cir.bool loc(#loc228)
            }, false {
              %60 = cir.const #false loc(#loc228)
              cir.yield %60 : !cir.bool loc(#loc228)
            }) : (!cir.bool) -> !cir.bool loc(#loc228)
            cir.yield %59 : !cir.bool loc(#loc228)
          }) : (!cir.bool) -> !cir.bool loc(#loc228)
          cir.if %55 {
            cir.break loc(#loc232)
          } loc(#loc366)
        } loc(#loc363)
        %44 = cir.const #cir.int<0> : !s32i loc(#loc233)
        %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc233)
        %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc234)
        %47 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc235)
        %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc235)
        cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc367)
        %49 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc236)
        %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc237)
        cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc368)
        cir.yield loc(#loc175)
      } while {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc240)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc240)
        cir.condition(%10) loc(#loc240)
      } loc(#loc345)
    } loc(#loc345)
    cir.scope {
      %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc244)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc244)
      %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc370)
      cir.if %12 {
        %13 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc246)
        %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc247)
      } loc(#loc371)
    } loc(#loc369)
    cir.goto "sink" loc(#loc372)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc250)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc253)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc254)
      %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc374)
      cir.if %11 {
        %12 = cir.const #cir.int<100> : !s32i loc(#loc258)
        %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
        %14 = cir.binop(rem, %12, %13) : !s32i loc(#loc376)
        cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc260)
      } else {
        %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc155)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc155)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc261)
      } loc(#loc375)
    } loc(#loc373)
    cir.return loc(#loc157)
  } loc(#loc337)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc378)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc267)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.goto "source" loc(#loc380)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc271)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc272)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    cir.goto "sink" loc(#loc382)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc276)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc277)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc383)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc279)
    cir.return loc(#loc263)
  } loc(#loc377)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":77:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":44:1)
#loc19 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":111:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":46:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":46:9)
#loc22 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":56:9)
#loc23 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":56:13)
#loc24 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":57:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":57:28)
#loc26 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":58:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":58:32)
#loc28 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":59:9)
#loc29 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":59:41)
#loc30 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":48:13)
#loc31 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":48:12)
#loc32 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":48:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":49:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":49:10)
#loc35 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":50:1)
#loc36 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":60:9)
#loc37 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":95:17)
#loc38 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":70:36)
#loc39 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":70:45)
#loc40 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":70:58)
#loc41 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":70:29)
#loc42 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":70:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":70:69)
#loc44 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":71:13)
#loc45 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":74:13)
#loc46 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":71:17)
#loc47 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":71:34)
#loc48 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":72:13)
#loc49 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":73:17)
#loc50 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":75:20)
#loc51 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":75:21)
#loc52 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":75:30)
#loc53 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":75:33)
#loc54 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":75:47)
#loc55 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":75:13)
#loc56 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":75:48)
#loc57 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":76:34)
#loc58 = loc("/usr/include/netinet/in.h":249:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":76:13)
#loc60 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":77:39)
#loc61 = loc("/usr/include/netinet/in.h":251:20)
#loc62 = loc("/usr/include/netinet/in.h":33:15)
#loc63 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":77:13)
#loc64 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":77:59)
#loc65 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":78:38)
#loc66 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":78:32)
#loc67 = loc("/usr/include/netinet/in.h":250:15)
#loc68 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":78:13)
#loc69 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":78:46)
#loc70 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":79:13)
#loc71 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":82:13)
#loc72 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":79:25)
#loc73 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":79:58)
#loc74 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":79:59)
#loc75 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":79:68)
#loc76 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":79:82)
#loc77 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":79:17)
#loc78 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":79:88)
#loc79 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":80:13)
#loc80 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":81:17)
#loc81 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":85:31)
#loc82 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":85:46)
#loc83 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":85:59)
#loc84 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":85:77)
#loc85 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":85:80)
#loc86 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":85:26)
#loc87 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":85:13)
#loc88 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":85:81)
#loc89 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":86:13)
#loc90 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":89:13)
#loc91 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":86:17)
#loc92 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":86:31)
#loc93 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":86:44)
#loc94 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":86:47)
#loc95 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":86:61)
#loc96 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":87:13)
#loc97 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":88:17)
#loc98 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":91:39)
#loc99 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":91:25)
#loc100 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":91:13)
#loc101 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":93:25)
#loc102 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":93:20)
#loc103 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":93:13)
#loc104 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":93:36)
#loc105 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":95:16)
#loc106 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":96:9)
#loc107 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":99:9)
#loc108 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":96:13)
#loc109 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":96:30)
#loc110 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":97:9)
#loc111 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":98:26)
#loc112 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":98:13)
#loc113 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":107:5)
#loc114 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":107:10)
#loc115 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":108:1)
#loc116 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":110:18)
#loc117 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":110:24)
#loc118 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":110:5)
#loc119 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":210:1)
#loc120 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":214:1)
#loc121 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":212:5)
#loc122 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":212:13)
#loc123 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":213:5)
#loc124 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":213:13)
#loc125 = loc("/usr/include/stdlib.h":575:1)
#loc126 = loc("/usr/include/stdlib.h":575:41)
#loc127 = loc("/usr/include/time.h":76:1)
#loc128 = loc("/usr/include/time.h":76:38)
#loc129 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc130 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc131 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":230:15)
#loc132 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":232:15)
#loc133 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":235:15)
#loc134 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":237:15)
#loc135 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":225:1)
#loc136 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":240:1)
#loc141 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":226:1)
#loc142 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":228:27)
#loc143 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":228:22)
#loc144 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":228:5)
#loc145 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":230:5)
#loc146 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":231:5)
#loc147 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":231:62)
#loc148 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":232:5)
#loc149 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":235:5)
#loc150 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":236:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":236:61)
#loc152 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":237:5)
#loc153 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":239:12)
#loc154 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":239:5)
#loc155 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":190:19)
#loc156 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":118:1)
#loc157 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":192:1)
#loc158 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":120:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":120:9)
#loc160 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":130:9)
#loc161 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":130:13)
#loc162 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":131:9)
#loc163 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":131:28)
#loc164 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":132:9)
#loc165 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":132:32)
#loc166 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":133:9)
#loc167 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":133:41)
#loc168 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":122:13)
#loc169 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":122:12)
#loc170 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":122:5)
#loc171 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":123:5)
#loc172 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":123:10)
#loc173 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":124:1)
#loc174 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":134:9)
#loc175 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":169:17)
#loc176 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":144:36)
#loc177 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":144:45)
#loc178 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":144:58)
#loc179 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":144:29)
#loc180 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":144:13)
#loc181 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":144:69)
#loc182 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":145:13)
#loc183 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":148:13)
#loc184 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":145:17)
#loc185 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":145:34)
#loc186 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":146:13)
#loc187 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":147:17)
#loc188 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":149:20)
#loc189 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":149:21)
#loc190 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":149:30)
#loc191 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":149:33)
#loc192 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":149:47)
#loc193 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":149:13)
#loc194 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":149:48)
#loc195 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":150:34)
#loc196 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":150:13)
#loc197 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":151:49)
#loc198 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":151:39)
#loc199 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":151:13)
#loc200 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":151:59)
#loc201 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":152:38)
#loc202 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":152:32)
#loc203 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":152:13)
#loc204 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":152:46)
#loc205 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":153:13)
#loc206 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":156:13)
#loc207 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":153:25)
#loc208 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":153:58)
#loc209 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":153:59)
#loc210 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":153:68)
#loc211 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":153:82)
#loc212 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":153:17)
#loc213 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":153:88)
#loc214 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":154:13)
#loc215 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":155:17)
#loc216 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":159:31)
#loc217 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":159:46)
#loc218 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":159:59)
#loc219 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":159:77)
#loc220 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":159:80)
#loc221 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":159:26)
#loc222 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":159:13)
#loc223 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":159:81)
#loc224 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":160:13)
#loc225 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":163:13)
#loc226 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":160:17)
#loc227 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":160:31)
#loc228 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":160:44)
#loc229 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":160:47)
#loc230 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":160:61)
#loc231 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":161:13)
#loc232 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":162:17)
#loc233 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":165:39)
#loc234 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":165:25)
#loc235 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":165:13)
#loc236 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":167:25)
#loc237 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":167:20)
#loc238 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":167:13)
#loc239 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":167:36)
#loc240 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":169:16)
#loc241 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":170:9)
#loc242 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":173:9)
#loc243 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":170:13)
#loc244 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":170:30)
#loc245 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":171:9)
#loc246 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":172:26)
#loc247 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":172:13)
#loc248 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":181:5)
#loc249 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":181:10)
#loc250 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":182:1)
#loc251 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":184:5)
#loc252 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":191:5)
#loc253 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":184:9)
#loc254 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":184:17)
#loc255 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":185:5)
#loc256 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":187:5)
#loc257 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":189:5)
#loc258 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":186:22)
#loc259 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":186:28)
#loc260 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":186:9)
#loc261 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":190:9)
#loc262 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":195:1)
#loc263 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":208:1)
#loc264 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":197:5)
#loc265 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":197:9)
#loc266 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":199:13)
#loc267 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":199:12)
#loc268 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":199:5)
#loc269 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":200:5)
#loc270 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":200:10)
#loc271 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":201:1)
#loc272 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":203:12)
#loc273 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":203:5)
#loc274 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":204:5)
#loc275 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":204:10)
#loc276 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":205:1)
#loc277 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":207:18)
#loc278 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":207:24)
#loc279 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_18.c":207:5)
#loc280 = loc(fused[#loc1, #loc2])
#loc281 = loc(fused[#loc3, #loc4])
#loc282 = loc(fused[#loc6, #loc7])
#loc283 = loc(fused[#loc8, #loc9])
#loc284 = loc(fused[#loc10, #loc11])
#loc285 = loc(fused[#loc12, #loc13])
#loc286 = loc(fused[#loc14, #loc15])
#loc287 = loc(fused[#loc16, #loc17])
#loc288 = loc(fused[#loc18, #loc19])
#loc289 = loc(fused[#loc20, #loc21])
#loc290 = loc(fused[#loc22, #loc23])
#loc291 = loc(fused[#loc24, #loc25])
#loc292 = loc(fused[#loc26, #loc27])
#loc293 = loc(fused[#loc28, #loc29])
#loc294 = loc(fused[#loc32, #loc30])
#loc295 = loc(fused[#loc33, #loc34])
#loc296 = loc(fused[#loc36, #loc37])
#loc297 = loc(fused[#loc42, #loc43])
#loc298 = loc(fused[#loc44, #loc45])
#loc299 = loc(fused[#loc46, #loc47])
#loc300 = loc(fused[#loc48, #loc45])
#loc301 = loc(fused[#loc50, #loc51])
#loc302 = loc(fused[#loc53, #loc54])
#loc303 = loc(fused[#loc55, #loc56])
#loc304 = loc(fused[#loc59, #loc57])
#loc305 = loc(fused[#loc63, #loc64])
#loc306 = loc(fused[#loc68, #loc69])
#loc307 = loc(fused[#loc70, #loc71])
#loc308 = loc(fused[#loc73, #loc74])
#loc309 = loc(fused[#loc75, #loc76])
#loc310 = loc(fused[#loc77, #loc78])
#loc311 = loc(fused[#loc79, #loc71])
#loc312 = loc(fused[#loc83, #loc84])
#loc313 = loc(fused[#loc87, #loc88])
#loc314 = loc(fused[#loc89, #loc90])
#loc315 = loc(fused[#loc91, #loc92])
#loc316 = loc(fused[#loc94, #loc95])
#loc317 = loc(fused[#loc96, #loc90])
#loc318 = loc(fused[#loc100, #loc98])
#loc319 = loc(fused[#loc103, #loc104])
#loc320 = loc(fused[#loc106, #loc107])
#loc321 = loc(fused[#loc108, #loc109])
#loc322 = loc(fused[#loc110, #loc107])
#loc323 = loc(fused[#loc113, #loc114])
#loc324 = loc(fused[#loc116, #loc117])
#loc325 = loc(fused[#loc119, #loc120])
#loc326 = loc(fused[#loc121, #loc122])
#loc327 = loc(fused[#loc123, #loc124])
#loc328 = loc(fused[#loc125, #loc126])
#loc329 = loc(fused[#loc127, #loc128])
#loc330 = loc(fused[#loc129, #loc130])
#loc331 = loc(fused[#loc135, #loc136])
#loc334 = loc(fused[#loc146, #loc147])
#loc335 = loc(fused[#loc150, #loc151])
#loc336 = loc(fused[#loc154, #loc153])
#loc337 = loc(fused[#loc156, #loc157])
#loc338 = loc(fused[#loc158, #loc159])
#loc339 = loc(fused[#loc160, #loc161])
#loc340 = loc(fused[#loc162, #loc163])
#loc341 = loc(fused[#loc164, #loc165])
#loc342 = loc(fused[#loc166, #loc167])
#loc343 = loc(fused[#loc170, #loc168])
#loc344 = loc(fused[#loc171, #loc172])
#loc345 = loc(fused[#loc174, #loc175])
#loc346 = loc(fused[#loc180, #loc181])
#loc347 = loc(fused[#loc182, #loc183])
#loc348 = loc(fused[#loc184, #loc185])
#loc349 = loc(fused[#loc186, #loc183])
#loc350 = loc(fused[#loc188, #loc189])
#loc351 = loc(fused[#loc191, #loc192])
#loc352 = loc(fused[#loc193, #loc194])
#loc353 = loc(fused[#loc196, #loc195])
#loc354 = loc(fused[#loc199, #loc200])
#loc355 = loc(fused[#loc203, #loc204])
#loc356 = loc(fused[#loc205, #loc206])
#loc357 = loc(fused[#loc208, #loc209])
#loc358 = loc(fused[#loc210, #loc211])
#loc359 = loc(fused[#loc212, #loc213])
#loc360 = loc(fused[#loc214, #loc206])
#loc361 = loc(fused[#loc218, #loc219])
#loc362 = loc(fused[#loc222, #loc223])
#loc363 = loc(fused[#loc224, #loc225])
#loc364 = loc(fused[#loc226, #loc227])
#loc365 = loc(fused[#loc229, #loc230])
#loc366 = loc(fused[#loc231, #loc225])
#loc367 = loc(fused[#loc235, #loc233])
#loc368 = loc(fused[#loc238, #loc239])
#loc369 = loc(fused[#loc241, #loc242])
#loc370 = loc(fused[#loc243, #loc244])
#loc371 = loc(fused[#loc245, #loc242])
#loc372 = loc(fused[#loc248, #loc249])
#loc373 = loc(fused[#loc251, #loc252])
#loc374 = loc(fused[#loc253, #loc254])
#loc375 = loc(fused[#loc255, #loc256, #loc257, #loc252])
#loc376 = loc(fused[#loc258, #loc259])
#loc377 = loc(fused[#loc262, #loc263])
#loc378 = loc(fused[#loc264, #loc265])
#loc379 = loc(fused[#loc268, #loc266])
#loc380 = loc(fused[#loc269, #loc270])
#loc381 = loc(fused[#loc273, #loc272])
#loc382 = loc(fused[#loc274, #loc275])
#loc383 = loc(fused[#loc277, #loc278])
