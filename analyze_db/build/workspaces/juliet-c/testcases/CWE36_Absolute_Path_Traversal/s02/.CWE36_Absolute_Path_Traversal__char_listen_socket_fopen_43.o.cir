!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":55:16)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":55:24)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":160:27)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":160:35)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc254 = loc(fused[#loc21, #loc22])
#loc328 = loc(fused[#loc211, #loc212])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc244)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc245)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc246)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc247)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc248)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc249)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc250)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc251)
  cir.func private @close(!s32i) -> !s32i loc(#loc252)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_439badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc21, #loc22])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc254)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc23)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc256)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc257)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc258)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc259)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc260)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc261)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc33)
      cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc259)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc35)
      cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc260)
      %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc38)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
      %13 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc38)
      cir.store %14, %6 : !u64i, !cir.ptr<!u64i> loc(#loc261)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc44)
            %16 = cir.const #cir.int<1> : !u32i loc(#loc45)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc45)
            %18 = cir.const #cir.int<6> : !u32i loc(#loc46)
            %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc46)
            %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
            cir.store %20, %4 : !s32i, !cir.ptr<!s32i> loc(#loc264)
            cir.scope {
              %77 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc53)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc53)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc266)
              cir.if %80 {
                cir.break loc(#loc55)
              } loc(#loc267)
            } loc(#loc265)
            %21 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc268)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc269)
            cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
            %24 = cir.const #cir.int<2> : !s32i loc(#loc63)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc63)
            %26 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc271)
            %27 = cir.const #cir.int<0> : !s32i loc(#loc66)
            %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc66)
            %29 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc272)
            %31 = cir.const #cir.int<27015> : !s32i loc(#loc70)
            %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc70)
            %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc71)
            %34 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
            cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc273)
            cir.scope {
              %77 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc77)
              %78 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc275)
              %79 = cir.const #cir.int<16> : !u64i loc(#loc276)
              %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc276)
              %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc82)
              %82 = cir.const #cir.int<1> : !s32i loc(#loc83)
              %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc83)
              %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc277)
              cir.if %84 {
                cir.break loc(#loc85)
              } loc(#loc278)
            } loc(#loc274)
            cir.scope {
              %77 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %78 = cir.const #cir.int<5> : !s32i loc(#loc89)
              %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc90)
              %80 = cir.const #cir.int<1> : !s32i loc(#loc91)
              %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc91)
              %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc280)
              cir.if %82 {
                cir.break loc(#loc93)
              } loc(#loc281)
            } loc(#loc279)
            %35 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc95)
            %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc96)
            %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc97)
            cir.store %38, %5 : !s32i, !cir.ptr<!s32i> loc(#loc282)
            cir.scope {
              %77 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc103)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc103)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc284)
              cir.if %80 {
                cir.break loc(#loc105)
              } loc(#loc285)
            } loc(#loc283)
            %39 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc106)
            %40 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
            %41 = cir.load %40 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
            %42 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc108)
            %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc109)
            %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc286)
            %45 = cir.const #cir.int<1> : !u64i loc(#loc287)
            %46 = cir.const #cir.int<4096> : !s32i loc(#loc114)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc114)
            %48 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc115)
            %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc288)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc116)
            %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc116)
            %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc289)
            %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc290)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc118)
            %55 = cir.call @recv(%39, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc119)
            %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc119)
            cir.store %56, %1 : !s32i, !cir.ptr<!s32i> loc(#loc291)
            cir.scope {
              %77 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc125)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc125)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc293)
              %81 = cir.ternary(%80, true {
                %82 = cir.const #true loc(#loc126)
                cir.yield %82 : !cir.bool loc(#loc126)
              }, false {
                %82 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                %83 = cir.const #cir.int<0> : !s32i loc(#loc128)
                %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc294)
                %85 = cir.ternary(%84, true {
                  %86 = cir.const #true loc(#loc126)
                  cir.yield %86 : !cir.bool loc(#loc126)
                }, false {
                  %86 = cir.const #false loc(#loc126)
                  cir.yield %86 : !cir.bool loc(#loc126)
                }) : (!cir.bool) -> !cir.bool loc(#loc126)
                cir.yield %85 : !cir.bool loc(#loc126)
              }) : (!cir.bool) -> !cir.bool loc(#loc126)
              cir.if %81 {
                cir.break loc(#loc130)
              } loc(#loc295)
            } loc(#loc292)
            %57 = cir.const #cir.int<0> : !s8i loc(#loc131)
            %58 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
            %59 = cir.load %58 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
            %60 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc133)
            %61 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc134)
            %63 = cir.const #cir.int<1> : !u64i loc(#loc296)
            %64 = cir.binop(div, %62, %63) : !u64i loc(#loc297)
            %65 = cir.binop(add, %60, %64) : !u64i loc(#loc298)
            %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc137)
            cir.store %57, %66 : !s8i, !cir.ptr<!s8i> loc(#loc299)
            %67 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
            %68 = cir.load %67 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
            %69 = cir.const #cir.int<13> : !s8i loc(#loc139)
            %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc139)
            %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc140)
            cir.store %71, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
            cir.scope {
              %77 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
              %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc145)
              cir.if %78 {
                %79 = cir.const #cir.int<0> : !s8i loc(#loc147)
                %80 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc303)
              } loc(#loc302)
            } loc(#loc301)
            %72 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
            %73 = cir.load %72 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
            %74 = cir.const #cir.int<10> : !s8i loc(#loc151)
            %75 = cir.cast(integral, %74 : !s8i), !s32i loc(#loc151)
            %76 = cir.call @strchr(%73, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc152)
            cir.store %76, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc304)
            cir.scope {
              %77 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
              %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc157)
              cir.if %78 {
                %79 = cir.const #cir.int<0> : !s8i loc(#loc159)
                %80 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc307)
              } loc(#loc306)
            } loc(#loc305)
          } loc(#loc263)
          cir.yield loc(#loc41)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc162)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc162)
          cir.condition(%16) loc(#loc162)
        } loc(#loc262)
      } loc(#loc262)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc165)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc166)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc166)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc309)
        cir.if %18 {
          %19 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc168)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc169)
        } loc(#loc310)
      } loc(#loc308)
      cir.scope {
        %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc172)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc173)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc173)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc312)
        cir.if %18 {
          %19 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc175)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc176)
        } loc(#loc313)
      } loc(#loc311)
    } loc(#loc255)
    cir.return loc(#loc20)
  } loc(#loc253)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc314)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc179)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc315)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc317)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc318)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc318)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc318)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc188)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc319)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_439badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc190)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc321)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc194)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc321)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc195)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
      %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc179)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc179)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc195)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc322)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc201)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc202)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc324)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc204)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc205)
        } loc(#loc325)
      } loc(#loc323)
    } loc(#loc320)
    cir.return loc(#loc183)
  } loc(#loc316)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc326)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc208)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc211, #loc212])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc328)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc213)
    %1 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc214)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc208)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc208)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc214)
    cir.return loc(#loc210)
  } loc(#loc327)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc330)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc331)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc331)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc331)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc222)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc332)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc224)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc334)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc228)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc334)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc229)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
      %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc231)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc231)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc229)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc335)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc236)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc237)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc337)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc239)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc240)
        } loc(#loc338)
      } loc(#loc336)
    } loc(#loc333)
    cir.return loc(#loc217)
  } loc(#loc329)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43L7goodG2BEv() : () -> () loc(#loc243)
    cir.return loc(#loc242)
  } loc(#loc339)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":226:1)
#loc16 = loc("/usr/include/string.h":227:50)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":55:1)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":136:1)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":56:1)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":57:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":135:5)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":62:9)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":62:13)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":63:9)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":63:28)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":64:9)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":64:15)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":65:9)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":65:31)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":66:9)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":66:31)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":67:9)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":67:37)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":67:26)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":67:33)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":68:9)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":120:17)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":69:9)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":119:9)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":78:35)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":78:44)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":78:57)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":78:28)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":78:13)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":78:68)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":79:13)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":82:13)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":79:17)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":79:33)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":80:13)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":81:17)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":83:20)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":83:21)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":83:30)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":83:33)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":83:47)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":83:13)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":83:48)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":84:34)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":84:13)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":85:39)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":85:13)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":86:38)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":86:32)
#loc72 = loc("/usr/include/netinet/in.h":250:15)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":86:13)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":86:46)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":87:13)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":90:13)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":87:22)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":87:54)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":87:55)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":87:64)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":87:78)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":87:17)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":87:84)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":88:13)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":89:17)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":91:13)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":94:13)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":91:24)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":91:38)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":91:17)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":91:57)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":92:13)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":93:17)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":95:35)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":95:49)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":95:55)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":95:28)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":95:13)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":95:59)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":96:13)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":99:13)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":96:17)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":96:33)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":97:13)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":98:17)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:31)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:54)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:61)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:59)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:45)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:68)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:71)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:82)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:87)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:102)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:112)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:113)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:116)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:26)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:13)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":101:117)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":102:13)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":105:13)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":102:17)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":102:31)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":102:44)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":102:47)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":102:61)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":103:13)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":104:17)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":107:57)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":107:13)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":107:18)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":107:28)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":107:41)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":107:52)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":107:53)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":109:30)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":109:36)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":109:23)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":109:13)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":109:40)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":110:13)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":113:13)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":110:17)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":111:13)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":112:28)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":112:18)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":112:17)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":114:30)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":114:36)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":114:23)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":114:13)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":114:40)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":115:13)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":118:13)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":115:17)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":116:13)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":117:28)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":117:18)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":117:17)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":120:16)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":121:9)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":124:9)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":121:13)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":121:29)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":122:9)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":123:26)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":123:13)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":125:9)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":128:9)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":125:13)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":125:29)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":126:9)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":127:26)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":127:13)
#loc177 = loc("/usr/include/stdio.h":264:1)
#loc178 = loc("/usr/include/stdio.h":266:3)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":147:29)
#loc180 = loc("/usr/include/stdio.h":184:1)
#loc181 = loc("/usr/include/stdio.h":184:36)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":138:1)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":153:1)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":140:5)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":140:12)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":141:5)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":141:37)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":142:12)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":142:5)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":143:5)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":144:5)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":152:5)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":145:9)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":145:23)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":147:17)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":147:23)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":147:9)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":147:34)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":148:9)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":151:9)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":148:13)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":148:22)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":149:9)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":150:20)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":150:13)
#loc206 = loc("/usr/include/string.h":149:1)
#loc207 = loc("/usr/include/string.h":150:14)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":167:18)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":160:1)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":169:1)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":161:1)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":167:5)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":167:12)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":171:1)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":186:1)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":173:5)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":173:12)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":174:5)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":174:37)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":175:12)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":175:5)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":176:5)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":177:5)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":185:5)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":178:9)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":178:23)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":180:17)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":180:23)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":180:29)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":180:9)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":180:34)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":181:9)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":184:9)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":181:13)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":181:22)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":182:9)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":183:20)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":183:13)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":188:1)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":191:1)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_43.cpp":190:5)
#loc244 = loc(fused[#loc1, #loc2])
#loc245 = loc(fused[#loc3, #loc4])
#loc246 = loc(fused[#loc5, #loc6])
#loc247 = loc(fused[#loc7, #loc8])
#loc248 = loc(fused[#loc9, #loc10])
#loc249 = loc(fused[#loc11, #loc12])
#loc250 = loc(fused[#loc13, #loc14])
#loc251 = loc(fused[#loc15, #loc16])
#loc252 = loc(fused[#loc17, #loc18])
#loc253 = loc(fused[#loc19, #loc20])
#loc255 = loc(fused[#loc24, #loc25])
#loc256 = loc(fused[#loc26, #loc27])
#loc257 = loc(fused[#loc28, #loc29])
#loc258 = loc(fused[#loc30, #loc31])
#loc259 = loc(fused[#loc32, #loc33])
#loc260 = loc(fused[#loc34, #loc35])
#loc261 = loc(fused[#loc36, #loc37])
#loc262 = loc(fused[#loc40, #loc41])
#loc263 = loc(fused[#loc42, #loc43])
#loc264 = loc(fused[#loc48, #loc49])
#loc265 = loc(fused[#loc50, #loc51])
#loc266 = loc(fused[#loc52, #loc53])
#loc267 = loc(fused[#loc54, #loc51])
#loc268 = loc(fused[#loc56, #loc57])
#loc269 = loc(fused[#loc59, #loc60])
#loc270 = loc(fused[#loc61, #loc62])
#loc271 = loc(fused[#loc65, #loc63])
#loc272 = loc(fused[#loc69, #loc66])
#loc273 = loc(fused[#loc73, #loc74])
#loc274 = loc(fused[#loc75, #loc76])
#loc275 = loc(fused[#loc78, #loc79])
#loc276 = loc(fused[#loc80, #loc81])
#loc277 = loc(fused[#loc82, #loc83])
#loc278 = loc(fused[#loc84, #loc76])
#loc279 = loc(fused[#loc86, #loc87])
#loc280 = loc(fused[#loc90, #loc91])
#loc281 = loc(fused[#loc92, #loc87])
#loc282 = loc(fused[#loc98, #loc99])
#loc283 = loc(fused[#loc100, #loc101])
#loc284 = loc(fused[#loc102, #loc103])
#loc285 = loc(fused[#loc104, #loc101])
#loc286 = loc(fused[#loc110, #loc111])
#loc287 = loc(fused[#loc112, #loc113])
#loc288 = loc(fused[#loc114, #loc115])
#loc289 = loc(fused[#loc114, #loc116])
#loc290 = loc(fused[#loc112, #loc117])
#loc291 = loc(fused[#loc120, #loc121])
#loc292 = loc(fused[#loc122, #loc123])
#loc293 = loc(fused[#loc124, #loc125])
#loc294 = loc(fused[#loc127, #loc128])
#loc295 = loc(fused[#loc129, #loc123])
#loc296 = loc(fused[#loc135, #loc136])
#loc297 = loc(fused[#loc134, #loc136])
#loc298 = loc(fused[#loc133, #loc136])
#loc299 = loc(fused[#loc132, #loc131])
#loc300 = loc(fused[#loc141, #loc142])
#loc301 = loc(fused[#loc143, #loc144])
#loc302 = loc(fused[#loc146, #loc144])
#loc303 = loc(fused[#loc149, #loc147])
#loc304 = loc(fused[#loc153, #loc154])
#loc305 = loc(fused[#loc155, #loc156])
#loc306 = loc(fused[#loc158, #loc156])
#loc307 = loc(fused[#loc161, #loc159])
#loc308 = loc(fused[#loc163, #loc164])
#loc309 = loc(fused[#loc165, #loc166])
#loc310 = loc(fused[#loc167, #loc164])
#loc311 = loc(fused[#loc170, #loc171])
#loc312 = loc(fused[#loc172, #loc173])
#loc313 = loc(fused[#loc174, #loc171])
#loc314 = loc(fused[#loc177, #loc178])
#loc315 = loc(fused[#loc180, #loc181])
#loc316 = loc(fused[#loc182, #loc183])
#loc317 = loc(fused[#loc184, #loc185])
#loc318 = loc(fused[#loc186, #loc187])
#loc319 = loc(fused[#loc189, #loc188])
#loc320 = loc(fused[#loc191, #loc192])
#loc321 = loc(fused[#loc193, #loc194])
#loc322 = loc(fused[#loc197, #loc198])
#loc323 = loc(fused[#loc199, #loc200])
#loc324 = loc(fused[#loc201, #loc202])
#loc325 = loc(fused[#loc203, #loc200])
#loc326 = loc(fused[#loc206, #loc207])
#loc327 = loc(fused[#loc209, #loc210])
#loc329 = loc(fused[#loc216, #loc217])
#loc330 = loc(fused[#loc218, #loc219])
#loc331 = loc(fused[#loc220, #loc221])
#loc332 = loc(fused[#loc223, #loc222])
#loc333 = loc(fused[#loc225, #loc226])
#loc334 = loc(fused[#loc227, #loc228])
#loc335 = loc(fused[#loc232, #loc233])
#loc336 = loc(fused[#loc234, #loc235])
#loc337 = loc(fused[#loc236, #loc237])
#loc338 = loc(fused[#loc238, #loc235])
#loc339 = loc(fused[#loc241, #loc242])
