!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
  cir.func private  @printLongLongLine(!s64i) loc(#loc115)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc116)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__int64_t_malloc_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc120)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc121)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc122)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc123)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc124)
    cir.scope {
      %9 = cir.const #cir.int<6> : !s32i loc(#loc24)
      cir.switch (%9 : !s32i) [
      case (equal, 6) {
        %10 = cir.const #cir.int<5> : !s64i loc(#loc25)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc26)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc27)
        %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc28)
        cir.store %10, %13 : !s64i, !cir.ptr<!s64i> loc(#loc126)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc29)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc30)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc31)
        %17 = cir.load %16 : !cir.ptr<!s64i>, !s64i loc(#loc29)
        cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc32)
        %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc33)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc34)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc34)
        cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
        cir.break loc(#loc35)
      },
      case (default) {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc36)
        cir.break loc(#loc37)
      }
      ] loc(#loc22)
    } loc(#loc125)
    cir.return loc(#loc11)
  } loc(#loc118)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__int64_t_malloc_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc127)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc132)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc50)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc51)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc133)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc134)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc135)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc136)
    cir.scope {
      %9 = cir.const #cir.int<5> : !s32i loc(#loc58)
      cir.switch (%9 : !s32i) [
      case (equal, 6) {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc60)
        cir.break loc(#loc61)
      },
      case (default) {
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc64)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc65)
          %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s64i>, !s32i loc(#loc139)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc66)
          cir.if %14 {
            %15 = cir.const #cir.int<5> : !s64i loc(#loc68)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc69)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc70)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc71)
            cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc141)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc72)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc73)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc74)
            %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc72)
            cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc75)
            %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc76)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc77)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc77)
            cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
          } loc(#loc140)
        } loc(#loc138)
        cir.break loc(#loc78)
      }
      ] loc(#loc56)
    } loc(#loc137)
    cir.return loc(#loc45)
  } loc(#loc130)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc144)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc85)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc86)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc145)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc146)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc147)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc148)
    cir.scope {
      %9 = cir.const #cir.int<6> : !s32i loc(#loc93)
      cir.switch (%9 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc96)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc97)
          %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s64i>, !s32i loc(#loc151)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc98)
          cir.if %14 {
            %15 = cir.const #cir.int<5> : !s64i loc(#loc100)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc101)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc103)
            cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc153)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc104)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc105)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc106)
            %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc104)
            cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc107)
            %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc108)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc109)
            cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc108)
          } loc(#loc152)
        } loc(#loc150)
        cir.break loc(#loc110)
      },
      case (default) {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc111)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc111)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc112)
        cir.break loc(#loc113)
      }
      ] loc(#loc91)
    } loc(#loc149)
    cir.return loc(#loc80)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":39:19)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":23:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":42:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":25:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":25:15)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":26:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":26:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":28:23)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":28:30)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":28:32)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":28:46)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":28:47)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":28:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":29:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":41:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":29:12)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":33:19)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":33:9)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":33:14)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":33:15)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":34:27)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":34:32)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":34:33)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":34:9)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":35:9)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":35:14)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":36:9)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":39:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":40:9)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":98:1)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":102:1)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":100:5)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":100:14)
#loc42 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":101:5)
#loc43 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":101:14)
#loc44 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":49:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":71:1)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":51:5)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":51:15)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":52:12)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":52:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":54:23)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":54:30)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":54:32)
#loc53 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":54:46)
#loc54 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":54:47)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":54:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":55:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":70:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":55:12)
#loc59 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":59:19)
#loc60 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":59:9)
#loc61 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":60:9)
#loc62 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":63:9)
#loc63 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":68:9)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":63:13)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":63:21)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":63:18)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":64:9)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":65:23)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":65:13)
#loc70 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":65:18)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":65:19)
#loc72 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":66:31)
#loc73 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":66:36)
#loc74 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":66:37)
#loc75 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":66:13)
#loc76 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":67:13)
#loc77 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":67:18)
#loc78 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":69:9)
#loc79 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":74:1)
#loc80 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":96:1)
#loc81 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":76:5)
#loc82 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":76:15)
#loc83 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":77:12)
#loc84 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":77:5)
#loc85 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":79:23)
#loc86 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":79:30)
#loc87 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":79:32)
#loc88 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":79:46)
#loc89 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":79:47)
#loc90 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":79:5)
#loc91 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":80:5)
#loc92 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":95:5)
#loc93 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":80:12)
#loc94 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":84:9)
#loc95 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":89:9)
#loc96 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":84:13)
#loc97 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":84:21)
#loc98 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":84:18)
#loc99 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":85:9)
#loc100 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":86:23)
#loc101 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":86:13)
#loc102 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":86:18)
#loc103 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":86:19)
#loc104 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":87:31)
#loc105 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":87:36)
#loc106 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":87:37)
#loc107 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":87:13)
#loc108 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":88:13)
#loc109 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":88:18)
#loc110 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":90:9)
#loc111 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":93:19)
#loc112 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":93:9)
#loc113 = loc("CWE690_NULL_Deref_From_Return__int64_t_malloc_15.c":94:9)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc10, #loc11])
#loc119 = loc(fused[#loc12, #loc13])
#loc120 = loc(fused[#loc15, #loc14])
#loc121 = loc(fused[#loc18, #loc19])
#loc122 = loc(fused[#loc17, #loc19])
#loc123 = loc(fused[#loc16, #loc20])
#loc124 = loc(fused[#loc21, #loc20])
#loc125 = loc(fused[#loc22, #loc23])
#loc126 = loc(fused[#loc26, #loc25])
#loc127 = loc(fused[#loc38, #loc39])
#loc128 = loc(fused[#loc40, #loc41])
#loc129 = loc(fused[#loc42, #loc43])
#loc130 = loc(fused[#loc44, #loc45])
#loc131 = loc(fused[#loc46, #loc47])
#loc132 = loc(fused[#loc49, #loc48])
#loc133 = loc(fused[#loc52, #loc53])
#loc134 = loc(fused[#loc51, #loc53])
#loc135 = loc(fused[#loc50, #loc54])
#loc136 = loc(fused[#loc55, #loc54])
#loc137 = loc(fused[#loc56, #loc57])
#loc138 = loc(fused[#loc62, #loc63])
#loc139 = loc(fused[#loc64, #loc65])
#loc140 = loc(fused[#loc67, #loc63])
#loc141 = loc(fused[#loc69, #loc68])
#loc142 = loc(fused[#loc79, #loc80])
#loc143 = loc(fused[#loc81, #loc82])
#loc144 = loc(fused[#loc84, #loc83])
#loc145 = loc(fused[#loc87, #loc88])
#loc146 = loc(fused[#loc86, #loc88])
#loc147 = loc(fused[#loc85, #loc89])
#loc148 = loc(fused[#loc90, #loc89])
#loc149 = loc(fused[#loc91, #loc92])
#loc150 = loc(fused[#loc94, #loc95])
#loc151 = loc(fused[#loc96, #loc97])
#loc152 = loc(fused[#loc99, #loc95])
#loc153 = loc(fused[#loc101, #loc100])
