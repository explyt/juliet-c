!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType = !cir.struct<union "CWE78_OS_Command_Injection__char_console_system_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc133)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc134)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc135)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @system(!cir.ptr<!s8i>) -> !s32i loc(#loc137)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc138)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_system_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !ty_CWE78_OS_Command_Injection__char_console_system_34_unionType, !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc142)
    %3 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc142)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc142)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc145)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc29)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc29)
      cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc145)
      cir.scope {
        %11 = cir.const #cir.int<100> : !s32i loc(#loc33)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc33)
        %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc34)
        %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc147)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc35)
        %17 = cir.cmp(gt, %14, %16) : !u64i, !s32i loc(#loc148)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc36)
        cir.if %18 {
          cir.scope {
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
            %20 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc41)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc42)
            %22 = cir.const #cir.int<100> : !s32i loc(#loc43)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc43)
            %24 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc151)
            %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc151)
            %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc135)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
            %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc46)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc152)
            %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc48)
            cir.if %33 {
              %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
              %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
              %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
              cir.store %36, %7 : !u64i, !cir.ptr<!u64i> loc(#loc154)
              cir.scope {
                %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc58)
                %38 = cir.const #cir.int<0> : !s32i loc(#loc59)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc59)
                %40 = cir.cmp(gt, %37, %39) : !u64i, !s32i loc(#loc156)
                %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc60)
                %42 = cir.ternary(%41, true {
                  %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
                  %44 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                  %45 = cir.const #cir.int<1> : !s32i loc(#loc64)
                  %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc64)
                  %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc157)
                  %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc65)
                  %49 = cir.load %48 : !cir.ptr<!s8i>, !s8i loc(#loc62)
                  %50 = cir.cast(integral, %49 : !s8i), !s32i loc(#loc62)
                  %51 = cir.const #cir.int<10> : !s32i loc(#loc66)
                  %52 = cir.cmp(eq, %50, %51) : !s32i, !s32i loc(#loc158)
                  %53 = cir.cast(int_to_bool, %52 : !s32i), !cir.bool loc(#loc67)
                  %54 = cir.ternary(%53, true {
                    %55 = cir.const #true loc(#loc61)
                    cir.yield %55 : !cir.bool loc(#loc61)
                  }, false {
                    %55 = cir.const #false loc(#loc61)
                    cir.yield %55 : !cir.bool loc(#loc61)
                  }) : (!cir.bool) -> !cir.bool loc(#loc61)
                  cir.yield %54 : !cir.bool loc(#loc61)
                }, false {
                  %43 = cir.const #false loc(#loc61)
                  cir.yield %43 : !cir.bool loc(#loc61)
                }) : (!cir.bool) -> !cir.bool loc(#loc61)
                cir.if %42 {
                  %43 = cir.const #cir.int<0> : !s32i loc(#loc69)
                  %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc69)
                  %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
                  %46 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc71)
                  %47 = cir.const #cir.int<1> : !s32i loc(#loc72)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc72)
                  %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc160)
                  %50 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc73)
                  cir.store %44, %50 : !s8i, !cir.ptr<!s8i> loc(#loc161)
                } loc(#loc159)
              } loc(#loc155)
            } else {
              %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc74)
              %36 = cir.const #cir.int<0> : !s32i loc(#loc75)
              %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc75)
              %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
              %39 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc77)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc78)
              cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc162)
            } loc(#loc153)
          } loc(#loc150)
        } loc(#loc149)
      } loc(#loc146)
    } loc(#loc144)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    cir.store %5, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      cir.store %9, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
      cir.scope {
        %10 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
        %11 = cir.call @system(%10) : (!cir.ptr<!s8i>) -> !s32i loc(#loc90)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc91)
        %13 = cir.cmp(ne, %11, %12) : !s32i, !s32i loc(#loc167)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc92)
        cir.if %14 {
          %15 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc12)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc94)
          %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc96)
          cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
        } loc(#loc168)
      } loc(#loc166)
    } loc(#loc164)
    cir.return loc(#loc16)
  } loc(#loc139)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_system_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    cir.return loc(#loc98)
  } loc(#loc169)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc103)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !ty_CWE78_OS_Command_Injection__char_console_system_34_unionType, !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc175)
    %3 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc175)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc175)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc114)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %7 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc103)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc103)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc114)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc179)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
      cir.scope {
        %15 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
        %16 = cir.call @system(%15) : (!cir.ptr<!s8i>) -> !s32i loc(#loc125)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc126)
        %18 = cir.cmp(ne, %16, %17) : !s32i, !s32i loc(#loc181)
        %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc127)
        cir.if %19 {
          %20 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc129)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc129)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc131)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc132)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
        } loc(#loc182)
      } loc(#loc180)
    } loc(#loc178)
    cir.return loc(#loc105)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_34.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":67:27)
#loc10 = loc("/usr/include/stdlib.h":923:1)
#loc11 = loc("/usr/include/stdlib.h":923:41)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":79:23)
#loc13 = loc("/usr/include/stdlib.h":756:1)
#loc14 = loc("/usr/include/stdlib.h":756:70)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":42:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":83:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":44:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":44:12)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":45:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":45:66)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":46:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":46:26)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":47:12)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":47:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":48:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":72:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":50:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":50:37)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":50:26)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":50:33)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":52:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":71:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":52:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":52:17)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":52:27)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":52:25)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":53:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":70:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:23)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:28)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:43)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:47)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:57)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:67)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:64)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":56:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":64:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":66:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":59:27)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":59:34)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":59:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":59:38)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":63:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:31)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:29)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:33)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:36)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:41)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:49)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:50)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:55)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:52)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":61:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":62:39)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":62:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":62:26)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":62:34)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":62:35)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":67:17)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":69:33)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":69:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":69:22)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":69:29)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":73:26)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":36:12)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":73:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":74:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":82:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":75:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":75:31)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":37:12)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":77:9)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":81:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":77:20)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":77:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":77:29)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":77:26)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":78:9)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":79:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":80:13)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":80:18)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":110:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":113:1)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":112:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":112:13)
#loc101 = loc("/usr/include/string.h":149:1)
#loc102 = loc("/usr/include/string.h":150:14)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":97:18)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":90:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":108:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":92:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":92:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":93:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":93:66)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":94:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":94:26)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":95:12)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":95:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":97:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":97:12)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":98:26)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":98:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":99:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":107:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":100:9)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":100:31)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":102:9)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":106:9)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":102:20)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":102:13)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":102:29)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":102:26)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":103:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":104:23)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":104:13)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":105:13)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":105:18)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc13, #loc14])
#loc139 = loc(fused[#loc15, #loc16])
#loc140 = loc(fused[#loc17, #loc18])
#loc141 = loc(fused[#loc19, #loc20])
#loc142 = loc(fused[#loc21, #loc22])
#loc143 = loc(fused[#loc24, #loc23])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc27, #loc28])
#loc146 = loc(fused[#loc31, #loc32])
#loc147 = loc(fused[#loc33, #loc34])
#loc148 = loc(fused[#loc33, #loc35])
#loc149 = loc(fused[#loc37, #loc32])
#loc150 = loc(fused[#loc38, #loc39])
#loc151 = loc(fused[#loc43, #loc44])
#loc152 = loc(fused[#loc46, #loc47])
#loc153 = loc(fused[#loc49, #loc50, #loc51, #loc39])
#loc154 = loc(fused[#loc54, #loc55])
#loc155 = loc(fused[#loc56, #loc57])
#loc156 = loc(fused[#loc58, #loc59])
#loc157 = loc(fused[#loc63, #loc64])
#loc158 = loc(fused[#loc62, #loc66])
#loc159 = loc(fused[#loc68, #loc57])
#loc160 = loc(fused[#loc71, #loc72])
#loc161 = loc(fused[#loc70, #loc69])
#loc162 = loc(fused[#loc76, #loc75])
#loc163 = loc(fused[#loc81, #loc79])
#loc164 = loc(fused[#loc82, #loc83])
#loc165 = loc(fused[#loc84, #loc85])
#loc166 = loc(fused[#loc87, #loc88])
#loc167 = loc(fused[#loc90, #loc91])
#loc168 = loc(fused[#loc93, #loc88])
#loc169 = loc(fused[#loc97, #loc98])
#loc170 = loc(fused[#loc99, #loc100])
#loc171 = loc(fused[#loc101, #loc102])
#loc172 = loc(fused[#loc104, #loc105])
#loc173 = loc(fused[#loc106, #loc107])
#loc174 = loc(fused[#loc108, #loc109])
#loc175 = loc(fused[#loc110, #loc111])
#loc176 = loc(fused[#loc113, #loc112])
#loc177 = loc(fused[#loc117, #loc116])
#loc178 = loc(fused[#loc118, #loc119])
#loc179 = loc(fused[#loc120, #loc121])
#loc180 = loc(fused[#loc122, #loc123])
#loc181 = loc(fused[#loc125, #loc126])
#loc182 = loc(fused[#loc128, #loc123])
