!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE587_Assignment_of_Fixed_Address_to_Pointer/CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc61)
  cir.func private @printHexCharLine(!s8i) loc(#loc62)
  cir.func no_proto @CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc65)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc65)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc9)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc68)
          %5 = cir.const #cir.int<4194304> : !s32i loc(#loc17)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc17)
          %7 = cir.cast(int_to_ptr, %6 : !u64i), !cir.ptr<!s8i> loc(#loc17)
          cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
          %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
          %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc19)
          cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc20)
        } loc(#loc67)
      } else {
        cir.scope {
          %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charStack", init] {alignment = 1 : i64} loc(#loc70)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc71)
          %6 = cir.const #cir.int<97> : !s32i loc(#loc24)
          %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc24)
          cir.store %7, %4 : !s8i, !cir.ptr<!s8i> loc(#loc70)
          cir.store %4, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
          %8 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
          %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc28)
          cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc29)
        } loc(#loc69)
      } loc(#loc66)
    } loc(#loc64)
    cir.return loc(#loc6)
  } loc(#loc63)
  cir.func no_proto @CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc73)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    cir.return loc(#loc31)
  } loc(#loc72)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc76)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc76)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc38)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc38)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charStack", init] {alignment = 1 : i64} loc(#loc79)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc80)
          %6 = cir.const #cir.int<97> : !s32i loc(#loc46)
          %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc46)
          cir.store %7, %4 : !s8i, !cir.ptr<!s8i> loc(#loc79)
          cir.store %4, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
          %8 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc50)
          cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc51)
        } loc(#loc78)
      } else {
        cir.scope {
          %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charStack", init] {alignment = 1 : i64} loc(#loc82)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc83)
          %6 = cir.const #cir.int<97> : !s32i loc(#loc55)
          %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc55)
          cir.store %7, %4 : !s8i, !cir.ptr<!s8i> loc(#loc82)
          cir.store %4, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
          %8 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
          %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc59)
          cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc60)
        } loc(#loc81)
      } loc(#loc77)
    } loc(#loc75)
    cir.return loc(#loc35)
  } loc(#loc74)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE587_Assignment_of_Fixed_Address_to_Pointer/CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":20:1)
#loc6 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":39:1)
#loc7 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":22:5)
#loc8 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":38:5)
#loc9 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":22:8)
#loc10 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":22:33)
#loc11 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":23:5)
#loc12 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":29:5)
#loc13 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":31:5)
#loc14 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":24:9)
#loc15 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":28:9)
#loc16 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":26:13)
#loc17 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":26:40)
#loc18 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":27:31)
#loc19 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":27:30)
#loc20 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":27:13)
#loc21 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":32:9)
#loc22 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":37:9)
#loc23 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":34:13)
#loc24 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":34:30)
#loc25 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":35:13)
#loc26 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":35:34)
#loc27 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":36:31)
#loc28 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":36:30)
#loc29 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":36:13)
#loc30 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":68:1)
#loc31 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":71:1)
#loc32 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":70:5)
#loc33 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":70:11)
#loc34 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":46:1)
#loc35 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":66:1)
#loc36 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":48:5)
#loc37 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":65:5)
#loc38 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":48:8)
#loc39 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":48:33)
#loc40 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":49:5)
#loc41 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":56:5)
#loc42 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":58:5)
#loc43 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":50:9)
#loc44 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":55:9)
#loc45 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":52:13)
#loc46 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":52:30)
#loc47 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":53:13)
#loc48 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":53:34)
#loc49 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":54:31)
#loc50 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":54:30)
#loc51 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":54:13)
#loc52 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":59:9)
#loc53 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":64:9)
#loc54 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":61:13)
#loc55 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":61:30)
#loc56 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":62:13)
#loc57 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":62:34)
#loc58 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":63:31)
#loc59 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":63:30)
#loc60 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":63:13)
#loc61 = loc(fused[#loc1, #loc2])
#loc62 = loc(fused[#loc3, #loc4])
#loc63 = loc(fused[#loc5, #loc6])
#loc64 = loc(fused[#loc7, #loc8])
#loc65 = loc(fused[#loc9, #loc10])
#loc66 = loc(fused[#loc11, #loc12, #loc13, #loc8])
#loc67 = loc(fused[#loc14, #loc15])
#loc68 = loc(fused[#loc16, #loc17])
#loc69 = loc(fused[#loc21, #loc22])
#loc70 = loc(fused[#loc23, #loc24])
#loc71 = loc(fused[#loc25, #loc26])
#loc72 = loc(fused[#loc30, #loc31])
#loc73 = loc(fused[#loc32, #loc33])
#loc74 = loc(fused[#loc34, #loc35])
#loc75 = loc(fused[#loc36, #loc37])
#loc76 = loc(fused[#loc38, #loc39])
#loc77 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc78 = loc(fused[#loc43, #loc44])
#loc79 = loc(fused[#loc45, #loc46])
#loc80 = loc(fused[#loc47, #loc48])
#loc81 = loc(fused[#loc52, #loc53])
#loc82 = loc(fused[#loc54, #loc55])
#loc83 = loc(fused[#loc56, #loc57])
