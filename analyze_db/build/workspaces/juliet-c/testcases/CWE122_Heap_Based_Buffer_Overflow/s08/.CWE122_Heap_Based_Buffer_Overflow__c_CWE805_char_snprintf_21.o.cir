!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":32:25)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":32:32)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":70:30)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":70:37)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":105:30)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":105:37)
#loc223 = loc(fused[#loc9, #loc10])
#loc252 = loc(fused[#loc88, #loc89])
#loc275 = loc(fused[#loc157, #loc158])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc219)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc220)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc221)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc219)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc225)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc17)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc226)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc227)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc228)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    cir.br ^bb3 loc(#loc230)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc231)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc232)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc27)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc29)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc30)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc233)
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.store %24, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
    cir.return %25 : !cir.ptr<!s8i> loc(#loc234)
  } loc(#loc222)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc38)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc236)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc237)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc239)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc240)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc49)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc219)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %6 = cir.call @badSource(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc54)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    cir.br ^bb1 loc(#loc244)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc59)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc60)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc61)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc61)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc61)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc245)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc65)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc66)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc66)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc68)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc246)
    %21 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc69)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc71)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc38)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc38)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    %28 = cir.call @snprintf(%22, %24, %26, %27) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc69)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc75)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
    cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
    cir.br ^bb2 loc(#loc58)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc44)
  } loc(#loc238)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc248)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc249)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc81)
    cir.return loc(#loc78)
  } loc(#loc247)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc85)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc88, #loc89])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc87)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    cir.br ^bb1 loc(#loc253)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc250)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc254)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc85)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb8 loc(#loc95)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc98)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc99)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc255)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc256)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc257)
    cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
    cir.br ^bb4 loc(#loc259)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc260)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc261)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc109)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc111)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // pred: ^bb6
    %21 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc112)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc262)
    cir.br ^bb8 loc(#loc92)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc92)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    cir.store %26, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc263)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc263)
    cir.return %27 : !cir.ptr<!s8i> loc(#loc263)
  } loc(#loc251)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc265)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc124)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc250)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %6 = cir.call @goodG2B1Source(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc129)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    cir.br ^bb1 loc(#loc270)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc135)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc136)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc136)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc271)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc140)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc141)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc141)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc143)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc272)
    %21 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc144)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc146)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc146)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc147)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc147)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
    %28 = cir.call @snprintf(%22, %24, %26, %27) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc144)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc151)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
    cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
    cir.br ^bb2 loc(#loc133)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc119)
  } loc(#loc264)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc273)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc157, #loc158])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc156)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb1 loc(#loc276)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc273)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc277)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc164)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc165)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc165)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc278)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc279)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc164)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc280)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc281)
    cir.br ^bb3 loc(#loc282)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc283)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc284)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc175)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc177)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
    cir.br ^bb5 loc(#loc171)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc171)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc178)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc181)
    cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc285)
    cir.br ^bb7 loc(#loc161)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc161)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
    cir.store %24, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc286)
    cir.return %25 : !cir.ptr<!s8i> loc(#loc286)
  } loc(#loc274)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc288)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc289)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc190)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc273)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
    %6 = cir.call @goodG2B2Source(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc195)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc292)
    cir.br ^bb1 loc(#loc293)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc200)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc200)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc201)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc202)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc202)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc202)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc294)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc206)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc206)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc207)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc208)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc207)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc209)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc209)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc295)
    %21 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc210)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc212)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc212)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc213)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc213)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc214)
    %28 = cir.call @snprintf(%22, %24, %26, %27) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc210)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc217)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc218)
    cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc217)
    cir.br ^bb2 loc(#loc199)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc185)
  } loc(#loc287)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":30:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":30:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":32:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":42:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":33:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":34:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":40:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":34:8)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":35:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":37:24)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":37:31)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":37:34)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":37:45)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":37:46)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":37:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":38:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":38:37)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":38:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":38:21)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":38:27)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":38:28)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":38:34)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":38:33)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":39:19)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":39:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":39:14)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":39:15)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":41:12)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":41:5)
#loc36 = loc("/usr/include/stdio.h":385:1)
#loc37 = loc("/usr/include/stdio.h":387:62)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":55:29)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("/usr/include/stdlib.h":687:1)
#loc42 = loc("/usr/include/stdlib.h":687:32)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":44:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":59:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":51:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":51:24)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":46:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":46:12)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":47:12)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":47:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":48:17)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":48:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":49:22)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":49:12)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":49:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":49:26)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":50:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":58:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":52:16)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":52:24)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":52:29)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":52:33)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":52:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":52:34)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":53:25)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":53:16)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":53:20)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":53:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":55:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":55:18)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":55:24)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":55:35)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":56:19)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":56:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":57:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":57:14)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":134:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":138:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":136:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":136:14)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":137:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":137:14)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":66:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":66:29)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":75:19)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":70:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":85:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":71:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":72:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":83:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":72:8)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":73:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":76:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":78:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":75:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":80:24)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":80:31)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":80:35)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":80:46)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":80:47)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":80:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":81:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":81:37)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":81:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":81:21)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":81:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":81:28)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":81:34)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":81:33)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":82:19)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":82:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":82:14)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":82:15)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":84:12)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":84:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":87:1)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":102:1)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":94:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":94:24)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":89:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":89:12)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":90:12)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":90:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":91:22)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":91:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":92:27)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":92:12)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":92:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":92:31)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":93:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":101:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":95:16)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":95:24)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":95:29)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":95:33)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":95:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":95:34)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":96:25)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":96:16)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":96:20)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":96:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":98:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":98:18)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":98:24)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":98:29)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":98:35)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":99:19)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":99:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":100:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":100:14)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":67:1)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":67:29)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":105:1)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":115:1)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":106:1)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":107:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":113:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":107:8)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":108:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":110:24)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":110:31)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":110:35)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":110:46)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":110:47)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":110:9)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":111:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":111:37)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":111:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":111:21)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":111:27)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":111:28)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":111:34)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":111:33)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":112:19)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":112:9)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":112:14)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":112:15)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":114:12)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":114:5)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":117:1)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":132:1)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":124:9)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":124:24)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":119:5)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":119:12)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":120:12)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":120:5)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":121:22)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":121:5)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":122:27)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":122:12)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":122:5)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":122:31)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":123:5)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":131:5)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":125:16)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":125:24)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":125:29)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":125:33)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":125:9)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":125:34)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":126:25)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":126:16)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":126:20)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":126:9)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":128:9)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":128:18)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":128:24)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":128:29)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":128:35)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":129:19)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":129:9)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":130:9)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_21.c":130:14)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc3, #loc4])
#loc221 = loc(fused[#loc5, #loc6])
#loc222 = loc(fused[#loc7, #loc8])
#loc224 = loc(fused[#loc12, #loc13])
#loc225 = loc(fused[#loc15, #loc13])
#loc226 = loc(fused[#loc18, #loc19])
#loc227 = loc(fused[#loc17, #loc19])
#loc228 = loc(fused[#loc16, #loc20])
#loc229 = loc(fused[#loc21, #loc20])
#loc230 = loc(fused[#loc22, #loc23])
#loc231 = loc(fused[#loc24, #loc25])
#loc232 = loc(fused[#loc26, #loc23])
#loc233 = loc(fused[#loc31, #loc30])
#loc234 = loc(fused[#loc35, #loc34])
#loc235 = loc(fused[#loc36, #loc37])
#loc236 = loc(fused[#loc39, #loc40])
#loc237 = loc(fused[#loc41, #loc42])
#loc238 = loc(fused[#loc43, #loc44])
#loc239 = loc(fused[#loc45, #loc46])
#loc240 = loc(fused[#loc47, #loc48])
#loc241 = loc(fused[#loc50, #loc49])
#loc242 = loc(fused[#loc52, #loc51])
#loc243 = loc(fused[#loc55, #loc56])
#loc244 = loc(fused[#loc57, #loc58])
#loc245 = loc(fused[#loc63, #loc64])
#loc246 = loc(fused[#loc68, #loc65])
#loc247 = loc(fused[#loc77, #loc78])
#loc248 = loc(fused[#loc79, #loc80])
#loc249 = loc(fused[#loc81, #loc82])
#loc250 = loc(fused[#loc83, #loc84])
#loc251 = loc(fused[#loc86, #loc87])
#loc253 = loc(fused[#loc91, #loc92])
#loc254 = loc(fused[#loc94, #loc95, #loc96, #loc92])
#loc255 = loc(fused[#loc100, #loc101])
#loc256 = loc(fused[#loc99, #loc101])
#loc257 = loc(fused[#loc98, #loc102])
#loc258 = loc(fused[#loc103, #loc102])
#loc259 = loc(fused[#loc104, #loc105])
#loc260 = loc(fused[#loc106, #loc107])
#loc261 = loc(fused[#loc108, #loc105])
#loc262 = loc(fused[#loc113, #loc112])
#loc263 = loc(fused[#loc117, #loc116])
#loc264 = loc(fused[#loc118, #loc119])
#loc265 = loc(fused[#loc120, #loc121])
#loc266 = loc(fused[#loc122, #loc123])
#loc267 = loc(fused[#loc125, #loc124])
#loc268 = loc(fused[#loc127, #loc126])
#loc269 = loc(fused[#loc130, #loc131])
#loc270 = loc(fused[#loc132, #loc133])
#loc271 = loc(fused[#loc138, #loc139])
#loc272 = loc(fused[#loc143, #loc140])
#loc273 = loc(fused[#loc153, #loc154])
#loc274 = loc(fused[#loc155, #loc156])
#loc276 = loc(fused[#loc160, #loc161])
#loc277 = loc(fused[#loc163, #loc161])
#loc278 = loc(fused[#loc166, #loc167])
#loc279 = loc(fused[#loc165, #loc167])
#loc280 = loc(fused[#loc164, #loc168])
#loc281 = loc(fused[#loc169, #loc168])
#loc282 = loc(fused[#loc170, #loc171])
#loc283 = loc(fused[#loc172, #loc173])
#loc284 = loc(fused[#loc174, #loc171])
#loc285 = loc(fused[#loc179, #loc178])
#loc286 = loc(fused[#loc183, #loc182])
#loc287 = loc(fused[#loc184, #loc185])
#loc288 = loc(fused[#loc186, #loc187])
#loc289 = loc(fused[#loc188, #loc189])
#loc290 = loc(fused[#loc191, #loc190])
#loc291 = loc(fused[#loc193, #loc192])
#loc292 = loc(fused[#loc196, #loc197])
#loc293 = loc(fused[#loc198, #loc199])
#loc294 = loc(fused[#loc204, #loc205])
#loc295 = loc(fused[#loc209, #loc206])
