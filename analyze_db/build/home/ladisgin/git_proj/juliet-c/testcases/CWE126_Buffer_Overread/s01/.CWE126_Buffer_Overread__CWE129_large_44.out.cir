!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc6 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":22:21)
#loc7 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":22:25)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":128:10)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":128:14)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":128:20)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":128:32)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":57:25)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":57:29)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":87:25)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":87:29)
#true = #cir.bool<true> : !cir.bool
#loc147 = loc(fused[#loc6, #loc7])
#loc165 = loc(fused[#loc55, #loc56])
#loc166 = loc(fused[#loc57, #loc58])
#loc171 = loc(fused[#loc75, #loc76])
#loc183 = loc(fused[#loc110, #loc111])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_large_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc3)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc147)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc149)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc149)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc149)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc16)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc151)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
          %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc21)
          %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc21)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc21)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc22)
        } else {
          %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc3)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc23)
        } loc(#loc152)
      } loc(#loc150)
    } loc(#loc148)
    cir.return loc(#loc5)
  } loc(#loc146)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_large_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc155)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc31)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc33)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc35)
    cir.return loc(#loc25)
  } loc(#loc153)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_large_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc158)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc161)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc162)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc62)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_large_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call @CWE126_Buffer_Overread__CWE129_large_44_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_large_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call @CWE126_Buffer_Overread__CWE129_large_44_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.return %17 : !s32i loc(#loc169)
  } loc(#loc164)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc75, #loc76])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc171)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc173)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc173)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc173)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc85)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc175)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
          %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc90)
          %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc90)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc91)
        } else {
          %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc92)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc92)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
        } loc(#loc176)
      } loc(#loc174)
    } loc(#loc172)
    cir.return loc(#loc74)
  } loc(#loc170)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc99)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc179)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc101)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc103)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc105)
    cir.return loc(#loc95)
  } loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc107)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc110, #loc111])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc183)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc185)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc185)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc185)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc120)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc187)
        %6 = cir.ternary(%5, true {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
          %8 = cir.const #cir.int<10> : !s32i loc(#loc123)
          %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc188)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc121)
            cir.yield %11 : !cir.bool loc(#loc121)
          }, false {
            %11 = cir.const #false loc(#loc121)
            cir.yield %11 : !cir.bool loc(#loc121)
          }) : (!cir.bool) -> !cir.bool loc(#loc121)
          cir.yield %10 : !cir.bool loc(#loc121)
        }, false {
          %7 = cir.const #false loc(#loc121)
          cir.yield %7 : !cir.bool loc(#loc121)
        }) : (!cir.bool) -> !cir.bool loc(#loc121)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc129)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc129)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc130)
        } else {
          %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc107)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc107)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc131)
        } loc(#loc189)
      } loc(#loc186)
    } loc(#loc184)
    cir.return loc(#loc109)
  } loc(#loc182)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc192)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc139)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc141)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc143)
    cir.return loc(#loc133)
  } loc(#loc190)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_large_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":34:23)
#loc4 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":22:1)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":37:1)
#loc8 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":23:1)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":24:5)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":36:5)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":25:9)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":25:30)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":28:9)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":35:9)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":28:13)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":28:21)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":29:9)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":31:9)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":33:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":30:33)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":30:26)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":30:13)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":34:13)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":39:1)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":50:1)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":41:5)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":41:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":43:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":43:29)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":45:13)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":45:12)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":45:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":47:12)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":47:5)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":49:5)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":49:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":114:1)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":118:1)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":116:5)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":116:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":117:5)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":117:13)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":133:15)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":135:15)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":138:15)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":140:15)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":128:1)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":143:1)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":129:1)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":131:27)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":131:22)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":131:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":133:5)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":134:5)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":134:50)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":135:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":138:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":139:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":139:49)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":140:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":142:12)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":142:5)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":57:1)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":72:1)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":58:1)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":59:5)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":71:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":60:9)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":60:30)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":63:9)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":70:9)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":63:13)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":63:21)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":64:9)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":66:9)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":68:9)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":65:33)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":65:26)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":65:13)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":69:23)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":69:13)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":74:1)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":84:1)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":76:5)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":76:9)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":77:5)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":77:29)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":79:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":79:12)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":79:5)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":82:12)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":82:5)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":83:5)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":83:13)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":98:23)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":87:1)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":101:1)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":88:1)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":89:5)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":100:5)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":90:9)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":90:30)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":92:9)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":99:9)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":92:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":92:21)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":92:23)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":92:26)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":92:34)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":92:36)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":93:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":95:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":97:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":94:33)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":94:26)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":94:13)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":98:13)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":103:1)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":112:1)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":105:5)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":105:9)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":106:5)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":106:29)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":108:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":108:12)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":108:5)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":110:12)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":110:5)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":111:5)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_large_44.c":111:13)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc4, #loc5])
#loc148 = loc(fused[#loc9, #loc10])
#loc149 = loc(fused[#loc11, #loc12])
#loc150 = loc(fused[#loc13, #loc14])
#loc151 = loc(fused[#loc15, #loc16])
#loc152 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc153 = loc(fused[#loc24, #loc25])
#loc154 = loc(fused[#loc26, #loc27])
#loc155 = loc(fused[#loc28, #loc29])
#loc156 = loc(fused[#loc32, #loc30])
#loc157 = loc(fused[#loc34, #loc33])
#loc158 = loc(fused[#loc37, #loc38])
#loc159 = loc(fused[#loc39, #loc40])
#loc160 = loc(fused[#loc41, #loc42])
#loc161 = loc(fused[#loc43, #loc44])
#loc162 = loc(fused[#loc45, #loc46])
#loc163 = loc(fused[#loc47, #loc48])
#loc164 = loc(fused[#loc53, #loc54])
#loc167 = loc(fused[#loc64, #loc65])
#loc168 = loc(fused[#loc68, #loc69])
#loc169 = loc(fused[#loc72, #loc71])
#loc170 = loc(fused[#loc73, #loc74])
#loc172 = loc(fused[#loc78, #loc79])
#loc173 = loc(fused[#loc80, #loc81])
#loc174 = loc(fused[#loc82, #loc83])
#loc175 = loc(fused[#loc84, #loc85])
#loc176 = loc(fused[#loc86, #loc87, #loc88, #loc83])
#loc177 = loc(fused[#loc94, #loc95])
#loc178 = loc(fused[#loc96, #loc97])
#loc179 = loc(fused[#loc98, #loc99])
#loc180 = loc(fused[#loc102, #loc100])
#loc181 = loc(fused[#loc104, #loc103])
#loc182 = loc(fused[#loc108, #loc109])
#loc184 = loc(fused[#loc113, #loc114])
#loc185 = loc(fused[#loc115, #loc116])
#loc186 = loc(fused[#loc117, #loc118])
#loc187 = loc(fused[#loc119, #loc120])
#loc188 = loc(fused[#loc122, #loc124])
#loc189 = loc(fused[#loc125, #loc126, #loc127, #loc118])
#loc190 = loc(fused[#loc132, #loc133])
#loc191 = loc(fused[#loc134, #loc135])
#loc192 = loc(fused[#loc136, #loc137])
#loc193 = loc(fused[#loc140, #loc138])
#loc194 = loc(fused[#loc142, #loc141])
