!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":191:10)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":191:14)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":191:20)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":191:32)
#true = #cir.bool<true> : !cir.bool
#loc345 = loc(fused[#loc125, #loc126])
#loc346 = loc(fused[#loc127, #loc128])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc294)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc295)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc296)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc298)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printIntLine(!s32i) loc(#loc299)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc301)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc302)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc302)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc302)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc25)
        cir.condition(%5) loc(#loc25)
      } do {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc306)
          %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc30)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc30)
          cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc306)
          cir.scope {
            %8 = cir.const #cir.int<100> : !s32i loc(#loc34)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc34)
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc308)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc36)
            %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc309)
            cir.if %14 {
              cir.scope {
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
                %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc41)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc42)
                %18 = cir.const #cir.int<100> : !s32i loc(#loc43)
                %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc43)
                %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc44)
                %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc312)
                %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc312)
                %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc296)
                %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
                %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc46)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
                %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc313)
                cir.if %28 {
                  %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
                  %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
                  %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc51)
                  cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc315)
                  cir.scope {
                    %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                    %33 = cir.const #cir.int<0> : !s32i loc(#loc58)
                    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc58)
                    %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc317)
                    %36 = cir.ternary(%35, true {
                      %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                      %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc61)
                      %39 = cir.const #cir.int<1> : !s32i loc(#loc62)
                      %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc62)
                      %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc318)
                      %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc63)
                      %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc60)
                      %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc60)
                      %45 = cir.const #cir.int<10> : !s32i loc(#loc64)
                      %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc319)
                      %47 = cir.ternary(%46, true {
                        %48 = cir.const #true loc(#loc59)
                        cir.yield %48 : !cir.bool loc(#loc59)
                      }, false {
                        %48 = cir.const #false loc(#loc59)
                        cir.yield %48 : !cir.bool loc(#loc59)
                      }) : (!cir.bool) -> !cir.bool loc(#loc59)
                      cir.yield %47 : !cir.bool loc(#loc59)
                    }, false {
                      %37 = cir.const #false loc(#loc59)
                      cir.yield %37 : !cir.bool loc(#loc59)
                    }) : (!cir.bool) -> !cir.bool loc(#loc59)
                    cir.if %36 {
                      %37 = cir.const #cir.int<0> : !s32i loc(#loc66)
                      %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc66)
                      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                      %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                      %41 = cir.const #cir.int<1> : !s32i loc(#loc69)
                      %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc69)
                      %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc321)
                      %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc70)
                      cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc322)
                    } loc(#loc320)
                  } loc(#loc316)
                } else {
                  %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                  %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                  cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc71)
                  %31 = cir.const #cir.int<0> : !s32i loc(#loc72)
                  %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc72)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
                  %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc74)
                  %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc75)
                  cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc323)
                } loc(#loc314)
              } loc(#loc311)
            } loc(#loc310)
          } loc(#loc307)
        } loc(#loc305)
        cir.break loc(#loc76)
      } loc(#loc304)
    } loc(#loc304)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc79)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc79)
        cir.condition(%5) loc(#loc79)
      } do {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc326)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc327)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc328)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc88)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
            %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
            %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc88)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc90)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc330)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc92)
              cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc332)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc96)
                cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc334)
                cir.for : cond {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc335)
                  cir.condition(%19) loc(#loc100)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc103)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc337)
                  } loc(#loc336)
                  cir.yield loc(#loc95)
                } step {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc105)
                  cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc338)
                  cir.yield loc(#loc333)
                } loc(#loc333)
              } loc(#loc333)
              %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc107)
            } loc(#loc331)
          } loc(#loc329)
        } loc(#loc325)
        cir.break loc(#loc108)
      } loc(#loc324)
    } loc(#loc324)
    cir.return loc(#loc16)
  } loc(#loc300)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc340)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc111)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc341)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc113)
    cir.return loc(#loc110)
  } loc(#loc339)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc342)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc343)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc122)
  cir.func @main(%arg0: !s32i loc(fused[#loc125, #loc126]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc127, #loc128])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc345)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc346)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc124)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc129)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc130)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc131)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc131)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc132)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc119)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc347)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_16_good() : () -> () loc(#loc134)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc120)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc121)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc348)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_16_bad() : () -> () loc(#loc138)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc122)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc141)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc349)
    cir.return %17 : !s32i loc(#loc349)
  } loc(#loc344)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc351)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc352)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc352)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc352)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc353)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc153)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc153)
        cir.condition(%5) loc(#loc153)
      } do {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc356)
          %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc158)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
          %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc158)
          cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc356)
          cir.scope {
            %8 = cir.const #cir.int<100> : !s32i loc(#loc162)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc162)
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc163)
            %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc358)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc164)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc164)
            %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc359)
            cir.if %14 {
              cir.scope {
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
                %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc169)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc170)
                %18 = cir.const #cir.int<100> : !s32i loc(#loc171)
                %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc171)
                %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc172)
                %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc362)
                %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc362)
                %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc296)
                %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc173)
                %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc174)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc175)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc175)
                %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc363)
                cir.if %28 {
                  %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc179)
                  %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
                  %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc179)
                  cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc365)
                  cir.scope {
                    %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc185)
                    %33 = cir.const #cir.int<0> : !s32i loc(#loc186)
                    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc186)
                    %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc367)
                    %36 = cir.ternary(%35, true {
                      %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
                      %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc189)
                      %39 = cir.const #cir.int<1> : !s32i loc(#loc190)
                      %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc190)
                      %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc368)
                      %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc191)
                      %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc188)
                      %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc188)
                      %45 = cir.const #cir.int<10> : !s32i loc(#loc192)
                      %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc369)
                      %47 = cir.ternary(%46, true {
                        %48 = cir.const #true loc(#loc187)
                        cir.yield %48 : !cir.bool loc(#loc187)
                      }, false {
                        %48 = cir.const #false loc(#loc187)
                        cir.yield %48 : !cir.bool loc(#loc187)
                      }) : (!cir.bool) -> !cir.bool loc(#loc187)
                      cir.yield %47 : !cir.bool loc(#loc187)
                    }, false {
                      %37 = cir.const #false loc(#loc187)
                      cir.yield %37 : !cir.bool loc(#loc187)
                    }) : (!cir.bool) -> !cir.bool loc(#loc187)
                    cir.if %36 {
                      %37 = cir.const #cir.int<0> : !s32i loc(#loc194)
                      %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc194)
                      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
                      %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc196)
                      %41 = cir.const #cir.int<1> : !s32i loc(#loc197)
                      %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc197)
                      %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc371)
                      %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc198)
                      cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc372)
                    } loc(#loc370)
                  } loc(#loc366)
                } else {
                  %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc199)
                  %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc199)
                  cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc200)
                  %31 = cir.const #cir.int<0> : !s32i loc(#loc201)
                  %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc201)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
                  %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc203)
                  %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc204)
                  cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc373)
                } loc(#loc364)
              } loc(#loc361)
            } loc(#loc360)
          } loc(#loc357)
        } loc(#loc355)
        cir.break loc(#loc205)
      } loc(#loc354)
    } loc(#loc354)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc208)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc208)
        cir.condition(%5) loc(#loc208)
      } do {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc376)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc377)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc378)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc217)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
            %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc219)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc219)
            %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc217)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc220)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc380)
            cir.if %13 {
              cir.scope {
                %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                %15 = cir.const #cir.int<10000> : !s32i loc(#loc225)
                %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc383)
                cir.if %16 {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc227)
                  cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc385)
                  cir.scope {
                    %19 = cir.const #cir.int<0> : !s32i loc(#loc231)
                    cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc387)
                    cir.for : cond {
                      %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                      %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc234)
                      %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc388)
                      cir.condition(%22) loc(#loc235)
                    } body {
                      cir.scope {
                        %20 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc237)
                        %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc238)
                        cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc390)
                      } loc(#loc389)
                      cir.yield loc(#loc230)
                    } step {
                      %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                      %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc240)
                      cir.store %21, %4 : !s32i, !cir.ptr<!s32i> loc(#loc391)
                      cir.yield loc(#loc386)
                    } loc(#loc386)
                  } loc(#loc386)
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                  cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc242)
                } loc(#loc384)
              } loc(#loc382)
            } loc(#loc381)
          } loc(#loc379)
        } loc(#loc375)
        cir.break loc(#loc243)
      } loc(#loc374)
    } loc(#loc374)
    cir.return loc(#loc144)
  } loc(#loc350)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc392)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc246)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc394)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc395)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc395)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc395)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc253)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc396)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc257)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc257)
        cir.condition(%5) loc(#loc257)
      } do {
        %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc258)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc259)
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc246)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc246)
        %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc258)
        cir.break loc(#loc260)
      } loc(#loc397)
    } loc(#loc397)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc263)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc263)
        cir.condition(%5) loc(#loc263)
      } do {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc400)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc401)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc402)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc272)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc273)
            %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc274)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc274)
            %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc272)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc275)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc404)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc277)
              cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc406)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc281)
                cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc408)
                cir.for : cond {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc283)
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc284)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc409)
                  cir.condition(%19) loc(#loc285)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc287)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc288)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc411)
                  } loc(#loc410)
                  cir.yield loc(#loc280)
                } step {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc289)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc290)
                  cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc412)
                  cir.yield loc(#loc407)
                } loc(#loc407)
              } loc(#loc407)
              %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc291)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc292)
            } loc(#loc405)
          } loc(#loc403)
        } loc(#loc399)
        cir.break loc(#loc293)
      } loc(#loc398)
    } loc(#loc398)
    cir.return loc(#loc248)
  } loc(#loc393)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":54:31)
#loc10 = loc("/usr/include/stdio.h":468:1)
#loc11 = loc("/usr/include/stdio.h":468:12)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":66:30)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":28:1)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":80:1)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":30:5)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":30:12)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":31:5)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":31:28)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":32:12)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":32:5)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":33:5)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":61:5)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":33:11)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":35:9)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":59:9)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":37:13)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":37:41)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":37:30)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":37:37)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":39:13)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":58:13)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":39:17)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":39:21)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":39:31)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":40:13)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:17)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":57:17)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:27)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:32)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:31)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:47)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:51)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:61)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:21)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":42:71)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":43:17)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":51:17)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":53:17)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":46:31)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":46:38)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":46:21)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":46:42)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:21)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":50:21)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:25)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:35)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:37)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:40)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:45)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:53)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:54)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":47:59)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":48:21)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":49:43)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":49:25)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":49:30)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":49:38)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":49:39)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":54:21)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":56:37)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":56:21)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":56:26)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":56:33)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":60:9)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":62:5)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":79:5)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":62:11)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":64:9)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":77:9)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":65:13)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":65:17)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":65:20)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":65:23)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":66:13)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":76:13)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":66:17)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":66:24)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":66:43)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":67:13)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":69:31)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":69:17)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:17)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":74:17)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:26)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:22)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:29)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:33)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:31)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":71:17)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":73:32)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":73:21)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:37)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":70:36)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":75:30)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":75:17)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":78:9)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":176:1)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":180:1)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":178:5)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":178:13)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":179:5)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":179:13)
#loc115 = loc("/usr/include/stdlib.h":575:1)
#loc116 = loc("/usr/include/stdlib.h":575:41)
#loc117 = loc("/usr/include/time.h":76:1)
#loc118 = loc("/usr/include/time.h":76:38)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":196:15)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":198:15)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":201:15)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":203:15)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":191:1)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":206:1)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":192:1)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":194:27)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":194:22)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":194:5)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":196:5)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":197:5)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":197:59)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":198:5)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":201:5)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":202:5)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":202:58)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":203:5)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":205:12)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":205:5)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":87:1)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":142:1)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":89:5)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":89:12)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":90:5)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":90:28)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":91:12)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":91:5)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":92:5)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":120:5)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":92:11)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":94:9)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":118:9)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":96:13)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":96:41)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":96:30)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":96:37)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":98:13)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":117:13)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":98:17)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":98:21)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":98:31)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":99:13)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:17)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":116:17)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:27)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:32)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:31)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:47)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:51)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:61)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:21)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":101:71)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":102:17)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":110:17)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":112:17)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":105:31)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":105:38)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":105:21)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":105:42)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:21)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":109:21)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:25)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:35)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:37)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:40)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:45)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:53)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:54)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":106:59)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":107:21)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":108:43)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":108:25)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":108:30)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":108:38)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":108:39)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":113:31)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":113:21)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":115:37)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":115:21)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":115:26)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":115:33)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":119:9)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":121:5)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":141:5)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":121:11)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":123:9)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":139:9)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":124:13)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":124:17)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":124:20)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":124:23)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":125:13)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":138:13)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":125:17)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":125:24)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":125:30)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":125:43)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":126:13)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":128:17)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":137:17)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":128:21)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":128:25)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":129:17)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":130:35)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":130:21)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:21)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":135:21)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:30)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:26)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:33)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:37)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:35)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":132:21)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":134:36)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":134:25)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:41)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":131:40)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":136:34)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":136:21)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":140:9)
#loc244 = loc("/usr/include/string.h":141:1)
#loc245 = loc("/usr/include/string.h":142:14)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":153:22)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":145:1)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":174:1)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":147:5)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":147:12)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":148:5)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":148:28)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":149:12)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":149:5)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":150:5)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":155:5)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":150:11)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":153:9)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":153:16)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":154:9)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":156:5)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":173:5)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":156:11)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":158:9)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":171:9)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":159:13)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":159:17)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":159:20)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":159:23)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":160:13)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":170:13)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":160:17)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":160:24)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":160:30)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":160:43)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":161:13)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":163:31)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":163:17)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:17)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":168:17)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:26)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:22)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:29)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:33)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:31)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":165:17)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":167:32)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":167:21)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:37)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":164:36)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":169:30)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":169:17)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_16.c":172:9)
#loc294 = loc(fused[#loc1, #loc2])
#loc295 = loc(fused[#loc3, #loc4])
#loc296 = loc(fused[#loc5, #loc6])
#loc297 = loc(fused[#loc7, #loc8])
#loc298 = loc(fused[#loc10, #loc11])
#loc299 = loc(fused[#loc13, #loc14])
#loc300 = loc(fused[#loc15, #loc16])
#loc301 = loc(fused[#loc17, #loc18])
#loc302 = loc(fused[#loc19, #loc20])
#loc303 = loc(fused[#loc22, #loc21])
#loc304 = loc(fused[#loc23, #loc24])
#loc305 = loc(fused[#loc26, #loc27])
#loc306 = loc(fused[#loc28, #loc29])
#loc307 = loc(fused[#loc32, #loc33])
#loc308 = loc(fused[#loc34, #loc35])
#loc309 = loc(fused[#loc34, #loc36])
#loc310 = loc(fused[#loc37, #loc33])
#loc311 = loc(fused[#loc38, #loc39])
#loc312 = loc(fused[#loc43, #loc44])
#loc313 = loc(fused[#loc46, #loc47])
#loc314 = loc(fused[#loc48, #loc49, #loc50, #loc39])
#loc315 = loc(fused[#loc53, #loc54])
#loc316 = loc(fused[#loc55, #loc56])
#loc317 = loc(fused[#loc57, #loc58])
#loc318 = loc(fused[#loc61, #loc62])
#loc319 = loc(fused[#loc60, #loc64])
#loc320 = loc(fused[#loc65, #loc56])
#loc321 = loc(fused[#loc68, #loc69])
#loc322 = loc(fused[#loc67, #loc66])
#loc323 = loc(fused[#loc73, #loc72])
#loc324 = loc(fused[#loc77, #loc78])
#loc325 = loc(fused[#loc80, #loc81])
#loc326 = loc(fused[#loc82, #loc83])
#loc327 = loc(fused[#loc82, #loc84])
#loc328 = loc(fused[#loc82, #loc85])
#loc329 = loc(fused[#loc86, #loc87])
#loc330 = loc(fused[#loc88, #loc90])
#loc331 = loc(fused[#loc91, #loc87])
#loc332 = loc(fused[#loc93, #loc92])
#loc333 = loc(fused[#loc94, #loc95])
#loc334 = loc(fused[#loc97, #loc96])
#loc335 = loc(fused[#loc98, #loc99])
#loc336 = loc(fused[#loc101, #loc95])
#loc337 = loc(fused[#loc103, #loc102])
#loc338 = loc(fused[#loc105, #loc104])
#loc339 = loc(fused[#loc109, #loc110])
#loc340 = loc(fused[#loc111, #loc112])
#loc341 = loc(fused[#loc113, #loc114])
#loc342 = loc(fused[#loc115, #loc116])
#loc343 = loc(fused[#loc117, #loc118])
#loc344 = loc(fused[#loc123, #loc124])
#loc347 = loc(fused[#loc134, #loc135])
#loc348 = loc(fused[#loc138, #loc139])
#loc349 = loc(fused[#loc142, #loc141])
#loc350 = loc(fused[#loc143, #loc144])
#loc351 = loc(fused[#loc145, #loc146])
#loc352 = loc(fused[#loc147, #loc148])
#loc353 = loc(fused[#loc150, #loc149])
#loc354 = loc(fused[#loc151, #loc152])
#loc355 = loc(fused[#loc154, #loc155])
#loc356 = loc(fused[#loc156, #loc157])
#loc357 = loc(fused[#loc160, #loc161])
#loc358 = loc(fused[#loc162, #loc163])
#loc359 = loc(fused[#loc162, #loc164])
#loc360 = loc(fused[#loc165, #loc161])
#loc361 = loc(fused[#loc166, #loc167])
#loc362 = loc(fused[#loc171, #loc172])
#loc363 = loc(fused[#loc174, #loc175])
#loc364 = loc(fused[#loc176, #loc177, #loc178, #loc167])
#loc365 = loc(fused[#loc181, #loc182])
#loc366 = loc(fused[#loc183, #loc184])
#loc367 = loc(fused[#loc185, #loc186])
#loc368 = loc(fused[#loc189, #loc190])
#loc369 = loc(fused[#loc188, #loc192])
#loc370 = loc(fused[#loc193, #loc184])
#loc371 = loc(fused[#loc196, #loc197])
#loc372 = loc(fused[#loc195, #loc194])
#loc373 = loc(fused[#loc202, #loc201])
#loc374 = loc(fused[#loc206, #loc207])
#loc375 = loc(fused[#loc209, #loc210])
#loc376 = loc(fused[#loc211, #loc212])
#loc377 = loc(fused[#loc211, #loc213])
#loc378 = loc(fused[#loc211, #loc214])
#loc379 = loc(fused[#loc215, #loc216])
#loc380 = loc(fused[#loc217, #loc220])
#loc381 = loc(fused[#loc221, #loc216])
#loc382 = loc(fused[#loc222, #loc223])
#loc383 = loc(fused[#loc224, #loc225])
#loc384 = loc(fused[#loc226, #loc223])
#loc385 = loc(fused[#loc228, #loc227])
#loc386 = loc(fused[#loc229, #loc230])
#loc387 = loc(fused[#loc232, #loc231])
#loc388 = loc(fused[#loc233, #loc234])
#loc389 = loc(fused[#loc236, #loc230])
#loc390 = loc(fused[#loc238, #loc237])
#loc391 = loc(fused[#loc240, #loc239])
#loc392 = loc(fused[#loc244, #loc245])
#loc393 = loc(fused[#loc247, #loc248])
#loc394 = loc(fused[#loc249, #loc250])
#loc395 = loc(fused[#loc251, #loc252])
#loc396 = loc(fused[#loc254, #loc253])
#loc397 = loc(fused[#loc255, #loc256])
#loc398 = loc(fused[#loc261, #loc262])
#loc399 = loc(fused[#loc264, #loc265])
#loc400 = loc(fused[#loc266, #loc267])
#loc401 = loc(fused[#loc266, #loc268])
#loc402 = loc(fused[#loc266, #loc269])
#loc403 = loc(fused[#loc270, #loc271])
#loc404 = loc(fused[#loc272, #loc275])
#loc405 = loc(fused[#loc276, #loc271])
#loc406 = loc(fused[#loc278, #loc277])
#loc407 = loc(fused[#loc279, #loc280])
#loc408 = loc(fused[#loc282, #loc281])
#loc409 = loc(fused[#loc283, #loc284])
#loc410 = loc(fused[#loc286, #loc280])
#loc411 = loc(fused[#loc288, #loc287])
#loc412 = loc(fused[#loc290, #loc289])
