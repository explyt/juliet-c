!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc73)
  cir.func no_proto @CWE843_Type_Confusion__char_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc75)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charBuffer", init] {alignment = 1 : i64} loc(#loc76)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc77)
    %3 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc78)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc79)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc80)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>> loc(#loc79)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>> loc(#loc80)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc17)
    cir.store %6, %3 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc81)
    cir.br ^bb1 loc(#loc82)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc6)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc21)
    cir.store %8, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc75)
    cir.br ^bb2 loc(#loc83)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<97> : !s32i loc(#loc8)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc8)
    cir.store %10, %1 : !s8i, !cir.ptr<!s8i> loc(#loc76)
    %11 = cir.cast(bitcast, %1 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    cir.store %11, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc85)
    cir.br ^bb3 loc(#loc23)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc27)
    %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc28)
    cir.store %12, %13 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc86)
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc87)
  ^bb5:  // pred: ^bb4
    %14 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc10)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc32)
    cir.store %15, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc77)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc33)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc33)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc35)
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc74)
  cir.func no_proto @CWE843_Type_Confusion__char_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc89)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc37)
  } loc(#loc88)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc92)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc93)
    %3 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc94)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc95)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc96)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>> loc(#loc95)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>> loc(#loc96)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
    cir.store %6, %3 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc97)
    cir.br ^bb1 loc(#loc98)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc43)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc58)
    cir.store %8, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc91)
    cir.br ^bb2 loc(#loc99)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<8> : !s32i loc(#loc45)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    %10 = cir.cast(bitcast, %1 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc100)
    cir.store %10, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc101)
    cir.br ^bb3 loc(#loc60)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc64)
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc65)
    cir.store %11, %12 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc102)
    cir.br ^bb4 loc(#loc57)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc103)
  ^bb5:  // pred: ^bb4
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc47)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc69)
    cir.store %14, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc93)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc70)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc70)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc72)
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc41)
  } loc(#loc90)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_32.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE843_Type_Confusion__char_32.c":21:1)
#loc4 = loc("CWE843_Type_Confusion__char_32.c":42:1)
#loc5 = loc("CWE843_Type_Confusion__char_32.c":29:9)
#loc6 = loc("CWE843_Type_Confusion__char_32.c":29:24)
#loc7 = loc("CWE843_Type_Confusion__char_32.c":32:13)
#loc8 = loc("CWE843_Type_Confusion__char_32.c":32:31)
#loc9 = loc("CWE843_Type_Confusion__char_32.c":38:9)
#loc10 = loc("CWE843_Type_Confusion__char_32.c":38:24)
#loc11 = loc("CWE843_Type_Confusion__char_32.c":23:5)
#loc12 = loc("CWE843_Type_Confusion__char_32.c":23:12)
#loc13 = loc("CWE843_Type_Confusion__char_32.c":24:5)
#loc14 = loc("CWE843_Type_Confusion__char_32.c":24:25)
#loc15 = loc("CWE843_Type_Confusion__char_32.c":25:5)
#loc16 = loc("CWE843_Type_Confusion__char_32.c":25:25)
#loc17 = loc("CWE843_Type_Confusion__char_32.c":27:12)
#loc18 = loc("CWE843_Type_Confusion__char_32.c":27:5)
#loc19 = loc("CWE843_Type_Confusion__char_32.c":28:5)
#loc20 = loc("CWE843_Type_Confusion__char_32.c":36:5)
#loc21 = loc("CWE843_Type_Confusion__char_32.c":29:23)
#loc22 = loc("CWE843_Type_Confusion__char_32.c":30:9)
#loc23 = loc("CWE843_Type_Confusion__char_32.c":34:9)
#loc24 = loc("CWE843_Type_Confusion__char_32.c":33:20)
#loc25 = loc("CWE843_Type_Confusion__char_32.c":33:21)
#loc26 = loc("CWE843_Type_Confusion__char_32.c":33:13)
#loc27 = loc("CWE843_Type_Confusion__char_32.c":35:21)
#loc28 = loc("CWE843_Type_Confusion__char_32.c":35:10)
#loc29 = loc("CWE843_Type_Confusion__char_32.c":35:9)
#loc30 = loc("CWE843_Type_Confusion__char_32.c":37:5)
#loc31 = loc("CWE843_Type_Confusion__char_32.c":41:5)
#loc32 = loc("CWE843_Type_Confusion__char_32.c":38:23)
#loc33 = loc("CWE843_Type_Confusion__char_32.c":40:30)
#loc34 = loc("CWE843_Type_Confusion__char_32.c":40:22)
#loc35 = loc("CWE843_Type_Confusion__char_32.c":40:9)
#loc36 = loc("CWE843_Type_Confusion__char_32.c":72:1)
#loc37 = loc("CWE843_Type_Confusion__char_32.c":75:1)
#loc38 = loc("CWE843_Type_Confusion__char_32.c":74:5)
#loc39 = loc("CWE843_Type_Confusion__char_32.c":74:13)
#loc40 = loc("CWE843_Type_Confusion__char_32.c":49:1)
#loc41 = loc("CWE843_Type_Confusion__char_32.c":70:1)
#loc42 = loc("CWE843_Type_Confusion__char_32.c":57:9)
#loc43 = loc("CWE843_Type_Confusion__char_32.c":57:24)
#loc44 = loc("CWE843_Type_Confusion__char_32.c":60:13)
#loc45 = loc("CWE843_Type_Confusion__char_32.c":60:29)
#loc46 = loc("CWE843_Type_Confusion__char_32.c":66:9)
#loc47 = loc("CWE843_Type_Confusion__char_32.c":66:24)
#loc48 = loc("CWE843_Type_Confusion__char_32.c":51:5)
#loc49 = loc("CWE843_Type_Confusion__char_32.c":51:12)
#loc50 = loc("CWE843_Type_Confusion__char_32.c":52:5)
#loc51 = loc("CWE843_Type_Confusion__char_32.c":52:25)
#loc52 = loc("CWE843_Type_Confusion__char_32.c":53:5)
#loc53 = loc("CWE843_Type_Confusion__char_32.c":53:25)
#loc54 = loc("CWE843_Type_Confusion__char_32.c":55:12)
#loc55 = loc("CWE843_Type_Confusion__char_32.c":55:5)
#loc56 = loc("CWE843_Type_Confusion__char_32.c":56:5)
#loc57 = loc("CWE843_Type_Confusion__char_32.c":64:5)
#loc58 = loc("CWE843_Type_Confusion__char_32.c":57:23)
#loc59 = loc("CWE843_Type_Confusion__char_32.c":58:9)
#loc60 = loc("CWE843_Type_Confusion__char_32.c":62:9)
#loc61 = loc("CWE843_Type_Confusion__char_32.c":61:20)
#loc62 = loc("CWE843_Type_Confusion__char_32.c":61:21)
#loc63 = loc("CWE843_Type_Confusion__char_32.c":61:13)
#loc64 = loc("CWE843_Type_Confusion__char_32.c":63:21)
#loc65 = loc("CWE843_Type_Confusion__char_32.c":63:10)
#loc66 = loc("CWE843_Type_Confusion__char_32.c":63:9)
#loc67 = loc("CWE843_Type_Confusion__char_32.c":65:5)
#loc68 = loc("CWE843_Type_Confusion__char_32.c":69:5)
#loc69 = loc("CWE843_Type_Confusion__char_32.c":66:23)
#loc70 = loc("CWE843_Type_Confusion__char_32.c":68:30)
#loc71 = loc("CWE843_Type_Confusion__char_32.c":68:22)
#loc72 = loc("CWE843_Type_Confusion__char_32.c":68:9)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc3, #loc4])
#loc75 = loc(fused[#loc5, #loc6])
#loc76 = loc(fused[#loc7, #loc8])
#loc77 = loc(fused[#loc9, #loc10])
#loc78 = loc(fused[#loc11, #loc12])
#loc79 = loc(fused[#loc13, #loc14])
#loc80 = loc(fused[#loc15, #loc16])
#loc81 = loc(fused[#loc18, #loc17])
#loc82 = loc(fused[#loc19, #loc20])
#loc83 = loc(fused[#loc22, #loc23])
#loc84 = loc(fused[#loc24, #loc25])
#loc85 = loc(fused[#loc26, #loc25])
#loc86 = loc(fused[#loc29, #loc27])
#loc87 = loc(fused[#loc30, #loc31])
#loc88 = loc(fused[#loc36, #loc37])
#loc89 = loc(fused[#loc38, #loc39])
#loc90 = loc(fused[#loc40, #loc41])
#loc91 = loc(fused[#loc42, #loc43])
#loc92 = loc(fused[#loc44, #loc45])
#loc93 = loc(fused[#loc46, #loc47])
#loc94 = loc(fused[#loc48, #loc49])
#loc95 = loc(fused[#loc50, #loc51])
#loc96 = loc(fused[#loc52, #loc53])
#loc97 = loc(fused[#loc55, #loc54])
#loc98 = loc(fused[#loc56, #loc57])
#loc99 = loc(fused[#loc59, #loc60])
#loc100 = loc(fused[#loc61, #loc62])
#loc101 = loc(fused[#loc63, #loc62])
#loc102 = loc(fused[#loc66, #loc64])
#loc103 = loc(fused[#loc67, #loc68])
