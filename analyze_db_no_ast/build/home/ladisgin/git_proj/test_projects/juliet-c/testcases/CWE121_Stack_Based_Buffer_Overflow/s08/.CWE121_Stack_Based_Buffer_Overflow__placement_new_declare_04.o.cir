!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc40 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private  @printIntLine(!s32i) loc(#loc175)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_043badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc178)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc179)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
      cir.if %4 {
        %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc16)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
      } loc(#loc181)
    } loc(#loc180)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc20)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc186)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc187)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc187)
          cir.call @_ZN12TwoIntsClassC2Ev(%9) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc25)
          cir.store %9, %5 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc186)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc28)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc188)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc31)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
          %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc189)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc34)
          %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc35)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc36)
        } loc(#loc185)
      } loc(#loc184)
    } loc(#loc183)
    cir.return loc(#loc5)
  } loc(#loc176)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc39)
  cir.func linkonce_odr  @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc40)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc40)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc40)
    cir.return loc(#loc40)
  } loc(#loc40)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc193)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc194)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc51)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc51)
      cir.if %4 {
        %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc53)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
      } loc(#loc196)
    } loc(#loc195)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc57)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc57)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc201)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc202)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc202)
          cir.call @_ZN11OneIntClassC2Ev(%9) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc65)
          cir.store %9, %5 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc201)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc68)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc69)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc70)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc203)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc71)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc70)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc72)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc73)
        } loc(#loc200)
      } loc(#loc199)
    } loc(#loc198)
    cir.return loc(#loc42)
  } loc(#loc191)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc206)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc207)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc84)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc84)
      cir.if %4 {
        %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc86)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
      } loc(#loc209)
    } loc(#loc208)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc90)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc90)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc214)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc215)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc215)
          cir.call @_ZN11OneIntClassC2Ev(%9) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc95)
          cir.store %9, %5 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc214)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc98)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc99)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc70)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc216)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc100)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc70)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc102)
        } loc(#loc213)
      } loc(#loc212)
    } loc(#loc211)
    cir.return loc(#loc75)
  } loc(#loc204)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc219)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc220)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc113)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc113)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc117)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc117)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc118)
      } else {
        %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc119)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
      } loc(#loc222)
    } loc(#loc221)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc123)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc227)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc228)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc228)
          cir.call @_ZN12TwoIntsClassC2Ev(%9) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc128)
          cir.store %9, %5 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc227)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc131)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc132)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc229)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc133)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc134)
          %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc230)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc135)
          %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc137)
        } loc(#loc226)
      } loc(#loc225)
    } loc(#loc224)
    cir.return loc(#loc104)
  } loc(#loc217)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc232)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc233)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc234)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc148)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc148)
      cir.if %4 {
        %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc150)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
      } loc(#loc236)
    } loc(#loc235)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc154)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc154)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc241)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc242)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc242)
          cir.call @_ZN12TwoIntsClassC2Ev(%9) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc159)
          cir.store %9, %5 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc241)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc162)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc163)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc243)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc164)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc165)
          %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc244)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc166)
          %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc167)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc168)
        } loc(#loc240)
      } loc(#loc239)
    } loc(#loc238)
    cir.return loc(#loc139)
  } loc(#loc231)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_044goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04L8goodB2G1Ev() : () -> () loc(#loc171)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04L8goodB2G2Ev() : () -> () loc(#loc172)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04L8goodG2B1Ev() : () -> () loc(#loc173)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04L8goodG2B2Ev() : () -> () loc(#loc174)
    cir.return loc(#loc170)
  } loc(#loc245)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":31:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":57:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":33:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":33:12)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":34:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":34:43)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":35:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":35:45)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":36:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":40:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":36:8)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":37:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":39:16)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":39:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":41:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":56:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":41:8)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":42:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":43:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":55:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":49:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":49:49)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":49:39)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":49:43)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":51:32)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":51:13)
#loc30 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":52:32)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":52:13)
#loc33 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":53:26)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":53:36)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":53:13)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":77:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":64:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":93:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":66:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":66:12)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":67:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":67:43)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":68:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":68:45)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":69:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":73:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":69:8)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":70:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":72:16)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":72:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":74:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":92:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":74:8)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":75:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":78:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":80:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":77:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":81:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":91:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":87:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":87:48)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":87:38)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":87:42)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":89:32)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":89:13)
#loc70 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":90:26)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":90:36)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":90:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":96:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":120:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":98:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":98:12)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":99:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":99:43)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":100:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":100:45)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":101:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":105:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":101:8)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":102:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":104:16)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":104:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":106:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":119:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":106:8)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":107:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":108:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":118:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":114:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":114:48)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":114:38)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":114:42)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":116:32)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":116:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":117:26)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":117:36)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":117:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":123:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":154:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":125:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":125:12)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":126:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":126:43)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":127:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":127:45)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":128:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":137:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":128:8)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":129:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":132:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":134:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":131:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":131:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":136:16)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":136:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":138:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":153:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":138:8)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":139:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":140:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":152:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":146:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":146:49)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":146:39)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":146:43)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":148:32)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":148:13)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":149:32)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":149:13)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":150:26)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":150:36)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":150:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":157:1)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":183:1)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":159:5)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":159:12)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":160:5)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":160:43)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":161:5)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":161:45)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":162:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":166:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":162:8)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":163:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":165:16)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":165:9)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":167:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":182:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":167:8)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":168:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":169:9)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":181:9)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":175:13)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":175:49)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":175:39)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":175:43)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":177:32)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":177:13)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":178:32)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":178:13)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":179:26)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":179:36)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":179:13)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":185:1)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":191:1)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":187:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":188:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":189:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_04.cpp":190:5)
#loc175 = loc(fused[#loc2, #loc3])
#loc176 = loc(fused[#loc4, #loc5])
#loc177 = loc(fused[#loc6, #loc7])
#loc178 = loc(fused[#loc8, #loc9])
#loc179 = loc(fused[#loc10, #loc11])
#loc180 = loc(fused[#loc12, #loc13])
#loc181 = loc(fused[#loc15, #loc13])
#loc182 = loc(fused[#loc17, #loc16])
#loc183 = loc(fused[#loc18, #loc19])
#loc184 = loc(fused[#loc21, #loc19])
#loc185 = loc(fused[#loc22, #loc23])
#loc186 = loc(fused[#loc24, #loc25])
#loc187 = loc(fused[#loc26, #loc25])
#loc188 = loc(fused[#loc29, #loc28])
#loc189 = loc(fused[#loc32, #loc31])
#loc190 = loc(fused[#loc37, #loc38])
#loc191 = loc(fused[#loc41, #loc42])
#loc192 = loc(fused[#loc43, #loc44])
#loc193 = loc(fused[#loc45, #loc46])
#loc194 = loc(fused[#loc47, #loc48])
#loc195 = loc(fused[#loc49, #loc50])
#loc196 = loc(fused[#loc52, #loc50])
#loc197 = loc(fused[#loc54, #loc53])
#loc198 = loc(fused[#loc55, #loc56])
#loc199 = loc(fused[#loc58, #loc59, #loc60, #loc56])
#loc200 = loc(fused[#loc62, #loc63])
#loc201 = loc(fused[#loc64, #loc65])
#loc202 = loc(fused[#loc66, #loc65])
#loc203 = loc(fused[#loc69, #loc68])
#loc204 = loc(fused[#loc74, #loc75])
#loc205 = loc(fused[#loc76, #loc77])
#loc206 = loc(fused[#loc78, #loc79])
#loc207 = loc(fused[#loc80, #loc81])
#loc208 = loc(fused[#loc82, #loc83])
#loc209 = loc(fused[#loc85, #loc83])
#loc210 = loc(fused[#loc87, #loc86])
#loc211 = loc(fused[#loc88, #loc89])
#loc212 = loc(fused[#loc91, #loc89])
#loc213 = loc(fused[#loc92, #loc93])
#loc214 = loc(fused[#loc94, #loc95])
#loc215 = loc(fused[#loc96, #loc95])
#loc216 = loc(fused[#loc99, #loc98])
#loc217 = loc(fused[#loc103, #loc104])
#loc218 = loc(fused[#loc105, #loc106])
#loc219 = loc(fused[#loc107, #loc108])
#loc220 = loc(fused[#loc109, #loc110])
#loc221 = loc(fused[#loc111, #loc112])
#loc222 = loc(fused[#loc114, #loc115, #loc116, #loc112])
#loc223 = loc(fused[#loc120, #loc119])
#loc224 = loc(fused[#loc121, #loc122])
#loc225 = loc(fused[#loc124, #loc122])
#loc226 = loc(fused[#loc125, #loc126])
#loc227 = loc(fused[#loc127, #loc128])
#loc228 = loc(fused[#loc129, #loc128])
#loc229 = loc(fused[#loc132, #loc131])
#loc230 = loc(fused[#loc134, #loc133])
#loc231 = loc(fused[#loc138, #loc139])
#loc232 = loc(fused[#loc140, #loc141])
#loc233 = loc(fused[#loc142, #loc143])
#loc234 = loc(fused[#loc144, #loc145])
#loc235 = loc(fused[#loc146, #loc147])
#loc236 = loc(fused[#loc149, #loc147])
#loc237 = loc(fused[#loc151, #loc150])
#loc238 = loc(fused[#loc152, #loc153])
#loc239 = loc(fused[#loc155, #loc153])
#loc240 = loc(fused[#loc156, #loc157])
#loc241 = loc(fused[#loc158, #loc159])
#loc242 = loc(fused[#loc160, #loc159])
#loc243 = loc(fused[#loc163, #loc162])
#loc244 = loc(fused[#loc165, #loc164])
#loc245 = loc(fused[#loc169, #loc170])
