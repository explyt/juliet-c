!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_while_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello from bad()\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_while_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc64)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc10)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc67)
        cir.condition(%4) loc(#loc14)
      } body {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc70)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc19)
            cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc70)
            cir.scope {
              cir.while {
                %6 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc22)
                %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc23)
                cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc72)
                %8 = cir.const #cir.int<10> : !s32i loc(#loc24)
                %9 = cir.cmp(lt, %6, %8) : !s32i, !cir.bool loc(#loc73)
                cir.condition(%9) loc(#loc25)
              } do {
                cir.yield loc(#loc21)
              } loc(#loc71)
            } loc(#loc71)
          } loc(#loc69)
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc3)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc26)
        } loc(#loc68)
        cir.yield loc(#loc9)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc28)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
        cir.yield loc(#loc65)
      } loc(#loc65)
    } loc(#loc65)
    cir.return loc(#loc5)
  } loc(#loc63)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_while_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc76)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc30)
  } loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Inside the while statement\00" : !cir.array<!s8i x 27>> : !cir.array<!s8i x 27> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Hello from good()\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc34)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc78)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc41)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc81)
        cir.condition(%4) loc(#loc45)
      } body {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc84)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc50)
            cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc84)
            cir.scope {
              cir.while {
                %6 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc54)
                cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc86)
                %8 = cir.const #cir.int<10> : !s32i loc(#loc55)
                %9 = cir.cmp(lt, %6, %8) : !s32i, !cir.bool loc(#loc87)
                cir.condition(%9) loc(#loc56)
              } do {
                cir.scope {
                  %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc33)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc33)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
                } loc(#loc88)
                cir.yield loc(#loc52)
              } loc(#loc85)
            } loc(#loc85)
          } loc(#loc83)
          %2 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc34)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc34)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc59)
        } loc(#loc82)
        cir.yield loc(#loc40)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc61)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
        cir.yield loc(#loc79)
      } loc(#loc79)
    } loc(#loc79)
    cir.return loc(#loc36)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_while_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":32:19)
#loc4 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":20:1)
#loc5 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":34:1)
#loc6 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":22:5)
#loc7 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":22:9)
#loc8 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:5)
#loc9 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":33:5)
#loc10 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:13)
#loc11 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:9)
#loc12 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:16)
#loc13 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:20)
#loc14 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:18)
#loc15 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":24:5)
#loc16 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":26:9)
#loc17 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":31:9)
#loc18 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":27:13)
#loc19 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":27:21)
#loc20 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":28:13)
#loc21 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":30:13)
#loc22 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":28:20)
#loc23 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":28:19)
#loc24 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":28:25)
#loc25 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":28:23)
#loc26 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":32:9)
#loc27 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:24)
#loc28 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:23)
#loc29 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":58:1)
#loc30 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":61:1)
#loc31 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":60:5)
#loc32 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":60:11)
#loc33 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":51:27)
#loc34 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":54:19)
#loc35 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":41:1)
#loc36 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":56:1)
#loc37 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":43:5)
#loc38 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":43:9)
#loc39 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:5)
#loc40 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":55:5)
#loc41 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:13)
#loc42 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:9)
#loc43 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:16)
#loc44 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:20)
#loc45 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:18)
#loc46 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":45:5)
#loc47 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":47:9)
#loc48 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":53:9)
#loc49 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":48:13)
#loc50 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":48:21)
#loc51 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":49:13)
#loc52 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":52:13)
#loc53 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":49:20)
#loc54 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":49:19)
#loc55 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":49:25)
#loc56 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":49:23)
#loc57 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":50:13)
#loc58 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":51:17)
#loc59 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":54:9)
#loc60 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:24)
#loc61 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:23)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc4, #loc5])
#loc64 = loc(fused[#loc6, #loc7])
#loc65 = loc(fused[#loc8, #loc9])
#loc66 = loc(fused[#loc11, #loc10])
#loc67 = loc(fused[#loc12, #loc13])
#loc68 = loc(fused[#loc15, #loc9])
#loc69 = loc(fused[#loc16, #loc17])
#loc70 = loc(fused[#loc18, #loc19])
#loc71 = loc(fused[#loc20, #loc21])
#loc72 = loc(fused[#loc23, #loc22])
#loc73 = loc(fused[#loc23, #loc24])
#loc74 = loc(fused[#loc28, #loc27])
#loc75 = loc(fused[#loc29, #loc30])
#loc76 = loc(fused[#loc31, #loc32])
#loc77 = loc(fused[#loc35, #loc36])
#loc78 = loc(fused[#loc37, #loc38])
#loc79 = loc(fused[#loc39, #loc40])
#loc80 = loc(fused[#loc42, #loc41])
#loc81 = loc(fused[#loc43, #loc44])
#loc82 = loc(fused[#loc46, #loc40])
#loc83 = loc(fused[#loc47, #loc48])
#loc84 = loc(fused[#loc49, #loc50])
#loc85 = loc(fused[#loc51, #loc52])
#loc86 = loc(fused[#loc54, #loc53])
#loc87 = loc(fused[#loc54, #loc55])
#loc88 = loc(fused[#loc57, #loc52])
#loc89 = loc(fused[#loc61, #loc60])
