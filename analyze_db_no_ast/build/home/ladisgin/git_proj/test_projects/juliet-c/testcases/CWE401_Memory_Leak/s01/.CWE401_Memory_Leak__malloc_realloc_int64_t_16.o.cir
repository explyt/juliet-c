!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc130)
  cir.func private  @printLongLongLine(!s64i) loc(#loc131)
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc133)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_int64_t_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%1) loc(#loc15)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc137)
          %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
          %2 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc21)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc138)
          %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc139)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc140)
          cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc137)
          cir.scope {
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc26)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc27)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s64i>, !s32i loc(#loc142)
            %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc28)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc31)
              %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc32)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
            } loc(#loc143)
          } loc(#loc141)
          %8 = cir.const #cir.int<5> : !s64i loc(#loc33)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc34)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc35)
          %11 = cir.ptr_stride(%9 : !cir.ptr<!s64i>, %10 : !s32i), !cir.ptr<!s64i> loc(#loc36)
          cir.store %8, %11 : !s64i, !cir.ptr<!s64i> loc(#loc144)
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc38)
          %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc39)
          %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc37)
          cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc40)
          %16 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc41)
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc42)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc42)
          %19 = cir.const #cir.int<130000> : !s32i loc(#loc43)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc43)
          %21 = cir.const #cir.int<8> : !u64i loc(#loc145)
          %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc146)
          %23 = cir.call @realloc(%18, %22) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc41)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc147)
          cir.store %24, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc148)
          cir.scope {
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc51)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc52)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s64i>, !s32i loc(#loc150)
            %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc53)
            cir.if %29 {
              %30 = cir.const #cir.int<10> : !s64i loc(#loc55)
              %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc56)
              %32 = cir.const #cir.int<0> : !s32i loc(#loc57)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s64i>, %32 : !s32i), !cir.ptr<!s64i> loc(#loc58)
              cir.store %30, %33 : !s64i, !cir.ptr<!s64i> loc(#loc152)
              %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc59)
              %35 = cir.const #cir.int<0> : !s32i loc(#loc60)
              %36 = cir.ptr_stride(%34 : !cir.ptr<!s64i>, %35 : !s32i), !cir.ptr<!s64i> loc(#loc61)
              %37 = cir.load %36 : !cir.ptr<!s64i>, !s64i loc(#loc59)
              cir.call @printLongLongLine(%37) : (!s64i) -> () loc(#loc62)
              %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc63)
              %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc64)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc64)
              cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
            } loc(#loc151)
          } loc(#loc149)
        } loc(#loc136)
        cir.break loc(#loc65)
      } loc(#loc135)
    } loc(#loc135)
    cir.return loc(#loc12)
  } loc(#loc134)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_int64_t_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc67)
  } loc(#loc153)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc74)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc74)
        cir.condition(%1) loc(#loc74)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc158)
          %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc159)
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc81)
          %3 = cir.const #cir.int<100> : !s32i loc(#loc82)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc82)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc160)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc161)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc81)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc162)
          cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc158)
          cir.scope {
            %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc87)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc88)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s64i>, !s32i loc(#loc164)
            %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc89)
            cir.if %33 {
              %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
              %35 = cir.const #cir.int<1> : !s32i loc(#loc92)
              %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc93)
              cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
            } loc(#loc165)
          } loc(#loc163)
          %9 = cir.const #cir.int<5> : !s64i loc(#loc94)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc95)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc96)
          %12 = cir.ptr_stride(%10 : !cir.ptr<!s64i>, %11 : !s32i), !cir.ptr<!s64i> loc(#loc97)
          cir.store %9, %12 : !s64i, !cir.ptr<!s64i> loc(#loc166)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc98)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc99)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc100)
          %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc98)
          cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc101)
          %17 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc102)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc103)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc103)
          %20 = cir.const #cir.int<130000> : !s32i loc(#loc104)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc104)
          %22 = cir.const #cir.int<8> : !u64i loc(#loc167)
          %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc168)
          %24 = cir.call @realloc(%19, %23) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc169)
          cir.store %25, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc170)
          cir.scope {
            %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc112)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc113)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s64i>, !s32i loc(#loc172)
            %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc114)
            cir.if %33 {
              %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc116)
              cir.store %34, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc174)
              %35 = cir.const #cir.int<10> : !s64i loc(#loc118)
              %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc119)
              %37 = cir.const #cir.int<0> : !s32i loc(#loc120)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s64i>, %37 : !s32i), !cir.ptr<!s64i> loc(#loc121)
              cir.store %35, %38 : !s64i, !cir.ptr<!s64i> loc(#loc175)
              %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc122)
              %40 = cir.const #cir.int<0> : !s32i loc(#loc123)
              %41 = cir.ptr_stride(%39 : !cir.ptr<!s64i>, %40 : !s32i), !cir.ptr<!s64i> loc(#loc124)
              %42 = cir.load %41 : !cir.ptr<!s64i>, !s64i loc(#loc122)
              cir.call @printLongLongLine(%42) : (!s64i) -> () loc(#loc125)
            } loc(#loc173)
          } loc(#loc171)
          %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc126)
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc127)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc127)
          cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc126)
        } loc(#loc157)
        cir.break loc(#loc128)
      } loc(#loc156)
    } loc(#loc156)
    cir.return loc(#loc71)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("/usr/include/stdlib.h":683:1)
#loc8 = loc("/usr/include/stdlib.h":684:14)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":24:1)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":46:1)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":26:5)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":45:5)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":26:11)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":28:9)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":43:9)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:13)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:67)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:41)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:48)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:52)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:66)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:13)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:41)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:17)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:25)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:22)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:31)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:32)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:38)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:37)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":32:23)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":32:13)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":32:18)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":32:19)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":33:31)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":33:36)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":33:37)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":33:13)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:31)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:39)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:46)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:54)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:68)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:45)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:69)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:13)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":36:13)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":42:13)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":36:17)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":36:25)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":36:22)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":37:13)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":39:27)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":39:17)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":39:22)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":39:23)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":40:35)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":40:40)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":40:41)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":40:17)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":41:17)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":41:22)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":44:9)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":80:1)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":83:1)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":82:5)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":82:11)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":53:1)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":78:1)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":55:5)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":77:5)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":55:11)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":57:9)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":75:9)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:13)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:67)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":60:13)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":60:23)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:41)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:48)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:52)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:66)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:13)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:41)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:17)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:25)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:22)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:31)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:32)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:38)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:37)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":62:23)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":62:13)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":62:18)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":62:19)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":63:31)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":63:36)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":63:37)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":63:13)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:34)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:42)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:49)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:57)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:71)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:48)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:72)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:13)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":67:13)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":73:13)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":67:17)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":67:28)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":67:25)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":68:13)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":69:24)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":69:17)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":71:27)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":71:17)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":71:22)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":71:23)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":72:35)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":72:40)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":72:41)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":72:17)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":74:13)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":74:18)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":76:9)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc11, #loc12])
#loc135 = loc(fused[#loc13, #loc14])
#loc136 = loc(fused[#loc16, #loc17])
#loc137 = loc(fused[#loc18, #loc19])
#loc138 = loc(fused[#loc22, #loc23])
#loc139 = loc(fused[#loc21, #loc23])
#loc140 = loc(fused[#loc20, #loc19])
#loc141 = loc(fused[#loc24, #loc25])
#loc142 = loc(fused[#loc26, #loc27])
#loc143 = loc(fused[#loc29, #loc25])
#loc144 = loc(fused[#loc34, #loc33])
#loc145 = loc(fused[#loc44, #loc45])
#loc146 = loc(fused[#loc46, #loc45])
#loc147 = loc(fused[#loc41, #loc47])
#loc148 = loc(fused[#loc48, #loc47])
#loc149 = loc(fused[#loc49, #loc50])
#loc150 = loc(fused[#loc51, #loc52])
#loc151 = loc(fused[#loc54, #loc50])
#loc152 = loc(fused[#loc56, #loc55])
#loc153 = loc(fused[#loc66, #loc67])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc72, #loc73])
#loc157 = loc(fused[#loc75, #loc76])
#loc158 = loc(fused[#loc77, #loc78])
#loc159 = loc(fused[#loc79, #loc80])
#loc160 = loc(fused[#loc83, #loc84])
#loc161 = loc(fused[#loc82, #loc84])
#loc162 = loc(fused[#loc81, #loc78])
#loc163 = loc(fused[#loc85, #loc86])
#loc164 = loc(fused[#loc87, #loc88])
#loc165 = loc(fused[#loc90, #loc86])
#loc166 = loc(fused[#loc95, #loc94])
#loc167 = loc(fused[#loc105, #loc106])
#loc168 = loc(fused[#loc107, #loc106])
#loc169 = loc(fused[#loc102, #loc108])
#loc170 = loc(fused[#loc109, #loc108])
#loc171 = loc(fused[#loc110, #loc111])
#loc172 = loc(fused[#loc112, #loc113])
#loc173 = loc(fused[#loc115, #loc111])
#loc174 = loc(fused[#loc117, #loc116])
#loc175 = loc(fused[#loc119, #loc118])
