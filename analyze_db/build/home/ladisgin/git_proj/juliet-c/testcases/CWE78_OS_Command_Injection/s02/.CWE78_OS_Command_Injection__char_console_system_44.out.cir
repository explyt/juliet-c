!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc12 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":36:21)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":36:28)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":122:10)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":122:14)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":122:20)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":122:32)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":87:25)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":87:32)
#true = #cir.bool<true> : !cir.bool
#loc160 = loc(fused[#loc12, #loc13])
#loc196 = loc(fused[#loc107, #loc108])
#loc197 = loc(fused[#loc109, #loc110])
#loc202 = loc(fused[#loc127, #loc128])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc155)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_44_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc156)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc7)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc158)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc160)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
      %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc18)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc19)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc162)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc7)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc7)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc21)
        %7 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc22)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc23)
        cir.call @exit(%8) : (!s32i) -> () extra(#fn_attr) loc(#loc22)
      } loc(#loc163)
    } loc(#loc161)
    cir.return loc(#loc11)
  } loc(#loc159)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc164)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc165)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc156)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc38)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc170)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_44_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc156)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc156)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc173)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc45)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc45)
      cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc173)
      cir.scope {
        %12 = cir.const #cir.int<100> : !s32i loc(#loc49)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc49)
        %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc50)
        %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc175)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc51)
        %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc176)
        cir.if %18 {
          cir.scope {
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc56)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc57)
            %22 = cir.const #cir.int<100> : !s32i loc(#loc58)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc58)
            %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc59)
            %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc179)
            %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc179)
            %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc60)
            %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc61)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc62)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc62)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc180)
            cir.if %32 {
              %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc66)
              %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
              %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc66)
              cir.store %35, %8 : !u64i, !cir.ptr<!u64i> loc(#loc182)
              cir.scope {
                %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc72)
                %37 = cir.const #cir.int<0> : !s32i loc(#loc73)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc73)
                %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc184)
                %40 = cir.ternary(%39, true {
                  %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                  %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                  %43 = cir.const #cir.int<1> : !s32i loc(#loc77)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc77)
                  %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc185)
                  %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc78)
                  %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc75)
                  %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc75)
                  %49 = cir.const #cir.int<10> : !s32i loc(#loc79)
                  %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc186)
                  %51 = cir.ternary(%50, true {
                    %52 = cir.const #true loc(#loc74)
                    cir.yield %52 : !cir.bool loc(#loc74)
                  }, false {
                    %52 = cir.const #false loc(#loc74)
                    cir.yield %52 : !cir.bool loc(#loc74)
                  }) : (!cir.bool) -> !cir.bool loc(#loc74)
                  cir.yield %51 : !cir.bool loc(#loc74)
                }, false {
                  %41 = cir.const #false loc(#loc74)
                  cir.yield %41 : !cir.bool loc(#loc74)
                }) : (!cir.bool) -> !cir.bool loc(#loc74)
                cir.if %40 {
                  %41 = cir.const #cir.int<0> : !s32i loc(#loc81)
                  %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc81)
                  %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
                  %44 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc83)
                  %45 = cir.const #cir.int<1> : !s32i loc(#loc84)
                  %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc84)
                  %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc188)
                  %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc85)
                  cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc189)
                } loc(#loc187)
              } loc(#loc183)
            } else {
              %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc32)
              %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc32)
              cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc86)
              %35 = cir.const #cir.int<0> : !s32i loc(#loc87)
              %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc87)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
              %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc89)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc90)
              cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc190)
            } loc(#loc181)
          } loc(#loc178)
        } loc(#loc177)
      } loc(#loc174)
    } loc(#loc172)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc91)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc91)
    cir.return loc(#loc34)
  } loc(#loc168)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    cir.return loc(#loc94)
  } loc(#loc191)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc193)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc104)
  cir.func @main(%arg0: !s32i loc(fused[#loc107, #loc108]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc109, #loc110])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc197)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc106)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc111)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc112)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc113)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc113)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc114)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc101)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call @CWE78_OS_Command_Injection__char_console_system_44_good() : () -> () loc(#loc116)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc102)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc103)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call @CWE78_OS_Command_Injection__char_console_system_44_bad() : () -> () loc(#loc120)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc104)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    cir.return %17 : !s32i loc(#loc200)
  } loc(#loc195)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc127, #loc128])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc202)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
      %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc133)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc134)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc204)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc136)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc136)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc137)
        %7 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc138)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc139)
        cir.call @exit(%8) : (!s32i) -> () extra(#fn_attr) loc(#loc138)
      } loc(#loc205)
    } loc(#loc203)
    cir.return loc(#loc126)
  } loc(#loc201)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc142)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc155)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc148)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc209)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc155)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc155)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc151)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc142)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc142)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc153)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc153)
    cir.return loc(#loc144)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_44.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":101:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":101:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":51:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":51:26)
#loc5 = loc("/usr/include/stdlib.h":923:1)
#loc6 = loc("/usr/include/stdlib.h":923:41)
#loc7 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":41:19)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":36:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":44:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":37:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":39:5)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":43:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":39:16)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":39:9)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":39:25)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":40:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":41:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":42:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":42:14)
#loc24 = loc("/usr/include/string.h":407:1)
#loc25 = loc("/usr/include/string.h":408:33)
#loc26 = loc("/usr/include/stdio.h":654:1)
#loc27 = loc("/usr/include/stdio.h":655:59)
#loc28 = loc("/usr/include/stdio.h":149:1)
#loc29 = loc("/usr/include/stdio.h":149:14)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":72:27)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":46:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":80:1)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":48:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":48:12)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":50:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":50:32)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":52:12)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":52:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":53:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":77:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":55:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":55:37)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":55:26)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":55:33)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":57:9)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":76:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":57:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":57:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":57:27)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":58:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":75:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:23)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:28)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:27)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:43)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:47)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:57)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:67)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":61:13)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":69:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":71:13)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":64:27)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":64:34)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":64:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":64:38)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":68:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:31)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:33)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:36)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:41)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:49)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:50)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:55)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":66:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":67:39)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":67:21)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":67:26)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":67:34)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":67:35)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":72:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":74:33)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":74:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":74:22)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":74:29)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":79:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":79:13)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":108:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":111:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":110:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":110:13)
#loc97 = loc("/usr/include/stdlib.h":575:1)
#loc98 = loc("/usr/include/stdlib.h":575:41)
#loc99 = loc("/usr/include/time.h":76:1)
#loc100 = loc("/usr/include/time.h":76:38)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":127:15)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":129:15)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":132:15)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":134:15)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":122:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":137:1)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":123:1)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":125:27)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":125:22)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":125:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":127:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":128:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":128:61)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":129:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":132:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":133:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":133:60)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":134:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":136:12)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":136:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":87:1)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":95:1)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":88:1)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":90:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":94:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":90:16)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":90:9)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":90:25)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":91:5)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":92:19)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":92:9)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":93:9)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":93:14)
#loc140 = loc("/usr/include/string.h":149:1)
#loc141 = loc("/usr/include/string.h":150:14)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":104:18)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":97:1)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":106:1)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":99:5)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":99:12)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":100:5)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":100:32)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":102:12)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":102:5)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":104:5)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":104:12)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":105:5)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":105:13)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc8, #loc9])
#loc159 = loc(fused[#loc10, #loc11])
#loc161 = loc(fused[#loc15, #loc16])
#loc162 = loc(fused[#loc18, #loc19])
#loc163 = loc(fused[#loc20, #loc16])
#loc164 = loc(fused[#loc24, #loc25])
#loc165 = loc(fused[#loc26, #loc27])
#loc166 = loc(fused[#loc28, #loc29])
#loc167 = loc(fused[#loc30, #loc31])
#loc168 = loc(fused[#loc33, #loc34])
#loc169 = loc(fused[#loc35, #loc36])
#loc170 = loc(fused[#loc37, #loc38])
#loc171 = loc(fused[#loc40, #loc39])
#loc172 = loc(fused[#loc41, #loc42])
#loc173 = loc(fused[#loc43, #loc44])
#loc174 = loc(fused[#loc47, #loc48])
#loc175 = loc(fused[#loc49, #loc50])
#loc176 = loc(fused[#loc49, #loc51])
#loc177 = loc(fused[#loc52, #loc48])
#loc178 = loc(fused[#loc53, #loc54])
#loc179 = loc(fused[#loc58, #loc59])
#loc180 = loc(fused[#loc61, #loc62])
#loc181 = loc(fused[#loc63, #loc64, #loc65, #loc54])
#loc182 = loc(fused[#loc68, #loc69])
#loc183 = loc(fused[#loc70, #loc71])
#loc184 = loc(fused[#loc72, #loc73])
#loc185 = loc(fused[#loc76, #loc77])
#loc186 = loc(fused[#loc75, #loc79])
#loc187 = loc(fused[#loc80, #loc71])
#loc188 = loc(fused[#loc83, #loc84])
#loc189 = loc(fused[#loc82, #loc81])
#loc190 = loc(fused[#loc88, #loc87])
#loc191 = loc(fused[#loc93, #loc94])
#loc192 = loc(fused[#loc95, #loc96])
#loc193 = loc(fused[#loc97, #loc98])
#loc194 = loc(fused[#loc99, #loc100])
#loc195 = loc(fused[#loc105, #loc106])
#loc198 = loc(fused[#loc116, #loc117])
#loc199 = loc(fused[#loc120, #loc121])
#loc200 = loc(fused[#loc124, #loc123])
#loc201 = loc(fused[#loc125, #loc126])
#loc203 = loc(fused[#loc130, #loc131])
#loc204 = loc(fused[#loc133, #loc134])
#loc205 = loc(fused[#loc135, #loc131])
#loc206 = loc(fused[#loc140, #loc141])
#loc207 = loc(fused[#loc143, #loc144])
#loc208 = loc(fused[#loc145, #loc146])
#loc209 = loc(fused[#loc147, #loc148])
#loc210 = loc(fused[#loc150, #loc149])
