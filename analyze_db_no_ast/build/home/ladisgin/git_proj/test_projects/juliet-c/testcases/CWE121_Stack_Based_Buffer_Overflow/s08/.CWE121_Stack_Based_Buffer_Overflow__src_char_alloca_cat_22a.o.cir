!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global  external dsolocal @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc92)
  cir.func private  @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc93)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc95)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc98)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc14)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc14)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %11 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_badGlobal : !cir.ptr<!s32i> loc(#loc92)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %13 = cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_badSource(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc20)
    cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.scope {
      %14 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc103)
      %15 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc103)
      cir.store %15, %14 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc103)
      %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc27)
      %17 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc28)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %19 = cir.call @strcat(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    } loc(#loc102)
    cir.return loc(#loc10)
  } loc(#loc96)
  cir.global  external dsolocal @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc104)
  cir.global  external dsolocal @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc105)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc107)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc106)
  cir.func private  @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc109)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc49)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc49)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc49)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc49)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc49)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc49)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %11 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc104)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %13 = cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B1Source(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc55)
    cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.scope {
      %14 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc117)
      %15 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc117)
      cir.store %15, %14 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc117)
      %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc62)
      %17 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc63)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
      %19 = cir.call @strcat(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc62)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    } loc(#loc116)
    cir.return loc(#loc45)
  } loc(#loc110)
  cir.func private  @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc118)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc74)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc74)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc74)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc74)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc74)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %11 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc105)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %13 = cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B2Source(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc80)
    cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.scope {
      %14 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc126)
      %15 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc126)
      cir.store %15, %14 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc126)
      %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc87)
      %17 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc88)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      %19 = cir.call @strcat(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc87)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    } loc(#loc125)
    cir.return loc(#loc70)
  } loc(#loc119)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":24:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":24:76)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":26:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":26:88)
#loc5 = loc("/usr/include/string.h":149:1)
#loc6 = loc("/usr/include/string.h":150:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":41:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":30:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":31:33)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":32:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":32:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":33:76)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":33:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":34:81)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":34:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":34:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":34:85)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":35:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":40:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":36:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":36:25)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":38:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":38:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":38:22)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":39:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":39:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":48:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":48:81)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":49:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":49:81)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":87:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":91:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":89:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":89:14)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":90:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":90:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":52:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":52:93)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":54:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":67:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":56:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":56:12)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":57:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":57:33)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":58:12)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":58:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":59:81)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":59:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":60:86)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":60:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":60:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":60:90)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":61:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":66:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":62:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":62:25)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":64:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":64:16)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":64:22)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":65:19)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":65:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":70:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":70:93)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":72:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":85:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":74:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":74:12)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":75:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":75:33)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":76:12)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":76:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":77:81)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":77:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":78:86)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":78:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":78:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":78:90)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":79:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":84:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":80:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":80:25)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":82:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":82:16)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":82:22)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":83:19)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":83:9)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc5, #loc6])
#loc95 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc9, #loc10])
#loc97 = loc(fused[#loc11, #loc12])
#loc98 = loc(fused[#loc13, #loc14])
#loc99 = loc(fused[#loc16, #loc15])
#loc100 = loc(fused[#loc18, #loc17])
#loc101 = loc(fused[#loc21, #loc22])
#loc102 = loc(fused[#loc23, #loc24])
#loc103 = loc(fused[#loc25, #loc26])
#loc104 = loc(fused[#loc32, #loc33])
#loc105 = loc(fused[#loc34, #loc35])
#loc106 = loc(fused[#loc36, #loc37])
#loc107 = loc(fused[#loc38, #loc39])
#loc108 = loc(fused[#loc40, #loc41])
#loc109 = loc(fused[#loc42, #loc43])
#loc110 = loc(fused[#loc44, #loc45])
#loc111 = loc(fused[#loc46, #loc47])
#loc112 = loc(fused[#loc48, #loc49])
#loc113 = loc(fused[#loc51, #loc50])
#loc114 = loc(fused[#loc53, #loc52])
#loc115 = loc(fused[#loc56, #loc57])
#loc116 = loc(fused[#loc58, #loc59])
#loc117 = loc(fused[#loc60, #loc61])
#loc118 = loc(fused[#loc67, #loc68])
#loc119 = loc(fused[#loc69, #loc70])
#loc120 = loc(fused[#loc71, #loc72])
#loc121 = loc(fused[#loc73, #loc74])
#loc122 = loc(fused[#loc76, #loc75])
#loc123 = loc(fused[#loc78, #loc77])
#loc124 = loc(fused[#loc81, #loc82])
#loc125 = loc(fused[#loc83, #loc84])
#loc126 = loc(fused[#loc85, #loc86])
