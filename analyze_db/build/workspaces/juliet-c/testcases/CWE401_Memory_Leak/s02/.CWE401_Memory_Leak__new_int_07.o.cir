!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_07.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @_ZL10staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc157)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc158)
  cir.func private @printIntLine(!s32i) loc(#loc159)
  cir.func @_ZN30CWE401_Memory_Leak__new_int_073badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc162)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc164)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc165)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<4> : !u64i loc(#loc166)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc20)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc166)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc167)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc27)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc169)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc157)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc31)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc170)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc171)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc29)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc173)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_07L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc176)
    cir.br ^bb1 loc(#loc177)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc47)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc178)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc179)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<4> : !u64i loc(#loc180)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc51)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc180)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc53)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc58)
    cir.br ^bb3 loc(#loc45)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc45)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc183)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc157)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc62)
    %16 = cir.cmp(ne, %14, %15) : !s32i, !cir.bool loc(#loc184)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc185)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.br ^bb8 loc(#loc64)
  ^bb7:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc67)
    cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc51)
    cir.br ^bb8 loc(#loc60)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc60)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc39)
  } loc(#loc174)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_07L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc188)
    cir.br ^bb1 loc(#loc189)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc77)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc190)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc191)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<4> : !u64i loc(#loc192)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc81)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc192)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc193)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc83)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc88)
    cir.br ^bb3 loc(#loc75)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc75)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc195)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc157)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc196)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc197)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc94)
    cir.call @_ZdlPv(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc81)
    cir.br ^bb7 loc(#loc90)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc90)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc69)
  } loc(#loc186)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_07L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc200)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc101)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc157)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc106)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc204)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc110)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.br ^bb4 loc(#loc108)
  ^bb3:  // pred: ^bb1
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc205)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc114)
    %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc119)
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc104)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc207)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc157)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc123)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc208)
    cir.brcond %16 ^bb7, ^bb8 loc(#loc209)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc121)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc96)
  } loc(#loc198)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_07L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc131)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc213)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc157)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc136)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc215)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc216)
  ^bb2:  // pred: ^bb1
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc217)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc140)
    %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
    cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc143)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc145)
    cir.br ^bb3 loc(#loc134)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc219)
  ^bb5:  // pred: ^bb4
    %11 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc157)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc149)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc220)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc221)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc147)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc147)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc126)
  } loc(#loc210)
  cir.func @_ZN30CWE401_Memory_Leak__new_int_074goodEv() extra(#fn_attr) {
    cir.call @_ZN30CWE401_Memory_Leak__new_int_07L8goodB2G1Ev() : () -> () loc(#loc153)
    cir.call @_ZN30CWE401_Memory_Leak__new_int_07L8goodB2G2Ev() : () -> () loc(#loc154)
    cir.call @_ZN30CWE401_Memory_Leak__new_int_07L8goodG2B1Ev() : () -> () loc(#loc155)
    cir.call @_ZN30CWE401_Memory_Leak__new_int_07L8goodG2B2Ev() : () -> () loc(#loc156)
    cir.return loc(#loc152)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_07.cpp":0:0)
#loc1 = loc("CWE401_Memory_Leak__new_int_07.cpp":27:1)
#loc2 = loc("CWE401_Memory_Leak__new_int_07.cpp":27:25)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__new_int_07.cpp":34:1)
#loc8 = loc("CWE401_Memory_Leak__new_int_07.cpp":51:1)
#loc9 = loc("CWE401_Memory_Leak__new_int_07.cpp":36:5)
#loc10 = loc("CWE401_Memory_Leak__new_int_07.cpp":36:11)
#loc11 = loc("CWE401_Memory_Leak__new_int_07.cpp":37:12)
#loc12 = loc("CWE401_Memory_Leak__new_int_07.cpp":37:5)
#loc13 = loc("CWE401_Memory_Leak__new_int_07.cpp":38:5)
#loc14 = loc("CWE401_Memory_Leak__new_int_07.cpp":45:5)
#loc15 = loc("CWE401_Memory_Leak__new_int_07.cpp":38:8)
#loc16 = loc("CWE401_Memory_Leak__new_int_07.cpp":38:20)
#loc17 = loc("CWE401_Memory_Leak__new_int_07.cpp":39:5)
#loc18 = loc("CWE401_Memory_Leak__new_int_07.cpp":41:16)
#loc19 = loc("CWE401_Memory_Leak__new_int_07.cpp":41:20)
#loc20 = loc("CWE401_Memory_Leak__new_int_07.cpp":34:6)
#loc21 = loc("CWE401_Memory_Leak__new_int_07.cpp":41:9)
#loc22 = loc("CWE401_Memory_Leak__new_int_07.cpp":43:17)
#loc23 = loc("CWE401_Memory_Leak__new_int_07.cpp":43:10)
#loc24 = loc("CWE401_Memory_Leak__new_int_07.cpp":43:9)
#loc25 = loc("CWE401_Memory_Leak__new_int_07.cpp":44:23)
#loc26 = loc("CWE401_Memory_Leak__new_int_07.cpp":44:22)
#loc27 = loc("CWE401_Memory_Leak__new_int_07.cpp":44:9)
#loc28 = loc("CWE401_Memory_Leak__new_int_07.cpp":46:5)
#loc29 = loc("CWE401_Memory_Leak__new_int_07.cpp":50:5)
#loc30 = loc("CWE401_Memory_Leak__new_int_07.cpp":46:8)
#loc31 = loc("CWE401_Memory_Leak__new_int_07.cpp":46:20)
#loc32 = loc("CWE401_Memory_Leak__new_int_07.cpp":47:5)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE401_Memory_Leak__new_int_07.cpp":73:19)
#loc36 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc37 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc38 = loc("CWE401_Memory_Leak__new_int_07.cpp":58:1)
#loc39 = loc("CWE401_Memory_Leak__new_int_07.cpp":80:1)
#loc40 = loc("CWE401_Memory_Leak__new_int_07.cpp":60:5)
#loc41 = loc("CWE401_Memory_Leak__new_int_07.cpp":60:11)
#loc42 = loc("CWE401_Memory_Leak__new_int_07.cpp":61:12)
#loc43 = loc("CWE401_Memory_Leak__new_int_07.cpp":61:5)
#loc44 = loc("CWE401_Memory_Leak__new_int_07.cpp":62:5)
#loc45 = loc("CWE401_Memory_Leak__new_int_07.cpp":69:5)
#loc46 = loc("CWE401_Memory_Leak__new_int_07.cpp":62:8)
#loc47 = loc("CWE401_Memory_Leak__new_int_07.cpp":62:20)
#loc48 = loc("CWE401_Memory_Leak__new_int_07.cpp":63:5)
#loc49 = loc("CWE401_Memory_Leak__new_int_07.cpp":65:16)
#loc50 = loc("CWE401_Memory_Leak__new_int_07.cpp":65:20)
#loc51 = loc("CWE401_Memory_Leak__new_int_07.cpp":58:13)
#loc52 = loc("CWE401_Memory_Leak__new_int_07.cpp":65:9)
#loc53 = loc("CWE401_Memory_Leak__new_int_07.cpp":67:17)
#loc54 = loc("CWE401_Memory_Leak__new_int_07.cpp":67:10)
#loc55 = loc("CWE401_Memory_Leak__new_int_07.cpp":67:9)
#loc56 = loc("CWE401_Memory_Leak__new_int_07.cpp":68:23)
#loc57 = loc("CWE401_Memory_Leak__new_int_07.cpp":68:22)
#loc58 = loc("CWE401_Memory_Leak__new_int_07.cpp":68:9)
#loc59 = loc("CWE401_Memory_Leak__new_int_07.cpp":70:5)
#loc60 = loc("CWE401_Memory_Leak__new_int_07.cpp":79:5)
#loc61 = loc("CWE401_Memory_Leak__new_int_07.cpp":70:8)
#loc62 = loc("CWE401_Memory_Leak__new_int_07.cpp":70:20)
#loc63 = loc("CWE401_Memory_Leak__new_int_07.cpp":71:5)
#loc64 = loc("CWE401_Memory_Leak__new_int_07.cpp":74:5)
#loc65 = loc("CWE401_Memory_Leak__new_int_07.cpp":76:5)
#loc66 = loc("CWE401_Memory_Leak__new_int_07.cpp":73:9)
#loc67 = loc("CWE401_Memory_Leak__new_int_07.cpp":78:16)
#loc68 = loc("CWE401_Memory_Leak__new_int_07.cpp":83:1)
#loc69 = loc("CWE401_Memory_Leak__new_int_07.cpp":100:1)
#loc70 = loc("CWE401_Memory_Leak__new_int_07.cpp":85:5)
#loc71 = loc("CWE401_Memory_Leak__new_int_07.cpp":85:11)
#loc72 = loc("CWE401_Memory_Leak__new_int_07.cpp":86:12)
#loc73 = loc("CWE401_Memory_Leak__new_int_07.cpp":86:5)
#loc74 = loc("CWE401_Memory_Leak__new_int_07.cpp":87:5)
#loc75 = loc("CWE401_Memory_Leak__new_int_07.cpp":94:5)
#loc76 = loc("CWE401_Memory_Leak__new_int_07.cpp":87:8)
#loc77 = loc("CWE401_Memory_Leak__new_int_07.cpp":87:20)
#loc78 = loc("CWE401_Memory_Leak__new_int_07.cpp":88:5)
#loc79 = loc("CWE401_Memory_Leak__new_int_07.cpp":90:16)
#loc80 = loc("CWE401_Memory_Leak__new_int_07.cpp":90:20)
#loc81 = loc("CWE401_Memory_Leak__new_int_07.cpp":83:13)
#loc82 = loc("CWE401_Memory_Leak__new_int_07.cpp":90:9)
#loc83 = loc("CWE401_Memory_Leak__new_int_07.cpp":92:17)
#loc84 = loc("CWE401_Memory_Leak__new_int_07.cpp":92:10)
#loc85 = loc("CWE401_Memory_Leak__new_int_07.cpp":92:9)
#loc86 = loc("CWE401_Memory_Leak__new_int_07.cpp":93:23)
#loc87 = loc("CWE401_Memory_Leak__new_int_07.cpp":93:22)
#loc88 = loc("CWE401_Memory_Leak__new_int_07.cpp":93:9)
#loc89 = loc("CWE401_Memory_Leak__new_int_07.cpp":95:5)
#loc90 = loc("CWE401_Memory_Leak__new_int_07.cpp":99:5)
#loc91 = loc("CWE401_Memory_Leak__new_int_07.cpp":95:8)
#loc92 = loc("CWE401_Memory_Leak__new_int_07.cpp":95:20)
#loc93 = loc("CWE401_Memory_Leak__new_int_07.cpp":96:5)
#loc94 = loc("CWE401_Memory_Leak__new_int_07.cpp":98:16)
#loc95 = loc("CWE401_Memory_Leak__new_int_07.cpp":103:1)
#loc96 = loc("CWE401_Memory_Leak__new_int_07.cpp":126:1)
#loc97 = loc("CWE401_Memory_Leak__new_int_07.cpp":115:9)
#loc98 = loc("CWE401_Memory_Leak__new_int_07.cpp":115:13)
#loc99 = loc("CWE401_Memory_Leak__new_int_07.cpp":105:5)
#loc100 = loc("CWE401_Memory_Leak__new_int_07.cpp":105:11)
#loc101 = loc("CWE401_Memory_Leak__new_int_07.cpp":106:12)
#loc102 = loc("CWE401_Memory_Leak__new_int_07.cpp":106:5)
#loc103 = loc("CWE401_Memory_Leak__new_int_07.cpp":107:5)
#loc104 = loc("CWE401_Memory_Leak__new_int_07.cpp":120:5)
#loc105 = loc("CWE401_Memory_Leak__new_int_07.cpp":107:8)
#loc106 = loc("CWE401_Memory_Leak__new_int_07.cpp":107:20)
#loc107 = loc("CWE401_Memory_Leak__new_int_07.cpp":108:5)
#loc108 = loc("CWE401_Memory_Leak__new_int_07.cpp":111:5)
#loc109 = loc("CWE401_Memory_Leak__new_int_07.cpp":113:5)
#loc110 = loc("CWE401_Memory_Leak__new_int_07.cpp":110:19)
#loc111 = loc("CWE401_Memory_Leak__new_int_07.cpp":110:9)
#loc112 = loc("CWE401_Memory_Leak__new_int_07.cpp":116:9)
#loc113 = loc("CWE401_Memory_Leak__new_int_07.cpp":116:17)
#loc114 = loc("CWE401_Memory_Leak__new_int_07.cpp":118:17)
#loc115 = loc("CWE401_Memory_Leak__new_int_07.cpp":118:10)
#loc116 = loc("CWE401_Memory_Leak__new_int_07.cpp":118:9)
#loc117 = loc("CWE401_Memory_Leak__new_int_07.cpp":119:23)
#loc118 = loc("CWE401_Memory_Leak__new_int_07.cpp":119:22)
#loc119 = loc("CWE401_Memory_Leak__new_int_07.cpp":119:9)
#loc120 = loc("CWE401_Memory_Leak__new_int_07.cpp":121:5)
#loc121 = loc("CWE401_Memory_Leak__new_int_07.cpp":125:5)
#loc122 = loc("CWE401_Memory_Leak__new_int_07.cpp":121:8)
#loc123 = loc("CWE401_Memory_Leak__new_int_07.cpp":121:20)
#loc124 = loc("CWE401_Memory_Leak__new_int_07.cpp":122:5)
#loc125 = loc("CWE401_Memory_Leak__new_int_07.cpp":129:1)
#loc126 = loc("CWE401_Memory_Leak__new_int_07.cpp":147:1)
#loc127 = loc("CWE401_Memory_Leak__new_int_07.cpp":136:9)
#loc128 = loc("CWE401_Memory_Leak__new_int_07.cpp":136:13)
#loc129 = loc("CWE401_Memory_Leak__new_int_07.cpp":131:5)
#loc130 = loc("CWE401_Memory_Leak__new_int_07.cpp":131:11)
#loc131 = loc("CWE401_Memory_Leak__new_int_07.cpp":132:12)
#loc132 = loc("CWE401_Memory_Leak__new_int_07.cpp":132:5)
#loc133 = loc("CWE401_Memory_Leak__new_int_07.cpp":133:5)
#loc134 = loc("CWE401_Memory_Leak__new_int_07.cpp":141:5)
#loc135 = loc("CWE401_Memory_Leak__new_int_07.cpp":133:8)
#loc136 = loc("CWE401_Memory_Leak__new_int_07.cpp":133:20)
#loc137 = loc("CWE401_Memory_Leak__new_int_07.cpp":134:5)
#loc138 = loc("CWE401_Memory_Leak__new_int_07.cpp":137:9)
#loc139 = loc("CWE401_Memory_Leak__new_int_07.cpp":137:17)
#loc140 = loc("CWE401_Memory_Leak__new_int_07.cpp":139:17)
#loc141 = loc("CWE401_Memory_Leak__new_int_07.cpp":139:10)
#loc142 = loc("CWE401_Memory_Leak__new_int_07.cpp":139:9)
#loc143 = loc("CWE401_Memory_Leak__new_int_07.cpp":140:23)
#loc144 = loc("CWE401_Memory_Leak__new_int_07.cpp":140:22)
#loc145 = loc("CWE401_Memory_Leak__new_int_07.cpp":140:9)
#loc146 = loc("CWE401_Memory_Leak__new_int_07.cpp":142:5)
#loc147 = loc("CWE401_Memory_Leak__new_int_07.cpp":146:5)
#loc148 = loc("CWE401_Memory_Leak__new_int_07.cpp":142:8)
#loc149 = loc("CWE401_Memory_Leak__new_int_07.cpp":142:20)
#loc150 = loc("CWE401_Memory_Leak__new_int_07.cpp":143:5)
#loc151 = loc("CWE401_Memory_Leak__new_int_07.cpp":149:1)
#loc152 = loc("CWE401_Memory_Leak__new_int_07.cpp":155:1)
#loc153 = loc("CWE401_Memory_Leak__new_int_07.cpp":151:5)
#loc154 = loc("CWE401_Memory_Leak__new_int_07.cpp":152:5)
#loc155 = loc("CWE401_Memory_Leak__new_int_07.cpp":153:5)
#loc156 = loc("CWE401_Memory_Leak__new_int_07.cpp":154:5)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc12, #loc11])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc15, #loc16])
#loc165 = loc(fused[#loc17, #loc14])
#loc166 = loc(fused[#loc18, #loc19])
#loc167 = loc(fused[#loc21, #loc19])
#loc168 = loc(fused[#loc24, #loc22])
#loc169 = loc(fused[#loc28, #loc29])
#loc170 = loc(fused[#loc30, #loc31])
#loc171 = loc(fused[#loc32, #loc29])
#loc172 = loc(fused[#loc33, #loc34])
#loc173 = loc(fused[#loc36, #loc37])
#loc174 = loc(fused[#loc38, #loc39])
#loc175 = loc(fused[#loc40, #loc41])
#loc176 = loc(fused[#loc43, #loc42])
#loc177 = loc(fused[#loc44, #loc45])
#loc178 = loc(fused[#loc46, #loc47])
#loc179 = loc(fused[#loc48, #loc45])
#loc180 = loc(fused[#loc49, #loc50])
#loc181 = loc(fused[#loc52, #loc50])
#loc182 = loc(fused[#loc55, #loc53])
#loc183 = loc(fused[#loc59, #loc60])
#loc184 = loc(fused[#loc61, #loc62])
#loc185 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc186 = loc(fused[#loc68, #loc69])
#loc187 = loc(fused[#loc70, #loc71])
#loc188 = loc(fused[#loc73, #loc72])
#loc189 = loc(fused[#loc74, #loc75])
#loc190 = loc(fused[#loc76, #loc77])
#loc191 = loc(fused[#loc78, #loc75])
#loc192 = loc(fused[#loc79, #loc80])
#loc193 = loc(fused[#loc82, #loc80])
#loc194 = loc(fused[#loc85, #loc83])
#loc195 = loc(fused[#loc89, #loc90])
#loc196 = loc(fused[#loc91, #loc92])
#loc197 = loc(fused[#loc93, #loc90])
#loc198 = loc(fused[#loc95, #loc96])
#loc199 = loc(fused[#loc97, #loc98])
#loc200 = loc(fused[#loc99, #loc100])
#loc201 = loc(fused[#loc102, #loc101])
#loc202 = loc(fused[#loc103, #loc104])
#loc203 = loc(fused[#loc105, #loc106])
#loc204 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc205 = loc(fused[#loc112, #loc113])
#loc206 = loc(fused[#loc116, #loc114])
#loc207 = loc(fused[#loc120, #loc121])
#loc208 = loc(fused[#loc122, #loc123])
#loc209 = loc(fused[#loc124, #loc121])
#loc210 = loc(fused[#loc125, #loc126])
#loc211 = loc(fused[#loc127, #loc128])
#loc212 = loc(fused[#loc129, #loc130])
#loc213 = loc(fused[#loc132, #loc131])
#loc214 = loc(fused[#loc133, #loc134])
#loc215 = loc(fused[#loc135, #loc136])
#loc216 = loc(fused[#loc137, #loc134])
#loc217 = loc(fused[#loc138, #loc139])
#loc218 = loc(fused[#loc142, #loc140])
#loc219 = loc(fused[#loc146, #loc147])
#loc220 = loc(fused[#loc148, #loc149])
#loc221 = loc(fused[#loc150, #loc147])
#loc222 = loc(fused[#loc151, #loc152])
