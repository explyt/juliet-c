!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @CWE194_Unexpected_Sign_Extension__negative_memcpy_52b_badSink(!s16i) loc(#loc31)
  cir.func no_proto  @CWE194_Unexpected_Sign_Extension__negative_memcpy_52_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc33)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc7)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc34)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc10)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc10)
    cir.store %5, %0 : !s16i, !cir.ptr<!s16i> loc(#loc35)
    %6 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc12)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_memcpy_52b_badSink(%6) : (!s16i) -> () loc(#loc13)
    cir.return loc(#loc4)
  } loc(#loc32)
  cir.func no_proto  @CWE194_Unexpected_Sign_Extension__negative_memcpy_52_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc37)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc16)
    cir.return loc(#loc15)
  } loc(#loc36)
  cir.func private  @CWE194_Unexpected_Sign_Extension__negative_memcpy_52b_goodG2BSink(!s16i) loc(#loc38)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc40)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc24)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc41)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc26)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc26)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc42)
    %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc29)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_memcpy_52b_goodG2BSink(%7) : (!s16i) -> () loc(#loc30)
    cir.return loc(#loc21)
  } loc(#loc39)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":0:0)
#loc1 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":22:1)
#loc2 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":22:78)
#loc3 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":24:1)
#loc4 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":32:1)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":26:5)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":26:11)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":28:12)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":28:5)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":30:13)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":30:12)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":30:5)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":31:67)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":31:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":52:1)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":55:1)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":54:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":54:13)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":39:1)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":39:82)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":42:1)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":50:1)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":44:5)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":44:11)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":46:12)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":46:5)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":48:12)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":48:16)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":48:5)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":49:71)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_memcpy_52a.c":49:5)
#loc31 = loc(fused[#loc1, #loc2])
#loc32 = loc(fused[#loc3, #loc4])
#loc33 = loc(fused[#loc5, #loc6])
#loc34 = loc(fused[#loc8, #loc7])
#loc35 = loc(fused[#loc11, #loc9])
#loc36 = loc(fused[#loc14, #loc15])
#loc37 = loc(fused[#loc16, #loc17])
#loc38 = loc(fused[#loc18, #loc19])
#loc39 = loc(fused[#loc20, #loc21])
#loc40 = loc(fused[#loc22, #loc23])
#loc41 = loc(fused[#loc25, #loc24])
#loc42 = loc(fused[#loc28, #loc27])
