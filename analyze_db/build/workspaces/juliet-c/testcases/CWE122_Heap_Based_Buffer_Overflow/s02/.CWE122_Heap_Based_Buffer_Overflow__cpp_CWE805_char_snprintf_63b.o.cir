!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":32:14)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":32:23)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":51:18)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":51:27)
#loc68 = loc(fused[#loc8, #loc9])
#loc75 = loc(fused[#loc37, #loc38])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc66)
  cir.func @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_637badSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc69)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc68)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc70)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    %3 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %7 = cir.const #cir.int<67> : !s8i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc19)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc20)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc20)
    cir.libc.memset %12 bytes from %6 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc72)
    %13 = cir.const #cir.int<0> : !s8i loc(#loc24)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc25)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc73)
    %19 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc28)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc30)
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    %26 = cir.call @snprintf(%20, %22, %24, %25) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc28)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.delete.array %28 : <!s8i> loc(#loc34)
    cir.br ^bb2 loc(#loc17)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc7)
  } loc(#loc67)
  cir.func @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_6311goodG2BSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc37, #loc38])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc76)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc75)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc77)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc43)
    %3 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    cir.br ^bb1 loc(#loc78)
  ^bb1:  // pred: ^bb0
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
    %7 = cir.const #cir.int<67> : !s8i loc(#loc48)
    %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc48)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc49)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc49)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc49)
    cir.libc.memset %12 bytes from %6 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc79)
    %13 = cir.const #cir.int<0> : !s8i loc(#loc53)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc54)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc56)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc80)
    %19 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc57)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc59)
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc60)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc60)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    %26 = cir.call @snprintf(%20, %22, %24, %25) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc57)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.delete.array %28 : <!s8i> loc(#loc64)
    cir.br ^bb2 loc(#loc46)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc36)
  } loc(#loc74)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":40:29)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":32:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":44:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":36:9)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":36:24)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":34:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":34:20)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":33:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":34:19)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":35:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":43:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":37:16)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":37:24)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":37:29)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":37:33)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":37:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":37:34)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":38:25)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":38:16)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":38:20)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":38:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":40:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":40:18)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":40:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":40:35)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":41:19)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":41:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":42:19)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":51:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":63:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":55:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":55:24)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":53:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":53:20)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":52:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":53:19)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":54:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":62:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":56:16)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":56:24)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":56:29)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":56:33)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":56:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":56:34)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":57:25)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":57:16)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":57:20)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":57:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":59:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":59:18)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":59:24)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":59:29)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":59:35)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":60:19)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":60:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_snprintf_63b.cpp":61:19)
#loc65 = loc(fused[#loc1, #loc2])
#loc66 = loc(fused[#loc4, #loc5])
#loc67 = loc(fused[#loc6, #loc7])
#loc69 = loc(fused[#loc10, #loc11])
#loc70 = loc(fused[#loc12, #loc13])
#loc71 = loc(fused[#loc16, #loc17])
#loc72 = loc(fused[#loc22, #loc23])
#loc73 = loc(fused[#loc27, #loc24])
#loc74 = loc(fused[#loc35, #loc36])
#loc76 = loc(fused[#loc39, #loc40])
#loc77 = loc(fused[#loc41, #loc42])
#loc78 = loc(fused[#loc45, #loc46])
#loc79 = loc(fused[#loc51, #loc52])
#loc80 = loc(fused[#loc56, #loc53])
