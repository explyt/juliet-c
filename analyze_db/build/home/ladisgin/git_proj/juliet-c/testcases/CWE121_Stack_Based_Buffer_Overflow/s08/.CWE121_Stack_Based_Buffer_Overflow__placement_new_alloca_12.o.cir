!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc6 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc164)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc165)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc6)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc6)
    cir.return loc(#loc6)
  } loc(#loc6)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc170)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc16)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc171)
    %7 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc18)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %13 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc21)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc173)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.br ^bb4 loc(#loc24)
  ^bb3:  // pred: ^bb1
    %16 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    cir.store %16, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc177)
  ^bb6:  // pred: ^bb5
    %17 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc32)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc178)
    cir.brcond %18 ^bb7, ^bb10 loc(#loc179)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc180)
  ^bb8:  // pred: ^bb7
    %19 = cir.const #cir.int<8> : !u64i loc(#loc181)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc181)
    cir.call @_ZN12TwoIntsClassC2Ev(%22) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc10)
    cir.store %22, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc167)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc41)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc42)
    %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %23, %25 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc44)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
    %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc46)
    cir.store %26, %28 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc47)
    %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc43)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc49)
    cir.br ^bb9 loc(#loc38)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc35)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc184)
  ^bb11:  // pred: ^bb10
    %32 = cir.const #cir.int<4> : !u64i loc(#loc185)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc185)
    cir.call @_ZN11OneIntClassC2Ev(%35) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc12)
    cir.store %35, %1 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc168)
    %36 = cir.const #cir.int<5> : !s32i loc(#loc54)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc55)
    %38 = cir.get_member %37[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
    cir.store %36, %38 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc57)
    %40 = cir.get_member %39[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc59)
    cir.br ^bb12 loc(#loc51)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc31)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc31)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc8)
  } loc(#loc166)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc191)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc69)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc69)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc192)
    %7 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc69)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc69)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc71)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc71)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc71)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %13 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc74)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc194)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc195)
  ^bb2:  // pred: ^bb1
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    cir.br ^bb4 loc(#loc77)
  ^bb3:  // pred: ^bb1
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.store %16, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc198)
  ^bb6:  // pred: ^bb5
    %17 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc85)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc199)
    cir.brcond %18 ^bb7, ^bb10 loc(#loc200)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc201)
  ^bb8:  // pred: ^bb7
    %19 = cir.const #cir.int<4> : !u64i loc(#loc202)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc202)
    cir.call @_ZN11OneIntClassC2Ev(%22) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc63)
    cir.store %22, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc188)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc94)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc95)
    %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
    cir.store %23, %25 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc96)
    %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc98)
    cir.br ^bb9 loc(#loc91)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc88)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc204)
  ^bb11:  // pred: ^bb10
    %29 = cir.const #cir.int<4> : !u64i loc(#loc205)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc205)
    cir.call @_ZN11OneIntClassC2Ev(%32) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc65)
    cir.store %32, %1 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc189)
    %33 = cir.const #cir.int<5> : !s32i loc(#loc103)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc104)
    %35 = cir.get_member %34[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
    cir.store %33, %35 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc105)
    %37 = cir.get_member %36[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc107)
    cir.br ^bb12 loc(#loc100)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc84)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc84)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc61)
  } loc(#loc187)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc211)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc117)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc117)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc212)
    %7 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc117)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc119)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc119)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc119)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
    cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %13 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc122)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc214)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc215)
  ^bb2:  // pred: ^bb1
    %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    cir.br ^bb4 loc(#loc125)
  ^bb3:  // pred: ^bb1
    %16 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.store %16, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc121)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc218)
  ^bb6:  // pred: ^bb5
    %17 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc133)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc219)
    cir.brcond %18 ^bb7, ^bb10 loc(#loc220)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc221)
  ^bb8:  // pred: ^bb7
    %19 = cir.const #cir.int<8> : !u64i loc(#loc222)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc141)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc222)
    cir.call @_ZN12TwoIntsClassC2Ev(%22) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc111)
    cir.store %22, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc208)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc142)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc143)
    %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %23, %25 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc144)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc145)
    %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc46)
    cir.store %26, %28 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc146)
    %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc43)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc148)
    cir.br ^bb9 loc(#loc139)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc136)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc225)
  ^bb11:  // pred: ^bb10
    %32 = cir.const #cir.int<8> : !u64i loc(#loc226)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc226)
    cir.call @_ZN12TwoIntsClassC2Ev(%35) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc113)
    cir.store %35, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc209)
    %36 = cir.const #cir.int<5> : !s32i loc(#loc153)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc154)
    %38 = cir.get_member %37[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %36, %38 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc155)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc156)
    %41 = cir.get_member %40[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc46)
    cir.store %39, %41 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc157)
    %43 = cir.get_member %42[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc43)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc159)
    cir.br ^bb12 loc(#loc150)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc132)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc132)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc109)
  } loc(#loc207)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12L7goodB2GEv() : () -> () loc(#loc162)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12L7goodG2BEv() : () -> () loc(#loc163)
    cir.return loc(#loc161)
  } loc(#loc229)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":24:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":69:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":47:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":47:49)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":63:13)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":63:48)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":26:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":27:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":27:36)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":28:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":28:37)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":29:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":38:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":29:8)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":29:33)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":30:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":33:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":35:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":32:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":32:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":37:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":37:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":39:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":68:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":39:8)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":39:33)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":40:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":54:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":56:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":41:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":53:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":47:39)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":47:43)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":49:32)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":49:13)
#loc43 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":50:32)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":50:13)
#loc46 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":51:26)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":51:36)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":51:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":57:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":67:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":63:38)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":63:42)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":65:32)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":65:13)
#loc56 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":66:26)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":66:36)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":66:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":78:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":121:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":101:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":101:48)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":115:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":115:48)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":80:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":80:12)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":81:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":81:36)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":82:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":82:37)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":83:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":92:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":83:8)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":83:33)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":84:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":87:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":89:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":86:16)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":86:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":91:16)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":91:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":93:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":120:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":93:8)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":93:33)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":94:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":106:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":108:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":95:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":105:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":101:38)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":101:42)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":103:32)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":103:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":104:26)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":104:36)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":104:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":109:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":119:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":115:38)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":115:42)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":117:32)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":117:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":118:26)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":118:36)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":118:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":126:1)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":173:1)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":149:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":149:49)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":165:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":165:49)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":128:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":128:12)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":129:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":129:36)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":130:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":130:37)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":131:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":140:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":131:8)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":131:33)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":132:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":135:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":137:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":134:16)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":134:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":139:16)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":139:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":141:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":172:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":141:8)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":141:33)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":142:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":156:5)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":158:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":143:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":155:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":149:39)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":149:43)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":151:32)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":151:13)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":152:32)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":152:13)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":153:26)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":153:36)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":153:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":159:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":171:9)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":165:39)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":165:43)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":167:32)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":167:13)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":168:32)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":168:13)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":169:26)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":169:36)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":169:13)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":175:1)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":179:1)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":177:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_12.cpp":178:5)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc4, #loc5])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc9, #loc10])
#loc168 = loc(fused[#loc11, #loc12])
#loc169 = loc(fused[#loc13, #loc14])
#loc170 = loc(fused[#loc15, #loc16])
#loc171 = loc(fused[#loc17, #loc18])
#loc172 = loc(fused[#loc19, #loc20])
#loc173 = loc(fused[#loc21, #loc22])
#loc174 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc175 = loc(fused[#loc27, #loc26])
#loc176 = loc(fused[#loc29, #loc28])
#loc177 = loc(fused[#loc30, #loc31])
#loc178 = loc(fused[#loc32, #loc33])
#loc179 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc180 = loc(fused[#loc37, #loc38])
#loc181 = loc(fused[#loc39, #loc10])
#loc182 = loc(fused[#loc42, #loc41])
#loc183 = loc(fused[#loc45, #loc44])
#loc184 = loc(fused[#loc50, #loc51])
#loc185 = loc(fused[#loc52, #loc12])
#loc186 = loc(fused[#loc55, #loc54])
#loc187 = loc(fused[#loc60, #loc61])
#loc188 = loc(fused[#loc62, #loc63])
#loc189 = loc(fused[#loc64, #loc65])
#loc190 = loc(fused[#loc66, #loc67])
#loc191 = loc(fused[#loc68, #loc69])
#loc192 = loc(fused[#loc70, #loc71])
#loc193 = loc(fused[#loc72, #loc73])
#loc194 = loc(fused[#loc74, #loc75])
#loc195 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc196 = loc(fused[#loc80, #loc79])
#loc197 = loc(fused[#loc82, #loc81])
#loc198 = loc(fused[#loc83, #loc84])
#loc199 = loc(fused[#loc85, #loc86])
#loc200 = loc(fused[#loc87, #loc88, #loc89, #loc84])
#loc201 = loc(fused[#loc90, #loc91])
#loc202 = loc(fused[#loc92, #loc63])
#loc203 = loc(fused[#loc95, #loc94])
#loc204 = loc(fused[#loc99, #loc100])
#loc205 = loc(fused[#loc101, #loc65])
#loc206 = loc(fused[#loc104, #loc103])
#loc207 = loc(fused[#loc108, #loc109])
#loc208 = loc(fused[#loc110, #loc111])
#loc209 = loc(fused[#loc112, #loc113])
#loc210 = loc(fused[#loc114, #loc115])
#loc211 = loc(fused[#loc116, #loc117])
#loc212 = loc(fused[#loc118, #loc119])
#loc213 = loc(fused[#loc120, #loc121])
#loc214 = loc(fused[#loc122, #loc123])
#loc215 = loc(fused[#loc124, #loc125, #loc126, #loc121])
#loc216 = loc(fused[#loc128, #loc127])
#loc217 = loc(fused[#loc130, #loc129])
#loc218 = loc(fused[#loc131, #loc132])
#loc219 = loc(fused[#loc133, #loc134])
#loc220 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc221 = loc(fused[#loc138, #loc139])
#loc222 = loc(fused[#loc140, #loc111])
#loc223 = loc(fused[#loc143, #loc142])
#loc224 = loc(fused[#loc145, #loc144])
#loc225 = loc(fused[#loc149, #loc150])
#loc226 = loc(fused[#loc151, #loc113])
#loc227 = loc(fused[#loc154, #loc153])
#loc228 = loc(fused[#loc156, #loc155])
#loc229 = loc(fused[#loc160, #loc161])
