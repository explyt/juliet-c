!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc163)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc164)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc165)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc168)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc163)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc173)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc25)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc25)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc25)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc25)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc25)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc25)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc25)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc25)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc25)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc25)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc25)
          cir.yield %24 : !u32i loc(#loc25)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc25)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc25)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc25)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc25)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc25)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc25)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc25)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc25)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc25)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc25)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc25)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc25)
          cir.yield %28 : !u32i loc(#loc25)
        }) : (!cir.bool) -> !u32i loc(#loc25)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc25)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
      } loc(#loc174)
    } loc(#loc172)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc30)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc177)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc179)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc34)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc35)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc182)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc41)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %36 = cir.unary(minus, %35) nsw : !s32i, !s32i loc(#loc43)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
          } loc(#loc183)
        } loc(#loc181)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc45)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc46)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc46)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc50)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc50)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc52)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc54)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc185)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc56)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc57)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
      } loc(#loc178)
    } loc(#loc176)
    cir.return loc(#loc14)
  } loc(#loc169)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc187)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc188)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc71)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc163)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc75)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc76)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc193)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc80)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc81)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc81)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc195)
      } loc(#loc194)
    } loc(#loc192)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc87)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc197)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc199)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc91)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc92)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc202)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc98)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc99)
            %36 = cir.unary(minus, %35) nsw : !s32i, !s32i loc(#loc100)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
          } loc(#loc203)
        } loc(#loc201)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc102)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc103)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc103)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc204)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc107)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc107)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc109)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc111)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc205)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc113)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc114)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc114)
      } loc(#loc198)
    } loc(#loc196)
    cir.return loc(#loc67)
  } loc(#loc189)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc207)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc121)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc163)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc126)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc210)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc128)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc128)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
      } loc(#loc211)
    } loc(#loc209)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc134)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc214)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc216)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc138)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc139)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc217)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc143)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc219)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc145)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %36 = cir.unary(minus, %35) nsw : !s32i, !s32i loc(#loc147)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc145)
          } loc(#loc220)
        } loc(#loc218)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc148)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc149)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc151)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc150)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc150)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc221)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc154)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc154)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc157)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc156)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc158)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc222)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc160)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc161)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc162)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc161)
      } loc(#loc215)
    } loc(#loc213)
    cir.return loc(#loc117)
  } loc(#loc206)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":21:1)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":44:1)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":23:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":23:9)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":25:13)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":25:12)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":25:5)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":26:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":30:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":26:8)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":26:20)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":27:5)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":29:16)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":29:9)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":32:5)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":43:5)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":32:9)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":32:16)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":33:5)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":36:9)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":36:48)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":36:37)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":36:44)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":37:9)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":37:43)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":37:13)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":37:27)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":37:33)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":37:34)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":37:40)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":37:39)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":39:16)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":39:28)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":39:33)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":39:38)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":39:9)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":39:39)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":40:30)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":40:9)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":40:20)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":40:25)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":40:26)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":41:19)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":41:9)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":42:9)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":42:14)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":107:1)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":111:1)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":109:5)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":109:14)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":110:5)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":110:14)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":59:19)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":51:1)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":79:1)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":53:5)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":53:9)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":55:13)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":55:12)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":55:5)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":56:5)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":65:5)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":56:8)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":56:20)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":57:5)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":60:5)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":62:5)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":59:9)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":64:16)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":64:20)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":64:9)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":67:5)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":78:5)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":67:9)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":67:16)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":68:5)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":71:9)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":71:48)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":71:37)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":71:44)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":72:9)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":72:43)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":72:13)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":72:27)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":72:33)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":72:34)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":72:40)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":72:39)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":74:16)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":74:28)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":74:33)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":74:38)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":74:9)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":74:39)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":75:30)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":75:9)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":75:20)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":75:25)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":75:26)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":76:19)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":76:9)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":77:9)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":77:14)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":82:1)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":105:1)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":84:5)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":84:9)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":86:13)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":86:12)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":86:5)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":87:5)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":91:5)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":87:8)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":87:20)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":88:5)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":90:16)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":90:20)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":90:9)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":93:5)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":104:5)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":93:9)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":93:16)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":94:5)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":97:9)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":97:48)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":97:37)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":97:44)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":98:9)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":98:43)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":98:13)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":98:27)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":98:33)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":98:34)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":98:40)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":98:39)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":100:16)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":100:28)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":100:33)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":100:38)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":100:9)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":100:39)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":101:30)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":101:9)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":101:20)
#loc157 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":101:25)
#loc158 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":101:26)
#loc159 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":102:19)
#loc160 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":102:9)
#loc161 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":103:9)
#loc162 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_14.c":103:14)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc9, #loc10])
#loc168 = loc(fused[#loc11, #loc12])
#loc169 = loc(fused[#loc13, #loc14])
#loc170 = loc(fused[#loc15, #loc16])
#loc171 = loc(fused[#loc19, #loc17])
#loc172 = loc(fused[#loc20, #loc21])
#loc173 = loc(fused[#loc22, #loc23])
#loc174 = loc(fused[#loc24, #loc21])
#loc175 = loc(fused[#loc26, #loc25])
#loc176 = loc(fused[#loc27, #loc28])
#loc177 = loc(fused[#loc29, #loc30])
#loc178 = loc(fused[#loc31, #loc28])
#loc179 = loc(fused[#loc32, #loc33])
#loc180 = loc(fused[#loc34, #loc33])
#loc181 = loc(fused[#loc36, #loc37])
#loc182 = loc(fused[#loc38, #loc39])
#loc183 = loc(fused[#loc40, #loc37])
#loc184 = loc(fused[#loc48, #loc49])
#loc185 = loc(fused[#loc51, #loc50])
#loc186 = loc(fused[#loc59, #loc60])
#loc187 = loc(fused[#loc61, #loc62])
#loc188 = loc(fused[#loc63, #loc64])
#loc189 = loc(fused[#loc66, #loc67])
#loc190 = loc(fused[#loc68, #loc69])
#loc191 = loc(fused[#loc72, #loc70])
#loc192 = loc(fused[#loc73, #loc74])
#loc193 = loc(fused[#loc75, #loc76])
#loc194 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc195 = loc(fused[#loc83, #loc82])
#loc196 = loc(fused[#loc84, #loc85])
#loc197 = loc(fused[#loc86, #loc87])
#loc198 = loc(fused[#loc88, #loc85])
#loc199 = loc(fused[#loc89, #loc90])
#loc200 = loc(fused[#loc91, #loc90])
#loc201 = loc(fused[#loc93, #loc94])
#loc202 = loc(fused[#loc95, #loc96])
#loc203 = loc(fused[#loc97, #loc94])
#loc204 = loc(fused[#loc105, #loc106])
#loc205 = loc(fused[#loc108, #loc107])
#loc206 = loc(fused[#loc116, #loc117])
#loc207 = loc(fused[#loc118, #loc119])
#loc208 = loc(fused[#loc122, #loc120])
#loc209 = loc(fused[#loc123, #loc124])
#loc210 = loc(fused[#loc125, #loc126])
#loc211 = loc(fused[#loc127, #loc124])
#loc212 = loc(fused[#loc130, #loc129])
#loc213 = loc(fused[#loc131, #loc132])
#loc214 = loc(fused[#loc133, #loc134])
#loc215 = loc(fused[#loc135, #loc132])
#loc216 = loc(fused[#loc136, #loc137])
#loc217 = loc(fused[#loc138, #loc137])
#loc218 = loc(fused[#loc140, #loc141])
#loc219 = loc(fused[#loc142, #loc143])
#loc220 = loc(fused[#loc144, #loc141])
#loc221 = loc(fused[#loc152, #loc153])
#loc222 = loc(fused[#loc155, #loc154])
