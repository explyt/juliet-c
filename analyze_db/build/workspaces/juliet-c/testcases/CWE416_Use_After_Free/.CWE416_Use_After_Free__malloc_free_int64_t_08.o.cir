!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int64_t_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc295)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc296)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc297)
  cir.func private @printLongLongLine(!s64i) loc(#loc298)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int64_t_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc300)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc301)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc303)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc17)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc20)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc21)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc21)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc305)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc306)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc307)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc308)
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc28)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc29)
          %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !cir.bool loc(#loc310)
          cir.if %18 {
            %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc33)
            cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
          } loc(#loc311)
        } loc(#loc309)
        cir.scope {
          %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc313)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc40)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc40)
            cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc315)
            cir.for : cond {
              %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc42)
              %19 = cir.const #cir.int<100> : !s32i loc(#loc43)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc43)
              %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc316)
              cir.condition(%21) loc(#loc44)
            } body {
              cir.scope {
                %18 = cir.const #cir.int<5> : !s64i loc(#loc46)
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc47)
                %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !u64i), !cir.ptr<!s64i> loc(#loc49)
                cir.store %18, %21 : !s64i, !cir.ptr<!s64i> loc(#loc318)
              } loc(#loc317)
              cir.yield loc(#loc39)
            } step {
              %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc50)
              %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc51)
              cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc319)
              cir.yield loc(#loc314)
            } loc(#loc314)
          } loc(#loc314)
        } loc(#loc312)
        %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc52)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc53)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc53)
        cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
      } loc(#loc304)
    } loc(#loc302)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc321)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc56)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc56)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc59)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc60)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!s64i>, %6 : !s32i), !cir.ptr<!s64i> loc(#loc61)
        %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc59)
        cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc62)
      } loc(#loc322)
    } loc(#loc320)
    cir.return loc(#loc10)
  } loc(#loc299)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int64_t_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc324)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc325)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc326)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc69)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc327)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc71)
    cir.return loc(#loc64)
  } loc(#loc323)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc75)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc329)
    cir.return %2 : !s32i loc(#loc329)
  } loc(#loc328)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc79)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc332)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc333)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc335)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc88)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc88)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc91)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc92)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc92)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc337)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc338)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc339)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc340)
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc99)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc100)
          %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !cir.bool loc(#loc342)
          cir.if %18 {
            %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc102)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc103)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc104)
            cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
          } loc(#loc343)
        } loc(#loc341)
        cir.scope {
          %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc345)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc111)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc111)
            cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc347)
            cir.for : cond {
              %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc113)
              %19 = cir.const #cir.int<100> : !s32i loc(#loc114)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc114)
              %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc348)
              cir.condition(%21) loc(#loc115)
            } body {
              cir.scope {
                %18 = cir.const #cir.int<5> : !s64i loc(#loc117)
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc118)
                %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc119)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !u64i), !cir.ptr<!s64i> loc(#loc120)
                cir.store %18, %21 : !s64i, !cir.ptr<!s64i> loc(#loc350)
              } loc(#loc349)
              cir.yield loc(#loc110)
            } step {
              %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc121)
              %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc122)
              cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc351)
              cir.yield loc(#loc346)
            } loc(#loc346)
          } loc(#loc346)
        } loc(#loc344)
        %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc123)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc124)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc124)
        cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
      } loc(#loc336)
    } loc(#loc334)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc353)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc127)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc127)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc132)
      } else {
      } loc(#loc354)
    } loc(#loc352)
    cir.return loc(#loc81)
  } loc(#loc331)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc135)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc356)
    cir.return %2 : !s32i loc(#loc356)
  } loc(#loc355)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc358)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc141)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc359)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc361)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc145)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc145)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc148)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc149)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc149)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc363)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc364)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc148)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc365)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc366)
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc156)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc157)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc157)
          %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !cir.bool loc(#loc368)
          cir.if %18 {
            %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc159)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc160)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc161)
            cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc159)
          } loc(#loc369)
        } loc(#loc367)
        cir.scope {
          %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc371)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc168)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc168)
            cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc373)
            cir.for : cond {
              %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc170)
              %19 = cir.const #cir.int<100> : !s32i loc(#loc171)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc171)
              %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc374)
              cir.condition(%21) loc(#loc172)
            } body {
              cir.scope {
                %18 = cir.const #cir.int<5> : !s64i loc(#loc174)
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc175)
                %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc176)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !u64i), !cir.ptr<!s64i> loc(#loc177)
                cir.store %18, %21 : !s64i, !cir.ptr<!s64i> loc(#loc376)
              } loc(#loc375)
              cir.yield loc(#loc167)
            } step {
              %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc178)
              %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc179)
              cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc377)
              cir.yield loc(#loc372)
            } loc(#loc372)
          } loc(#loc372)
        } loc(#loc370)
        %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc180)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc181)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc181)
        cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc180)
      } loc(#loc362)
    } loc(#loc360)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc379)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc184)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc184)
      cir.if %4 {
      } loc(#loc380)
    } loc(#loc378)
    cir.return loc(#loc138)
  } loc(#loc357)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc382)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc191)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc383)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc385)
      %3 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc195)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc195)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc200)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc200)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc201)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc202)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc203)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc203)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc387)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc388)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc202)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc389)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc390)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc210)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc211)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc211)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc392)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc213)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc214)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc215)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc213)
          } loc(#loc393)
        } loc(#loc391)
        cir.scope {
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc395)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc222)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc222)
            cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc397)
            cir.for : cond {
              %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc224)
              %16 = cir.const #cir.int<100> : !s32i loc(#loc225)
              %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc225)
              %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc398)
              cir.condition(%18) loc(#loc226)
            } body {
              cir.scope {
                %15 = cir.const #cir.int<5> : !s64i loc(#loc228)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc229)
                %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc230)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !u64i), !cir.ptr<!s64i> loc(#loc231)
                cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc400)
              } loc(#loc399)
              cir.yield loc(#loc221)
            } step {
              %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc232)
              %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc233)
              cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc401)
              cir.yield loc(#loc396)
            } loc(#loc396)
          } loc(#loc396)
        } loc(#loc394)
      } loc(#loc386)
    } loc(#loc384)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc403)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc236)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc236)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc239)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc240)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!s64i>, %6 : !s32i), !cir.ptr<!s64i> loc(#loc241)
        %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc239)
        cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc242)
      } loc(#loc404)
    } loc(#loc402)
    cir.return loc(#loc188)
  } loc(#loc381)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc406)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc247)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc407)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc409)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc251)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc251)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc254)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc255)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc255)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc411)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc412)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc254)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc413)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc414)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc262)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc263)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc263)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc416)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc265)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc266)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc267)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc265)
          } loc(#loc417)
        } loc(#loc415)
        cir.scope {
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc419)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc274)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc274)
            cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc421)
            cir.for : cond {
              %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc276)
              %16 = cir.const #cir.int<100> : !s32i loc(#loc277)
              %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc277)
              %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc422)
              cir.condition(%18) loc(#loc278)
            } body {
              cir.scope {
                %15 = cir.const #cir.int<5> : !s64i loc(#loc280)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc281)
                %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc282)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !u64i), !cir.ptr<!s64i> loc(#loc283)
                cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc424)
              } loc(#loc423)
              cir.yield loc(#loc273)
            } step {
              %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc284)
              %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc285)
              cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc425)
              cir.yield loc(#loc420)
            } loc(#loc420)
          } loc(#loc420)
        } loc(#loc418)
      } loc(#loc410)
    } loc(#loc408)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc427)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc288)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc288)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc291)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc292)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!s64i>, %6 : !s32i), !cir.ptr<!s64i> loc(#loc293)
        %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc291)
        cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc294)
      } loc(#loc428)
    } loc(#loc426)
    cir.return loc(#loc244)
  } loc(#loc405)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int64_t_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":37:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":62:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":39:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":39:15)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":41:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":41:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":42:5)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":55:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":42:8)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":42:26)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":43:5)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":44:27)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":44:34)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":44:38)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":44:52)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":44:53)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":44:9)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":45:9)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":45:37)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":45:13)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":45:21)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":45:27)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":45:28)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":45:34)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":45:33)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":46:9)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":52:9)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":47:13)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":47:20)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":48:13)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":51:13)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":48:21)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":48:17)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":48:24)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":48:28)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":48:26)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":49:13)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":50:27)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":50:17)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":50:22)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":50:23)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":48:34)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":48:33)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":54:9)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":54:14)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":56:5)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":61:5)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":56:8)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":56:26)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":57:5)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":59:27)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":59:32)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":59:33)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":59:9)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":190:1)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":196:1)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":192:5)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":192:14)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":193:5)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":193:14)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":194:5)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":194:14)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":195:5)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":195:14)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":25:1)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":28:1)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":27:12)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":27:5)
#loc77 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc78 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":91:19)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":69:1)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":100:1)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":71:5)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":71:15)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":73:12)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":73:5)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":74:5)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":87:5)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":74:8)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":74:26)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":75:5)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":76:27)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":76:34)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":76:38)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":76:52)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":76:53)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":76:9)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":77:9)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":77:37)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":77:13)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":77:21)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":77:27)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":77:28)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":77:34)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":77:33)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":78:9)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":84:9)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":79:13)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":79:20)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":80:13)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":83:13)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":80:21)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":80:17)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":80:24)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":80:28)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":80:26)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":81:13)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":82:27)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":82:17)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":82:22)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":82:23)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":80:34)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":80:33)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":86:9)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":86:14)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":88:5)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":99:5)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":88:8)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":88:27)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":89:5)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":92:5)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":94:5)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":91:9)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":30:1)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":33:1)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":32:12)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":32:5)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":103:1)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":129:1)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":105:5)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":105:15)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":107:12)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":107:5)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":108:5)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":121:5)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":108:8)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":108:26)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":109:5)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":110:27)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":110:34)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":110:38)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":110:52)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":110:53)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":110:9)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":111:9)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":111:37)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":111:13)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":111:21)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":111:27)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":111:28)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":111:34)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":111:33)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":112:9)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":118:9)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":113:13)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":113:20)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":114:13)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":117:13)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":114:21)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":114:17)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":114:24)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":114:28)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":114:26)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":115:13)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":116:27)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":116:17)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":116:22)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":116:23)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":114:34)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":114:33)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":120:9)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":120:14)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":122:5)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":128:5)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":122:8)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":122:26)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":123:5)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":132:1)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":161:1)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":134:5)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":134:15)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":136:12)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":136:5)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":137:5)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":154:5)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":137:8)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":137:27)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":138:5)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":141:5)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":143:5)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":140:19)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":140:9)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":144:27)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":144:34)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":144:38)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":144:52)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":144:53)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":144:9)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":145:9)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":145:37)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":145:13)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":145:21)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":145:27)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":145:28)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":145:34)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":145:33)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":146:9)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":152:9)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":147:13)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":147:20)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":148:13)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":151:13)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":148:21)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":148:17)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":148:24)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":148:28)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":148:26)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":149:13)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":150:27)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":150:17)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":150:22)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":150:23)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":148:34)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":148:33)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":155:5)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":160:5)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":155:8)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":155:26)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":156:5)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":158:27)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":158:32)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":158:33)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":158:9)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":164:1)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":188:1)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":166:5)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":166:15)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":168:12)
#loc248 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":168:5)
#loc249 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":169:5)
#loc250 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":181:5)
#loc251 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":169:8)
#loc252 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":169:26)
#loc253 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":170:5)
#loc254 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":171:27)
#loc255 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":171:34)
#loc256 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":171:38)
#loc257 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":171:52)
#loc258 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":171:53)
#loc259 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":171:9)
#loc260 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":172:9)
#loc261 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":172:37)
#loc262 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":172:13)
#loc263 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":172:21)
#loc264 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":172:27)
#loc265 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":172:28)
#loc266 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":172:34)
#loc267 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":172:33)
#loc268 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":173:9)
#loc269 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":179:9)
#loc270 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":174:13)
#loc271 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":174:20)
#loc272 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":175:13)
#loc273 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":178:13)
#loc274 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":175:21)
#loc275 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":175:17)
#loc276 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":175:24)
#loc277 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":175:28)
#loc278 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":175:26)
#loc279 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":176:13)
#loc280 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":177:27)
#loc281 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":177:17)
#loc282 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":177:22)
#loc283 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":177:23)
#loc284 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":175:34)
#loc285 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":175:33)
#loc286 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":182:5)
#loc287 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":187:5)
#loc288 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":182:8)
#loc289 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":182:26)
#loc290 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":183:5)
#loc291 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":185:27)
#loc292 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":185:32)
#loc293 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":185:33)
#loc294 = loc("CWE416_Use_After_Free__malloc_free_int64_t_08.c":185:9)
#loc295 = loc(fused[#loc1, #loc2])
#loc296 = loc(fused[#loc3, #loc4])
#loc297 = loc(fused[#loc5, #loc6])
#loc298 = loc(fused[#loc7, #loc8])
#loc299 = loc(fused[#loc9, #loc10])
#loc300 = loc(fused[#loc11, #loc12])
#loc301 = loc(fused[#loc14, #loc13])
#loc302 = loc(fused[#loc15, #loc16])
#loc303 = loc(fused[#loc17, #loc18])
#loc304 = loc(fused[#loc19, #loc16])
#loc305 = loc(fused[#loc22, #loc23])
#loc306 = loc(fused[#loc21, #loc23])
#loc307 = loc(fused[#loc20, #loc24])
#loc308 = loc(fused[#loc25, #loc24])
#loc309 = loc(fused[#loc26, #loc27])
#loc310 = loc(fused[#loc28, #loc29])
#loc311 = loc(fused[#loc30, #loc27])
#loc312 = loc(fused[#loc34, #loc35])
#loc313 = loc(fused[#loc36, #loc37])
#loc314 = loc(fused[#loc38, #loc39])
#loc315 = loc(fused[#loc41, #loc40])
#loc316 = loc(fused[#loc42, #loc43])
#loc317 = loc(fused[#loc45, #loc39])
#loc318 = loc(fused[#loc47, #loc46])
#loc319 = loc(fused[#loc51, #loc50])
#loc320 = loc(fused[#loc54, #loc55])
#loc321 = loc(fused[#loc56, #loc57])
#loc322 = loc(fused[#loc58, #loc55])
#loc323 = loc(fused[#loc63, #loc64])
#loc324 = loc(fused[#loc65, #loc66])
#loc325 = loc(fused[#loc67, #loc68])
#loc326 = loc(fused[#loc69, #loc70])
#loc327 = loc(fused[#loc71, #loc72])
#loc328 = loc(fused[#loc73, #loc74])
#loc329 = loc(fused[#loc76, #loc75])
#loc330 = loc(fused[#loc77, #loc78])
#loc331 = loc(fused[#loc80, #loc81])
#loc332 = loc(fused[#loc82, #loc83])
#loc333 = loc(fused[#loc85, #loc84])
#loc334 = loc(fused[#loc86, #loc87])
#loc335 = loc(fused[#loc88, #loc89])
#loc336 = loc(fused[#loc90, #loc87])
#loc337 = loc(fused[#loc93, #loc94])
#loc338 = loc(fused[#loc92, #loc94])
#loc339 = loc(fused[#loc91, #loc95])
#loc340 = loc(fused[#loc96, #loc95])
#loc341 = loc(fused[#loc97, #loc98])
#loc342 = loc(fused[#loc99, #loc100])
#loc343 = loc(fused[#loc101, #loc98])
#loc344 = loc(fused[#loc105, #loc106])
#loc345 = loc(fused[#loc107, #loc108])
#loc346 = loc(fused[#loc109, #loc110])
#loc347 = loc(fused[#loc112, #loc111])
#loc348 = loc(fused[#loc113, #loc114])
#loc349 = loc(fused[#loc116, #loc110])
#loc350 = loc(fused[#loc118, #loc117])
#loc351 = loc(fused[#loc122, #loc121])
#loc352 = loc(fused[#loc125, #loc126])
#loc353 = loc(fused[#loc127, #loc128])
#loc354 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc355 = loc(fused[#loc133, #loc134])
#loc356 = loc(fused[#loc136, #loc135])
#loc357 = loc(fused[#loc137, #loc138])
#loc358 = loc(fused[#loc139, #loc140])
#loc359 = loc(fused[#loc142, #loc141])
#loc360 = loc(fused[#loc143, #loc144])
#loc361 = loc(fused[#loc145, #loc146])
#loc362 = loc(fused[#loc147, #loc144])
#loc363 = loc(fused[#loc150, #loc151])
#loc364 = loc(fused[#loc149, #loc151])
#loc365 = loc(fused[#loc148, #loc152])
#loc366 = loc(fused[#loc153, #loc152])
#loc367 = loc(fused[#loc154, #loc155])
#loc368 = loc(fused[#loc156, #loc157])
#loc369 = loc(fused[#loc158, #loc155])
#loc370 = loc(fused[#loc162, #loc163])
#loc371 = loc(fused[#loc164, #loc165])
#loc372 = loc(fused[#loc166, #loc167])
#loc373 = loc(fused[#loc169, #loc168])
#loc374 = loc(fused[#loc170, #loc171])
#loc375 = loc(fused[#loc173, #loc167])
#loc376 = loc(fused[#loc175, #loc174])
#loc377 = loc(fused[#loc179, #loc178])
#loc378 = loc(fused[#loc182, #loc183])
#loc379 = loc(fused[#loc184, #loc185])
#loc380 = loc(fused[#loc186, #loc183])
#loc381 = loc(fused[#loc187, #loc188])
#loc382 = loc(fused[#loc189, #loc190])
#loc383 = loc(fused[#loc192, #loc191])
#loc384 = loc(fused[#loc193, #loc194])
#loc385 = loc(fused[#loc195, #loc196])
#loc386 = loc(fused[#loc197, #loc198, #loc199, #loc194])
#loc387 = loc(fused[#loc204, #loc205])
#loc388 = loc(fused[#loc203, #loc205])
#loc389 = loc(fused[#loc202, #loc206])
#loc390 = loc(fused[#loc207, #loc206])
#loc391 = loc(fused[#loc208, #loc209])
#loc392 = loc(fused[#loc210, #loc211])
#loc393 = loc(fused[#loc212, #loc209])
#loc394 = loc(fused[#loc216, #loc217])
#loc395 = loc(fused[#loc218, #loc219])
#loc396 = loc(fused[#loc220, #loc221])
#loc397 = loc(fused[#loc223, #loc222])
#loc398 = loc(fused[#loc224, #loc225])
#loc399 = loc(fused[#loc227, #loc221])
#loc400 = loc(fused[#loc229, #loc228])
#loc401 = loc(fused[#loc233, #loc232])
#loc402 = loc(fused[#loc234, #loc235])
#loc403 = loc(fused[#loc236, #loc237])
#loc404 = loc(fused[#loc238, #loc235])
#loc405 = loc(fused[#loc243, #loc244])
#loc406 = loc(fused[#loc245, #loc246])
#loc407 = loc(fused[#loc248, #loc247])
#loc408 = loc(fused[#loc249, #loc250])
#loc409 = loc(fused[#loc251, #loc252])
#loc410 = loc(fused[#loc253, #loc250])
#loc411 = loc(fused[#loc256, #loc257])
#loc412 = loc(fused[#loc255, #loc257])
#loc413 = loc(fused[#loc254, #loc258])
#loc414 = loc(fused[#loc259, #loc258])
#loc415 = loc(fused[#loc260, #loc261])
#loc416 = loc(fused[#loc262, #loc263])
#loc417 = loc(fused[#loc264, #loc261])
#loc418 = loc(fused[#loc268, #loc269])
#loc419 = loc(fused[#loc270, #loc271])
#loc420 = loc(fused[#loc272, #loc273])
#loc421 = loc(fused[#loc275, #loc274])
#loc422 = loc(fused[#loc276, #loc277])
#loc423 = loc(fused[#loc279, #loc273])
#loc424 = loc(fused[#loc281, #loc280])
#loc425 = loc(fused[#loc285, #loc284])
#loc426 = loc(fused[#loc286, #loc287])
#loc427 = loc(fused[#loc288, #loc289])
#loc428 = loc(fused[#loc290, #loc287])
