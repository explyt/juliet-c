!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":29:19)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":91:10)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":91:14)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":91:20)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":91:32)
#loc142 = loc(fused[#loc60, #loc61])
#loc143 = loc(fused[#loc62, #loc63])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc120)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_memmove_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc123)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc124)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc125)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc13)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc126)
    cir.br ^bb1 loc(#loc127)
  ^bb1:  // pred: ^bb0
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc17)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc17)
  ^bb2:  // pred: ^bb1
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc17)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc17)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc17)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc17)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc17)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc17)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc17)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc17)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc17)
    cir.br ^bb4(%20 : !u32i) loc(#loc17)
  ^bb3:  // pred: ^bb1
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc17)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc17)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc17)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc17)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc17)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc17)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc17)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc17)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc17)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc17)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc17)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc17)
    cir.br ^bb4(%36 : !u32i) loc(#loc17)
  ^bb4(%37: !u32i loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":29:19)):  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc17)
  ^bb5:  // pred: ^bb4
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc17)
    %39 = cir.cast(integral, %38 : !s32i), !s16i loc(#loc17)
    cir.store %39, %2 : !s16i, !cir.ptr<!s16i> loc(#loc128)
    cir.br ^bb6 loc(#loc129)
  ^bb6:  // pred: ^bb5
    %40 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc124)
    cir.store %40, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc124)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %43 = cir.const #cir.int<65> : !s32i loc(#loc22)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc23)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc23)
    cir.libc.memset %47 bytes from %42 set to %43 : !cir.ptr<!void>, !s32i, !u64i loc(#loc130)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc27)
    %50 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %52 = cir.binop(sub, %50, %51) nsw : !s32i loc(#loc28)
    %53 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %49, %54 : !s8i, !cir.ptr<!s8i> loc(#loc131)
    cir.br ^bb7 loc(#loc132)
  ^bb7:  // pred: ^bb6
    %55 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc33)
    %56 = cir.cast(integral, %55 : !s16i), !s32i loc(#loc33)
    %57 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %58 = cir.cmp(lt, %56, %57) : !s32i, !cir.bool loc(#loc133)
    cir.brcond %58 ^bb8, ^bb9 loc(#loc134)
  ^bb8:  // pred: ^bb7
    %59 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    %63 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc38)
    %64 = cir.cast(integral, %63 : !s16i), !u64i loc(#loc38)
    cir.libc.memmove %64 bytes from %62 to %60 : !cir.ptr<!void>, !u64i loc(#loc135)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc41)
    %67 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc42)
    %68 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    %69 = cir.ptr_stride(%68 : !cir.ptr<!s8i>, %67 : !s16i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %66, %69 : !s8i, !cir.ptr<!s8i> loc(#loc136)
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc32)
  ^bb10:  // pred: ^bb9
    %70 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb11 loc(#loc20)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc6)
  } loc(#loc122)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_memmove_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc47)
  } loc(#loc137)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc139)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc57)
  cir.func @main(%arg0: !s32i loc(fused[#loc60, #loc61]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc62, #loc63])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc64)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc65)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc66)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc66)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc67)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc54)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_memmove_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_memmove_18_good() : () -> () loc(#loc69)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc56)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_memmove_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_memmove_18_bad() : () -> () loc(#loc73)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    cir.return %17 : !s32i loc(#loc146)
  } loc(#loc141)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc148)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc149)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc150)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc86)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc90)
    %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc90)
    cir.store %8, %2 : !s16i, !cir.ptr<!s16i> loc(#loc153)
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc149)
    cir.store %9, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc149)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc96)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc97)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc97)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc101)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc102)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    cir.br ^bb3 loc(#loc157)
  ^bb3:  // pred: ^bb2
    %24 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc107)
    %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc107)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc158)
    cir.brcond %27 ^bb4, ^bb5 loc(#loc159)
  ^bb4:  // pred: ^bb3
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %32 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc112)
    %33 = cir.cast(integral, %32 : !s16i), !u64i loc(#loc112)
    cir.libc.memmove %33 bytes from %31 to %29 : !cir.ptr<!void>, !u64i loc(#loc160)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc115)
    %36 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc116)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s16i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    cir.br ^bb5 loc(#loc106)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc106)
  ^bb6:  // pred: ^bb5
    %39 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb7 loc(#loc94)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc79)
  } loc(#loc147)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":21:1)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":44:1)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":31:9)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":31:24)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":32:9)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":32:26)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":23:5)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":23:11)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":25:12)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":25:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":26:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":26:10)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":29:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":30:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":43:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":33:16)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":33:24)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":33:29)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":33:33)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":33:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":33:34)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":34:25)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":34:16)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":34:20)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":34:9)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":35:9)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":41:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":35:13)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":35:20)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":36:9)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":39:21)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":39:27)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":39:35)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":39:13)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":39:39)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":40:26)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":40:18)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":40:13)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":42:19)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":42:9)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":76:1)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":79:1)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":78:5)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":78:13)
#loc50 = loc("/usr/include/stdlib.h":575:1)
#loc51 = loc("/usr/include/stdlib.h":575:41)
#loc52 = loc("/usr/include/time.h":76:1)
#loc53 = loc("/usr/include/time.h":76:38)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":96:15)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":98:15)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":101:15)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":103:15)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":91:1)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":106:1)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":92:1)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":94:27)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":94:22)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":94:5)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":96:5)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":97:5)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":97:60)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":98:5)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":101:5)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":102:5)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":102:59)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":103:5)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":105:12)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":105:5)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":51:1)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":74:1)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":61:9)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":61:24)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":62:9)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":62:26)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":53:5)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":53:11)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":55:12)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":55:5)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":56:5)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":56:10)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":59:12)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":59:16)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":59:5)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":60:5)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":73:5)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":63:16)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":63:24)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":63:29)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":63:33)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":63:9)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":63:34)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":64:25)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":64:16)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":64:20)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":64:9)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":65:9)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":71:9)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":65:13)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":65:20)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":66:9)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":69:21)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":69:27)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":69:35)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":69:13)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":69:39)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":70:26)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":70:18)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":70:13)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":72:19)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_18.c":72:9)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc7, #loc8])
#loc124 = loc(fused[#loc9, #loc10])
#loc125 = loc(fused[#loc11, #loc12])
#loc126 = loc(fused[#loc14, #loc13])
#loc127 = loc(fused[#loc15, #loc16])
#loc128 = loc(fused[#loc18, #loc17])
#loc129 = loc(fused[#loc19, #loc20])
#loc130 = loc(fused[#loc25, #loc26])
#loc131 = loc(fused[#loc30, #loc27])
#loc132 = loc(fused[#loc31, #loc32])
#loc133 = loc(fused[#loc33, #loc34])
#loc134 = loc(fused[#loc35, #loc32])
#loc135 = loc(fused[#loc39, #loc40])
#loc136 = loc(fused[#loc43, #loc41])
#loc137 = loc(fused[#loc46, #loc47])
#loc138 = loc(fused[#loc48, #loc49])
#loc139 = loc(fused[#loc50, #loc51])
#loc140 = loc(fused[#loc52, #loc53])
#loc141 = loc(fused[#loc58, #loc59])
#loc144 = loc(fused[#loc69, #loc70])
#loc145 = loc(fused[#loc73, #loc74])
#loc146 = loc(fused[#loc77, #loc76])
#loc147 = loc(fused[#loc78, #loc79])
#loc148 = loc(fused[#loc80, #loc81])
#loc149 = loc(fused[#loc82, #loc83])
#loc150 = loc(fused[#loc84, #loc85])
#loc151 = loc(fused[#loc87, #loc86])
#loc152 = loc(fused[#loc88, #loc89])
#loc153 = loc(fused[#loc92, #loc91])
#loc154 = loc(fused[#loc93, #loc94])
#loc155 = loc(fused[#loc99, #loc100])
#loc156 = loc(fused[#loc104, #loc101])
#loc157 = loc(fused[#loc105, #loc106])
#loc158 = loc(fused[#loc107, #loc108])
#loc159 = loc(fused[#loc109, #loc106])
#loc160 = loc(fused[#loc113, #loc114])
#loc161 = loc(fused[#loc117, #loc115])
