!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":161:10)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":161:14)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":161:20)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":161:32)
#loc230 = loc(fused[#loc42, #loc43])
#loc231 = loc(fused[#loc44, #loc45])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printDoubleLine(!cir.double) loc(#loc212)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_pointer_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc214)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc216)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc9)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
      cir.if %3 {
      } loc(#loc217)
    } loc(#loc215)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc219)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc14)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc17)
        %5 = cir.load %4 : !cir.ptr<!cir.double>, !cir.double loc(#loc18)
        cir.call @printDoubleLine(%5) : (!cir.double) -> () loc(#loc19)
      } loc(#loc220)
    } loc(#loc218)
    cir.return loc(#loc4)
  } loc(#loc213)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_pointer_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc225)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc21)
  } loc(#loc221)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc226)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc227)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc39)
  cir.func @main(%arg0: !s32i loc(fused[#loc42, #loc43]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc44, #loc45])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc231)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc46)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc47)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc48)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc48)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc49)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc36)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_pointer_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_pointer_08_good() : () -> () loc(#loc51)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc37)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc38)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_pointer_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_pointer_08_bad() : () -> () loc(#loc55)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    cir.return %17 : !s32i loc(#loc234)
  } loc(#loc229)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc62)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    cir.return %2 : !s32i loc(#loc236)
  } loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc64)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc237)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc238)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc240)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc242)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc75)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc75)
      cir.if %3 {
      } loc(#loc243)
    } loc(#loc241)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc245)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc80)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc80)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc85)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc86)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc247)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc86)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc248)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc249)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc93)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc94)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!cir.double>, !cir.bool loc(#loc251)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc96)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc97)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc98)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc96)
          } loc(#loc252)
        } loc(#loc250)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc99)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc100)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc253)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc102)
        %11 = cir.load %10 : !cir.ptr<!cir.double>, !cir.double loc(#loc103)
        cir.call @printDoubleLine(%11) : (!cir.double) -> () loc(#loc104)
      } loc(#loc246)
    } loc(#loc244)
    cir.return loc(#loc70)
  } loc(#loc239)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc107)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    cir.return %2 : !s32i loc(#loc255)
  } loc(#loc254)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc257)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc259)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc115)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc115)
      cir.if %3 {
      } loc(#loc260)
    } loc(#loc258)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc262)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc120)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc120)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc123)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc264)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc123)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc265)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc266)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc130)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc131)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!cir.double>, !cir.bool loc(#loc268)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc133)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc134)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc135)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc133)
          } loc(#loc269)
        } loc(#loc267)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc136)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc137)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc270)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc139)
        %11 = cir.load %10 : !cir.ptr<!cir.double>, !cir.double loc(#loc140)
        cir.call @printDoubleLine(%11) : (!cir.double) -> () loc(#loc141)
      } loc(#loc263)
    } loc(#loc261)
    cir.return loc(#loc110)
  } loc(#loc256)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc272)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc274)
      %2 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc148)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc148)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc153)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc153)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc154)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc155)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc276)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc155)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc277)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc278)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc162)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc163)
          %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !cir.bool loc(#loc280)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc165)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc166)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc167)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc165)
          } loc(#loc281)
        } loc(#loc279)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc168)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc169)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc282)
      } loc(#loc275)
    } loc(#loc273)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc284)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc173)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc173)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc176)
        %5 = cir.load %4 : !cir.ptr<!cir.double>, !cir.double loc(#loc177)
        cir.call @printDoubleLine(%5) : (!cir.double) -> () loc(#loc178)
      } loc(#loc285)
    } loc(#loc283)
    cir.return loc(#loc143)
  } loc(#loc271)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc287)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc289)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc185)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc185)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc188)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc291)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc188)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc292)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc293)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc195)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc196)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc196)
          %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !cir.bool loc(#loc295)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc198)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc199)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc200)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc198)
          } loc(#loc296)
        } loc(#loc294)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc201)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc202)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc297)
      } loc(#loc290)
    } loc(#loc288)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc299)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc206)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc206)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc209)
        %5 = cir.load %4 : !cir.ptr<!cir.double>, !cir.double loc(#loc210)
        cir.call @printDoubleLine(%5) : (!cir.double) -> () loc(#loc211)
      } loc(#loc300)
    } loc(#loc298)
    cir.return loc(#loc180)
  } loc(#loc286)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":37:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":50:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":39:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":39:14)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":40:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":44:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":40:8)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":40:26)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":41:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":45:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":49:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":45:8)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":45:26)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":46:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":48:26)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":48:25)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":48:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":144:1)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":150:1)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":146:5)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":146:14)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":147:5)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":147:14)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":148:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":148:14)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":149:5)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":149:14)
#loc30 = loc("/usr/include/stdlib.h":575:1)
#loc31 = loc("/usr/include/stdlib.h":575:41)
#loc32 = loc("/usr/include/time.h":76:1)
#loc33 = loc("/usr/include/time.h":76:38)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":166:15)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":168:15)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":171:15)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":173:15)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":161:1)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":176:1)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":162:1)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":164:27)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":164:22)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":164:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":166:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":167:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":167:66)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":168:5)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":171:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":172:5)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":172:65)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":173:5)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":175:12)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":175:5)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":25:1)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":28:1)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":27:12)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":27:5)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":68:19)
#loc65 = loc("/usr/include/stdlib.h":672:1)
#loc66 = loc("/usr/include/stdlib.h":672:45)
#loc67 = loc("/usr/include/stdlib.h":756:1)
#loc68 = loc("/usr/include/stdlib.h":756:70)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":57:1)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":79:1)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":59:5)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":59:14)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":60:5)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":64:5)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":60:8)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":60:26)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":61:5)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":65:5)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":78:5)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":65:8)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":65:27)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":66:5)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":69:5)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":71:5)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":68:9)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:26)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:33)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:46)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:47)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:9)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:9)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:37)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:13)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:21)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:27)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:28)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:34)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:33)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":76:17)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":76:10)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":76:9)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":77:26)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":77:25)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":77:9)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":30:1)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":33:1)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":32:12)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":32:5)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":82:1)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":99:1)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":84:5)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":84:14)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":85:5)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":89:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":85:8)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":85:26)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":86:5)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":90:5)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":98:5)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":90:8)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":90:26)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":91:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:26)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:33)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:46)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:47)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:9)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:9)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:37)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:13)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:21)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:27)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:28)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:34)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:33)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":96:17)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":96:10)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":96:9)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":97:26)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":97:25)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":97:9)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":102:1)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":123:1)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":104:5)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":104:14)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":105:5)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":117:5)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":105:8)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":105:27)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":106:5)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":109:5)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":111:5)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":108:19)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":108:9)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:26)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:33)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:46)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:47)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:9)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:9)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:37)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:13)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:21)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:27)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:28)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:34)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:33)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":116:17)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":116:10)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":116:9)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":118:5)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":122:5)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":118:8)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":118:26)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":119:5)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":121:26)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":121:25)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":121:9)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":126:1)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":142:1)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":128:5)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":128:14)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":129:5)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":136:5)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":129:8)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":129:26)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":130:5)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:26)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:33)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:46)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:47)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:9)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:9)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:37)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:13)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:21)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:27)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:28)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:34)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:33)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":135:17)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":135:10)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":135:9)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":137:5)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":141:5)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":137:8)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":137:26)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":138:5)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":140:26)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":140:25)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":140:9)
#loc212 = loc(fused[#loc1, #loc2])
#loc213 = loc(fused[#loc3, #loc4])
#loc214 = loc(fused[#loc5, #loc6])
#loc215 = loc(fused[#loc7, #loc8])
#loc216 = loc(fused[#loc9, #loc10])
#loc217 = loc(fused[#loc11, #loc8])
#loc218 = loc(fused[#loc12, #loc13])
#loc219 = loc(fused[#loc14, #loc15])
#loc220 = loc(fused[#loc16, #loc13])
#loc221 = loc(fused[#loc20, #loc21])
#loc222 = loc(fused[#loc22, #loc23])
#loc223 = loc(fused[#loc24, #loc25])
#loc224 = loc(fused[#loc26, #loc27])
#loc225 = loc(fused[#loc28, #loc29])
#loc226 = loc(fused[#loc30, #loc31])
#loc227 = loc(fused[#loc32, #loc33])
#loc228 = loc(fused[#loc34, #loc35])
#loc229 = loc(fused[#loc40, #loc41])
#loc232 = loc(fused[#loc51, #loc52])
#loc233 = loc(fused[#loc55, #loc56])
#loc234 = loc(fused[#loc59, #loc58])
#loc235 = loc(fused[#loc60, #loc61])
#loc236 = loc(fused[#loc63, #loc62])
#loc237 = loc(fused[#loc65, #loc66])
#loc238 = loc(fused[#loc67, #loc68])
#loc239 = loc(fused[#loc69, #loc70])
#loc240 = loc(fused[#loc71, #loc72])
#loc241 = loc(fused[#loc73, #loc74])
#loc242 = loc(fused[#loc75, #loc76])
#loc243 = loc(fused[#loc77, #loc74])
#loc244 = loc(fused[#loc78, #loc79])
#loc245 = loc(fused[#loc80, #loc81])
#loc246 = loc(fused[#loc82, #loc83, #loc84, #loc79])
#loc247 = loc(fused[#loc87, #loc88])
#loc248 = loc(fused[#loc86, #loc89])
#loc249 = loc(fused[#loc90, #loc89])
#loc250 = loc(fused[#loc91, #loc92])
#loc251 = loc(fused[#loc93, #loc94])
#loc252 = loc(fused[#loc95, #loc92])
#loc253 = loc(fused[#loc101, #loc99])
#loc254 = loc(fused[#loc105, #loc106])
#loc255 = loc(fused[#loc108, #loc107])
#loc256 = loc(fused[#loc109, #loc110])
#loc257 = loc(fused[#loc111, #loc112])
#loc258 = loc(fused[#loc113, #loc114])
#loc259 = loc(fused[#loc115, #loc116])
#loc260 = loc(fused[#loc117, #loc114])
#loc261 = loc(fused[#loc118, #loc119])
#loc262 = loc(fused[#loc120, #loc121])
#loc263 = loc(fused[#loc122, #loc119])
#loc264 = loc(fused[#loc124, #loc125])
#loc265 = loc(fused[#loc123, #loc126])
#loc266 = loc(fused[#loc127, #loc126])
#loc267 = loc(fused[#loc128, #loc129])
#loc268 = loc(fused[#loc130, #loc131])
#loc269 = loc(fused[#loc132, #loc129])
#loc270 = loc(fused[#loc138, #loc136])
#loc271 = loc(fused[#loc142, #loc143])
#loc272 = loc(fused[#loc144, #loc145])
#loc273 = loc(fused[#loc146, #loc147])
#loc274 = loc(fused[#loc148, #loc149])
#loc275 = loc(fused[#loc150, #loc151, #loc152, #loc147])
#loc276 = loc(fused[#loc156, #loc157])
#loc277 = loc(fused[#loc155, #loc158])
#loc278 = loc(fused[#loc159, #loc158])
#loc279 = loc(fused[#loc160, #loc161])
#loc280 = loc(fused[#loc162, #loc163])
#loc281 = loc(fused[#loc164, #loc161])
#loc282 = loc(fused[#loc170, #loc168])
#loc283 = loc(fused[#loc171, #loc172])
#loc284 = loc(fused[#loc173, #loc174])
#loc285 = loc(fused[#loc175, #loc172])
#loc286 = loc(fused[#loc179, #loc180])
#loc287 = loc(fused[#loc181, #loc182])
#loc288 = loc(fused[#loc183, #loc184])
#loc289 = loc(fused[#loc185, #loc186])
#loc290 = loc(fused[#loc187, #loc184])
#loc291 = loc(fused[#loc189, #loc190])
#loc292 = loc(fused[#loc188, #loc191])
#loc293 = loc(fused[#loc192, #loc191])
#loc294 = loc(fused[#loc193, #loc194])
#loc295 = loc(fused[#loc195, #loc196])
#loc296 = loc(fused[#loc197, #loc194])
#loc297 = loc(fused[#loc203, #loc201])
#loc298 = loc(fused[#loc204, #loc205])
#loc299 = loc(fused[#loc206, #loc207])
#loc300 = loc(fused[#loc208, #loc205])
