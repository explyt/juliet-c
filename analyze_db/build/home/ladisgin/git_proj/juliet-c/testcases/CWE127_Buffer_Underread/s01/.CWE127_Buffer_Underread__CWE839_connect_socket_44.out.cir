!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc6 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":44:21)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":44:25)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":258:10)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":258:14)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":258:20)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":258:32)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":133:25)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":133:29)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":163:25)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":163:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc329 = loc(fused[#loc6, #loc7])
#loc385 = loc(fused[#loc155, #loc156])
#loc386 = loc(fused[#loc157, #loc158])
#loc391 = loc(fused[#loc175, #loc176])
#loc403 = loc(fused[#loc210, #loc211])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc327)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc3)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc329)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc331)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc331)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc331)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
        %4 = cir.const #cir.int<10> : !s32i loc(#loc16)
        %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc333)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
          %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc21)
          %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc21)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc21)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc22)
        } else {
          %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc3)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc23)
        } loc(#loc334)
      } loc(#loc332)
    } loc(#loc330)
    cir.return loc(#loc5)
  } loc(#loc328)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc335)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc336)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc28)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc337)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc338)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc339)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc340)
  cir.func private @close(!s32i) -> !s32i loc(#loc341)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc343)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc344)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc44)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc344)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc46)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc347)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc348)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc349)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc350)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc55)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc55)
      cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc349)
      cir.scope {
        cir.do {
          %13 = cir.const #cir.int<2> : !s32i loc(#loc60)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc61)
          %15 = cir.const #cir.int<6> : !s32i loc(#loc62)
          %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc63)
          cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc352)
          cir.scope {
            %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc68)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc69)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc69)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc354)
            cir.if %58 {
              cir.break loc(#loc71)
            } loc(#loc355)
          } loc(#loc353)
          %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc356)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc74)
          %19 = cir.const #cir.int<16> : !u64i loc(#loc357)
          cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc358)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc79)
          %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc79)
          %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
          cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc359)
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc28)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc28)
          %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc82)
          %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc83)
          %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc84)
          cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc360)
          %28 = cir.const #cir.int<27015> : !s32i loc(#loc87)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc87)
          %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc88)
          %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
          cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc361)
          cir.scope {
            %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc363)
            %57 = cir.const #cir.int<16> : !u64i loc(#loc364)
            %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc364)
            %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc99)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc100)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc100)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc365)
            cir.if %62 {
              cir.break loc(#loc102)
            } loc(#loc366)
          } loc(#loc362)
          %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc103)
          %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
          %35 = cir.const #cir.int<3> : !s32i loc(#loc105)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc105)
          %37 = cir.const #cir.int<4> : !u64i loc(#loc105)
          %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc105)
          %39 = cir.const #cir.int<2> : !s32i loc(#loc105)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc105)
          %41 = cir.binop(add, %38, %40) : !u64i loc(#loc105)
          %42 = cir.const #cir.int<1> : !s32i loc(#loc106)
          %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc106)
          %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc367)
          %45 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc108)
          %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc108)
          cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc368)
          cir.scope {
            %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc114)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc370)
            %59 = cir.ternary(%58, true {
              %60 = cir.const #true loc(#loc115)
              cir.yield %60 : !cir.bool loc(#loc115)
            }, false {
              %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %61 = cir.const #cir.int<0> : !s32i loc(#loc117)
              %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc371)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc115)
                cir.yield %64 : !cir.bool loc(#loc115)
              }, false {
                %64 = cir.const #false loc(#loc115)
                cir.yield %64 : !cir.bool loc(#loc115)
              }) : (!cir.bool) -> !cir.bool loc(#loc115)
              cir.yield %63 : !cir.bool loc(#loc115)
            }) : (!cir.bool) -> !cir.bool loc(#loc115)
            cir.if %59 {
              cir.break loc(#loc119)
            } loc(#loc372)
          } loc(#loc369)
          %48 = cir.const #cir.int<0> : !s32i loc(#loc120)
          %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc120)
          %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc121)
          %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
          %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc122)
          cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc373)
          %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
          %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc124)
          cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc374)
          cir.yield loc(#loc59)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc127)
          cir.condition(%14) loc(#loc127)
        } loc(#loc351)
      } loc(#loc351)
      cir.scope {
        %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc130)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc131)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc131)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc376)
        cir.if %16 {
          %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc133)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc134)
        } loc(#loc377)
      } loc(#loc375)
    } loc(#loc346)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc135)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc135)
    cir.return loc(#loc40)
  } loc(#loc342)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc379)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc139)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc380)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc141)
    cir.return loc(#loc138)
  } loc(#loc378)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc381)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc382)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc383)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc152)
  cir.func @main(%arg0: !s32i loc(fused[#loc155, #loc156]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc157, #loc158])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc385)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc386)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc154)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc159)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc160)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc161)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc161)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc162)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc149)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    %8 = cir.get_global @CWE127_Buffer_Underread__CWE839_connect_socket_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc387)
    cir.call @CWE127_Buffer_Underread__CWE839_connect_socket_44_good() : () -> () loc(#loc164)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc150)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc151)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    %13 = cir.get_global @CWE127_Buffer_Underread__CWE839_connect_socket_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc388)
    cir.call @CWE127_Buffer_Underread__CWE839_connect_socket_44_bad() : () -> () loc(#loc168)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc152)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc171)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc389)
    cir.return %17 : !s32i loc(#loc389)
  } loc(#loc384)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc175, #loc176])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc391)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc393)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc393)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc393)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
        %4 = cir.const #cir.int<10> : !s32i loc(#loc185)
        %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc395)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
          %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc190)
          %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc190)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc190)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc191)
        } else {
          %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc192)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc192)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc193)
        } loc(#loc396)
      } loc(#loc394)
    } loc(#loc392)
    cir.return loc(#loc174)
  } loc(#loc390)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc398)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc399)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc199)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc399)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc201)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc203)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc401)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc205)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc205)
    cir.return loc(#loc195)
  } loc(#loc397)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc207)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc210, #loc211])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc403)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc405)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc405)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc405)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc219)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc220)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc407)
        %6 = cir.ternary(%5, true {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc222)
          %8 = cir.const #cir.int<10> : !s32i loc(#loc223)
          %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc408)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc221)
            cir.yield %11 : !cir.bool loc(#loc221)
          }, false {
            %11 = cir.const #false loc(#loc221)
            cir.yield %11 : !cir.bool loc(#loc221)
          }) : (!cir.bool) -> !cir.bool loc(#loc221)
          cir.yield %10 : !cir.bool loc(#loc221)
        }, false {
          %7 = cir.const #false loc(#loc221)
          cir.yield %7 : !cir.bool loc(#loc221)
        }) : (!cir.bool) -> !cir.bool loc(#loc221)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc229)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc229)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc229)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc230)
        } else {
          %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc207)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc207)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc231)
        } loc(#loc409)
      } loc(#loc406)
    } loc(#loc404)
    cir.return loc(#loc209)
  } loc(#loc402)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc411)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc412)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc237)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc412)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc239)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc415)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc416)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc417)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc418)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc248)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc248)
      cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc417)
      cir.scope {
        cir.do {
          %13 = cir.const #cir.int<2> : !s32i loc(#loc253)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc254)
          %15 = cir.const #cir.int<6> : !s32i loc(#loc255)
          %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc256)
          cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc420)
          cir.scope {
            %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc261)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc262)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc262)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc422)
            cir.if %58 {
              cir.break loc(#loc264)
            } loc(#loc423)
          } loc(#loc421)
          %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc424)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc267)
          %19 = cir.const #cir.int<16> : !u64i loc(#loc425)
          cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc426)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc272)
          %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc272)
          %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
          cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc427)
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc274)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc274)
          %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc275)
          %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc83)
          %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc84)
          cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc428)
          %28 = cir.const #cir.int<27015> : !s32i loc(#loc278)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc278)
          %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc279)
          %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
          cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc429)
          cir.scope {
            %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc284)
            %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc431)
            %57 = cir.const #cir.int<16> : !u64i loc(#loc432)
            %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc432)
            %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc289)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc290)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc290)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc433)
            cir.if %62 {
              cir.break loc(#loc292)
            } loc(#loc434)
          } loc(#loc430)
          %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc293)
          %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc294)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc294)
          %35 = cir.const #cir.int<3> : !s32i loc(#loc295)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc295)
          %37 = cir.const #cir.int<4> : !u64i loc(#loc295)
          %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc295)
          %39 = cir.const #cir.int<2> : !s32i loc(#loc295)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc295)
          %41 = cir.binop(add, %38, %40) : !u64i loc(#loc295)
          %42 = cir.const #cir.int<1> : !s32i loc(#loc296)
          %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc296)
          %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc435)
          %45 = cir.const #cir.int<0> : !s32i loc(#loc297)
          %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc298)
          %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc298)
          cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc436)
          cir.scope {
            %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc303)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc304)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc304)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc438)
            %59 = cir.ternary(%58, true {
              %60 = cir.const #true loc(#loc305)
              cir.yield %60 : !cir.bool loc(#loc305)
            }, false {
              %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc306)
              %61 = cir.const #cir.int<0> : !s32i loc(#loc307)
              %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc439)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc305)
                cir.yield %64 : !cir.bool loc(#loc305)
              }, false {
                %64 = cir.const #false loc(#loc305)
                cir.yield %64 : !cir.bool loc(#loc305)
              }) : (!cir.bool) -> !cir.bool loc(#loc305)
              cir.yield %63 : !cir.bool loc(#loc305)
            }) : (!cir.bool) -> !cir.bool loc(#loc305)
            cir.if %59 {
              cir.break loc(#loc309)
            } loc(#loc440)
          } loc(#loc437)
          %48 = cir.const #cir.int<0> : !s32i loc(#loc310)
          %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc310)
          %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc311)
          %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc312)
          %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc312)
          cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc441)
          %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc313)
          %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc314)
          cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc442)
          cir.yield loc(#loc252)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc317)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc317)
          cir.condition(%14) loc(#loc317)
        } loc(#loc419)
      } loc(#loc419)
      cir.scope {
        %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc320)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc321)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc321)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc444)
        cir.if %16 {
          %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc323)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc324)
        } loc(#loc445)
      } loc(#loc443)
    } loc(#loc414)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc325)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc325)
    cir.return loc(#loc233)
  } loc(#loc410)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":56:23)
#loc4 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":44:1)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":59:1)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":45:1)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":46:5)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":58:5)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":47:9)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":47:30)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":50:9)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":57:9)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":50:13)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":50:20)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":51:9)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":53:9)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":55:9)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":52:33)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":52:26)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":52:13)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":56:13)
#loc24 = loc("/usr/include/sys/socket.h":102:1)
#loc25 = loc("/usr/include/sys/socket.h":102:62)
#loc26 = loc("/usr/include/arpa/inet.h":34:1)
#loc27 = loc("/usr/include/arpa/inet.h":34:47)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":94:49)
#loc29 = loc("/usr/include/netinet/in.h":404:1)
#loc30 = loc("/usr/include/netinet/in.h":405:40)
#loc31 = loc("/usr/include/sys/socket.h":126:1)
#loc32 = loc("/usr/include/sys/socket.h":126:75)
#loc33 = loc("/usr/include/sys/socket.h":145:1)
#loc34 = loc("/usr/include/sys/socket.h":145:68)
#loc35 = loc("/usr/include/stdlib.h":105:1)
#loc36 = loc("/usr/include/stdlib.h":106:33)
#loc37 = loc("/usr/include/unistd.h":358:1)
#loc38 = loc("/usr/include/unistd.h":358:27)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":61:1)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":126:1)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":63:5)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":63:9)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":65:5)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":65:29)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":67:13)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":67:12)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":67:5)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":68:5)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":123:5)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":73:9)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":73:13)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":74:9)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":74:28)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":75:9)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":75:32)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":76:9)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":76:41)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":77:9)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":112:17)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":87:36)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":87:45)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":87:58)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":87:29)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":87:13)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":87:69)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":88:13)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":91:13)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":88:17)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":88:34)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":89:13)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":90:17)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":92:20)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":92:21)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":92:30)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":92:33)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":92:47)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":92:13)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":92:48)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":93:34)
#loc80 = loc("/usr/include/netinet/in.h":249:5)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":93:13)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":94:39)
#loc83 = loc("/usr/include/netinet/in.h":251:20)
#loc84 = loc("/usr/include/netinet/in.h":33:15)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":94:13)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":94:59)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":95:38)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":95:32)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":95:13)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":95:46)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":96:13)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":99:13)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":96:25)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":96:58)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":96:59)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":96:68)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":96:82)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":96:17)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":96:88)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":97:13)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":98:17)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":102:31)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":102:46)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":102:59)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":102:77)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":102:80)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":102:26)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":102:13)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":102:81)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":103:13)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":106:13)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":103:17)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":103:31)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":103:44)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":103:47)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":103:61)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":104:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":105:17)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":108:39)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":108:25)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":108:13)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":110:25)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":110:20)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":110:13)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":110:36)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":112:16)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":113:9)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":116:9)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":113:13)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":113:30)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":114:9)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":115:26)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":115:13)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":125:5)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":125:13)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":244:1)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":248:1)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":246:5)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":246:13)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":247:5)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":247:13)
#loc143 = loc("/usr/include/stdlib.h":575:1)
#loc144 = loc("/usr/include/stdlib.h":575:41)
#loc145 = loc("/usr/include/time.h":76:1)
#loc146 = loc("/usr/include/time.h":76:38)
#loc147 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc148 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":263:15)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":265:15)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":268:15)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":270:15)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":258:1)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":273:1)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":259:1)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":261:27)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":261:22)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":261:5)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":263:5)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":264:5)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":264:60)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":265:5)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":268:5)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":269:5)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":269:59)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":270:5)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":272:12)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":272:5)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":133:1)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":148:1)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":134:1)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":135:5)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":147:5)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":136:9)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":136:30)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":139:9)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":146:9)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":139:13)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":139:20)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":140:9)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":142:9)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":144:9)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":141:33)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":141:26)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":141:13)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":145:23)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":145:13)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":150:1)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":160:1)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":152:5)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":152:9)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":153:5)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":153:29)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":155:13)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":155:12)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":155:5)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":158:12)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":158:5)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":159:5)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":159:13)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":174:23)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":163:1)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":177:1)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":164:1)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":165:5)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":176:5)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":166:9)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":166:30)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":168:9)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":175:9)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":168:13)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":168:21)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":168:23)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":168:26)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":168:34)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":168:36)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":169:9)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":171:9)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":173:9)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":170:33)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":170:26)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":170:13)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":174:13)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":179:1)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":242:1)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":181:5)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":181:9)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":182:5)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":182:29)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":184:13)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":184:12)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":184:5)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":185:5)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":240:5)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":190:9)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":190:13)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":191:9)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":191:28)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":192:9)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":192:32)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":193:9)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":193:41)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":194:9)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":229:17)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":204:36)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":204:45)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":204:58)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":204:29)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":204:13)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":204:69)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":205:13)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":208:13)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":205:17)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":205:34)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":206:13)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":207:17)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":209:20)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":209:21)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":209:30)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":209:33)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":209:47)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":209:13)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":209:48)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":210:34)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":210:13)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":211:49)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":211:39)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":211:13)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":211:59)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":212:38)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":212:32)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":212:13)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":212:46)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":213:13)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":216:13)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":213:25)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":213:58)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":213:59)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":213:68)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":213:82)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":213:17)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":213:88)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":214:13)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":215:17)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":219:31)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":219:46)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":219:59)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":219:77)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":219:80)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":219:26)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":219:13)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":219:81)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":220:13)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":223:13)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":220:17)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":220:31)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":220:44)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":220:47)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":220:61)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":221:13)
#loc309 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":222:17)
#loc310 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":225:39)
#loc311 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":225:25)
#loc312 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":225:13)
#loc313 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":227:25)
#loc314 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":227:20)
#loc315 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":227:13)
#loc316 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":227:36)
#loc317 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":229:16)
#loc318 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":230:9)
#loc319 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":233:9)
#loc320 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":230:13)
#loc321 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":230:30)
#loc322 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":231:9)
#loc323 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":232:26)
#loc324 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":232:13)
#loc325 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":241:5)
#loc326 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_44.c":241:13)
#loc327 = loc(fused[#loc1, #loc2])
#loc328 = loc(fused[#loc4, #loc5])
#loc330 = loc(fused[#loc9, #loc10])
#loc331 = loc(fused[#loc11, #loc12])
#loc332 = loc(fused[#loc13, #loc14])
#loc333 = loc(fused[#loc15, #loc16])
#loc334 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc335 = loc(fused[#loc24, #loc25])
#loc336 = loc(fused[#loc26, #loc27])
#loc337 = loc(fused[#loc29, #loc30])
#loc338 = loc(fused[#loc31, #loc32])
#loc339 = loc(fused[#loc33, #loc34])
#loc340 = loc(fused[#loc35, #loc36])
#loc341 = loc(fused[#loc37, #loc38])
#loc342 = loc(fused[#loc39, #loc40])
#loc343 = loc(fused[#loc41, #loc42])
#loc344 = loc(fused[#loc43, #loc44])
#loc345 = loc(fused[#loc47, #loc45])
#loc346 = loc(fused[#loc48, #loc49])
#loc347 = loc(fused[#loc50, #loc51])
#loc348 = loc(fused[#loc52, #loc53])
#loc349 = loc(fused[#loc54, #loc55])
#loc350 = loc(fused[#loc56, #loc57])
#loc351 = loc(fused[#loc58, #loc59])
#loc352 = loc(fused[#loc64, #loc65])
#loc353 = loc(fused[#loc66, #loc67])
#loc354 = loc(fused[#loc68, #loc69])
#loc355 = loc(fused[#loc70, #loc67])
#loc356 = loc(fused[#loc72, #loc73])
#loc357 = loc(fused[#loc75, #loc76])
#loc358 = loc(fused[#loc77, #loc78])
#loc359 = loc(fused[#loc81, #loc79])
#loc360 = loc(fused[#loc85, #loc86])
#loc361 = loc(fused[#loc90, #loc91])
#loc362 = loc(fused[#loc92, #loc93])
#loc363 = loc(fused[#loc95, #loc96])
#loc364 = loc(fused[#loc97, #loc98])
#loc365 = loc(fused[#loc99, #loc100])
#loc366 = loc(fused[#loc101, #loc93])
#loc367 = loc(fused[#loc105, #loc106])
#loc368 = loc(fused[#loc109, #loc110])
#loc369 = loc(fused[#loc111, #loc112])
#loc370 = loc(fused[#loc113, #loc114])
#loc371 = loc(fused[#loc116, #loc117])
#loc372 = loc(fused[#loc118, #loc112])
#loc373 = loc(fused[#loc122, #loc120])
#loc374 = loc(fused[#loc125, #loc126])
#loc375 = loc(fused[#loc128, #loc129])
#loc376 = loc(fused[#loc130, #loc131])
#loc377 = loc(fused[#loc132, #loc129])
#loc378 = loc(fused[#loc137, #loc138])
#loc379 = loc(fused[#loc139, #loc140])
#loc380 = loc(fused[#loc141, #loc142])
#loc381 = loc(fused[#loc143, #loc144])
#loc382 = loc(fused[#loc145, #loc146])
#loc383 = loc(fused[#loc147, #loc148])
#loc384 = loc(fused[#loc153, #loc154])
#loc387 = loc(fused[#loc164, #loc165])
#loc388 = loc(fused[#loc168, #loc169])
#loc389 = loc(fused[#loc172, #loc171])
#loc390 = loc(fused[#loc173, #loc174])
#loc392 = loc(fused[#loc178, #loc179])
#loc393 = loc(fused[#loc180, #loc181])
#loc394 = loc(fused[#loc182, #loc183])
#loc395 = loc(fused[#loc184, #loc185])
#loc396 = loc(fused[#loc186, #loc187, #loc188, #loc183])
#loc397 = loc(fused[#loc194, #loc195])
#loc398 = loc(fused[#loc196, #loc197])
#loc399 = loc(fused[#loc198, #loc199])
#loc400 = loc(fused[#loc202, #loc200])
#loc401 = loc(fused[#loc204, #loc203])
#loc402 = loc(fused[#loc208, #loc209])
#loc404 = loc(fused[#loc213, #loc214])
#loc405 = loc(fused[#loc215, #loc216])
#loc406 = loc(fused[#loc217, #loc218])
#loc407 = loc(fused[#loc219, #loc220])
#loc408 = loc(fused[#loc222, #loc224])
#loc409 = loc(fused[#loc225, #loc226, #loc227, #loc218])
#loc410 = loc(fused[#loc232, #loc233])
#loc411 = loc(fused[#loc234, #loc235])
#loc412 = loc(fused[#loc236, #loc237])
#loc413 = loc(fused[#loc240, #loc238])
#loc414 = loc(fused[#loc241, #loc242])
#loc415 = loc(fused[#loc243, #loc244])
#loc416 = loc(fused[#loc245, #loc246])
#loc417 = loc(fused[#loc247, #loc248])
#loc418 = loc(fused[#loc249, #loc250])
#loc419 = loc(fused[#loc251, #loc252])
#loc420 = loc(fused[#loc257, #loc258])
#loc421 = loc(fused[#loc259, #loc260])
#loc422 = loc(fused[#loc261, #loc262])
#loc423 = loc(fused[#loc263, #loc260])
#loc424 = loc(fused[#loc265, #loc266])
#loc425 = loc(fused[#loc268, #loc269])
#loc426 = loc(fused[#loc270, #loc271])
#loc427 = loc(fused[#loc273, #loc272])
#loc428 = loc(fused[#loc276, #loc277])
#loc429 = loc(fused[#loc280, #loc281])
#loc430 = loc(fused[#loc282, #loc283])
#loc431 = loc(fused[#loc285, #loc286])
#loc432 = loc(fused[#loc287, #loc288])
#loc433 = loc(fused[#loc289, #loc290])
#loc434 = loc(fused[#loc291, #loc283])
#loc435 = loc(fused[#loc295, #loc296])
#loc436 = loc(fused[#loc299, #loc300])
#loc437 = loc(fused[#loc301, #loc302])
#loc438 = loc(fused[#loc303, #loc304])
#loc439 = loc(fused[#loc306, #loc307])
#loc440 = loc(fused[#loc308, #loc302])
#loc441 = loc(fused[#loc312, #loc310])
#loc442 = loc(fused[#loc315, #loc316])
#loc443 = loc(fused[#loc318, #loc319])
#loc444 = loc(fused[#loc320, #loc321])
#loc445 = loc(fused[#loc322, #loc319])
