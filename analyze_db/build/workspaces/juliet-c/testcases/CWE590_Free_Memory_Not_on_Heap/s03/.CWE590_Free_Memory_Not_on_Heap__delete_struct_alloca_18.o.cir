!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc30 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc56)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc57)
  cir.func @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_183badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc59)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc60)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc61)
    cir.goto "source" loc(#loc62)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc15)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc10)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %6, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc60)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    cir.store %13, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc65)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    cir.call @printStructLine(%14) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc25)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc26)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc27)
    cir.return loc(#loc6)
  } loc(#loc58)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc66)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc30)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc30)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    cir.return loc(#loc30)
  } loc(#loc30)
  cir.func internal private @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc68)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc69)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc70)
    cir.goto "source" loc(#loc71)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc41)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc72)
    %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc69)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
    cir.call @_ZN14_twoIntsStructC2Ev(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr) loc(#loc36)
    cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc69)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
    cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc75)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc50)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc51)
    cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    cir.return loc(#loc32)
  } loc(#loc67)
  cir.func @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_184goodEv() extra(#fn_attr1) {
    cir.call @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18L7goodG2BEv() : () -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc76)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":26:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":42:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":28:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":28:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":34:9)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":34:55)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":29:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":29:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":30:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":30:10)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":31:1)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":35:30)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":35:9)
#loc18 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":36:30)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":36:9)
#loc21 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":37:16)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":37:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":39:21)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":39:5)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":41:12)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":26:6)
#loc28 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc29 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":49:1)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":65:1)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":51:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":51:21)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":57:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":57:42)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":52:12)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":52:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":53:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":53:10)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":54:1)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":57:38)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":58:30)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":58:9)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":59:30)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":59:9)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":60:16)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":60:9)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":62:21)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":62:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":64:12)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":49:13)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":67:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":70:1)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_alloca_18.cpp":69:5)
#loc56 = loc(fused[#loc1, #loc2])
#loc57 = loc(fused[#loc3, #loc4])
#loc58 = loc(fused[#loc5, #loc6])
#loc59 = loc(fused[#loc7, #loc8])
#loc60 = loc(fused[#loc9, #loc10])
#loc61 = loc(fused[#loc12, #loc11])
#loc62 = loc(fused[#loc13, #loc14])
#loc63 = loc(fused[#loc17, #loc16])
#loc64 = loc(fused[#loc20, #loc19])
#loc65 = loc(fused[#loc23, #loc22])
#loc66 = loc(fused[#loc28, #loc29])
#loc67 = loc(fused[#loc31, #loc32])
#loc68 = loc(fused[#loc33, #loc34])
#loc69 = loc(fused[#loc35, #loc36])
#loc70 = loc(fused[#loc38, #loc37])
#loc71 = loc(fused[#loc39, #loc40])
#loc72 = loc(fused[#loc42, #loc36])
#loc73 = loc(fused[#loc44, #loc43])
#loc74 = loc(fused[#loc46, #loc45])
#loc75 = loc(fused[#loc48, #loc47])
#loc76 = loc(fused[#loc53, #loc54])
