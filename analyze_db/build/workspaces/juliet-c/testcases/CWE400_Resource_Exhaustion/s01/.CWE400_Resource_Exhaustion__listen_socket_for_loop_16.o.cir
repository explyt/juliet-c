!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc364)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc365)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc366)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc367)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc368)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc369)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc370)
  cir.func private @close(!s32i) -> !s32i loc(#loc371)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc372)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_for_loop_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc374)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc25)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc29)
        cir.condition(%4) loc(#loc29)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc379)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc380)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc381)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc382)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc383)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc38)
            cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc381)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc40)
            cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc382)
            cir.scope {
              cir.do {
                cir.scope {
                  %12 = cir.const #cir.int<2> : !s32i loc(#loc47)
                  %13 = cir.const #cir.int<1> : !s32i loc(#loc48)
                  %14 = cir.const #cir.int<6> : !s32i loc(#loc49)
                  %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
                  cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc386)
                  cir.scope {
                    %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                    %58 = cir.const #cir.int<1> : !s32i loc(#loc56)
                    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc56)
                    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc388)
                    cir.if %60 {
                      cir.break loc(#loc58)
                    } loc(#loc389)
                  } loc(#loc387)
                  %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc390)
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc61)
                  %18 = cir.const #cir.int<16> : !u64i loc(#loc391)
                  cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc392)
                  %19 = cir.const #cir.int<2> : !s32i loc(#loc66)
                  %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc66)
                  %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                  cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc393)
                  %22 = cir.const #cir.int<0> : !s32i loc(#loc69)
                  %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc69)
                  %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                  %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                  cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc394)
                  %26 = cir.const #cir.int<27015> : !s32i loc(#loc73)
                  %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc73)
                  %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc74)
                  %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                  cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc395)
                  cir.scope {
                    %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                    %58 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc397)
                    %59 = cir.const #cir.int<16> : !u64i loc(#loc398)
                    %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc398)
                    %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
                    %62 = cir.const #cir.int<1> : !s32i loc(#loc86)
                    %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc86)
                    %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc399)
                    cir.if %64 {
                      cir.break loc(#loc88)
                    } loc(#loc400)
                  } loc(#loc396)
                  cir.scope {
                    %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                    %58 = cir.const #cir.int<5> : !s32i loc(#loc92)
                    %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc94)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc94)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc402)
                    cir.if %62 {
                      cir.break loc(#loc96)
                    } loc(#loc403)
                  } loc(#loc401)
                  %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
                  %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
                  %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
                  cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc404)
                  cir.scope {
                    %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                    %58 = cir.const #cir.int<1> : !s32i loc(#loc106)
                    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc106)
                    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc406)
                    cir.if %60 {
                      cir.break loc(#loc108)
                    } loc(#loc407)
                  } loc(#loc405)
                  %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                  %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
                  %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
                  %37 = cir.const #cir.int<3> : !s32i loc(#loc111)
                  %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc111)
                  %39 = cir.const #cir.int<4> : !u64i loc(#loc111)
                  %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc111)
                  %41 = cir.const #cir.int<2> : !s32i loc(#loc111)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc111)
                  %43 = cir.binop(add, %40, %42) : !u64i loc(#loc111)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc112)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc112)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc408)
                  %47 = cir.const #cir.int<0> : !s32i loc(#loc113)
                  %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
                  %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc114)
                  cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc409)
                  cir.scope {
                    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                    %58 = cir.const #cir.int<1> : !s32i loc(#loc120)
                    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc120)
                    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc411)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc121)
                      cir.yield %62 : !cir.bool loc(#loc121)
                    }, false {
                      %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                      %63 = cir.const #cir.int<0> : !s32i loc(#loc123)
                      %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc412)
                      %65 = cir.ternary(%64, true {
                        %66 = cir.const #true loc(#loc121)
                        cir.yield %66 : !cir.bool loc(#loc121)
                      }, false {
                        %66 = cir.const #false loc(#loc121)
                        cir.yield %66 : !cir.bool loc(#loc121)
                      }) : (!cir.bool) -> !cir.bool loc(#loc121)
                      cir.yield %65 : !cir.bool loc(#loc121)
                    }) : (!cir.bool) -> !cir.bool loc(#loc121)
                    cir.if %61 {
                      cir.break loc(#loc125)
                    } loc(#loc413)
                  } loc(#loc410)
                  %50 = cir.const #cir.int<0> : !s32i loc(#loc126)
                  %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc126)
                  %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                  %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
                  %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc128)
                  cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc414)
                  %55 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
                  %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc130)
                  cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc415)
                } loc(#loc385)
                cir.yield loc(#loc44)
              } while {
                %12 = cir.const #cir.int<0> : !s32i loc(#loc133)
                %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc133)
                cir.condition(%13) loc(#loc133)
              } loc(#loc384)
            } loc(#loc384)
            cir.scope {
              %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc137)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc137)
              %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc417)
              cir.if %15 {
                %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc140)
              } loc(#loc418)
            } loc(#loc416)
            cir.scope {
              %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc144)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc144)
              %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc420)
              cir.if %15 {
                %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc147)
              } loc(#loc421)
            } loc(#loc419)
          } loc(#loc378)
          cir.break loc(#loc148)
        } loc(#loc377)
        cir.yield loc(#loc28)
      } loc(#loc376)
    } loc(#loc376)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc151)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc151)
        cir.condition(%4) loc(#loc151)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc425)
            %4 = cir.const #cir.int<0> : !s32i loc(#loc156)
            %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc156)
            cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc425)
            cir.scope {
              %6 = cir.const #cir.int<0> : !s32i loc(#loc159)
              %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc159)
              cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc427)
              cir.for : cond {
                %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc161)
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
                %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc162)
                %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc428)
                cir.condition(%11) loc(#loc163)
              } body {
                cir.scope {
                  %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc19)
                  %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc19)
                  cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc165)
                } loc(#loc429)
                cir.yield loc(#loc158)
              } step {
                %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc166)
                %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc167)
                cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc430)
                cir.yield loc(#loc426)
              } loc(#loc426)
            } loc(#loc426)
          } loc(#loc424)
          cir.break loc(#loc168)
        } loc(#loc423)
        cir.yield loc(#loc150)
      } loc(#loc422)
    } loc(#loc422)
    cir.return loc(#loc21)
  } loc(#loc373)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_for_loop_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc432)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc171)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc433)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc173)
    cir.return loc(#loc170)
  } loc(#loc431)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc435)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc180)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc184)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc184)
        cir.condition(%4) loc(#loc184)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc440)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc441)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc442)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc443)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc444)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc193)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc193)
            cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc442)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc195)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc195)
            cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc443)
            cir.scope {
              cir.do {
                cir.scope {
                  %12 = cir.const #cir.int<2> : !s32i loc(#loc202)
                  %13 = cir.const #cir.int<1> : !s32i loc(#loc203)
                  %14 = cir.const #cir.int<6> : !s32i loc(#loc204)
                  %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc205)
                  cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc447)
                  cir.scope {
                    %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc210)
                    %58 = cir.const #cir.int<1> : !s32i loc(#loc211)
                    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc211)
                    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc449)
                    cir.if %60 {
                      cir.break loc(#loc213)
                    } loc(#loc450)
                  } loc(#loc448)
                  %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc451)
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc216)
                  %18 = cir.const #cir.int<16> : !u64i loc(#loc452)
                  cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc453)
                  %19 = cir.const #cir.int<2> : !s32i loc(#loc221)
                  %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc221)
                  %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                  cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc454)
                  %22 = cir.const #cir.int<0> : !s32i loc(#loc223)
                  %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc223)
                  %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                  %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                  cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc455)
                  %26 = cir.const #cir.int<27015> : !s32i loc(#loc225)
                  %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc225)
                  %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc226)
                  %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                  cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc456)
                  cir.scope {
                    %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                    %58 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc458)
                    %59 = cir.const #cir.int<16> : !u64i loc(#loc459)
                    %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc459)
                    %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc236)
                    %62 = cir.const #cir.int<1> : !s32i loc(#loc237)
                    %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc237)
                    %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc460)
                    cir.if %64 {
                      cir.break loc(#loc239)
                    } loc(#loc461)
                  } loc(#loc457)
                  cir.scope {
                    %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc242)
                    %58 = cir.const #cir.int<5> : !s32i loc(#loc243)
                    %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc244)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc245)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc245)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc463)
                    cir.if %62 {
                      cir.break loc(#loc247)
                    } loc(#loc464)
                  } loc(#loc462)
                  %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc248)
                  %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc249)
                  %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc250)
                  %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc251)
                  cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc465)
                  cir.scope {
                    %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc256)
                    %58 = cir.const #cir.int<1> : !s32i loc(#loc257)
                    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc257)
                    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc467)
                    cir.if %60 {
                      cir.break loc(#loc259)
                    } loc(#loc468)
                  } loc(#loc466)
                  %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc260)
                  %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc261)
                  %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc261)
                  %37 = cir.const #cir.int<3> : !s32i loc(#loc262)
                  %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc262)
                  %39 = cir.const #cir.int<4> : !u64i loc(#loc262)
                  %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc262)
                  %41 = cir.const #cir.int<2> : !s32i loc(#loc262)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc262)
                  %43 = cir.binop(add, %40, %42) : !u64i loc(#loc262)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc263)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc263)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc469)
                  %47 = cir.const #cir.int<0> : !s32i loc(#loc264)
                  %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc265)
                  %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc265)
                  cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc470)
                  cir.scope {
                    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc270)
                    %58 = cir.const #cir.int<1> : !s32i loc(#loc271)
                    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc271)
                    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc472)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc272)
                      cir.yield %62 : !cir.bool loc(#loc272)
                    }, false {
                      %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc273)
                      %63 = cir.const #cir.int<0> : !s32i loc(#loc274)
                      %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc473)
                      %65 = cir.ternary(%64, true {
                        %66 = cir.const #true loc(#loc272)
                        cir.yield %66 : !cir.bool loc(#loc272)
                      }, false {
                        %66 = cir.const #false loc(#loc272)
                        cir.yield %66 : !cir.bool loc(#loc272)
                      }) : (!cir.bool) -> !cir.bool loc(#loc272)
                      cir.yield %65 : !cir.bool loc(#loc272)
                    }) : (!cir.bool) -> !cir.bool loc(#loc272)
                    cir.if %61 {
                      cir.break loc(#loc276)
                    } loc(#loc474)
                  } loc(#loc471)
                  %50 = cir.const #cir.int<0> : !s32i loc(#loc277)
                  %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc277)
                  %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc278)
                  %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc279)
                  %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc279)
                  cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc475)
                  %55 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc280)
                  %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc281)
                  cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc476)
                } loc(#loc446)
                cir.yield loc(#loc199)
              } while {
                %12 = cir.const #cir.int<0> : !s32i loc(#loc284)
                %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc284)
                cir.condition(%13) loc(#loc284)
              } loc(#loc445)
            } loc(#loc445)
            cir.scope {
              %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc287)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc288)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc288)
              %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc478)
              cir.if %15 {
                %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc290)
                %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc291)
              } loc(#loc479)
            } loc(#loc477)
            cir.scope {
              %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc294)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc295)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc295)
              %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc481)
              cir.if %15 {
                %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc298)
              } loc(#loc482)
            } loc(#loc480)
          } loc(#loc439)
          cir.break loc(#loc299)
        } loc(#loc438)
        cir.yield loc(#loc183)
      } loc(#loc437)
    } loc(#loc437)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc302)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc302)
        cir.condition(%4) loc(#loc302)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc486)
            %4 = cir.const #cir.int<0> : !s32i loc(#loc307)
            %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc307)
            cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc486)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc310)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc311)
              %8 = cir.cmp(gt, %6, %7) : !s32i, !cir.bool loc(#loc488)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc313)
                %11 = cir.const #cir.int<20> : !s32i loc(#loc314)
                %12 = cir.cmp(le, %10, %11) : !s32i, !cir.bool loc(#loc489)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc312)
                  cir.yield %14 : !cir.bool loc(#loc312)
                }, false {
                  %14 = cir.const #false loc(#loc312)
                  cir.yield %14 : !cir.bool loc(#loc312)
                }) : (!cir.bool) -> !cir.bool loc(#loc312)
                cir.yield %13 : !cir.bool loc(#loc312)
              }, false {
                %10 = cir.const #false loc(#loc312)
                cir.yield %10 : !cir.bool loc(#loc312)
              }) : (!cir.bool) -> !cir.bool loc(#loc312)
              cir.if %9 {
                cir.scope {
                  %10 = cir.const #cir.int<0> : !s32i loc(#loc318)
                  %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc318)
                  cir.store %11, %3 : !u64i, !cir.ptr<!u64i> loc(#loc492)
                  cir.for : cond {
                    %12 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc320)
                    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc321)
                    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc321)
                    %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc493)
                    cir.condition(%15) loc(#loc322)
                  } body {
                    cir.scope {
                      %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc324)
                      %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc324)
                      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc325)
                    } loc(#loc494)
                    cir.yield loc(#loc317)
                  } step {
                    %12 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc326)
                    %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc327)
                    cir.store %13, %3 : !u64i, !cir.ptr<!u64i> loc(#loc495)
                    cir.yield loc(#loc491)
                  } loc(#loc491)
                } loc(#loc491)
              } loc(#loc490)
            } loc(#loc487)
          } loc(#loc485)
          cir.break loc(#loc328)
        } loc(#loc484)
        cir.yield loc(#loc301)
      } loc(#loc483)
    } loc(#loc483)
    cir.return loc(#loc176)
  } loc(#loc434)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc497)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc333)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc334)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc498)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc338)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc338)
        cir.condition(%4) loc(#loc338)
      } do {
        cir.scope {
          %3 = cir.const #cir.int<20> : !s32i loc(#loc340)
          cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc501)
          cir.break loc(#loc342)
        } loc(#loc500)
        cir.yield loc(#loc337)
      } loc(#loc499)
    } loc(#loc499)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc345)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc345)
        cir.condition(%4) loc(#loc345)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc505)
            %4 = cir.const #cir.int<0> : !s32i loc(#loc350)
            %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc350)
            cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc505)
            cir.scope {
              %6 = cir.const #cir.int<0> : !s32i loc(#loc353)
              %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc353)
              cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc507)
              cir.for : cond {
                %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc355)
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc356)
                %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc356)
                %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc508)
                cir.condition(%11) loc(#loc357)
              } body {
                cir.scope {
                  %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc359)
                  %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc359)
                  cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc360)
                } loc(#loc509)
                cir.yield loc(#loc352)
              } step {
                %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc361)
                %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc362)
                cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc510)
                cir.yield loc(#loc506)
              } loc(#loc506)
            } loc(#loc506)
          } loc(#loc504)
          cir.break loc(#loc363)
        } loc(#loc503)
        cir.yield loc(#loc344)
      } loc(#loc502)
    } loc(#loc502)
    cir.return loc(#loc330)
  } loc(#loc496)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":129:27)
#loc20 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":44:1)
#loc21 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":134:1)
#loc22 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":46:5)
#loc23 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":46:9)
#loc24 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":48:14)
#loc25 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":48:13)
#loc26 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":48:5)
#loc27 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":49:5)
#loc28 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":121:5)
#loc29 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":49:11)
#loc30 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":50:5)
#loc31 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":51:9)
#loc32 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":119:9)
#loc33 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":56:13)
#loc34 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":56:17)
#loc35 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":57:13)
#loc36 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":57:32)
#loc37 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":58:13)
#loc38 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":58:35)
#loc39 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":59:13)
#loc40 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":59:35)
#loc41 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":60:13)
#loc42 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":60:45)
#loc43 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":61:13)
#loc44 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":104:21)
#loc45 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":62:13)
#loc46 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":103:13)
#loc47 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":71:39)
#loc48 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":71:48)
#loc49 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":71:61)
#loc50 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":71:32)
#loc51 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":71:17)
#loc52 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":71:72)
#loc53 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":72:17)
#loc54 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":75:17)
#loc55 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":72:21)
#loc56 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":72:37)
#loc57 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":73:17)
#loc58 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":74:21)
#loc59 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":76:24)
#loc60 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":76:25)
#loc61 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":76:34)
#loc62 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":76:37)
#loc63 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":76:51)
#loc64 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":76:17)
#loc65 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":76:52)
#loc66 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":77:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":77:17)
#loc69 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":78:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":78:17)
#loc73 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":79:42)
#loc74 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":79:36)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":79:17)
#loc77 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":79:50)
#loc78 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":80:17)
#loc79 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":83:17)
#loc80 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":80:26)
#loc81 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":80:58)
#loc82 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":80:59)
#loc83 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":80:68)
#loc84 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":80:82)
#loc85 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":80:21)
#loc86 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":80:88)
#loc87 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":81:17)
#loc88 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":82:21)
#loc89 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":84:17)
#loc90 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":87:17)
#loc91 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":84:28)
#loc92 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":84:42)
#loc93 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":84:21)
#loc94 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":84:61)
#loc95 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":85:17)
#loc96 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":86:21)
#loc97 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":88:39)
#loc98 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":88:53)
#loc99 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":88:59)
#loc100 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":88:32)
#loc101 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":88:17)
#loc102 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":88:63)
#loc103 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":89:17)
#loc104 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":92:17)
#loc105 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":89:21)
#loc106 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":89:37)
#loc107 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":90:17)
#loc108 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":91:21)
#loc109 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":94:35)
#loc110 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":94:49)
#loc111 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":94:62)
#loc112 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":94:80)
#loc113 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":94:83)
#loc114 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":94:30)
#loc115 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":94:17)
#loc116 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":94:84)
#loc117 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":95:17)
#loc118 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":98:17)
#loc119 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":95:21)
#loc120 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":95:35)
#loc121 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":95:48)
#loc122 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":95:51)
#loc123 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":95:65)
#loc124 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":96:17)
#loc125 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":97:21)
#loc126 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":100:43)
#loc127 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":100:29)
#loc128 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":100:17)
#loc129 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":102:30)
#loc130 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":102:25)
#loc131 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":102:17)
#loc132 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":102:41)
#loc133 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":104:20)
#loc134 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":105:13)
#loc135 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":108:13)
#loc136 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":105:17)
#loc137 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":105:33)
#loc138 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":106:13)
#loc139 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":107:30)
#loc140 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":107:17)
#loc141 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":109:13)
#loc142 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":112:13)
#loc143 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":109:17)
#loc144 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":109:33)
#loc145 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":110:13)
#loc146 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":111:30)
#loc147 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":111:17)
#loc148 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":120:9)
#loc149 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":122:5)
#loc150 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":133:5)
#loc151 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":122:11)
#loc152 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":123:5)
#loc153 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":124:9)
#loc154 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":131:9)
#loc155 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":125:13)
#loc156 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":125:24)
#loc157 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":127:13)
#loc158 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":130:13)
#loc159 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":127:22)
#loc160 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":127:18)
#loc161 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":127:25)
#loc162 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":127:37)
#loc163 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":127:27)
#loc164 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":128:13)
#loc165 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":129:17)
#loc166 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":127:45)
#loc167 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":127:44)
#loc168 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":132:9)
#loc169 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":262:1)
#loc170 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":266:1)
#loc171 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":264:5)
#loc172 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":264:13)
#loc173 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":265:5)
#loc174 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":265:13)
#loc175 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":141:1)
#loc176 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":234:1)
#loc177 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":143:5)
#loc178 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":143:9)
#loc179 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":145:14)
#loc180 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":145:13)
#loc181 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":145:5)
#loc182 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":146:5)
#loc183 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":218:5)
#loc184 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":146:11)
#loc185 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":147:5)
#loc186 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":148:9)
#loc187 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":216:9)
#loc188 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":153:13)
#loc189 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":153:17)
#loc190 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":154:13)
#loc191 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":154:32)
#loc192 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":155:13)
#loc193 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":155:35)
#loc194 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":156:13)
#loc195 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":156:35)
#loc196 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":157:13)
#loc197 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":157:45)
#loc198 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":158:13)
#loc199 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":201:21)
#loc200 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":159:13)
#loc201 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":200:13)
#loc202 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":168:39)
#loc203 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":168:48)
#loc204 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":168:61)
#loc205 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":168:32)
#loc206 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":168:17)
#loc207 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":168:72)
#loc208 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":169:17)
#loc209 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":172:17)
#loc210 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":169:21)
#loc211 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":169:37)
#loc212 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":170:17)
#loc213 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":171:21)
#loc214 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":173:24)
#loc215 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":173:25)
#loc216 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":173:34)
#loc217 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":173:37)
#loc218 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":173:51)
#loc219 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":173:17)
#loc220 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":173:52)
#loc221 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":174:38)
#loc222 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":174:17)
#loc223 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":175:43)
#loc224 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":175:17)
#loc225 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":176:42)
#loc226 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":176:36)
#loc227 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":176:17)
#loc228 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":176:50)
#loc229 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":177:17)
#loc230 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":180:17)
#loc231 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":177:26)
#loc232 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":177:58)
#loc233 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":177:59)
#loc234 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":177:68)
#loc235 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":177:82)
#loc236 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":177:21)
#loc237 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":177:88)
#loc238 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":178:17)
#loc239 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":179:21)
#loc240 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":181:17)
#loc241 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":184:17)
#loc242 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":181:28)
#loc243 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":181:42)
#loc244 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":181:21)
#loc245 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":181:61)
#loc246 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":182:17)
#loc247 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":183:21)
#loc248 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":185:39)
#loc249 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":185:53)
#loc250 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":185:59)
#loc251 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":185:32)
#loc252 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":185:17)
#loc253 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":185:63)
#loc254 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":186:17)
#loc255 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":189:17)
#loc256 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":186:21)
#loc257 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":186:37)
#loc258 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":187:17)
#loc259 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":188:21)
#loc260 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":191:35)
#loc261 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":191:49)
#loc262 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":191:62)
#loc263 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":191:80)
#loc264 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":191:83)
#loc265 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":191:30)
#loc266 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":191:17)
#loc267 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":191:84)
#loc268 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":192:17)
#loc269 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":195:17)
#loc270 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":192:21)
#loc271 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":192:35)
#loc272 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":192:48)
#loc273 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":192:51)
#loc274 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":192:65)
#loc275 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":193:17)
#loc276 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":194:21)
#loc277 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":197:43)
#loc278 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":197:29)
#loc279 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":197:17)
#loc280 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":199:30)
#loc281 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":199:25)
#loc282 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":199:17)
#loc283 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":199:41)
#loc284 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":201:20)
#loc285 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":202:13)
#loc286 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":205:13)
#loc287 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":202:17)
#loc288 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":202:33)
#loc289 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":203:13)
#loc290 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":204:30)
#loc291 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":204:17)
#loc292 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":206:13)
#loc293 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":209:13)
#loc294 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":206:17)
#loc295 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":206:33)
#loc296 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":207:13)
#loc297 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":208:30)
#loc298 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":208:17)
#loc299 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":217:9)
#loc300 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":219:5)
#loc301 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":233:5)
#loc302 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":219:11)
#loc303 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":220:5)
#loc304 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":221:9)
#loc305 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":231:9)
#loc306 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":222:13)
#loc307 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":222:24)
#loc308 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":224:13)
#loc309 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":230:13)
#loc310 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":224:17)
#loc311 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":224:25)
#loc312 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":224:27)
#loc313 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":224:30)
#loc314 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":224:39)
#loc315 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":225:13)
#loc316 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":226:17)
#loc317 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":229:17)
#loc318 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":226:26)
#loc319 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":226:22)
#loc320 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":226:29)
#loc321 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":226:41)
#loc322 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":226:31)
#loc323 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":227:17)
#loc324 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":228:31)
#loc325 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":228:21)
#loc326 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":226:49)
#loc327 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":226:48)
#loc328 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":232:9)
#loc329 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":237:1)
#loc330 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":260:1)
#loc331 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":239:5)
#loc332 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":239:9)
#loc333 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":241:14)
#loc334 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":241:13)
#loc335 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":241:5)
#loc336 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":242:5)
#loc337 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":247:5)
#loc338 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":242:11)
#loc339 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":243:5)
#loc340 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":245:17)
#loc341 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":245:9)
#loc342 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":246:9)
#loc343 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":248:5)
#loc344 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":259:5)
#loc345 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":248:11)
#loc346 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":249:5)
#loc347 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":250:9)
#loc348 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":257:9)
#loc349 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":251:13)
#loc350 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":251:24)
#loc351 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":253:13)
#loc352 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":256:13)
#loc353 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":253:22)
#loc354 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":253:18)
#loc355 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":253:25)
#loc356 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":253:37)
#loc357 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":253:27)
#loc358 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":254:13)
#loc359 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":255:27)
#loc360 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":255:17)
#loc361 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":253:45)
#loc362 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":253:44)
#loc363 = loc("CWE400_Resource_Exhaustion__listen_socket_for_loop_16.c":258:9)
#loc364 = loc(fused[#loc1, #loc2])
#loc365 = loc(fused[#loc3, #loc4])
#loc366 = loc(fused[#loc5, #loc6])
#loc367 = loc(fused[#loc7, #loc8])
#loc368 = loc(fused[#loc9, #loc10])
#loc369 = loc(fused[#loc11, #loc12])
#loc370 = loc(fused[#loc13, #loc14])
#loc371 = loc(fused[#loc15, #loc16])
#loc372 = loc(fused[#loc17, #loc18])
#loc373 = loc(fused[#loc20, #loc21])
#loc374 = loc(fused[#loc22, #loc23])
#loc375 = loc(fused[#loc26, #loc24])
#loc376 = loc(fused[#loc27, #loc28])
#loc377 = loc(fused[#loc30, #loc28])
#loc378 = loc(fused[#loc31, #loc32])
#loc379 = loc(fused[#loc33, #loc34])
#loc380 = loc(fused[#loc35, #loc36])
#loc381 = loc(fused[#loc37, #loc38])
#loc382 = loc(fused[#loc39, #loc40])
#loc383 = loc(fused[#loc41, #loc42])
#loc384 = loc(fused[#loc43, #loc44])
#loc385 = loc(fused[#loc45, #loc46])
#loc386 = loc(fused[#loc51, #loc52])
#loc387 = loc(fused[#loc53, #loc54])
#loc388 = loc(fused[#loc55, #loc56])
#loc389 = loc(fused[#loc57, #loc54])
#loc390 = loc(fused[#loc59, #loc60])
#loc391 = loc(fused[#loc62, #loc63])
#loc392 = loc(fused[#loc64, #loc65])
#loc393 = loc(fused[#loc68, #loc66])
#loc394 = loc(fused[#loc72, #loc69])
#loc395 = loc(fused[#loc76, #loc77])
#loc396 = loc(fused[#loc78, #loc79])
#loc397 = loc(fused[#loc81, #loc82])
#loc398 = loc(fused[#loc83, #loc84])
#loc399 = loc(fused[#loc85, #loc86])
#loc400 = loc(fused[#loc87, #loc79])
#loc401 = loc(fused[#loc89, #loc90])
#loc402 = loc(fused[#loc93, #loc94])
#loc403 = loc(fused[#loc95, #loc90])
#loc404 = loc(fused[#loc101, #loc102])
#loc405 = loc(fused[#loc103, #loc104])
#loc406 = loc(fused[#loc105, #loc106])
#loc407 = loc(fused[#loc107, #loc104])
#loc408 = loc(fused[#loc111, #loc112])
#loc409 = loc(fused[#loc115, #loc116])
#loc410 = loc(fused[#loc117, #loc118])
#loc411 = loc(fused[#loc119, #loc120])
#loc412 = loc(fused[#loc122, #loc123])
#loc413 = loc(fused[#loc124, #loc118])
#loc414 = loc(fused[#loc128, #loc126])
#loc415 = loc(fused[#loc131, #loc132])
#loc416 = loc(fused[#loc134, #loc135])
#loc417 = loc(fused[#loc136, #loc137])
#loc418 = loc(fused[#loc138, #loc135])
#loc419 = loc(fused[#loc141, #loc142])
#loc420 = loc(fused[#loc143, #loc144])
#loc421 = loc(fused[#loc145, #loc142])
#loc422 = loc(fused[#loc149, #loc150])
#loc423 = loc(fused[#loc152, #loc150])
#loc424 = loc(fused[#loc153, #loc154])
#loc425 = loc(fused[#loc155, #loc156])
#loc426 = loc(fused[#loc157, #loc158])
#loc427 = loc(fused[#loc160, #loc159])
#loc428 = loc(fused[#loc161, #loc162])
#loc429 = loc(fused[#loc164, #loc158])
#loc430 = loc(fused[#loc167, #loc166])
#loc431 = loc(fused[#loc169, #loc170])
#loc432 = loc(fused[#loc171, #loc172])
#loc433 = loc(fused[#loc173, #loc174])
#loc434 = loc(fused[#loc175, #loc176])
#loc435 = loc(fused[#loc177, #loc178])
#loc436 = loc(fused[#loc181, #loc179])
#loc437 = loc(fused[#loc182, #loc183])
#loc438 = loc(fused[#loc185, #loc183])
#loc439 = loc(fused[#loc186, #loc187])
#loc440 = loc(fused[#loc188, #loc189])
#loc441 = loc(fused[#loc190, #loc191])
#loc442 = loc(fused[#loc192, #loc193])
#loc443 = loc(fused[#loc194, #loc195])
#loc444 = loc(fused[#loc196, #loc197])
#loc445 = loc(fused[#loc198, #loc199])
#loc446 = loc(fused[#loc200, #loc201])
#loc447 = loc(fused[#loc206, #loc207])
#loc448 = loc(fused[#loc208, #loc209])
#loc449 = loc(fused[#loc210, #loc211])
#loc450 = loc(fused[#loc212, #loc209])
#loc451 = loc(fused[#loc214, #loc215])
#loc452 = loc(fused[#loc217, #loc218])
#loc453 = loc(fused[#loc219, #loc220])
#loc454 = loc(fused[#loc222, #loc221])
#loc455 = loc(fused[#loc224, #loc223])
#loc456 = loc(fused[#loc227, #loc228])
#loc457 = loc(fused[#loc229, #loc230])
#loc458 = loc(fused[#loc232, #loc233])
#loc459 = loc(fused[#loc234, #loc235])
#loc460 = loc(fused[#loc236, #loc237])
#loc461 = loc(fused[#loc238, #loc230])
#loc462 = loc(fused[#loc240, #loc241])
#loc463 = loc(fused[#loc244, #loc245])
#loc464 = loc(fused[#loc246, #loc241])
#loc465 = loc(fused[#loc252, #loc253])
#loc466 = loc(fused[#loc254, #loc255])
#loc467 = loc(fused[#loc256, #loc257])
#loc468 = loc(fused[#loc258, #loc255])
#loc469 = loc(fused[#loc262, #loc263])
#loc470 = loc(fused[#loc266, #loc267])
#loc471 = loc(fused[#loc268, #loc269])
#loc472 = loc(fused[#loc270, #loc271])
#loc473 = loc(fused[#loc273, #loc274])
#loc474 = loc(fused[#loc275, #loc269])
#loc475 = loc(fused[#loc279, #loc277])
#loc476 = loc(fused[#loc282, #loc283])
#loc477 = loc(fused[#loc285, #loc286])
#loc478 = loc(fused[#loc287, #loc288])
#loc479 = loc(fused[#loc289, #loc286])
#loc480 = loc(fused[#loc292, #loc293])
#loc481 = loc(fused[#loc294, #loc295])
#loc482 = loc(fused[#loc296, #loc293])
#loc483 = loc(fused[#loc300, #loc301])
#loc484 = loc(fused[#loc303, #loc301])
#loc485 = loc(fused[#loc304, #loc305])
#loc486 = loc(fused[#loc306, #loc307])
#loc487 = loc(fused[#loc308, #loc309])
#loc488 = loc(fused[#loc310, #loc311])
#loc489 = loc(fused[#loc313, #loc314])
#loc490 = loc(fused[#loc315, #loc309])
#loc491 = loc(fused[#loc316, #loc317])
#loc492 = loc(fused[#loc319, #loc318])
#loc493 = loc(fused[#loc320, #loc321])
#loc494 = loc(fused[#loc323, #loc317])
#loc495 = loc(fused[#loc327, #loc326])
#loc496 = loc(fused[#loc329, #loc330])
#loc497 = loc(fused[#loc331, #loc332])
#loc498 = loc(fused[#loc335, #loc333])
#loc499 = loc(fused[#loc336, #loc337])
#loc500 = loc(fused[#loc339, #loc337])
#loc501 = loc(fused[#loc341, #loc340])
#loc502 = loc(fused[#loc343, #loc344])
#loc503 = loc(fused[#loc346, #loc344])
#loc504 = loc(fused[#loc347, #loc348])
#loc505 = loc(fused[#loc349, #loc350])
#loc506 = loc(fused[#loc351, #loc352])
#loc507 = loc(fused[#loc354, #loc353])
#loc508 = loc(fused[#loc355, #loc356])
#loc509 = loc(fused[#loc358, #loc352])
#loc510 = loc(fused[#loc362, #loc361])
