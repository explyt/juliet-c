!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:48)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":197:10)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":197:14)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":197:20)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":197:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc347 = loc(fused[#loc204, #loc205])
#loc348 = loc(fused[#loc206, #loc207])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc266)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc267)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc268)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc269)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc271)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc272)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc273)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc274)
  cir.func private @close(!s32i) -> !s32i loc(#loc275)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc24)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc277)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc279)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc280)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc281)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc282)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc283)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc284)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc285)
    %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc286)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc287)
    %9 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc288)
    %10 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc289)
    %11 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc267)
    cir.store %8, %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc288)
    cir.store %8, %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc289)
    %12 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc267)
    cir.copy %12 to %11 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc267)
    %13 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
    cir.br ^bb1 loc(#loc291)
  ^bb1:  // pred: ^bb0
    %14 = cir.load deref %9 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %15, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
    cir.br ^bb2 loc(#loc292)
  ^bb2:  // pred: ^bb1
    %16 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc38)
    cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
    cir.store %20, %5 : !u64i, !cir.ptr<!u64i> loc(#loc284)
    cir.br ^bb3 loc(#loc293)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc293)
  ^bb4:  // pred: ^bb33
    %21 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc62)
    cir.brcond %22 ^bb5, ^bb34 loc(#loc62)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    %23 = cir.const #cir.int<2> : !s32i loc(#loc63)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %25 = cir.const #cir.int<6> : !s32i loc(#loc65)
    %26 = cir.call @socket(%23, %24, %25) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc66)
    cir.store %26, %4 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb6 loc(#loc295)
  ^bb6:  // pred: ^bb5
    %27 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc72)
    %30 = cir.cmp(eq, %27, %29) : !s32i, !cir.bool loc(#loc296)
    cir.brcond %30 ^bb7, ^bb8 loc(#loc297)
  ^bb7:  // pred: ^bb6
    cir.br ^bb34 loc(#loc74)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc70)
  ^bb9:  // pred: ^bb8
    %31 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc298)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %33 = cir.const #cir.int<16> : !u64i loc(#loc299)
    cir.libc.memset %33 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc300)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc82)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc82)
    %36 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc301)
    %37 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
    %39 = cir.call @inet_addr(%38) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc85)
    %40 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc86)
    %41 = cir.get_member %40[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc87)
    cir.store %39, %41 : !u32i, !cir.ptr<!u32i> loc(#loc302)
    %42 = cir.const #cir.int<27015> : !s32i loc(#loc90)
    %43 = cir.cast(integral, %42 : !s32i), !u16i loc(#loc90)
    %44 = cir.call @htons(%43) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc91)
    %45 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
    cir.store %44, %45 : !u16i, !cir.ptr<!u16i> loc(#loc303)
    cir.br ^bb10 loc(#loc304)
  ^bb10:  // pred: ^bb9
    %46 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %47 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc305)
    %48 = cir.const #cir.int<16> : !u64i loc(#loc306)
    %49 = cir.cast(integral, %48 : !u64i), !u32i loc(#loc306)
    %50 = cir.call @connect(%46, %47, %49) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc102)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc103)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc307)
    cir.brcond %53 ^bb11, ^bb12 loc(#loc308)
  ^bb11:  // pred: ^bb10
    cir.br ^bb34 loc(#loc105)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc96)
  ^bb13:  // pred: ^bb12
    %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %56 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %56 : !u64i), !cir.ptr<!s8i> loc(#loc109)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc309)
    %59 = cir.const #cir.int<1> : !u64i loc(#loc310)
    %60 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc114)
    %62 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %63 = cir.binop(sub, %61, %62) : !u64i loc(#loc311)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc116)
    %66 = cir.binop(sub, %63, %65) : !u64i loc(#loc312)
    %67 = cir.binop(mul, %59, %66) : !u64i loc(#loc313)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %69 = cir.call @recv(%54, %58, %67, %68) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc119)
    %70 = cir.cast(integral, %69 : !s64i), !s32i loc(#loc119)
    cir.store %70, %1 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    cir.br ^bb14 loc(#loc315)
  ^bb14:  // pred: ^bb13
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc125)
    %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc316)
    cir.brcond %74 ^bb15, ^bb16 loc(#loc126)
  ^bb15:  // pred: ^bb14
    %75 = cir.const #true loc(#loc126)
    cir.br ^bb21(%75 : !cir.bool) loc(#loc126)
  ^bb16:  // pred: ^bb14
    %76 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %77 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc317)
    cir.brcond %78 ^bb17, ^bb18 loc(#loc126)
  ^bb17:  // pred: ^bb16
    %79 = cir.const #true loc(#loc126)
    cir.br ^bb19(%79 : !cir.bool) loc(#loc126)
  ^bb18:  // pred: ^bb16
    %80 = cir.const #false loc(#loc126)
    cir.br ^bb19(%80 : !cir.bool) loc(#loc126)
  ^bb19(%81: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:48)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc126)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%81 : !cir.bool) loc(#loc126)
  ^bb21(%82: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:48)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc126)
  ^bb22:  // pred: ^bb21
    cir.brcond %82 ^bb23, ^bb24 loc(#loc318)
  ^bb23:  // pred: ^bb22
    cir.br ^bb34 loc(#loc130)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc123)
  ^bb25:  // pred: ^bb24
    %83 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc131)
    %85 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %86 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %87 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %88 = cir.cast(integral, %87 : !s32i), !u64i loc(#loc134)
    %89 = cir.const #cir.int<1> : !u64i loc(#loc319)
    %90 = cir.binop(div, %88, %89) : !u64i loc(#loc320)
    %91 = cir.binop(add, %86, %90) : !u64i loc(#loc321)
    %92 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %91 : !u64i), !cir.ptr<!s8i> loc(#loc137)
    cir.store %84, %92 : !s8i, !cir.ptr<!s8i> loc(#loc322)
    %93 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %94 = cir.const #cir.int<13> : !s32i loc(#loc139)
    %95 = cir.call @strchr(%93, %94) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc140)
    cir.store %95, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
    cir.br ^bb26 loc(#loc324)
  ^bb26:  // pred: ^bb25
    %96 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %97 = cir.cast(ptr_to_bool, %96 : !cir.ptr<!s8i>), !cir.bool loc(#loc145)
    cir.brcond %97 ^bb27, ^bb28 loc(#loc325)
  ^bb27:  // pred: ^bb26
    %98 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %99 = cir.cast(integral, %98 : !s32i), !s8i loc(#loc147)
    %100 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    cir.store %99, %100 : !s8i, !cir.ptr<!s8i> loc(#loc326)
    cir.br ^bb28 loc(#loc144)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc144)
  ^bb29:  // pred: ^bb28
    %101 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %102 = cir.const #cir.int<10> : !s32i loc(#loc151)
    %103 = cir.call @strchr(%101, %102) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc152)
    cir.store %103, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc327)
    cir.br ^bb30 loc(#loc328)
  ^bb30:  // pred: ^bb29
    %104 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %105 = cir.cast(ptr_to_bool, %104 : !cir.ptr<!s8i>), !cir.bool loc(#loc157)
    cir.brcond %105 ^bb31, ^bb32 loc(#loc329)
  ^bb31:  // pred: ^bb30
    %106 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %107 = cir.cast(integral, %106 : !s32i), !s8i loc(#loc159)
    %108 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    cir.store %107, %108 : !s8i, !cir.ptr<!s8i> loc(#loc330)
    cir.br ^bb32 loc(#loc156)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc156)
  ^bb33:  // pred: ^bb32
    cir.br ^bb4 loc(#loc61)
  ^bb34:  // 4 preds: ^bb4, ^bb7, ^bb11, ^bb23
    cir.br ^bb35 loc(#loc61)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc331)
  ^bb36:  // pred: ^bb35
    %109 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %110 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %111 = cir.unary(minus, %110) : !s32i, !s32i loc(#loc165)
    %112 = cir.cmp(ne, %109, %111) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %112 ^bb37, ^bb38 loc(#loc333)
  ^bb37:  // pred: ^bb36
    %113 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %114 = cir.call @close(%113) : (!s32i) -> !s32i loc(#loc168)
    cir.br ^bb38 loc(#loc163)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc163)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc57)
  ^bb40:  // pred: ^bb39
    %115 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %116 = cir.load deref %9 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.store %115, %116 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
    cir.br ^bb41 loc(#loc54)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc335)
  ^bb42:  // pred: ^bb41
    %117 = cir.load deref %10 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    %118 = cir.load %117 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
    cir.store %118, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
    cir.br ^bb43 loc(#loc336)
  ^bb43:  // pred: ^bb42
    %119 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    %120 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc24)
    %121 = cir.cast(array_to_ptrdecay, %120 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc24)
    %122 = cir.call @popen(%119, %121) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc178)
    cir.store %122, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc337)
    cir.br ^bb44 loc(#loc338)
  ^bb44:  // pred: ^bb43
    %123 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc183)
    %124 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc184)
    %125 = cir.cast(bitcast, %124 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc184)
    %126 = cir.cmp(ne, %123, %125) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc339)
    cir.brcond %126 ^bb45, ^bb46 loc(#loc340)
  ^bb45:  // pred: ^bb44
    %127 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc186)
    %128 = cir.call @pclose(%127) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc187)
    cir.br ^bb46 loc(#loc182)
  ^bb46:  // 2 preds: ^bb44, ^bb45
    cir.br ^bb47 loc(#loc182)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc176)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc173)
  ^bb49:  // pred: ^bb48
    cir.return loc(#loc28)
  } loc(#loc278)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc342)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc190)
    cir.return loc(#loc189)
  } loc(#loc341)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc343)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc344)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc345)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc201)
  cir.func @main(%arg0: !s32i loc(fused[#loc204, #loc205]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc206, #loc207])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc347)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc348)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc203)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc208)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc209)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc210)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc210)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc211)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc198)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc198)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc349)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_32_good() : () -> () loc(#loc213)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc199)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc199)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc215)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc200)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc200)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc350)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad() : () -> () loc(#loc217)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc201)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc220)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc351)
    cir.return %17 : !s32i loc(#loc351)
  } loc(#loc346)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc352)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc224)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc354)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc355)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc356)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc357)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc358)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc359)
    %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc266)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc358)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc359)
    %7 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc266)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc266)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc239)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc360)
    cir.br ^bb1 loc(#loc361)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc243)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc354)
    %11 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc244)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc245)
    %13 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc224)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc224)
    %15 = cir.call @strcat(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc244)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
    cir.store %16, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc362)
    cir.br ^bb2 loc(#loc242)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc363)
  ^bb3:  // pred: ^bb2
    %18 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc251)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc355)
    cir.br ^bb4 loc(#loc364)
  ^bb4:  // pred: ^bb3
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc254)
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc255)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc255)
    %23 = cir.call @popen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc256)
    cir.store %23, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc365)
    cir.br ^bb5 loc(#loc366)
  ^bb5:  // pred: ^bb4
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc261)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc262)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc262)
    %27 = cir.cmp(ne, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc367)
    cir.brcond %27 ^bb6, ^bb7 loc(#loc368)
  ^bb6:  // pred: ^bb5
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc264)
    %29 = cir.call @pclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc265)
    cir.br ^bb7 loc(#loc260)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc260)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc253)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc250)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc226)
  } loc(#loc353)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":161:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":161:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":64:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":64:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:53)
#loc12 = loc("/usr/include/netinet/in.h":404:1)
#loc13 = loc("/usr/include/netinet/in.h":405:40)
#loc14 = loc("/usr/include/sys/socket.h":126:1)
#loc15 = loc("/usr/include/sys/socket.h":126:75)
#loc16 = loc("/usr/include/sys/socket.h":145:1)
#loc17 = loc("/usr/include/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":246:1)
#loc19 = loc("/usr/include/string.h":247:33)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/stdio.h":893:1)
#loc23 = loc("/usr/include/stdio.h":894:3)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:32)
#loc25 = loc("/usr/include/stdio.h":887:1)
#loc26 = loc("/usr/include/stdio.h":887:36)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":59:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":149:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":67:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":67:24)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":73:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":73:17)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":74:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":74:32)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":75:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":75:19)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":76:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":76:36)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:41)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":138:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":138:24)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":140:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":140:19)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":61:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":61:12)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":62:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":62:25)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":63:5)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":63:25)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":65:12)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":65:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":66:5)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":136:5)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":67:23)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":68:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":134:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:30)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:37)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":78:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":123:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":123:20)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:40)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:49)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:62)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:33)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:73)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":89:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":92:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":89:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":89:38)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":90:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":91:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:24)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:25)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:34)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:37)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:51)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:52)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":94:38)
#loc83 = loc("/usr/include/netinet/in.h":249:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":94:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:43)
#loc86 = loc("/usr/include/netinet/in.h":251:20)
#loc87 = loc("/usr/include/netinet/in.h":33:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:63)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:42)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:36)
#loc92 = loc("/usr/include/netinet/in.h":250:15)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:50)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":100:17)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:29)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:62)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:63)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:72)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:86)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:21)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:92)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":98:17)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":99:21)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:35)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:59)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:66)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:64)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:50)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:73)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:76)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:87)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:92)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:98)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:108)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:109)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:112)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:30)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:113)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:17)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":108:17)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:21)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:35)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:51)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:65)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":106:17)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":107:21)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:61)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:17)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:22)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:32)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:45)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:56)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:57)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:34)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:40)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:27)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:44)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":113:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":116:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":113:21)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":114:17)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":115:32)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":115:22)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":115:21)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:34)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:40)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:27)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:17)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:44)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":118:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":121:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":118:21)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":119:17)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":120:32)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":120:22)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":120:21)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":124:13)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":127:13)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":124:17)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":124:34)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":125:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":126:30)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":126:17)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":135:21)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":135:10)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":135:9)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":137:5)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":148:5)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":138:23)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":139:9)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":147:9)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:26)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:20)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:13)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:35)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":143:13)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":146:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":143:17)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":143:25)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":144:13)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":145:24)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":145:17)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":183:1)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":186:1)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":185:5)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":185:13)
#loc192 = loc("/usr/include/stdlib.h":575:1)
#loc193 = loc("/usr/include/stdlib.h":575:41)
#loc194 = loc("/usr/include/time.h":76:1)
#loc195 = loc("/usr/include/time.h":76:38)
#loc196 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc197 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":202:15)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":204:15)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":207:15)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":209:15)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":197:1)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":212:1)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":198:1)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":200:27)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":200:22)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":200:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":202:5)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":203:5)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":203:67)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":204:5)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":207:5)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":208:5)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":208:66)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":209:5)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":211:12)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":211:5)
#loc222 = loc("/usr/include/string.h":149:1)
#loc223 = loc("/usr/include/string.h":150:14)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":166:22)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":156:1)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":181:1)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":164:9)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":164:24)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":170:9)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":170:24)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":172:13)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":172:19)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":158:5)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":158:12)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":159:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":159:25)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":160:5)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":160:25)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":162:12)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":162:5)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":163:5)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":168:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":164:23)
#loc244 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":166:9)
#loc245 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":166:16)
#loc246 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":167:21)
#loc247 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":167:10)
#loc248 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":167:9)
#loc249 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":169:5)
#loc250 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":180:5)
#loc251 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":170:23)
#loc252 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":171:9)
#loc253 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":179:9)
#loc254 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:26)
#loc255 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:32)
#loc256 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:20)
#loc257 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:13)
#loc258 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:35)
#loc259 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":175:13)
#loc260 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":178:13)
#loc261 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":175:17)
#loc262 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":175:25)
#loc263 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":176:13)
#loc264 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":177:24)
#loc265 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":177:17)
#loc266 = loc(fused[#loc1, #loc2])
#loc267 = loc(fused[#loc3, #loc4])
#loc268 = loc(fused[#loc5, #loc6])
#loc269 = loc(fused[#loc7, #loc8])
#loc270 = loc(fused[#loc9, #loc10])
#loc271 = loc(fused[#loc12, #loc13])
#loc272 = loc(fused[#loc14, #loc15])
#loc273 = loc(fused[#loc16, #loc17])
#loc274 = loc(fused[#loc18, #loc19])
#loc275 = loc(fused[#loc20, #loc21])
#loc276 = loc(fused[#loc22, #loc23])
#loc277 = loc(fused[#loc25, #loc26])
#loc278 = loc(fused[#loc27, #loc28])
#loc279 = loc(fused[#loc29, #loc30])
#loc280 = loc(fused[#loc31, #loc32])
#loc281 = loc(fused[#loc33, #loc34])
#loc282 = loc(fused[#loc35, #loc36])
#loc283 = loc(fused[#loc37, #loc38])
#loc284 = loc(fused[#loc39, #loc40])
#loc285 = loc(fused[#loc41, #loc42])
#loc286 = loc(fused[#loc43, #loc44])
#loc287 = loc(fused[#loc45, #loc46])
#loc288 = loc(fused[#loc47, #loc48])
#loc289 = loc(fused[#loc49, #loc50])
#loc290 = loc(fused[#loc52, #loc51])
#loc291 = loc(fused[#loc53, #loc54])
#loc292 = loc(fused[#loc56, #loc57])
#loc293 = loc(fused[#loc60, #loc61])
#loc294 = loc(fused[#loc67, #loc68])
#loc295 = loc(fused[#loc69, #loc70])
#loc296 = loc(fused[#loc71, #loc72])
#loc297 = loc(fused[#loc73, #loc70])
#loc298 = loc(fused[#loc75, #loc76])
#loc299 = loc(fused[#loc78, #loc79])
#loc300 = loc(fused[#loc80, #loc81])
#loc301 = loc(fused[#loc84, #loc82])
#loc302 = loc(fused[#loc88, #loc89])
#loc303 = loc(fused[#loc93, #loc94])
#loc304 = loc(fused[#loc95, #loc96])
#loc305 = loc(fused[#loc98, #loc99])
#loc306 = loc(fused[#loc100, #loc101])
#loc307 = loc(fused[#loc102, #loc103])
#loc308 = loc(fused[#loc104, #loc96])
#loc309 = loc(fused[#loc110, #loc111])
#loc310 = loc(fused[#loc112, #loc113])
#loc311 = loc(fused[#loc114, #loc115])
#loc312 = loc(fused[#loc114, #loc116])
#loc313 = loc(fused[#loc112, #loc117])
#loc314 = loc(fused[#loc120, #loc121])
#loc315 = loc(fused[#loc122, #loc123])
#loc316 = loc(fused[#loc124, #loc125])
#loc317 = loc(fused[#loc127, #loc128])
#loc318 = loc(fused[#loc129, #loc123])
#loc319 = loc(fused[#loc135, #loc136])
#loc320 = loc(fused[#loc134, #loc136])
#loc321 = loc(fused[#loc133, #loc136])
#loc322 = loc(fused[#loc132, #loc131])
#loc323 = loc(fused[#loc141, #loc142])
#loc324 = loc(fused[#loc143, #loc144])
#loc325 = loc(fused[#loc146, #loc144])
#loc326 = loc(fused[#loc149, #loc147])
#loc327 = loc(fused[#loc153, #loc154])
#loc328 = loc(fused[#loc155, #loc156])
#loc329 = loc(fused[#loc158, #loc156])
#loc330 = loc(fused[#loc161, #loc159])
#loc331 = loc(fused[#loc162, #loc163])
#loc332 = loc(fused[#loc164, #loc165])
#loc333 = loc(fused[#loc166, #loc163])
#loc334 = loc(fused[#loc171, #loc169])
#loc335 = loc(fused[#loc172, #loc173])
#loc336 = loc(fused[#loc175, #loc176])
#loc337 = loc(fused[#loc179, #loc180])
#loc338 = loc(fused[#loc181, #loc182])
#loc339 = loc(fused[#loc183, #loc184])
#loc340 = loc(fused[#loc185, #loc182])
#loc341 = loc(fused[#loc188, #loc189])
#loc342 = loc(fused[#loc190, #loc191])
#loc343 = loc(fused[#loc192, #loc193])
#loc344 = loc(fused[#loc194, #loc195])
#loc345 = loc(fused[#loc196, #loc197])
#loc346 = loc(fused[#loc202, #loc203])
#loc349 = loc(fused[#loc213, #loc214])
#loc350 = loc(fused[#loc217, #loc218])
#loc351 = loc(fused[#loc221, #loc220])
#loc352 = loc(fused[#loc222, #loc223])
#loc353 = loc(fused[#loc225, #loc226])
#loc354 = loc(fused[#loc227, #loc228])
#loc355 = loc(fused[#loc229, #loc230])
#loc356 = loc(fused[#loc231, #loc232])
#loc357 = loc(fused[#loc233, #loc234])
#loc358 = loc(fused[#loc235, #loc236])
#loc359 = loc(fused[#loc237, #loc238])
#loc360 = loc(fused[#loc240, #loc239])
#loc361 = loc(fused[#loc241, #loc242])
#loc362 = loc(fused[#loc248, #loc246])
#loc363 = loc(fused[#loc249, #loc250])
#loc364 = loc(fused[#loc252, #loc253])
#loc365 = loc(fused[#loc257, #loc258])
#loc366 = loc(fused[#loc259, #loc260])
#loc367 = loc(fused[#loc261, #loc262])
#loc368 = loc(fused[#loc263, #loc260])
