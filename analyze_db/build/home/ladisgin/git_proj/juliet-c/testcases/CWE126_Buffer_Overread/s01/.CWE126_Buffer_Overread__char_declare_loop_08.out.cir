!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc98 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":157:10)
#loc99 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":157:14)
#loc100 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":157:20)
#loc101 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":157:32)
#loc316 = loc(fused[#loc98, #loc99])
#loc317 = loc(fused[#loc100, #loc101])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_loop_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc282)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc283)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_loop_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc285)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc286)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc287)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc15)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc288)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc19)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc20)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc20)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc22)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc289)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc24)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc25)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc25)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc290)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc29)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc30)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc291)
    cir.scope {
      %31 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc293)
      %32 = cir.call %31() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc35)
      %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc35)
      cir.if %33 {
        %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc38)
        cir.store %34, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
      } loc(#loc294)
    } loc(#loc292)
    cir.scope {
      %31 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc297)
      %32 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc298)
      %33 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc299)
      %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
      %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
      %36 = cir.const #cir.int<67> : !s32i loc(#loc48)
      %37 = cir.const #cir.int<100> : !s32i loc(#loc49)
      %38 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc49)
      %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc49)
      cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc300)
      %41 = cir.const #cir.int<0> : !s32i loc(#loc53)
      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc53)
      %43 = cir.const #cir.int<100> : !s32i loc(#loc54)
      %44 = cir.const #cir.int<1> : !s32i loc(#loc55)
      %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc54)
      %46 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
      %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc56)
      cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc301)
      %48 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
      %49 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %50 = cir.call @strlen(%49) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc57)
      cir.store %50, %32 : !u64i, !cir.ptr<!u64i> loc(#loc302)
      cir.scope {
        %59 = cir.const #cir.int<0> : !s32i loc(#loc63)
        %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc63)
        cir.store %60, %31 : !u64i, !cir.ptr<!u64i> loc(#loc304)
        cir.for : cond {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc65)
          %62 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc66)
          %63 = cir.cmp(lt, %61, %62) : !u64i, !cir.bool loc(#loc305)
          cir.condition(%63) loc(#loc67)
        } body {
          cir.scope {
            %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
            %62 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc70)
            %63 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc71)
            %64 = cir.load %63 : !cir.ptr<!s8i>, !s8i loc(#loc69)
            %65 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc72)
            %66 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
            %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc73)
            cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc307)
          } loc(#loc306)
          cir.yield loc(#loc62)
        } step {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc74)
          %62 = cir.unary(inc, %61) : !u64i, !u64i loc(#loc75)
          cir.store %62, %31 : !u64i, !cir.ptr<!u64i> loc(#loc308)
          cir.yield loc(#loc303)
        } loc(#loc303)
      } loc(#loc303)
      %51 = cir.const #cir.int<0> : !s32i loc(#loc76)
      %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc76)
      %53 = cir.const #cir.int<100> : !s32i loc(#loc77)
      %54 = cir.const #cir.int<1> : !s32i loc(#loc78)
      %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc77)
      %56 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
      %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc79)
      cir.store %52, %57 : !s8i, !cir.ptr<!s8i> loc(#loc309)
      %58 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
      cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    } loc(#loc296)
    cir.return loc(#loc6)
  } loc(#loc284)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_loop_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc311)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc312)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    cir.return loc(#loc83)
  } loc(#loc310)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc313)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc314)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc95)
  cir.func @main(%arg0: !s32i loc(fused[#loc98, #loc99]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc100, #loc101])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc316)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc317)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc97)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc102)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc103)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc104)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc104)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc105)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc92)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_declare_loop_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc318)
    cir.call @CWE126_Buffer_Overread__char_declare_loop_08_good() : () -> () loc(#loc107)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc93)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc94)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_declare_loop_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc319)
    cir.call @CWE126_Buffer_Overread__char_declare_loop_08_bad() : () -> () loc(#loc111)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc95)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc114)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc320)
    cir.return %17 : !s32i loc(#loc320)
  } loc(#loc315)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc117)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc118)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc322)
    cir.return %2 : !s32i loc(#loc322)
  } loc(#loc321)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc120)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc324)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc325)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc326)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc129)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc129)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc130)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc131)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc131)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc131)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc327)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc135)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc136)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc136)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc138)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc328)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc140)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc141)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc141)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc141)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc329)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc145)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc146)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc146)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc148)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc330)
    cir.scope {
      %31 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc332)
      %32 = cir.call %31() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc151)
      %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc151)
      cir.if %33 {
        %34 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc120)
        %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc120)
        cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc156)
      } else {
        %34 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
        cir.store %34, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
      } loc(#loc333)
    } loc(#loc331)
    cir.scope {
      %31 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc336)
      %32 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc337)
      %33 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc338)
      %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
      %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc166)
      %36 = cir.const #cir.int<67> : !s32i loc(#loc167)
      %37 = cir.const #cir.int<100> : !s32i loc(#loc168)
      %38 = cir.const #cir.int<1> : !s32i loc(#loc169)
      %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc168)
      %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc168)
      cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc339)
      %41 = cir.const #cir.int<0> : !s32i loc(#loc172)
      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc172)
      %43 = cir.const #cir.int<100> : !s32i loc(#loc173)
      %44 = cir.const #cir.int<1> : !s32i loc(#loc174)
      %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc173)
      %46 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
      %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc175)
      cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc340)
      %48 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc176)
      %49 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
      %50 = cir.call @strlen(%49) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc176)
      cir.store %50, %32 : !u64i, !cir.ptr<!u64i> loc(#loc341)
      cir.scope {
        %59 = cir.const #cir.int<0> : !s32i loc(#loc182)
        %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc182)
        cir.store %60, %31 : !u64i, !cir.ptr<!u64i> loc(#loc343)
        cir.for : cond {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc184)
          %62 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc185)
          %63 = cir.cmp(lt, %61, %62) : !u64i, !cir.bool loc(#loc344)
          cir.condition(%63) loc(#loc186)
        } body {
          cir.scope {
            %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
            %62 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc189)
            %63 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc190)
            %64 = cir.load %63 : !cir.ptr<!s8i>, !s8i loc(#loc188)
            %65 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc191)
            %66 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc192)
            %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc192)
            cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc346)
          } loc(#loc345)
          cir.yield loc(#loc181)
        } step {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc193)
          %62 = cir.unary(inc, %61) : !u64i, !u64i loc(#loc194)
          cir.store %62, %31 : !u64i, !cir.ptr<!u64i> loc(#loc347)
          cir.yield loc(#loc342)
        } loc(#loc342)
      } loc(#loc342)
      %51 = cir.const #cir.int<0> : !s32i loc(#loc195)
      %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc195)
      %53 = cir.const #cir.int<100> : !s32i loc(#loc196)
      %54 = cir.const #cir.int<1> : !s32i loc(#loc197)
      %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc196)
      %56 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc198)
      %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc198)
      cir.store %52, %57 : !s8i, !cir.ptr<!s8i> loc(#loc348)
      %58 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc199)
      cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    } loc(#loc335)
    cir.return loc(#loc122)
  } loc(#loc323)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc202)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc203)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc350)
    cir.return %2 : !s32i loc(#loc350)
  } loc(#loc349)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc352)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc353)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc354)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc213)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc213)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc214)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc215)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc216)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc215)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc215)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc355)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc219)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc219)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc220)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc220)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc222)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc222)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc356)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc223)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc223)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc224)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc225)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc226)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc225)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc225)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc357)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc229)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc229)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc230)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc231)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc230)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc232)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc232)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc358)
    cir.scope {
      %31 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc360)
      %32 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc235)
      %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc235)
      cir.if %33 {
        %34 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc238)
        cir.store %34, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc362)
      } loc(#loc361)
    } loc(#loc359)
    cir.scope {
      %31 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc364)
      %32 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc365)
      %33 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc366)
      %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc247)
      %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc247)
      %36 = cir.const #cir.int<67> : !s32i loc(#loc248)
      %37 = cir.const #cir.int<100> : !s32i loc(#loc249)
      %38 = cir.const #cir.int<1> : !s32i loc(#loc250)
      %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc249)
      %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc249)
      cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc367)
      %41 = cir.const #cir.int<0> : !s32i loc(#loc253)
      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc253)
      %43 = cir.const #cir.int<100> : !s32i loc(#loc254)
      %44 = cir.const #cir.int<1> : !s32i loc(#loc255)
      %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc254)
      %46 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc256)
      %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc256)
      cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc368)
      %48 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc257)
      %49 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc258)
      %50 = cir.call @strlen(%49) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc257)
      cir.store %50, %32 : !u64i, !cir.ptr<!u64i> loc(#loc369)
      cir.scope {
        %59 = cir.const #cir.int<0> : !s32i loc(#loc263)
        %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc263)
        cir.store %60, %31 : !u64i, !cir.ptr<!u64i> loc(#loc371)
        cir.for : cond {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc265)
          %62 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc266)
          %63 = cir.cmp(lt, %61, %62) : !u64i, !cir.bool loc(#loc372)
          cir.condition(%63) loc(#loc267)
        } body {
          cir.scope {
            %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
            %62 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc270)
            %63 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc271)
            %64 = cir.load %63 : !cir.ptr<!s8i>, !s8i loc(#loc269)
            %65 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc272)
            %66 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc273)
            %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc273)
            cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc374)
          } loc(#loc373)
          cir.yield loc(#loc262)
        } step {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc274)
          %62 = cir.unary(inc, %61) : !u64i, !u64i loc(#loc275)
          cir.store %62, %31 : !u64i, !cir.ptr<!u64i> loc(#loc375)
          cir.yield loc(#loc370)
        } loc(#loc370)
      } loc(#loc370)
      %51 = cir.const #cir.int<0> : !s32i loc(#loc276)
      %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc276)
      %53 = cir.const #cir.int<100> : !s32i loc(#loc277)
      %54 = cir.const #cir.int<1> : !s32i loc(#loc278)
      %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc277)
      %56 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc279)
      %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc279)
      cir.store %52, %57 : !s8i, !cir.ptr<!s8i> loc(#loc376)
      %58 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc280)
      cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc281)
    } loc(#loc363)
    cir.return loc(#loc206)
  } loc(#loc351)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_loop_08.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":37:1)
#loc6 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":66:1)
#loc7 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":39:5)
#loc8 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":39:12)
#loc9 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":40:5)
#loc10 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":40:26)
#loc11 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":41:5)
#loc12 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":41:28)
#loc13 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":42:12)
#loc14 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":42:27)
#loc15 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":42:32)
#loc16 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":42:35)
#loc17 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":42:5)
#loc18 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":42:36)
#loc19 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":43:27)
#loc20 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":43:19)
#loc21 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":43:22)
#loc22 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":43:5)
#loc23 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":44:12)
#loc24 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":44:28)
#loc25 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":44:33)
#loc26 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":44:37)
#loc27 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":44:5)
#loc28 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":44:38)
#loc29 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":45:29)
#loc30 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":45:20)
#loc31 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":45:24)
#loc32 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":45:5)
#loc33 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":46:5)
#loc34 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":50:5)
#loc35 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":46:8)
#loc36 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":46:26)
#loc37 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":47:5)
#loc38 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":49:16)
#loc39 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":49:9)
#loc40 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":51:5)
#loc41 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":65:5)
#loc42 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":52:9)
#loc43 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":52:16)
#loc44 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":52:19)
#loc45 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":53:9)
#loc46 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":53:22)
#loc47 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":54:16)
#loc48 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":54:22)
#loc49 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":54:27)
#loc50 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":54:31)
#loc51 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":54:9)
#loc52 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":54:32)
#loc53 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":55:23)
#loc54 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":55:14)
#loc55 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":55:18)
#loc56 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":55:9)
#loc57 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":56:19)
#loc58 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":56:26)
#loc59 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":56:9)
#loc60 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":56:30)
#loc61 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":59:9)
#loc62 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":62:9)
#loc63 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":59:18)
#loc64 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":59:14)
#loc65 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":59:21)
#loc66 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":59:25)
#loc67 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":59:23)
#loc68 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":60:9)
#loc69 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":61:23)
#loc70 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":61:28)
#loc71 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":61:29)
#loc72 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":61:18)
#loc73 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":61:13)
#loc74 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":59:35)
#loc75 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":59:34)
#loc76 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":63:23)
#loc77 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":63:14)
#loc78 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":63:18)
#loc79 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":63:9)
#loc80 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":64:19)
#loc81 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":64:9)
#loc82 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":141:1)
#loc83 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":145:1)
#loc84 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":143:5)
#loc85 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":143:14)
#loc86 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":144:5)
#loc87 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":144:14)
#loc88 = loc("/usr/include/stdlib.h":575:1)
#loc89 = loc("/usr/include/stdlib.h":575:41)
#loc90 = loc("/usr/include/time.h":76:1)
#loc91 = loc("/usr/include/time.h":76:38)
#loc92 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":162:15)
#loc93 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":164:15)
#loc94 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":167:15)
#loc95 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":169:15)
#loc96 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":157:1)
#loc97 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":172:1)
#loc102 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":158:1)
#loc103 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":160:27)
#loc104 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":160:22)
#loc105 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":160:5)
#loc106 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":162:5)
#loc107 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":163:5)
#loc108 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":163:55)
#loc109 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":164:5)
#loc110 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":167:5)
#loc111 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":168:5)
#loc112 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":168:54)
#loc113 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":169:5)
#loc114 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":171:12)
#loc115 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":171:5)
#loc116 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":25:1)
#loc117 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":28:1)
#loc118 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":27:12)
#loc119 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":27:5)
#loc120 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":85:19)
#loc121 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":73:1)
#loc122 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":107:1)
#loc123 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":75:5)
#loc124 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":75:12)
#loc125 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":76:5)
#loc126 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":76:26)
#loc127 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":77:5)
#loc128 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":77:28)
#loc129 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":78:12)
#loc130 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":78:27)
#loc131 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":78:32)
#loc132 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":78:35)
#loc133 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":78:5)
#loc134 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":78:36)
#loc135 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":79:27)
#loc136 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":79:19)
#loc137 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":79:22)
#loc138 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":79:5)
#loc139 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":80:12)
#loc140 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":80:28)
#loc141 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":80:33)
#loc142 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":80:37)
#loc143 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":80:5)
#loc144 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":80:38)
#loc145 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":81:29)
#loc146 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":81:20)
#loc147 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":81:24)
#loc148 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":81:5)
#loc149 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":82:5)
#loc150 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":91:5)
#loc151 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":82:8)
#loc152 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":82:27)
#loc153 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":83:5)
#loc154 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":86:5)
#loc155 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":88:5)
#loc156 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":85:9)
#loc157 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":90:16)
#loc158 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":90:9)
#loc159 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":92:5)
#loc160 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":106:5)
#loc161 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":93:9)
#loc162 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":93:16)
#loc163 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":93:19)
#loc164 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":94:9)
#loc165 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":94:22)
#loc166 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":95:16)
#loc167 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":95:22)
#loc168 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":95:27)
#loc169 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":95:31)
#loc170 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":95:9)
#loc171 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":95:32)
#loc172 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":96:23)
#loc173 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":96:14)
#loc174 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":96:18)
#loc175 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":96:9)
#loc176 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":97:19)
#loc177 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":97:26)
#loc178 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":97:9)
#loc179 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":97:30)
#loc180 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":100:9)
#loc181 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":103:9)
#loc182 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":100:18)
#loc183 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":100:14)
#loc184 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":100:21)
#loc185 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":100:25)
#loc186 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":100:23)
#loc187 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":101:9)
#loc188 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":102:23)
#loc189 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":102:28)
#loc190 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":102:29)
#loc191 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":102:18)
#loc192 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":102:13)
#loc193 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":100:35)
#loc194 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":100:34)
#loc195 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":104:23)
#loc196 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":104:14)
#loc197 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":104:18)
#loc198 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":104:9)
#loc199 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":105:19)
#loc200 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":105:9)
#loc201 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":30:1)
#loc202 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":33:1)
#loc203 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":32:12)
#loc204 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":32:5)
#loc205 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":110:1)
#loc206 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":139:1)
#loc207 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":112:5)
#loc208 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":112:12)
#loc209 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":113:5)
#loc210 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":113:26)
#loc211 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":114:5)
#loc212 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":114:28)
#loc213 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":115:12)
#loc214 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":115:27)
#loc215 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":115:32)
#loc216 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":115:35)
#loc217 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":115:5)
#loc218 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":115:36)
#loc219 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":116:27)
#loc220 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":116:19)
#loc221 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":116:22)
#loc222 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":116:5)
#loc223 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":117:12)
#loc224 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":117:28)
#loc225 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":117:33)
#loc226 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":117:37)
#loc227 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":117:5)
#loc228 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":117:38)
#loc229 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":118:29)
#loc230 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":118:20)
#loc231 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":118:24)
#loc232 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":118:5)
#loc233 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":119:5)
#loc234 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":123:5)
#loc235 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":119:8)
#loc236 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":119:26)
#loc237 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":120:5)
#loc238 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":122:16)
#loc239 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":122:9)
#loc240 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":124:5)
#loc241 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":138:5)
#loc242 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":125:9)
#loc243 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":125:16)
#loc244 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":125:19)
#loc245 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":126:9)
#loc246 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":126:22)
#loc247 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":127:16)
#loc248 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":127:22)
#loc249 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":127:27)
#loc250 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":127:31)
#loc251 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":127:9)
#loc252 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":127:32)
#loc253 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":128:23)
#loc254 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":128:14)
#loc255 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":128:18)
#loc256 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":128:9)
#loc257 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":129:19)
#loc258 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":129:26)
#loc259 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":129:9)
#loc260 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":129:30)
#loc261 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":132:9)
#loc262 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":135:9)
#loc263 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":132:18)
#loc264 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":132:14)
#loc265 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":132:21)
#loc266 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":132:25)
#loc267 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":132:23)
#loc268 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":133:9)
#loc269 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":134:23)
#loc270 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":134:28)
#loc271 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":134:29)
#loc272 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":134:18)
#loc273 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":134:13)
#loc274 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":132:35)
#loc275 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":132:34)
#loc276 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":136:23)
#loc277 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":136:14)
#loc278 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":136:18)
#loc279 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":136:9)
#loc280 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":137:19)
#loc281 = loc("CWE126_Buffer_Overread__char_declare_loop_08.c":137:9)
#loc282 = loc(fused[#loc1, #loc2])
#loc283 = loc(fused[#loc3, #loc4])
#loc284 = loc(fused[#loc5, #loc6])
#loc285 = loc(fused[#loc7, #loc8])
#loc286 = loc(fused[#loc9, #loc10])
#loc287 = loc(fused[#loc11, #loc12])
#loc288 = loc(fused[#loc17, #loc18])
#loc289 = loc(fused[#loc22, #loc19])
#loc290 = loc(fused[#loc27, #loc28])
#loc291 = loc(fused[#loc32, #loc29])
#loc292 = loc(fused[#loc33, #loc34])
#loc293 = loc(fused[#loc35, #loc36])
#loc294 = loc(fused[#loc37, #loc34])
#loc295 = loc(fused[#loc39, #loc38])
#loc296 = loc(fused[#loc40, #loc41])
#loc297 = loc(fused[#loc42, #loc43])
#loc298 = loc(fused[#loc42, #loc44])
#loc299 = loc(fused[#loc45, #loc46])
#loc300 = loc(fused[#loc51, #loc52])
#loc301 = loc(fused[#loc56, #loc53])
#loc302 = loc(fused[#loc59, #loc60])
#loc303 = loc(fused[#loc61, #loc62])
#loc304 = loc(fused[#loc64, #loc63])
#loc305 = loc(fused[#loc65, #loc66])
#loc306 = loc(fused[#loc68, #loc62])
#loc307 = loc(fused[#loc73, #loc71])
#loc308 = loc(fused[#loc75, #loc74])
#loc309 = loc(fused[#loc79, #loc76])
#loc310 = loc(fused[#loc82, #loc83])
#loc311 = loc(fused[#loc84, #loc85])
#loc312 = loc(fused[#loc86, #loc87])
#loc313 = loc(fused[#loc88, #loc89])
#loc314 = loc(fused[#loc90, #loc91])
#loc315 = loc(fused[#loc96, #loc97])
#loc318 = loc(fused[#loc107, #loc108])
#loc319 = loc(fused[#loc111, #loc112])
#loc320 = loc(fused[#loc115, #loc114])
#loc321 = loc(fused[#loc116, #loc117])
#loc322 = loc(fused[#loc119, #loc118])
#loc323 = loc(fused[#loc121, #loc122])
#loc324 = loc(fused[#loc123, #loc124])
#loc325 = loc(fused[#loc125, #loc126])
#loc326 = loc(fused[#loc127, #loc128])
#loc327 = loc(fused[#loc133, #loc134])
#loc328 = loc(fused[#loc138, #loc135])
#loc329 = loc(fused[#loc143, #loc144])
#loc330 = loc(fused[#loc148, #loc145])
#loc331 = loc(fused[#loc149, #loc150])
#loc332 = loc(fused[#loc151, #loc152])
#loc333 = loc(fused[#loc153, #loc154, #loc155, #loc150])
#loc334 = loc(fused[#loc158, #loc157])
#loc335 = loc(fused[#loc159, #loc160])
#loc336 = loc(fused[#loc161, #loc162])
#loc337 = loc(fused[#loc161, #loc163])
#loc338 = loc(fused[#loc164, #loc165])
#loc339 = loc(fused[#loc170, #loc171])
#loc340 = loc(fused[#loc175, #loc172])
#loc341 = loc(fused[#loc178, #loc179])
#loc342 = loc(fused[#loc180, #loc181])
#loc343 = loc(fused[#loc183, #loc182])
#loc344 = loc(fused[#loc184, #loc185])
#loc345 = loc(fused[#loc187, #loc181])
#loc346 = loc(fused[#loc192, #loc190])
#loc347 = loc(fused[#loc194, #loc193])
#loc348 = loc(fused[#loc198, #loc195])
#loc349 = loc(fused[#loc201, #loc202])
#loc350 = loc(fused[#loc204, #loc203])
#loc351 = loc(fused[#loc205, #loc206])
#loc352 = loc(fused[#loc207, #loc208])
#loc353 = loc(fused[#loc209, #loc210])
#loc354 = loc(fused[#loc211, #loc212])
#loc355 = loc(fused[#loc217, #loc218])
#loc356 = loc(fused[#loc222, #loc219])
#loc357 = loc(fused[#loc227, #loc228])
#loc358 = loc(fused[#loc232, #loc229])
#loc359 = loc(fused[#loc233, #loc234])
#loc360 = loc(fused[#loc235, #loc236])
#loc361 = loc(fused[#loc237, #loc234])
#loc362 = loc(fused[#loc239, #loc238])
#loc363 = loc(fused[#loc240, #loc241])
#loc364 = loc(fused[#loc242, #loc243])
#loc365 = loc(fused[#loc242, #loc244])
#loc366 = loc(fused[#loc245, #loc246])
#loc367 = loc(fused[#loc251, #loc252])
#loc368 = loc(fused[#loc256, #loc253])
#loc369 = loc(fused[#loc259, #loc260])
#loc370 = loc(fused[#loc261, #loc262])
#loc371 = loc(fused[#loc264, #loc263])
#loc372 = loc(fused[#loc265, #loc266])
#loc373 = loc(fused[#loc268, #loc262])
#loc374 = loc(fused[#loc273, #loc271])
#loc375 = loc(fused[#loc275, #loc274])
#loc376 = loc(fused[#loc279, #loc276])
